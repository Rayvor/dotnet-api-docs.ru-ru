<Type Name="EqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.EqualityComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a56eee15bc964137a9a6cb371f79d3d4c0e8283" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75151969" /></Metadata><TypeSignature Language="C#" Value="public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EqualityComparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.EqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EqualityComparer(Of T)&#xA;Implements IEqualityComparer, IEqualityComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EqualityComparer abstract : System::Collections::Generic::IEqualityComparer&lt;T&gt;, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type EqualityComparer&lt;'T&gt; = class&#xA;    interface IEqualityComparer&#xA;    interface IEqualityComparer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="7355f-101">Тип объектов для сравнения.</span><span class="sxs-lookup"><span data-stu-id="7355f-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="7355f-102">Представляет базовый класс для реализаций универсального интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7355f-103">Используйте класс, производный от этого класса, чтобы предоставить пользовательскую реализацию <xref:System.Collections.Generic.IEqualityComparer%601> универсального интерфейса для использования с классами коллекций, такими как <xref:System.Collections.Generic.Dictionary%602> универсальный класс, или с такими методами, как <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7355f-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7355f-104">Свойство <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> проверяет, реализует ли тип `T` <xref:System.IEquatable%601?displayProperty=nameWithType> универсальный интерфейс, и, если это так, возвращает <xref:System.Collections.Generic.EqualityComparer%601>, вызывающий реализацию метода <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7355f-104">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7355f-105">В противном случае возвращается <xref:System.Collections.Generic.EqualityComparer%601>, предоставляемый `T`.</span><span class="sxs-lookup"><span data-stu-id="7355f-105">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.</span></span>  
  
 <span data-ttu-id="7355f-106">Рекомендуется наследовать от класса <xref:System.Collections.Generic.EqualityComparer%601>, а не реализовывать интерфейс <xref:System.Collections.Generic.IEqualityComparer%601>, так как класс <xref:System.Collections.Generic.EqualityComparer%601> проверяет равенство с помощью метода <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType>, а не метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7355f-106">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7355f-107">Это согласуется с методами `Contains`, `IndexOf`, `LastIndexOf`и `Remove` класса <xref:System.Collections.Generic.Dictionary%602> и другими универсальными коллекциями.</span><span class="sxs-lookup"><span data-stu-id="7355f-107">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7355f-108">В следующем примере создается коллекция Dictionary объектов типа `Box` с компаратором равенства.</span><span class="sxs-lookup"><span data-stu-id="7355f-108">The following example creates a dictionary collection of objects of type `Box` with an equality comparer.</span></span> <span data-ttu-id="7355f-109">Два поля считаются равными, если их измерения одинаковы.</span><span class="sxs-lookup"><span data-stu-id="7355f-109">Two boxes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="7355f-110">Затем он добавляет поля в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="7355f-110">It then adds the boxes to the collection.</span></span>  
  
 <span data-ttu-id="7355f-111">Словарь повторно создается с компаратором равенства, который определяет равенство по-другому: два поля считаются равными, если их тома одинаковы.</span><span class="sxs-lookup"><span data-stu-id="7355f-111">The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7355f-112">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.EqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.EqualityComparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.EqualityComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As EqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::EqualityComparer&lt;T&gt; ^ Default { System::Collections::Generic::EqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.EqualityComparer&lt;'T&gt;" Usage="System.Collections.Generic.EqualityComparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.EqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7355f-113">Возвращает компаратор для типа, указанного универсальным аргументом.</span><span class="sxs-lookup"><span data-stu-id="7355f-113">Returns a default equality comparer for the type specified by the generic argument.</span></span></summary>
        <value><span data-ttu-id="7355f-114">Экземпляр по умолчанию класса <see cref="T:System.Collections.Generic.EqualityComparer`1" /> для типа <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-114">The default instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class for type <typeparamref name="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7355f-115">Свойство <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> проверяет, реализует ли тип `T` интерфейс <xref:System.IEquatable%601?displayProperty=nameWithType>, и, если это так, возвращает <xref:System.Collections.Generic.EqualityComparer%601>, который использует эту реализацию.</span><span class="sxs-lookup"><span data-stu-id="7355f-115">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation.</span></span> <span data-ttu-id="7355f-116">В противном случае возвращается <xref:System.Collections.Generic.EqualityComparer%601>, использующий переопределения <xref:System.Object.Equals%2A?displayProperty=nameWithType> и <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>, предоставляемые `T`.</span><span class="sxs-lookup"><span data-stu-id="7355f-116">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=nameWithType> and <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> provided by `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7355f-117">В следующем примере создается коллекция, содержащая элементы типа `Box`, а затем выполняется поиск в поле, совпадающем с другим полем, с помощью вызова метода `FindFirst` дважды.</span><span class="sxs-lookup"><span data-stu-id="7355f-117">The following example creates a collection that contains elements of the `Box` type and then searches it for a box matching another box by calling the `FindFirst` method, twice.</span></span>
  
 <span data-ttu-id="7355f-118">В первом поиске не указывается компаратор проверки на равенство, что означает, `FindFirst` использует <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> для определения равенства полей.</span><span class="sxs-lookup"><span data-stu-id="7355f-118">The first search does not specify any equality comparer, which means `FindFirst` uses <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> to determine equality of boxes.</span></span> <span data-ttu-id="7355f-119">Это, в свою очередь, использует реализацию метода <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> в классе `Box`.</span><span class="sxs-lookup"><span data-stu-id="7355f-119">That in turn uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method in the `Box` class.</span></span> <span data-ttu-id="7355f-120">Два поля считаются равными, если их измерения одинаковы.</span><span class="sxs-lookup"><span data-stu-id="7355f-120">Two boxes are considered equal if their dimensions are the same.</span></span>
  
 <span data-ttu-id="7355f-121">Второй Поиск указывает компаратор проверки на равенство (`BoxEqVolume`), который определяет равенство по тому.</span><span class="sxs-lookup"><span data-stu-id="7355f-121">The second search specifies an equality comparer (`BoxEqVolume`) that defines equality by volume.</span></span> <span data-ttu-id="7355f-122">Два поля считаются равными, если их тома одинаковы.</span><span class="sxs-lookup"><span data-stu-id="7355f-122">Two boxes are considered equal if their volumes are the same.</span></span>
  
 [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs)]
 [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="T:System.IEquatable`1" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(T x, T y);" />
      <MemberSignature Language="F#" Value="override this.Equals : 'T * 'T -&gt; bool" Usage="equalityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="7355f-123">Первый из сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="7355f-123">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="7355f-124">Второй из сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="7355f-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7355f-125">При переопределении в производном классе определяет, равны ли два объекта типа <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-125">When overridden in a derived class, determines whether two objects of type <typeparamref name="T" /> are equal.</span></span></summary>
        <returns><span data-ttu-id="7355f-126"><see langword="true" />, если указанные объекты равны; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-126"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7355f-127">Метод <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> является перегибким, симметричным и транзитивным.</span><span class="sxs-lookup"><span data-stu-id="7355f-127">The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="7355f-128">То есть он возвращает `true`, если используется для сравнения объекта с самим собой; `true` для двух объектов `x` и `y`, если `true` для `y` и `x`; и `true` для двух объектов `x` и `z`, если `true` для `x` и `y` а также `true` для `y` и `z`.</span><span class="sxs-lookup"><span data-stu-id="7355f-128">That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7355f-129">Реализации необходимы, чтобы гарантировать, что если метод <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> возвращает <see langword="true" /> для двух объектов <paramref name="x" /> и <paramref name="y" />, то значение, возвращаемое методом <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> для <paramref name="x" />, должно равняться значению, возвращаемому для <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-129">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(T obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : 'T -&gt; int" Usage="equalityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7355f-130">Объект, для которого нужно получить хэш-код.</span><span class="sxs-lookup"><span data-stu-id="7355f-130">The object for which to get a hash code.</span></span></param>
        <summary><span data-ttu-id="7355f-131">При переопределении в производном классе служит хэш-функцией для указанного объекта для алгоритмов хэширования и структур данных, например хэш-таблицы.</span><span class="sxs-lookup"><span data-stu-id="7355f-131">When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="7355f-132">Хэш-код указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="7355f-132">A hash code for the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7355f-133">Тип <paramref name="obj" /> является ссылочным типом и <paramref name="obj" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-133">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="7355f-134">Реализации необходимы, чтобы гарантировать, что если метод <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> возвращает <see langword="true" /> для двух объектов <paramref name="x" /> и <paramref name="y" />, то значение, возвращаемое методом <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> для <paramref name="x" />, должно равняться значению, возвращаемому для <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-134">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="7355f-135">Первый из сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="7355f-135">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="7355f-136">Второй из сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="7355f-136">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="7355f-137">Определяет, равны ли два указанных объекта.</span><span class="sxs-lookup"><span data-stu-id="7355f-137">Determines whether the specified objects are equal.</span></span></summary>
        <returns><span data-ttu-id="7355f-138"><see langword="true" />, если указанные объекты равны; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-138"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7355f-139">Этот метод является оболочкой для метода <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29>, поэтому `obj` должен быть приведен к типу, заданному универсальным аргументом `T` текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="7355f-139">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="7355f-140">Если не удается выполнить приведение к `T`, выдается <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="7355f-140">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="7355f-141">Сравнение `null` разрешено и не создает исключение.</span><span class="sxs-lookup"><span data-stu-id="7355f-141">Comparing `null` is allowed and does not generate an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7355f-142">Параметр <paramref name="x" /> или <paramref name="y" /> имеет тип, который не может быть приведен к типу <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-142"><paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7355f-143">Объект <see cref="T:System.Object" />, для которого необходимо вернуть хэш-код.</span><span class="sxs-lookup"><span data-stu-id="7355f-143">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="7355f-144">Возвращает хэш-код указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="7355f-144">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="7355f-145">Хэш-код указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="7355f-145">A hash code for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7355f-146">Этот метод является оболочкой для метода <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29>, поэтому `obj` должен быть типом, который может быть приведен к типу, указанному в аргументе универсального типа `T` текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="7355f-146">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7355f-147">Тип <paramref name="obj" /> является ссылочным типом и <paramref name="obj" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-147">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7355f-148">-или-</span><span class="sxs-lookup"><span data-stu-id="7355f-148">-or-</span></span> 
 <span data-ttu-id="7355f-149">Параметр <paramref name="obj" /> имеет тип, который не может быть приведен к типу <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="7355f-149"><paramref name="obj" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
