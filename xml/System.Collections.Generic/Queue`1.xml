<Type Name="Queue&lt;T&gt;" FullName="System.Collections.Generic.Queue&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f49db801d235ca93990ff9e8fd14e37f3f15f88e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75151631" /></Metadata><TypeSignature Language="C#" Value="public class Queue&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Queue`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Queue`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Queue(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Queue : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Queue&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_QueueDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="e98b5-101">Задает тип элементов в очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-101">Specifies the type of elements in the queue.</span></span></typeparam>
    <summary><span data-ttu-id="e98b5-102">Представляет коллекцию объектов, основанную на принципе «первым поступил — первым обслужен».</span><span class="sxs-lookup"><span data-stu-id="e98b5-102">Represents a first-in, first-out collection of objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-103">Этот класс реализует универсальную очередь в виде круглого массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-103">This class implements a generic queue as a circular array.</span></span> <span data-ttu-id="e98b5-104">Объекты, хранящиеся в <xref:System.Collections.Generic.Queue%601>, вставляются в один конец и удаляются из другого.</span><span class="sxs-lookup"><span data-stu-id="e98b5-104">Objects stored in a <xref:System.Collections.Generic.Queue%601> are inserted at one end and removed from the other.</span></span> <span data-ttu-id="e98b5-105">Очереди и стеки полезны, если для хранения данных требуется временное хранилище. то есть, когда может потребоваться отменить элемент после получения его значения.</span><span class="sxs-lookup"><span data-stu-id="e98b5-105">Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="e98b5-106">Используйте <xref:System.Collections.Generic.Queue%601>, если необходимо получить доступ к данным в том же порядке, в котором они хранятся в коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-106">Use <xref:System.Collections.Generic.Queue%601> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="e98b5-107">Используйте <xref:System.Collections.Generic.Stack%601>, если необходимо получить доступ к данным в обратных последовательностях.</span><span class="sxs-lookup"><span data-stu-id="e98b5-107">Use <xref:System.Collections.Generic.Stack%601> if you need to access the information in reverse order.</span></span> <span data-ttu-id="e98b5-108">Используйте <xref:System.Collections.Concurrent.ConcurrentQueue%601> или <xref:System.Collections.Concurrent.ConcurrentStack%601>, если требуется одновременный доступ к коллекции из нескольких потоков.</span><span class="sxs-lookup"><span data-stu-id="e98b5-108">Use <xref:System.Collections.Concurrent.ConcurrentQueue%601> or <xref:System.Collections.Concurrent.ConcurrentStack%601> if you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="e98b5-109">В <xref:System.Collections.Generic.Queue%601> и его элементах можно выполнять три основные операции:</span><span class="sxs-lookup"><span data-stu-id="e98b5-109">Three main operations can be performed on a <xref:System.Collections.Generic.Queue%601> and its elements:</span></span>  
  
-   <span data-ttu-id="e98b5-110"><xref:System.Collections.Generic.Queue%601.Enqueue%2A> добавляет элемент в конец <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-110"><xref:System.Collections.Generic.Queue%601.Enqueue%2A> adds an element to the end of the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
-   <span data-ttu-id="e98b5-111"><xref:System.Collections.Generic.Queue%601.Dequeue%2A> удаляет самый старый элемент с начала <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-111"><xref:System.Collections.Generic.Queue%601.Dequeue%2A> removes the oldest element from the start of the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
-   <span data-ttu-id="e98b5-112"><xref:System.Collections.Generic.Queue%601.Peek%2A> Peek возвращает самый старый элемент, который находится в начале <xref:System.Collections.Generic.Queue%601> но не удаляет его из <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-112"><xref:System.Collections.Generic.Queue%601.Peek%2A> peek returns the oldest element that is at the start of the <xref:System.Collections.Generic.Queue%601> but does not remove it from the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="e98b5-113">Емкость <xref:System.Collections.Generic.Queue%601> — число элементов, которые может содержать <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-113">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements the <xref:System.Collections.Generic.Queue%601> can hold.</span></span> <span data-ttu-id="e98b5-114">При добавлении элементов в <xref:System.Collections.Generic.Queue%601>емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-114">As elements are added to a <xref:System.Collections.Generic.Queue%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="e98b5-115">Емкость можно уменьшить, вызвав <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-115">The capacity can be decreased by calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="e98b5-116"><xref:System.Collections.Generic.Queue%601> принимает `null` как допустимое значение для ссылочных типов и допускает дублирование элементов.</span><span class="sxs-lookup"><span data-stu-id="e98b5-116"><xref:System.Collections.Generic.Queue%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-117">В следующем примере кода показано несколько методов универсального класса <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-117">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class.</span></span> <span data-ttu-id="e98b5-118">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-118">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-119">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-119">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-120">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-120">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-121">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-121">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-122">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-122">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-123">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-123">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-124">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-124">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-125">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-125">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-126">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-126">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e98b5-127">Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="e98b5-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="e98b5-128">Потокобезопасность членов экземпляров не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="e98b5-128">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="e98b5-129"><see cref="T:System.Collections.Generic.Queue`1" /> может поддерживать одновременно несколько модулей чтения, если коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e98b5-129">A <see cref="T:System.Collections.Generic.Queue`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="e98b5-130">Даже поэтому перечисление по коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e98b5-130">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e98b5-131">Сведения о потокобезопасной очереди см. в разделе <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-131">For a thread-safe queue, see <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1" />.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e98b5-132">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-132">Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98b5-133">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.Queue`1" />, который является пустым и имеет начальную емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e98b5-133">Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-134">Емкость <xref:System.Collections.Generic.Queue%601> — это количество элементов, которые может содержать <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-134">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements that the <xref:System.Collections.Generic.Queue%601> can hold.</span></span> <span data-ttu-id="e98b5-135">При добавлении элементов в <xref:System.Collections.Generic.Queue%601>емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-135">As elements are added to a <xref:System.Collections.Generic.Queue%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="e98b5-136">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-136">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="e98b5-137">Емкость можно уменьшить, вызвав <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-137">The capacity can be decreased by calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="e98b5-138">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-138">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-139">В следующем примере кода демонстрируется этот конструктор и несколько других методов <xref:System.Collections.Generic.Queue%601> универсального класса.</span><span class="sxs-lookup"><span data-stu-id="e98b5-139">The following code example demonstrates this constructor and several other methods of the <xref:System.Collections.Generic.Queue%601> generic class.</span></span> <span data-ttu-id="e98b5-140">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-140">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-141">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-141">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-142">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-142">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-143">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-143">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-144">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-144">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-145">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-145">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-146">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-146">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-147">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-147">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-148">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-148">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Queue&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.Queue&lt;'T&gt;" Usage="new System.Collections.Generic.Queue&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="e98b5-149">Коллекция, элементы которой копируются в новую коллекцию <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-149">The collection whose elements are copied to the new <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></param>
        <summary><span data-ttu-id="e98b5-150">Инициализирует новый экземпляр <see cref="T:System.Collections.Generic.Queue`1" />, который содержит элементы, скопированные из указанной коллекции, и имеет емкость, достаточную для размещения всех скопированных элементов.</span><span class="sxs-lookup"><span data-stu-id="e98b5-150">Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-151">Емкость <xref:System.Collections.Generic.Queue%601> — это количество элементов, которые может содержать <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-151">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements that the <xref:System.Collections.Generic.Queue%601> can hold.</span></span> <span data-ttu-id="e98b5-152">При добавлении элементов в <xref:System.Collections.Generic.Queue%601>емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-152">As elements are added to a <xref:System.Collections.Generic.Queue%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="e98b5-153">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-153">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="e98b5-154">Емкость можно уменьшить, вызвав <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-154">The capacity can be decreased by calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="e98b5-155">Элементы копируются на <xref:System.Collections.Generic.Queue%601> в том же порядке, в котором они считываются <xref:System.Collections.Generic.IEnumerator%601> коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-155">The elements are copied onto the <xref:System.Collections.Generic.Queue%601> in the same order they are read by the <xref:System.Collections.Generic.IEnumerator%601> of the collection.</span></span>  
  
 <span data-ttu-id="e98b5-156">Этот конструктор является операцией O (`n`), где `n` — число элементов в `collection`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-156">This constructor is an O(`n`) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-157">В следующем примере кода демонстрируется этот конструктор и несколько других методов <xref:System.Collections.Generic.Queue%601> универсального класса.</span><span class="sxs-lookup"><span data-stu-id="e98b5-157">The following code example demonstrates this constructor and several other methods of the <xref:System.Collections.Generic.Queue%601> generic class.</span></span> <span data-ttu-id="e98b5-158">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-158">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-159">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-159">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-160">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-160">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-161">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-161">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-162">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-162">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-163">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-163">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-164">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-164">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-165">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-165">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-166">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-166">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e98b5-167"><paramref name="collection" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-167"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Queue&lt;'T&gt; : int -&gt; System.Collections.Generic.Queue&lt;'T&gt;" Usage="new System.Collections.Generic.Queue&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="e98b5-168">Начальное количество элементов, которое может содержать коллекция <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-168">The initial number of elements that the <see cref="T:System.Collections.Generic.Queue`1" /> can contain.</span></span></param>
        <summary><span data-ttu-id="e98b5-169">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Generic.Queue`1" /> с указанной начальной емкостью.</span><span class="sxs-lookup"><span data-stu-id="e98b5-169">Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-170">Емкость <xref:System.Collections.Generic.Queue%601> — это количество элементов, которые может содержать <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-170">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements that the <xref:System.Collections.Generic.Queue%601> can hold.</span></span> <span data-ttu-id="e98b5-171">При добавлении элементов в <xref:System.Collections.Generic.Queue%601>емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-171">As elements are added to a <xref:System.Collections.Generic.Queue%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="e98b5-172">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-172">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="e98b5-173">Емкость можно уменьшить, вызвав <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-173">The capacity can be decreased by calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="e98b5-174">Этот конструктор является операцией O (`n`), где `n` `capacity`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-174">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e98b5-175">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="e98b5-175"><paramref name="capacity" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="queue.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98b5-176">Удаляет все объекты из <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-176">Removes all objects from the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-177"><xref:System.Collections.Generic.Queue%601.Count%2A> имеет значение 0, а ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="e98b5-177"><xref:System.Collections.Generic.Queue%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="e98b5-178">Емкость остается неизменной.</span><span class="sxs-lookup"><span data-stu-id="e98b5-178">The capacity remains unchanged.</span></span> <span data-ttu-id="e98b5-179">Чтобы сбросить емкость <xref:System.Collections.Generic.Queue%601>, вызовите <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-179">To reset the capacity of the <xref:System.Collections.Generic.Queue%601>, call <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span> <span data-ttu-id="e98b5-180">Удаление пустой <xref:System.Collections.Generic.Queue%601> задает емкость объекта <xref:System.Collections.Generic.Queue%601> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e98b5-180">Trimming an empty <xref:System.Collections.Generic.Queue%601> sets the capacity of the <xref:System.Collections.Generic.Queue%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="e98b5-181">Этот метод является операцией O (`n`), где `n` <xref:System.Collections.Generic.Queue%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-181">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-182">В следующем примере кода показано несколько методов универсального класса <xref:System.Collections.Generic.Queue%601>, включая метод <xref:System.Collections.Generic.Queue%601.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-182">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="e98b5-183">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-183">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-184">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-184">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-185">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-185">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-186">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-186">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-187">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-187">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-188">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-188">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-189">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-189">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-190">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-190">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-191">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-191">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.TrimExcess" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="member this.Contains : 'T -&gt; bool" Usage="queue.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="e98b5-192">Объект для поиска в <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-192">The object to locate in the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span> <span data-ttu-id="e98b5-193">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-193">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="e98b5-194">Определяет, входит ли элемент в коллекцию <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-194">Determines whether an element is in the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></summary>
        <returns><span data-ttu-id="e98b5-195">Значение <see langword="true" />, если параметр <paramref name="item" /> найден в коллекции <see cref="T:System.Collections.Generic.Queue`1" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-195"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Queue`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-196">Этот метод определяет равенство, используя <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> компаратора проверки на равенство по умолчанию для `T`, тип значений в очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-196">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the queue.</span></span>  
  
 <span data-ttu-id="e98b5-197">Этот метод выполняет линейный поиск. Таким образом, этот метод является операцией O (`n`), где `n` <xref:System.Collections.Generic.Queue%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-197">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-198">В следующем примере кода показано несколько методов универсального класса <xref:System.Collections.Generic.Queue%601>, включая метод <xref:System.Collections.Generic.Queue%601.Contains%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-198">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="e98b5-199">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-199">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-200">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-200">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-201">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-201">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-202">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-202">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-203">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-203">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-204">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-204">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-205">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-205">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-206">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-206">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-207">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-207">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="e98b5-208">Выполнение строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e98b5-208">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="queue.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="e98b5-209">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-209">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Queue`1" />.</span></span> <span data-ttu-id="e98b5-210">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="e98b5-210">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="e98b5-211">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="e98b5-211">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="e98b5-212">Копирует элементы коллекции <see cref="T:System.Collections.Generic.Queue`1" /> в существующий одномерный массив <see cref="T:System.Array" />, начиная с указанного значения индекса массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-212">Copies the <see cref="T:System.Collections.Generic.Queue`1" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-213">Элементы копируются в <xref:System.Array> в том же порядке, в котором перечислитель проходит по <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-213">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="e98b5-214">Этот метод является операцией O (`n`), где `n` <xref:System.Collections.Generic.Queue%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-214">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e98b5-215"><paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-215"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e98b5-216">Значение параметра <paramref name="arrayIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="e98b5-216"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e98b5-217">Число элементов в исходной коллекции <see cref="T:System.Collections.Generic.Queue`1" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-217">The number of elements in the source <see cref="T:System.Collections.Generic.Queue`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Queue`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.Queue&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98b5-218">Получает число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-218">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></summary>
        <value><span data-ttu-id="e98b5-219">Число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-219">The number of elements contained in the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-220">Емкость <xref:System.Collections.Generic.Queue%601> — это количество элементов, которые может хранить <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-220">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements that the <xref:System.Collections.Generic.Queue%601> can store.</span></span> <span data-ttu-id="e98b5-221"><xref:System.Collections.Generic.Queue%601.Count%2A> — количество элементов, которые фактически находятся в <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-221"><xref:System.Collections.Generic.Queue%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="e98b5-222">Емкость всегда больше или равна <xref:System.Collections.Generic.Queue%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-222">The capacity is always greater than or equal to <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span> <span data-ttu-id="e98b5-223">Если <xref:System.Collections.Generic.Queue%601.Count%2A> превышает емкость при добавлении элементов, емкость увеличивается путем автоматического перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="e98b5-223">If <xref:System.Collections.Generic.Queue%601.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="e98b5-224">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-224">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-225">В следующем примере кода показано несколько свойств и методов универсального класса <xref:System.Collections.Generic.Queue%601>, включая свойство <xref:System.Collections.Generic.Queue%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-225">The following code example demonstrates several properties and methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Count%2A> property.</span></span>  
  
 <span data-ttu-id="e98b5-226">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-226">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-227">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-227">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-228">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-228">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-229">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-229">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-230">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-230">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-231">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-231">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-232">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-232">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-233">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-233">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-234">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-234">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public T Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Dequeue();" />
      <MemberSignature Language="F#" Value="member this.Dequeue : unit -&gt; 'T" Usage="queue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98b5-235">Удаляет объект из начала очереди <see cref="T:System.Collections.Generic.Queue`1" /> и возвращает его.</span><span class="sxs-lookup"><span data-stu-id="e98b5-235">Removes and returns the object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></summary>
        <returns><span data-ttu-id="e98b5-236">Объект, удаляемый из начала очереди <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-236">The object that is removed from the beginning of the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-237">Этот метод аналогичен методу <xref:System.Collections.Generic.Queue%601.Peek%2A>, однако метод <xref:System.Collections.Generic.Queue%601.Peek%2A> не вносит изменения в очередь <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-237">This method is similar to the <xref:System.Collections.Generic.Queue%601.Peek%2A> method, but <xref:System.Collections.Generic.Queue%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="e98b5-238">Если тип `T` является ссылочным типом, `null` можно добавить в <xref:System.Collections.Generic.Queue%601> в качестве значения.</span><span class="sxs-lookup"><span data-stu-id="e98b5-238">If type `T` is a reference type, `null` can be added to the <xref:System.Collections.Generic.Queue%601> as a value.</span></span>  
  
 <span data-ttu-id="e98b5-239">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-239">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-240">В следующем примере кода показано несколько методов универсального класса <xref:System.Collections.Generic.Queue%601>, включая метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-240">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method.</span></span>  
  
 <span data-ttu-id="e98b5-241">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-241">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-242">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-242">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-243">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-243">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-244">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-244">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-245">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-245">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-246">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-246">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-247">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-247">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-248">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-248">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-249">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-249">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e98b5-250">Очередь <see cref="T:System.Collections.Generic.Queue`1" /> является пустой.</span><span class="sxs-lookup"><span data-stu-id="e98b5-250">The <see cref="T:System.Collections.Generic.Queue`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Queue`1.Enqueue(`0)" />
        <altmember cref="M:System.Collections.Generic.Queue`1.Peek" />
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Enqueue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enqueue (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enqueue(T item);" />
      <MemberSignature Language="F#" Value="member this.Enqueue : 'T -&gt; unit" Usage="queue.Enqueue item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="e98b5-251">Объект, добавляемый в коллекцию <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-251">The object to add to the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span> <span data-ttu-id="e98b5-252">Для ссылочных типов допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-252">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="e98b5-253">Добавляет объект в конец очереди <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-253">Adds an object to the end of the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-254">Если <xref:System.Collections.Generic.Queue%601.Count%2A> уже равен емкости, емкость <xref:System.Collections.Generic.Queue%601> увеличивается путем автоматического перераспределения внутреннего массива, а существующие элементы копируются в новый массив перед добавлением нового элемента.</span><span class="sxs-lookup"><span data-stu-id="e98b5-254">If <xref:System.Collections.Generic.Queue%601.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Generic.Queue%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="e98b5-255">Если <xref:System.Collections.Generic.Queue%601.Count%2A> меньше емкости внутреннего массива, этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-255">If <xref:System.Collections.Generic.Queue%601.Count%2A> is less than the capacity of the internal array, this method is an O(1) operation.</span></span> <span data-ttu-id="e98b5-256">Если внутренний массив необходимо перераспределить для размещения нового элемента, этот метод становится операцией O (`n`), где `n` <xref:System.Collections.Generic.Queue%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-256">If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-257">В следующем примере кода показано несколько методов универсального класса <xref:System.Collections.Generic.Queue%601>, включая метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-257">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method.</span></span>  
  
 <span data-ttu-id="e98b5-258">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-258">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-259">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-259">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-260">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-260">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-261">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-261">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-262">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-262">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-263">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-263">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-264">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-264">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-265">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-265">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-266">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-266">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.Dequeue" />
        <altmember cref="M:System.Collections.Generic.Queue`1.Peek" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Queue&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Queue`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Queue(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Queue&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.Queue&lt;'T&gt;.Enumerator" Usage="queue.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Queue&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98b5-267">Возвращает перечислитель, осуществляющий перебор элементов списка <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-267">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></summary>
        <returns><span data-ttu-id="e98b5-268">Интерфейс <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> для <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-268">An <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-269">Оператор `foreach` C# языка (`for each` в C++`For Each` в Visual Basic) скрывает сложность перечислителей.</span><span class="sxs-lookup"><span data-stu-id="e98b5-269">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="e98b5-270">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-270">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="e98b5-271">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="e98b5-271">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="e98b5-272">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-272">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="e98b5-273">В этой позиции значение свойства <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="e98b5-273">At this position, <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="e98b5-274">Поэтому необходимо вызвать метод <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-274">Therefore, you must call <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="e98b5-275"><xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-275"><xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="e98b5-276"><xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> задает <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="e98b5-276"><xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="e98b5-277">Если <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> передает конец коллекции, перечислитель размещается после последнего элемента в коллекции и <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-277">If <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="e98b5-278">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-278">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="e98b5-279">Если последний вызов <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> вернул `false`, <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="e98b5-279">If the last call to <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="e98b5-280">Значение свойства <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.</span><span class="sxs-lookup"><span data-stu-id="e98b5-280">You cannot set <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="e98b5-281">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e98b5-281">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="e98b5-282">Если в коллекцию вносятся изменения, например добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> или <xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-282">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="e98b5-283">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e98b5-283">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e98b5-284">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="e98b5-284">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="e98b5-285">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="e98b5-285">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="e98b5-286">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="e98b5-286">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="e98b5-287">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-287">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-288">В следующем примере кода показано, что <xref:System.Collections.Generic.Queue%601> универсальный класс является перечислимым.</span><span class="sxs-lookup"><span data-stu-id="e98b5-288">The following code example demonstrates that the <xref:System.Collections.Generic.Queue%601> generic class is enumerable.</span></span> <span data-ttu-id="e98b5-289">Для перечисления очереди используется инструкция `foreach` (`For Each` в Visual Basic C++, `for each` в).</span><span class="sxs-lookup"><span data-stu-id="e98b5-289">The `foreach` statement (`For Each` in Visual Basic, `for each` in C++) is used to enumerate the queue.</span></span>  
  
 <span data-ttu-id="e98b5-290">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-290">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-291">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-291">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-292">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-292">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-293">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-293">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-294">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-294">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-295">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-295">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-296">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-296">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-297">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-297">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-298">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-298">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Queue`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; 'T" Usage="queue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98b5-299">Возвращает объект, находящийся в начале очереди <see cref="T:System.Collections.Generic.Queue`1" />, но не удаляет его.</span><span class="sxs-lookup"><span data-stu-id="e98b5-299">Returns the object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="e98b5-300">Объект, находящийся в начале очереди <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-300">The object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-301">Этот метод аналогичен методу <xref:System.Collections.Generic.Queue%601.Dequeue%2A>, однако метод <xref:System.Collections.Generic.Queue%601.Peek%2A> не вносит изменения в очередь <xref:System.Collections.Generic.Queue%601>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-301">This method is similar to the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method, but <xref:System.Collections.Generic.Queue%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="e98b5-302">Если тип `T` является ссылочным типом, `null` можно добавить в <xref:System.Collections.Generic.Queue%601> в качестве значения.</span><span class="sxs-lookup"><span data-stu-id="e98b5-302">If type `T` is a reference type, `null` can be added to the <xref:System.Collections.Generic.Queue%601> as a value.</span></span>  
  
 <span data-ttu-id="e98b5-303">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-303">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-304">В следующем примере кода показано несколько методов универсального класса <xref:System.Collections.Generic.Queue%601>, включая метод <xref:System.Collections.Generic.Queue%601.Peek%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-304">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="e98b5-305">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-305">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-306">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-306">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-307">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-307">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-308">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-308">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-309">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-309">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-310">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-310">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-311">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-311">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-312">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-312">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-313">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-313">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e98b5-314">Очередь <see cref="T:System.Collections.Generic.Queue`1" /> является пустой.</span><span class="sxs-lookup"><span data-stu-id="e98b5-314">The <see cref="T:System.Collections.Generic.Queue`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Queue`1.Enqueue(`0)" />
        <altmember cref="M:System.Collections.Generic.Queue`1.Dequeue" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98b5-315">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-315">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="e98b5-316">Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-316">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-317">Оператор `foreach` C# языка (`for each` в C++`For Each` в Visual Basic) скрывает сложность перечислителей.</span><span class="sxs-lookup"><span data-stu-id="e98b5-317">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="e98b5-318">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-318">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="e98b5-319">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="e98b5-319">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="e98b5-320">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-320">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="e98b5-321">В этой позиции значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="e98b5-321">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="e98b5-322">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-322">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="e98b5-323"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-323"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="e98b5-324"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.Generic.IEnumerator%601.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="e98b5-324"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="e98b5-325">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель размещается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-325">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="e98b5-326">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-326">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="e98b5-327">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> вернул `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="e98b5-327">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="e98b5-328">Значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.</span><span class="sxs-lookup"><span data-stu-id="e98b5-328">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="e98b5-329">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e98b5-329">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="e98b5-330">Если в коллекцию вносятся изменения, например добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-330">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="e98b5-331">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e98b5-331">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e98b5-332">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="e98b5-332">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="e98b5-333">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="e98b5-333">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="e98b5-334">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="e98b5-334">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="e98b5-335">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-335">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.GetEnumerator" />
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="e98b5-336">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-336">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="e98b5-337">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="e98b5-337">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="e98b5-338">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="e98b5-338">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="e98b5-339">Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-339">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e98b5-340">Если тип источника <xref:System.Collections.ICollection> не может быть автоматически приведен к типу `array`назначения, неуниверсальные реализации <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> вызывают <xref:System.InvalidCastException>, тогда как универсальные реализации создают <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-340">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="e98b5-341">Этот метод является операцией O (`n`), где `n` <xref:System.Collections.Generic.Queue%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-341">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e98b5-342"><paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-342"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e98b5-343">Значение параметра <paramref name="index" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="e98b5-343"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e98b5-344">Массив <paramref name="array" /> является многомерным.</span><span class="sxs-lookup"><span data-stu-id="e98b5-344"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="e98b5-345">-или-</span><span class="sxs-lookup"><span data-stu-id="e98b5-345">-or-</span></span> 
 <span data-ttu-id="e98b5-346">В массиве <paramref name="array" /> не используется индексация, начинающаяся с нуля.</span><span class="sxs-lookup"><span data-stu-id="e98b5-346"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="e98b5-347">-или-</span><span class="sxs-lookup"><span data-stu-id="e98b5-347">-or-</span></span> 
<span data-ttu-id="e98b5-348">Число элементов в исходном массиве <see cref="T:System.Collections.ICollection" /> больше доступного места от положения, заданного значением параметра <paramref name="index" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-348">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="e98b5-349">-или-</span><span class="sxs-lookup"><span data-stu-id="e98b5-349">-or-</span></span> 
<span data-ttu-id="e98b5-350">Тип исходного массива <see cref="T:System.Collections.ICollection" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-350">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98b5-351">Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="e98b5-351">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="e98b5-352"><see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-352"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="e98b5-353">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.Queue`1" /> это свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-353">In the default implementation of <see cref="T:System.Collections.Generic.Queue`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-354">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="e98b5-354">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="e98b5-355">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e98b5-355">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="e98b5-356">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="e98b5-356">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="e98b5-357">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="e98b5-357">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="e98b5-358">Свойство <xref:System.Collections.ICollection.SyncRoot%2A> возвращает объект, который может использоваться для синхронизации доступа к коллекции <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-358"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="e98b5-359">Синхронизация вступает в силу только в том случае, если все потоки блокируют этот объект перед доступом к коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-359">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="e98b5-360">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-360">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e98b5-361">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-361">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="e98b5-362">Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-362">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="e98b5-363">В используемой по умолчанию реализации <see cref="T:System.Collections.Generic.Queue`1" /> это свойство всегда возвращает текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="e98b5-363">In the default implementation of <see cref="T:System.Collections.Generic.Queue`1" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-364">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="e98b5-364">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="e98b5-365">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e98b5-365">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="e98b5-366">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="e98b5-366">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="e98b5-367">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="e98b5-367">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="e98b5-368">Свойство <xref:System.Collections.ICollection.SyncRoot%2A> возвращает объект, который может использоваться для синхронизации доступа к коллекции <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-368"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="e98b5-369">Синхронизация вступает в силу только в том случае, если все потоки блокируют этот объект перед доступом к коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-369">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="e98b5-370">В следующем коде показано использование свойства <xref:System.Collections.ICollection.SyncRoot%2A> для C#, C++и Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="e98b5-370">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="e98b5-371">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-371">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98b5-372">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-372">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="e98b5-373">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-373">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-374">Оператор `foreach` C# языка (`for each` в C++`For Each` в Visual Basic) скрывает сложность перечислителей.</span><span class="sxs-lookup"><span data-stu-id="e98b5-374">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="e98b5-375">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-375">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="e98b5-376">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="e98b5-376">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="e98b5-377">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="e98b5-377">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="e98b5-378">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="e98b5-378"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="e98b5-379">В этой позиции значение свойства <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="e98b5-379">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="e98b5-380">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-380">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="e98b5-381"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-381"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="e98b5-382"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="e98b5-382"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="e98b5-383">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель размещается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-383">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="e98b5-384">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="e98b5-384">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="e98b5-385">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> вернул `false`, <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="e98b5-385">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="e98b5-386">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-386">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="e98b5-387">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e98b5-387">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="e98b5-388">Если в коллекцию вносятся изменения, например добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-388">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> 
  
 <span data-ttu-id="e98b5-389">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e98b5-389">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="e98b5-390">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="e98b5-390">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="e98b5-391">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="e98b5-391">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="e98b5-392">Реализации по умолчанию коллекций в <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="e98b5-392">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="e98b5-393">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e98b5-393">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="queue.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98b5-394">Копирует элементы <see cref="T:System.Collections.Generic.Queue`1" /> в новый массив.</span><span class="sxs-lookup"><span data-stu-id="e98b5-394">Copies the <see cref="T:System.Collections.Generic.Queue`1" /> elements to a new array.</span></span></summary>
        <returns><span data-ttu-id="e98b5-395">Новый массив, содержащий элементы, скопированные из <see cref="T:System.Collections.Generic.Queue`1" />.</span><span class="sxs-lookup"><span data-stu-id="e98b5-395">A new array containing elements copied from the <see cref="T:System.Collections.Generic.Queue`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-396"><xref:System.Collections.Generic.Queue%601> не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e98b5-396">The <xref:System.Collections.Generic.Queue%601> is not modified.</span></span> <span data-ttu-id="e98b5-397">Порядок элементов в новом массиве совпадает с порядком элементов от начала <xref:System.Collections.Generic.Queue%601> до его конца.</span><span class="sxs-lookup"><span data-stu-id="e98b5-397">The order of the elements in the new array is the same as the order of the elements from the beginning of the <xref:System.Collections.Generic.Queue%601> to its end.</span></span>  
  
 <span data-ttu-id="e98b5-398">Этот метод является операцией O (`n`), где `n` <xref:System.Collections.Generic.Queue%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-398">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e98b5-399">В следующем примере кода показано несколько методов универсального класса <xref:System.Collections.Generic.Queue%601>, включая метод <xref:System.Collections.Generic.Queue%601.ToArray%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-399">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.ToArray%2A> method.</span></span>  
  
 <span data-ttu-id="e98b5-400">В примере кода создается очередь строк с емкостью по умолчанию и используется метод <xref:System.Collections.Generic.Queue%601.Enqueue%2A> для постановки пяти строк в очередь.</span><span class="sxs-lookup"><span data-stu-id="e98b5-400">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="e98b5-401">Элементы очереди перечисляются, что не приводит к изменению состояния очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-401">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="e98b5-402">Метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для вывода первой строки из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-402">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="e98b5-403">Метод <xref:System.Collections.Generic.Queue%601.Peek%2A> используется для просмотра следующего элемента в очереди, а затем метод <xref:System.Collections.Generic.Queue%601.Dequeue%2A> используется для их вывода из очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-403">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="e98b5-404">Метод <xref:System.Collections.Generic.Queue%601.ToArray%2A> используется для создания массива и копирования в него элементов очереди, затем массив передается конструктору <xref:System.Collections.Generic.Queue%601.%23ctor%2A>, который принимает <xref:System.Collections.Generic.IEnumerable%601>, создавая копию очереди.</span><span class="sxs-lookup"><span data-stu-id="e98b5-404">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="e98b5-405">Отобразятся элементы копии.</span><span class="sxs-lookup"><span data-stu-id="e98b5-405">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="e98b5-406">Массив в два раза создается размер очереди, а метод <xref:System.Collections.Generic.Queue%601.CopyTo%2A> используется для копирования элементов массива, начиная с середины массива.</span><span class="sxs-lookup"><span data-stu-id="e98b5-406">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="e98b5-407">Конструктор <xref:System.Collections.Generic.Queue%601.%23ctor%2A> снова используется для создания второй копии очереди, содержащей три элемента null в начале.</span><span class="sxs-lookup"><span data-stu-id="e98b5-407">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="e98b5-408">Метод <xref:System.Collections.Generic.Queue%601.Contains%2A> позволяет показать, что строка «четыре» находится в первой копии очереди, после чего метод <xref:System.Collections.Generic.Queue%601.Clear%2A> очищает копию, а свойство <xref:System.Collections.Generic.Queue%601.Count%2A> показывает, что очередь пуста.</span><span class="sxs-lookup"><span data-stu-id="e98b5-408">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="queue.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e98b5-409">Устанавливает емкость равной фактическому количеству элементов в <see cref="T:System.Collections.Generic.Queue`1" />, если это количество составляет менее 90 процентов текущей емкости.</span><span class="sxs-lookup"><span data-stu-id="e98b5-409">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Queue`1" />, if that number is less than 90 percent of current capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e98b5-410">Этот метод можно использовать для снижения нагрузки на память коллекции, если в коллекцию не добавляются новые элементы.</span><span class="sxs-lookup"><span data-stu-id="e98b5-410">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="e98b5-411">Однако стоимость повторного выделения и копирования больших <xref:System.Collections.Generic.Queue%601> может быть значительной, поэтому метод <xref:System.Collections.Generic.Queue%601.TrimExcess%2A> не выполняет никаких действий, если список имеет более 90 процентов емкости.</span><span class="sxs-lookup"><span data-stu-id="e98b5-411">The cost of reallocating and copying a large <xref:System.Collections.Generic.Queue%601> can be considerable, however, so the <xref:System.Collections.Generic.Queue%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="e98b5-412">Это позволяет избежать больших затрат на повторное распределение для относительно небольшого выигрыша.</span><span class="sxs-lookup"><span data-stu-id="e98b5-412">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="e98b5-413">Этот метод является операцией O (`n`), где `n` <xref:System.Collections.Generic.Queue%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-413">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="e98b5-414">Чтобы сбросить <xref:System.Collections.Generic.Queue%601> до начального состояния, вызовите метод <xref:System.Collections.Generic.Queue%601.Clear%2A> перед вызовом метода <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="e98b5-414">To reset a <xref:System.Collections.Generic.Queue%601> to its initial state, call the <xref:System.Collections.Generic.Queue%601.Clear%2A> method before calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="e98b5-415">Удаление пустой <xref:System.Collections.Generic.Queue%601> задает емкость объекта <xref:System.Collections.Generic.Queue%601> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e98b5-415">Trimming an empty <xref:System.Collections.Generic.Queue%601> sets the capacity of the <xref:System.Collections.Generic.Queue%601> to the default capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.Clear" />
        <altmember cref="P:System.Collections.Generic.Queue`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryDequeue">
      <MemberSignature Language="C#" Value="public bool TryDequeue (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDequeue([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.TryDequeue(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryDequeue (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryDequeue([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryDequeue : 'T -&gt; bool" Usage="queue.TryDequeue result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek : 'T -&gt; bool" Usage="queue.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
