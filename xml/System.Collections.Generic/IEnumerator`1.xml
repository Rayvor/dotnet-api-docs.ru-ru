<Type Name="IEnumerator&lt;T&gt;" FullName="System.Collections.Generic.IEnumerator&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ee84b88599b532484e038d634a585401c9d8131b" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63908764" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumerator&lt;out T&gt; : IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerator`1&lt;+ T&gt; implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerator(Of Out T)&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerator : IDisposable, System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type IEnumerator&lt;'T&gt; = interface&#xA;    interface IDisposable&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="b00e0-101">Тип объектов для перечисления.</span><span class="sxs-lookup"><span data-stu-id="b00e0-101">The type of objects to enumerate.</span></span></typeparam>
    <summary><span data-ttu-id="b00e0-102">Поддерживает простой перебор элементов универсальной коллекции.</span><span class="sxs-lookup"><span data-stu-id="b00e0-102">Supports a simple iteration over a generic collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00e0-103"><xref:System.Collections.Generic.IEnumerator%601> является базовым интерфейсом для всех универсальными перечислителями.</span><span class="sxs-lookup"><span data-stu-id="b00e0-103"><xref:System.Collections.Generic.IEnumerator%601> is the base interface for all generic enumerators.</span></span>  
  
 <span data-ttu-id="b00e0-104">`foreach` Инструкции языка C# (`for each` в C++, `For Each` в Visual Basic) скрывает сложность перечислителей.</span><span class="sxs-lookup"><span data-stu-id="b00e0-104">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="b00e0-105">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="b00e0-105">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b00e0-106">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="b00e0-106">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b00e0-107">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="b00e0-107">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b00e0-108">В этой позиции значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="b00e0-108">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="b00e0-109">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b00e0-109">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="b00e0-110"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="b00e0-110"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="b00e0-111"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.Generic.IEnumerator%601.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="b00e0-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b00e0-112">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="b00e0-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b00e0-113">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="b00e0-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b00e0-114">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="b00e0-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="b00e0-115">Значение свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.</span><span class="sxs-lookup"><span data-stu-id="b00e0-115">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="b00e0-116"><xref:System.Collections.IEnumerator.Reset%2A> Метод предоставляется для COM-взаимодействие.</span><span class="sxs-lookup"><span data-stu-id="b00e0-116">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability.</span></span> <span data-ttu-id="b00e0-117">Он не обязательно должен быть реализован. Вместо этого можно просто вызывать <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="b00e0-117">It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="b00e0-118">Тем не менее, если вы решили сделать это, вы должны убедитесь, что вызывающие методы не полагаетесь на <xref:System.Collections.IEnumerator.Reset%2A> функциональные возможности.</span><span class="sxs-lookup"><span data-stu-id="b00e0-118">However, if you choose to do this, you should make sure no callers are relying on the <xref:System.Collections.IEnumerator.Reset%2A> functionality.</span></span>  
  
 <span data-ttu-id="b00e0-119">При внесении изменений в коллекцию, например добавление, изменение или удаление элементов, перечислитель поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="b00e0-119">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="b00e0-120">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="b00e0-120">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="b00e0-121">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="b00e0-121">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="b00e0-122">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="b00e0-122">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b00e0-123">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="b00e0-123">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b00e0-124">В следующем примере показана реализация <xref:System.Collections.Generic.IEnumerator%601> интерфейс для класса коллекции пользовательских объектов.</span><span class="sxs-lookup"><span data-stu-id="b00e0-124">The following example shows an implementation of the <xref:System.Collections.Generic.IEnumerator%601> interface for a collection class of custom objects.</span></span> <span data-ttu-id="b00e0-125">Пользовательский объект является экземпляром типа `Box`, и класс коллекции является `BoxCollection`.</span><span class="sxs-lookup"><span data-stu-id="b00e0-125">The custom object is an instance of the type `Box`, and the collection class is `BoxCollection`.</span></span> <span data-ttu-id="b00e0-126">Данный пример кода является частью большего примера для <xref:System.Collections.Generic.ICollection%601> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="b00e0-126">This code example is part of a larger example provided for the <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxexamples/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxexamples/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="b00e0-127">Реализация этого интерфейса требуется реализовать неуниверсальный <see cref="T:System.Collections.IEnumerator" /> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="b00e0-127">Implementing this interface requires implementing the nongeneric <see cref="T:System.Collections.IEnumerator" /> interface.</span></span> <span data-ttu-id="b00e0-128"><see cref="M:System.Collections.IEnumerator.MoveNext" /> И <see cref="M:System.Collections.IEnumerator.Reset" /> методы не зависят от <typeparamref name="T" />и отображаются только в неуниверсальном интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="b00e0-128">The <see cref="M:System.Collections.IEnumerator.MoveNext" /> and <see cref="M:System.Collections.IEnumerator.Reset" /> methods do not depend on <typeparamref name="T" />, and appear only on the nongeneric interface.</span></span> <span data-ttu-id="b00e0-129"><see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> Свойство отображается в обоих интерфейсах и имеет различные возвращаемые типы.</span><span class="sxs-lookup"><span data-stu-id="b00e0-129">The <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> property appears on both interfaces, and has different return types.</span></span> <span data-ttu-id="b00e0-130">Реализуют неуниверсальный <see cref="P:System.Collections.IEnumerator.Current" /> свойство как явную реализацию интерфейса.</span><span class="sxs-lookup"><span data-stu-id="b00e0-130">Implement the nongeneric <see cref="P:System.Collections.IEnumerator.Current" /> property as an explicit interface implementation.</span></span> <span data-ttu-id="b00e0-131">Это позволяет любой потребитель неуниверсального интерфейса использовать универсальный интерфейс.</span><span class="sxs-lookup"><span data-stu-id="b00e0-131">This allows any consumer of the nongeneric interface to consume the generic interface.</span></span>  
  
<span data-ttu-id="b00e0-132">Кроме того <see cref="T:System.Collections.Generic.IEnumerator`1" /> реализует <see cref="T:System.IDisposable" />, потребуется реализовать <see cref="M:System.IDisposable.Dispose" /> метод.</span><span class="sxs-lookup"><span data-stu-id="b00e0-132">In addition, <see cref="T:System.Collections.Generic.IEnumerator`1" /> implements <see cref="T:System.IDisposable" />, which requires you to implement the <see cref="M:System.IDisposable.Dispose" /> method.</span></span> <span data-ttu-id="b00e0-133">Это позволяет закрыть подключения к базе данных или освобождения дескрипторов файлов или других аналогичных операций, при использовании других ресурсов.</span><span class="sxs-lookup"><span data-stu-id="b00e0-133">This enables you to close database connections or release file handles or similar operations when using other resources.</span></span> <span data-ttu-id="b00e0-134">Если отсутствуют дополнительные ресурсы для удаления, укажите пустой <see cref="M:System.IDisposable.Dispose" /> реализации.</span><span class="sxs-lookup"><span data-stu-id="b00e0-134">If there are no additional resources to dispose of, provide an empty <see cref="M:System.IDisposable.Dispose" /> implementation.</span></span></para></block>
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IEnumerator`1.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="F#" Value="member this.Current : 'T" Usage="System.Collections.Generic.IEnumerator&lt;'T&gt;.Current" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b00e0-135">Возвращает элемент коллекции, соответствующий текущей позиции перечислителя.</span><span class="sxs-lookup"><span data-stu-id="b00e0-135">Gets the element in the collection at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="b00e0-136">Элемент коллекции, соответствующий текущей позиции перечислителя.</span><span class="sxs-lookup"><span data-stu-id="b00e0-136">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b00e0-137"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено выполняется любое из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="b00e0-137"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="b00e0-138">Перечислитель располагается перед первым элементом в коллекции, сразу же после создания перечислителя.</span><span class="sxs-lookup"><span data-stu-id="b00e0-138">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="b00e0-139"><xref:System.Collections.IEnumerator.MoveNext%2A> необходимо вызвать, чтобы переместить перечислитель на первый элемент коллекции до считывания значения свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b00e0-139"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
-   <span data-ttu-id="b00e0-140">Последнего вызова <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, который указывает конец коллекции.</span><span class="sxs-lookup"><span data-stu-id="b00e0-140">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="b00e0-141">Перечислитель становится недействительным из-за изменения, внесенные в коллекции, например добавление, изменение или удаление элементов.</span><span class="sxs-lookup"><span data-stu-id="b00e0-141">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="b00e0-142"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="b00e0-142"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="b00e0-143"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.Generic.IEnumerator%601.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="b00e0-143"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b00e0-144">Реализация этого интерфейса требуется реализовать неуниверсальный <see cref="T:System.Collections.IEnumerator" /> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="b00e0-144">Implementing this interface requires implementing the nongeneric <see cref="T:System.Collections.IEnumerator" /> interface.</span></span> <span data-ttu-id="b00e0-145"><see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> Свойство отображается в обоих интерфейсах и имеет различные возвращаемые типы.</span><span class="sxs-lookup"><span data-stu-id="b00e0-145">The <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> property appears on both interfaces, and has different return types.</span></span> <span data-ttu-id="b00e0-146">Реализуют неуниверсальный <see cref="P:System.Collections.IEnumerator.Current" /> свойство как явную реализацию интерфейса.</span><span class="sxs-lookup"><span data-stu-id="b00e0-146">Implement the nongeneric <see cref="P:System.Collections.IEnumerator.Current" /> property as an explicit interface implementation.</span></span> <span data-ttu-id="b00e0-147">Это позволяет любой потребитель неуниверсального интерфейса использовать универсальный интерфейс.</span><span class="sxs-lookup"><span data-stu-id="b00e0-147">This allows any consumer of the nongeneric interface to consume the generic interface.</span></span></para></block>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
  </Members>
</Type>