<Type Name="GroupPrincipal" FullName="System.DirectoryServices.AccountManagement.GroupPrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0048cecbccb10acd95671993ada5688afb014dd3" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63886517" /></Metadata><TypeSignature Language="C#" Value="public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupPrincipal extends System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupPrincipal&#xA;Inherits Principal" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupPrincipal : System::DirectoryServices::AccountManagement::Principal" />
  <TypeSignature Language="F#" Value="type GroupPrincipal = class&#xA;    inherit Principal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.Principal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2faf0-101">Инкапсулирует учетные записи группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-101">Encapsulates group accounts.</span></span> <span data-ttu-id="2faf0-102">Учетные записи группы могут быть произвольными коллекциями объектов-участников или учетных записей, созданные в административных целях.</span><span class="sxs-lookup"><span data-stu-id="2faf0-102">Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2faf0-103">Инициализирует новый экземпляр класса <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="2faf0-103">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2faf0-104">Объект <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, определяющий сервер или домен, в отношении которого выполняются операции.</span><span class="sxs-lookup"><span data-stu-id="2faf0-104">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span></span></param>
        <summary><span data-ttu-id="2faf0-105">Инициализирует новый экземпляр класса <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />, используя заданный контекст.</span><span class="sxs-lookup"><span data-stu-id="2faf0-105">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class by using the specified context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2faf0-106">Учетная запись участника группы не сохраняется при его создании.</span><span class="sxs-lookup"><span data-stu-id="2faf0-106">The group principal account is not persisted when it is created.</span></span> <span data-ttu-id="2faf0-107">Чтобы сохранить учетную запись, вызовите <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2faf0-107">To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext, samAccountName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ samAccountName);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal (context, samAccountName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2faf0-108">Объект <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, определяющий сервер или домен, в отношении которого выполняются операции.</span><span class="sxs-lookup"><span data-stu-id="2faf0-108">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span></span></param>
        <param name="samAccountName"><span data-ttu-id="2faf0-109">Имя учетной записи SAM для участника.</span><span class="sxs-lookup"><span data-stu-id="2faf0-109">The SAM account name for this principal.</span></span></param>
        <summary><span data-ttu-id="2faf0-110">Инициализирует новый экземпляр класса <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> и назначает ему заданный контекст и имя учетной записи SAM.</span><span class="sxs-lookup"><span data-stu-id="2faf0-110">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class and assigns it to the specified context and SAM account name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2faf0-111">Учетная запись участника группы не сохраняется при его создании.</span><span class="sxs-lookup"><span data-stu-id="2faf0-111">The group principal account is not persisted when it is created.</span></span> <span data-ttu-id="2faf0-112">Чтобы сохранить учетную запись, вызовите <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2faf0-112">To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="groupPrincipal.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2faf0-113">Удаляет текущий экземпляр объекта <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="2faf0-113">Disposes the current instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2faf0-114">Возвращает объект участник-группа, соответствующий заданному значению удостоверения.</span><span class="sxs-lookup"><span data-stu-id="2faf0-114">Returns a group principal object that matches the specified identity value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByIdentity (context As PrincipalContext, identityValue As String) As GroupPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2faf0-115">Объект <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, определяющий сервер или домен, в отношении которого выполняются операции.</span><span class="sxs-lookup"><span data-stu-id="2faf0-115">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span></span></param>
        <param name="identityValue"><span data-ttu-id="2faf0-116">Удостоверение участника-группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-116">The identity of the group principal.</span></span> <span data-ttu-id="2faf0-117">Этот параметр может иметь любой формат, содержащийся в перечислении <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</span><span class="sxs-lookup"><span data-stu-id="2faf0-117">This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="2faf0-118">Возвращает объект участник-группа, соответствующий заданному значению удостоверения.</span><span class="sxs-lookup"><span data-stu-id="2faf0-118">Returns a group principal object that matches the specified identity value.</span></span></summary>
        <returns><span data-ttu-id="2faf0-119">Объект <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />, соответствующий значению и типу заданного удостоверения или значению null, если совпадения не найдены.</span><span class="sxs-lookup"><span data-stu-id="2faf0-119">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object that matches the specified identity value and type, or null if no matches are found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException"><span data-ttu-id="2faf0-120">Было найдено несколько объектов участников-групп, соответствующих текущему объекту-группе.</span><span class="sxs-lookup"><span data-stu-id="2faf0-120">Multiple group principal objects matching the current group object were found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::DirectoryServices::AccountManagement::IdentityType identityType, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * System.DirectoryServices.AccountManagement.IdentityType * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityType, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2faf0-121">Объект <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, определяющий сервер или домен, в отношении которого выполняются операции.</span><span class="sxs-lookup"><span data-stu-id="2faf0-121">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span></span></param>
        <param name="identityType"><span data-ttu-id="2faf0-122">Значение перечисления <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />, определяющее формат параметра <paramref name="identityValue" />.</span><span class="sxs-lookup"><span data-stu-id="2faf0-122">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the format of the <paramref name="identityValue" /> parameter.</span></span></param>
        <param name="identityValue"><span data-ttu-id="2faf0-123">Удостоверение участника-группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-123">The identity of the group principal.</span></span> <span data-ttu-id="2faf0-124">Этот параметр может иметь любой формат, содержащийся в перечислении <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</span><span class="sxs-lookup"><span data-stu-id="2faf0-124">This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="2faf0-125">Возвращает объект участник-группа, соответствующий заданному типу и значению удостоверения.</span><span class="sxs-lookup"><span data-stu-id="2faf0-125">Returns a group principal object that matches the specified identity type, and value.</span></span> <span data-ttu-id="2faf0-126">Эта версия метода <see cref="Overload:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> определяет формат значения удостоверения.</span><span class="sxs-lookup"><span data-stu-id="2faf0-126">This version of the <see cref="Overload:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> method determines the format of the identity value.</span></span></summary>
        <returns><span data-ttu-id="2faf0-127">Объект <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />, соответствующий значению и типу заданного удостоверения, или значение NULL, если соответствий не найдено.</span><span class="sxs-lookup"><span data-stu-id="2faf0-127">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> that matches the specified identity value and type, or null if no matches are found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException"><span data-ttu-id="2faf0-128">Было найдено несколько объектов участников-групп, соответствующих текущему объекту-группе.</span><span class="sxs-lookup"><span data-stu-id="2faf0-128">Multiple group principal objects matching the current group object were found.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="2faf0-129">Значение удостоверения недопустимо для значения перечисления <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</span><span class="sxs-lookup"><span data-stu-id="2faf0-129">The identity value is not a valid <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2faf0-130">Возвращает коллекцию объектов-участников, которые содержатся в группе.</span><span class="sxs-lookup"><span data-stu-id="2faf0-130">Returns a collection of the principal objects that is contained in the group.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers();" />
      <MemberSignature Language="F#" Value="member this.GetMembers : unit -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2faf0-131">Возвращает коллекцию объектов-участников, которые содержатся в группе.</span><span class="sxs-lookup"><span data-stu-id="2faf0-131">Returns a collection of the principal objects that is contained in the group.</span></span></summary>
        <returns><span data-ttu-id="2faf0-132">Объект <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />, который содержит объекты-участники, являющиеся участниками группы, или пустую коллекцию, если в группе нет участников.</span><span class="sxs-lookup"><span data-stu-id="2faf0-132">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2faf0-133">Этот метод не выполняет поиск в текущей группе рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="2faf0-133">This method does not search the current group recursively.</span></span> <span data-ttu-id="2faf0-134">Таким образом группа объектов могут быть возвращены в объект-участник коллекции.</span><span class="sxs-lookup"><span data-stu-id="2faf0-134">Therefore, group objects may be returned in the principal object collection.</span></span>  
  
 <span data-ttu-id="2faf0-135">Функция возвращает элементы независимо от контекста.</span><span class="sxs-lookup"><span data-stu-id="2faf0-135">Members are returned without respect to the context.</span></span> <span data-ttu-id="2faf0-136">Например, если контекст AD DS основаны на «CN = SpecialUsers, DC = Fabrikam, DC = com», PrincipalFindResult набор будет включать членов группы, которые находятся в папке «CN = NormalUsers, DC = Fabrikam, DC = com» Кроме того, даже если они находятся в области, которая не является частью контекст, в котором поиск.</span><span class="sxs-lookup"><span data-stu-id="2faf0-136">For example, if an AD DS context based at "CN=SpecialUsers,DC=Fabrikam,DC=com", the PrincipalFindResult set will include group members that are located under "CN=NormalUsers,DC=Fabrikam,DC=com" also, even though they fall under a scope that is not part of the context that is searched.</span></span> <span data-ttu-id="2faf0-137">Возвращенная коллекция участников также могут содержать члены, которые находятся в разных хранилищах от группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-137">The returned principal collection may also contain members that are located in a different store than the group.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (recursive As Boolean) As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers(bool recursive);" />
      <MemberSignature Language="F#" Value="member this.GetMembers : bool -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="2faf0-138">Логическое значение, указывающее, выполняется ли рекурсивный поиск по группе.</span><span class="sxs-lookup"><span data-stu-id="2faf0-138">A Boolean value that specifies whether the group is searched recursively.</span></span></param>
        <summary><span data-ttu-id="2faf0-139">Возвращает коллекцию объектов-участников, которые содержатся в группе.</span><span class="sxs-lookup"><span data-stu-id="2faf0-139">Returns a collection of the principal objects that is contained in the group.</span></span> <span data-ttu-id="2faf0-140">Если флагу рекурсии присвоено значение true, данный метод осуществляет рекурсивный поиск по текущей группе и возвращает всех вложенных участников группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-140">When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members.</span></span></summary>
        <returns><span data-ttu-id="2faf0-141">Объект <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />, который содержит объекты-участники, являющиеся участниками группы, или пустую коллекцию, если в группе нет участников.</span><span class="sxs-lookup"><span data-stu-id="2faf0-141">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2faf0-142">Возвращенная коллекция участников содержит объекты-группы, если флагу рекурсии присвоено `true`; только листовые узлы возвращаются.</span><span class="sxs-lookup"><span data-stu-id="2faf0-142">The returned principal collection does not contain group objects when the recursive flag is set to `true`; only leaf nodes are returned.</span></span> <span data-ttu-id="2faf0-143">К примеру при группу, содержащую объект-компьютер и объекту group (с использованием только субъектов-пользователей), осуществляется рекурсивный поиск, возвращаемая коллекция содержит объект-компьютер и объекты вложенной группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-143">For example, when a group that contains a computer object and a group object (with only user principals) is searched recursively, the returned collection contains the computer object and the user principal objects in the nested group.</span></span> <span data-ttu-id="2faf0-144">Поскольку объект группы не является конечным, даже в том случае, если он пуст, он не возвращается в рекурсивный поиск.</span><span class="sxs-lookup"><span data-stu-id="2faf0-144">Since the group object is not a leaf, even when it is empty, it is not returned in the recursive search.</span></span>  <span data-ttu-id="2faf0-145">Если флагу рекурсии присвоено `false`, возвращаемая коллекция может содержать объекты, группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-145">When the recursive flag is set to `false`, the returned collection may contain group objects.</span></span>  
  
 <span data-ttu-id="2faf0-146">Функция возвращает элементы независимо от контекста.</span><span class="sxs-lookup"><span data-stu-id="2faf0-146">Members are returned without respect to the context.</span></span> <span data-ttu-id="2faf0-147">Например, если контекст AD DS основаны на «CN = SpecialUsers, DC = Fabrikam, DC = com», PrincipalFindResult набор будет включать членов группы, которые находятся в папке «CN = NormalUsers, DC = Fabrikam, DC = com» Кроме того, даже если они находятся в области, которая не является частью контекст, в котором поиск.</span><span class="sxs-lookup"><span data-stu-id="2faf0-147">For example, if an AD DS context based at "CN=SpecialUsers,DC=Fabrikam,DC=com", the PrincipalFindResult set will include group members that are located under "CN=NormalUsers,DC=Fabrikam,DC=com" also, even though they fall under a scope that is not part of the context that is searched.</span></span> <span data-ttu-id="2faf0-148">Возвращенная коллекция участников также могут содержать члены, которые находятся в разных хранилищах от группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-148">The returned principal collection may also contain members that are located in a different store than the group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2faf0-149">Следующий код обеспечивает подключение к домену LDAP «fabrikam.com» с именем пользователя «администратор» и пароль, заданный для «SecretPwd123» <xref:System.DirectoryServices.AccountManagement.PrincipalContext> конструктор.</span><span class="sxs-lookup"><span data-stu-id="2faf0-149">The following code connects to the LDAP domain "fabrikam.com" with the username set to "administrator" and the password set to "SecretPwd123" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.</span></span>  
  
 <span data-ttu-id="2faf0-150">Выполняется поиск, чтобы найти группу с именем «Администраторы домена» в контейнере, указанном в <xref:System.DirectoryServices.AccountManagement.PrincipalContext> конструктор «DC = fabrikam, DC = com.»</span><span class="sxs-lookup"><span data-stu-id="2faf0-150">A search is performed to find the group that has the name "Domain Admins" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor "DC=fabrikam,DC=com."</span></span> <span data-ttu-id="2faf0-151">Если группа будет найдена, выполняется перечисление всех участников, которые являются членами этой группы, включающей рекурсивных элементов,</span><span class="sxs-lookup"><span data-stu-id="2faf0-151">If the group is found, all the principals that are members of this group, which includes recursive members, are then enumerated</span></span>  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      
                                            "fabrikam.com",   
                                            "DC=fabrikam,DC=com",   
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    foreach (Principal p in grp.GetMembers(true))  
    {  
         Console.WriteLine(p.Name);  
    }  
    grp.Dispose();  
}  
  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupScope">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupScope As Nullable(Of GroupScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; GroupScope { Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; get(); void set(Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.GroupScope : Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2faf0-152">Возвращает или задает перечисление <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" />, допускающее значение NULL, которое определяет область участника-группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-152">Gets or sets a Nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration that specifies the scope for this group principal.</span></span></summary>
        <value><span data-ttu-id="2faf0-153">Значение перечисления <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" />, допускающего значение NULL, которое определяет область группы, или значение NULL, если область не задана.</span><span class="sxs-lookup"><span data-stu-id="2faf0-153">A nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration value that specifies the scope of this group or null if no scope has been set.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2faf0-154">Приложение не может задавать для этого свойства значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2faf0-154">The application may not set this property to null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityGroup">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSecurityGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSecurityGroup" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecurityGroup As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsSecurityGroup { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityGroup : Nullable&lt;bool&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2faf0-155">Возвращает или задает логическое значение, допускающее значение NULL, которое указывает, является ли группа защищенной.</span><span class="sxs-lookup"><span data-stu-id="2faf0-155">Gets or sets a Nullable Boolean value that indicates whether the group is security-enabled.</span></span></summary>
        <value><span data-ttu-id="2faf0-156">Значение <see langword="true" />, если группа является защищенной, или значение NULL, если группа не была сохранена, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2faf0-156"><see langword="true" /> if the group is security enabled, or null if the group has not been persisted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2faf0-157">Если это свойство возвращает значение false, группе временно безопасности отключен.</span><span class="sxs-lookup"><span data-stu-id="2faf0-157">When this property returns false, the group is temporarily not security-enabled.</span></span> <span data-ttu-id="2faf0-158">Когда <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> свойство сбрасывается в значение true, группа будет иметь те же свойства, как раньше оно было задано значение false.</span><span class="sxs-lookup"><span data-stu-id="2faf0-158">When the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> property is reset to true later, the group will have the same properties as before it was set to false.</span></span>  
  
 <span data-ttu-id="2faf0-159">Если участник не был сохранен в хранилище, это свойство возвращает значение null.</span><span class="sxs-lookup"><span data-stu-id="2faf0-159">If the principal has not been persisted in the store, this property returns null.</span></span> <span data-ttu-id="2faf0-160">После сохранения участника, значение по умолчанию с включенной безопасностью зависит от хранилища.</span><span class="sxs-lookup"><span data-stu-id="2faf0-160">After the principal is persisted, the default security-enabled setting depends on the store.</span></span> <span data-ttu-id="2faf0-161">В AD DS и AD LDS хранилища отключить новые субъекты, если они являются постоянными, тогда как SAM новые субъекты сохранения.</span><span class="sxs-lookup"><span data-stu-id="2faf0-161">The AD DS and AD LDS stores disable new principals when they are persisted, whereas SAM enables new principals when they are persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2faf0-162">Приложение не может задавать для этого свойства значение NULL.</span><span class="sxs-lookup"><span data-stu-id="2faf0-162">The application may not set this property to null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.PrincipalCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As PrincipalCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::PrincipalCollection ^ Members { System::DirectoryServices::AccountManagement::PrincipalCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Members : System.DirectoryServices.AccountManagement.PrincipalCollection" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2faf0-163">Возвращает коллекцию объектов-участников, представляющих участников группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-163">Gets a collection of principal objects that represent the members of the group.</span></span></summary>
        <value><span data-ttu-id="2faf0-164">Объект <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />, который содержит объекты-участники, представляющие участников группы.</span><span class="sxs-lookup"><span data-stu-id="2faf0-164">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> object that contains the principal objects that represent the members of the group.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2faf0-165">Для групп AD DS <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> свойство включает субъектов-пользователей, которые являются членами группы из-за их primaryId атрибута.</span><span class="sxs-lookup"><span data-stu-id="2faf0-165">For AD DS groups, the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> property includes user principals that are members of the group because of their primaryId Attribute.</span></span> <span data-ttu-id="2faf0-166">Если группа содержит следующие типы членов, применяются следующие ограничения:</span><span class="sxs-lookup"><span data-stu-id="2faf0-166">When the group contains these types of members, the following restrictions apply:</span></span>  
  
-   <span data-ttu-id="2faf0-167"><xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> Метод не может использоваться для удаления элементов, которые являются частью группы из-за их primaryId атрибута.</span><span class="sxs-lookup"><span data-stu-id="2faf0-167">The <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> method cannot be used to remove members that are part of the group because of their primaryId Attribute.</span></span>  
  
-   <span data-ttu-id="2faf0-168"><xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> Метод не может использоваться для удаления элементов, которые являются частью группы из-за их primaryId атрибута.</span><span class="sxs-lookup"><span data-stu-id="2faf0-168">The <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> method cannot be used to clear members that are part of the group because of their primaryId Attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2faf0-169">Следующий код обеспечивает подключение к домену LDAP «fabrikam.com» с именем пользователя «администратор» и пароль, заданный для «SecretPwd123» <xref:System.DirectoryServices.AccountManagement.PrincipalContext> конструктор.</span><span class="sxs-lookup"><span data-stu-id="2faf0-169">The following code connects to the LDAP domain "fabrikam.com" with the username set to "administrator" and the password set to "SecretPwd123" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.</span></span>  
  
 <span data-ttu-id="2faf0-170">Выполняется поиск, чтобы найти группу с именем «Администраторы домена» в контейнере, указанном в <xref:System.DirectoryServices.AccountManagement.PrincipalContext> конструктор, «DC = fabrikam, DC = com.»</span><span class="sxs-lookup"><span data-stu-id="2faf0-170">A search is performed to find the group that has name "Domain Admins" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, "DC=fabrikam,DC=com."</span></span> <span data-ttu-id="2faf0-171">При обнаружении группы пользователя, имеющего имя «Иван Кузнецов» удаляется из группы и пользователя, имеющего имя «Jim Daly» добавляется в группу</span><span class="sxs-lookup"><span data-stu-id="2faf0-171">If the group is found, the user who has name "John Smith" is removed from the group and the user who has name "Jim Daly" is added to the group</span></span>  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       
                                            "fabrikam.com",                                                                               
                                            "DC=fabrikam,DC=com",                                                                 
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    grp.Members.Remove(ctx, IdentityType.Name, "John Smith");            
    grp.Members.Add(ctx, IdentityType.Name, "Jim Daly");  
    grp.Save();  
    grp.Dispose();  
}  
ctx.Dispose();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>