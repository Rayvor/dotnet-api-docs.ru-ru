<Type Name="ConfigureFromConfigurationOptions&lt;TOptions&gt;" FullName="Microsoft.Extensions.Options.ConfigureFromConfigurationOptions&lt;TOptions&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fe6eb22b7d0ab9fafcdb53f3c3f57aeead296ee" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73407420" /></Metadata><TypeSignature Language="C#" Value="public class ConfigureFromConfigurationOptions&lt;TOptions&gt; : Microsoft.Extensions.Options.ConfigureOptions&lt;TOptions&gt; where TOptions : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigureFromConfigurationOptions`1&lt;class TOptions&gt; extends Microsoft.Extensions.Options.ConfigureOptions`1&lt;!TOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigureFromConfigurationOptions(Of TOptions)&#xA;Inherits ConfigureOptions(Of TOptions)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOptions&gt;&#xA; where TOptions : classpublic ref class ConfigureFromConfigurationOptions : Microsoft::Extensions::Options::ConfigureOptions&lt;TOptions&gt;" />
  <TypeSignature Language="F#" Value="type ConfigureFromConfigurationOptions&lt;'Options (requires 'Options : null)&gt; = class&#xA;    inherit ConfigureOptions&lt;'Options (requires 'Options : null)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Options.ConfigurationExtensions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOptions">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Extensions.Options.ConfigureOptions&lt;TOptions&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TOptions</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TOptions"><span data-ttu-id="fe54b-101">Тип параметров для привязки.</span><span class="sxs-lookup"><span data-stu-id="fe54b-101">The type of options to bind.</span></span></typeparam>
    <summary><span data-ttu-id="fe54b-102">Настраивает экземпляр параметра с помощью метода <see cref="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)" /> для <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />.</span><span class="sxs-lookup"><span data-stu-id="fe54b-102">Configures an option instance by using <see cref="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)" /> against an <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigureFromConfigurationOptions (Microsoft.Extensions.Configuration.IConfiguration config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.IConfiguration config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (config As IConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigureFromConfigurationOptions(Microsoft::Extensions::Configuration::IConfiguration ^ config);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Options.ConfigureFromConfigurationOptions&lt;'Options (requires 'Options : null)&gt; : Microsoft.Extensions.Configuration.IConfiguration -&gt; Microsoft.Extensions.Options.ConfigureFromConfigurationOptions&lt;'Options (requires 'Options : null)&gt;" Usage="new Microsoft.Extensions.Options.ConfigureFromConfigurationOptions&lt;'Options (requires 'Options : null)&gt; config" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options.ConfigurationExtensions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="config" Type="Microsoft.Extensions.Configuration.IConfiguration" />
      </Parameters>
      <Docs>
        <param name="config"><span data-ttu-id="fe54b-103">Экземпляр класса <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />.</span><span class="sxs-lookup"><span data-stu-id="fe54b-103">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> instance.</span></span></param>
        <summary><span data-ttu-id="fe54b-104">Конструктор, принимающий экземпляр <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />, к которому выполняется привязка.</span><span class="sxs-lookup"><span data-stu-id="fe54b-104">Constructor that takes the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> instance to bind against.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
