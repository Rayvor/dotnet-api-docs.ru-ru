<Type Name="MsmqMessage&lt;T&gt;" FullName="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ed116fa17c2b1fc2f09cc275b3c01ebafccd8f5" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70632066" /></Metadata><TypeSignature Language="C#" Value="public sealed class MsmqMessage&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MsmqMessage`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MsmqMessage(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class MsmqMessage sealed" />
  <TypeSignature Language="F#" Value="type MsmqMessage&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.MessageContract(IsWrapped=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="9c57e-101">Представляет текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-101">Represents the message body.</span></span></typeparam>
    <summary><span data-ttu-id="9c57e-102">Класс <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> инкапсулирует отправляемое и получаемое сообщение службы Message Queuing (MSMQ) по каналу интеграции службы Message Queuing в/из существующего приложения Message Queuing.</span><span class="sxs-lookup"><span data-stu-id="9c57e-102">The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> class encapsulates aMessage Queuing (MSMQ) message that is sent and received, over a Message Queuing integration channel, to and from an existing Message Queuing application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-103">Класс <xref:System.ServiceModel.MsmqIntegration.MsmqMessage%601> используется для доступа к свойствам сообщения службы Message Queuing.</span><span class="sxs-lookup"><span data-stu-id="9c57e-103">Use the <xref:System.ServiceModel.MsmqIntegration.MsmqMessage%601> class to access the properties of the Message Queuing message.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#1](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#1)]
 [!code-vb[UEMsmqMessage#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c57e-104">Текст сообщения является нулевым.</span><span class="sxs-lookup"><span data-stu-id="9c57e-104">Message body is null.</span></span></exception>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqMessage (T body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MsmqIntegration.MsmqMessage`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqMessage(T body);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt; : 'T -&gt; System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;" Usage="new System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt; body" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="T" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="9c57e-105">Текст сообщения, с которым требуется инициализировать новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-105">The message body with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> class.</span></span></param>
        <summary><span data-ttu-id="9c57e-106">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> с предоставленным текстом сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-106">Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqIntegration.MsmqMessage`1" /> class with the provided message body.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-107">Сообщение службы Message Queuing (MSMQ) можно создать с текстом типа «T».</span><span class="sxs-lookup"><span data-stu-id="9c57e-107">A Message Queuing (MSMQ) message can be constructed with a body of type T.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#2](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#2)]
 [!code-vb[UEMsmqMessage#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c57e-108">Текст сообщения является нулевым.</span><span class="sxs-lookup"><span data-stu-id="9c57e-108">Message body is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Messaging.AcknowledgeTypes&gt; AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Messaging.AcknowledgeTypes&gt; AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As Nullable(Of AcknowledgeTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Messaging::AcknowledgeTypes&gt; AcknowledgeType { Nullable&lt;System::Messaging::AcknowledgeTypes&gt; get(); void set(Nullable&lt;System::Messaging::AcknowledgeTypes&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgeType : Nullable&lt;System.Messaging.AcknowledgeTypes&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Messaging.AcknowledgeTypes&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-109">Получает или задает перечисление <see cref="T:System.Messaging.AcknowledgeTypes" />, связанное с данным сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-109">Gets or sets the <see cref="T:System.Messaging.AcknowledgeTypes" /> that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-110">Перечисление <see cref="T:System.Messaging.AcknowledgeTypes" />, связанное с этим сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-110">The <see cref="T:System.Messaging.AcknowledgeTypes" /> that is associated with this message.</span></span> <span data-ttu-id="9c57e-111">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-111">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-112">Данное свойство задает тип сообщений подтверждения, запрашиваемых передающим приложением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-112">This property specifies the type of acknowledgment messages that are requested by the sending application.</span></span> <span data-ttu-id="9c57e-113">Приложение может использовать это свойство для запроса уведомления об определенных событиях.</span><span class="sxs-lookup"><span data-stu-id="9c57e-113">The application can use this property to request notification of certain events.</span></span> <span data-ttu-id="9c57e-114">Например, приложение может запрашивать уведомление о доставке сообщения в конечную очередь при извлечении сообщения, или об истечении времени ожидания до того, как сообщение извлечено или доставлено в конечную очередь.</span><span class="sxs-lookup"><span data-stu-id="9c57e-114">For example, the application might want to be notified when the message reaches its destination queue, when the message is retrieved, or if the message times out before it reaches its destination queue or is retrieved.</span></span> <span data-ttu-id="9c57e-115">Дополнительные сведения об участнике см. в разделе, посвященном перечислению <xref:System.Messaging.AcknowledgeTypes>.</span><span class="sxs-lookup"><span data-stu-id="9c57e-115">For member details, see <xref:System.Messaging.AcknowledgeTypes>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#3](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#3)]
 [!code-vb[UEMsmqMessage#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acknowledgment">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Messaging.Acknowledgment&gt; Acknowledgment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Messaging.Acknowledgment&gt; Acknowledgment" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Acknowledgment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Acknowledgment As Nullable(Of Acknowledgment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Messaging::Acknowledgment&gt; Acknowledgment { Nullable&lt;System::Messaging::Acknowledgment&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Acknowledgment : Nullable&lt;System.Messaging.Acknowledgment&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Acknowledgment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Messaging.Acknowledgment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-116">Получает объект класса <see cref="T:System.Messaging.Acknowledgment" />, связанный с этим сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-116">Gets the <see cref="T:System.Messaging.Acknowledgment" /> that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-117">Перечисление <see cref="T:System.Messaging.Acknowledgment" />, связанное с этим сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-117">The <see cref="T:System.Messaging.Acknowledgment" /> that is associated with this message.</span></span> <span data-ttu-id="9c57e-118">Используется значение по умолчанию Acknowledgement.None.</span><span class="sxs-lookup"><span data-stu-id="9c57e-118">The default value is Acknowledgement.None.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-119">При получении сообщения из очереди администрирования можно использовать это свойство для проверки состояния исходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-119">When you receive a message from an administration queue, you can use this property to verify the status of the original message.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#4](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#4)]
 [!code-vb[UEMsmqMessage#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public Uri AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ AdministrationQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationQueue : Uri with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-120">Получает или задает экземпляр класса <see cref="T:System.Uri" /> очереди администрирования, связанный с данным сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-120">Gets or sets the <see cref="T:System.Uri" /> of the administration queue that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-121">Объект класса <see cref="T:System.Uri" /> очереди администрирования, связанный с данным сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-121">The <see cref="T:System.Uri" /> of the administration queue that is associated with this message.</span></span> <span data-ttu-id="9c57e-122">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-122">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-123">Очередь администрирования, связанная с сообщением, получает все сообщения подтверждения, которые могут указывать, достигло ли исходное сообщение своей конечной очереди, а также было ли оно удалено из очереди или нет.</span><span class="sxs-lookup"><span data-stu-id="9c57e-123">The administration queue that is associated with a message will receive any acknowledgment messages that indicate whether the original message reached its destination queue and whether it has been removed from the queue.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#5](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#5)]
 [!code-vb[UEMsmqMessage#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; AppSpecific { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.AppSpecific : Nullable&lt;int&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-124">Получает или задает значение экземпляра класса <see cref="T:System.Int32" />, которое представляет все дополнительные сведения, относящиеся к приложению, связанные с данным сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-124">Gets or sets an <see cref="T:System.Int32" /> value that represents any additional application-specific information that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-125">Значение структуры <see cref="T:System.Int32" />, представляющее все дополнительные сведения, относящиеся к приложению, связанные с данным сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-125">An <see cref="T:System.Int32" /> value that represents any additional application-specific information that is associated with this message.</span></span> <span data-ttu-id="9c57e-126">Если доступ осуществляется с помощью передающего приложения, по умолчанию используется значение <see langword="null" />; если доступ осуществляется с помощью принимающего приложение, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="9c57e-126">The default value is <see langword="null" /> when accessed by the sending application and 0 when accessed by the receiving application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#6](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#6)]
 [!code-vb[UEMsmqMessage#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrivedTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; ArrivedTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; ArrivedTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.ArrivedTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArrivedTime As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; ArrivedTime { Nullable&lt;DateTime&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ArrivedTime : Nullable&lt;DateTime&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.ArrivedTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-127">Получает или задает значение структуры <see cref="T:System.DateTime" />, которое указывает, доставлено ли сообщение в конечную очередь.</span><span class="sxs-lookup"><span data-stu-id="9c57e-127">Gets or sets a <see cref="T:System.DateTime" /> that indicates when the message arrived in the destination queue.</span></span></summary>
        <value><span data-ttu-id="9c57e-128">Значение структуры <see cref="T:System.DateTime" />, указывающее, доставлено ли сообщение в конечную очередь.</span><span class="sxs-lookup"><span data-stu-id="9c57e-128">A <see cref="T:System.DateTime" /> that indicates when the message arrived in the destination queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#7](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#7)]
 [!code-vb[UEMsmqMessage#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Authenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authenticated As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Authenticated { Nullable&lt;bool&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : Nullable&lt;bool&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-129">Получает логическое значение, указывающее, прошло ли сообщение проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="9c57e-129">Gets a Boolean value that indicates whether the message is authenticated.</span></span></summary>
        <value><span data-ttu-id="9c57e-130">Имеет значение <see langword="true" />, если сообщение прошло проверку подлинности, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-130"><see langword="true" /> if the message is authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-131">Сообщение проходит проверку подлинности, если отправитель запрашивает проверку подлинности или отправляет сообщение в очередь сообщений, настройки которой предусматривают запрос на проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="9c57e-131">A message is authenticated when the sender requests authentication or sends the message to a message queue that is configured to require authentication.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#8](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#8)]
 [!code-vb[UEMsmqMessage#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public T Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Body" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Body { T get(); void set(T value); };" />
      <MemberSignature Language="F#" Value="member this.Body : 'T with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-132">Получает или задает текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-132">Gets or sets the body of the message.</span></span></summary>
        <value><span data-ttu-id="9c57e-133">Тело сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-133">The body of the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#9](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#9)]
 [!code-vb[UEMsmqMessage#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c57e-134">Текст сообщения является нулевым.</span><span class="sxs-lookup"><span data-stu-id="9c57e-134">Message body is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; BodyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; BodyType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.BodyType" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyType As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; BodyType { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.BodyType : Nullable&lt;int&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.BodyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-135">Получает или задает значение структуры <see cref="T:System.Int32" />, которое указывает тип текста сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-135">Gets or sets an <see cref="T:System.Int32" /> value that indicates the type of the body of the message.</span></span></summary>
        <value><span data-ttu-id="9c57e-136">Значение структуры <see cref="T:System.Int32" />, указывающее тип тела сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-136">An <see cref="T:System.Int32" /> value that indicates the type of the body of the message.</span></span> <span data-ttu-id="9c57e-137">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-137">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-138">Служба Message Queuing (MSMQ) распознает содержимое тела как объект или как сериализованный поток.</span><span class="sxs-lookup"><span data-stu-id="9c57e-138">Message Queuing (MSMQ) recognizes the body contents as an object or as a serialized stream.</span></span> <span data-ttu-id="9c57e-139">Свойство `BodyType` указывает тип объекта в свойстве «Body» сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-139">The `BodyType` property indicates the type of the object within the Body property of the message.</span></span>  
  
 <span data-ttu-id="9c57e-140">Средство форматирования ActiveX выполняет привязку собственных типов и объектов в теле сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-140">The ActiveX formatter performs binding between native types and the object in a message body.</span></span> <span data-ttu-id="9c57e-141">Если используется средство форматирования ActiveX, оно задает свойство `BodyType`.</span><span class="sxs-lookup"><span data-stu-id="9c57e-141">If you use the ActiveX formatter, the formatter sets the `BodyType` property for you.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#10](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#10)]
 [!code-vb[UEMsmqMessage#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationId">
      <MemberSignature Language="C#" Value="public string CorrelationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CorrelationId" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.CorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public Property CorrelationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CorrelationId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationId : string with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.CorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-142">Получает или задает объект класса <see cref="T:System.String" />, содержащий код корреляции для данного сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-142">Gets or sets a <see cref="T:System.String" /> that contains the correlation identifier for this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-143">Объект класса <see cref="T:System.String" />, содержащий код корреляции для данного сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-143">A <see cref="T:System.String" /> that contains the correlation identifier for this message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-144">При создании службой Message Queuing (MSMQ) подтверждающих сообщений и отчетов это свойство используется для указания идентификатора исходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-144">When Message Queuing (MSMQ) generates an acknowledgment or report message, it uses this property to specify the message identifier of the original message.</span></span> <span data-ttu-id="9c57e-145">Приложение, отправляющее исходное сообщение, при получении подтверждающего сообщения или отчета может получить это свойство из полученного сообщения, чтобы подтвердить идентификатор исходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-145">The application that sent the original message, when it receives an acknowledgment or report message, can get this property from the message it receives to verify the message identifier of the original message.</span></span>  
  
 <span data-ttu-id="9c57e-146">Приложение может также использовать это свойство для выполнения корреляции сообщений в собственных целях.</span><span class="sxs-lookup"><span data-stu-id="9c57e-146">The application can also use this property to correlate messages for its own purposes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#11](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#11)]
 [!code-vb[UEMsmqMessage#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationQueue">
      <MemberSignature Language="C#" Value="public Uri DestinationQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri DestinationQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.DestinationQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DestinationQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ DestinationQueue { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DestinationQueue : Uri" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.DestinationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-147">Получает объект класса <see cref="T:System.Uri" /> конечной очереди для данного сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-147">Gets the <see cref="T:System.Uri" /> of the destination queue for this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-148">Объект класса <see cref="T:System.Uri" /> конечной очереди для данного сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-148">The <see cref="T:System.Uri" /> of the destination queue for this message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#12](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#12)]
 [!code-vb[UEMsmqMessage#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Extension : byte[] with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-149">Получает или задает массив экземпляров класса <see cref="T:System.Byte" />, который содержит все дополнительные сведения, относящиеся к приложению, связанные с данным сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-149">Gets or sets an array of <see cref="T:System.Byte" /> that contains any additional, application-defined information that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-150">Массив экземпляров класса <see cref="T:System.Byte" />, который содержит все дополнительные сведения, относящиеся к приложению, связанные с данным сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-150">An array of <see cref="T:System.Byte" /> that contains any additional, application-defined information that is associated with this message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-151">Данное свойство можно использовать для хранения дополнительных сведений, например, крупных двоичных объектов.</span><span class="sxs-lookup"><span data-stu-id="9c57e-151">Use this property to store additional information, such as a large binary object.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#13](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#13)]
 [!code-vb[UEMsmqMessage#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-152">Получает объект класса <see cref="T:System.String" />, содержащий идентификатор сообщения для данного сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-152">Gets a <see cref="T:System.String" /> that contains the message identifier for this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-153">Объект класса <see cref="T:System.String" />, содержащий идентификатор сообщения для данного сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-153">A <see cref="T:System.String" /> that contains the message identifier for this message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-154">Доступ к этому свойству осуществляется только после отправки сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-154">This property can only be accessed after the message is sent.</span></span>  
  
 <span data-ttu-id="9c57e-155">Служба очереди сообщений (MSMQ) при отправке сообщения создает для него идентификатор сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-155">Message Queuing (MSMQ) generates a message identifier for the message when it is sent.</span></span> <span data-ttu-id="9c57e-156">Длина этого идентификатора — 20 байт, и он состоит из двух элементов: идентификатора GUID передающего компьютера и идентификатора сообщения, который в пределах передающего компьютера является уникальным.</span><span class="sxs-lookup"><span data-stu-id="9c57e-156">The identifier is composed of 20 bytes and includes two parts: the machine GUID of the sending computer, and a message identifier that is unique on the sending computer.</span></span> <span data-ttu-id="9c57e-157">Объединение двух этих элементов создает идентификатор сообщения, уникальный в данной сети.</span><span class="sxs-lookup"><span data-stu-id="9c57e-157">The combination of these two parts forms a message identifier that is unique on the network.</span></span>  
  
 <span data-ttu-id="9c57e-158">Служба Message Queuing создает идентификаторы для всех сообщений, включая подтверждения и сообщения-отчеты.</span><span class="sxs-lookup"><span data-stu-id="9c57e-158">Message Queuing generates message identifiers for all messages, including acknowledgment and report messages.</span></span> <span data-ttu-id="9c57e-159">Служба Message Queuing отправляет подтверждающее сообщение в ответ на доставку или сбой сообщения, отправленного приложением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-159">Message Queuing sends an acknowledgment message in response to the arrival or failure of a message that is sent by an application.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#14](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#14)]
 [!code-vb[UEMsmqMessage#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-160">Получает или задает объект класса <see cref="T:System.String" />, содержащий метку сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-160">Gets or sets a <see cref="T:System.String" /> that contains the message label.</span></span></summary>
        <value><span data-ttu-id="9c57e-161">Объект класса <see cref="T:System.String" />, содержащий метку сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-161">A <see cref="T:System.String" /> that contains the message label.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-162">Метка сообщения не имеет внутреннего смысла для службы Message Queuing (MSMQ).</span><span class="sxs-lookup"><span data-stu-id="9c57e-162">The message label has no intrinsic meaning to Message Queuing (MSMQ).</span></span> <span data-ttu-id="9c57e-163">Используется для идентификации сообщений в удобочитаемом виде.</span><span class="sxs-lookup"><span data-stu-id="9c57e-163">It is used to identify messages in a human-readable way.</span></span> <span data-ttu-id="9c57e-164">Приложения отвечают за интерпретацию меток сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-164">Your applications are responsible for interpreting message labels.</span></span> <span data-ttu-id="9c57e-165">Создавать уникальные метки сообщений необязательно.</span><span class="sxs-lookup"><span data-stu-id="9c57e-165">You do not need to make the message label unique.</span></span>  
  
 <span data-ttu-id="9c57e-166">Можно использовать метку сообщения в различных целях, например, для отображения или частичной обработки сообщений на основе их меток.</span><span class="sxs-lookup"><span data-stu-id="9c57e-166">You can use the message label for various purposes, such as displaying it or selectively processing messages based on their labels.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#15](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#15)]
 [!code-vb[UEMsmqMessage#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageType">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Messaging.MessageType&gt; MessageType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Messaging.MessageType&gt; MessageType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.MessageType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageType As Nullable(Of MessageType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Messaging::MessageType&gt; MessageType { Nullable&lt;System::Messaging::MessageType&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageType : Nullable&lt;System.Messaging.MessageType&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.MessageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Messaging.MessageType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-167">Получает объект класса <see cref="T:System.Messaging.MessageType" />, связанный с этим сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-167">Gets the <see cref="T:System.Messaging.MessageType" /> that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-168">Перечисление <see cref="T:System.Messaging.MessageType" />, связанное с этим сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-168">The <see cref="T:System.Messaging.MessageType" /> that is associated with this message.</span></span> <span data-ttu-id="9c57e-169">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-169">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-170">Служба Message Queuing (MSMQ) устанавливает это свойство при передаче сообщения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-170">Message Queuing (MSMQ) sets this property when it sends a message.</span></span> <span data-ttu-id="9c57e-171">Сообщение может относиться к одному из следующих типов:</span><span class="sxs-lookup"><span data-stu-id="9c57e-171">A message can have one of the following types:</span></span>  
  
-   <span data-ttu-id="9c57e-172"><xref:System.Messaging.MessageType.Normal>: сообщение, отправленное приложением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-172"><xref:System.Messaging.MessageType.Normal>: A message sent by an application.</span></span>  
  
-   <span data-ttu-id="9c57e-173"><xref:System.Messaging.MessageType.Acknowledgment>: сообщение, которое создается службой Message Queuing, когда приложение отправляет обычное сообщение и запрашивает подтверждение.</span><span class="sxs-lookup"><span data-stu-id="9c57e-173"><xref:System.Messaging.MessageType.Acknowledgment>: A message that Message Queuing generates when an application sends a normal message and requests an acknowledgment.</span></span> <span data-ttu-id="9c57e-174">Например, служба Message Queuing может создавать положительное или отрицательное подтверждение, чтобы указать, было ли исходное сообщение доставлено в конечную очередь, или оно было извлечено из конечной очереди принимающим приложением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-174">For example, Message Queuing can generate a positive or negative acknowledgment to indicate whether the original message arrived at its destination queue, or whether it was retrieved from the destination queue by the receiving application.</span></span> <span data-ttu-id="9c57e-175">Служба Message Queuing возвращает соответствующее подтверждающее сообщение в очередь администрирования, указанную передающим приложением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-175">Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.</span></span>  
  
-   <span data-ttu-id="9c57e-176"><xref:System.Messaging.MessageType.Report>: если при отправке сообщения приложением для локального диспетчера очереди определена очередь отчетов, служба Message Queuing создает сообщение-отчет и отправляет его в очередь отчетов.</span><span class="sxs-lookup"><span data-stu-id="9c57e-176"><xref:System.Messaging.MessageType.Report>: Whenever an application sends a message, if the local Queue Manager has a report queue defined, Message Queuing generates a report message and sends it to the report queue.</span></span> <span data-ttu-id="9c57e-177">При разрешенной трассировке служба Message Queuing передает сообщение-отчет в очередь отчетов при каждом поступлении исходного сообщения на сервер Message Queuing или убытии с этого сервера.</span><span class="sxs-lookup"><span data-stu-id="9c57e-177">If tracing is enabled, Message Queuing sends a report message to the report queue each time the original message enters or leaves a Message Queuing server.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#16](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#16)]
 [!code-vb[UEMsmqMessage#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Messaging.MessagePriority&gt; Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Messaging.MessagePriority&gt; Priority" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Nullable(Of MessagePriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::Messaging::MessagePriority&gt; Priority { Nullable&lt;System::Messaging::MessagePriority&gt; get(); void set(Nullable&lt;System::Messaging::MessagePriority&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : Nullable&lt;System.Messaging.MessagePriority&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Messaging.MessagePriority&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-178">Получает или задает перечисление <see cref="T:System.Messaging.MessagePriority" />, связанное с данным сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-178">Gets or sets the <see cref="T:System.Messaging.MessagePriority" /> that is associated with this message.</span></span></summary>
        <value><span data-ttu-id="9c57e-179">Перечисление <see cref="T:System.Messaging.MessagePriority" />, связанное с этим сообщением.</span><span class="sxs-lookup"><span data-stu-id="9c57e-179">The <see cref="T:System.Messaging.MessagePriority" /> that is associated with this message.</span></span> <span data-ttu-id="9c57e-180">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-180">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-181">Приоритет сообщения влияет на то, каким способом служба Message Queuing (MSMQ) обрабатывает сообщение во время передачи сообщения и при доставке его в конечную очередь.</span><span class="sxs-lookup"><span data-stu-id="9c57e-181">The message priority affects how Message Queuing (MSMQ) handles the message both while the message is in transit and when it reaches its destination queue.</span></span> <span data-ttu-id="9c57e-182">Сообщениям с более высоким приоритетом отдается предпочтение при маршрутизации, и они помещаются ближе к началу конечной очереди.</span><span class="sxs-lookup"><span data-stu-id="9c57e-182">A message with a higher priority is given preference during routing, and is inserted closer to the front of its destination queue.</span></span> <span data-ttu-id="9c57e-183">Сообщения, имеющие одинаковый приоритет, помещаются в конечную очередь в порядке поступления.</span><span class="sxs-lookup"><span data-stu-id="9c57e-183">Messages with the same priority are placed in the destination queue according to their arrival times.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#17](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#17)]
 [!code-vb[UEMsmqMessage#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public Uri ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ResponseQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseQueue : Uri with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-184">Получает или задает объект класса <see cref="T:System.Uri" /> очереди сообщений, который получает ответные сообщения от принимающего приложения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-184">Gets or sets the <see cref="T:System.Uri" /> of the message queue that receives response messages from the receiving application.</span></span></summary>
        <value><span data-ttu-id="9c57e-185">По умолчанию свойство имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-185">This property defaults to <see langword="null" />.</span></span>  
  
<span data-ttu-id="9c57e-186">Данное свойство идентифицирует очередь, принимающую ответные сообщения, которые принимающее приложение возвращает в передающее приложение.</span><span class="sxs-lookup"><span data-stu-id="9c57e-186">This property identifies the queue that receives response messages that the receiving application returns to the sending application.</span></span> <span data-ttu-id="9c57e-187">Передающее приложение задает очереди ответов при передаче сообщений в принимающее приложение.</span><span class="sxs-lookup"><span data-stu-id="9c57e-187">The sending application specifies the response queue when it sends messages to the receiving application.</span></span> <span data-ttu-id="9c57e-188">Передающее приложение может указать любую доступную очередь как очередь ответов.</span><span class="sxs-lookup"><span data-stu-id="9c57e-188">The sending application can specify any available queue as the response queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEMsmqMessage#18](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#18)]
 [!code-vb[UEMsmqMessage#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderId">
      <MemberSignature Language="C#" Value="public byte[] SenderId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderId" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.SenderId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderId As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderId { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderId : byte[]" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.SenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-189">Получает массив объектов структуры <see cref="T:System.Byte" />, содержащий идентификатор отправителя передающего приложения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-189">Gets an array of <see cref="T:System.Byte" /> that contains the sender identifier of the sending application.</span></span></summary>
        <value><span data-ttu-id="9c57e-190">Массив объектов структуры <see cref="T:System.Byte" />, содержащий идентификатор отправителя передающего приложения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-190">An array of <see cref="T:System.Byte" /> that contains the sender identifier of the sending application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-191">Служба Message Queuing (MSMQ) присоединяет к сообщению идентификатор отправителя передающего приложения.</span><span class="sxs-lookup"><span data-stu-id="9c57e-191">Message Queuing (MSMQ) attaches the sender identifier of the sending application to the message.</span></span> <span data-ttu-id="9c57e-192">Это свойство может использоваться принимающим приложением для выполнения проверок авторизации.</span><span class="sxs-lookup"><span data-stu-id="9c57e-192">This property can be used by the receiving application to perform authorization checks.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#19](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#19)]
 [!code-vb[UEMsmqMessage#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; SentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SentTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.SentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SentTime As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; SentTime { Nullable&lt;DateTime&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.SentTime : Nullable&lt;DateTime&gt;" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.SentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-193">Получает значение структуры <see cref="T:System.DateTime" />, указывающее, когда сообщение было отправлено диспетчером очереди на компьютере, где установлено передающее приложение.</span><span class="sxs-lookup"><span data-stu-id="9c57e-193">Gets a <see cref="T:System.DateTime" /> that indicates when the message was sent by the queue manager of the sending application's computer.</span></span></summary>
        <value><span data-ttu-id="9c57e-194">Значение структуры <see cref="T:System.DateTime" />, указывающее, когда сообщение было отправлено диспетчером очереди на компьютере, где установлено передающее приложение.</span><span class="sxs-lookup"><span data-stu-id="9c57e-194">A <see cref="T:System.DateTime" /> that indicates when the message was sent by the queue manager of the sending application's computer.</span></span> <span data-ttu-id="9c57e-195">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-195">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-196">Время отправки настраивается в соответствии с локальным временем компьютера, где установлено передающее приложение.</span><span class="sxs-lookup"><span data-stu-id="9c57e-196">The sent time is adjusted to the local time of the sending application's computer.</span></span> <span data-ttu-id="9c57e-197">Исходная очередь и конечная очереди могут находиться на компьютерах с различными часовыми поясами.</span><span class="sxs-lookup"><span data-stu-id="9c57e-197">The source and destination queues may be on computers with different time zones.</span></span>  
  
 <span data-ttu-id="9c57e-198">Значением по умолчанию для этого свойства является `null`.</span><span class="sxs-lookup"><span data-stu-id="9c57e-198">The default for this property is `null`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#20](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#20)]
 [!code-vb[UEMsmqMessage#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MsmqIntegration.MsmqMessage`1.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; TimeToReachQueue { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToReachQueue : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.ServiceModel.MsmqIntegration.MsmqMessage&lt;'T&gt;.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c57e-199">Получает или задает объект структуры <see cref="T:System.TimeSpan" />, который указывает максимальное время, в течение которого сообщение должно быть доставлено в конечную очередь.</span><span class="sxs-lookup"><span data-stu-id="9c57e-199">Gets or sets a <see cref="T:System.TimeSpan" /> that indicates the maximum amount of time allowed for the message to reach the destination queue.</span></span></summary>
        <value><span data-ttu-id="9c57e-200">Объект структуры <see cref="T:System.TimeSpan" />, указывающий максимальное время, в течение которого сообщение должно быть доставлено в конечную очередь.</span><span class="sxs-lookup"><span data-stu-id="9c57e-200">A <see cref="T:System.TimeSpan" /> that indicates the maximum amount of time allowed for the message to reach the destination queue.</span></span> <span data-ttu-id="9c57e-201">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c57e-201">May be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c57e-202">При истечении интервала времени, заданного в этом свойстве, до момента достижения сообщением конечной очереди, служба Message Queuing (MSMQ) отклоняет это сообщение одним из двух способов.</span><span class="sxs-lookup"><span data-stu-id="9c57e-202">If the interval specified by this property expires before the message reaches its destination queue, Message Queuing (MSMQ) discards the message in one of two ways.</span></span> <span data-ttu-id="9c57e-203">Если свойство <xref:System.Messaging.Message.UseDeadLetterQueue%2A> сообщения имеет значение `true`, это сообщение будет передано в очередь недоставленных сообщений.</span><span class="sxs-lookup"><span data-stu-id="9c57e-203">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="9c57e-204">В противном случае сообщение будет удалено.</span><span class="sxs-lookup"><span data-stu-id="9c57e-204">Otherwise, the message is dropped.</span></span>  
  
 <span data-ttu-id="9c57e-205">Значением по умолчанию для этого свойства является `null`.</span><span class="sxs-lookup"><span data-stu-id="9c57e-205">The default for this property is `null`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMsmqMessage#21](~/samples/snippets/csharp/VS_Snippets_CFX/uemsmqmessage/cs/program.cs#21)] 
 [!code-vb[UEMsmqMessage#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemsmqmessage/vb/program.vb#21)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
