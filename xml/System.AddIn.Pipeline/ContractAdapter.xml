<Type Name="ContractAdapter" FullName="System.AddIn.Pipeline.ContractAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b00ee80d8f5c5f0a2f9aa662d6dc1805c53308a9" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63914466" /></Metadata><TypeSignature Language="C#" Value="public static class ContractAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContractAdapter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractAdapter abstract sealed" />
  <TypeSignature Language="F#" Value="type ContractAdapter = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет методы для совместного доступа к надстройкам их реадаптирования.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс можно использовать, чтобы предоставить другой узел, который не поддерживает же конвейера, надстройки надстройка (особенно, другой узел, который не имеют одинаковые узла представлением надстройки).  
  
 Если вам необходимо адаптировать активации надстройки из его представления главного приложения к контракту, используйте <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> метод.  
  
 Если у экземпляр контракта и вам необходимо преобразовать его в представление главного приложения, используйте <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> метод.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="ContractToViewAdapter&lt;TView&gt;">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает серверное представление надстройки, если в указанном месте найден подходящий адаптер сайта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContractToViewAdapter&lt;TView&gt;">
      <MemberSignature Language="C#" Value="public static TView ContractToViewAdapter&lt;TView&gt; (System.AddIn.Pipeline.ContractHandle contract, System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TView ContractToViewAdapter&lt;TView&gt;(class System.AddIn.Pipeline.ContractHandle contract, valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter(Of TView) (contract As ContractHandle, location As PipelineStoreLocation) As TView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView&gt;&#xA; static TView ContractToViewAdapter(System::AddIn::Pipeline::ContractHandle ^ contract, System::AddIn::Hosting::PipelineStoreLocation location);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Pipeline.ContractHandle * System.AddIn.Hosting.PipelineStoreLocation -&gt; 'View" Usage="System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter (contract, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Pipeline.ContractHandle" />
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <typeparam name="TView">Тип, определяющий серверное представление надстройки.</typeparam>
        <param name="contract">Дескриптор к контракту, используемый надстройкой, предполагаемой для совместного доступа.</param>
        <param name="location">База приложения сайта.</param>
        <summary>Получает серверное представление надстройки, если найден подходящий адаптер сайта в месте, указанном значением из перечисления <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" />.</summary>
        <returns>Серверное представление надстройки, находящейся в совместном доступе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом случае сущность имеет экземпляр контракта и стремится адаптировать его к конкретному представлению. Этот метод позволяет запрашивать систему, находить и инициализировать адаптер для преобразования в это представление.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="location" /> недопустим.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContractToViewAdapter&lt;TView&gt;">
      <MemberSignature Language="C#" Value="public static TView ContractToViewAdapter&lt;TView&gt; (System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TView ContractToViewAdapter&lt;TView&gt;(class System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter(Of TView) (contract As ContractHandle, pipelineRoot As String) As TView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView&gt;&#xA; static TView ContractToViewAdapter(System::AddIn::Pipeline::ContractHandle ^ contract, System::String ^ pipelineRoot);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Pipeline.ContractHandle * string -&gt; 'View" Usage="System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter (contract, pipelineRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Pipeline.ContractHandle" />
        <Parameter Name="pipelineRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TView">Тип, определяющий серверное представление надстройки.</typeparam>
        <param name="contract">Дескриптор к контракту, используемый надстройкой, предполагаемой для совместного доступа.</param>
        <param name="pipelineRoot">Путь к хранилищу надстройки.</param>
        <summary>Получает серверное представление надстройки, если найден подходящий адаптер сайта в месте, указанном путем.</summary>
        <returns>Серверное представление надстройки, находящейся в совместном доступе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом случае сущность имеет экземпляр контракта и стремится адаптировать его к конкретному представлению. Этот метод позволяет запрашивать систему, находить и инициализировать адаптер для преобразования в это представление.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Pipeline.ContractHandle ViewToContractAdapter (object view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Pipeline.ContractHandle ViewToContractAdapter(object view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (view As Object) As ContractHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Pipeline::ContractHandle ^ ViewToContractAdapter(System::Object ^ view);" />
      <MemberSignature Language="F#" Value="static member ViewToContractAdapter : obj -&gt; System.AddIn.Pipeline.ContractHandle" Usage="System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Pipeline.ContractHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="view">Серверное представление надстройки активированное системой из текущего приложения домена.</param>
        <summary>Возвращает дескриптор контракту для предоставленного серверного представления надстройки.</summary>
        <returns>Дескриптор контракта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом случае исходная сущность (узел) имеет надстройки, который хочет использовать совместно с целевой сущностью (другой узел).  
  
 Этот метод позволяет получить дескриптор к контракту, созданному для исходной сущности системой надстройки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="view" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>