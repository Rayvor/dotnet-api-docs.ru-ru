<Type Name="ContractHandle" FullName="System.AddIn.Pipeline.ContractHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="402a3785f3b56febdc5450f8937c3f137b92c243" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70581275" /></Metadata><TypeSignature Language="C#" Value="public class ContractHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractHandle : IDisposable" />
  <TypeSignature Language="F#" Value="type ContractHandle = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5e55b-101">Предоставляет методы, для контроля времени жизни надстройки.</span><span class="sxs-lookup"><span data-stu-id="5e55b-101">Provides methods that control the lifetime of an add-in.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e55b-102">Так как модель надстройки предоставляет возможность взаимодействия между доменами приложений и между процессами, она не может полагаться на то, что сборщик мусора сможет их восстановить.</span><span class="sxs-lookup"><span data-stu-id="5e55b-102">Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</span></span> <span data-ttu-id="5e55b-103">Этот класс предоставляет механизм подсчета ссылок для надстройки путем получения маркера времени существования его контракту.</span><span class="sxs-lookup"><span data-stu-id="5e55b-103">This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</span></span>  
  
 <span data-ttu-id="5e55b-104">При создании <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> объекта он вызывает метод для контракта, который передается в конструктор. <xref:System.AddIn.Pipeline.ContractHandle></span><span class="sxs-lookup"><span data-stu-id="5e55b-104">When a <xref:System.AddIn.Pipeline.ContractHandle> object is constructed, it calls the <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> method on the contract that is passed to the constructor.</span></span> <span data-ttu-id="5e55b-105">Когда объект уничтожается или завершается, он <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> вызывает метод в контракте, который удаляет его удержание в контракте. <xref:System.AddIn.Pipeline.ContractHandle></span><span class="sxs-lookup"><span data-stu-id="5e55b-105">When the <xref:System.AddIn.Pipeline.ContractHandle> object is disposed or finalized, it calls the <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> method on the contract, which removes its hold on the contract.</span></span>  
  
 <span data-ttu-id="5e55b-106">Адаптеры реализуют контракт.</span><span class="sxs-lookup"><span data-stu-id="5e55b-106">Adapters implement the contract.</span></span> <span data-ttu-id="5e55b-107">Класс <xref:System.AddIn.Pipeline.ContractHandle> предназначен для использования в адаптере "контракт-представление", чтобы помочь разработчикам конвейера управлять жизненным циклом контракта, который адаптируется.</span><span class="sxs-lookup"><span data-stu-id="5e55b-107">The <xref:System.AddIn.Pipeline.ContractHandle> class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</span></span> <span data-ttu-id="5e55b-108">Как правило, экземпляр этого класса создается во время создания класса адаптера и хранится в поле экземпляра адаптера.</span><span class="sxs-lookup"><span data-stu-id="5e55b-108">Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</span></span> <span data-ttu-id="5e55b-109">При сборе <xref:System.AddIn.Pipeline.ContractHandle> мусора для класса адаптера также собирается объект, <xref:System.AddIn.Pipeline.ContractHandle> и объект будет отзывать маркер времени существования в контракте.</span><span class="sxs-lookup"><span data-stu-id="5e55b-109">When the adapter class is garbage-collected, the <xref:System.AddIn.Pipeline.ContractHandle> object will also be collected and the <xref:System.AddIn.Pipeline.ContractHandle> object will revoke the lifetime token on the contract.</span></span>  
  
 <span data-ttu-id="5e55b-110">Рекомендуется, чтобы адаптеры с представлением по контракту наследовались от <xref:System.AddIn.Pipeline.ContractBase> класса.</span><span class="sxs-lookup"><span data-stu-id="5e55b-110">It is recommended that your view-to-contract adapters inherit from the <xref:System.AddIn.Pipeline.ContractBase> class.</span></span> <span data-ttu-id="5e55b-111">Затем можно использовать реализацию по умолчанию для членов <xref:System.AddIn.Contract.IContract>, что означает необходимость реализации только членов конкретного контракта.</span><span class="sxs-lookup"><span data-stu-id="5e55b-111">You can then use a default implementation for the members of <xref:System.AddIn.Contract.IContract>, which means you need to implement only the members of your specific contract.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e55b-112">В следующем примере показано, как задать маркер маркера времени существования в адаптере "контракт-представление" на стороне надстройки конвейера.</span><span class="sxs-lookup"><span data-stu-id="5e55b-112">The following example shows how to set the lifetime token handle in a contract-to-view adapter on the add-in side of a pipeline.</span></span>  
  
 [!code-csharp[AddinP2HostSideAdapters#2](~/samples/snippets/csharp/VS_Snippets_CLR/AddInP2HostSideAdapters/cs/Calc2ContractToViewHostSideAdapter.cs#2)]
 [!code-vb[AddinP2HostSideAdapters#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInP2HostSideAdapters/vb/Calc2ContractToViewHostSideAdapter.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractHandle (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contract As IContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractHandle(System::AddIn::Contract::IContract ^ contract);" />
      <MemberSignature Language="F#" Value="new System.AddIn.Pipeline.ContractHandle : System.AddIn.Contract.IContract -&gt; System.AddIn.Pipeline.ContractHandle" Usage="new System.AddIn.Pipeline.ContractHandle contract" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="5e55b-113">Контракт для использования в конвейере.</span><span class="sxs-lookup"><span data-stu-id="5e55b-113">The contract to use in the pipeline.</span></span></param>
        <summary><span data-ttu-id="5e55b-114">Инициализирует новый экземпляр класса <see cref="T:System.AddIn.Pipeline.ContractHandle" />.</span><span class="sxs-lookup"><span data-stu-id="5e55b-114">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e55b-115"><paramref name="contract" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e55b-115"><paramref name="contract" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainOwner">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IContract AppDomainOwner (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IContract AppDomainOwner(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppDomainOwner (domain As AppDomain) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::IContract ^ AppDomainOwner(AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="static member AppDomainOwner : AppDomain -&gt; System.AddIn.Contract.IContract" Usage="System.AddIn.Pipeline.ContractHandle.AppDomainOwner domain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="5e55b-116">Домен приложения для проверки.</span><span class="sxs-lookup"><span data-stu-id="5e55b-116">The application domain to check.</span></span></param>
        <summary><span data-ttu-id="5e55b-117">Возвращает экземпляр адаптера надстройки при создании домена приложения.</span><span class="sxs-lookup"><span data-stu-id="5e55b-117">Gets the instance of the add-in-side adapter when the application domain was created.</span></span></summary>
        <returns><span data-ttu-id="5e55b-118">Объект <see cref="T:System.AddIn.Contract.IContract" />, представляющий владельца домена приложения.</span><span class="sxs-lookup"><span data-stu-id="5e55b-118">An <see cref="T:System.AddIn.Contract.IContract" /> object that represents the owner of the application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e55b-119">Адаптеры надстройки вводятся как <xref:System.AddIn.Contract.IContract>.</span><span class="sxs-lookup"><span data-stu-id="5e55b-119">The add-in-side adapters are typed as <xref:System.AddIn.Contract.IContract>.</span></span>  
  
 <span data-ttu-id="5e55b-120">Если домен приложения был ранее создан пользователем, владелец отсутствует.</span><span class="sxs-lookup"><span data-stu-id="5e55b-120">If the application domain was previously created by a user, there is no owner.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e55b-121">Свойство <paramref name="domain" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e55b-121"><paramref name="domain" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Contract::IContract ^ Contract { System::AddIn::Contract::IContract ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contract : System.AddIn.Contract.IContract" Usage="System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e55b-122">Возвращает контракт, используемый конвейером.</span><span class="sxs-lookup"><span data-stu-id="5e55b-122">Gets the contract used by a pipeline.</span></span></summary>
        <value><span data-ttu-id="5e55b-123">Контракт, полученный из <see cref="T:System.AddIn.Contract.IContract" />.</span><span class="sxs-lookup"><span data-stu-id="5e55b-123">The contract, which is derived from <see cref="T:System.AddIn.Contract.IContract" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractOwnsAppDomain">
      <MemberSignature Language="C#" Value="public static bool ContractOwnsAppDomain (System.AddIn.Contract.IContract contract, AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContractOwnsAppDomain(class System.AddIn.Contract.IContract contract, class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractOwnsAppDomain (contract As IContract, domain As AppDomain) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContractOwnsAppDomain(System::AddIn::Contract::IContract ^ contract, AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="static member ContractOwnsAppDomain : System.AddIn.Contract.IContract * AppDomain -&gt; bool" Usage="System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain (contract, domain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="5e55b-124">Контракт для проверки.</span><span class="sxs-lookup"><span data-stu-id="5e55b-124">The contract to check.</span></span></param>
        <param name="domain"><span data-ttu-id="5e55b-125">Домен приложения для проверки.</span><span class="sxs-lookup"><span data-stu-id="5e55b-125">The application domain to check.</span></span></param>
        <summary><span data-ttu-id="5e55b-126">Определяет владеет ли выбранный контракт доменом приложения.</span><span class="sxs-lookup"><span data-stu-id="5e55b-126">Determines whether an application domain is owned by the specified contract.</span></span></summary>
        <returns><span data-ttu-id="5e55b-127"><see langword="true" />если контракт владеет доменом приложения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e55b-127"><see langword="true" /> if the contract owns the application domain; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e55b-128">Значение параметра <paramref name="contract" /> или <paramref name="domain" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e55b-128"><paramref name="contract" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e55b-129">Отменяет маркер времени жизни на контракте.</span><span class="sxs-lookup"><span data-stu-id="5e55b-129">Revokes the lifetime token on a contract.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="contractHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e55b-130">Отменяет маркер времени жизни на контракте, без учета ввода.</span><span class="sxs-lookup"><span data-stu-id="5e55b-130">Revokes the lifetime token on a contract, regardless of input.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="contractHandle.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="5e55b-131">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="5e55b-131"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5e55b-132">Отменяет маркер времени жизни на контракте без учета ввода и дополнительно высвобождает управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="5e55b-132">Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ContractHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ContractHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="contractHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e55b-133">Освобождает ресурсы, связанные с экземпляром <see cref="T:System.AddIn.Pipeline.ContractHandle" />.</span><span class="sxs-lookup"><span data-stu-id="5e55b-133">Releases the resources associated with the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e55b-134">Этот метод переопределяет метод <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e55b-134">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e55b-135">Код приложения не должен вызывать этот метод; <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> метод объекта автоматически вызывается во время сборки мусора, если окончательное завершение сборщика мусора не было отключено вызовом <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> метода.</span><span class="sxs-lookup"><span data-stu-id="5e55b-135">Application code should not call this method; an object's <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5e55b-136">При вызове сборщиком мусора этот метод вызывает <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> метод.</span><span class="sxs-lookup"><span data-stu-id="5e55b-136">When called by the garbage collector, this method calls the <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
