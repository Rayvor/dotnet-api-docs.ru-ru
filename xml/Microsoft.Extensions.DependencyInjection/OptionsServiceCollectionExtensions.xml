<Type Name="OptionsServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9917f3ba2671e66b35fd391cc0cc68460c44b3c" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72416606" /></Metadata><TypeSignature Language="C#" Value="public static class OptionsServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit OptionsServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module OptionsServiceCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class OptionsServiceCollectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type OptionsServiceCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Методы расширения для добавления служб параметров в контейнер внедрения зависимостей.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOptions">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddOptions (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddOptions(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOptions (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <summary>Добавляет службы, необходимые для параметров использования.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOptions&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt; AddOptions&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Options.OptionsBuilder`1&lt;!!TOptions&gt; AddOptions&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOptions(Of TOptions As Class) (services As IServiceCollection) As OptionsBuilder(Of TOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Options::OptionsBuilder&lt;TOptions&gt; ^ AddOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member AddOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.Options.OptionsBuilder&lt;'Options (requires 'Options : null)&gt; (requires 'Options : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">Настраиваемый тип параметров.</typeparam>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <summary>Возвращает построитель параметров, который перенаправляет вызовы настройки для того же <typeparamref name="TOptions" /> в базовую коллекцию служб.</summary>
        <returns><see cref="T:Microsoft.Extensions.Options.OptionsBuilder`1" /> для объединения вызовов настройки в цепочку внутри него.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOptions&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt; AddOptions&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Options.OptionsBuilder`1&lt;!!TOptions&gt; AddOptions&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOptions(Of TOptions As Class) (services As IServiceCollection, name As String) As OptionsBuilder(Of TOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Options::OptionsBuilder&lt;TOptions&gt; ^ AddOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member AddOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection * string -&gt; Microsoft.Extensions.Options.OptionsBuilder&lt;'Options (requires 'Options : null)&gt; (requires 'Options : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions (services, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Options.OptionsBuilder&lt;TOptions&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">Настраиваемый тип параметров.</typeparam>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <param name="name">Имя экземпляра параметров.</param>
        <summary>Возвращает построитель параметров, который перенаправляет вызовы настройки для того же именованного <typeparamref name="TOptions" /> в базовую коллекцию служб.</summary>
        <returns><see cref="T:Microsoft.Extensions.Options.OptionsBuilder`1" /> для объединения вызовов настройки в цепочку внутри него.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;!!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Configure(Of TOptions As Class) (services As IServiceCollection, configureOptions As Action(Of TOptions)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Configure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;TOptions&gt; ^ configureOptions);" />
      <MemberSignature Language="F#" Value="static member Configure : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure (services, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configureOptions" Type="System.Action&lt;TOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">Настраиваемый тип параметров.</typeparam>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <param name="configureOptions">Действие, используемое для настройки параметров.</param>
        <summary>Регистрирует действие, используемое для настройки определенного типа параметров.
Примечание. Они выполняются до всех <seealso cref="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Action&lt;TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`1&lt;!!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Configure(Of TOptions As Class) (services As IServiceCollection, name As String, configureOptions As Action(Of TOptions)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Configure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;TOptions&gt; ^ configureOptions);" />
      <MemberSignature Language="F#" Value="static member Configure : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure (services, name, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="configureOptions" Type="System.Action&lt;TOptions&gt;" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">Настраиваемый тип параметров.</typeparam>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <param name="name">Имя экземпляра параметров.</param>
        <param name="configureOptions">Действие, используемое для настройки параметров.</param>
        <summary>Регистрирует действие, используемое для настройки определенного типа параметров.
Примечание. Они выполняются до всех <seealso cref="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAll&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureAll&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureAll&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;!!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureAll``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureAll(Of TOptions As Class) (services As IServiceCollection, configureOptions As Action(Of TOptions)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ ConfigureAll(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;TOptions&gt; ^ configureOptions);" />
      <MemberSignature Language="F#" Value="static member ConfigureAll : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureAll (services, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="configureOptions" Type="System.Action&lt;TOptions&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">Настраиваемый тип параметров.</typeparam>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <param name="configureOptions">Действие, используемое для настройки параметров.</param>
        <summary>Регистрирует действие, используемое для настройки всех экземпляров определенного типа параметров.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureOptions">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureOptions (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, object configureInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureOptions(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object configureInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureOptions (services As IServiceCollection, configureInstance As Object) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ ConfigureOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::Object ^ configureInstance);" />
      <MemberSignature Language="F#" Value="static member ConfigureOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureOptions (services, configureInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="configureInstance" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <param name="configureInstance">Экземпляр, который будет настраивать параметры.</param>
        <summary>Регистрирует объект, для которого будут зарегистрированы все его I[Post]ConfigureOptions.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureOptions">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureOptions (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Type configureType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureOptions(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Type configureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureOptions (services As IServiceCollection, configureType As Type) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ ConfigureOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Type ^ configureType);" />
      <MemberSignature Language="F#" Value="static member ConfigureOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureOptions (services, configureType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="configureType" Type="System.Type" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <param name="configureType">Тип, который будет настраивать параметры.</param>
        <summary>Регистрирует тип, для которого будут зарегистрированы все его I[Post]ConfigureOptions.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureOptions&lt;TConfigureOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureOptions&lt;TConfigureOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TConfigureOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureOptions&lt;class TConfigureOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureOptions``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureOptions(Of TConfigureOptions As Class) (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TConfigureOptions&gt;&#xA; where TConfigureOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ ConfigureOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberSignature Language="F#" Value="static member ConfigureOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'ConfigureOptions : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.ConfigureOptions services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TConfigureOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TConfigureOptions">Тип, который будет настраивать параметры.</typeparam>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <summary>Регистрирует тип, для которого будут зарегистрированы все его I[Post]ConfigureOptions.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostConfigure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;!!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostConfigure(Of TOptions As Class) (services As IServiceCollection, configureOptions As Action(Of TOptions)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ PostConfigure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;TOptions&gt; ^ configureOptions);" />
      <MemberSignature Language="F#" Value="static member PostConfigure : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigure (services, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="configureOptions" Type="System.Action&lt;TOptions&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">Настраиваемый тип параметров.</typeparam>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <param name="configureOptions">Действие, используемое для настройки параметров.</param>
        <summary>Регистрирует действие, используемое для инициализации определенного типа параметров.
Примечание. Они выполняются после всех <seealso cref="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostConfigure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, Action&lt;TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, class System.Action`1&lt;!!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostConfigure(Of TOptions As Class) (services As IServiceCollection, name As String, configureOptions As Action(Of TOptions)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ PostConfigure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::String ^ name, Action&lt;TOptions&gt; ^ configureOptions);" />
      <MemberSignature Language="F#" Value="static member PostConfigure : Microsoft.Extensions.DependencyInjection.IServiceCollection * string * Action&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigure (services, name, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="configureOptions" Type="System.Action&lt;TOptions&gt;" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">Настраиваемый тип параметров.</typeparam>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <param name="name">Имя экземпляра параметров.</param>
        <param name="configureOptions">Действие, используемое для настройки параметров.</param>
        <summary>Регистрирует действие, используемое для настройки определенного типа параметров.
Примечание. Они выполняются после всех <seealso cref="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostConfigureAll&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigureAll&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection PostConfigureAll&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;!!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigureAll``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostConfigureAll(Of TOptions As Class) (services As IServiceCollection, configureOptions As Action(Of TOptions)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ PostConfigureAll(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;TOptions&gt; ^ configureOptions);" />
      <MemberSignature Language="F#" Value="static member PostConfigureAll : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.PostConfigureAll (services, configureOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="configureOptions" Type="System.Action&lt;TOptions&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">Настраиваемый тип параметров.</typeparam>
        <param name="services">Коллекция <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, в которую добавляются службы.</param>
        <param name="configureOptions">Действие, используемое для настройки параметров.</param>
        <summary>Регистрирует действие, используемое для последующей настройки всех экземпляров определенного типа параметров.
Примечание. Они выполняются после всех <seealso cref="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />.</summary>
        <returns><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> для объединения дополнительных вызовов в цепочку.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
