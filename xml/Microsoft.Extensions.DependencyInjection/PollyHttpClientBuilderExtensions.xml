<Type Name="PollyHttpClientBuilderExtensions" FullName="Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f979ba910c7374d936f540d70f1db109c0912793" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75124734" /></Metadata><TypeSignature Language="C#" Value="public static class PollyHttpClientBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PollyHttpClientBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module PollyHttpClientBuilderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class PollyHttpClientBuilderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type PollyHttpClientBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Методы расширения для настройки обработчиков сообщений <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> в рамках конвейера обработчиков сообщений <see cref="T:System.Net.Http.HttpClient" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPolicyHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt; policy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt; policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPolicyHandler (builder As IHttpClientBuilder, policy As IAsyncPolicy(Of HttpResponseMessage)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddPolicyHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ policy);" />
      <MemberSignature Language="F#" Value="static member AddPolicyHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler (builder, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="policy" Type="Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
        <param name="policy"><see cref="T:Polly.IAsyncPolicy`1" />.</param>
        <summary>Добавляет обработчик <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />, который будет применять при выполнении запроса предоставленную политику <see cref="T:Polly.IAsyncPolicy`1" />.</summary>
        <returns>Интерфейс <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />, который можно использовать для настройки клиента.</returns>
        <remarks><para>
Рекомендации по настройке политик см. в разделе примечания на <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicyHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;IServiceProvider,System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; policySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`3&lt;class System.IServiceProvider, class System.Net.Http.HttpRequestMessage, class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt;&gt; policySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.IServiceProvider,System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPolicyHandler (builder As IHttpClientBuilder, policySelector As Func(Of IServiceProvider, HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage))) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddPolicyHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;IServiceProvider ^, System::Net::Http::HttpRequestMessage ^, Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^&gt; ^ policySelector);" />
      <MemberSignature Language="F#" Value="static member AddPolicyHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;IServiceProvider, System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler (builder, policySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="policySelector" Type="System.Func&lt;System.IServiceProvider,System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
        <param name="policySelector">Выбирает политику <see cref="T:Polly.IAsyncPolicy`1" />, которую следует применить к текущему запросу.</param>
        <summary>Добавляет обработчик <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />, который будет применять при выполнении запроса политику, возвращенную интерфейсом <paramref name="policySelector" />.</summary>
        <returns>Интерфейс <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />, который можно использовать для настройки клиента.</returns>
        <remarks><para>
Рекомендации по настройке политик см. в разделе примечания на <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicyHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; policySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`2&lt;class System.Net.Http.HttpRequestMessage, class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt;&gt; policySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPolicyHandler (builder As IHttpClientBuilder, policySelector As Func(Of HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage))) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddPolicyHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;System::Net::Http::HttpRequestMessage ^, Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^&gt; ^ policySelector);" />
      <MemberSignature Language="F#" Value="static member AddPolicyHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler (builder, policySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="policySelector" Type="System.Func&lt;System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
        <param name="policySelector">Выбирает политику <see cref="T:Polly.IAsyncPolicy`1" />, которую следует применить к текущему запросу.</param>
        <summary>Добавляет обработчик <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />, который будет применять при выполнении запроса политику, возвращенную интерфейсом <paramref name="policySelector" />.</summary>
        <returns>Интерфейс <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />, который можно использовать для настройки клиента.</returns>
        <remarks><para>
Рекомендации по настройке политик см. в разделе примечания на <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicyHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;IServiceProvider,System.Net.Http.HttpRequestMessage,string,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; policyFactory, Func&lt;System.Net.Http.HttpRequestMessage,string&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`4&lt;class System.IServiceProvider, class System.Net.Http.HttpRequestMessage, string, class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt;&gt; policyFactory, class System.Func`2&lt;class System.Net.Http.HttpRequestMessage, string&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.IServiceProvider,System.Net.Http.HttpRequestMessage,System.String,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}},System.Func{System.Net.Http.HttpRequestMessage,System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPolicyHandler (builder As IHttpClientBuilder, policyFactory As Func(Of IServiceProvider, HttpRequestMessage, String, IAsyncPolicy(Of HttpResponseMessage)), keySelector As Func(Of HttpRequestMessage, String)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddPolicyHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;IServiceProvider ^, System::Net::Http::HttpRequestMessage ^, System::String ^, Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^&gt; ^ policyFactory, Func&lt;System::Net::Http::HttpRequestMessage ^, System::String ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member AddPolicyHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;IServiceProvider, System.Net.Http.HttpRequestMessage, string, Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; * Func&lt;System.Net.Http.HttpRequestMessage, string&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler (builder, policyFactory, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="policyFactory" Type="System.Func&lt;System.IServiceProvider,System.Net.Http.HttpRequestMessage,System.String,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
        <Parameter Name="keySelector" Type="System.Func&lt;System.Net.Http.HttpRequestMessage,System.String&gt;" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
        <param name="policyFactory">Выбирает политику <see cref="T:Polly.IAsyncPolicy`1" />, которую следует применить к текущему запросу, в соответствии с выбранным ключом.</param>
        <param name="keySelector">Делегат, используемый для создания ключа политики на основе <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
        <summary>Добавляет обработчик <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />, который будет применять при выполнении запроса политику, возвращенную в результате выполнения предоставленной логики выбора ключа <paramref name="keySelector" /> и <paramref name="policyFactory" />.</summary>
        <returns>Интерфейс <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />, который можно использовать для настройки клиента.</returns>
        <remarks><para>
Ключ, созданный <paramref name="policyFactory" />, сначала используется для поиска существующих политик из Иполицирегистри. Если политика не существует в реестре, создайте новую политику с <paramref name="policyFactory" /> и добавьте ее в Иполицирегистри.
            </para>
          <para>
Рекомендации по настройке политик см. в разделе примечания на <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicyHandlerFromRegistry">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandlerFromRegistry (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;Polly.Registry.IReadOnlyPolicyRegistry&lt;string&gt;,System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; policySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandlerFromRegistry(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`3&lt;class Polly.Registry.IReadOnlyPolicyRegistry`1&lt;string&gt;, class System.Net.Http.HttpRequestMessage, class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt;&gt; policySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandlerFromRegistry(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{Polly.Registry.IReadOnlyPolicyRegistry{System.String},System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPolicyHandlerFromRegistry (builder As IHttpClientBuilder, policySelector As Func(Of IReadOnlyPolicyRegistry(Of String), HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage))) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddPolicyHandlerFromRegistry(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;Polly::Registry::IReadOnlyPolicyRegistry&lt;System::String ^&gt; ^, System::Net::Http::HttpRequestMessage ^, Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^&gt; ^ policySelector);" />
      <MemberSignature Language="F#" Value="static member AddPolicyHandlerFromRegistry : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;Polly.Registry.IReadOnlyPolicyRegistry&lt;string&gt;, System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandlerFromRegistry (builder, policySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="policySelector" Type="System.Func&lt;Polly.Registry.IReadOnlyPolicyRegistry&lt;System.String&gt;,System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
        <param name="policySelector">Выбирает политику <see cref="T:Polly.IAsyncPolicy`1" />, которую следует применить к текущему запросу.</param>
        <summary>Добавляет обработчик <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />, который будет применять при выполнении запроса политику, возвращенную интерфейсом <see cref="T:Polly.Registry.IReadOnlyPolicyRegistry`1" />.</summary>
        <returns>Интерфейс <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />, который можно использовать для настройки клиента.</returns>
        <remarks><para>
Рекомендации по настройке политик см. в разделе примечания на <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicyHandlerFromRegistry">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandlerFromRegistry (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, string policyKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddPolicyHandlerFromRegistry(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, string policyKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandlerFromRegistry(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPolicyHandlerFromRegistry (builder As IHttpClientBuilder, policyKey As String) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddPolicyHandlerFromRegistry(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, System::String ^ policyKey);" />
      <MemberSignature Language="F#" Value="static member AddPolicyHandlerFromRegistry : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * string -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandlerFromRegistry (builder, policyKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="policyKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
        <param name="policyKey">Ключ, используемый для определения политики из <see cref="T:Polly.Registry.IReadOnlyPolicyRegistry`1" />.</param>
        <summary>Добавляет обработчик <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />, который будет применять при выполнении запроса политику, возвращенную интерфейсом <see cref="T:Polly.Registry.IReadOnlyPolicyRegistry`1" />.</summary>
        <returns>Интерфейс <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />, который можно использовать для настройки клиента.</returns>
        <remarks><para>
Рекомендации по настройке политик см. в разделе примечания на <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTransientHttpErrorPolicy">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTransientHttpErrorPolicy (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;Polly.PolicyBuilder&lt;System.Net.Http.HttpResponseMessage&gt;,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; configurePolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTransientHttpErrorPolicy(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`2&lt;class Polly.PolicyBuilder`1&lt;class System.Net.Http.HttpResponseMessage&gt;, class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt;&gt; configurePolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddTransientHttpErrorPolicy(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{Polly.PolicyBuilder{System.Net.Http.HttpResponseMessage},Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTransientHttpErrorPolicy (builder As IHttpClientBuilder, configurePolicy As Func(Of PolicyBuilder(Of HttpResponseMessage), IAsyncPolicy(Of HttpResponseMessage))) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddTransientHttpErrorPolicy(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;Polly::PolicyBuilder&lt;System::Net::Http::HttpResponseMessage ^&gt; ^, Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^&gt; ^ configurePolicy);" />
      <MemberSignature Language="F#" Value="static member AddTransientHttpErrorPolicy : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;Polly.PolicyBuilder&lt;System.Net.Http.HttpResponseMessage&gt;, Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddTransientHttpErrorPolicy (builder, configurePolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configurePolicy" Type="System.Func&lt;Polly.PolicyBuilder&lt;System.Net.Http.HttpResponseMessage&gt;,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</param>
        <param name="configurePolicy">Делегат, используемый для создания <see cref="T:Polly.IAsyncPolicy`1" />.</param>
        <summary>Добавляет обработчик <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />, который будет применять при выполнении запроса политику <see cref="T:Polly.Policy" />, созданную путем выполнения предоставленного делегата конфигурации. Построитель политики будет предварительно настроен для применения политики к запросам, завершившимся сбоем из-за временной ошибки.</summary>
        <returns>Интерфейс <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />, который можно использовать для настройки клиента.</returns>
        <remarks><para>
Рекомендации по настройке политик см. в разделе примечания на <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.
            </para>
          <para>
В <see cref="T:Polly.PolicyBuilder`1" />, предоставленном для <paramref name="configurePolicy" />, были предварительно настроены ошибки для управления ошибками в следующих категориях: <list type="bullet"><item><description>Сбои сети (как <see cref="T:System.Net.Http.HttpRequestException" />)</description></item><item><description>Коды состояния HTTP 5XX (ошибки сервера)</description></item><item><description>Код состояния HTTP 408 (время ожидания запроса)</description></item></list></para>
          <para>
Политика, созданная <paramref name="configurePolicy" />, будет кэшироваться в течение неограниченного времени на каждого именованного клиента. Политики обычно предназначены для использования в качестве одноэлементных, и при необходимости их можно использовать совместно. Чтобы предоставить общий доступ к политике нескольким именованным клиентам, сначала создайте политику и передайте ее в несколько вызовов <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" /> по мере необходимости.
            </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
