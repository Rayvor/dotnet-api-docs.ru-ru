<Type Name="InheritanceMappingAttribute" FullName="System.Data.Linq.Mapping.InheritanceMappingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65f7f2eff76b58ca45d9943ac6119f622fdf9501" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63978590" /></Metadata><TypeSignature Language="C#" Value="public sealed class InheritanceMappingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InheritanceMappingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InheritanceMappingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InheritanceMappingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InheritanceMappingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2c803-101">Сопоставляет иерархию наследования в приложении LINQ to SQL.</span><span class="sxs-lookup"><span data-stu-id="2c803-101">Maps an inheritance hierarchy in a LINQ to SQL application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c803-102">Один <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> указан для каждой сопоставленного класса.</span><span class="sxs-lookup"><span data-stu-id="2c803-102">One <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> is specified per mapped class.</span></span>  
  
 <span data-ttu-id="2c803-103">Если сопоставление иерархий наследования, обратите внимание на следующее:</span><span class="sxs-lookup"><span data-stu-id="2c803-103">Note the following when you map inheritance hierarchies:</span></span>  
  
-   <span data-ttu-id="2c803-104">Все классы в иерархии должны сопоставляться с одной таблицей.</span><span class="sxs-lookup"><span data-stu-id="2c803-104">All classes in a hierarchy must be mapped to a single table.</span></span>  
  
-   <span data-ttu-id="2c803-105">Таблица для иерархии наследования должны быть объявлены в сопоставленный тип, в верхней части иерархии.</span><span class="sxs-lookup"><span data-stu-id="2c803-105">The table for an inheritance hierarchy must be declared on the mapped type that is at the top of the hierarchy.</span></span> <span data-ttu-id="2c803-106">Невозможно указать таблицу или сопоставление атрибутов в класс, производный от класса верхнего.</span><span class="sxs-lookup"><span data-stu-id="2c803-106">You cannot specify the table or mapping attributes in a class that is derived from the top class.</span></span>  
  
-   <span data-ttu-id="2c803-107">Можно использовать интерфейс в иерархии, но [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] не удается сопоставить.</span><span class="sxs-lookup"><span data-stu-id="2c803-107">You can use an interface in a hierarchy, but [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] does not map it.</span></span>  
  
-   <span data-ttu-id="2c803-108">При сопоставлении классов, но вы можете запросить только сопоставленные классы класса в иерархии можно пропустить.</span><span class="sxs-lookup"><span data-stu-id="2c803-108">You can skip a class in the hierarchy when you map classes, but you can query against mapped classes only.</span></span>  
  
 <span data-ttu-id="2c803-109">Для правильного материализации значения кода дискриминатора должны быть уникальными и соответствовать этим значениям в базе данных.</span><span class="sxs-lookup"><span data-stu-id="2c803-109">For correct materialization, discriminator code values must be unique and match the values in the database.</span></span> <span data-ttu-id="2c803-110">Строка с значение кода дискриминатора, полностью соответствует (даже регистром) создает экземпляр класса с помощью <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="2c803-110">A row with a discriminator code value that does not exactly match (even by casing) instantiates the class by using <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c803-111">В этом примере показано сопоставление наследования для иерархии, где сопоставлено верхней части класса (`Shape`) является абстрактным.</span><span class="sxs-lookup"><span data-stu-id="2c803-111">This example shows inheritance mapping for a hierarchy where the top, mapped class (`Shape`) is abstract.</span></span>  
  
 [!code-csharp[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/vb/Module1.vb#1)]  
  
 <span data-ttu-id="2c803-112">Пример включения иерархию классов.</span><span class="sxs-lookup"><span data-stu-id="2c803-112">The following example shows the inclusion of unmapped classes.</span></span> <span data-ttu-id="2c803-113">Такие классы могут размещаться в любом месте в иерархии.</span><span class="sxs-lookup"><span data-stu-id="2c803-113">You can put unmapped classes anywhere in the hierarchy.</span></span>  
  
 [!code-csharp[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/vb/Module1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InheritanceMappingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InheritanceMappingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c803-114">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="2c803-114">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Code">
      <MemberSignature Language="C#" Value="public object Code { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Code" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Code" />
      <MemberSignature Language="VB.NET" Value="Public Property Code As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Code { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Code : obj with get, set" Usage="System.Data.Linq.Mapping.InheritanceMappingAttribute.Code" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c803-115">Получает или задает значение кода дискриминатора в сопоставляемой иерархии наследования.</span><span class="sxs-lookup"><span data-stu-id="2c803-115">Gets or sets the discriminator code value in a mapped inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="2c803-116">Обязательно задается пользователем.</span><span class="sxs-lookup"><span data-stu-id="2c803-116">Must be user-specified.</span></span> <span data-ttu-id="2c803-117">Значение по умолчанию отсутствует.</span><span class="sxs-lookup"><span data-stu-id="2c803-117">There is no default value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool with get, set" Usage="System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c803-118">Получает или задает значение, указывающее, создается ли объект данного типа, когда значение дискриминатора не соответствует заданному значению.</span><span class="sxs-lookup"><span data-stu-id="2c803-118">Gets or sets whether an object of this type in instantiated when the discriminator value does not match a specified value.</span></span></summary>
        <value><span data-ttu-id="2c803-119">По умолчанию = <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2c803-119">Default = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c803-120">Только один из <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> атрибуты должны быть объявлены с <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> как `true`.</span><span class="sxs-lookup"><span data-stu-id="2c803-120">Exactly one of the <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> attributes must be declared with <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Data.Linq.Mapping.InheritanceMappingAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c803-121">Получает или задает тип класса в иерархии.</span><span class="sxs-lookup"><span data-stu-id="2c803-121">Gets or sets the type of the class in the hierarchy.</span></span></summary>
        <value><span data-ttu-id="2c803-122">Обязательно задается пользователем.</span><span class="sxs-lookup"><span data-stu-id="2c803-122">Must be user-specified.</span></span> <span data-ttu-id="2c803-123">Значение по умолчанию отсутствует.</span><span class="sxs-lookup"><span data-stu-id="2c803-123">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c803-124">Используйте любой неабстрактный тип в иерархии наследования, включая корневой тип.</span><span class="sxs-lookup"><span data-stu-id="2c803-124">Use any non-abstract type in the inheritance hierarchy, including the root type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>