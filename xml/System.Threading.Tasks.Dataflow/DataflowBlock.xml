<Type Name="DataflowBlock" FullName="System.Threading.Tasks.Dataflow.DataflowBlock">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26f0d98a429e9637247d850a8b9a030cea3fbb4f" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70363121" /></Metadata><TypeSignature Language="C#" Value="public static class DataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataflowBlock extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.DataflowBlock" />
  <TypeSignature Language="VB.NET" Value="Public Module DataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataflowBlock abstract sealed" />
  <TypeSignature Language="F#" Value="type DataflowBlock = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="55691-101">Предоставляет набор статических методов (Shared в Visual Basic) для работы с блоками потоков данных.</span><span class="sxs-lookup"><span data-stu-id="55691-101">Provides a set of static (Shared in Visual Basic) methods for working with dataflow blocks.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsObservable&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IObservable&lt;TOutput&gt; AsObservable&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObservable`1&lt;!!TOutput&gt; AsObservable&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObservable(Of TOutput) (source As ISourceBlock(Of TOutput)) As IObservable(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObservable&lt;TOutput&gt; ^ AsObservable(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsObservable : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; IObservable&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObservable&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-102">Указывает тип данных, содержащихся в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-102">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-103">Источник для упаковки.</span><span class="sxs-lookup"><span data-stu-id="55691-103">The source to wrap.</span></span></param>
        <summary><span data-ttu-id="55691-104">Создает новую абстракцию <see cref="T:System.IObservable`1" /> для <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="55691-104">Creates a new <see cref="T:System.IObservable`1" /> abstraction over the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="55691-105"><see cref="T:System.IObservable`1" />, позволяющий наблюдателям подписаться на источник.</span><span class="sxs-lookup"><span data-stu-id="55691-105">An <see cref="T:System.IObservable`1" /> that enables observers to be subscribed to the source.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-106">Значение параметра <paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-106">The <paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsObserver&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static IObserver&lt;TInput&gt; AsObserver&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IObserver`1&lt;!!TInput&gt; AsObserver&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsObserver(Of TInput) (target As ITargetBlock(Of TInput)) As IObserver(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IObserver&lt;TInput&gt; ^ AsObserver(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="static member AsObserver : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; -&gt; IObserver&lt;'Input&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObserver&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="55691-107">Указывает тип входных данных, принимаемых целевым блоком.</span><span class="sxs-lookup"><span data-stu-id="55691-107">Specifies the type of input accepted by the target block.</span></span></typeparam>
        <param name="target"><span data-ttu-id="55691-108">Цель для упаковки.</span><span class="sxs-lookup"><span data-stu-id="55691-108">The target to wrap.</span></span></param>
        <summary><span data-ttu-id="55691-109">Создает новую абстракцию <see cref="T:System.IObserver`1" /> для <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="55691-109">Creates a new <see cref="T:System.IObserver`1" /> abstraction over the  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="55691-110">Наблюдатель, который создает программу-оболочку для блок целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="55691-110">An observer that wraps the target block.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="55691-111">Указывает тип данных, содержащихся в первом источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-111">Specifies type of data contained in the first source.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="55691-112">Указывает тип данных, содержащихся во втором источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-112">Specifies type of data contained in the second source.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="55691-113">Первый источник.</span><span class="sxs-lookup"><span data-stu-id="55691-113">The first source.</span></span></param>
        <param name="action1"><span data-ttu-id="55691-114">Обработчик, который необходимо выполнить для данных от первого источника.</span><span class="sxs-lookup"><span data-stu-id="55691-114">The handler to execute on data from the first source.</span></span></param>
        <param name="source2"><span data-ttu-id="55691-115">Второй источник.</span><span class="sxs-lookup"><span data-stu-id="55691-115">The second source.</span></span></param>
        <param name="action2"><span data-ttu-id="55691-116">Обработчик, который необходимо выполнить для данных от второго источника.</span><span class="sxs-lookup"><span data-stu-id="55691-116">The handler to execute on data from the second source.</span></span></param>
        <summary><span data-ttu-id="55691-117">Отслеживает два источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</span><span class="sxs-lookup"><span data-stu-id="55691-117">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span></span></summary>
        <returns><span data-ttu-id="55691-118">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор.</span><span class="sxs-lookup"><span data-stu-id="55691-118">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span></span> <span data-ttu-id="55691-119">Если оба источника завершены до завершения выбора, результирующая задача будет отменена.</span><span class="sxs-lookup"><span data-stu-id="55691-119">If both sources are completed prior to the choice completing, the resulting task will be canceled.</span></span> <span data-ttu-id="55691-120">Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение.</span><span class="sxs-lookup"><span data-stu-id="55691-120">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span></span> <span data-ttu-id="55691-121">В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным 0 или 1 для представления первого или второго источника соответственно.</span><span class="sxs-lookup"><span data-stu-id="55691-121">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span></span>  
  
<span data-ttu-id="55691-122">Этот метод использует только один элемент из одного из двух источников данных, никогда из обоих.</span><span class="sxs-lookup"><span data-stu-id="55691-122">This method will only consume an element from one of the two data sources, never both.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-123">Значение параметра <paramref name="source1" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-123">The <paramref name="source1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-124">-или-</span><span class="sxs-lookup"><span data-stu-id="55691-124">-or-</span></span> 
<span data-ttu-id="55691-125">Значение параметра <paramref name="action1" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-125">The  <paramref name="action1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-126">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-126">-or-</span></span> 
<span data-ttu-id="55691-127">Значение параметра <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-127">The <paramref name="source2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-128">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-128">-or-</span></span> 
<span data-ttu-id="55691-129">Значение параметра <paramref name="action2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-129">The <paramref name="action2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; * System.Threading.Tasks.Dataflow.DataflowBlockOptions -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2, dataflowBlockOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="55691-130">Указывает тип данных, содержащихся в первом источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-130">Specifies type of data contained in the first source.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="55691-131">Указывает тип данных, содержащихся во втором источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-131">Specifies type of data contained in the second source.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="55691-132">Первый источник.</span><span class="sxs-lookup"><span data-stu-id="55691-132">The first source.</span></span></param>
        <param name="action1"><span data-ttu-id="55691-133">Обработчик, который необходимо выполнить для данных от первого источника.</span><span class="sxs-lookup"><span data-stu-id="55691-133">The handler to execute on data from the first source.</span></span></param>
        <param name="source2"><span data-ttu-id="55691-134">Второй источник.</span><span class="sxs-lookup"><span data-stu-id="55691-134">The second source.</span></span></param>
        <param name="action2"><span data-ttu-id="55691-135">Обработчик, который необходимо выполнить для данных от второго источника.</span><span class="sxs-lookup"><span data-stu-id="55691-135">The handler to execute on data from the second source.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="55691-136">Параметры, с которыми требуется настроить этот вариант.</span><span class="sxs-lookup"><span data-stu-id="55691-136">The options with which to configure this choice.</span></span></param>
        <summary><span data-ttu-id="55691-137">Отслеживает два источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</span><span class="sxs-lookup"><span data-stu-id="55691-137">Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</span></span></summary>
        <returns><span data-ttu-id="55691-138">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор.</span><span class="sxs-lookup"><span data-stu-id="55691-138">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span></span> <span data-ttu-id="55691-139">Если оба источника завершены до завершения выбора или если <see cref="T:System.Threading.CancellationToken" />, предоставленный в составе <paramref name="dataflowBlockOptions" />, отменяется до завершения выбора, результирующая задача будет отменена.</span><span class="sxs-lookup"><span data-stu-id="55691-139">If both sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span></span> <span data-ttu-id="55691-140">Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение.</span><span class="sxs-lookup"><span data-stu-id="55691-140">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span></span> <span data-ttu-id="55691-141">В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным 0 или 1 для представления первого или второго источника соответственно.</span><span class="sxs-lookup"><span data-stu-id="55691-141">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to either 0 or 1 to represent the first or second source, respectively.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-142">Значение параметра <paramref name="source1" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-142">The <paramref name="source1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-143">-или-</span><span class="sxs-lookup"><span data-stu-id="55691-143">-or-</span></span> 
<span data-ttu-id="55691-144">Значение параметра <paramref name="action1" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-144">The <paramref name="action1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-145">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-145">-or-</span></span> 
<span data-ttu-id="55691-146">Значение параметра <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-146">The <paramref name="source2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-147">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-147">-or-</span></span> 
<span data-ttu-id="55691-148">Значение параметра <paramref name="action2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-148">The <paramref name="action2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-149">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-149">-or-</span></span> 
<span data-ttu-id="55691-150">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-150">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose(Of T1, T2, T3) (source1 As ISourceBlock(Of T1), action1 As Action(Of T1), source2 As ISourceBlock(Of T2), action2 As Action(Of T2), source3 As ISourceBlock(Of T3), action3 As Action(Of T3)) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T3&gt; * Action&lt;'T3&gt; -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2, source3, action3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="55691-151">Указывает тип данных, содержащихся в первом источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-151">Specifies type of data contained in the first source.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="55691-152">Указывает тип данных, содержащихся во втором источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-152">Specifies type of data contained in the second source.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="55691-153">Указывает тип данных, содержащихся в третьем источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-153">Specifies type of data contained in the third source.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="55691-154">Первый источник.</span><span class="sxs-lookup"><span data-stu-id="55691-154">The first source.</span></span></param>
        <param name="action1"><span data-ttu-id="55691-155">Обработчик, который необходимо выполнить для данных от первого источника.</span><span class="sxs-lookup"><span data-stu-id="55691-155">The handler to execute on data from the first source.</span></span></param>
        <param name="source2"><span data-ttu-id="55691-156">Второй источник.</span><span class="sxs-lookup"><span data-stu-id="55691-156">The second source.</span></span></param>
        <param name="action2"><span data-ttu-id="55691-157">Обработчик, который необходимо выполнить для данных от второго источника.</span><span class="sxs-lookup"><span data-stu-id="55691-157">The handler to execute on data from the second source.</span></span></param>
        <param name="source3"><span data-ttu-id="55691-158">Третий источник.</span><span class="sxs-lookup"><span data-stu-id="55691-158">The third source.</span></span></param>
        <param name="action3"><span data-ttu-id="55691-159">Обработчик, который необходимо выполнить для данных от третьего источника.</span><span class="sxs-lookup"><span data-stu-id="55691-159">The handler to execute on data from the third source.</span></span></param>
        <summary><span data-ttu-id="55691-160">Отслеживает три источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</span><span class="sxs-lookup"><span data-stu-id="55691-160">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span></span></summary>
        <returns><span data-ttu-id="55691-161">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор.</span><span class="sxs-lookup"><span data-stu-id="55691-161">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span></span> <span data-ttu-id="55691-162">Если все источники завершены до завершения выбора, результирующая задача будет отменена.</span><span class="sxs-lookup"><span data-stu-id="55691-162">If all sources are completed prior to the choice completing, the resulting task will be canceled.</span></span> <span data-ttu-id="55691-163">Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение.</span><span class="sxs-lookup"><span data-stu-id="55691-163">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span></span> <span data-ttu-id="55691-164">В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным отсчитываемому от нуля индексу источника.</span><span class="sxs-lookup"><span data-stu-id="55691-164">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span></span>  
  
<span data-ttu-id="55691-165">Этот метод использует только один элемент из одного из источников данных, никогда из нескольких.</span><span class="sxs-lookup"><span data-stu-id="55691-165">This method will only consume an element from one of the data sources, never more than one.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-166">Значение параметра <paramref name="source1" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-166">The <paramref name="source1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-167">-или-</span><span class="sxs-lookup"><span data-stu-id="55691-167">-or-</span></span> 
<span data-ttu-id="55691-168">Значение параметра <paramref name="action1" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-168">The <paramref name="action1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-169">-или-</span><span class="sxs-lookup"><span data-stu-id="55691-169">-or-</span></span> 
<span data-ttu-id="55691-170">Значение параметра <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-170">The <paramref name="source2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-171">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-171">-or-</span></span> 
<span data-ttu-id="55691-172">Значение параметра <paramref name="action2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-172">The <paramref name="action2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-173">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-173">-or-</span></span> 
<span data-ttu-id="55691-174">Значение параметра <paramref name="source3" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-174">The <paramref name="source3" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-175">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-175">-or-</span></span> 
<span data-ttu-id="55691-176">Значение параметра <paramref name="action3" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-176">The <paramref name="action3" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Choose&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; Choose&lt;T1,T2,T3&gt; (System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt; source1, Action&lt;T1&gt; action1, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt; source2, Action&lt;T2&gt; action2, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt; source3, Action&lt;T3&gt; action3, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; Choose&lt;T1, T2, T3&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T1&gt; source1, class System.Action`1&lt;!!T1&gt; action1, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T2&gt; source2, class System.Action`1&lt;!!T2&gt; action2, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!T3&gt; source3, class System.Action`1&lt;!!T3&gt; action3, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ Choose(System::Threading::Tasks::Dataflow::ISourceBlock&lt;T1&gt; ^ source1, Action&lt;T1&gt; ^ action1, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T2&gt; ^ source2, Action&lt;T2&gt; ^ action2, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T3&gt; ^ source3, Action&lt;T3&gt; ^ action3, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="static member Choose : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T1&gt; * Action&lt;'T1&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T2&gt; * Action&lt;'T2&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'T3&gt; * Action&lt;'T3&gt; * System.Threading.Tasks.Dataflow.DataflowBlockOptions -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Choose (source1, action1, source2, action2, source3, action3, dataflowBlockOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T1&gt;" />
        <Parameter Name="action1" Type="System.Action&lt;T1&gt;" />
        <Parameter Name="source2" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T2&gt;" />
        <Parameter Name="action2" Type="System.Action&lt;T2&gt;" />
        <Parameter Name="source3" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T3&gt;" />
        <Parameter Name="action3" Type="System.Action&lt;T3&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="55691-177">Указывает тип данных, содержащихся в первом источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-177">Specifies type of data contained in the first source.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="55691-178">Указывает тип данных, содержащихся во втором источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-178">Specifies type of data contained in the second source.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="55691-179">Указывает тип данных, содержащихся в третьем источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-179">Specifies type of data contained in the third source.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="55691-180">Первый источник.</span><span class="sxs-lookup"><span data-stu-id="55691-180">The first source.</span></span></param>
        <param name="action1"><span data-ttu-id="55691-181">Обработчик, который необходимо выполнить для данных от первого источника.</span><span class="sxs-lookup"><span data-stu-id="55691-181">The handler to execute on data from the first source.</span></span></param>
        <param name="source2"><span data-ttu-id="55691-182">Второй источник.</span><span class="sxs-lookup"><span data-stu-id="55691-182">The second source.</span></span></param>
        <param name="action2"><span data-ttu-id="55691-183">Обработчик, который необходимо выполнить для данных от второго источника.</span><span class="sxs-lookup"><span data-stu-id="55691-183">The handler to execute on data from the second source.</span></span></param>
        <param name="source3"><span data-ttu-id="55691-184">Третий источник.</span><span class="sxs-lookup"><span data-stu-id="55691-184">The third source.</span></span></param>
        <param name="action3"><span data-ttu-id="55691-185">Обработчик, который необходимо выполнить для данных от третьего источника.</span><span class="sxs-lookup"><span data-stu-id="55691-185">The handler to execute on data from the third source.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="55691-186">Параметры, с которыми требуется настроить этот вариант.</span><span class="sxs-lookup"><span data-stu-id="55691-186">The options with which to configure this choice.</span></span></param>
        <summary><span data-ttu-id="55691-187">Отслеживает три источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</span><span class="sxs-lookup"><span data-stu-id="55691-187">Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</span></span></summary>
        <returns><span data-ttu-id="55691-188">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор.</span><span class="sxs-lookup"><span data-stu-id="55691-188">A  <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous choice.</span></span> <span data-ttu-id="55691-189">Если все источники завершены до завершения выбора или если <see cref="T:System.Threading.CancellationToken" />, предоставленный в составе <paramref name="dataflowBlockOptions" />, отменяется до завершения выбора, результирующая задача будет отменена.</span><span class="sxs-lookup"><span data-stu-id="55691-189">If all sources are completed prior to the choice completing, or if the <see cref="T:System.Threading.CancellationToken" /> provided as part of <paramref name="dataflowBlockOptions" /> is canceled prior to the choice completing, the resulting task will be canceled.</span></span> <span data-ttu-id="55691-190">Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение.</span><span class="sxs-lookup"><span data-stu-id="55691-190">When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and will contain the unhandled exception.</span></span> <span data-ttu-id="55691-191">В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным отсчитываемому от нуля индексу источника.</span><span class="sxs-lookup"><span data-stu-id="55691-191">Otherwise, the task will end with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> set to the 0-based index of the source.</span></span>  
  
<span data-ttu-id="55691-192">Этот метод использует только один элемент из одного из источников данных, никогда из нескольких.</span><span class="sxs-lookup"><span data-stu-id="55691-192">This method will only consume an element from one of the data sources, never more than one.</span></span> <span data-ttu-id="55691-193">Если отмена запрашивается после получения элемента, запрос отмены игнорируется, и соответствующему обработчику будет разрешено выполнение.</span><span class="sxs-lookup"><span data-stu-id="55691-193">If cancellation is requested after an element has been received, the cancellation request will be ignored, and the relevant handler will be allowed to execute.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-194">Значение параметра <paramref name="source1" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-194">The <paramref name="source1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-195">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-195">-or-</span></span> 
<span data-ttu-id="55691-196">Значение параметра <paramref name="action1" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-196">The <paramref name="action1" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-197">-или-</span><span class="sxs-lookup"><span data-stu-id="55691-197">-or-</span></span> 
<span data-ttu-id="55691-198">Значение параметра <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-198">The <paramref name="source2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-199">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-199">-or-</span></span> 
<span data-ttu-id="55691-200">Значение параметра <paramref name="action2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-200">The <paramref name="action2" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-201">-или-</span><span class="sxs-lookup"><span data-stu-id="55691-201">-or-</span></span> 
<span data-ttu-id="55691-202">Значение параметра <paramref name="source3" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-202">The <paramref name="source3" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-203">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-203">-or-</span></span> 
<span data-ttu-id="55691-204">Значение параметра <paramref name="action3" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-204">The <paramref name="action3" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-205">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-205">-or-</span></span> 
<span data-ttu-id="55691-206">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-206">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encapsulate&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt; Encapsulate&lt;TInput,TOutput&gt; (System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!!TInput, !!TOutput&gt; Encapsulate&lt;TInput, TOutput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encapsulate(Of TInput, TOutput) (target As ITargetBlock(Of TInput), source As ISourceBlock(Of TOutput)) As IPropagatorBlock(Of TInput, TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;TInput, TOutput&gt; ^ Encapsulate(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Encapsulate : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;'Input, 'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate (target, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="55691-207">Указывает тип входных данных, ожидаемых целевым объектом.</span><span class="sxs-lookup"><span data-stu-id="55691-207">Specifies the type of input expected by the target.</span></span></typeparam>
        <typeparam name="TOutput"><span data-ttu-id="55691-208">Указывает тип выходных данных, создаваемых источником.</span><span class="sxs-lookup"><span data-stu-id="55691-208">Specifies the type of output produced by the source.</span></span></typeparam>
        <param name="target"><span data-ttu-id="55691-209">Цель для инкапсуляции.</span><span class="sxs-lookup"><span data-stu-id="55691-209">The target to encapsulate.</span></span></param>
        <param name="source"><span data-ttu-id="55691-210">Источник для инкапсуляции.</span><span class="sxs-lookup"><span data-stu-id="55691-210">The source to encapsulate.</span></span></param>
        <summary><span data-ttu-id="55691-211">Инкапсулирует целевой объект и источник в один блок распространения.</span><span class="sxs-lookup"><span data-stu-id="55691-211">Encapsulates a target and a source into a single propagator.</span></span></summary>
        <returns><span data-ttu-id="55691-212">Инкапсулированные исходный и конечный объекты.</span><span class="sxs-lookup"><span data-stu-id="55691-212">The encapsulated target and source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55691-213">Методу требуется два существующих блока: целевой блок (экземпляр класса, реализующего <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) и блок источника (экземпляр класса, реализующего <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>). <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A></span><span class="sxs-lookup"><span data-stu-id="55691-213">The <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> method requires two existing blocks: a target block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>) and a source block (an instance of a class that implements <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>).</span></span> <span data-ttu-id="55691-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A>создает новый экземпляр внутреннего класса <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> , который подключает члены интерфейса `target` к параметру и <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> членам интерфейса к `source` параметру.</span><span class="sxs-lookup"><span data-stu-id="55691-214"><xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A> creates a new instance of an internal class that connects the <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> interface members to the `target` parameter and the <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> interface members to the `source` parameter.</span></span>  <span data-ttu-id="55691-215">И, <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> и являются производными от <xref:System.Threading.Tasks.Dataflow.IDataflowBlock>. <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601></span><span class="sxs-lookup"><span data-stu-id="55691-215">Both <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> and <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> derive from <xref:System.Threading.Tasks.Dataflow.IDataflowBlock>.</span></span> <span data-ttu-id="55691-216">Завершение блока явно передается из источников в целевые объекты.</span><span class="sxs-lookup"><span data-stu-id="55691-216">Block completion is explicitly passed from sources to targets.</span></span> <span data-ttu-id="55691-217">Таким образом, <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> методы <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> и подключаются <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> к целевому объекту, пока свойство подключено к источнику.</span><span class="sxs-lookup"><span data-stu-id="55691-217">Therefore, the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> and <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> methods are connected to the target while the <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A> property is connected to the source.</span></span>  <span data-ttu-id="55691-218">Необходимо убедиться, что при завершении целевой половины исходная половина будет завершена наиболее подходящим способом. Например:</span><span class="sxs-lookup"><span data-stu-id="55691-218">You must ensure that when the target half  completes, the source half gets completed in the most appropriate manner; for example:</span></span>  
  
 `target.Completion.ContinueWith(completion => source.Complete());`  
  
 <span data-ttu-id="55691-219">Или, если вы хотите распространить тип завершения, вы можете использовать более сложный код:</span><span class="sxs-lookup"><span data-stu-id="55691-219">Or, if you want to propagate the completion type, you can use this more sophisticated code:</span></span>  
  
```  
target.Completion.ContinueWith(completion => { if (completion.IsFaulted)    
  
((IDataflowBlock)batchBlock).Fault(completion.Exception);   
else   
batchBlock.Complete();   
});  
  
```  
  
 <span data-ttu-id="55691-220">Необходимо также явно предоставить распространение сообщений от целевого объекта к исходному.</span><span class="sxs-lookup"><span data-stu-id="55691-220">You must also explicitly provide the message propagation from target to source.</span></span> <span data-ttu-id="55691-221">Преимущество этого явного подключения заключается в том, что оно дает свободу выполнения любой неограниченной обработки между двумя инкапсулированными блоками.</span><span class="sxs-lookup"><span data-stu-id="55691-221">The benefit of this explicit connection is that it gives you the freedom to perform any unconstrained processing between the two encapsulated blocks.</span></span> <span data-ttu-id="55691-222">Это можно сделать путем кодирования необходимой обработки в делегаты блоков (если блоки принимают делегаты) или путем встраивания подсети блоков между ними.</span><span class="sxs-lookup"><span data-stu-id="55691-222">You may do that either by encoding the necessary processing into the blocks' delegates (if the blocks take delegates), or by embedding a sub-network of blocks between them.</span></span> <span data-ttu-id="55691-223">Проще всего использовать блок, принимающий делегаты; Например, используйте <xref:System.Threading.Tasks.Dataflow.ActionBlock%601>, <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>, <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> (если применимо) или пользовательский блок.</span><span class="sxs-lookup"><span data-stu-id="55691-223">The easier way is to use a block that takes delegates; for example, use <xref:System.Threading.Tasks.Dataflow.ActionBlock%601>, <xref:System.Threading.Tasks.Dataflow.TransformBlock%602>, <xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602> (if applicable), or a custom block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target);" />
      <MemberSignature Language="F#" Value="static member LinkTo : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; -&gt; IDisposable" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo (source, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-224">Указывает тип данных, содержащихся в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-224">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-225">Источник, из которого требуется задать связь.</span><span class="sxs-lookup"><span data-stu-id="55691-225">The source from which to link.</span></span></param>
        <param name="target"><span data-ttu-id="55691-226"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить источник.</span><span class="sxs-lookup"><span data-stu-id="55691-226">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span></span></param>
        <summary><span data-ttu-id="55691-227">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="55691-227">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="55691-228">Интерфейс <see cref="T:System.IDisposable" />, который при вызове метода <see langword="Dispose" /> отсоединит источник от целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="55691-228">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-229">Значение параметра <paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-229">The <paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-230">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-230">-or-</span></span> 
<span data-ttu-id="55691-231">Значение параметра <paramref name="target" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-231">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LinkTo : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * Predicate&lt;'Output&gt; -&gt; IDisposable" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo (source, target, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-232">Указывает тип данных, содержащихся в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-232">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-233">Источник, из которого требуется задать связь.</span><span class="sxs-lookup"><span data-stu-id="55691-233">The source from which to link.</span></span></param>
        <param name="target"><span data-ttu-id="55691-234"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить источник.</span><span class="sxs-lookup"><span data-stu-id="55691-234">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span></span></param>
        <param name="predicate"><span data-ttu-id="55691-235">Фильтр, который должно пройти сообщение, чтобы попасть из исходного объекта в целевой.</span><span class="sxs-lookup"><span data-stu-id="55691-235">The filter a message must pass in order for it to propagate from the source to the target.</span></span></param>
        <summary><span data-ttu-id="55691-236">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, используя указанный фильтр.</span><span class="sxs-lookup"><span data-stu-id="55691-236">Links the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span></span></summary>
        <returns><span data-ttu-id="55691-237">Интерфейс <see cref="T:System.IDisposable" />, который при вызове метода <see langword="Dispose" /> отсоединит источник от целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="55691-237">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-238">Значение параметра <paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-238">The <paramref name="source" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-239">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-239">-or-</span></span> 
<span data-ttu-id="55691-240">Значение параметра <paramref name="target" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-240">The <paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55691-241">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-241">-or-</span></span> 
<span data-ttu-id="55691-242">Значение параметра <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-242">The <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LinkTo&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static IDisposable LinkTo&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, Predicate&lt;TOutput&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable LinkTo&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, class System.Predicate`1&lt;!!TOutput&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LinkTo(Of TOutput) (source As ISourceBlock(Of TOutput), target As ITargetBlock(Of TOutput), linkOptions As DataflowLinkOptions, predicate As Predicate(Of TOutput)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions, Predicate&lt;TOutput&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LinkTo : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions * Predicate&lt;'Output&gt; -&gt; IDisposable" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo (source, target, linkOptions, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
        <Parameter Name="predicate" Type="System.Predicate&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-243">Указывает тип данных, содержащихся в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-243">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-244">Источник, из которого требуется задать связь.</span><span class="sxs-lookup"><span data-stu-id="55691-244">The source from which to link.</span></span></param>
        <param name="target"><span data-ttu-id="55691-245"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить источник.</span><span class="sxs-lookup"><span data-stu-id="55691-245">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect the source.</span></span></param>
        <param name="linkOptions"><span data-ttu-id="55691-246">Одно из значений перечисления, указывающее, как настроить связь между блоками потока данных.</span><span class="sxs-lookup"><span data-stu-id="55691-246">One of the enumeration values that specifies how to configure a link between dataflow blocks.</span></span></param>
        <param name="predicate"><span data-ttu-id="55691-247">Фильтр, который должно пройти сообщение, чтобы попасть из исходного объекта в целевой.</span><span class="sxs-lookup"><span data-stu-id="55691-247">The filter a message must pass in order for it to propagate from the source to the target.</span></span></param>
        <summary><span data-ttu-id="55691-248">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, используя указанный фильтр.</span><span class="sxs-lookup"><span data-stu-id="55691-248">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> using the specified filter.</span></span></summary>
        <returns><span data-ttu-id="55691-249">Интерфейс <see cref="T:System.IDisposable" />, который при вызове метода <see langword="Dispose" /> отсоединит источник от целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="55691-249">An <see cref="T:System.IDisposable" /> that, upon calling <see langword="Dispose" />, will unlink the source from the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-250">Параметр <paramref name="source" /> имеет значение NULL (Nothing в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="55691-250">The  <paramref name="source" /> is null (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="55691-251">-или-</span><span class="sxs-lookup"><span data-stu-id="55691-251">-or-</span></span> 
<span data-ttu-id="55691-252">Параметр <paramref name="target" /> имеет значение NULL (Nothing в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="55691-252">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="55691-253">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-253">-or-</span></span> 
<span data-ttu-id="55691-254">Параметр <paramref name="linkOptions" /> имеет значение NULL (Nothing в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="55691-254">The  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="55691-255">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-255">-or-</span></span> 
<span data-ttu-id="55691-256">Параметр <paramref name="predicate" /> имеет значение NULL (Nothing в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="55691-256">The  <paramref name="predicate" /> is null (Nothing in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NullTarget&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; NullTarget&lt;TInput&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; NullTarget&lt;TInput&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1" />
      <MemberSignature Language="VB.NET" Value="Public Function NullTarget(Of TInput) () As ITargetBlock(Of TInput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA; static System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ NullTarget();" />
      <MemberSignature Language="F#" Value="static member NullTarget : unit -&gt; System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="55691-257">Тип сообщений, которые может принимать этот блок.</span><span class="sxs-lookup"><span data-stu-id="55691-257">The type of the messages this block can accept.</span></span></typeparam>
        <summary><span data-ttu-id="55691-258">Получает целевой блок, который синхронно принимает все сообщения, предлагаемые на него, и удаляет их.</span><span class="sxs-lookup"><span data-stu-id="55691-258">Gets a target block that synchronously accepts all messages offered to it and drops them.</span></span></summary>
        <returns><span data-ttu-id="55691-259"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, принимающий и впоследствии удаляющий все предлагаемые сообщения.</span><span class="sxs-lookup"><span data-stu-id="55691-259">A <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> that accepts and subsequently drops all offered messages.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OutputAvailableAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member OutputAvailableAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-260">Указывает тип данных, содержащихся в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-260">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-261">Источник для отслеживания.</span><span class="sxs-lookup"><span data-stu-id="55691-261">The source to monitor.</span></span></param>
        <summary><span data-ttu-id="55691-262">Предоставляет <see cref="T:System.Threading.Tasks.Task`1" />, которое асинхронным образом выполняет мониторинг источника доступного вывода.</span><span class="sxs-lookup"><span data-stu-id="55691-262">Provides a <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span></span></summary>
        <returns><span data-ttu-id="55691-263"><see cref="T:System.Threading.Tasks.Task`1" />, который сообщает, доступны ли еще выходные данные и когда это происходит.</span><span class="sxs-lookup"><span data-stu-id="55691-263">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span></span> <span data-ttu-id="55691-264">Если при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> равно <see langword="true" />, в источнике доступно больше выходных данных (хотя данные может извлечь другой потребитель источника).</span><span class="sxs-lookup"><span data-stu-id="55691-264">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span></span>  
  
<span data-ttu-id="55691-265">Если возвращается значение<see langword="false" />, дополнительные выходные данные недоступны и никогда не будут доступны, потому что источник завершился до того, как выходные данные стали доступными.</span><span class="sxs-lookup"><span data-stu-id="55691-265">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputAvailableAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; OutputAvailableAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ OutputAvailableAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member OutputAvailableAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-266">Указывает тип данных, содержащихся в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-266">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-267">Источник для отслеживания.</span><span class="sxs-lookup"><span data-stu-id="55691-267">The source to monitor.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55691-268">Токен отмены, с которым необходимо отменить асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="55691-268">The cancellation token with which to cancel the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="55691-269">Предоставляет <see cref="T:System.Threading.Tasks.Task`1" />, которое асинхронным образом выполняет мониторинг источника доступного вывода.</span><span class="sxs-lookup"><span data-stu-id="55691-269">Provides a  <see cref="T:System.Threading.Tasks.Task`1" /> that asynchronously monitors the source for available output.</span></span></summary>
        <returns><span data-ttu-id="55691-270"><see cref="T:System.Threading.Tasks.Task`1" />, который сообщает, доступны ли еще выходные данные и когда это происходит.</span><span class="sxs-lookup"><span data-stu-id="55691-270">A <see cref="T:System.Threading.Tasks.Task`1" /> that informs of whether and when more output is available.</span></span> <span data-ttu-id="55691-271">Если при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> равно <see langword="true" />, в источнике доступно больше выходных данных (хотя данные может извлечь другой потребитель источника).</span><span class="sxs-lookup"><span data-stu-id="55691-271">If, when the task completes, its <see cref="P:System.Threading.Tasks.Task`1.Result" /> is <see langword="true" />, more output is available in the source (though another consumer of the source may retrieve the data).</span></span> <span data-ttu-id="55691-272">Если возвращается значение<see langword="false" />, дополнительные выходные данные недоступны и никогда не будут доступны, потому что источник завершился до того, как выходные данные стали доступными.</span><span class="sxs-lookup"><span data-stu-id="55691-272">If it returns <see langword="false" />, more output is not and will never be available, due to the source completing prior to output being available.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static bool Post&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Post&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Post(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Post(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberSignature Language="F#" Value="static member Post : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * 'Input -&gt; bool" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Post (target, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="55691-273">Указывает тип данных, принимаемых целевым блоком.</span><span class="sxs-lookup"><span data-stu-id="55691-273">Specifies the type of data accepted by the target block.</span></span></typeparam>
        <param name="target"><span data-ttu-id="55691-274">Целевой блок.</span><span class="sxs-lookup"><span data-stu-id="55691-274">The target block.</span></span></param>
        <param name="item"><span data-ttu-id="55691-275">Элемент, предлагаемый целевому объекту.</span><span class="sxs-lookup"><span data-stu-id="55691-275">The item being offered to the target.</span></span></param>
        <summary><span data-ttu-id="55691-276">Отправляет элемент в объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="55691-276">Posts an item to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="55691-277">Значение <see langword="true" />, если элемент был принят целевым блоком; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55691-277"><see langword="true" /> if the item was accepted by the target block; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55691-278">Этот метод будет возвращать значение, когда целевой блок решил принять или отклонить элемент, но если иное не задано особой семантикой целевого блока, он не ждет фактической обработки элемента.</span><span class="sxs-lookup"><span data-stu-id="55691-278">This method will return once the target block has decided to accept or decline the item, but unless otherwise dictated by special semantics of the target block, it does not wait for the item to actually be processed.</span></span> <span data-ttu-id="55691-279">Например, возвращает <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> из <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A> , как только она сохранила помещенный элемент во входную очередь.</span><span class="sxs-lookup"><span data-stu-id="55691-279">For example, <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> will return from <xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A> as soon as it has stored the posted item into its input queue).</span></span> <span data-ttu-id="55691-280">С точки зрения обработки блока, `Post` является асинхронным.</span><span class="sxs-lookup"><span data-stu-id="55691-280">From the perspective of the block's processing, `Post` is asynchronous.</span></span> <span data-ttu-id="55691-281">Для целевых блоков, которые поддерживают отсрочку предлагаемых сообщений, или для блоков, которые могут больше обрабатываться в своей `Post` реализации, рассмотрите возможность использования метода <xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>, который будет возвращать сообщение немедленно и позволит целевому объекту отложить отправленные сообщения. и последующего использования после `SendAsync` возврата.</span><span class="sxs-lookup"><span data-stu-id="55691-281">For target blocks that support postponing offered messages, or for blocks that may do more processing in their `Post` implementation, consider using <xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A>, which will return immediately and will enable the target to postpone the posted message and later consume it after `SendAsync` returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput)) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-282">Тип данных в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-282">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-283">Источник, от которого требуется получить значение.</span><span class="sxs-lookup"><span data-stu-id="55691-283">The source from which to receive the value.</span></span></param>
        <summary><span data-ttu-id="55691-284">Синхронно получает значение от указанного источника.</span><span class="sxs-lookup"><span data-stu-id="55691-284">Synchronously receives a value from a specified source.</span></span></summary>
        <returns><span data-ttu-id="55691-285">Полученное значение.</span><span class="sxs-lookup"><span data-stu-id="55691-285">The received value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-286">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-286"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55691-287">Из источника невозможно получить никакой элемент.</span><span class="sxs-lookup"><span data-stu-id="55691-287">No item could be received from the source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.CancellationToken -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-288">Тип данных в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-288">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-289">Источник, от которого требуется получить значение.</span><span class="sxs-lookup"><span data-stu-id="55691-289">The source from which to receive the value.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55691-290">Токен для отмены операции получения.</span><span class="sxs-lookup"><span data-stu-id="55691-290">The token to use to cancel the receive operation.</span></span></param>
        <summary><span data-ttu-id="55691-291">Синхронно получает значение из указанного источника и предоставляет токен для отмены операции.</span><span class="sxs-lookup"><span data-stu-id="55691-291">Synchronously receives a value from a specified source and provides a token to cancel the operation.</span></span></summary>
        <returns><span data-ttu-id="55691-292">Полученное значение.</span><span class="sxs-lookup"><span data-stu-id="55691-292">The received value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55691-293">Если источник успешно предложил элемент, полученный этой операцией, этот элемент возвращается, даже если происходит одновременный запрос на отмену.</span><span class="sxs-lookup"><span data-stu-id="55691-293">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-294">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-294"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55691-295">Из источника невозможно получить никакой элемент.</span><span class="sxs-lookup"><span data-stu-id="55691-295">No item could be received from the source.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="55691-296">Операция отменена до того как элемент был получен из источника.</span><span class="sxs-lookup"><span data-stu-id="55691-296">The operation was canceled before an item was received from the source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Receive(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As TOutput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive (source, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-297">Тип данных в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-297">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-298">Источник, от которого требуется получить значение.</span><span class="sxs-lookup"><span data-stu-id="55691-298">The source from which to receive the value.</span></span></param>
        <param name="timeout"><span data-ttu-id="55691-299">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-299">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="55691-300">Синхронно получает значение из указанного источника, отслеживание необязательно точкой времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-300">Synchronously receives a value from a specified source, observing an optional time-out period.</span></span></summary>
        <returns><span data-ttu-id="55691-301">Полученное значение.</span><span class="sxs-lookup"><span data-stu-id="55691-301">The received value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55691-302">Если источник успешно предложил элемент, полученный этой операцией, этот элемент возвращается, даже если выполняется одновременный тайм-аут.</span><span class="sxs-lookup"><span data-stu-id="55691-302">If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="55691-303">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-303"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span></span>  
  
<span data-ttu-id="55691-304">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-304">-or-</span></span> 
 <span data-ttu-id="55691-305">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="55691-305"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-306">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-306"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55691-307">Из источника невозможно получить никакой элемент.</span><span class="sxs-lookup"><span data-stu-id="55691-307">No item could be received from the source.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="55691-308">Заданное время ожидания истекло до того, как элемент был получен из источника.</span><span class="sxs-lookup"><span data-stu-id="55691-308">The specified time-out expired before an item was received from the source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Receive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput Receive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput Receive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TOutput Receive(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member Receive : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan * System.Threading.CancellationToken -&gt; 'Output" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.Receive (source, timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-309">Тип данных в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-309">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-310">Источник, от которого требуется получить значение.</span><span class="sxs-lookup"><span data-stu-id="55691-310">The source from which to receive the value.</span></span></param>
        <param name="timeout"><span data-ttu-id="55691-311">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-311">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55691-312">Токен для отмены операции получения.</span><span class="sxs-lookup"><span data-stu-id="55691-312">The token to use to cancel the receive operation.</span></span></param>
        <summary><span data-ttu-id="55691-313">Синхронно получает значение из указанного источника, обеспечивая токен для отмены операции за необязательным и интервал времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-313">Synchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span></span></summary>
        <returns><span data-ttu-id="55691-314">Полученное значение.</span><span class="sxs-lookup"><span data-stu-id="55691-314">The received value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55691-315">Если источник успешно предложил значение элемента, полученное этой операцией, это значение возвращается, даже если происходит одновременный запрос времени ожидания или отмены.</span><span class="sxs-lookup"><span data-stu-id="55691-315">If the source successfully offered an item value that was received by this operation, that value is returned even if a concurrent time-out or cancellation request occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-316">Значение параметра <paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-316">The <paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="55691-317">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-317"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span></span>  
  
<span data-ttu-id="55691-318">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-318">-or-</span></span> 
 <span data-ttu-id="55691-319">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="55691-319"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55691-320">Из источника невозможно получить никакой элемент.</span><span class="sxs-lookup"><span data-stu-id="55691-320">No item could be received from the source.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="55691-321">Заданное время ожидания истекло до того, как элемент был получен из источника.</span><span class="sxs-lookup"><span data-stu-id="55691-321">The specified time-out expired before an item was received from the source.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="55691-322">Операция отменена до того как элемент был получен из источника.</span><span class="sxs-lookup"><span data-stu-id="55691-322">The operation was canceled before an item was received from the source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput)) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-323">Тип данных в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-323">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-324">Источник, от которого требуется получить значение.</span><span class="sxs-lookup"><span data-stu-id="55691-324">The source from which to receive the value.</span></span></param>
        <summary><span data-ttu-id="55691-325">Асинхронно получает значение от указанного источника.</span><span class="sxs-lookup"><span data-stu-id="55691-325">Asynchronously receives a value from a specified source.</span></span></summary>
        <returns><span data-ttu-id="55691-326">Задача, представляющая асинхронную операцию получения.</span><span class="sxs-lookup"><span data-stu-id="55691-326">A task that represents the asynchronous receive operation.</span></span> <span data-ttu-id="55691-327">При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение.</span><span class="sxs-lookup"><span data-stu-id="55691-327">When an item value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the received value.</span></span> <span data-ttu-id="55691-328">Если значение элемента невозможно извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</span><span class="sxs-lookup"><span data-stu-id="55691-328">If an item value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-329"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-329"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-330">Указывает тип данных, содержащихся в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-330">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-331">Источник, от которого требуется получить значение.</span><span class="sxs-lookup"><span data-stu-id="55691-331">The source from which to receive the value.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55691-332">Токен для отмены операции получения.</span><span class="sxs-lookup"><span data-stu-id="55691-332">The token to use to cancel the receive operation.</span></span></param>
        <summary><span data-ttu-id="55691-333">Асинхронно получает значение из указанного источника и предоставляет токен для отмены операции.</span><span class="sxs-lookup"><span data-stu-id="55691-333">Asynchronously receives a value from a specified source and provides a token to cancel the operation.</span></span></summary>
        <returns><span data-ttu-id="55691-334">Задача, представляющая асинхронную операцию получения.</span><span class="sxs-lookup"><span data-stu-id="55691-334">A task that represents the asynchronous receive operation.</span></span> <span data-ttu-id="55691-335">При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение.</span><span class="sxs-lookup"><span data-stu-id="55691-335">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span></span> <span data-ttu-id="55691-336">Если значение невозможно извлечь, поскольку была запрошена отмена, возвращаемая задача отменена.</span><span class="sxs-lookup"><span data-stu-id="55691-336">If a value cannot be retrieved because cancellation was requested, the returned task is canceled.</span></span> <span data-ttu-id="55691-337">Если значение невозможно извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</span><span class="sxs-lookup"><span data-stu-id="55691-337">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-338">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-338"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReceiveAsync(Of TOutput) (source As ISourceBlock(Of TOutput), timeout As TimeSpan) As Task(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync (source, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-339">Тип данных в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-339">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-340">Источник, от которого требуется получить значение.</span><span class="sxs-lookup"><span data-stu-id="55691-340">The source from which to receive the value.</span></span></param>
        <param name="timeout"><span data-ttu-id="55691-341">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-341">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="55691-342">Асинхронно получает значение из указанного источника, отслеживание необязательно точкой времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-342">Asynchronously receives a value from a specified source, observing an optional time-out period.</span></span></summary>
        <returns><span data-ttu-id="55691-343">Задача, представляющая асинхронную операцию получения.</span><span class="sxs-lookup"><span data-stu-id="55691-343">A task that represents the asynchronous receive operation.</span></span> <span data-ttu-id="55691-344">При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение.</span><span class="sxs-lookup"><span data-stu-id="55691-344">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span></span> <span data-ttu-id="55691-345">Если значение невозможно извлечь, поскольку время ожидания истекло, возвращаемая задача отменена.</span><span class="sxs-lookup"><span data-stu-id="55691-345">If a value cannot be retrieved because the time-out expired, the returned task is canceled.</span></span> <span data-ttu-id="55691-346">Если значение невозможно извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</span><span class="sxs-lookup"><span data-stu-id="55691-346">If the value cannot be retrieved because the source is empty and completed , an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-347">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-347"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="55691-348">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-348"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span></span>  
  
<span data-ttu-id="55691-349">- или -</span><span class="sxs-lookup"><span data-stu-id="55691-349">-or-</span></span> 
 <span data-ttu-id="55691-350">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="55691-350"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TOutput&gt; ReceiveAsync&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt; source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TOutput&gt; ReceiveAsync&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!!TOutput&gt; source, valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TOutput&gt; ^ ReceiveAsync(System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt; ^ source, TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member ReceiveAsync : System.Threading.Tasks.Dataflow.ISourceBlock&lt;'Output&gt; * TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Output&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync (source, timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-351">Тип данных в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-351">The type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-352">Источник, от которого требуется получить значение.</span><span class="sxs-lookup"><span data-stu-id="55691-352">The source from which to receive the value.</span></span></param>
        <param name="timeout"><span data-ttu-id="55691-353">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-353">The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55691-354">Токен, который может быть использован для отмены операции получения.</span><span class="sxs-lookup"><span data-stu-id="55691-354">The token which may be used to cancel the receive operation.</span></span></param>
        <summary><span data-ttu-id="55691-355">Асинхронно получает значение из указанного источника, обеспечивая токен для отмены операции за необязательным и интервал времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-355">Asynchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</span></span></summary>
        <returns><span data-ttu-id="55691-356">Задача, представляющая асинхронную операцию получения.</span><span class="sxs-lookup"><span data-stu-id="55691-356">A task that represents the asynchronous receive operation.</span></span> <span data-ttu-id="55691-357">При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение.</span><span class="sxs-lookup"><span data-stu-id="55691-357">When a value is successfully received from the source, the returned task is completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> returns the value.</span></span> <span data-ttu-id="55691-358">Если значение невозможно извлечь, поскольку истекло время ожидания отмены, возвращаемая задача отменена.</span><span class="sxs-lookup"><span data-stu-id="55691-358">If a value cannot be retrieved because the time-out expired or cancellation was requested, the returned task is canceled.</span></span> <span data-ttu-id="55691-359">Если значение нельзя извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</span><span class="sxs-lookup"><span data-stu-id="55691-359">If the value cannot be retrieved because the source is empty and completed, an <see cref="T:System.InvalidOperationException" /> exception is thrown in the returned task.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-360"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-360"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="55691-361">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.</span><span class="sxs-lookup"><span data-stu-id="55691-361"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</span></span>  
  
<span data-ttu-id="55691-362">-или-</span><span class="sxs-lookup"><span data-stu-id="55691-362">-or-</span></span> 
 <span data-ttu-id="55691-363">Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="55691-363"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SendAsync(Of TInput) (target As ITargetBlock(Of TInput), item As TInput) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item);" />
      <MemberSignature Language="F#" Value="static member SendAsync : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * 'Input -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync (target, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="55691-364">Указывает тип данных, отправляемых целевому объекту.</span><span class="sxs-lookup"><span data-stu-id="55691-364">Specifies the type of the data to post to the target.</span></span></typeparam>
        <param name="target"><span data-ttu-id="55691-365">Целевой объект, на который требуется отправить данные.</span><span class="sxs-lookup"><span data-stu-id="55691-365">The target to which to post the data.</span></span></param>
        <param name="item"><span data-ttu-id="55691-366">Элемент, предлагаемый целевому объекту.</span><span class="sxs-lookup"><span data-stu-id="55691-366">The item being offered to the target.</span></span></param>
        <summary><span data-ttu-id="55691-367">Асинхронно предлагает сообщение в целевому блоку сообщений, позволяет задержки.</span><span class="sxs-lookup"><span data-stu-id="55691-367">Asynchronously offers a message to the target message block, allowing for postponement.</span></span></summary>
        <returns><span data-ttu-id="55691-368">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронную отправку.</span><span class="sxs-lookup"><span data-stu-id="55691-368">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span></span> <span data-ttu-id="55691-369">Если целевой объект принимает и использует предлагаемый элемент во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвратит значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="55691-369">If the target accepts and consumes the offered element during the call to <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="true" />.</span></span> <span data-ttu-id="55691-370">Если целевой объект отклоняет предлагаемый элемент во время вызова, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвратит значение <see langword="false" /> .</span><span class="sxs-lookup"><span data-stu-id="55691-370">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will return <see langword="false" />.</span></span> <span data-ttu-id="55691-371">Если целевой объект откладывает предлагаемый элемент, элемент буферизуется до тех пор, пока целевой объект не потребит или не высвободит его; тогда задача завершится, а ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет показывать, было ли потреблено сообщение.</span><span class="sxs-lookup"><span data-stu-id="55691-371">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the task will complete, with its <see cref="P:System.Threading.Tasks.Task`1.Result" /> indicating whether the message was consumed.</span></span> <span data-ttu-id="55691-372">Если целевой объект не пытается употребить или высвободить сообщение, возвращаемая задача никогда не будет завершена.</span><span class="sxs-lookup"><span data-stu-id="55691-372">If the target never attempts to consume or release the message, the returned task will never complete.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-373">Значение параметра <paramref name="target" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="55691-373">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync&lt;TInput&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SendAsync&lt;TInput&gt; (this System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt; target, TInput item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SendAsync&lt;TInput&gt;(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!!TInput&gt; target, !!TInput item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;bool&gt; ^ SendAsync(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt; ^ target, TInput item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member SendAsync : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Input&gt; * 'Input * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync (target, item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" RefType="this" />
        <Parameter Name="item" Type="TInput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TInput"><span data-ttu-id="55691-374">Указывает тип данных, отправляемых целевому объекту.</span><span class="sxs-lookup"><span data-stu-id="55691-374">Specifies the type of the data to post to the target.</span></span></typeparam>
        <param name="target"><span data-ttu-id="55691-375">Целевой объект, на который требуется отправить данные.</span><span class="sxs-lookup"><span data-stu-id="55691-375">The target to which to post the data.</span></span></param>
        <param name="item"><span data-ttu-id="55691-376">Элемент, предлагаемый целевому объекту.</span><span class="sxs-lookup"><span data-stu-id="55691-376">The item being offered to the target.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="55691-377">Токен отмены, с которым требуется запросить отмену операции отправки.</span><span class="sxs-lookup"><span data-stu-id="55691-377">The cancellation token with which to request cancellation of the send operation.</span></span></param>
        <summary><span data-ttu-id="55691-378">Асинхронно предлагает сообщение в целевому блоку сообщений, позволяет задержки.</span><span class="sxs-lookup"><span data-stu-id="55691-378">Asynchronously offers a message to the target message block, allowing for postponement.</span></span></summary>
        <returns><span data-ttu-id="55691-379">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронную отправку.</span><span class="sxs-lookup"><span data-stu-id="55691-379">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous send.</span></span>  <span data-ttu-id="55691-380">Если целевой объект принимает и использует предлагаемый элемент во время вызова метода SendAsync, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <c>Result</c> возвратит значение true.</span><span class="sxs-lookup"><span data-stu-id="55691-380">If the target accepts and consumes the offered element during the call to SendAsync, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return true.</span></span>  <span data-ttu-id="55691-381">Если целевой объект отклоняет предлагаемый элемент во время вызова, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <c>Result</c> возвратит значение false.</span><span class="sxs-lookup"><span data-stu-id="55691-381">If the target declines the offered element during the call, upon return from the call the resulting <see cref="T:System.Threading.Tasks.Task`1" /> will be completed and its <c>Result</c> property will return false.</span></span> <span data-ttu-id="55691-382">Если целевой объект откладывает предлагаемый элемент, элемент буферизуется до тех пор, пока целевой объект не потребит или не высвободит его; тогда задача завершится, а ее свойство <c>Result</c> будет показывать, было ли потреблено сообщение.</span><span class="sxs-lookup"><span data-stu-id="55691-382">If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the Task will complete, with its <c>Result</c> indicating whether the message was consumed.</span></span> <span data-ttu-id="55691-383">Если целевой объект не пытается употребить или высвободить сообщение, возвращаемая задача никогда не будет завершена.</span><span class="sxs-lookup"><span data-stu-id="55691-383">If the target never attempts to consume or release the message, the returned task will never complete.</span></span>  
  
<span data-ttu-id="55691-384">Если отмена запрашивается до того, как целевой объект успешно потребил отправленные данные, возвращенная задача будет завершена в отмененном состоянии, и данные больше не будут доступны целевому объекту.</span><span class="sxs-lookup"><span data-stu-id="55691-384">If cancellation is requested before the target has successfully consumed the sent data, the returned task will complete in the Canceled state and the data will no longer be available to the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55691-385">Параметр <paramref name="target" /> имеет значение NULL (Nothing в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="55691-385">The  <paramref name="target" /> is null (Nothing in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryReceive&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public static bool TryReceive&lt;TOutput&gt; (this System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt; source, out TOutput item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReceive&lt;TOutput&gt;(class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!!TOutput&gt; source, [out] !!TOutput&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReceive(Of TOutput) (source As IReceivableSourceBlock(Of TOutput), ByRef item As TOutput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReceive(System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;TOutput&gt; ^ source, [Runtime::InteropServices::Out] TOutput % item);" />
      <MemberSignature Language="F#" Value="static member TryReceive : System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;'Output&gt; * 'Output -&gt; bool" Usage="System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive (source, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;" RefType="this" />
        <Parameter Name="item" Type="TOutput" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="55691-386">Указывает тип данных, содержащихся в источнике.</span><span class="sxs-lookup"><span data-stu-id="55691-386">Specifies the type of data contained in the source.</span></span></typeparam>
        <param name="source"><span data-ttu-id="55691-387">Источник, от которого требуется выполнить прием.</span><span class="sxs-lookup"><span data-stu-id="55691-387">The source from which to receive.</span></span></param>
        <param name="item"><span data-ttu-id="55691-388">Элемент, полученный от источника.</span><span class="sxs-lookup"><span data-stu-id="55691-388">The item received from the source.</span></span></param>
        <summary><span data-ttu-id="55691-389">Пытается синхронно получить элемент из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span><span class="sxs-lookup"><span data-stu-id="55691-389">Attempts to synchronously receive an item from the <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="55691-390">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55691-390"><see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55691-391">Этот метод не ждет, пока источник не попытается предоставить элемент.</span><span class="sxs-lookup"><span data-stu-id="55691-391">This method does not wait until the source has an item to provide.</span></span>  
  
 <span data-ttu-id="55691-392">Будет возвращено, доступен ли элемент.</span><span class="sxs-lookup"><span data-stu-id="55691-392">It will return whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
