<Type Name="GenerateScriptTypeAttribute" FullName="System.Web.Script.Services.GenerateScriptTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f8109f38b63ce4436589ce29f59633139ed9aa3e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69135810" /></Metadata><TypeSignature Language="C#" Value="public sealed class GenerateScriptTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GenerateScriptTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.GenerateScriptTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GenerateScriptTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenerateScriptTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type GenerateScriptTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что тип сервера должен создаваться в прокси-объекте. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В веб-сайтах ASP.NET с поддержкой AJAX ASP.NET может автоматически создавать прокси-объекты для методов класса веб-службы. Это делает это для большинства типов верхнего уровня для входных параметров и возвращаемых значений всех веб-методов, которые помечены <xref:System.Web.Script.Services.ScriptServiceAttribute>как.  
  
 В других случаях, если прокси-объекты создаются для типов серверов, необходимо применить <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> их вручную. Можно применить <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> к самой веб-службе или к любому методу веб-службы `static` или методу страницы <xref:System.Web.Services.WebMethodAttribute>, помеченному как.  
  
 В некоторых случаях, даже если тип соответствует входному параметру или возвращаемому значению метода веб-службы, прокси-сервер не будет создан автоматически. В этом случае необходимо использовать <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> атрибут для создания прокси-объекта для типа. Это происходит для универсальных типов и массивов, имеющих более одного аргумента, `Dictionary<string,<T>>`например.  
  
 Один или несколько экземпляров <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> можно применить к классу или методу веб-службы. Затем ASP.NET создаст прокси-класс ECMAScript (JavaScript) для каждого типа верхнего уровня, на который ссылается каждое объявление <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>.  
  
> [!NOTE]
>  Если необходимо создать прокси-объекты для вложенных типов, необходимо вручную применить <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> к каждому вложенному типу. ASP.NET создает прокси только для типов верхнего уровня и не автоматически рекурсивно применяет атрибут к вложенным типам.  
  
 Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 В следующем примере показано, как применить <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> к классу веб-службы и к веб-методу. В результате `ColorObject` тип и его вложенный тип `FavoriteColors` включаются в прокси-объект.  
  
  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">Использование веб-служб в ASP.NET AJAX</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0">Вызов веб-служб из клиентского скрипта в ASP.NET AJAX</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenerateScriptTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenerateScriptTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Services.GenerateScriptTypeAttribute : Type -&gt; System.Web.Script.Services.GenerateScriptTypeAttribute" Usage="new System.Web.Script.Services.GenerateScriptTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Тип, который нужно включить в прокси-класс.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> для указанного типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> Свойство является необязательным именованным параметром для этого конструктора.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> для создания прокси-объекта для указанного типа, использующего конкретный идентификатор типа для маркера метаданных.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTypeId">
      <MemberSignature Language="C#" Value="public string ScriptTypeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptTypeId" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTypeId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptTypeId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTypeId : string with get, set" Usage="System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает идентификатор типа для метки метаданных типа.</summary>
        <value>Идентификатор типа для метки метаданных типа в сериализованной строке формата JSON. По умолчанию значением является имя типа с указанием сборки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство является необязательным. Если указано, то значение <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> используется для маркера метаданных типа ("__type") в сериализованной строке JSON вместо имени с указанием сборки типа. Во время десериализации Сопоставитель типов, связанный с <xref:System.Web.Script.Serialization.JavaScriptSerializer> объектом, будет использовать значение маркера метаданных типа для обратного сопоставления с соответствующим управляемым типом.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип, включенный в прокси-объект.</summary>
        <value>Объект типа, включенный в созданный прокси-объект.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
