<Type Name="ImmutableDictionary" FullName="System.Collections.Immutable.ImmutableDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf24da6ccab8dac986f9afa9bae735d33b083f5a" /><Meta Name="ms.sourcegitcommit" Value="0959d8d88abd48debd487e54e54df29d51634f7f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/02/2019" /><Meta Name="ms.locfileid" Value="68731537" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableDictionary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableDictionary abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableDictionary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ff21d-101">Содержит набор методов инициализации для экземпляров класса <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="ff21d-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> class.</span></span>  
  
 <span data-ttu-id="ff21d-102">**Пакет NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">сведения о неизменяемых коллекциях и способах их установки</see>)</span><span class="sxs-lookup"><span data-stu-id="ff21d-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="ff21d-103">Данный тип потокобезопасен.</span><span class="sxs-lookup"><span data-stu-id="ff21d-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Contains&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; map, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; map, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TKey, TValue) (map As IImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ map, TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; bool" Usage="System.Collections.Immutable.ImmutableDictionary.Contains (map, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="map" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-104">Тип ключей в неизменяемом словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-104">The type of the keys in the immutable dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-105">Тип значений в неизменяемом словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-105">The type of the values in the immutable dictionary.</span></span></typeparam>
        <param name="map"><span data-ttu-id="ff21d-106">Неизменяемый словарь, в котором нужно выполнить поиск.</span><span class="sxs-lookup"><span data-stu-id="ff21d-106">The immutable dictionary to search.</span></span></param>
        <param name="key"><span data-ttu-id="ff21d-107">Ключ, который нужно найти в неизменяемом словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-107">The key to locate in the immutable dictionary.</span></span></param>
        <param name="value"><span data-ttu-id="ff21d-108">Значение, которое нужно найти для указанного ключа, если он будет найден.</span><span class="sxs-lookup"><span data-stu-id="ff21d-108">The value to locate on the specified key, if the key is found.</span></span></param>
        <summary><span data-ttu-id="ff21d-109">Определяет, содержит ли неизменяемый словарь указанную пару "ключ-значение".</span><span class="sxs-lookup"><span data-stu-id="ff21d-109">Determines whether the specified immutable dictionary contains the specified key/value pair.</span></span></summary>
        <returns><span data-ttu-id="ff21d-110">Значение <see langword="true" />, если эта карта содержит указанную пару "ключ-значение", в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ff21d-110"><see langword="true" /> if this map contains the specified key/value pair; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-111">Тип ключей, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-111">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-112">Тип значений, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-112">The type of values stored by the dictionary.</span></span></typeparam>
        <summary><span data-ttu-id="ff21d-113">Создает пустой неизменяемый словарь.</span><span class="sxs-lookup"><span data-stu-id="ff21d-113">Creates an empty immutable dictionary.</span></span></summary>
        <returns><span data-ttu-id="ff21d-114">Пустой неизменяемый словарь.</span><span class="sxs-lookup"><span data-stu-id="ff21d-114">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-115">Тип ключей, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-115">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-116">Тип значений, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-116">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="ff21d-117">Реализация, которую нужно использовать для определения равенства ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-117">The implementation to use to determine the equality of keys in the dictionary.</span></span></param>
        <summary><span data-ttu-id="ff21d-118">Создает пустой неизменяемый словарь, который использует указанную функцию сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-118">Creates an empty immutable dictionary that uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="ff21d-119">Пустой неизменяемый словарь.</span><span class="sxs-lookup"><span data-stu-id="ff21d-119">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-120">Тип ключей, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-120">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-121">Тип значений, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-121">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="ff21d-122">Реализация, которую нужно использовать для определения равенства ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-122">The implementation to use to determine the equality of keys in the dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="ff21d-123">Реализация, которую нужно использовать для определения равенства значений в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-123">The implementation to use to determine the equality of values in the dictionary.</span></span></param>
        <summary><span data-ttu-id="ff21d-124">Создает пустой неизменяемый словарь, который использует указанные функции сравнения ключей и значений.</span><span class="sxs-lookup"><span data-stu-id="ff21d-124">Creates an empty immutable dictionary that uses the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="ff21d-125">Пустой неизменяемый словарь.</span><span class="sxs-lookup"><span data-stu-id="ff21d-125">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-126">Тип ключей, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-126">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-127">Тип значений, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-127">The type of values stored by the dictionary.</span></span></typeparam>
        <summary><span data-ttu-id="ff21d-128">Создает новый построитель неизменяемых словарей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-128">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="ff21d-129">Новый построитель.</span><span class="sxs-lookup"><span data-stu-id="ff21d-129">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-130">Тип ключей, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-130">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-131">Тип значений, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-131">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="ff21d-132">Функция сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-132">The key comparer.</span></span></param>
        <summary><span data-ttu-id="ff21d-133">Создает новый построитель неизменяемых словарей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-133">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="ff21d-134">Новый построитель.</span><span class="sxs-lookup"><span data-stu-id="ff21d-134">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-135">Тип ключей, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-135">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-136">Тип значений, которые хранятся в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-136">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="ff21d-137">Функция сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-137">The key comparer.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="ff21d-138">Функция сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="ff21d-138">The value comparer.</span></span></param>
        <summary><span data-ttu-id="ff21d-139">Создает новый построитель неизменяемых словарей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-139">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="ff21d-140">Новый построитель.</span><span class="sxs-lookup"><span data-stu-id="ff21d-140">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-141">Тип ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-141">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-142">Тип значений в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-142">The type of values in the dictionary.</span></span></typeparam>
        <param name="items"><span data-ttu-id="ff21d-143">Элементы, которыми нужно заполнить словарь, прежде чем он станет неизменяемым.</span><span class="sxs-lookup"><span data-stu-id="ff21d-143">The items used to populate the dictionary before it's immutable.</span></span></param>
        <summary><span data-ttu-id="ff21d-144">Создает новый неизменяемый словарь, который содержит указанные элементы.</span><span class="sxs-lookup"><span data-stu-id="ff21d-144">Creates a new immutable dictionary that contains the specified items.</span></span></summary>
        <returns><span data-ttu-id="ff21d-145">Новый неизменяемый словарь, который содержит указанные элементы.</span><span class="sxs-lookup"><span data-stu-id="ff21d-145">A new immutable dictionary that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-146">Тип ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-146">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-147">Тип значений в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-147">The type of values in the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="ff21d-148">Реализация функции сравнения, которую нужно использовать для проверки ключей на предмет равенства.</span><span class="sxs-lookup"><span data-stu-id="ff21d-148">The comparer implementation to use to compare keys for equality.</span></span></param>
        <param name="items"><span data-ttu-id="ff21d-149">Элементы, которые нужно добавить в словарь, прежде чем он станет неизменяемым.</span><span class="sxs-lookup"><span data-stu-id="ff21d-149">The items to add to the dictionary before it's immutable.</span></span></param>
        <summary><span data-ttu-id="ff21d-150">Создает новый неизменяемый словарь, который содержит заданные элементы и использует указанную функцию сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-150">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="ff21d-151">Новый неизменяемый словарь, который содержит заданные элементы и использует указанную функцию сравнения.</span><span class="sxs-lookup"><span data-stu-id="ff21d-151">A new immutable dictionary that contains the specified items and uses the specified comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, valueComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-152">Тип ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-152">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-153">Тип значений в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-153">The type of values in the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="ff21d-154">Реализация функции сравнения, которую нужно использовать для проверки ключей на предмет равенства.</span><span class="sxs-lookup"><span data-stu-id="ff21d-154">The comparer implementation to use to compare keys for equality.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="ff21d-155">Реализация функции сравнения, которую нужно использовать для проверки значений на предмет равенства.</span><span class="sxs-lookup"><span data-stu-id="ff21d-155">The comparer implementation to use to compare values for equality.</span></span></param>
        <param name="items"><span data-ttu-id="ff21d-156">Элементы, которые нужно добавить в словарь, прежде чем он станет неизменяемым.</span><span class="sxs-lookup"><span data-stu-id="ff21d-156">The items to add to the dictionary before it's immutable.</span></span></param>
        <summary><span data-ttu-id="ff21d-157">Создает новый неизменяемый словарь, который содержит заданные элементы и использует указанную функцию сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-157">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="ff21d-158">Новый неизменяемый словарь, который содержит заданные элементы и использует указанную функцию сравнения.</span><span class="sxs-lookup"><span data-stu-id="ff21d-158">A new immutable dictionary that contains the specified items and uses the specified comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-159">Тип ключа.</span><span class="sxs-lookup"><span data-stu-id="ff21d-159">The type of the key.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-160">Тип значения.</span><span class="sxs-lookup"><span data-stu-id="ff21d-160">The type of the value.</span></span></typeparam>
        <param name="dictionary"><span data-ttu-id="ff21d-161">Словарь, из которого нужно извлечь значение.</span><span class="sxs-lookup"><span data-stu-id="ff21d-161">The dictionary to retrieve the value from.</span></span></param>
        <param name="key"><span data-ttu-id="ff21d-162">Ключ, который нужно найти.</span><span class="sxs-lookup"><span data-stu-id="ff21d-162">The key to search for.</span></span></param>
        <summary><span data-ttu-id="ff21d-163">Возвращает значение для указанного ключа, если такой ключ есть в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-163">Gets the value for a given key if a matching key exists in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="ff21d-164">Значение для ключа или <c>default(TValue)</c>, если соответствующий ключ не найден.</span><span class="sxs-lookup"><span data-stu-id="ff21d-164">The value for the key, or <c>default(TValue)</c> if no matching key was found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key, !!TValue defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="defaultValue" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-165">Тип ключа.</span><span class="sxs-lookup"><span data-stu-id="ff21d-165">The type of the key.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-166">Тип значения.</span><span class="sxs-lookup"><span data-stu-id="ff21d-166">The type of the value.</span></span></typeparam>
        <param name="dictionary"><span data-ttu-id="ff21d-167">Словарь, из которого нужно извлечь значение.</span><span class="sxs-lookup"><span data-stu-id="ff21d-167">The dictionary to retrieve the value from.</span></span></param>
        <param name="key"><span data-ttu-id="ff21d-168">Ключ, который нужно найти.</span><span class="sxs-lookup"><span data-stu-id="ff21d-168">The key to search for.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="ff21d-169">Значение по умолчанию, которое нужно вернуть, если в словаре не найден соответствующий ключ.</span><span class="sxs-lookup"><span data-stu-id="ff21d-169">The default value to return if no matching key is found in the dictionary.</span></span></param>
        <summary><span data-ttu-id="ff21d-170">Возвращает значение для указанного ключа, если такой ключ есть в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-170">Gets the value for a given key if a matching key exists in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="ff21d-171">Значение для ключа или <paramref name="defaultValue" />, если такой ключ не найден.</span><span class="sxs-lookup"><span data-stu-id="ff21d-171">The value for the key, or <paramref name="defaultValue" /> if no matching key was found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-172">Тип ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-172">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-173">Тип значений в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-173">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="ff21d-174">Последовательность пар "ключ-значение", для которой нужно выполнить перечисление.</span><span class="sxs-lookup"><span data-stu-id="ff21d-174">The sequence of key/value pairs to enumerate.</span></span></param>
        <summary><span data-ttu-id="ff21d-175">Выполняет перечисление последовательности пар "ключ-значение" и создает неизменяемый словарь на основе ее содержимого.</span><span class="sxs-lookup"><span data-stu-id="ff21d-175">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</span></span></summary>
        <returns><span data-ttu-id="ff21d-176">Неизменяемый словарь, который содержит пары "ключ-значение" в указанной последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-176">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Immutable.ImmutableDictionary`2.Builder{``0,``1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder" RefType="this" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-177">Тип ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-177">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-178">Тип значений в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-178">The type of the values in the dictionary.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="ff21d-179">Построитель для создания неизменяемого словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-179">The builder to create the immutable dictionary from.</span></span></param>
        <summary><span data-ttu-id="ff21d-180">Создает неизменяемый словарь из текущего содержимого словаря построителя.</span><span class="sxs-lookup"><span data-stu-id="ff21d-180">Creates an immutable dictionary from the current contents of the builder's dictionary.</span></span></summary>
        <returns><span data-ttu-id="ff21d-181">Неизменяемый словарь, содержащий текущее содержимое словаря построителя.</span><span class="sxs-lookup"><span data-stu-id="ff21d-181">An immutable dictionary that contains the current contents in the builder's dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-182">Тип ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-182">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-183">Тип значений в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-183">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="ff21d-184">Последовательность пар "ключ-значение", для которой нужно выполнить перечисление.</span><span class="sxs-lookup"><span data-stu-id="ff21d-184">The sequence of key/value pairs to enumerate.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="ff21d-185">Функция сравнения ключей, которую нужно использовать при создании неизменяемого словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-185">The key comparer to use when building the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="ff21d-186">Выполняет перечисление последовательности пар "ключ-значение" и создает на основе ее содержимого неизменяемый словарь с использованием указанной функции сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-186">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="ff21d-187">Неизменяемый словарь, который содержит пары "ключ-значение" в указанной последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-187">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="ff21d-188">Тип ключей в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-188">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-189">Тип значений в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-189">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="ff21d-190">Последовательность пар "ключ-значение", для которой нужно выполнить перечисление.</span><span class="sxs-lookup"><span data-stu-id="ff21d-190">The sequence of key/value pairs to enumerate.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="ff21d-191">Функция сравнения ключей, которую нужно использовать при создании неизменяемого словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-191">The key comparer to use when building the immutable dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="ff21d-192">Функция сравнения значений, которую нужно использовать в неизменяемом словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-192">The value comparer to use for the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="ff21d-193">Выполняет перечисление последовательности пар "ключ-значение" и создает на основе ее содержимого неизменяемый словарь с использованием указанных функций сравнения ключей и значений.</span><span class="sxs-lookup"><span data-stu-id="ff21d-193">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="ff21d-194">Неизменяемый словарь, который содержит пары "ключ-значение" в указанной последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-194">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="ff21d-195">Тип элементов исходной коллекции.</span><span class="sxs-lookup"><span data-stu-id="ff21d-195">The type of element in the source collection.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="ff21d-196">Тип ключей в результирующем неизменяемом словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-196">The type of key in the resulting immutable dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="ff21d-197">Исходная коллекция, используемая для создания неизменяемого словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-197">The source collection used to generate the immutable dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="ff21d-198">Функция, используемая для преобразования ключей для неизменяемого словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-198">The function used to transform keys for the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="ff21d-199">Создает неизменяемый словарь на основе существующей коллекции элементов, применяя функцию преобразования к исходным ключам.</span><span class="sxs-lookup"><span data-stu-id="ff21d-199">Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</span></span></summary>
        <returns><span data-ttu-id="ff21d-200">Неизменяемый словарь, который содержит элементы из объекта <paramref name="source" /> и ключи которого получены с помощью функции преобразования <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="ff21d-200">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="ff21d-201">Тип элементов исходной коллекции.</span><span class="sxs-lookup"><span data-stu-id="ff21d-201">The type of element in the source collection.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="ff21d-202">Тип ключей в результирующем неизменяемом словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-202">The type of key in the resulting immutable dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="ff21d-203">Исходная коллекция, используемая для создания неизменяемого словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-203">The source collection used to generate the immutable dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="ff21d-204">Функция, используемая для преобразования ключей для неизменяемого словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-204">The function used to transform keys for the immutable dictionary.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="ff21d-205">Функция сравнения ключей, которую нужно использовать в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-205">The key comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="ff21d-206">Создает неизменяемый словарь на основе последовательности, подвергнутой определенному преобразованию.</span><span class="sxs-lookup"><span data-stu-id="ff21d-206">Constructs an immutable dictionary based on some transformation of a sequence.</span></span></summary>
        <returns><span data-ttu-id="ff21d-207">Неизменяемый словарь, который содержит элементы из объекта <paramref name="source" /> и ключи которого получены с помощью функции преобразования <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="ff21d-207">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="ff21d-208">Тип элементов последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-208">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="ff21d-209">Тип ключей в результирующем словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-209">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-210">Тип значений в результирующем словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-210">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="ff21d-211">Последовательность, перечисление которой нужно выполнить для создания словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-211">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="ff21d-212">Функция, которая создает ключ для словаря на основе каждого элемента последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-212">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="ff21d-213">Функция, которая создает значение для словаря на основе каждого элемента последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-213">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <summary><span data-ttu-id="ff21d-214">Выполняет перечисление и преобразование последовательности и создает неизменяемый словарь на основе ее содержимого.</span><span class="sxs-lookup"><span data-stu-id="ff21d-214">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</span></span></summary>
        <returns><span data-ttu-id="ff21d-215">Неизменяемый словарь, который содержит элементы из указанной последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-215">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="ff21d-216">Тип элементов последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-216">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="ff21d-217">Тип ключей в результирующем словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-217">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-218">Тип значений в результирующем словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-218">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="ff21d-219">Последовательность, перечисление которой нужно выполнить для создания словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-219">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="ff21d-220">Функция, которая создает ключ для словаря на основе каждого элемента последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-220">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="ff21d-221">Функция, которая создает значение для словаря на основе каждого элемента последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-221">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="ff21d-222">Функция сравнения ключей, которую нужно использовать в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-222">The key comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="ff21d-223">Выполняет перечисление и преобразование последовательности и создает на основе ее содержимого неизменяемый словарь с использованием указанной функции сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="ff21d-223">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="ff21d-224">Неизменяемый словарь, который содержит элементы из указанной последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-224">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="ff21d-225">Тип элементов последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-225">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="ff21d-226">Тип ключей в результирующем словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-226">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="ff21d-227">Тип значений в результирующем словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-227">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="ff21d-228">Последовательность, перечисление которой нужно выполнить для создания словаря.</span><span class="sxs-lookup"><span data-stu-id="ff21d-228">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="ff21d-229">Функция, которая создает ключ для словаря на основе каждого элемента последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-229">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="ff21d-230">Функция, которая создает значение для словаря на основе каждого элемента последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-230">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="ff21d-231">Функция сравнения ключей, которую нужно использовать в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-231">The key comparer to use for the dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="ff21d-232">Функция сравнения значений, которую нужно использовать в словаре.</span><span class="sxs-lookup"><span data-stu-id="ff21d-232">The value comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="ff21d-233">Выполняет перечисление и преобразование последовательности и создает на основе ее содержимого неизменяемый словарь с использованием указанных функций сравнения ключей и значений.</span><span class="sxs-lookup"><span data-stu-id="ff21d-233">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="ff21d-234">Неизменяемый словарь, который содержит элементы из указанной последовательности.</span><span class="sxs-lookup"><span data-stu-id="ff21d-234">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
