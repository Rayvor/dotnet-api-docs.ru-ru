<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8244a38f035a96f53aaf4b667da80a3de717304" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70540365" /></Metadata><TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <TypeSignature Language="F#" Value="type IPlaybackControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Работает в очередях компонентов при неправильной обработке серверных ошибок воспроизведения и ошибок клиентов в механизме доставки очереди сообщений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс исключений, определенный для компонента в каталоге COM+, реализует <xref:System.EnterpriseServices.IPlaybackControl> и интерфейс для исходного класса. Реализации методов исходного интерфейса класса используются для выполнения обработки исключений для методов, завершившихся сбоем, в самом классе. Они будут вызываться после <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> или <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> для обработки исключений для первоначально вызванного метода.  
  
 Проигрыватель очередей компонентов вызывает методы <xref:System.EnterpriseServices.IPlaybackControl> , чтобы сообщить объекту обработчика исключений о том, что сообщение будет размещено в конечной очереди RESTful или недоставленных сообщений. Затем проигрыватель очередей компонентов вызывает тот же метод в объекте обработчика исключений, который завершился сбоем при вызове исходного метода. Объект обработчика исключений может реализовать альтернативу, например, путем сбора диагностических сведений о проблемах или создания объекта или сообщения, которое информирует клиента о проблеме. Если приложение не реализует <xref:System.EnterpriseServices.IPlaybackControl>, подозрительное сообщение помещается в последнюю или очередь недоставленных сообщений, когда проигрыватель очередей компонентов исчерпал все повторы.  
  
 Опасное сообщение — это сообщение, которое не может быть обработано по какой-либо причине, возможно, из-за проблемы с сервером или системой очередей. Выполняется откат транзакции, и сообщение о сбое переходит в начало очереди. При повторном постановке сообщения в очередь происходит одно и то же условие. Это сообщение может продолжать циклическим образом до тех пор, пока не будет сделано что-то для устранения проблемы. Служба очередей компонентов обрабатывает подозрительное сообщение с помощью ряда повторных попыток. После нескольких неудачных попыток сообщение перемещается в конечную очередь RESTful. Подозрительные сообщения остаются в очереди RESTful до тех пор, пока они не будут перемещены вручную с помощью средства перемещения сообщений очередей компонентов.  
  
 Ситуацию с подозрительными сообщениями также можно устранить программно с <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> помощью метода, который информирует автора серверного компонента о том, что все попытки воспроизвести отложенную активацию завершились сбоем.  
  
 Если обнаруживается опасное сообщение, вы можете быстро решить основную причину проблемы. Например, если по какой-то причине сервер был отключен от сети, сервер можно вернуть в режим «в сети». Если не удается быстро решить проблему, можно автоматически создать другую транзакцию, которая уведомляет запрашивающей стороны о том, что транзакция не была выполнена. Затем запрашивающий может выполнить компенсирующий транзакцию, которая изменяет результат уже зафиксированной транзакции.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalClientRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalClientRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Оповещает компонент обработчика исключений клиента о том, что все попытки очереди сообщений по доставке сообщения на сервер были отклонены, и сообщение оборвалось в очереди недоставленных сообщений об активных транзакциях клиента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда сообщения поступают в очередь недоставленных сообщений активной очереди, COM+ пытается вызвать обработчик исключений на стороне клиента, связанный с классом сервера для доставки этого уведомления. Это достигается путем первого вызова <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, а затем вызова версии обработки исключений метода Failed в объекте обработчика исключений. Этот метод исключения может выполнить действие исключения, например запись сбоя, отправку сообщения администратору или выполнение компенсирующих действий на стороне клиента (обратная операция предыдущей транзакции). Если метод исключения не выполнен успешно, сообщение остается в очереди недоставленных сообщений активной транзакции.  
  
 Очередь недоставленных сообщений об активных сообщениях можно просмотреть в обозревателе очереди сообщений Майкрософт (MSMQ).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalServerRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalServerRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Оповещает реализацию класса исключений сервера о том, что все попытки воспроизведения отложенной активации для сервера не были выполнены, и сообщение будет перемещено в очередь для окончательного хранения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда сообщения поступают в очередь недоставленных сообщений активной очереди, COM+ пытается вызвать обработчик исключений на стороне сервера, связанный с классом сервера для доставки этого уведомления. Для этого сначала вызывается <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>метод, а затем вызывается версия обработки исключений метода Failed в объекте обработчика исключений. Этот метод исключения может выполнить действие исключения, например запись сбоя, отправку сообщения администратору или выполнение компенсирующих действий на стороне клиента (обратная операция предыдущей транзакции). Объект сервера должен выполнить все усилия для успешного завершения этой транзакции. В противном случае для повторной обработки сообщения требуется вмешательство вручную. Если метод исключения завершился неудачно, сообщение перемещается в конечную очередь RESTful.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
