<Type Name="ApplicationQueuingAttribute" FullName="System.EnterpriseServices.ApplicationQueuingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="18b7c782d469314feb4eb3af734cfcb4b2d1f01b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69246865" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationQueuingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ApplicationQueuingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationQueuingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationQueuingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ApplicationQueuingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Включает поддержку очередей для отмеченной сборки и позволяет приложению считывать вызовы методов из очередей сообщений. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список начальных значений свойств для экземпляра <xref:System.EnterpriseServices.ApplicationQueuingAttribute>см. в <xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A> разделе Конструктор.  
  
 Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.EnterpriseServices.ApplicationQueuingAttribute> типа.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#0)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ApplicationQueuingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationQueuingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.EnterpriseServices.ApplicationQueuingAttribute" />, включая поддержку очередей для сборки и инициализируя объекты <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />, <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" /> и <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны начальные значения свойств для экземпляра <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  
  
|Свойство.|Значение|  
|--------------|-----------|  
|`Enabled`|`true`|  
|`QueueListenerEnabled`|`false`|  
|`MaxListenerThreads`|ноль (0)|  
  
   
  
## Examples  
 В следующем примере кода создается новый <xref:System.EnterpriseServices.ApplicationQueuingAttribute>объект.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, включена ли поддержка очередей.</summary>
        <value>Значение <see langword="true" />, если поддержка очередей включена; в противном случае — значение <see langword="false" />. Значение по умолчанию, заданное конструктором, — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию приложения не могут использовать компоненты очередей. Создание экземпляров <xref:System.EnterpriseServices.ApplicationQueuingAttribute> позволяет приложению использовать компоненты из очереди, однако оно не позволяет приложению прослушивать сообщения в очереди от клиентов.  
  
   
  
## Examples  
 В следующем примере кода получается и задается значение `ApplicationQueuing` <xref:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled%2A> свойства атрибута.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxListenerThreads">
      <MemberSignature Language="C#" Value="public int MaxListenerThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxListenerThreads" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxListenerThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxListenerThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxListenerThreads : int with get, set" Usage="System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число потоков, используемых для извлечения сообщений из очереди и включения соответствующего компонента.</summary>
        <value>Наибольшее число потоков, используемых для обработки сообщений, поступающих в очередь. По умолчанию используется значение ноль.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Допустимый диапазон для этого свойства — от 0 до 1000. По умолчанию используется значение ноль. Для вновь созданного приложения этот параметр является производным от алгоритма, который в настоящее время используется для определения количества потоков прослушивателя по умолчанию: 16 раз число процессоров на сервере.  
  
 Дополнительные сведения см. в `QcListenerMaxThreads` разделе " [приложения (com+)"](https://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/c0c46592-5282-412d-8f54-67637be8218a.asp).  
  
   
  
## Examples  
 В следующем примере кода получается и задается значение `ApplicationQueuing` <xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads%2A> свойства атрибута.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#4)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueListenerEnabled">
      <MemberSignature Language="C#" Value="public bool QueueListenerEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueueListenerEnabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueListenerEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueueListenerEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.QueueListenerEnabled : bool with get, set" Usage="System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, будет ли приложение принимать вызовы компонентов очереди от клиентов.</summary>
        <value>Значение <see langword="true" />, если приложение принимает вызовы компонентов очереди, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода получается и задается значение `ApplicationQueuing` <xref:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled%2A> свойства атрибута.  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#3)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
