<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53f02b0dca103a2278f68dfe7522f65b914e4d15" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69358564" /></Metadata><TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <TypeSignature Language="F#" Value="type IProcessInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c8a76-101">Поддерживает методы, которые могут быть вызваны при запуске или завершении работы компонента COM.</span><span class="sxs-lookup"><span data-stu-id="c8a76-101">Supports methods that can be called when a COM component starts up or shuts down.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a76-102">Реализуйте <xref:System.EnterpriseServices.IProcessInitializer> методы интерфейса для обслуживаемых компонентов, если вы хотите выполнить код инициализации или завершения работы, когда серверный процесс (Dllhost. exe) запускается или завершается соответственно.</span><span class="sxs-lookup"><span data-stu-id="c8a76-102">Implement the <xref:System.EnterpriseServices.IProcessInitializer> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</span></span>  
  
 <span data-ttu-id="c8a76-103">COM+ предоставляет `Startup` события `Shutdown` и, когда программа Dllhost. exe запускается и завершает работу.</span><span class="sxs-lookup"><span data-stu-id="c8a76-103">COM+ provides `Startup` and `Shutdown` events when Dllhost.exe starts and ends.</span></span> <span data-ttu-id="c8a76-104">Эта функция позволяет выполнять пользовательскую инициализацию и очищать код с помощью любых компонентов COM+, установленных в серверном приложении COM+ (которые также называют компонентами сервера).</span><span class="sxs-lookup"><span data-stu-id="c8a76-104">This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</span></span> <span data-ttu-id="c8a76-105">Экземпляр каждого компонента, реализующего <xref:System.EnterpriseServices.IProcessInitializer> интерфейс, будет создан и сохранен в течение процесса и вызываться в методах интерфейса во время запуска и завершения работы.</span><span class="sxs-lookup"><span data-stu-id="c8a76-105">An instance of each component that implements the <xref:System.EnterpriseServices.IProcessInitializer> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</span></span> <span data-ttu-id="c8a76-106">При реализации в <xref:System.EnterpriseServices.ServicedComponent>во время регистрации компонента `InitializesServerApplication` в параметре `COMAdminCatalogObject` в коллекции компонентов устанавливается значение `true`.</span><span class="sxs-lookup"><span data-stu-id="c8a76-106">When implemented on a <xref:System.EnterpriseServices.ServicedComponent>, during registration of the component, the `InitializesServerApplication` parameter in the `COMAdminCatalogObject` within the Components collection is set to `true`.</span></span>  
  
 <span data-ttu-id="c8a76-107">С помощью событий `Shutdown`иможно инициализировать ресурсы, создавать подключения, инициализировать общие данные и выполнять код очистки. `Startup`</span><span class="sxs-lookup"><span data-stu-id="c8a76-107">Using the `Startup` and `Shutdown` events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</span></span> <span data-ttu-id="c8a76-108">Однако не следует получать доступ к состояниям, характерным для COM+, так как экземпляры компонентов сервера еще не созданы.</span><span class="sxs-lookup"><span data-stu-id="c8a76-108">However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</span></span> <span data-ttu-id="c8a76-109">Кроме того, код в `Startup` событиях и `Shutdown` должен возвращать как можно быстрее, так как система ожидает до 90 секунд, чтобы Dllhost. exe мог подготовиться к приему активаций после того, как система запустит процесс.</span><span class="sxs-lookup"><span data-stu-id="c8a76-109">In addition, the code in the `Startup` and `Shutdown` events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</span></span> <span data-ttu-id="c8a76-110">Если программа Dllhost. exe не сообщает о том, что она готова в течение 90 секунд, система завершает процесс; Поэтому все процессы инициализации должны быть завершены в течение этого промежутка времени.</span><span class="sxs-lookup"><span data-stu-id="c8a76-110">If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</span></span> <span data-ttu-id="c8a76-111">Каждый серверный компонент, участвующий в инициализации, должен <xref:System.EnterpriseServices.IProcessInitializer> поддерживать интерфейс.</span><span class="sxs-lookup"><span data-stu-id="c8a76-111">Each server component that participates in initialization must support the <xref:System.EnterpriseServices.IProcessInitializer> interface.</span></span> <span data-ttu-id="c8a76-112">При запуске Dllhost. exe COM+ создает все серверные компоненты, которые запросили эту `QueryInterface` службу, <xref:System.EnterpriseServices.IProcessInitializer> вызывает <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> интерфейс и вызывает функцию.</span><span class="sxs-lookup"><span data-stu-id="c8a76-112">On DllHost.exe startup, COM+ creates all server components that requested this service, calls `QueryInterface` for the <xref:System.EnterpriseServices.IProcessInitializer> interface, and calls the <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> function.</span></span> <span data-ttu-id="c8a76-113">Аналогично, когда процесс dllhost. exe завершает работу, он вызывает <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> функцию для этих ранее сохраненных указателей интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c8a76-113">Similarly, when the DllHost.exe process is shut down, it calls the <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> function on those previously stored interface pointers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iProcessInitializer.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8a76-114">Выполняет действия для завершения работы.</span><span class="sxs-lookup"><span data-stu-id="c8a76-114">Performs shutdown actions.</span></span> <span data-ttu-id="c8a76-115">Вызывается при закрытии программы Dllhost.exe.</span><span class="sxs-lookup"><span data-stu-id="c8a76-115">Called when Dllhost.exe is shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a76-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>не вызывается во время работы с FailFast или другими событиями аварийного завершения.</span><span class="sxs-lookup"><span data-stu-id="c8a76-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> is not called during a failfast or other catastrophic shutdown events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberSignature Language="F#" Value="abstract member Startup : obj -&gt; unit" Usage="iProcessInitializer.Startup punkProcessControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl"><span data-ttu-id="c8a76-117">В Microsoft Windows XP запускается указатель на интерфейс <see langword="IUnknown" /> компонента COM.</span><span class="sxs-lookup"><span data-stu-id="c8a76-117">In Microsoft Windows XP, a pointer to the <see langword="IUnknown" /> interface of the COM component starting up.</span></span> <span data-ttu-id="c8a76-118">В Microsoft Windows 2000 этот аргумент всегда имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8a76-118">In Microsoft Windows 2000, this argument is always <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c8a76-119">Выполняет инициализацию при запуске.</span><span class="sxs-lookup"><span data-stu-id="c8a76-119">Performs initialization at startup.</span></span> <span data-ttu-id="c8a76-120">Вызывается при запуске Dllhost.exe.</span><span class="sxs-lookup"><span data-stu-id="c8a76-120">Called when Dllhost.exe is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a76-121">Объект, на который `punkProcessControl` ссылается, <xref:System.EnterpriseServices.IProcessInitControl> реализует интерфейс.</span><span class="sxs-lookup"><span data-stu-id="c8a76-121">The object referenced by `punkProcessControl` implements an <xref:System.EnterpriseServices.IProcessInitControl> interface.</span></span> <span data-ttu-id="c8a76-122"><xref:System.EnterpriseServices.IProcessInitControl>поддерживает один метод <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="c8a76-122"><xref:System.EnterpriseServices.IProcessInitControl> supports the single method <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span></span>  
  
 <span data-ttu-id="c8a76-123">Код инициализации в <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> может <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>вызывать, с интервалом ожидания, равным количеству секунд, оставшихся до истечения времени ожидания запуска компонента.</span><span class="sxs-lookup"><span data-stu-id="c8a76-123">The initialization code in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> can call the <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
