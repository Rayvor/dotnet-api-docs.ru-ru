<Type Name="EventClassAttribute" FullName="System.EnterpriseServices.EventClassAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74e8673b7c4b1cbf7f333021a9ed7c0ea8504504" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70540385" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventClassAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventClassAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.EventClassAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventClassAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventClassAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type EventClassAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3eeea-101">Помечает класс с атрибутом как класс событий.</span><span class="sxs-lookup"><span data-stu-id="3eeea-101">Marks the attributed class as an event class.</span></span> <span data-ttu-id="3eeea-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="3eeea-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeea-103">Если `EventClass` указан параметр, он не должен быть отключен в каталоге com+; если он включен в каталоге COM+, он должен быть указан в компоненте.</span><span class="sxs-lookup"><span data-stu-id="3eeea-103">If `EventClass` is specified, it must not be disabled in the COM+ catalog; if enabled in the COM+ catalog, it must be specified on the component.</span></span>  
  
 <span data-ttu-id="3eeea-104">Вызовы методов в классе событий никогда не доставляются в реализацию; Вместо этого они доставляются подписчикам событий.</span><span class="sxs-lookup"><span data-stu-id="3eeea-104">Method calls on an event class are never delivered to the implementation; they are instead delivered to event subscribers.</span></span>  
  
 <span data-ttu-id="3eeea-105">Список начальных значений свойств для экземпляра <xref:System.EnterpriseServices.EventClassAttribute>см. в <xref:System.EnterpriseServices.EventClassAttribute.%23ctor%2A> разделе Конструктор.</span><span class="sxs-lookup"><span data-stu-id="3eeea-105">For a list of initial property values for an instance of <xref:System.EnterpriseServices.EventClassAttribute>, see the <xref:System.EnterpriseServices.EventClassAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="3eeea-106">Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="3eeea-106">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventClassAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.EventClassAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventClassAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3eeea-107">Инициализирует новый экземпляр класса <see cref="T:System.EnterpriseServices.EventClassAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="3eeea-107">Initializes a new instance of the <see cref="T:System.EnterpriseServices.EventClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3eeea-108">Для этого атрибута нет ненастроенного значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="3eeea-108">There is no unconfigured default value for this attribute.</span></span> <span data-ttu-id="3eeea-109">В следующей таблице показаны начальные значения свойств для настроенного экземпляра <xref:System.EnterpriseServices.EventClassAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3eeea-109">The following table shows initial property values for a configured instance of <xref:System.EnterpriseServices.EventClassAttribute>.</span></span>  
  
|<span data-ttu-id="3eeea-110">Свойство.</span><span class="sxs-lookup"><span data-stu-id="3eeea-110">Property</span></span>|<span data-ttu-id="3eeea-111">Значение</span><span class="sxs-lookup"><span data-stu-id="3eeea-111">Value</span></span>|  
|--------------|-----------|  
|`FireInParallel`|`false`|  
|`AllowInProcSubscribers`|`true`|  
|`PublisherFilter`|`null`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInprocSubscribers">
      <MemberSignature Language="C#" Value="public bool AllowInprocSubscribers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInprocSubscribers" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.EventClassAttribute.AllowInprocSubscribers" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowInprocSubscribers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInprocSubscribers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowInprocSubscribers : bool with get, set" Usage="System.EnterpriseServices.EventClassAttribute.AllowInprocSubscribers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eeea-112">Получает или задает значение, указывающее, могут ли быть активизированы подписчики в процессе издателя.</span><span class="sxs-lookup"><span data-stu-id="3eeea-112">Gets or sets a value that indicates whether subscribers can be activated in the publisher's process.</span></span></summary>
        <value><span data-ttu-id="3eeea-113">Значение <see langword="true" />, если подписчики могут быть активизированы в процессе издателя, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3eeea-113"><see langword="true" /> if subscribers can be activated in the publisher's process; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireInParallel">
      <MemberSignature Language="C#" Value="public bool FireInParallel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInParallel" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.EventClassAttribute.FireInParallel" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInParallel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInParallel : bool with get, set" Usage="System.EnterpriseServices.EventClassAttribute.FireInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eeea-114">Получает или задает значение, указывающее, должны ли события доставляться подписчикам параллельно.</span><span class="sxs-lookup"><span data-stu-id="3eeea-114">Gets or sets a value that indicates whether events are to be delivered to subscribers in parallel.</span></span></summary>
        <value><span data-ttu-id="3eeea-115">Значение <see langword="true" />, если события доставляются подписчикам параллельно, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3eeea-115"><see langword="true" /> if events are to be delivered to subscribers in parallel; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublisherFilter">
      <MemberSignature Language="C#" Value="public string PublisherFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublisherFilter" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.EventClassAttribute.PublisherFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property PublisherFilter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PublisherFilter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PublisherFilter : string with get, set" Usage="System.EnterpriseServices.EventClassAttribute.PublisherFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3eeea-116">Получает и задает фильтр издателя для метода событий.</span><span class="sxs-lookup"><span data-stu-id="3eeea-116">Gets or sets a publisher filter for an event method.</span></span></summary>
        <value><span data-ttu-id="3eeea-117">Фильтр издателя.</span><span class="sxs-lookup"><span data-stu-id="3eeea-117">The publisher filter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
