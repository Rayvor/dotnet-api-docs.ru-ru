<Type Name="ServicedComponent" FullName="System.EnterpriseServices.ServicedComponent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e1019a546fe134f3c40288fb3232fd92dbe23d0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70476020" /></Metadata><TypeSignature Language="C#" Value="public abstract class ServicedComponent : ContextBoundObject, IDisposable, System.EnterpriseServices.IRemoteDispatch, System.EnterpriseServices.IServicedComponentInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable ServicedComponent extends System.ContextBoundObject implements class System.EnterpriseServices.IRemoteDispatch, class System.EnterpriseServices.IServicedComponentInfo, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServicedComponent&#xA;Inherits ContextBoundObject&#xA;Implements IDisposable, IRemoteDispatch, IServicedComponentInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicedComponent abstract : ContextBoundObject, IDisposable, System::EnterpriseServices::IRemoteDispatch, System::EnterpriseServices::IServicedComponentInfo" />
  <TypeSignature Language="F#" Value="type ServicedComponent = class&#xA;    inherit ContextBoundObject&#xA;    interface IRemoteDispatch&#xA;    interface IDisposable&#xA;    interface IServicedComponentInfo" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ContextBoundObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.IRemoteDispatch</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.EnterpriseServices.IServicedComponentInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a0c9c-101">Представляет базовый класс для всех классов, используя службы COM+.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-101">Represents the base class of all classes using COM+ services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c9c-102">При определенных условиях класс, производный от <xref:System.EnterpriseServices.ServicedComponent> , который выполняется в приложении COM+, может перестать отвечать на запросы.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-102">Under certain conditions, a class that is derived from <xref:System.EnterpriseServices.ServicedComponent> that runs in a COM+ application may stop responding.</span></span> <span data-ttu-id="a0c9c-103">Эта проблема вызвана взаимоблокировкой действия.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-103">This problem is caused by an Activity deadlock.</span></span> <span data-ttu-id="a0c9c-104">Действия могут взаимоблокироваться в многопоточных приложениях из-за асинхронной очистки ссылок на компоненты.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-104">Activities can deadlock on multithreaded applications because of an asynchronous cleanup of component references.</span></span> <span data-ttu-id="a0c9c-105">Чтобы обойти эту проблему, вызовите <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> метод при завершении работы с объектами, производными от. <xref:System.EnterpriseServices.ServicedComponent></span><span class="sxs-lookup"><span data-stu-id="a0c9c-105">To work around this problem, call the <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> method when you complete work with objects derived from <xref:System.EnterpriseServices.ServicedComponent>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="a0c9c-106">Клиентский код должен вызвать `Dispose` на обслуживаемом компоненте, чтобы гарантировать правильную работу.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-106">Client code must call `Dispose` on serviced components to ensure proper operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0c9c-107">В следующем примере кода показано, как предоставить класс как настроенный COM-компонент.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-107">The following code example demonstrates how to expose a class as a configured COM component.</span></span>  
  
 [!code-cpp[EnterpriseServices_Basic#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Basic/CPP/calculator.cpp#1)]
 [!code-csharp[EnterpriseServices_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Basic/CS/calculator.cs#1)]  
  
 <span data-ttu-id="a0c9c-108">Чтобы развернуть этот класс в качестве настроенного компонента COM, необходимо создать надежный ключ, скомпилировать класс в качестве библиотеки и зарегистрировать библиотеку.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-108">To deploy this class as a configured COM component, you must generate a strong key, compile the class as a library, and register the library.</span></span> <span data-ttu-id="a0c9c-109">Эти три шага выполняются следующими тремя командами.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-109">These three steps are accomplished by the following three commands.</span></span>  
  
```  
sn -k Calculator.snk  
csc /t:library Calculator.cs  
regsvcs Calculator.dll  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServicedComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServicedComponent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0c9c-110">Инициализирует новый экземпляр класса <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-110">Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c9c-111">Этот конструктор вызывается конструкторами производного класса для инициализации состояния в этом типе.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-111">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected internal virtual void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit&#xA;override this.Activate : unit -&gt; unit" Usage="servicedComponent.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0c9c-112">Вызывается инфраструктурой при создании объекта или его выделении из пула.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-112">Called by the infrastructure when the object is created or allocated from a pool.</span></span> <span data-ttu-id="a0c9c-113">Чтобы добавить для объектов пользовательский код инициализации, следует переопределить этот метод.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-113">Override this method to add custom initialization code to objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0c9c-114">В следующем примере кода демонстрируется использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-114">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBePooled">
      <MemberSignature Language="C#" Value="protected internal virtual bool CanBePooled ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool CanBePooled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.CanBePooled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CanBePooled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool CanBePooled();" />
      <MemberSignature Language="F#" Value="abstract member CanBePooled : unit -&gt; bool&#xA;override this.CanBePooled : unit -&gt; bool" Usage="servicedComponent.CanBePooled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0c9c-115">Этот метод вызывается инфраструктурой перед возвращением объекта в пул.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-115">This method is called by the infrastructure before the object is put back into the pool.</span></span> <span data-ttu-id="a0c9c-116">Чтобы иметь возможность выбрать, возвращать объект в пул или нет, следует переопределить этот метод.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-116">Override this method to vote on whether the object is put back into the pool.</span></span></summary>
        <returns><span data-ttu-id="a0c9c-117">Значение <see langword="true" />, если компонент служб может быть помещен в пул; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-117"><see langword="true" /> if the serviced component can be pooled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0c9c-118">В следующем примере кода демонстрируется использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-118">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#5](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#5)]
 [!code-csharp[EnterpriseServices_Pooling#5](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#5)]
 [!code-vb[EnterpriseServices_Pooling#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Construct">
      <MemberSignature Language="C#" Value="protected internal virtual void Construct (string s);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Construct(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Construct(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Construct (s As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Construct(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member Construct : string -&gt; unit&#xA;override this.Construct : string -&gt; unit" Usage="servicedComponent.Construct s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a0c9c-119">Строка конструирования.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-119">The construction string.</span></span></param>
        <summary><span data-ttu-id="a0c9c-120">Вызывается инфраструктурой сразу после вызова конструктора при передаче строки конструктора.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-120">Called by the infrastructure just after the constructor is called, passing in the constructor string.</span></span> <span data-ttu-id="a0c9c-121">Чтобы сделать возможным использование значения строки конструирования, следует переопределить этот метод.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-121">Override this method to make use of the construction string value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected internal virtual void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Deactivate();" />
      <MemberSignature Language="F#" Value="abstract member Deactivate : unit -&gt; unit&#xA;override this.Deactivate : unit -&gt; unit" Usage="servicedComponent.Deactivate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0c9c-122">Вызывается инфраструктурой перед тем, как объект будет отключен.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-122">Called by the infrastructure when the object is about to be deactivated.</span></span> <span data-ttu-id="a0c9c-123">Этот метод следует переопределить для добавления в объекты пользовательского кода завершения при использовании JIT-скомпилированного кода или пула объектов.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-123">Override this method to add custom finalization code to objects when just-in-time (JIT) compiled code or object pooling is used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0c9c-124">В следующем примере кода демонстрируется использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-124">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#4](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#4)]
 [!code-csharp[EnterpriseServices_Pooling#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#4)]
 [!code-vb[EnterpriseServices_Pooling#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0c9c-125">Освобождает ресурсы, используемые объектом <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-125">Releases the resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="servicedComponent.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0c9c-126">Освобождает все ресурсы, занятые модулем <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-126">Releases all resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c9c-127">Завершает объект и удаляет связанный контекст COM+.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-127">Finalizes the object and removes the associated COM+ context.</span></span>  
  
 <span data-ttu-id="a0c9c-128">Рекомендуется явно освобождать объекты COM+ и внешние ресурсы, прежде чем сборщик мусора освободит объект.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-128">It is recommended to explicitly release COM+ objects and external resources before the garbage collector frees the object.</span></span> <span data-ttu-id="a0c9c-129">Если внешний ресурс дефицитен или дорогостоящий, повысить производительность можно путем явного освобождения ресурсов COM+, когда они больше не нужны.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-129">If the external resource is scarce or expensive, better performance can be achieved by explicitly releasing COM+ resources when they are no longer needed.</span></span> <span data-ttu-id="a0c9c-130">Явный элемент управления предоставляется <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-130">Explicit control is provided by the <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="a0c9c-131">Вызов <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> позволяет перераспределить ресурсы, используемые <xref:System.EnterpriseServices.ServicedComponent> в, для других целей.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-131">Calling <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> allows the resources used by the <xref:System.EnterpriseServices.ServicedComponent> to be reallocated for other purposes.</span></span> <span data-ttu-id="a0c9c-132">Дополнительные сведения о <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A>см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="a0c9c-132">For more information about <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a0c9c-133">Переопределите <see cref="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" /> метод, чтобы настроить логику удаления для этого класса.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-133">Override the <see cref="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" /> method to customize the dispose logic for this class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="servicedComponent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a0c9c-134">Значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-134"><see langword="true" /> to release both managed and unmanaged resources; otherwise, <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a0c9c-135">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.EnterpriseServices.ServicedComponent" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-135">Releases the unmanaged resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c9c-136">Этот метод вызывается открытым `Dispose` методом <xref:System.Object.Finalize%2A> и методом.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-136">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a0c9c-137">`Dispose`вызывает защищенный `Dispose(Boolean)` метод с параметром `disposing` , для `true`которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-137">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a0c9c-138"><xref:System.Object.Finalize%2A>вызывает метод `disposing` `false`с параметром, равным. `Dispose`</span><span class="sxs-lookup"><span data-stu-id="a0c9c-138"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a0c9c-139">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.EnterpriseServices.ServicedComponent>.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-139">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.EnterpriseServices.ServicedComponent> references.</span></span> <span data-ttu-id="a0c9c-140">Этот метод вызывает метод `Dispose` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-140">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a0c9c-141">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-141">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="a0c9c-142">При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-142">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="a0c9c-143">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="a0c9c-143">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="a0c9c-144"><see langword="Dispose" /> Дополнительные сведения о <see cref="M:System.Object.Finalize" />и см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Переопределение метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="a0c9c-144">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeObject">
      <MemberSignature Language="C#" Value="public static void DisposeObject (System.EnterpriseServices.ServicedComponent sc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisposeObject(class System.EnterpriseServices.ServicedComponent sc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisposeObject (sc As ServicedComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisposeObject(System::EnterpriseServices::ServicedComponent ^ sc);" />
      <MemberSignature Language="F#" Value="static member DisposeObject : System.EnterpriseServices.ServicedComponent -&gt; unit" Usage="System.EnterpriseServices.ServicedComponent.DisposeObject sc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="System.EnterpriseServices.ServicedComponent" />
      </Parameters>
      <Docs>
        <param name="sc"><span data-ttu-id="a0c9c-145">Удаляемый объект.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-145">The object to dispose.</span></span></param>
        <summary><span data-ttu-id="a0c9c-146">Завершает объект и удаляет соответствующую ссылку COM+.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-146">Finalizes the object and removes the associated COM+ reference.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c9c-147">Предпочтительнее использовать шаблон проектирования, `Dispose` <xref:System.EnterpriseServices.ServicedComponent.DisposeObject%2A>а не.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-147">It is preferable to use the `Dispose` design pattern rather than <xref:System.EnterpriseServices.ServicedComponent.DisposeObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone">
      <MemberSignature Language="C#" Value="string IRemoteDispatch.RemoteDispatchAutoDone (string s);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function RemoteDispatchAutoDone (s As String) As String Implements IRemoteDispatch.RemoteDispatchAutoDone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(System::String ^ s) = System::EnterpriseServices::IRemoteDispatch::RemoteDispatchAutoDone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.EnterpriseServices.AutoComplete(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a0c9c-148">Строка, преобразуемая в объект запроса, который реализует интерфейс <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-148">A string to be converted into a request object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</span></span></param>
        <summary><span data-ttu-id="a0c9c-149">Гарантирует, что в контексте COM+ для объекта класса <see cref="T:System.EnterpriseServices.ServicedComponent" /> бит <see langword="done" /> устанавливается в значение <see langword="true" /> после удаленного вызова метода.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-149">Ensures that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's <see langword="done" /> bit is set to <see langword="true" /> after a remote method invocation.</span></span></summary>
        <returns><span data-ttu-id="a0c9c-150">Строка, преобразованная из объекта запроса, реализующего интерфейс <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-150">A string converted from a response object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="a0c9c-151">Метод не принадлежит к опубликованному интерфейсу <xref:System.EnterpriseServices.ServicedComponent> класса и не должен реализовываться в других местах. <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A></span><span class="sxs-lookup"><span data-stu-id="a0c9c-151">The <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A> method does not belong to the published interface of the <xref:System.EnterpriseServices.ServicedComponent> class and does not need to be implemented elsewhere.</span></span>  

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone">
      <MemberSignature Language="C#" Value="string IRemoteDispatch.RemoteDispatchNotAutoDone (string s);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function RemoteDispatchNotAutoDone (s As String) As String Implements IRemoteDispatch.RemoteDispatchNotAutoDone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(System::String ^ s) = System::EnterpriseServices::IRemoteDispatch::RemoteDispatchNotAutoDone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.EnterpriseServices.AutoComplete(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a0c9c-152">Строка, преобразуемая в объект запроса, который реализует интерфейс <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-152">A string to be converted into a request object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</span></span></param>
        <summary><span data-ttu-id="a0c9c-153">Не гарантирует, что в контексте COM+ для объекта класса <see cref="T:System.EnterpriseServices.ServicedComponent" /> для бита <see langword="done" /> устанавливается значение <see langword="true" /> после удаленного вызова метода.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-153">Does not ensure that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's <see langword="done" /> bit is set to <see langword="true" /> after a remote method invocation.</span></span></summary>
        <returns><span data-ttu-id="a0c9c-154">Строка, преобразованная из объекта запроса, реализующего интерфейс <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-154">A string converted from a response object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c9c-155">Метод не принадлежит к опубликованному интерфейсу <xref:System.EnterpriseServices.ServicedComponent> класса и не должен реализовываться в других местах. <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A></span><span class="sxs-lookup"><span data-stu-id="a0c9c-155">The <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A> method does not belong to the published interface of the <xref:System.EnterpriseServices.ServicedComponent> class and does not need to be implemented elsewhere.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo">
      <MemberSignature Language="C#" Value="void IServicedComponentInfo.GetComponentInfo (ref int infoMask, out string[] infoArray);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(int32&amp; infoMask, [out] string[]&amp; infoArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetComponentInfo (ByRef infoMask As Integer, ByRef infoArray As String()) Implements IServicedComponentInfo.GetComponentInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(int % infoMask, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % infoArray) = System::EnterpriseServices::IServicedComponentInfo::GetComponentInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoMask" Type="System.Int32" RefType="ref" />
        <Parameter Name="infoArray" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="infoMask"><span data-ttu-id="a0c9c-156">Битовая маска, где 0x00000001 — ключ для идентификатора обслуживаемого компонента, 0x00000002 — ключ для идентификатора домена приложения, а 0x00000004 — ключ для удаленного URI обслуживаемого компонента.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-156">A bitmask where 0x00000001 is a key for the serviced component's process ID, 0x00000002 is a key for the application domain ID, and 0x00000004 is a key for the serviced component's remote URI.</span></span></param>
        <param name="infoArray"><span data-ttu-id="a0c9c-157">Строковый массив, который может содержать любые или все из следующих элементов: идентификатор процесса обслуживаемого компонента, идентификатор домена приложения и удаленный URI обслуживаемого компонента.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-157">A string array that may contain any or all of the following, in order: the serviced component's process ID, the application domain ID, and the serviced component's remote URI.</span></span></param>
        <summary><span data-ttu-id="a0c9c-158">Получает определенную информацию об экземпляре класса <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span><span class="sxs-lookup"><span data-stu-id="a0c9c-158">Obtains certain information about the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0c9c-159">Метод не принадлежит к опубликованному интерфейсу <xref:System.EnterpriseServices.ServicedComponent> класса и не должен реализовываться в других местах. <xref:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo%2A></span><span class="sxs-lookup"><span data-stu-id="a0c9c-159">The <xref:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo%2A> method does not belong to the published interface of the <xref:System.EnterpriseServices.ServicedComponent> class and does not need to be implemented elsewhere.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
