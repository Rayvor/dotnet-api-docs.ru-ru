<Type Name="IHttpHandler" FullName="System.Web.IHttpHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf2012e335df413aaa522b1750b6d9875179b228" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64235851" /></Metadata><TypeSignature Language="C#" Value="public interface IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.IHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpHandler" />
  <TypeSignature Language="F#" Value="type IHttpHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет контракт, реализуемый ASP.NET для асинхронной обработки веб-запросов НТТР с помощью пользовательских обработчиков НТТР-данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете написать пользовательские обработчики HTTP для обработки заранее определенных типов HTTP-запросов на любом языке с общеязыковой спецификацией (CLS). Исполняемый код, определенный в `HttpHandler` классов, а не обычных страницах ASP или ASP.NET Web, реагирует на эти определенные запросы. Обработчики HTTP предоставляют возможность взаимодействия с низкого уровня запроса и ответа службы веб-сервера IIS и предоставляют функциональные возможности, как и расширения ISAPI, но с более простую модель программирования.  
  
 Если ваш обработчик будет обращаться к значениям состояния сеанса, он должен реализовать <xref:System.Web.SessionState.IRequiresSessionState> интерфейс (интерфейс без методов).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.IHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, может ли другой запрос использовать экземпляр класса <see cref="T:System.Web.IHttpHandler" />.</summary>
        <value>Значение <see langword="true" />, если экземпляр <see cref="T:System.Web.IHttpHandler" /> доступен для повторного использования; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Явно задать <xref:System.Web.IHttpHandler.IsReusable%2A> свойства `true` или `false` с помощью кода, который переопределяет <xref:System.Web.IHttpHandler.IsReusable%2A> свойства метода доступа (getter).  
  
   
  
## Examples  
 В следующем примере кода записывает в поток вывода НТТР, в ответ на запрос клиента страницы с именем обработчика ASPX четыре строки текста. Все запросы для обработчика ASPX обслуживаются `MyHttpHandler` класса в пространстве имен `HandlerExample` содержится в сборке HandlerTest.dll.  
  
 [!code-csharp[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/CS/source.cs#1)]
 [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="iHttpHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Web.HttpContext" />, предоставляющий ссылки на внутренние серверные объекты (например, <see langword="Request" />, <see langword="Response" />, <see langword="Session" /> и <see langword="Server" />), используемые для обслуживания HTTP-запросов.</param>
        <summary>Разрешает обработку веб-запросов НТТР для пользовательского элемента <see langword="HttpHandler" />, который реализует интерфейс <see cref="T:System.Web.IHttpHandler" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Помещает пользовательский `HttpHandler` код в <xref:System.Web.IHttpHandler.ProcessRequest%2A> виртуальный метод, как показано в следующем примере.  
  
   
  
## Examples  
 В следующем примере кода записывает в поток вывода НТТР, в ответ на запрос клиента страницы с именем обработчика ASPX четыре строки текста. Все запросы для обработчика ASPX обслуживаются `MyHttpHandler` класса в пространстве имен `HandlerExample` содержится в сборке HandlerTest.dll.  
  
 [!code-csharp[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/CS/source.cs#1)]
 [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>