<Type Name="VirtualPathUtility" FullName="System.Web.VirtualPathUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4fd1b200e33aef5b97849a4dd7401ae624ec4e5" /><Meta Name="ms.sourcegitcommit" Value="9058026d5788c19bed0a767fc52b40a1eac8ebfe" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/24/2019" /><Meta Name="ms.locfileid" Value="72847491" /></Metadata><TypeSignature Language="C#" Value="public static class VirtualPathUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VirtualPathUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.VirtualPathUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class VirtualPathUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type VirtualPathUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет служебные методы для основных операций с виртуальным путем.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Web.VirtualPathUtility> предоставляет служебные методы для общих операций, в которых используется виртуальный путь. Для серверных элементов управления ASP.NET и серверного кода виртуальные пути, использующие корневой оператор веб-приложения (тильда (~), обычно используются вместо относительных и абсолютных путей. Дополнительные сведения см. в разделе [ASP.NET Web Project paths](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd).  
  
 Используйте класс <xref:System.Web.VirtualPathUtility>, если необходимо преобразовать относительные пути приложения в абсолютные виртуальные пути, как это может быть в случае разработки пользовательского обработчика веб-службы.  
  
 Абсолютный виртуальный путь начинается с литеральной косой черты (/). Относительный виртуальный путь задается относительно корневого каталога приложения, если он является просто тильдой (\~) или начинается с тильды и двойной обратной косой черты (\~\\\\) или тильды и косая черта (\~/). Относительный виртуальный путь делает путь независимым от приложения.  
  
 Виртуальный каталог для приложения можно получить из свойств <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> и <xref:System.Web.HttpRequest.ApplicationPath%2A>.  
  
> [!NOTE]
>  Класс <xref:System.Web.VirtualPathUtility> не предназначен для обеспечения безопасности или канонической практики. Дополнительные сведения о безопасности веб-приложений см. в разделе [Обзор угроз безопасности веб-приложений](https://docs.microsoft.com/previous-versions/f13d73y6(v=vs.140)). Сведения об универсальных функциях обработки URL-адресов см. в разделе <xref:System.Uri>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать класс <xref:System.Web.VirtualPathUtility> и некоторые его методы. Сначала свойство <xref:System.Web.HttpRequest.FilePath%2A> создает виртуальный путь к веб-странице. Методы <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>и <xref:System.Web.VirtualPathUtility.GetDirectory%2A> возвращают сведения о виртуальном пути. Затем свойство <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> создает виртуальный путь текущего запроса, который может отличаться от свойства <xref:System.Web.HttpRequest.FilePath%2A>, если был вызван метод <xref:System.Web.HttpResponse.Redirect%2A>. Методы <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>и <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> возвращают сведения о виртуальном пути.  
  
 [!code-aspx-csharp[System.Web.VirtualPathUtility#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#1)]
 [!code-aspx-vb[System.Web.VirtualPathUtility#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpRequest" />
    <related type="Article" href="https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd">Пути к веб-сайту ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public static string AppendTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AppendTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppendTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AppendTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member AppendTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.AppendTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь для добавления знака косой черты.</param>
        <summary>Добавляет знак косой черты (/), если он отсутствует, в конец виртуального пути.</summary>
        <returns>Измененный виртуальный путь.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в конце виртуального пути существует литеральная косая черта (/), виртуальный путь не изменяется.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.Combine (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Базовый путь.</param>
        <param name="relativePath">Относительный путь.</param>
        <summary>Объединяет базовый путь и относительный путь.</summary>
        <returns>Объединяемые параметры <paramref name="basePath" /> и <paramref name="relativePath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.VirtualPathUtility.Combine%2A> возвращает значение свойства <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>, если относительный путь представляет собой точную тильду (~).  
  
 Метод <xref:System.Web.VirtualPathUtility.Combine%2A> использует значение свойства <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>, а не базовый путь, если относительный путь начинается с тильды и косой черты (~/); в противном случае метод <xref:System.Web.VirtualPathUtility.Combine%2A> использует базовый путь.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Параметр <paramref name="relativePath" /> представляет собой физический путь.  
  
- или - 
 Параметр <paramref name="relativePath" /> включает одно или несколько двоеточий.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="relativePath" /> имеет значение <see langword="null" /> или является пустой строкой.  
  
- или - 
 Параметр <paramref name="basePath" /> имеет значение <see langword="null" /> или является пустой строкой.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
        <altmember cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public static string GetDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectory(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectory (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetDirectory : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetDirectory virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь.</param>
        <summary>Возвращает каталог виртуального пути.</summary>
        <returns>Каталог, на который ссылается виртуальный путь.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, если `virtualPath` не является корневым. то есть он не равен корневому оператору (тильда [\~]), не начинается с тильды (\~), такой как тильда, косая черта (\~/) или Тильда, двойная обратная косая черта (\~//) или не начинается с косой черты (/). , выдается исключение <xref:System.ArgumentException>.  
  
 Если виртуальный путь, переданный в метод <xref:System.Web.VirtualPathUtility.GetDirectory%2A>, `"/images/image1.gif"`, возвращаемый каталог будет `"/images"`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать методы <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>и <xref:System.Web.VirtualPathUtility.GetDirectory%2A>.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="virtualPath" /> не содержит корневого каталога.  
  
- или - 
 Параметр <paramref name="virtualPath" /> имеет значение <see langword="null" /> или является пустой строкой.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetExtension virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь.</param>
        <summary>Возвращает расширение файла, на который ссылается виртуальный путь.</summary>
        <returns>Строковый литерал расширения имени файла, включающий точку (.), значение <see langword="null" />, или пустую строку ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если виртуальный путь, переданный в метод <xref:System.Web.VirtualPathUtility.GetExtension%2A>, `"/images/image1.gif"`, возвращенное расширение будет `".gif"`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать методы <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>и <xref:System.Web.VirtualPathUtility.GetDirectory%2A>.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="virtualPath" /> содержит один или несколько недопустимых символов, определенных в поле <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
        <altmember cref="M:System.IO.Path.GetExtension(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetFileName virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь.</param>
        <summary>Возвращает имя файла, на который ссылается виртуальный путь.</summary>
        <returns>Литерал имени файла после последнего знака каталога в параметре <paramref name="virtualPath" />; в противном случае — последнее имя каталога, если последний символ параметра <paramref name="virtualPath" /> представляет собой разделитель каталогов или томов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если виртуальный путь, переданный в метод <xref:System.Web.VirtualPathUtility.GetFileName%2A>, `"/images/image1.gif"`, то возвращаемое имя файла будет `"image1.gif"`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать методы <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>и <xref:System.Web.VirtualPathUtility.GetDirectory%2A>.  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="virtualPath" /> содержит один или несколько недопустимых символов, определенных в поле <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.IO.Path.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public static bool IsAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAbsolute (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAbsolute : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь для проверки.</param>
        <summary>Возвращает логическое значение, показывающее, является ли указанный виртуальный путь абсолютным, то есть начинающимся знаком косой черты(/).</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="virtualPath" /> задает абсолютный путь и не является значением <see langword="null" /> или пустой строкой (""), в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Виртуальный путь является абсолютным, если начинается с литеральной косой черты (/). Например, свойство <xref:System.Web.HttpRequest.Path%2A> возвращает абсолютный виртуальный путь.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать методы <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>и <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="virtualPath" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAppRelative">
      <MemberSignature Language="C#" Value="public static bool IsAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAppRelative (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAppRelative : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь для проверки.</param>
        <summary>Возвращает логическое значение, показывающее, является ли указанный путь зависящим от приложения.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="virtualPath" /> зависит от приложения, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Виртуальный путь может быть просто корневым оператором (тильда [~]) или может начинаться с оператора root. Если `virtualPath` `null`, возникает исключение <xref:System.ArgumentNullException>. Если `virtualPath` является пустой строкой (""), метод <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> возвращает `false`.  
  
> [!NOTE]
>  `"~` `filename` `"` не является допустимым виртуальным путем и возвращает `false` для метода <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать методы <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>и <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="virtualPath" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public static string MakeRelative (string fromPath, string toPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeRelative(string fromPath, string toPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeRelative (fromPath As String, toPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeRelative(System::String ^ fromPath, System::String ^ toPath);" />
      <MemberSignature Language="F#" Value="static member MakeRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.MakeRelative (fromPath, toPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPath" Type="System.String" />
        <Parameter Name="toPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromPath">Начальный виртуальный путь, из которого возвращается относительный виртуальный путь.</param>
        <param name="toPath">Конечный виртуальный путь, к которому возвращается относительный виртуальный путь.</param>
        <summary>Возвращает относительный виртуальный путь из одного виртуального пути, содержащего корневой оператор тильда (~), к другому.</summary>
        <returns>Относительный виртуальный путь из пути, представленного параметром <paramref name="fromPath" />, к пути, заданному параметром <paramref name="toPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, если параметры `fromPath` и `toPath` не являются корневыми. то есть они не равны корневому оператору (тильда [\~]), не начинаются с тильды (\~), например Тильда, косая черта (\~/) или Тильда, двойная обратная косая черта (\~//) или не начинаются с косой черты (/). , выдается исключение <xref:System.ArgumentException>.  
  
 Параметры строки запроса и привязки HTML, используемые в URI, не используются при определении относительного пути.  
  
 Если `fromPath` имеет `"/directory1/file1.aspx"` и `toPath` `"/directory2/file2.aspx"`, метод <xref:System.Web.VirtualPathUtility.MakeRelative%2A> возвращает `"../directory2/file2.aspx"`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="fromPath" /> не содержит корневого каталога.  
  
- или - 
 Параметр <paramref name="toPath" /> не содержит корневого каталога.</exception>
        <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTrailingSlash">
      <MemberSignature Language="C#" Value="public static string RemoveTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RemoveTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member RemoveTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.RemoveTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь, из которого нужно удалить завершающий знак косой черты (/).</param>
        <summary>Удаляет завершающий знак косой черты (/) из виртуального пути.</summary>
        <returns>Виртуальный путь без завершающего знака косой черты, если виртуальный путь не является корневым каталогом ("/"), в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A> удаляет знак косой черты (/) с конца виртуального пути. Если виртуальный путь уже является корневым каталогом (`"/"`), никакие действия не выполняются. Если виртуальный путь является `null` или пустой строкой (""), метод <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A> возвращает `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAbsolute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует виртуальный путь в абсолютный путь приложения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь для преобразования в путь, зависящий от приложения.</param>
        <summary>Преобразует виртуальный путь в абсолютный путь приложения.</summary>
        <returns>Абсолютное представление указанного виртуального пути.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Абсолютный путь к приложению, где используется путь к приложению вместо оператора root (тильда [~]).  
  
 Если `virtualPath` имеет значение:  
  
-   Absolute, метод <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> Возвращает виртуальный путь без изменений.  
  
-   Относительно приложения, метод <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> добавляет путь к виртуальному каталогу текущего приложения в начало `virtualPath`. Например, доступ к текущему пути к виртуальному каталогу приложения можно получить из свойства <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>.  
  
-   Без корневого каталога метод <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> вызывает исключение <xref:System.ArgumentOutOfRangeException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="virtualPath" /> не содержит корневого каталога.</exception>
        <exception cref="T:System.Web.HttpException">Две точки (..) в начале пути используются для перехода в каталог верхнего уровня.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь для преобразования в путь, зависящий от приложения.</param>
        <param name="applicationPath">Путь приложения, который используется для преобразования значения параметра <paramref name="virtualPath" /> в относительный путь.</param>
        <summary>Преобразует виртуальный путь в абсолютный путь приложения, используя указанный путь приложения.</summary>
        <returns>Абсолютное представление виртуального пути, заданного параметром <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перегрузка <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> метода <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> использует указанный путь приложения, а не текущий путь приложения.  
  
 Если `virtualPath` имеет значение:  
  
-   Absolute метод <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> Возвращает виртуальный путь без изменений.  
  
-   Относительно приложения, метод <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> добавляет `applicationPath` в начало виртуального пути.  
  
-   Без корневого каталога метод <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> вызывает исключение <xref:System.ArgumentOutOfRangeException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="applicationPath" /> не содержит корневого каталога.</exception>
        <exception cref="T:System.Web.HttpException">Две точки (..) в начале пути приложения используются для перехода в каталог верхнего уровня.</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAppRelative">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует виртуальный путь в путь, зависящий от приложения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь для преобразования в путь, зависящий от приложения.</param>
        <summary>Преобразует виртуальный путь в путь, зависящий от приложения, используя виртуальный путь приложения, который представлен в свойстве <see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />.</summary>
        <returns>Зависящее от приложения представление пути, заданного параметром <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если виртуальный путь для приложения `"myapp"`, а виртуальный путь `"/myApp/sub/default.asp"` передается в метод <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>, полученный путь относительно приложения `"~/sub/default.aspx"`.  
  
 Если `virtualPath` не начинается с текущего пути приложения, метод <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> Возвращает виртуальный путь без изменений.  
  
 Если `virtualPath` совпадает с путем приложения, возвращается корневой оператор (тильда [~]). Например, доступ к текущему пути к виртуальному каталогу приложения можно получить из свойства <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать методы <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>и <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>.  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь для преобразования в путь, зависящий от приложения.</param>
        <param name="applicationPath">Путь приложения, который используется для преобразования значения параметра <paramref name="virtualPath" /> в относительный путь.</param>
        <summary>Преобразует виртуальный путь в путь, зависящий от приложения, используя указанный путь приложения.</summary>
        <returns>Зависящее от приложения представление пути, заданного параметром <paramref name="virtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> перегрузка метода <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> использует `applicationPath`, а не текущий путь приложения. Если `virtualPath` не начинается с `applicationPath`, метод <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> Возвращает виртуальный путь без изменений.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
