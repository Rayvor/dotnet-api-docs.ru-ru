<Type Name="HttpUtility" FullName="System.Web.HttpUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25283add9748c29b65fc8e45b0aa2ea33f17490e" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73398131" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpUtility sealed" />
  <TypeSignature Language="F#" Value="type HttpUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.HttpUtility</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет методы для кодирования и декодирования URL-адресов при обработке веб-запросов. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Web.HttpUtility> используется внутренне классом <xref:System.Web.HttpServerUtility>, методы и свойства которого предоставляются через встроенный объект <xref:System.Web.HttpContext.Server%2A> ASP.NET. Кроме того, класс <xref:System.Web.HttpUtility> содержит служебные методы кодирования и декодирования, недоступные из <xref:System.Web.HttpContext.Server%2A>.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
   
  
## Examples  
 В следующем примере кода показано использование методов <xref:System.Web.HttpUtility.UrlEncode%2A>, <xref:System.Web.HttpUtility.UrlDecode%2A> и <xref:System.Web.HttpUtility.ParseQueryString%2A> класса <xref:System.Web.HttpUtility>.  
  
 [!code-aspx-csharp[HttpUtilityExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtilityExample/cs/httputilityexample.aspx#1)]
 [!code-aspx-vb[HttpUtilityExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtilityExample/vb/httputilityexample.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpUtility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpUtility();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.HttpUtility" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Web.HttpUtility> предоставляет методы для кодирования и расшифровки URL-адресов на основе строк, токенов URL-адресов и путей. <xref:System.Web.HttpUtility> используется внутренне классом <xref:System.Web.HttpServerUtility>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlAttributeEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Минимально преобразует строку в строку в формате HTML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string HtmlAttributeEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlAttributeEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlAttributeEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlAttributeEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member HtmlAttributeEncode : string -&gt; string" Usage="System.Web.HttpUtility.HtmlAttributeEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Кодируемая строка.</param>
        <summary>Минимально преобразует строку в строку в формате HTML.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> кодирует символы, подходящие для вставки в значение атрибута HTML.  
  
 Строковый результат из метода <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> следует использовать только для атрибутов с двойными кавычками. При использовании метода <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> с атрибутами с одинарными кавычками могут возникнуть проблемы безопасности.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static void HtmlAttributeEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlAttributeEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlAttributeEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlAttributeEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Web.HttpUtility.HtmlAttributeEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">Кодируемая строка.</param>
        <param name="output">Выходной поток <see cref="T:System.IO.TextWriter" />.</param>
        <summary>Минимально преобразует строку в строку в кодировке HTML и отправляет кодированную строку в выходной поток <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> преобразует только двойные кавычки ("), одинарные кавычки ('), амперсанды (&) и левые угловые скобки (<) в эквивалентные сущности символов. Это значительно быстрее, чем метод <xref:System.Web.HttpUtility.HtmlEncode%2A>.  
  
 Строковый результат из метода <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> следует использовать только для атрибутов с двойными кавычками. При использовании метода <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> с атрибутами с одинарными кавычками могут возникнуть проблемы безопасности.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует строку, преобразованную в кодировку HTML для передачи по протоколу HTTP, в декодированную строку.  
  
Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <see cref="T:System.Net.WebUtility" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Web.HttpUtility.HtmlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Декодируемая строка.</param>
        <summary>Преобразует строку, преобразованную в кодировку HTML для передачи по протоколу HTTP, в декодированную строку.</summary>
        <returns>Декодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка HTML преобразует символы, недопустимые в HTML, в эквиваленты символьных сущностей; Декодирование HTML изменяет кодировку. Например, при внедрении в блок текста символы \< и > кодируются как `&lt;` и `&gt;` для передачи по протоколу HTTP.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируются методы <xref:System.Web.HttpUtility.HtmlEncode%2A> и <xref:System.Web.HttpUtility.HtmlDecode%2A> класса <xref:System.Web.HttpUtility>. Входная строка кодируется с помощью метода <xref:System.Web.HttpUtility.HtmlEncode%2A>. Полученная кодированная строка затем декодируется с помощью метода <xref:System.Web.HttpUtility.HtmlDecode%2A>.  
  
 [!code-csharp[HttpUtility_HtmlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_HtmlDecode/CS/httputility_htmldecode.cs#1)]
 [!code-vb[HttpUtility_HtmlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_HtmlDecode/VB/httputility_htmldecode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Web.HttpUtility.HtmlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">Декодируемая строка.</param>
        <param name="output">Поток выходных данных <see cref="T:System.IO.TextWriter" />.</param>
        <summary>Преобразует строку в формате HTML в декодированную строку и отправляет декодированную строку в выходной поток <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка HTML преобразует символы, недопустимые в HTML, в эквиваленты символьных сущностей; Декодирование HTML изменяет кодировку. Например, при внедрении в блок текста символы \< и > кодируются как `&lt;` и `&gt;` для передачи по протоколу HTTP.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует строку в строку в формате HTML.  
  
Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <see cref="T:System.Net.WebUtility" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : obj -&gt; string" Usage="System.Web.HttpUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Объект.</param>
        <summary>Преобразует строковое представление объекта в HTML-кодированную строку и возвращает закодированную строку.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Web.HttpUtility.HtmlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Кодируемая строка.</param>
        <summary>Преобразует строку в строку в кодировке HTML.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка HTML преобразует символы, недопустимые в HTML, в эквиваленты символьных сущностей; Декодирование HTML изменяет кодировку. Например, при внедрении в блок текста символы \< и > кодируются как `&lt;` и `&gt;` для передачи по протоколу HTTP.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируются методы <xref:System.Web.HttpUtility.HtmlEncode%2A> и <xref:System.Web.HttpUtility.HtmlDecode%2A> класса <xref:System.Web.HttpUtility>. Входная строка кодируется с помощью метода <xref:System.Web.HttpUtility.HtmlEncode%2A>. Полученная кодированная строка затем декодируется с помощью метода <xref:System.Web.HttpUtility.HtmlDecode%2A>.  
  
 [!code-csharp[HttpUtility_HtmlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_HtmlDecode/CS/httputility_htmldecode.cs#1)]
 [!code-vb[HttpUtility_HtmlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_HtmlDecode/VB/httputility_htmldecode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Web.HttpUtility.HtmlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">Кодируемая строка.</param>
        <param name="output">Выходной поток <see cref="T:System.IO.TextWriter" />.</param>
        <summary>Преобразует строку в строку в кодировке HTML и возвращает выходные данные в виде потока выходных данных <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка HTML преобразует символы, недопустимые в HTML, в эквиваленты символьных сущностей; Декодирование HTML изменяет кодировку. Например, при внедрении в блок текста символы, \< и >, кодируются как `&lt;` и `&gt;` для передачи по протоколу HTTP.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="JavaScriptStringEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует строку.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод кодирует строки. Например, одинарные кавычки и двойные кавычки включаются в виде `\'` и `\"` в закодированной строке.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="public static string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member JavaScriptStringEncode : string -&gt; string" Usage="System.Web.HttpUtility.JavaScriptStringEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Кодируемая строка.</param>
        <summary>Кодирует строку.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="public static string JavaScriptStringEncode (string value, bool addDoubleQuotes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string JavaScriptStringEncode(string value, bool addDoubleQuotes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JavaScriptStringEncode (value As String, addDoubleQuotes As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ JavaScriptStringEncode(System::String ^ value, bool addDoubleQuotes);" />
      <MemberSignature Language="F#" Value="static member JavaScriptStringEncode : string * bool -&gt; string" Usage="System.Web.HttpUtility.JavaScriptStringEncode (value, addDoubleQuotes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="addDoubleQuotes" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Кодируемая строка.</param>
        <param name="addDoubleQuotes">Значение, указывающее, будет ли кодируемая строка заключена в двойные кавычки.</param>
        <summary>Кодирует строку.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseQueryString">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует строку запроса в <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.ParseQueryString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseQueryString (query As String) As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(System::String ^ query);" />
      <MemberSignature Language="F#" Value="static member ParseQueryString : string -&gt; System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpUtility.ParseQueryString query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="query">Преобразуемая строка запроса.</param>
        <summary>Преобразует строку запроса в <see cref="T:System.Collections.Specialized.NameValueCollection" /> с использованием кодировки <see cref="P:System.Text.Encoding.UTF8" />.</summary>
        <returns><see cref="T:System.Collections.Specialized.NameValueCollection" /> параметров запроса и значений.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.HttpUtility.ParseQueryString%2A> использует формат <xref:System.Text.Encoding.UTF8%2A> для синтаксического анализа строки запроса в возвращенном <xref:System.Collections.Specialized.NameValueCollection>, символы в кодировке URL являются декодированными, и несколько вхождений одного и того же параметра строки запроса перечислены в виде одной записи с запятой, разделяющей каждое значение.  
  
> [!IMPORTANT]
>  Метод <xref:System.Web.HttpUtility.ParseQueryString%2A> использует строки запроса, которые могут содержать ввод пользователя, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.HttpUtility.ParseQueryString%2A>. Несколько вхождений одной и той же переменной строки запроса объединяются в одну запись возвращаемого <xref:System.Collections.Specialized.NameValueCollection>.  
  
 [!code-aspx-csharp[HttpUtility_ParseQueryString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_ParseQueryString/cs/httputility_parsequerystring.aspx#1)]
 [!code-aspx-vb[HttpUtility_ParseQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_ParseQueryString/vb/httputility_parsequerystring.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="query" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(string query, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(System::String ^ query, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member ParseQueryString : string * System.Text.Encoding -&gt; System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpUtility.ParseQueryString (query, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="query">Преобразуемая строка запроса.</param>
        <param name="encoding">Используемый <see cref="T:System.Text.Encoding" />.</param>
        <summary>Преобразует строку запроса в <see cref="T:System.Collections.Specialized.NameValueCollection" /> с использованием указанного <see cref="T:System.Text.Encoding" />.</summary>
        <returns><see cref="T:System.Collections.Specialized.NameValueCollection" /> параметров запроса и значений.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В возвращенном <xref:System.Collections.Specialized.NameValueCollection>символы в кодировке URL декодируются, и несколько вхождений одного и того же параметра строки запроса перечислены в виде одной записи с запятыми, разделяющими каждое значение.  
  
> [!IMPORTANT]
>  Метод <xref:System.Web.HttpUtility.ParseQueryString%2A> использует строки запроса, которые могут содержать ввод пользователя, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="query" /> имеет значение <see langword="null" />.  
  
-или- 
 Свойство <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует строку, закодированную для передачи в URL-адресе, в декодированную строку.  
  
Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <see cref="T:System.Net.WebUtility" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Web.HttpUtility.UrlDecode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Декодируемая строка.</param>
        <summary>Преобразует строку, закодированную для передачи в URL-адресе, в декодированную строку.</summary>
        <returns>Декодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (byte[] bytes, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(unsigned int8[] bytes, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (bytes As Byte(), e As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(cli::array &lt;System::Byte&gt; ^ bytes, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : byte[] * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (bytes, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="bytes">Массив байтов, который нужно декодировать.</param>
        <param name="e"><see cref="T:System.Text.Encoding" />, указывающий схему декодирования.</param>
        <summary>Преобразует массив байтов в кодировке URL в декодированную строку с помощью указанного объекта декодирования.</summary>
        <returns>Декодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string str, System.Text.Encoding e);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string str, class System.Text.Encoding e) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (str As String, e As Encoding) As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ str, System::Text::Encoding ^ e);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (str, e)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public static string UrlDecode (string s, System.Text.Encoding e);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string s, class System.Text.Encoding e) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (s As String, e As Encoding) As String" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ s, System::Text::Encoding ^ e);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (s, e)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="e" Type="System.Text.Encoding" Index="1" />
      </Parameters>
      <Docs>
        <param name="str">Декодируемая строка.</param>
        <param name="s">Декодируемая строка.</param>
        <param name="e"><see cref="T:System.Text.Encoding" />, указывающий схему декодирования.</param>
        <summary>Преобразует строку в кодировке URL в декодированную строку с помощью указанного объекта кодирования.</summary>
        <returns>Декодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (byte[] bytes, int offset, int count, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(unsigned int8[] bytes, int32 offset, int32 count, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (bytes As Byte(), offset As Integer, count As Integer, e As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : byte[] * int * int * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlDecode (bytes, offset, count, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="bytes">Массив байтов, который нужно декодировать.</param>
        <param name="offset">Позиция в массиве байтов, с которой начинается декодирование.</param>
        <param name="count">Число байтов для декодирования.</param>
        <param name="e">Объект <see cref="T:System.Text.Encoding" />, указывающий схему декодирования.</param>
        <summary>Преобразует массив байтов в URL-кодировке в декодированную строку с помощью указанного объекта кодирования, начиная с указанной позиции в массиве и до указанного числа байтов.</summary>
        <returns>Декодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bytes" /> равно <see langword="null" />, а <paramref name="count" /> не равно <see langword="0" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> меньше <see langword="0" /> или больше длины массива <paramref name="bytes" />.  
  
-или- 
 Параметр <paramref name="count" /> меньше <see langword="0" />, или сумма <paramref name="count" /> + <paramref name="offset" /> больше длины массива <paramref name="bytes" />.</exception>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecodeToBytes">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует строку или массив байтов в URL-кодировке в декодированный массив байтов.  
  
Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <see cref="T:System.Net.WebUtility" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">Массив байтов, который нужно декодировать.</param>
        <summary>Преобразует массив байтов в URL-кодировке в декодированный массив байтов.</summary>
        <returns>Декодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : string -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Декодируемая строка.</param>
        <summary>Преобразует строку в кодировке URL в декодированный массив байтов.</summary>
        <returns>Декодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (string str, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(string str, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (str As String, e As Encoding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(System::String ^ str, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : string * System.Text.Encoding -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes (str, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="str">Декодируемая строка.</param>
        <param name="e">Объект <see cref="T:System.Text.Encoding" />, указывающий схему декодирования.</param>
        <summary>Преобразует строку в кодировке URL в декодированный массив байтов с помощью указанного объекта декодирования.</summary>
        <returns>Декодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Web.HttpUtility.UrlDecodeToBytes (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">Массив байтов, который нужно декодировать.</param>
        <param name="offset">Позиция в массиве байтов, с которой начинается декодирование.</param>
        <param name="count">Число байтов для декодирования.</param>
        <summary>Преобразует массив байтов в URL-кодировке в декодированный массив байтов, начиная с указанной позиции в массиве и до указанного количества байтов.</summary>
        <returns>Декодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bytes" /> равно <see langword="null" />, а <paramref name="count" /> не равно <see langword="0" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> меньше <see langword="0" /> или больше длины массива <paramref name="bytes" />.  
  
-или- 
 Параметр <paramref name="count" /> меньше <see langword="0" />, или сумма <paramref name="count" /> + <paramref name="offset" /> больше длины массива <paramref name="bytes" />.</exception>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует строку URL-адреса. Эти перегрузки метода можно использовать для кодирования всего URL-адреса, включая значения строки запроса.  
  
Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <see cref="T:System.Net.WebUtility" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : byte[] -&gt; string" Usage="System.Web.HttpUtility.UrlEncode bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">Массив байтов, который нужно закодировать.</param>
        <summary>Преобразует массив байтов в закодированную строку URL-адреса.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.HttpUtility.UrlEncode%2A> можно использовать для кодирования всего URL-адреса, включая значения строки запроса. Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, если символы \< и > встраиваются в блок текста, передаваемый в URL-адресе, они кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Web.HttpUtility.UrlEncode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Кодируемый текст.</param>
        <summary>Кодирует строку URL-адреса.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> можно использовать для кодирования всего URL-адреса, включая значения строки запроса. Если такие символы, как пробелы и знаки пунктуации, передаются в HTTP-поток без кодирования, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, если символы \< и > встраиваются в блок текста, передаваемый в URL-адресе, они кодируются как% 3c и% 3E.  
  
 URL-адрес можно закодировать с помощью метода <xref:System.Web.HttpUtility.UrlEncode%2A> или метода <xref:System.Web.HttpUtility.UrlPathEncode%2A>. Однако методы возвращают разные результаты. Метод <xref:System.Web.HttpUtility.UrlEncode%2A> преобразует каждый символ пробела в знак плюса (+). Метод <xref:System.Web.HttpUtility.UrlPathEncode%2A> преобразует каждый символ пробела в строку "%20", которая представляет пробел в шестнадцатеричном формате. Используйте метод <xref:System.Web.HttpUtility.UrlPathEncode%2A> при кодировании части пути URL-адреса, чтобы гарантировать согласованный расшифрованный URL-адрес, независимо от того, какая платформа или браузер выполняет декодирование.  
  
 По умолчанию метод <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> использует кодировку UTF-8. Поэтому использование метода <xref:System.Web.HttpUtility.UrlEncode%2A> предоставляет те же результаты, что и при использовании метода <xref:System.Web.HttpUtility.UrlEncode%2A>, и указание <xref:System.Text.Encoding.UTF8%2A> в качестве второго параметра.  
  
 <xref:System.Web.HttpServerUtility.UrlEncode%2A> — это удобный способ доступа к методу <xref:System.Web.HttpUtility.UrlEncode%2A> во время выполнения из приложения ASP.NET. На внутреннем уровне <xref:System.Web.HttpServerUtility.UrlEncode%2A> использует метод <xref:System.Web.HttpUtility.UrlEncode%2A> для кодирования строк.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : byte[] * int * int -&gt; string" Usage="System.Web.HttpUtility.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">Массив байтов, который нужно закодировать.</param>
        <param name="offset">Позиция в массиве байтов, с которой начинается кодирование.</param>
        <param name="count">Количество байтов, предназначенных для кодирования.</param>
        <summary>Преобразует массив байтов в строку URL-кодировки, начиная с указанной позиции в массиве и до указанного количества числа байтов.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> можно использовать для кодирования всего URL-адреса, включая значения строки запроса. Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, если символы \< и > встраиваются в блок текста, передаваемый в URL-адресе, они кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string str, System.Text.Encoding e);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string str, class System.Text.Encoding e) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (str As String, e As Encoding) As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ str, System::Text::Encoding ^ e);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlEncode (str, e)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public static string UrlEncode (string s, System.Text.Encoding Enc);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string s, class System.Text.Encoding Enc) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (s As String, Enc As Encoding) As String" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ s, System::Text::Encoding ^ Enc);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.HttpUtility.UrlEncode (s, Enc)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="e" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="Enc" Type="System.Text.Encoding" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="str">Кодируемый текст.</param>
        <param name="s">Кодируемый текст.</param>
        <param name="e">Объект<see cref="T:System.Text.Encoding" />, указывающий схему кодирования.</param>
        <param name="Enc">Объект<see cref="T:System.Text.Encoding" />, указывающий схему кодирования.</param>
        <summary>Кодирует строку URL-адреса, используя указанный объект кодирования.</summary>
        <returns>Закодированная строка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для кодирования всего URL-адреса, включая значения строки запроса. Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, если символы \< и > встраиваются в блок текста, передаваемый в URL-адресе, они кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncodeToBytes">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует строку или массив байтов в зашифрованный массив байтов.  
  
Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <see cref="T:System.Net.WebUtility" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">Массив байтов, который нужно закодировать.</param>
        <summary>Преобразует массив байтов в массив байтов в URL-кодировке.</summary>
        <returns>Закодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : string -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Кодируемая строка.</param>
        <summary>Преобразует строку в кодировке URL в массив байтов.</summary>
        <returns>Закодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (string str, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(string str, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (str As String, e As Encoding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(System::String ^ str, System::Text::Encoding ^ e);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : string * System.Text.Encoding -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes (str, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="str">Кодируемая строка.</param>
        <param name="e"><see cref="T:System.Text.Encoding" />, указывающий схему кодирования.</param>
        <summary>Преобразует строку в массив байтов в кодировке URL-адреса с использованием указанного объекта кодирования.</summary>
        <returns>Закодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeToBytes (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">Массив байтов, который нужно закодировать.</param>
        <param name="offset">Позиция в массиве байтов, с которой начинается кодирование.</param>
        <param name="count">Количество байтов, предназначенных для кодирования.</param>
        <summary>Преобразует массив байтов в массив байтов в URL-кодировке, начиная с указанной позиции в массиве и до указанного количества байтов.</summary>
        <returns>Закодированный массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые не допускаются в URL-адресе, в эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 Чтобы кодировать или декодировать значения вне веб-приложения, используйте класс <xref:System.Net.WebUtility>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bytes" /> равно <see langword="null" />, а <paramref name="count" /> не равно <see langword="0" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="offset" /> меньше <see langword="0" /> или больше длины массива <paramref name="bytes" />.  
  
-или- 
 Параметр <paramref name="count" /> меньше <see langword="0" />, или сумма <paramref name="count" /> + <paramref name="offset" /> больше длины массива <paramref name="bytes" />.</exception>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeUnicode">
      <MemberSignature Language="C#" Value="public static string UrlEncodeUnicode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncodeUnicode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeUnicode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncodeUnicode(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeUnicode : string -&gt; string" Usage="System.Web.HttpUtility.UrlEncodeUnicode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncode(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Преобразуемая строка.</param>
        <summary>Преобразует строку в строку Юникода.</summary>
        <returns>Строка Юникода в нотации %<paramref name="UnicodeValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые являются недопустимыми в URL-адресе эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeUnicodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeUnicodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeUnicodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeUnicodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeUnicodeToBytes(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeUnicodeToBytes : string -&gt; byte[]" Usage="System.Web.HttpUtility.UrlEncodeUnicodeToBytes str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This method produces non-standards-compliant output and has interoperability issues. The preferred alternative is UrlEncodeToBytes(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Преобразуемая строка.</param>
        <summary>Преобразует строку Юникода в массив байтов.</summary>
        <returns>Массив байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если такие символы, как пробелы и знаки препинания, передаются в HTTP-потоке, они могут быть неверно интерпретированы в принимающей стороне. Кодировка URL преобразует символы, которые являются недопустимыми в URL-адресе эквиваленты символьных сущностей; Декодирование URL-адреса изменяет кодировку. Например, при внедрении в блок текста, передаваемого в URL-адресе, символы \< и > кодируются как% 3c и% 3E.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">Как защититься от эксплойтов скриптов в веб-приложении путем применения кодировки HTML к строкам</related>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public static string UrlPathEncode (string str);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlPathEncode(string str) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlPathEncode (str As String) As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlPathEncode(System::String ^ str);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="static member UrlPathEncode : string -&gt; string" Usage="System.Web.HttpUtility.UrlPathEncode str" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public static string UrlPathEncode (string s);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlPathEncode(string s) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlPathEncode (s As String) As String" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlPathEncode(System::String ^ s);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member UrlPathEncode : string -&gt; string" Usage="System.Web.HttpUtility.UrlPathEncode s" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="str">Кодируемый текст.</param>
        <param name="s">Кодируемый текст.</param>
        <summary>Не использовать; предназначено исключительно для совместимости браузеров. Используйте ключевое слово <see cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />.</summary>
        <returns>Закодированный текст.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
