<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79d762b094635d901ba4a46af071aeadad824302" /><Meta Name="ms.sourcegitcommit" Value="10aa513a7461eb2abbf8d1e35d2a045d4e5a9be7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/09/2019" /><Meta Name="ms.locfileid" Value="67664483" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f86aa-101">Разрешает ASP.NET считывать HTTP-значения, отправленные клиентом во время веб-запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-102">Методы и свойства <xref:System.Web.HttpRequest> предоставляются через `Request` свойства <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, и <xref:System.Web.UI.UserControl> классы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="f86aa-103">Для доступа к данным из <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, или <xref:System.Web.HttpRequest.ServerVariables%2A> коллекций, можно написать `Request["key"]`, как показано в примере для <xref:System.Web.HttpRequest.QueryString%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="f86aa-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f86aa-104">Поддержка Юникода <xref:System.Web.HttpRequest> члены класса требуются службы IIS версии 6.0 или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="f86aa-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-105">Следующие примеры доступа <xref:System.Web.HttpRequest> экземпляра для текущего запроса с помощью <xref:System.Web.UI.Page.Request%2A> свойство <xref:System.Web.UI.Page> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="f86aa-106">Можно использовать упрощенный синтаксис для доступа к данным из <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, или <xref:System.Web.HttpRequest.ServerVariables%2A> коллекций.</span><span class="sxs-lookup"><span data-stu-id="f86aa-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="f86aa-107">Можно написать `Request["key"]`.</span><span class="sxs-lookup"><span data-stu-id="f86aa-107">You can write `Request["key"]`.</span></span>  
  
 <span data-ttu-id="f86aa-108">Первый пример показывает способ получения значения строки запроса, при загрузке страницы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-108">The first example shows how to retrieve a query string value when loading a page.</span></span>  
  
```csharp  
public partial class AddToCart : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        string rawId = Request["ProductID"];  
        int productId;  
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  
        {  
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  
            {  
                usersShoppingCart.AddToCart(productId);  
            }  
        }  
        else  
        {  
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");  
        }  
        Response.Redirect("ShoppingCart.aspx");  
    }  
}  
```  
  
```vb  
Public Class AddToCart  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        Dim rawId = Request("ProductID")  
        Dim productId As Integer  
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  
            Using usersShoppingCart As New ShoppingCartActions()  
                usersShoppingCart.AddToCart(productId)  
            End Using  
  
        Else  
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")  
        End If  
        Response.Redirect("ShoppingCart.aspx")  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="f86aa-109">Далее примере показано, как проверить, если запрос проходит аутентификацию и получить исходный URL-адрес.</span><span class="sxs-lookup"><span data-stu-id="f86aa-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>  
  
```csharp  
public partial class RestrictedPage : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        if (!Request.IsAuthenticated)  
        {  
            var rawUrl = Request.RawUrl;  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));  
        }  
    }  
}  
```  
  
```vb  
Public Class RestrictedPage  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        If Not Request.IsAuthenticated Then  
            Dim rawUrl = Request.RawUrl  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))  
        End If  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="f86aa-110">Проект Visual Studio Web сайта с исходным кодом доступен на следующей странице в этом разделе: [Скачайте](https://go.microsoft.com/fwlink/?LinkID=191455).</span><span class="sxs-lookup"><span data-stu-id="f86aa-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkID=191455).</span></span>  
  
 <span data-ttu-id="f86aa-111">В этом примере используется <xref:System.IO.StreamWriter> класс для записи значения нескольких <xref:System.Web.HttpRequest> свойств в файл класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="f86aa-112">Для свойств, которые являются типом string значения, так как они записаны в файл в кодировке HTML.</span><span class="sxs-lookup"><span data-stu-id="f86aa-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="f86aa-113">Зацикливаются свойства, которые представляют собой наборы, и каждая пара ключ/значение, содержащимися в них записываются в файл.</span><span class="sxs-lookup"><span data-stu-id="f86aa-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f86aa-114">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</span><span class="sxs-lookup"><span data-stu-id="f86aa-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f86aa-115">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</span><span class="sxs-lookup"><span data-stu-id="f86aa-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f86aa-116">Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="f86aa-116">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequest : string * string * string -&gt; System.Web.HttpRequest" Usage="new System.Web.HttpRequest (filename, url, queryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="f86aa-117">Имя файла, связанного с запросом.</span><span class="sxs-lookup"><span data-stu-id="f86aa-117">The name of the file associated with the request.</span></span></param>
        <param name="url"><span data-ttu-id="f86aa-118">Сведения о URL-адресе текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-118">The information regarding the URL of the current request.</span></span></param>
        <param name="queryString"><span data-ttu-id="f86aa-119">Вся строка запроса, отправленная с запросом (все, что после <c>'?'</c>).</span><span class="sxs-lookup"><span data-stu-id="f86aa-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span></span></param>
        <summary><span data-ttu-id="f86aa-120">Инициализирует объект <see cref="T:System.Web.HttpRequest" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-121">Необходимо создать собственный экземпляр <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="f86aa-122">Методы и свойства <xref:System.Web.HttpRequest> предоставляются через `Request` свойство <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, и <xref:System.Web.UI.UserControl> классы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86aa-123">Принудительно завершает основное подключение TCP, из-за чего любой ВВОД-ВЫВОД дает сбой.</span><span class="sxs-lookup"><span data-stu-id="f86aa-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span></span> <span data-ttu-id="f86aa-124">Этот метод можно использовать в ответ на атаку со стороны вредоносного HTTP-клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-124">You might use this method in response to an attack by a malicious HTTP client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-125">Этот метод является поточно ориентированной.</span><span class="sxs-lookup"><span data-stu-id="f86aa-125">This method is thread-safe.</span></span> <span data-ttu-id="f86aa-126">Любой поток может вызвать в любое время.</span><span class="sxs-lookup"><span data-stu-id="f86aa-126">Any thread may call it at any time.</span></span>  
  
 <span data-ttu-id="f86aa-127">Этот метод может использоваться только в режиме интеграции с.</span><span class="sxs-lookup"><span data-stu-id="f86aa-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="f86aa-128">Если ее можно вызвать в классическом режиме, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="f86aa-129">Чтобы определить режим конвейера, используйте <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86aa-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Web.HttpRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-130">Получает строковый массив типов приема MIME, поддерживаемых клиентом.</span><span class="sxs-lookup"><span data-stu-id="f86aa-130">Gets a string array of client-supported MIME accept types.</span></span></summary>
        <value><span data-ttu-id="f86aa-131">Строковый массив типов, поддерживаемых клиентами и использующих MIME.</span><span class="sxs-lookup"><span data-stu-id="f86aa-131">A string array of client-supported MIME accept types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-132">В следующем примере кода захватывает несколько значений, возвращенных <xref:System.Web.HttpRequest.AcceptTypes%2A> свойство в объектной переменной и записывает номер и имя каждого значения в отдельную строку вывода НТТР.</span><span class="sxs-lookup"><span data-stu-id="f86aa-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each value to a separate line of HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousID : string" Usage="System.Web.HttpRequest.AnonymousID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-133">Получает анонимный идентификатор для пользователя, если представлен.</span><span class="sxs-lookup"><span data-stu-id="f86aa-133">Gets the anonymous identifier for the user, if present.</span></span></summary>
        <value><span data-ttu-id="f86aa-134">Строка представляет идентификатор текущего анонимного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f86aa-134">A string representing the current anonymous user identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-135"><xref:System.Web.HttpRequest.AnonymousID%2A> Свойство назначает долгоживущий уникальный идентификатор для пользователя без проверки подлинности, который может использоваться для отслеживания пользователя или назначить свойства профиля этого пользователя без сохранения данных в `Session` объекта.</span><span class="sxs-lookup"><span data-stu-id="f86aa-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="f86aa-136">По умолчанию <xref:System.Web.HttpRequest.AnonymousID%2A> свойство отслеживается с помощью файла cookie, но его можно установить равным использовать URI при <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> атрибут в разделе конфигурации анонимная идентификация может принимать значение <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, или <xref:System.Web.HttpCookieMode.AutoDetect> значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="f86aa-137">Куки-файл необходимо очистить явным образом в том случае, если больше не требуется доступные, например когда анонимный пользователь проходит проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="f86aa-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>  
  
 <span data-ttu-id="f86aa-138">Анонимная идентификация используется, когда требуется для идентификации сущности, которые не проходят проверку подлинности, и когда требуется авторизация.</span><span class="sxs-lookup"><span data-stu-id="f86aa-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="f86aa-139">Дополнительные сведения см. в разделе [anonymousIdentification элемент (схема параметров ASP.NET)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100))</span><span class="sxs-lookup"><span data-stu-id="f86aa-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100))</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-140">В следующем примере показано, как использовать <xref:System.Web.HttpRequest.AnonymousID%2A> свойства путем обработки <xref:System.Web.Security.AnonymousIdentificationModule.Creating> событий в файле Global.asax.</span><span class="sxs-lookup"><span data-stu-id="f86aa-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="f86aa-141">В этом примере состоит из двух частей:</span><span class="sxs-lookup"><span data-stu-id="f86aa-141">This example has two parts:</span></span>  
  
-   <span data-ttu-id="f86aa-142">Метод в файле Global.asax, который обрабатывает <xref:System.Web.Security.AnonymousIdentificationModule.Creating> событий.</span><span class="sxs-lookup"><span data-stu-id="f86aa-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>  
  
-   <span data-ttu-id="f86aa-143">Страница веб-форм.</span><span class="sxs-lookup"><span data-stu-id="f86aa-143">A Web Forms page.</span></span>  
  
 <span data-ttu-id="f86aa-144">Первая часть в примере кода показано задание <xref:System.Web.HttpRequest.AnonymousID%2A> свойства путем обработки <xref:System.Web.Security.AnonymousIdentificationModule.Creating> событий в файле Global.asax.</span><span class="sxs-lookup"><span data-stu-id="f86aa-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="f86aa-145">Метод, который называется `AnonymousIdentification_Creating` задает <xref:System.Web.HttpRequest.AnonymousID%2A> свойства при создании анонимного идентификатора.</span><span class="sxs-lookup"><span data-stu-id="f86aa-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]  
  
 <span data-ttu-id="f86aa-146">Вторая часть в примере кода показано, как для отображения новых <xref:System.Web.HttpRequest.AnonymousID%2A> , созданный путем `AnonymousIdentification_Creating` обработчик событий в предыдущем примере.</span><span class="sxs-lookup"><span data-stu-id="f86aa-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100)"><span data-ttu-id="f86aa-147">Элемент anonymousIdentification (схема параметров ASP.NET)</span><span class="sxs-lookup"><span data-stu-id="f86aa-147">anonymousIdentification Element (ASP.NET Settings Schema)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.HttpRequest.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-148">Получает виртуальный путь к корневому каталогу приложения ASP.NET на сервере.</span><span class="sxs-lookup"><span data-stu-id="f86aa-148">Gets the ASP.NET application's virtual application root path on the server.</span></span></summary>
        <value><span data-ttu-id="f86aa-149">Виртуальный путь текущего приложения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-149">The virtual path of the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-150">Это свойство используется для формирования URL-адреса, относительно корня приложения со страницы или веб-элемента управления пользователя, который не находится в корневом каталоге.</span><span class="sxs-lookup"><span data-stu-id="f86aa-150">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="f86aa-151">Благодаря этому страницы и общие элементы управления, которые существуют на разных уровнях структуры каталогов, чтобы использовать тот же код для связи с ресурсами с фиксированными расположениями в приложении.</span><span class="sxs-lookup"><span data-stu-id="f86aa-151">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-152">В следующем примере используется <xref:System.IO.StreamWriter.Write%2A> метод для HTML-кодирования и затем записать значение <xref:System.Web.HttpRequest.ApplicationPath%2A> свойство в текстовый файл.</span><span class="sxs-lookup"><span data-stu-id="f86aa-152">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="f86aa-153">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-153">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="f86aa-154">Предполагается наличие <xref:System.IO.StreamWriter> объект с именем `sw`.</span><span class="sxs-lookup"><span data-stu-id="f86aa-154">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 <span data-ttu-id="f86aa-155">В следующем примере используется <xref:System.Web.HttpRequest.ApplicationPath%2A> свойства программно составить путь к ресурсу, который находится в фиксированное расположение в приложении.</span><span class="sxs-lookup"><span data-stu-id="f86aa-155">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="f86aa-156">Страница, на который ссылается на ресурс нет необходимости находиться в том же каталоге, что и ресурс.</span><span class="sxs-lookup"><span data-stu-id="f86aa-156">The page that references the resource does not have to be located in the same directory as the resource.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]  
  
 <span data-ttu-id="f86aa-157">При выполнении этого примера веб-приложения с именем WebSite1, `/WebSite1` будет отображаться как значение <xref:System.Web.HttpRequest.ApplicationPath%2A> свойство и `/WebSite1/images/Image1.gif` будет отображаться как полный путь к изображению.</span><span class="sxs-lookup"><span data-stu-id="f86aa-157">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeCurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-158">Получает виртуальный путь корня приложения и делает его относительным, используя тильду (\~) для корня приложения (как в "\~/page.aspx").</span><span class="sxs-lookup"><span data-stu-id="f86aa-158">Gets the virtual path of the application root and makes it relative by using the tilde (\~) notation for the application root (as in "\~/page.aspx").</span></span></summary>
        <value><span data-ttu-id="f86aa-159">Виртуальный путь корня приложения для текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-159">The virtual path of the application root for the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-160">Оно используется для предоставления данных URL-адрес, будет оставаться одинаковым, даже если приложение не меняет расположение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-160">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="f86aa-161">Это позволяет один и тот же код сопоставления URL-адрес для использования в тестовой среде и в конечной среде развертывания, или для использования копии веб-приложений в разных доменах.</span><span class="sxs-lookup"><span data-stu-id="f86aa-161">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-162">В следующем примере используется <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> свойство, чтобы задать URL-адрес <xref:System.Web.UI.WebControls.Image> элемента управления к изображению в том же каталоге, что и страница.</span><span class="sxs-lookup"><span data-stu-id="f86aa-162">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="f86aa-163">Открыть эту страницу на разных уровнях структуры каталогов, чтобы увидеть полученный в результате <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> значения свойств.</span><span class="sxs-lookup"><span data-stu-id="f86aa-163">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]  
  
 <span data-ttu-id="f86aa-164">В следующем примере используется <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> свойство программно задать путь к ресурсу, исходя из текущего пути страницы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-164">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberSignature Language="F#" Value="member this.BinaryRead : int -&gt; byte[]" Usage="httpRequest.BinaryRead count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="f86aa-165">Количество байтов, чтение которых необходимо выполнить.</span><span class="sxs-lookup"><span data-stu-id="f86aa-165">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="f86aa-166">Выполняет чтение двоичного кода заданного числа байтов, содержащихся в текущем потоке входящих данных.</span><span class="sxs-lookup"><span data-stu-id="f86aa-166">Performs a binary read of a specified number of bytes from the current input stream.</span></span></summary>
        <returns><span data-ttu-id="f86aa-167">Массив байтов.</span><span class="sxs-lookup"><span data-stu-id="f86aa-167">A byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-168"><xref:System.Web.HttpRequest.BinaryRead%2A> Метод предоставляется для совместимости с ASP.</span><span class="sxs-lookup"><span data-stu-id="f86aa-168">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f86aa-169"><paramref name="count" /> имеет значение 0.</span><span class="sxs-lookup"><span data-stu-id="f86aa-169"><paramref name="count" /> is 0.</span></span>  
  
<span data-ttu-id="f86aa-170">-или-</span><span class="sxs-lookup"><span data-stu-id="f86aa-170">-or-</span></span> 
 <span data-ttu-id="f86aa-171"><paramref name="count" /> больше, чем доступное число байтов.</span><span class="sxs-lookup"><span data-stu-id="f86aa-171"><paramref name="count" /> is greater than the number of bytes available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities with get, set" Usage="System.Web.HttpRequest.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-172">Получает или задает сведения о возможностях запрашивающего браузера на клиентской стороне.</span><span class="sxs-lookup"><span data-stu-id="f86aa-172">Gets or sets information about the requesting client's browser capabilities.</span></span></summary>
        <value><span data-ttu-id="f86aa-173">Объект <see cref="T:System.Web.HttpBrowserCapabilities" />, содержащий список возможностей клиентского браузера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-173">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-174">В следующем примере кода отправляет список возможностей браузера обратно клиенту в HTML-страницы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-174">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f"><span data-ttu-id="f86aa-175">Серверные элементы управления ASP.NET и возможностей браузера</span><span class="sxs-lookup"><span data-stu-id="f86aa-175">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Web.HttpClientCertificate" Usage="System.Web.HttpRequest.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-176">Получает сертификат безопасности клиента, отправившего текущий запрос.</span><span class="sxs-lookup"><span data-stu-id="f86aa-176">Gets the current request's client security certificate.</span></span></summary>
        <value><span data-ttu-id="f86aa-177">Объект <see cref="T:System.Web.HttpClientCertificate" />, содержащий сведения о параметрах сертификата безопасности клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-177">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-178">В следующем примере кода параметры сертификата клиента отправляются обратно клиенту в HTML-страницы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-178">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-179">Получает или задает набор знаков объекта.</span><span class="sxs-lookup"><span data-stu-id="f86aa-179">Gets or sets the character set of the entity-body.</span></span></summary>
        <value><span data-ttu-id="f86aa-180">Объект <see cref="T:System.Text.Encoding" />, представляющий набор знаков клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-180">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-181">Кодировка содержимого по умолчанию можно указать в [глобализации элемент (схема параметров ASP.NET)](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="f86aa-181">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) of a configuration file.</span></span> <span data-ttu-id="f86aa-182">Если кодировка содержимого задается на клиент, переопределяются параметры конфигурации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="f86aa-182">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-183">В следующем примере кода присваивается значение, представляющее описание текущей кодировки HTTP строковой переменной.</span><span class="sxs-lookup"><span data-stu-id="f86aa-183">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-184">Указывает длину отправленного клиентом содержимого в байтах.</span><span class="sxs-lookup"><span data-stu-id="f86aa-184">Specifies the length, in bytes, of content sent by the client.</span></span></summary>
        <value><span data-ttu-id="f86aa-185">Длина отправленного клиентом содержимого в байтах.</span><span class="sxs-lookup"><span data-stu-id="f86aa-185">The length, in bytes, of content sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-186">В следующем примере кода присваивается значение, представляющее длину содержимого входящего запроса к целочисленной переменной.</span><span class="sxs-lookup"><span data-stu-id="f86aa-186">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-187">Получает или задает тип MIME содержимого входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-187">Gets or sets the MIME content type of the incoming request.</span></span></summary>
        <value><span data-ttu-id="f86aa-188">Строка, представляющая тип MIME содержимого входящего запроса, например "text/html".</span><span class="sxs-lookup"><span data-stu-id="f86aa-188">A string representing the MIME content type of the incoming request, for example, "text/html".</span></span> <span data-ttu-id="f86aa-189">Дополнительные типы MIME включают "audio.wav", "image/gif" и "application/pdf".</span><span class="sxs-lookup"><span data-stu-id="f86aa-189">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-190">В следующем примере кода присваивается значение, представляющее тип содержимого входящего запроса в переменную строки.</span><span class="sxs-lookup"><span data-stu-id="f86aa-190">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f86aa-191">Пример выходных данных, могут быть созданы на этот код.</span><span class="sxs-lookup"><span data-stu-id="f86aa-191">The following example shows output that might be produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-192">Получает коллекцию файлов Cookie, отправленных клиентом.</span><span class="sxs-lookup"><span data-stu-id="f86aa-192">Gets a collection of cookies sent by the client.</span></span></summary>
        <value><span data-ttu-id="f86aa-193">Объект <see cref="T:System.Web.HttpCookieCollection" />, представляющий переменные cookie клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-193">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-194">ASP.NET включает два встроенных файлов cookie.</span><span class="sxs-lookup"><span data-stu-id="f86aa-194">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="f86aa-195">Коллекции осуществляется через <xref:System.Web.HttpRequest.Cookies%2A> коллекцию <xref:System.Web.HttpRequest> содержит файлы cookie, переданные клиентом на сервер в `Cookie` заголовка.</span><span class="sxs-lookup"><span data-stu-id="f86aa-195">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="f86aa-196">Коллекции осуществляется через <xref:System.Web.HttpResponse.Cookies%2A> коллекцию <xref:System.Web.HttpResponse> содержит новых куки-файлов создана на сервере и передаются клиенту в `Set-Cookie` заголовка.</span><span class="sxs-lookup"><span data-stu-id="f86aa-196">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f86aa-197">После добавления файла cookie с помощью <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> коллекции, куки-файл доступен сразу же в <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> коллекции, даже если ответ не был отправлен клиенту.</span><span class="sxs-lookup"><span data-stu-id="f86aa-197">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-198">В следующем примере кода перебирает все файлы cookie, отправленные клиентом и отправляет имя, дату окончания срока действия, параметр безопасности и значения каждого файла cookie в выходные данные НТТР.</span><span class="sxs-lookup"><span data-stu-id="f86aa-198">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-199">Получает виртуальный путь текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-199">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="f86aa-200">Виртуальный путь текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-200">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> Возвращает путь к файлу на настоящий момент обработчик страницы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="f86aa-202">Для сценариев перенаправления, с использованием <xref:System.Web.HttpServerUtility.Execute%2A> и <xref:System.Web.HttpServerUtility.Transfer%2A> методы, это означает, что <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> свойство возвращает путь к странице, перенаправляется (дочернюю страницу).</span><span class="sxs-lookup"><span data-stu-id="f86aa-202">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="f86aa-203">Тем не менее, когда клиент перенаправляется на другую страницу <xref:System.Web.HttpRequest.FilePath%2A> свойство возвращает путь к исходной странице.</span><span class="sxs-lookup"><span data-stu-id="f86aa-203">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-204">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-204">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-205">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-205">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePathExtension : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-206">Получает расширение имени файла, заданного в свойстве <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-206">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></summary>
        <value><span data-ttu-id="f86aa-207">Расширение имени файла, заданного в свойстве <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-207">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Web.HttpRequest.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-208">Получает виртуальный путь текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-208">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="f86aa-209">Виртуальный путь текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-209">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-210"><xref:System.Web.HttpRequest.FilePath%2A> Свойство не включает <xref:System.Web.HttpRequest.PathInfo%2A> трейлер.</span><span class="sxs-lookup"><span data-stu-id="f86aa-210">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="f86aa-211">Например, URL-адрес `http://www.contoso.com/virdir/page.html/tail`, <xref:System.Web.HttpRequest.FilePath%2A> значение — /virdir/page.html.</span><span class="sxs-lookup"><span data-stu-id="f86aa-211">For example, for the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-212">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.FilePath%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-212">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-213">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-213">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollection" Usage="System.Web.HttpRequest.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-214">Получает коллекцию загруженных с клиента файлов (составной формат MIME).</span><span class="sxs-lookup"><span data-stu-id="f86aa-214">Gets the collection of files uploaded by the client, in multipart MIME format.</span></span></summary>
        <value><span data-ttu-id="f86aa-215">Объект <see cref="T:System.Web.HttpFileCollection" />, представляющий коллекцию файлов, загруженных с клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-215">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span></span> <span data-ttu-id="f86aa-216">Элементы объекта <see cref="T:System.Web.HttpFileCollection" /> типа <see cref="T:System.Web.HttpPostedFile" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-216">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-217">Сбор файлов заполняется только при HTTP-запрос `Content-Type` значение — «multipart/form-data».</span><span class="sxs-lookup"><span data-stu-id="f86aa-217">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-218">В следующем примере кода отображает имена всех файлов в <xref:System.Web.HttpRequest.Files%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="f86aa-218">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpRequest.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-219">Получает или задает фильтр, используемый при считывании текущего потока входных данных.</span><span class="sxs-lookup"><span data-stu-id="f86aa-219">Gets or sets the filter to use when reading the current input stream.</span></span></summary>
        <value><span data-ttu-id="f86aa-220">Объект <see cref="T:System.IO.Stream" />, используемый в качестве фильтра.</span><span class="sxs-lookup"><span data-stu-id="f86aa-220">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-221">В следующем примере кода создается два новых класса, `QQQ1` и `QQQ2` этот фильтр <xref:System.Web.HttpRequest.InputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86aa-221">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="f86aa-222">Поместите эти классы в файле Global.asax в каталоге приложения ASP.NET, таким образом, чтобы все входные данные для всех веб-страниц ASP.NET в приложении будут фильтроваться.</span><span class="sxs-lookup"><span data-stu-id="f86aa-222">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="f86aa-223">Указан недопустимый <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-223">The specified <see cref="T:System.IO.Stream" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-224">Получает коллекцию переменных формы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-224">Gets a collection of form variables.</span></span></summary>
        <value><span data-ttu-id="f86aa-225"><see cref="T:System.Collections.Specialized.NameValueCollection" /> представляющий коллекцию переменных формы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-225">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-226"><xref:System.Web.HttpRequest.Form%2A> Свойство заполняется при HTTP-запрос `Content-Type` значение — «application/x-www-формы-urlencoded» или «multipart/form-data».</span><span class="sxs-lookup"><span data-stu-id="f86aa-226">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-227">В следующем примере показано, как считывать значения в коллекции формы, отправленные из браузера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-227">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="f86aa-228">Каждая пара "имя значение" в коллекции представляет элемент управления в форме и его значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-228">Each name/value pair in the collection represents a control in the form and its value.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferedInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferedInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86aa-229">Получает объект <see cref="T:System.IO.Stream" />, который можно использовать для чтения тела входящего объекта HTTP.</span><span class="sxs-lookup"><span data-stu-id="f86aa-229">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="f86aa-230">Объект <see cref="T:System.IO.Stream" />, который можно использовать для чтения тела входящего объекта HTTP.</span><span class="sxs-lookup"><span data-stu-id="f86aa-230">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-231">Этот метод идентичен методу <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> за исключением того, что он также копирует байты, которые считываются внутреннего хранилища, используемого ASP.NET для заполнения <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, и <xref:System.Web.HttpRequest.InputStream%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="f86aa-231">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="f86aa-232">Поскольку эти сведения хранятся, нижеследующий код, такой как страницы веб-форм ASP.NET (aspx-файлы), запускается успешно.</span><span class="sxs-lookup"><span data-stu-id="f86aa-232">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="f86aa-233">С методом <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> это не так.</span><span class="sxs-lookup"><span data-stu-id="f86aa-233">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="f86aa-234">Тело сущности запроса уже загружено и проанализировано.</span><span class="sxs-lookup"><span data-stu-id="f86aa-234">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="f86aa-235">Примеры свойств, которые приводят к тому, что тело сущности загружается и синтаксически анализируется:</span><span class="sxs-lookup"><span data-stu-id="f86aa-235">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span> 
<span data-ttu-id="f86aa-236">– свойство <see cref="P:System.Web.HttpRequest.Form" />;</span><span class="sxs-lookup"><span data-stu-id="f86aa-236">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
<span data-ttu-id="f86aa-237">– свойство <see cref="P:System.Web.HttpRequest.Files" />;</span><span class="sxs-lookup"><span data-stu-id="f86aa-237">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
<span data-ttu-id="f86aa-238">– свойство <see cref="P:System.Web.HttpRequest.InputStream" />;</span><span class="sxs-lookup"><span data-stu-id="f86aa-238">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
<span data-ttu-id="f86aa-239">– метод <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-239">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span></span>  
  
<span data-ttu-id="f86aa-240">Во избежание этого исключения сначала вызовите метод <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-240">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="f86aa-241">Это исключение также вызывается, если клиент отключается во время чтения тела сущности.</span><span class="sxs-lookup"><span data-stu-id="f86aa-241">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f86aa-242">Получает объект <see cref="T:System.IO.Stream" />, который можно использовать для чтения тела входящего объекта HTTP.</span><span class="sxs-lookup"><span data-stu-id="f86aa-242">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86aa-243">Получает объект <see cref="T:System.IO.Stream" />, который можно использовать для чтения тела входящего объекта HTTP.</span><span class="sxs-lookup"><span data-stu-id="f86aa-243">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="f86aa-244">Объект <see cref="T:System.IO.Stream" />, который можно использовать для чтения тела входящего объекта HTTP.</span><span class="sxs-lookup"><span data-stu-id="f86aa-244">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-245">Этот метод обеспечивает является альтернативой использованию <xref:System.Web.HttpRequest.InputStream%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="f86aa-245">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="f86aa-246"><xref:System.Web.HttpRequest.InputStream%2A> Свойство ожидает, пока не был получен запрос целиком перед возвращением <xref:System.IO.Stream> объекта.</span><span class="sxs-lookup"><span data-stu-id="f86aa-246">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="f86aa-247">Напротив <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> возвращает метод <xref:System.IO.Stream> объекта немедленно.</span><span class="sxs-lookup"><span data-stu-id="f86aa-247">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="f86aa-248">Можно использовать метод, чтобы начать обработку тела сущности, прежде чем будут получены все содержимое тела.</span><span class="sxs-lookup"><span data-stu-id="f86aa-248">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>  
  
 <span data-ttu-id="f86aa-249">Тело сущности (или часть его запросы и был получен) возвращается только в том случае, если вы используете объект возвращаемый этим методом для чтения потока путем вызова методов, таких как <xref:System.IO.Stream.Read%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f86aa-249">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="f86aa-250">Используйте параметры типа <xref:System.IO.Stream.Read%2A> метод, чтобы задать для чтения тела сущности.</span><span class="sxs-lookup"><span data-stu-id="f86aa-250">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>  
  
 <span data-ttu-id="f86aa-251"><xref:System.IO.Stream> Объект, возвращаемый этим методом, ASP.NET поддерживает синхронные и асинхронные методы для чтения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-251">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="f86aa-252"><xref:System.IO.Stream> Объект реализует интерфейс <xref:System.IO.Stream.BeginRead%2A> и <xref:System.IO.Stream.EndRead%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-252">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="f86aa-253">Асинхронные методы используются для асинхронного чтения сущности запроса в виде фрагментов, хотя ASP.NET освобождает текущий поток между каждой итерации цикла асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-253">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>  
  
 <span data-ttu-id="f86aa-254">Этот метод может быть полезен, если запрос передает большой файл, и вы хотите начать доступа к содержимому файла до завершения загрузки.</span><span class="sxs-lookup"><span data-stu-id="f86aa-254">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="f86aa-255">Тем не менее вам следует использовать только этот метод для сценариев, где вы хотите контролировать обработку тела сущности.</span><span class="sxs-lookup"><span data-stu-id="f86aa-255">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="f86aa-256">Это означает, что нельзя использовать этот метод из ASPX-странице, поскольку, при запуске страницы ASPX, тело сущности уже было считано.</span><span class="sxs-lookup"><span data-stu-id="f86aa-256">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="f86aa-257">Тело сущности запроса уже загружено и проанализировано.</span><span class="sxs-lookup"><span data-stu-id="f86aa-257">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="f86aa-258">Примеры свойств, которые приводят к тому, что тело сущности загружается и синтаксически анализируется:</span><span class="sxs-lookup"><span data-stu-id="f86aa-258">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span> 
-   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />  
  
<span data-ttu-id="f86aa-259">Во избежание этого исключения сначала вызовите метод <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-259">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="f86aa-260">Это исключение также вызывается, если клиент отключается во время чтения тела сущности.</span><span class="sxs-lookup"><span data-stu-id="f86aa-260">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : bool -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream disableMaxRequestLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength"><span data-ttu-id="f86aa-261">Значение <see langword="true" />, чтобы отключить ограничение длины запроса; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-261"><see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f86aa-262">Получает объект <see cref="T:System.IO.Stream" />, который может использоваться для чтения входящего тела сущности HTTP, дополнительно отменяя задаваемое в свойстве <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> ограничение на длину запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-262">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span></span></summary>
        <returns><span data-ttu-id="f86aa-263">Объект <see cref="T:System.IO.Stream" />, который можно использовать для чтения тела входящего объекта HTTP.</span><span class="sxs-lookup"><span data-stu-id="f86aa-263">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-264">Дополнительные сведения об этом методе см. в разделе <xref:System.Web.HttpRequest.GetBufferlessInputStream> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="f86aa-264">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="f86aa-265">Тело сущности запроса уже загружено и проанализировано.</span><span class="sxs-lookup"><span data-stu-id="f86aa-265">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="f86aa-266">Примеры свойств, которые приводят к тому, что тело сущности загружается и синтаксически анализируется:</span><span class="sxs-lookup"><span data-stu-id="f86aa-266">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span> 
<span data-ttu-id="f86aa-267">– свойство <see cref="P:System.Web.HttpRequest.Form" />;</span><span class="sxs-lookup"><span data-stu-id="f86aa-267">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
<span data-ttu-id="f86aa-268">– свойство <see cref="P:System.Web.HttpRequest.Files" />;</span><span class="sxs-lookup"><span data-stu-id="f86aa-268">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
<span data-ttu-id="f86aa-269">– свойство <see cref="P:System.Web.HttpRequest.InputStream" />;</span><span class="sxs-lookup"><span data-stu-id="f86aa-269">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
<span data-ttu-id="f86aa-270">– метод <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-270">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span></span>  
  
<span data-ttu-id="f86aa-271">Во избежание этого исключения сначала вызовите метод <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-271">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="f86aa-272">Это исключение также вызывается, если клиент отключается во время чтения тела сущности.</span><span class="sxs-lookup"><span data-stu-id="f86aa-272">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-273">Получает коллекцию заголовков НТТР.</span><span class="sxs-lookup"><span data-stu-id="f86aa-273">Gets a collection of HTTP headers.</span></span></summary>
        <value><span data-ttu-id="f86aa-274">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" /> заголовков.</span><span class="sxs-lookup"><span data-stu-id="f86aa-274">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-275">Список всех возможных заголовки, см. в разделе [полей заголовка запроса](https://go.microsoft.com/fwlink/?LinkId=73147) на веб-узле W3C.</span><span class="sxs-lookup"><span data-stu-id="f86aa-275">For a listing of all possible headers, see [Request Header Fields](https://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-276">В следующем примере кода отображает имена и значения всех заголовков в HTTP-запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-276">The following code example displays the names and values of all headers in the HTTP request.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="System.Web.HttpRequest.HttpChannelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-277">Получает объект <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> текущего экземпляра <see cref="T:System.Web.HttpWorkerRequest" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-277">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></summary>
        <value><span data-ttu-id="f86aa-278">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> текущего экземпляра <see cref="T:System.Web.HttpWorkerRequest" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-278">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f86aa-279">Текущий объект <see cref="T:System.Web.HttpWorkerRequest" /> не является объектом класса <see langword="System.Web.Hosting.IIS7WorkerRequest" /> или <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-279">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Web.HttpRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-280">Получает метод передачи данных НТТР (например, <see langword="GET" />, <see langword="POST" /> или <see langword="HEAD" />), используемый клиентом.</span><span class="sxs-lookup"><span data-stu-id="f86aa-280">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="f86aa-281">Метод передачи данных HTTP, используемый клиентом.</span><span class="sxs-lookup"><span data-stu-id="f86aa-281">The HTTP data transfer method used by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-282">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.HttpMethod%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-282">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-283">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-283">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 <span data-ttu-id="f86aa-284">Пример выходных данных, созданным этот код.</span><span class="sxs-lookup"><span data-stu-id="f86aa-284">The following example shows output that is produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-285">Получает содержимое входящего объекта НТТР.</span><span class="sxs-lookup"><span data-stu-id="f86aa-285">Gets the contents of the incoming HTTP entity body.</span></span></summary>
        <value><span data-ttu-id="f86aa-286">Объект <see cref="T:System.IO.Stream" />, представляющий входящее содержимое НТТР.</span><span class="sxs-lookup"><span data-stu-id="f86aa-286">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-287">В следующем примере кода копируется <xref:System.Web.HttpRequest.InputStream%2A> в строку.</span><span class="sxs-lookup"><span data-stu-id="f86aa-287">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>  
  
 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f86aa-288">Предоставляет управляемую оболочку для метода IIS, которая помещает тело HTTP-запроса в память.</span><span class="sxs-lookup"><span data-stu-id="f86aa-288">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-289"><xref:System.Web.HttpRequest.InsertEntityBody%2A> Перегрузок метода предоставления управляемого доступа к IIS 7 `IHttpRequest::InsertEntityBody` метод.</span><span class="sxs-lookup"><span data-stu-id="f86aa-289">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="f86aa-290">Метод IIS помещает тело сущности запроса HTTP (данных, которая отправлена клиентом) в память.</span><span class="sxs-lookup"><span data-stu-id="f86aa-290">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="f86aa-291">Это полезно, поскольку IIS не сохраняет копию сущности запроса после его считывания.</span><span class="sxs-lookup"><span data-stu-id="f86aa-291">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="f86aa-292"><xref:System.Web.HttpRequest.InsertEntityBody%2A> Методы создания копии данных объекта запроса HTTP и сделать его доступным в службах IIS для пользовательской обработки.</span><span class="sxs-lookup"><span data-stu-id="f86aa-292">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f86aa-293"><xref:System.Web.HttpRequest.InsertEntityBody%2A> Перегрузки метода работы только на IIS 7.0 или более поздней версии, так как `IHttpRequest::InsertEntityBody` метод добавлен в IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="f86aa-293">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : unit -&gt; unit" Usage="httpRequest.InsertEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86aa-294">Предоставляет службам IIS копию тела HTTP-запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-294">Provides IIS with a copy of the HTTP request entity body.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-295">IIS не сохраняет копию запроса после его считывания.</span><span class="sxs-lookup"><span data-stu-id="f86aa-295">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="f86aa-296">Таким образом рекомендуется, только обработчик HTTP-запрос должен прочитать сущности запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-296">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="f86aa-297"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> Перегрузку метода предоставляет службам IIS копию сущности запроса, если она была ранее считана с ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f86aa-297">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="f86aa-298">Эта перегрузка метода может использоваться для случаев, когда ASP.NET прочитал запрос сущности, и вы хотите повторно использовать существующие данные запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-298">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f86aa-299">Метод был вызван для версии IIS более ранней, чем IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="f86aa-299">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="f86aa-300">для работы в размещенной среде.</span><span class="sxs-lookup"><span data-stu-id="f86aa-300">For operating in a hosted environment.</span></span> <span data-ttu-id="f86aa-301">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="f86aa-302">Связанное перечисление: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="f86aa-302">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : byte[] * int * int -&gt; unit" Usage="httpRequest.InsertEntityBody (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="f86aa-303">Массив, который содержит данные запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-303">An array that contains the request entity data.</span></span></param>
        <param name="offset"><span data-ttu-id="f86aa-304">Отсчитываемая от нуля позиция в параметре <paramref name="buffer" />, с которой начинается хранение данных запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-304">The zero-based position in <paramref name="buffer" /> at which to begin storing the request entity data.</span></span></param>
        <param name="count"><span data-ttu-id="f86aa-305">Число байтов, читаемых из массива <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-305">The number of bytes to read into the <paramref name="buffer" /> array.</span></span></param>
        <summary><span data-ttu-id="f86aa-306">Предоставляет службам IIS копию тела HTTP-запроса и сведения об объекте запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-306">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-307">IIS не сохраняет копию запроса после его считывания.</span><span class="sxs-lookup"><span data-stu-id="f86aa-307">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="f86aa-308">Таким образом рекомендуется, только обработчик HTTP-запрос должен прочитать сущности запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-308">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="f86aa-309"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> Перегрузка метода полезна, если вы хотите выполнять пользовательскую обработку, таких как вставка текста другую сущность в памяти.</span><span class="sxs-lookup"><span data-stu-id="f86aa-309">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="f86aa-310">Метод был вызван для версии IIS более ранней, чем IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="f86aa-310">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f86aa-311">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-311"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f86aa-312"><paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="f86aa-312"><paramref name="offset" /> or <paramref name="count" /> is a negative value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f86aa-313">Число элементов в <paramref name="count" /> превышает доступное пространство в <paramref name="buffer" /> при заданном значении <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-313">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="f86aa-314">для работы в размещенной на сервере среде.</span><span class="sxs-lookup"><span data-stu-id="f86aa-314">for operating in a hosted environment.</span></span> <span data-ttu-id="f86aa-315">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-315">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="f86aa-316">Связанное перечисление: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="f86aa-316">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.HttpRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-317">Получает значение, позволяющее определить, прошел ли запрос проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="f86aa-317">Gets a value indicating whether the request has been authenticated.</span></span></summary>
        <value><span data-ttu-id="f86aa-318">Если проверка подлинности для запроса выполнена, значение <see langword="true" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-318"><see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-319">В следующем примере кода используется <xref:System.Web.HttpRequest.IsAuthenticated%2A> свойства, чтобы определить, прошел ли текущий запрос.</span><span class="sxs-lookup"><span data-stu-id="f86aa-319">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="f86aa-320">Если он не прошел проверку подлинности, запрос перенаправляется на другую страницу, где пользователи могут ввести свои учетные данные в веб-приложения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-320">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="f86aa-321">Это распространенная методика, используемая в страницу по умолчанию для приложения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-321">This is a common technique used in the default page for an application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Web.HttpRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-322">Получает значение, которое указывает, был ли запрос отправлен с локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-322">Gets a value indicating whether the request is from the local computer.</span></span></summary>
        <value><span data-ttu-id="f86aa-323"><see langword="true" />, если запрос с локального компьютера; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-323"><see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-324"><xref:System.Web.HttpRequest.IsLocal%2A> Возвращает `true` Если IP-адрес инициатора запроса 127.0.0.1 или IP-адрес запроса совпадает с IP-адрес сервера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-324">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Web.HttpRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-325">Получает значение, определяющее, используются ли сокеты безопасности (т. е. HTTPS) в соединении HTTP.</span><span class="sxs-lookup"><span data-stu-id="f86aa-325">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span></span></summary>
        <value><span data-ttu-id="f86aa-326">Значение <see langword="true" />, если соединение является SSL-соединением, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-326"><see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-327">В следующем примере кода определяется ли <xref:System.Web.HttpRequest.IsSecureConnection%2A> свойство имеет значение false.</span><span class="sxs-lookup"><span data-stu-id="f86aa-327">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="f86aa-328">Если это так, <xref:System.Web.HttpResponse.SuppressContent%2A> задано значение true, чтобы остановить отправку ответа.</span><span class="sxs-lookup"><span data-stu-id="f86aa-328">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.HttpRequest.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f86aa-329">Имя извлекаемого члена коллекции.</span><span class="sxs-lookup"><span data-stu-id="f86aa-329">The name of the collection member to get.</span></span></param>
        <summary><span data-ttu-id="f86aa-330">Получает указанный объект из коллекций <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> или <see cref="P:System.Web.HttpRequest.ServerVariables" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-330">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span></span></summary>
        <value><span data-ttu-id="f86aa-331">Член коллекции <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> или <see cref="P:System.Web.HttpRequest.ServerVariables" />, заданный с помощью параметра <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-331">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span></span> <span data-ttu-id="f86aa-332">Если определенный <paramref name="key" /> не найден, тогда возвращается <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-332">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogonUserIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Web.HttpRequest.LogonUserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-333">Получает тип <see cref="T:System.Security.Principal.WindowsIdentity" /> для текущего пользователя.</span><span class="sxs-lookup"><span data-stu-id="f86aa-333">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span></span></summary>
        <value><span data-ttu-id="f86aa-334">Объект <see cref="T:System.Security.Principal.WindowsIdentity" /> для текущих параметров проверки подлинности Microsoft IIS.</span><span class="sxs-lookup"><span data-stu-id="f86aa-334">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-335"><xref:System.Web.HttpRequest.LogonUserIdentity%2A> Свойство предоставляет свойства и методы <xref:System.Security.Principal.WindowsIdentity> для подключенного пользователя в Microsoft Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="f86aa-335">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="f86aa-336">Экземпляр <xref:System.Security.Principal.WindowsIdentity> класс, который предоставляется командлетом <xref:System.Web.HttpRequest.LogonUserIdentity%2A> отслеживает маркер запроса IIS и предоставляет удобный доступ к этот маркер для текущего HTTP-запроса, обрабатываемого в среде ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f86aa-336">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="f86aa-337">Экземпляр <xref:System.Security.Principal.WindowsIdentity> класс создается автоматически, поэтому его не требуется создавать до Чтобы получить доступ к его методам и свойствам.</span><span class="sxs-lookup"><span data-stu-id="f86aa-337">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-338">В следующем примере кода показано, как получить <xref:System.Web.HttpRequest.LogonUserIdentity%2A> свойства для текущего пользователя и запись значений каждого элемента в текстовом файле.</span><span class="sxs-lookup"><span data-stu-id="f86aa-338">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="f86aa-339">Этот код можно поместить на странице ASP.NET, который ссылается формы `ACTION` атрибута.</span><span class="sxs-lookup"><span data-stu-id="f86aa-339">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f86aa-340">Веб-приложение работает в режиме интеграции с IIS 7, а событие <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> еще не произошло.</span><span class="sxs-lookup"><span data-stu-id="f86aa-340">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapImageCoordinates : string -&gt; int[]" Usage="httpRequest.MapImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="f86aa-341">Имя сопоставления изображения формы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-341">The name of the form image map.</span></span></param>
        <summary><span data-ttu-id="f86aa-342">Сопоставляет параметр входящей формы полей рисунков с соответствующими значениями координат x и y.</span><span class="sxs-lookup"><span data-stu-id="f86aa-342">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span></span></summary>
        <returns><span data-ttu-id="f86aa-343">Двухмерный массив целочисленных значений.</span><span class="sxs-lookup"><span data-stu-id="f86aa-343">A two-dimensional array of integers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f86aa-344">Сопоставляет виртуальный путь в запрашиваемом URL-адресе с физическим путем на сервере для текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-344">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpRequest.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="f86aa-345">Виртуальный путь (абсолютный или относительный) для текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-345">The virtual path (absolute or relative) for the current request.</span></span></param>
        <summary><span data-ttu-id="f86aa-346">Сопоставляет указанный виртуальный путь с физическим путем.</span><span class="sxs-lookup"><span data-stu-id="f86aa-346">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="f86aa-347">Физический путь на сервере, заданный параметром <paramref name="virtualPath" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-347">The physical path on the server specified by <paramref name="virtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="f86aa-348"><xref:System.Web.HttpRequest.MapPath%2A> Свойство потенциально содержит важные сведения о среде размещения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-348">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="f86aa-349">Возвращаемое значение не должно отображаться для пользователей.</span><span class="sxs-lookup"><span data-stu-id="f86aa-349">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-350">В следующем примере кода используется <xref:System.Web.HttpRequest.MapPath%2A> способа преобразовать виртуальный путь с полным физическим путем на сервере.</span><span class="sxs-lookup"><span data-stu-id="f86aa-350">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="f86aa-351">В этом примере состоит из двух частей:</span><span class="sxs-lookup"><span data-stu-id="f86aa-351">This example has two parts:</span></span>  
  
-   <span data-ttu-id="f86aa-352">Страницы ASPX сопоставляет путь, считывает файл и отображает результаты операции считывания.</span><span class="sxs-lookup"><span data-stu-id="f86aa-352">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>  
  
-   <span data-ttu-id="f86aa-353">Класс `UpperCaseFilterStream`, который изменяет все символы, передать его в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="f86aa-353">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>  
  
 <span data-ttu-id="f86aa-354">В первой части примера показано, как преобразовать виртуальный путь в полный физический путь с помощью <xref:System.Web.HttpRequest.MapPath%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f86aa-354">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="f86aa-355">Затем передается этот физический путь <xref:System.IO.StreamReader> объект, который получает содержимое файла.</span><span class="sxs-lookup"><span data-stu-id="f86aa-355">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="f86aa-356"><xref:System.Web.HttpResponse.Write%2A> Затем вызывается метод для отображения содержимого файла на странице.</span><span class="sxs-lookup"><span data-stu-id="f86aa-356">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="f86aa-357"><xref:System.Web.HttpResponse.Filter%2A> Свойство используется для присоединения фильтр в поток ответа, который делает текст, отображаемый на странице все прописные.</span><span class="sxs-lookup"><span data-stu-id="f86aa-357">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 <span data-ttu-id="f86aa-358">Во второй части примера показан класс, наследуемый от <xref:System.IO.Stream> и преобразует все символы в поток в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="f86aa-358">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="f86aa-359">Используйте этот код в `App_Code` папку для приложения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-359">Put this code in the `App_Code` folder for your application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="f86aa-360">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса не задан.</span><span class="sxs-lookup"><span data-stu-id="f86aa-360">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string * string * bool -&gt; string" Usage="httpRequest.MapPath (virtualPath, baseVirtualDir, allowCrossAppMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="f86aa-361">Виртуальный путь (абсолютный или относительный) для текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-361">The virtual path (absolute or relative) for the current request.</span></span></param>
        <param name="baseVirtualDir"><span data-ttu-id="f86aa-362">Виртуальный путь к базовому каталогу, используемый для относительного разрешения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-362">The virtual base directory path used for relative resolution.</span></span></param>
        <param name="allowCrossAppMapping"><span data-ttu-id="f86aa-363"><see langword="true" /> для указания, что <paramref name="virtualPath" /> может принадлежать другому приложению; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-363"><see langword="true" /> to indicate that <paramref name="virtualPath" /> may belong to another application; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f86aa-364">Сопоставляет указанный виртуальный путь с физическим путем.</span><span class="sxs-lookup"><span data-stu-id="f86aa-364">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="f86aa-365">Физический путь на сервере.</span><span class="sxs-lookup"><span data-stu-id="f86aa-365">The physical path on the server.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="f86aa-366"><xref:System.Web.HttpRequest.MapPath%2A> Свойство потенциально содержит важные сведения о среде размещения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-366">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="f86aa-367">Возвращаемое значение не должно отображаться для пользователей.</span><span class="sxs-lookup"><span data-stu-id="f86aa-367">The return value should not be displayed to users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="f86aa-368">Параметр <paramref name="allowCrossMapping" /> имеет значение <see langword="false" />, а параметр <paramref name="virtualPath" /> относится к другому приложению.</span><span class="sxs-lookup"><span data-stu-id="f86aa-368"><paramref name="allowCrossMapping" /> is <see langword="false" /> and <paramref name="virtualPath" /> belongs to another application.</span></span>

<span data-ttu-id="f86aa-369">- или -</span><span class="sxs-lookup"><span data-stu-id="f86aa-369">-or-</span></span> 
<span data-ttu-id="f86aa-370">Объект <see cref="T:System.Web.HttpContext" /> для текущего запроса не задан.</span><span class="sxs-lookup"><span data-stu-id="f86aa-370">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapRawImageCoordinates : string -&gt; double[]" Usage="httpRequest.MapRawImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="f86aa-371">Имя поля изображения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-371">The name of the image field.</span></span></param>
        <summary><span data-ttu-id="f86aa-372">Сопоставляет параметр входящей формы полей изображений с соответствующими значениями координат X и Y.</span><span class="sxs-lookup"><span data-stu-id="f86aa-372">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span></span></summary>
        <returns><span data-ttu-id="f86aa-373">Значения координат x и y.</span><span class="sxs-lookup"><span data-stu-id="f86aa-373">The x and y coordinate values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-374">Получает объединенную коллекцию элементов <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> и <see cref="P:System.Web.HttpRequest.ServerVariables" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-374">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span></span></summary>
        <value><span data-ttu-id="f86aa-375">Объект <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-375">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-376">Пары "имя значение" добавляемый в коллекцию, в следующем порядке:</span><span class="sxs-lookup"><span data-stu-id="f86aa-376">Name-value pairs are added to the collection in the following order:</span></span>  
  
1.  <span data-ttu-id="f86aa-377">Параметры строки запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-377">Query-string parameters.</span></span>  
  
2.  <span data-ttu-id="f86aa-378">Поля формы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-378">Form fields.</span></span>  
  
3.  <span data-ttu-id="f86aa-379">Файлы cookie.</span><span class="sxs-lookup"><span data-stu-id="f86aa-379">Cookies.</span></span>  
  
4.  <span data-ttu-id="f86aa-380">Переменные сервера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-380">Server variables.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-381">В следующем примере кода показано, как выполнить цикл по <xref:System.Web.HttpRequest.Params%2A> свойство для страницы и способ отображения каждая пара ключ/значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-381">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.HttpRequest.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-382">Получает виртуальный путь текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-382">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="f86aa-383">Виртуальный путь текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-383">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-384"><xref:System.Web.HttpRequest.Path%2A> Является объединением <xref:System.Web.HttpRequest.FilePath%2A> и <xref:System.Web.HttpRequest.PathInfo%2A> трейлер.</span><span class="sxs-lookup"><span data-stu-id="f86aa-384">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="f86aa-385">Например, URL-адрес `http://www.contoso.com/virdir/page.html/tail`, <xref:System.Web.HttpRequest.Path%2A> является /virdir/page.html/tail.</span><span class="sxs-lookup"><span data-stu-id="f86aa-385">For example, for the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-386">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.Path%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-386">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-387">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-387">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.HttpRequest.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-388">Получает дополнительные сведения о пути к ресурсу с расширением URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-388">Gets the additional path information for a resource with a URL extension.</span></span></summary>
        <value><span data-ttu-id="f86aa-389">Дополнительные сведения о пути к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="f86aa-389">The additional path information for a resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-390">URL-адреса `http://www.contoso.com/virdir/page.html/tail`, <xref:System.Web.HttpRequest.PathInfo%2A> значение будет/tail.</span><span class="sxs-lookup"><span data-stu-id="f86aa-390">For the URL `http://www.contoso.com/virdir/page.html/tail`, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-391">В следующем примере кода определяется ли <xref:System.Web.HttpRequest.PathInfo%2A> свойство содержит пустую строку.</span><span class="sxs-lookup"><span data-stu-id="f86aa-391">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="f86aa-392">В этом случае <xref:System.IO.StreamWriter.Write%2A> метод записывает строку, определяющую это в файл.</span><span class="sxs-lookup"><span data-stu-id="f86aa-392">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="f86aa-393">Если это не так, <xref:System.Web.HttpUtility.HtmlEncode%2A> метода HTML кодирует значение <xref:System.Web.HttpRequest.PathInfo%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод записывает закодированное значение в файл.</span><span class="sxs-lookup"><span data-stu-id="f86aa-393">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="f86aa-394">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-394">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalApplicationPath : string" Usage="System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-395">Получает физический путь в файловой системе к корневой папке приложения, выполняющегося в данный момент на сервере.</span><span class="sxs-lookup"><span data-stu-id="f86aa-395">Gets the physical file system path of the currently executing server application's root directory.</span></span></summary>
        <value><span data-ttu-id="f86aa-396">Физический путь в файловой системе к корневому каталогу текущего приложения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-396">The file system path of the current application's root directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-397">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-397">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-398">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-398">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalPath : string" Usage="System.Web.HttpRequest.PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-399">Получает физический путь в файловой системе, соответствующий запрашиваемому URL-адресу.</span><span class="sxs-lookup"><span data-stu-id="f86aa-399">Gets the physical file system path corresponding to the requested URL.</span></span></summary>
        <value><span data-ttu-id="f86aa-400">Путь в файловой системе для текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-400">The file system path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-401">В сценарии перенаправления с помощью <xref:System.Web.HttpServerUtility.Execute%2A> и <xref:System.Web.HttpServerUtility.Transfer%2A>, <xref:System.Web.HttpRequest.PhysicalPath%2A> свойство возвращает путь к исходной странице.</span><span class="sxs-lookup"><span data-stu-id="f86aa-401">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="f86aa-402">Чтобы найти физический путь к текущей выполняемой страницы использование <xref:System.Web.HttpRequest.MapPath%2A> метод с помощью входного аргумента в качестве <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="f86aa-402">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-403">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.PhysicalPath%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-403">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-404">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-404">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-405">Получает коллекцию переменных строки запроса HTTP.</span><span class="sxs-lookup"><span data-stu-id="f86aa-405">Gets the collection of HTTP query string variables.</span></span></summary>
        <value><span data-ttu-id="f86aa-406">Переменные строки запроса, отправленные клиентом.</span><span class="sxs-lookup"><span data-stu-id="f86aa-406">The query string variables sent by the client.</span></span> <span data-ttu-id="f86aa-407">Ключи и значения декодируются с помощью URL-адресов.</span><span class="sxs-lookup"><span data-stu-id="f86aa-407">Keys and values are URL-decoded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-408">В следующем примере кода показаны два способа получить значение переменной строки запроса с именем «fullname».</span><span class="sxs-lookup"><span data-stu-id="f86aa-408">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="f86aa-409">В каждом случае, если URL-адрес `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, то возвращаемое значение равно «Фэди Фахури», так как `%20` является URL-адрес декодирована в символ пробела.</span><span class="sxs-lookup"><span data-stu-id="f86aa-409">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="f86aa-410">Если URL-адрес не имеет `fullname` запрос строковый идентификатор, то возвращаемое значение должно быть `null`.</span><span class="sxs-lookup"><span data-stu-id="f86aa-410">If the URL doesn't have a `fullname` query string ID, the returned value would be `null`.</span></span>  
  
 <span data-ttu-id="f86aa-411">Первая часть кода ищет ключ «fullname» только в строке запроса; Вторая строка ищет ключ «fullname» во всех коллекцию HTTP-запросов.</span><span class="sxs-lookup"><span data-stu-id="f86aa-411">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="f86aa-412">Дополнительные сведения о строке, см. в разделе <xref:System.Web.HttpRequest.Item%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86aa-412">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>  
  
```csharp  
string fullname1 = Request.QueryString["fullname"];  
string fullname2 = Request["fullname"];  
  
```  
  
```vb  
Dim fullname1 As String = Request.QueryString("fullname")  
Dim fullname2 As String = Request("fullname")  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.HttpRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-413">Получает исходный URL-адрес текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-413">Gets the raw URL of the current request.</span></span></summary>
        <value><span data-ttu-id="f86aa-414">Исходный URL-адрес текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-414">The raw URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-415">Исходный URL-адрес определяется как часть URL-адрес следующие сведения о домене.</span><span class="sxs-lookup"><span data-stu-id="f86aa-415">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="f86aa-416">В строке URL-адрес `http://www.contoso.com/articles/recent.aspx`, исходный URL-адрес является /articles/recent.aspx.</span><span class="sxs-lookup"><span data-stu-id="f86aa-416">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="f86aa-417">Исходный URL-адрес включает строку запроса, при его наличии.</span><span class="sxs-lookup"><span data-stu-id="f86aa-417">The raw URL includes the query string, if present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-418">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.RawUrl%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-418">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-419">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-419">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadEntityBodyMode : System.Web.ReadEntityBodyMode" Usage="System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-420">Получает значение, указывающее, прочитано ли тело сущности запроса, и, если да, как оно было прочитано.</span><span class="sxs-lookup"><span data-stu-id="f86aa-420">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span></span></summary>
        <value><span data-ttu-id="f86aa-421">Значение, указывающее, как было прочитано тело запроса сущности, или указывающее, что оно не было прочитано.</span><span class="sxs-lookup"><span data-stu-id="f86aa-421">The value that indicates how the request entity body was read, or that it has not been read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-422">Этот метод используется для предотвращения исключение, которое возникает, если тело сущности уже считано, и предпринята попытка прочитать его, используя несовместимый метод.</span><span class="sxs-lookup"><span data-stu-id="f86aa-422">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="f86aa-423">Методы и свойства для чтения тела сущности запроса следующие:</span><span class="sxs-lookup"><span data-stu-id="f86aa-423">Methods and properties that read the entity body include the following:</span></span>  
  
-   <span data-ttu-id="f86aa-424">Свойство <xref:System.Web.HttpRequest.Form%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86aa-424">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>  
  
-   <span data-ttu-id="f86aa-425">Свойство <xref:System.Web.HttpRequest.Files%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86aa-425">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>  
  
-   <span data-ttu-id="f86aa-426">Свойство <xref:System.Web.HttpRequest.InputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86aa-426">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>  
  
-   <span data-ttu-id="f86aa-427">метод <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> ;</span><span class="sxs-lookup"><span data-stu-id="f86aa-427">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>  
  
-   <span data-ttu-id="f86aa-428">метод <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> ;</span><span class="sxs-lookup"><span data-stu-id="f86aa-428">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext with get, set" Usage="System.Web.HttpRequest.RequestContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-429">Получает экземпляр <see cref="T:System.Web.Routing.RequestContext" /> текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-429">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span></summary>
        <value><span data-ttu-id="f86aa-430">Экземпляр <see cref="T:System.Web.Routing.RequestContext" /> текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-430">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span> <span data-ttu-id="f86aa-431">Для немаршрутизируемых запросов возвращается пустой объект <see cref="T:System.Web.Routing.RequestContext" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-431">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-432">Это свойство предоставляет доступ к <xref:System.Web.Routing.RouteData> объект для текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-432">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="f86aa-433">Дополнительные сведения о маршрутизации ASP.NET см. в разделе. [Маршрутизация ASP.NET](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span><span class="sxs-lookup"><span data-stu-id="f86aa-433">For more information about ASP.NET routing, see.[ASP.NET Routing](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="f86aa-434">Пошаговое руководство. С помощью ASP.NET, маршрутизации в приложениях Web Forms</span><span class="sxs-lookup"><span data-stu-id="f86aa-434">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d"><span data-ttu-id="f86aa-435">Практическое руководство. Параметры доступа к URL-адреса в маршрутизируемой странице</span><span class="sxs-lookup"><span data-stu-id="f86aa-435">How to: Access URL Parameters in a Routed Page</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.Web.HttpRequest.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-436">Получает или задает метод передачи данных НТТР (<see langword="GET" /> или <see langword="POST" />), используемый клиентом.</span><span class="sxs-lookup"><span data-stu-id="f86aa-436">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="f86aa-437">Строка, представляющая тип вызова HTTP, отправленного клиентом.</span><span class="sxs-lookup"><span data-stu-id="f86aa-437">A string representing the HTTP invocation type sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-438">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.RequestType%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-438">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-439">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-439">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string * bool -&gt; unit" Usage="httpRequest.SaveAs (filename, includeHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="f86aa-440">Путь к физическому диску.</span><span class="sxs-lookup"><span data-stu-id="f86aa-440">The physical drive path.</span></span></param>
        <param name="includeHeaders"><span data-ttu-id="f86aa-441">Логическое значение, указывающее, должен ли заголовок НТТР сохраняться на диске.</span><span class="sxs-lookup"><span data-stu-id="f86aa-441">A Boolean value specifying whether an HTTP header should be saved to disk.</span></span></param>
        <summary><span data-ttu-id="f86aa-442">Сохраняет HTTP-запрос на диске.</span><span class="sxs-lookup"><span data-stu-id="f86aa-442">Saves an HTTP request to disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-443">Сохранение содержимого запроса на диск может быть полезно при отладке.</span><span class="sxs-lookup"><span data-stu-id="f86aa-443">Saving the request context to disk can be useful in debugging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-444">В следующем примере кода вызывается <xref:System.Web.HttpRequest.SaveAs%2A> метод при загрузке страницы.</span><span class="sxs-lookup"><span data-stu-id="f86aa-444">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="f86aa-445">Вызов указывает, что запрос был сохранен как текстовый файл в каталоге, где идентификатор процесса ASP.NET были предоставлены разрешения на запись, и что все данные заголовка, включенное в запрос включен в файл.</span><span class="sxs-lookup"><span data-stu-id="f86aa-445">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="f86aa-446">Свойству <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> объекта <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> задается значение <see langword="true" />, но параметр <paramref name="filename" /> не содержит абсолютный путь.</span><span class="sxs-lookup"><span data-stu-id="f86aa-446">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVariables : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.ServerVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-447">Получает коллекцию переменных веб-сервера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-447">Gets a collection of Web server variables.</span></span></summary>
        <value><span data-ttu-id="f86aa-448"><see cref="T:System.Collections.Specialized.NameValueCollection" /> переменных сервера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-448">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-449">Список переменных сервера, поддерживаемых службами IIS, см. в разделе [переменные сервера IIS](https://go.microsoft.com/fwlink/?LinkId=52471).</span><span class="sxs-lookup"><span data-stu-id="f86aa-449">For a list of server variables supported by IIS, see [IIS Server Variables](https://go.microsoft.com/fwlink/?LinkId=52471).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86aa-450">В следующем примере кода отображает имена и значения всех именованных переменных сервера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-450">The following code example displays the names and values of all named server variables.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TimedOutToken : System.Threading.CancellationToken" Usage="System.Web.HttpRequest.TimedOutToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-451">Получает объект <see cref="T:System.Threading.CancellationToken" />, задействуемый при истечении времени ожидания запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-451">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span></span></summary>
        <value><span data-ttu-id="f86aa-452">Токен отмены.</span><span class="sxs-lookup"><span data-stu-id="f86aa-452">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-453">Период ожидания можно указать в файле Web.config (см. в разделе <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) или программно (см. в разделе <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="f86aa-453">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="f86aa-454">Период ожидания измеряется с момента запрос поступает в.</span><span class="sxs-lookup"><span data-stu-id="f86aa-454">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="f86aa-455">Если действует 110 секунд времени ожидания по умолчанию, токен отмены будет обработки не ранее 110 секунд после начала обработки запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-455">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="f86aa-456">Вы можете изменить <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> значение свойства, и как долго этот маркер не ожидало еще, будут соблюдаться новое значение времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="f86aa-456">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>  
  
 <span data-ttu-id="f86aa-457">В настоящее время маркер только предоставляет 15-секундной детализацией, т.е. Если значение времени ожидания составляет 110 секунд, маркер будет обеспечивать совместимость, иногда от 110 до 125 секунд после начала обработки запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-457">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="f86aa-458">Гранулярность может измениться в будущем.</span><span class="sxs-lookup"><span data-stu-id="f86aa-458">The granularity may change in the future.</span></span>  
  
 <span data-ttu-id="f86aa-459">Несмотря на то, что это свойство является поточно ориентированной, существуют ограничения на его использование.</span><span class="sxs-lookup"><span data-stu-id="f86aa-459">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="f86aa-460">Для получения дополнительной информации см. <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f86aa-460">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f86aa-461">Это свойство не имеет смысла, если обработка запроса WebSockets начата.</span><span class="sxs-lookup"><span data-stu-id="f86aa-461">This property is meaningless if WebSockets request processing has started.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TlsTokenBindingInfo : System.Web.ITlsTokenBindingInfo" Usage="System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-462">Получает сведения о привязке токена TLS.</span><span class="sxs-lookup"><span data-stu-id="f86aa-462">Gets the TLS token binding information.</span></span> <span data-ttu-id="f86aa-463">Свойство позволяет приложениям извлекать сведения о токенах из входящих HTTP-запросов для расширенных возможностей аутентификации.</span><span class="sxs-lookup"><span data-stu-id="f86aa-463">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span></span></summary>
        <value><span data-ttu-id="f86aa-464">Маркер привязки для текущего соединения.</span><span class="sxs-lookup"><span data-stu-id="f86aa-464">The binding token for the current connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-465">Это свойство возвращает `null` на платформах, отличных от Windows 10.</span><span class="sxs-lookup"><span data-stu-id="f86aa-465">This property returns `null` on non-windows10 platforms.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalBytes : int" Usage="System.Web.HttpRequest.TotalBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-466">Получает число байтов в текущем потоке входящих данных.</span><span class="sxs-lookup"><span data-stu-id="f86aa-466">Gets the number of bytes in the current input stream.</span></span></summary>
        <value><span data-ttu-id="f86aa-467">Возвращает число байтов потока входящих данных.</span><span class="sxs-lookup"><span data-stu-id="f86aa-467">The number of bytes in the input stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-468">В следующем примере кода определяется ли <xref:System.Web.HttpRequest.TotalBytes%2A> значение свойства больше, чем 1000 байт и записывающий эту информацию в файл.</span><span class="sxs-lookup"><span data-stu-id="f86aa-468">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unvalidated : System.Web.UnvalidatedRequestValues" Usage="System.Web.HttpRequest.Unvalidated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-469">Получает значения HTTP-запроса, не активируя его проверку.</span><span class="sxs-lookup"><span data-stu-id="f86aa-469">Gets the HTTP request values without triggering request validation.</span></span></summary>
        <value><span data-ttu-id="f86aa-470">Значения HTTP-запроса, которые не были проверены с помощью проверки запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-470">The HTTP request values that have not been checked using request validation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-471">Запрос проверки HTML-разметка и скрипт, который может свидетельствовать о потенциальной атаке межсайтовых сценариев.</span><span class="sxs-lookup"><span data-stu-id="f86aa-471">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="f86aa-472">По умолчанию, все значения проверяются с помощью проверки запросов и если все значения содержат разметка или сценарий, ASP.NET создает исключение <xref:System.Web.HttpRequestValidationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-472">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="f86aa-473">Используйте этот метод, если предполагается, что запрос будет содержать разметки (например, Вы разрешили пользователям отправлять содержимое, которое содержит разметку) и вы хотите получить необработанное значение запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-473">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f86aa-474">Если это свойство используется, необходимо вручную проверить данные для потенциальных атак с использованием межузловых сценариев.</span><span class="sxs-lookup"><span data-stu-id="f86aa-474">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.HttpRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-475">Получает сведения об URL-адресе текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-475">Gets information about the URL of the current request.</span></span></summary>
        <value><span data-ttu-id="f86aa-476">Объект <see cref="T:System.Uri" />, содержащий универсальный код ресурса текущего запроса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-476">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-477">В следующем примере кода пример назначает <xref:System.Uri> объект текущего запроса объектной переменной и отображает значения двух свойств URL-адреса объекта в выходные данные НТТР.</span><span class="sxs-lookup"><span data-stu-id="f86aa-477">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Web.HttpRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-478">Получает сведения об URL-адресе предыдущего запроса клиента, связанного с текущим URL-адресом.</span><span class="sxs-lookup"><span data-stu-id="f86aa-478">Gets information about the URL of the client's previous request that linked to the current URL.</span></span></summary>
        <value><span data-ttu-id="f86aa-479">Объект <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-479">A <see cref="T:System.Uri" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-480">В следующем примере кода отображает значения двух свойств URL-адреса, который перенаправляет клиент в текущее приложение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-480">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="f86aa-481">Заголовок запроса HTTP <see langword="Referer" /> имеет неверный формат и не может быть преобразовано в объект <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-481">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.HttpRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-482">Получает исходную строку пользовательского агента, переданную от клиентского браузера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-482">Gets the raw user agent string of the client browser that has been provided.</span></span> <span data-ttu-id="f86aa-483">Обратите внимание, что результат может иметь значение null.</span><span class="sxs-lookup"><span data-stu-id="f86aa-483">Please note it may be null.</span></span></summary>
        <value><span data-ttu-id="f86aa-484">Начальная строка пользовательского агента для клиентского браузера.</span><span class="sxs-lookup"><span data-stu-id="f86aa-484">The raw user agent string of the client browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-485">В следующем примере кода назначает Идентификация запрашивающий браузер строковой переменной.</span><span class="sxs-lookup"><span data-stu-id="f86aa-485">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f"><span data-ttu-id="f86aa-486">Серверные элементы управления ASP.NET и возможностей браузера</span><span class="sxs-lookup"><span data-stu-id="f86aa-486">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.HttpRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-487">Получает IP-адрес узла удаленного клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-487">Gets the IP host address of the remote client.</span></span></summary>
        <value><span data-ttu-id="f86aa-488">IP-адрес узла удаленного клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-488">The IP address of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-489">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.UserHostAddress%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-489">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-490">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-490">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Web.HttpRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-491">Получает DNS-имя удаленного клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-491">Gets the DNS name of the remote client.</span></span></summary>
        <value><span data-ttu-id="f86aa-492">DNS-имя удаленного клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-492">The DNS name of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-493">В следующем примере кода используется <xref:System.Web.HttpUtility.HtmlEncode%2A> метод для HTML-кодирование значение <xref:System.Web.HttpRequest.UserHostName%2A> свойство и <xref:System.IO.TextWriter.WriteLine%2A> метод для записи в файл закодированное значение.</span><span class="sxs-lookup"><span data-stu-id="f86aa-493">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="f86aa-494">Данный пример кода является частью большего примера для <xref:System.Web.HttpRequest> класса.</span><span class="sxs-lookup"><span data-stu-id="f86aa-494">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Web.HttpRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86aa-495">Получает упорядоченный строковый массив языковых настроек клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-495">Gets a sorted string array of client language preferences.</span></span></summary>
        <value><span data-ttu-id="f86aa-496">Упорядоченный строковый массив языковых настроек клиента или <see langword="null" /> если пустой.</span><span class="sxs-lookup"><span data-stu-id="f86aa-496">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86aa-497">В следующем примере кода захватывает несколько значений, возвращенных <xref:System.Web.HttpRequest.UserLanguages%2A> свойство в массив строк и записи, имя каждого языка в отдельную строку вывода НТТР.</span><span class="sxs-lookup"><span data-stu-id="f86aa-497">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>  
  
 <span data-ttu-id="f86aa-498">Названия языков предоставляются браузером, и отсутствует определенный список всех возможных кодов.</span><span class="sxs-lookup"><span data-stu-id="f86aa-498">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="f86aa-499">Обычно они состоят из двузначных кодов языка, дефиса и двухсимвольный код для языка и региональных параметров, таких как «en-us» для США Английский и «fr-ca» для французский (Канада).</span><span class="sxs-lookup"><span data-stu-id="f86aa-499">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : unit -&gt; unit" Usage="httpRequest.ValidateInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86aa-500">Вызывает проверку для коллекций, доступных через свойства <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" /> и <see cref="P:System.Web.HttpRequest.QueryString" />.</span><span class="sxs-lookup"><span data-stu-id="f86aa-500">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86aa-501"><xref:System.Web.HttpRequest> Класс использует флаги проверки входных данных для отслеживания, следует ли выполнять проверку на запрос коллекций, доступных через <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, и <xref:System.Web.HttpRequest.QueryString%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="f86aa-501">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="f86aa-502"><xref:System.Web.HttpRequest.ValidateInput%2A> Метод устанавливает эти флаги, так что при методы доступа get для <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, или <xref:System.Web.HttpRequest.QueryString%2A> свойств вызываются, производится проверка входных данных.</span><span class="sxs-lookup"><span data-stu-id="f86aa-502">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="f86aa-503">Проверка выполняет обработку всех входящих данных со списком потенциально опасных данных жестко.</span><span class="sxs-lookup"><span data-stu-id="f86aa-503">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 <span data-ttu-id="f86aa-504">Если функция проверки обеспечивается директивы страницы или конфигурации, этот метод вызывается во время страницы `ProcessRequest` стадию обработки.</span><span class="sxs-lookup"><span data-stu-id="f86aa-504">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="f86aa-505"><xref:System.Web.HttpRequest.ValidateInput%2A> Метод может вызываться в коде, если не включена функция проверки.</span><span class="sxs-lookup"><span data-stu-id="f86aa-505">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException"><span data-ttu-id="f86aa-506">Потенциально опасные данные, полученные от клиента.</span><span class="sxs-lookup"><span data-stu-id="f86aa-506">Potentially dangerous data was received from the client.</span></span></exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>