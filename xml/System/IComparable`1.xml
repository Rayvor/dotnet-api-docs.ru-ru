<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fbc3d67beaaf60e0ce49989f76b382162948582" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172847" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="fd005-101">Тип объекта для сравнения.</span><span class="sxs-lookup"><span data-stu-id="fd005-101">The type of object to compare.</span></span></typeparam>
    <summary><span data-ttu-id="fd005-102">Определяет обобщенный метод сравнения, тип значения или класс, который используется для создания метода сравнения с целью упорядочения или сортировки экземпляров.</span><span class="sxs-lookup"><span data-stu-id="fd005-102">Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd005-103">Этот интерфейс реализуется типами, значения которых могут быть упорядочены или отсортированы, и предоставляет строго типизированный метод сравнения для упорядочения элементов универсального объекта коллекции.</span><span class="sxs-lookup"><span data-stu-id="fd005-103">This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="fd005-104">Например, одно число может быть больше второго, а одна строка может отображаться в алфавитном порядке перед другой.</span><span class="sxs-lookup"><span data-stu-id="fd005-104">For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</span></span> <span data-ttu-id="fd005-105">Для этого требуется, чтобы реализующие типы определяли один метод, <xref:System.IComparable%601.CompareTo%28%600%29>, который указывает, находится ли текущее вхождение в порядке сортировки до, после или аналогично второму объекту того же типа.</span><span class="sxs-lookup"><span data-stu-id="fd005-105">It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="fd005-106">Как правило, метод не вызывается непосредственно из кода разработчика.</span><span class="sxs-lookup"><span data-stu-id="fd005-106">Typically, the method is not called directly from developer code.</span></span> <span data-ttu-id="fd005-107">Вместо этого он вызывается автоматически такими методами, как <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> и <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd005-107">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="fd005-108">Как правило, типы, предоставляющие реализацию <xref:System.IComparable%601>, также реализуют интерфейс <xref:System.IEquatable%601>.</span><span class="sxs-lookup"><span data-stu-id="fd005-108">Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="fd005-109">Интерфейс <xref:System.IEquatable%601> определяет метод <xref:System.IEquatable%601.Equals%2A>, который определяет равенство экземпляров реализующего типа.</span><span class="sxs-lookup"><span data-stu-id="fd005-109">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="fd005-110">Реализация метода <xref:System.IComparable%601.CompareTo%28%600%29> должна возвращать <xref:System.Int32> с одним из трех значений, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="fd005-110">The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="fd005-111">Значение</span><span class="sxs-lookup"><span data-stu-id="fd005-111">Value</span></span>|<span data-ttu-id="fd005-112">Значение</span><span class="sxs-lookup"><span data-stu-id="fd005-112">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="fd005-113">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="fd005-113">Less than zero</span></span>|<span data-ttu-id="fd005-114">Этот объект предшествует объекту, указанному методом <xref:System.IComparable%601.CompareTo%2A> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="fd005-114">This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="fd005-115">Нуль</span><span class="sxs-lookup"><span data-stu-id="fd005-115">Zero</span></span>|<span data-ttu-id="fd005-116">Текущий экземпляр находится в том же положении в порядке сортировки, что и объект, заданный аргументом метода <xref:System.IComparable%601.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd005-116">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.</span></span>|  
|<span data-ttu-id="fd005-117">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="fd005-117">Greater than zero</span></span>|<span data-ttu-id="fd005-118">Этот текущий экземпляр следует за объектом, заданным аргументом метода <xref:System.IComparable%601.CompareTo%2A> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="fd005-118">This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.</span></span>|  
  
 <span data-ttu-id="fd005-119">Все числовые типы (такие как <xref:System.Int32> и <xref:System.Double>) реализуют <xref:System.IComparable%601>, как <xref:System.String>, <xref:System.Char>и <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="fd005-119">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="fd005-120">Пользовательские типы также должны предоставлять собственную реализацию <xref:System.IComparable%601>, чтобы разрешить упорядочивание или сортировку экземпляров объектов.</span><span class="sxs-lookup"><span data-stu-id="fd005-120">Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd005-121">В следующем примере показана реализация <xref:System.IComparable%601> для простого `Temperature` объекта.</span><span class="sxs-lookup"><span data-stu-id="fd005-121">The following example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="fd005-122">В этом примере создается <xref:System.Collections.Generic.SortedList%602> коллекция строк с `Temperature`ными ключами объектов и добавляется несколько пар температур и строк в список вне последовательности.</span><span class="sxs-lookup"><span data-stu-id="fd005-122">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="fd005-123">При вызове метода <xref:System.Collections.Generic.SortedList%602.Add%2A> коллекция <xref:System.Collections.Generic.SortedList%602> использует реализацию <xref:System.IComparable%601> для сортировки записей списка, которые затем отображаются в порядке увеличения температуры.</span><span class="sxs-lookup"><span data-stu-id="fd005-123">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="fd005-124">Замените параметр типа интерфейса <see cref="T:System.IComparable`1" /> типом, реализующим этот интерфейс.</span><span class="sxs-lookup"><span data-stu-id="fd005-124">Replace the type parameter of the <see cref="T:System.IComparable`1" /> interface with the type that is implementing this interface.</span></span>  
  
<span data-ttu-id="fd005-125">При реализации <see cref="T:System.IComparable`1" />следует перегружать операторы <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />и <see langword="op_LessThanOrEqual" />, чтобы возвращать значения, которые соответствуют <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span><span class="sxs-lookup"><span data-stu-id="fd005-125">If you implement <see cref="T:System.IComparable`1" />, you should overload the <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, and <see langword="op_LessThanOrEqual" /> operators to return values that are consistent with <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span></span> <span data-ttu-id="fd005-126">Кроме того, следует также реализовать <see cref="T:System.IEquatable`1" />.</span><span class="sxs-lookup"><span data-stu-id="fd005-126">In addition, you should also implement <see cref="T:System.IEquatable`1" />.</span></span> <span data-ttu-id="fd005-127">Полные сведения см. в <see cref="T:System.IEquatable`1" /> статье.</span><span class="sxs-lookup"><span data-stu-id="fd005-127">See the <see cref="T:System.IEquatable`1" /> article for complete information.</span></span></para></block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(T other);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fd005-128">Объект для сравнения с этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="fd005-128">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="fd005-129">Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</span><span class="sxs-lookup"><span data-stu-id="fd005-129">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="fd005-130">Значение, указывающее, каков относительный порядок сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="fd005-130">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="fd005-131">Возвращаемые значения представляют следующие результаты сравнения.</span><span class="sxs-lookup"><span data-stu-id="fd005-131">The return value has these meanings:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="fd005-132">Значение</span><span class="sxs-lookup"><span data-stu-id="fd005-132">Value</span></span> 
 </term><description> <span data-ttu-id="fd005-133">Значение</span><span class="sxs-lookup"><span data-stu-id="fd005-133">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="fd005-134">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="fd005-134">Less than zero</span></span> 
 </term><description> <span data-ttu-id="fd005-135">Данный экземпляр предшествует параметру <paramref name="other" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="fd005-135">This instance precedes <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="fd005-136">Нуль</span><span class="sxs-lookup"><span data-stu-id="fd005-136">Zero</span></span> 
 </term><description> <span data-ttu-id="fd005-137">Данный экземпляр занимает ту же позицию в порядке сортировки, что и параметр <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="fd005-137">This instance occurs in the same position in the sort order as <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="fd005-138">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="fd005-138">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="fd005-139">Данный экземпляр следует за параметром <paramref name="other" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="fd005-139">This instance follows <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd005-140"><xref:System.IComparable%601.CompareTo%2A> предоставляет строго типизированный метод сравнения для упорядочения элементов универсального объекта коллекции.</span><span class="sxs-lookup"><span data-stu-id="fd005-140"><xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="fd005-141">По этой причине он обычно не вызывается непосредственно из кода разработчика.</span><span class="sxs-lookup"><span data-stu-id="fd005-141">Because of this, it is usually not called directly from developer code.</span></span> <span data-ttu-id="fd005-142">Вместо этого он вызывается автоматически такими методами, как <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> и <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="fd005-142">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="fd005-143">Этот метод является только определением и должен быть реализован конкретным классом или типом значения, чтобы иметь результат.</span><span class="sxs-lookup"><span data-stu-id="fd005-143">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="fd005-144">Значение сравнений, указанных в разделе "возвращаемые значения" ("предшествует", "находится в том же положении, что и", и "Далее"), зависит от конкретной реализации.</span><span class="sxs-lookup"><span data-stu-id="fd005-144">The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="fd005-145">По определению любой объект сравнивается с более чем `null`, а две пустые ссылки сравнивают равными друг другу.</span><span class="sxs-lookup"><span data-stu-id="fd005-145">By definition, any object compares greater than `null`, and two null references compare equal to each other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd005-146">В следующем примере кода показана реализация <xref:System.IComparable%601> для простого `Temperature` объекта.</span><span class="sxs-lookup"><span data-stu-id="fd005-146">The following code example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="fd005-147">В этом примере создается <xref:System.Collections.Generic.SortedList%602> коллекция строк с `Temperature`ными ключами объектов и добавляется несколько пар температур и строк в список вне последовательности.</span><span class="sxs-lookup"><span data-stu-id="fd005-147">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="fd005-148">При вызове метода <xref:System.Collections.Generic.SortedList%602.Add%2A> коллекция <xref:System.Collections.Generic.SortedList%602> использует реализацию <xref:System.IComparable%601> для сортировки записей списка, которые затем отображаются в порядке увеличения температуры.</span><span class="sxs-lookup"><span data-stu-id="fd005-148">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fd005-149">Для объектов A, B и C должны выполняться следующие условия:</span><span class="sxs-lookup"><span data-stu-id="fd005-149">For objects A, B, and C, the following must be true:</span></span> 
 <span data-ttu-id="fd005-150">Для возврата нуля требуется <c>. CompareTo (a)</c> .</span><span class="sxs-lookup"><span data-stu-id="fd005-150"><c>A.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="fd005-151">Если <c>A. CompareTo (B)</c> возвращает ноль, то <c>B. CompareTo (A)</c> требуется для возврата нуля.</span><span class="sxs-lookup"><span data-stu-id="fd005-151">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="fd005-152">Если <c>A. CompareTo (B)</c> возвращает ноль, а <c>B. CompareTo (c)</c> возвращает ноль, то для возврата нуля требуется <c>. CompareTo (c)</c> .</span><span class="sxs-lookup"><span data-stu-id="fd005-152">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="fd005-153">Если <c>A. CompareTo (B)</c> возвращает значение, отличное от нуля, то <c>B. CompareTo (A)</c> требуется для возвращения значения противоположного знака.</span><span class="sxs-lookup"><span data-stu-id="fd005-153">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> is required to return a value of the opposite sign.</span></span>  
  
<span data-ttu-id="fd005-154">Если <c>A. CompareTo (B)</c> возвращает значение <paramref name="x" />, которое не равно нулю, а <c>B. CompareTo (C)</c> возвращает значение <paramref name="y" /> того же знака, что и <paramref name="x" />, то <c>A. CompareTo (c)</c> требуется для возвращения значения того же знака, что и <paramref name="x" /> и <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="fd005-154">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> that is not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> is required to return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="fd005-155">Используйте метод <see cref="M:System.IComparable`1.CompareTo(`0)" />, чтобы определить порядок экземпляров класса.</span><span class="sxs-lookup"><span data-stu-id="fd005-155">Use the <see cref="M:System.IComparable`1.CompareTo(`0)" /> method to determine the ordering of instances of a class.</span></span></para></block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>
