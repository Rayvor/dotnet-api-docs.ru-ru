<Type Name="Double" FullName="System.Double">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc8fb0c3b1b5aea8602fbae3aa9505aa4fa7aea6" /><Meta Name="ms.sourcegitcommit" Value="24f564114ee2fa9c63dbac1b25b82826cc4e320f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/25/2019" /><Meta Name="ms.locfileid" Value="68488606" /></Metadata><TypeSignature Language="C#" Value="public struct Double : IComparable, IComparable&lt;double&gt;, IConvertible, IEquatable&lt;double&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit float64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;float64&gt;, class System.IConvertible, class System.IEquatable`1&lt;float64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Double" />
  <TypeSignature Language="VB.NET" Value="Public Structure Double&#xA;Implements IComparable, IComparable(Of Double), IConvertible, IEquatable(Of Double), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Double : IComparable, IComparable&lt;double&gt;, IConvertible, IEquatable&lt;double&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type double = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Double&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="28aef-101">Представляет число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-101">Represents a double-precision floating-point number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-102">Тип значения представляет 64-разрядное число двойной точности со значениями от отрицательного 1.79769313486232 E308 до положительного 1.79769313486232 E308, а также положительного или отрицательного нуля <xref:System.Double.NegativeInfinity>, <xref:System.Double.PositiveInfinity>,, а не числа ( <xref:System.Double> <xref:System.Double.NaN>).</span><span class="sxs-lookup"><span data-stu-id="28aef-102">The <xref:System.Double> value type represents a double-precision 64-bit number with values ranging from negative 1.79769313486232e308 to positive 1.79769313486232e308, as well as positive or negative zero, <xref:System.Double.PositiveInfinity>, <xref:System.Double.NegativeInfinity>, and not a number (<xref:System.Double.NaN>).</span></span> <span data-ttu-id="28aef-103">Он предназначен для представления очень больших значений (например, расстояния между планеты или ГАЛАКСИЕС) или чрезвычайно небольшим (молекулярное масса вещества в килограммах) и часто является неточным (например, расстояние от земли до другой солнечной системы), <xref:System.Double> тип соответствует стандарту IEC 60559:1989 (IEEE 754) для бинарных арифметических операций с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-103">It is intended to represent values that are extremely large (such as distances between planets or galaxies) or extremely small (the molecular mass of a substance in kilograms) and that often are imprecise (such as the distance from earth to another solar system), The <xref:System.Double> type complies with the IEC 60559:1989 (IEEE 754) standard for binary floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="28aef-104">В этом разделе:</span><span class="sxs-lookup"><span data-stu-id="28aef-104">This topic consists of the following sections:</span></span>  
  
-   [<span data-ttu-id="28aef-105">Представление и точность с плавающей точкой</span><span class="sxs-lookup"><span data-stu-id="28aef-105">Floating-point representation and precision</span></span>](#Precision)  
  
-   [<span data-ttu-id="28aef-106">Проверка на равенство</span><span class="sxs-lookup"><span data-stu-id="28aef-106">Testing for equality</span></span>](#Equality)  
  
-   [<span data-ttu-id="28aef-107">Значения и исключения с плавающей запятой</span><span class="sxs-lookup"><span data-stu-id="28aef-107">Floating-point values and exceptions</span></span>](#Exceptions)  
  
-   [<span data-ttu-id="28aef-108">Преобразования типов и двойная структура</span><span class="sxs-lookup"><span data-stu-id="28aef-108">Type conversions and the Double structure</span></span>](#Conversions)  
  
-   [<span data-ttu-id="28aef-109">Функция вычислений с плавающей запятой</span><span class="sxs-lookup"><span data-stu-id="28aef-109">Floating-point functionality</span></span>](#Functionality)  
  
<a name="Precision"></a>   
## <a name="floating-point-representation-and-precision"></a><span data-ttu-id="28aef-110">Представление и точность с плавающей точкой</span><span class="sxs-lookup"><span data-stu-id="28aef-110">Floating-Point Representation and Precision</span></span>  
 <span data-ttu-id="28aef-111">Тип <xref:System.Double> данных хранит значения с плавающей запятой двойной точности в 64-разрядном двоичном формате, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="28aef-111">The <xref:System.Double> data type stores double-precision floating-point values in a 64-bit binary format, as shown in the following table:</span></span>  
  
|<span data-ttu-id="28aef-112">Отделение</span><span class="sxs-lookup"><span data-stu-id="28aef-112">Part</span></span>|<span data-ttu-id="28aef-113">Bits</span><span class="sxs-lookup"><span data-stu-id="28aef-113">Bits</span></span>|  
|----------|----------|  
|<span data-ttu-id="28aef-114">Значащим или мантисса</span><span class="sxs-lookup"><span data-stu-id="28aef-114">Significand or mantissa</span></span>|<span data-ttu-id="28aef-115">0-51</span><span class="sxs-lookup"><span data-stu-id="28aef-115">0-51</span></span>|  
|<span data-ttu-id="28aef-116">Числа</span><span class="sxs-lookup"><span data-stu-id="28aef-116">Exponent</span></span>|<span data-ttu-id="28aef-117">52-62</span><span class="sxs-lookup"><span data-stu-id="28aef-117">52-62</span></span>|  
|<span data-ttu-id="28aef-118">Знак (0 = положительный, 1 = отрицательный)</span><span class="sxs-lookup"><span data-stu-id="28aef-118">Sign (0 = Positive, 1 = Negative)</span></span>|<span data-ttu-id="28aef-119">63</span><span class="sxs-lookup"><span data-stu-id="28aef-119">63</span></span>|  
  
 <span data-ttu-id="28aef-120">Точно так же, как десятичные дроби не могут точно представлять некоторые дробные значения (например <xref:System.Math.PI?displayProperty=nameWithType>, 1/3 или), двоичные дроби не могут представлять некоторые дробные значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-120">Just as decimal fractions are unable to precisely represent some fractional values (such as 1/3 or <xref:System.Math.PI?displayProperty=nameWithType>), binary fractions are unable to represent some fractional values.</span></span> <span data-ttu-id="28aef-121">Например, 1/10, которая точно представляется в виде десятичной дроби, представляется в виде. 001100110011 в виде двоичной дроби с шаблоном «0011», повторяющимся до бесконечности.</span><span class="sxs-lookup"><span data-stu-id="28aef-121">For example, 1/10, which is represented precisely by .1 as a decimal fraction, is represented by .001100110011 as a binary fraction, with the pattern "0011" repeating to infinity.</span></span> <span data-ttu-id="28aef-122">В этом случае значение с плавающей запятой обеспечивает неточное представление числа, которое оно представляет.</span><span class="sxs-lookup"><span data-stu-id="28aef-122">In this case, the floating-point value provides an imprecise representation of the number that it represents.</span></span> <span data-ttu-id="28aef-123">Выполнение дополнительных математических операций с исходным значением с плавающей запятой часто приводит к увеличению нехватки точности.</span><span class="sxs-lookup"><span data-stu-id="28aef-123">Performing additional mathematical operations on the original floating-point value often tends to increase its lack of precision.</span></span> <span data-ttu-id="28aef-124">Например, если сравнить результат умножения на 10, а затем увеличить значение от 0,1 до. 1 9 раз, мы видим, что это сложение, так как оно включало восемь дополнительных операций, создало менее точный результат.</span><span class="sxs-lookup"><span data-stu-id="28aef-124">For example, if we compare the result of multiplying .1 by 10 and adding .1 to .1 nine times, we see that addition, because it has involved eight more operations, has produced the less precise result.</span></span> <span data-ttu-id="28aef-125">Обратите внимание, что это различие очевидно только в том случае, <xref:System.Double> если мы отображаем два значения с помощью [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md)R, которая при необходимости отображает все 17 знаков <xref:System.Double> точности, поддерживаемые типом.</span><span class="sxs-lookup"><span data-stu-id="28aef-125">Note that this disparity is apparent only if we display the two <xref:System.Double> values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md), which if necessary displays all 17 digits of precision supported by the <xref:System.Double> type.</span></span>  
  
 [!code-csharp[System.Double.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/representation1.cs#3)]
 [!code-vb[System.Double.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/representation1.vb#3)]  
  
 <span data-ttu-id="28aef-126">Поскольку некоторые числа не могут быть представлены в виде дробных двоичных значений, числа с плавающей запятой могут быть приблизительными только вещественными числами.</span><span class="sxs-lookup"><span data-stu-id="28aef-126">Because some numbers cannot be represented exactly as fractional binary values, floating-point numbers can only approximate real numbers.</span></span>  
  
 <span data-ttu-id="28aef-127">Все числа с плавающей запятой также имеют ограниченное количество значащих цифр, что также определяет, насколько точное значение числа с плавающей запятой приблизительно равно вещественному числу.</span><span class="sxs-lookup"><span data-stu-id="28aef-127">All floating-point numbers also have a limited number of significant digits, which also determines how accurately a floating-point value approximates a real number.</span></span>   <span data-ttu-id="28aef-128"><xref:System.Double> Значение имеет длину до 15 десятичных разрядов, хотя для внутренних целей поддерживается не более 17 цифр.</span><span class="sxs-lookup"><span data-stu-id="28aef-128">A <xref:System.Double> value has up to 15 decimal digits of precision, although a maximum of 17 digits is maintained internally.</span></span> <span data-ttu-id="28aef-129">Это означает, что некоторые операции с плавающей точкой могут не иметь точности изменять значение с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-129">This means that some floating-point operations may lack the precision to change a floating point value.</span></span> <span data-ttu-id="28aef-130">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="28aef-130">The following example provides an illustration.</span></span> <span data-ttu-id="28aef-131">Он определяет очень большое значение с плавающей запятой, а затем добавляет к нему продукт <xref:System.Double.Epsilon?displayProperty=nameWithType> и один квадриллион.</span><span class="sxs-lookup"><span data-stu-id="28aef-131">It defines a very large floating-point value, and then adds the product of <xref:System.Double.Epsilon?displayProperty=nameWithType> and one quadrillion to it.</span></span> <span data-ttu-id="28aef-132">Однако продукт слишком мал для изменения исходного значения с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-132">The product, however, is too small to modify the original floating-point value.</span></span> <span data-ttu-id="28aef-133">Его минимальная значимая цифра состоит из тысяч, в то время как наиболее значимая цифра в продукте — 10<sup>-309</sup>.</span><span class="sxs-lookup"><span data-stu-id="28aef-133">Its least significant digit is thousandths, whereas the most significant digit in the product is 10<sup>-309</sup>.</span></span>  
  
 [!code-csharp[System.Double.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/representation2.cs#4)]
 [!code-vb[System.Double.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/representation2.vb#4)]  
  
 <span data-ttu-id="28aef-134">Ограниченная точность числа с плавающей запятой имеет несколько последствий:</span><span class="sxs-lookup"><span data-stu-id="28aef-134">The limited precision of a floating-point number has several consequences:</span></span>  
  
-   <span data-ttu-id="28aef-135">Два числа с плавающей запятой, которые выглядят равными для определенной точности, могут не сравниваться, так как их наименьшие значащие цифры отличаются.</span><span class="sxs-lookup"><span data-stu-id="28aef-135">Two floating-point numbers that appear equal for a particular precision might not compare equal because their least significant digits are different.</span></span> <span data-ttu-id="28aef-136">В следующем примере ряд чисел добавляется вместе, а их итог сравнивается с ожидаемым итогом.</span><span class="sxs-lookup"><span data-stu-id="28aef-136">In the following example, a series of numbers are added together, and their total is compared with their expected total.</span></span> <span data-ttu-id="28aef-137">Хотя два значения выглядят одинаково, вызов `Equals` метода указывает, что они не являются.</span><span class="sxs-lookup"><span data-stu-id="28aef-137">Although the two values appear to be the same, a call to the `Equals` method indicates that they are not.</span></span>  
  
     [!code-csharp[System.Double.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist3.cs#6)]
     [!code-vb[System.Double.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist3.vb#6)]  
  
     <span data-ttu-id="28aef-138">Если <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType> изменить элементы форматирования в инструкции с `{0}` и `{1}` на `{0:R}` и `{1:R}` , чтобы отобразить все значащие цифры двух <xref:System.Double> значений, то ясно, что эти два значения не равны, так как потери точности во время операций сложения.</span><span class="sxs-lookup"><span data-stu-id="28aef-138">If you change the format items in the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType> statement from `{0}` and `{1}` to `{0:R}` and `{1:R}` to display all significant digits of the two <xref:System.Double> values, it is clear that the two values are unequal because of a loss of precision during the addition operations.</span></span> <span data-ttu-id="28aef-139">В этом случае проблему можно устранить, вызвав <xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы <xref:System.Double> округлить значения до нужной точности перед выполнением сравнения.</span><span class="sxs-lookup"><span data-stu-id="28aef-139">In this case, the issue can be resolved by calling the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType> method to round the <xref:System.Double> values to the desired precision before performing the comparison.</span></span>  
  
-   <span data-ttu-id="28aef-140">Математическая операция OR, использующая число с плавающей запятой, может не дать одинакового результата, если используется десятичное число, так как число двоичных с плавающей запятой может не совпадать с десятичным числом.</span><span class="sxs-lookup"><span data-stu-id="28aef-140">A mathematical or comparison operation that uses a floating-point number might not yield the same result if a decimal number is used, because the binary floating-point number might not equal the decimal number.</span></span> <span data-ttu-id="28aef-141">Предыдущий пример демонстрирует это, отображая результат умножения десята на 10 и добавляя. 1 раз.</span><span class="sxs-lookup"><span data-stu-id="28aef-141">A previous example illustrated this by displaying the result of multiplying .1 by 10 and adding .1 times.</span></span>  
  
     <span data-ttu-id="28aef-142">Если точность числовых операций с дробными значениями важна, можно использовать <xref:System.Decimal> вместо <xref:System.Double> типа.</span><span class="sxs-lookup"><span data-stu-id="28aef-142">When accuracy in numeric operations with fractional values is important, you can use the <xref:System.Decimal> rather than the <xref:System.Double> type.</span></span> <span data-ttu-id="28aef-143">Если точность числовых операций с целочисленными значениями вне диапазона <xref:System.Int64> типов или <xref:System.UInt64> важна, используйте <xref:System.Numerics.BigInteger> тип.</span><span class="sxs-lookup"><span data-stu-id="28aef-143">When accuracy in numeric operations with integral values beyond the range of the <xref:System.Int64> or <xref:System.UInt64> types is important, use the <xref:System.Numerics.BigInteger> type.</span></span>  
  
-   <span data-ttu-id="28aef-144">Значение может не циклически передавалться, если используется число с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-144">A value might not round-trip if a floating-point number is involved.</span></span> <span data-ttu-id="28aef-145">Значение считается циклическим, если операция преобразует исходное число с плавающей запятой в другую форму, операция обратного преобразования преобразует преобразованную форму обратно в число с плавающей запятой, а окончательное число с плавающей запятой не равно исходному число с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-145">A value is said to round-trip if an operation converts an original floating-point number to another form, an inverse operation transforms the converted form back to a floating-point number, and the final floating-point number is not equal to the original floating-point number.</span></span> <span data-ttu-id="28aef-146">Цикл обработки может завершиться ошибкой, поскольку одна или несколько наименьших значащих цифр теряются или изменяются при преобразовании.</span><span class="sxs-lookup"><span data-stu-id="28aef-146">The round trip might fail because one or more least significant digits are lost or changed in a conversion.</span></span> <span data-ttu-id="28aef-147">В следующем примере три <xref:System.Double> значения преобразуются в строки и сохраняются в файле.</span><span class="sxs-lookup"><span data-stu-id="28aef-147">In the following example, three <xref:System.Double> values are converted to strings and saved in a file.</span></span> <span data-ttu-id="28aef-148">Как видно из выходных данных, несмотря на то, что значения выглядят идентичными, восстановленные значения не равны исходным значениям.</span><span class="sxs-lookup"><span data-stu-id="28aef-148">As the output shows, however, even though the values appear to be identical, the restored values are not equal to the original values.</span></span>  
  
     [!code-csharp[System.Double.Structure#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist4.cs#7)]
     [!code-vb[System.Double.Structure#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist4.vb#7)]  
  
     <span data-ttu-id="28aef-149">В этом случае можно успешно выполнить циклический обмен значениями, используя [стандартную строку числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) "G17" для сохранения полной точности <xref:System.Double> значений, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-149">In this case, the values can be successfully round-tripped by using the "G17" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to preserve the full precision of <xref:System.Double> values, as the following example shows.</span></span>  
  
     [!code-csharp[System.Double.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist5.cs#8)]
     [!code-vb[System.Double.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist5.vb#8)]  

   > [!IMPORTANT]
   >  <span data-ttu-id="28aef-150">При использовании со <xref:System.Double> значением описатель формата R в некоторых случаях не может успешно выполнить циклический обмен исходным значением.</span><span class="sxs-lookup"><span data-stu-id="28aef-150">When used with a <xref:System.Double> value, the "R" format specifier in some cases fails to successfully round-trip the original value.</span></span> <span data-ttu-id="28aef-151">Чтобы обеспечить <xref:System.Double> успешный циклический обмен значениями, используйте описатель формата "G17".</span><span class="sxs-lookup"><span data-stu-id="28aef-151">To ensure that <xref:System.Double> values successfully round-trip, use the "G17" format specifier.</span></span>

-   <span data-ttu-id="28aef-152"><xref:System.Single>значения имеют меньшую точность <xref:System.Double> , чем значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-152"><xref:System.Single> values have less precision than <xref:System.Double> values.</span></span> <span data-ttu-id="28aef-153">Значение, которое преобразуется в эквивалентный <xref:System.Double> , <xref:System.Double> часто не равно значению из-за различий в точности. <xref:System.Single></span><span class="sxs-lookup"><span data-stu-id="28aef-153">A <xref:System.Single> value that is converted to a seemingly equivalent <xref:System.Double> often does not equal the <xref:System.Double> value because of differences in precision.</span></span> <span data-ttu-id="28aef-154">В следующем примере результат идентичных операций деления присваивается <xref:System.Double> <xref:System.Single> и значению.</span><span class="sxs-lookup"><span data-stu-id="28aef-154">In the following example, the result of identical division operations is assigned to a <xref:System.Double> and a <xref:System.Single> value.</span></span> <span data-ttu-id="28aef-155">После приведения <xref:System.Double>значенияктипу, сравнение двух значений показывает, что они не равны. <xref:System.Single></span><span class="sxs-lookup"><span data-stu-id="28aef-155">After the <xref:System.Single> value is cast to a <xref:System.Double>, a comparison of the two values shows that they are unequal.</span></span>  
  
     [!code-csharp[System.Double.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist1.cs#5)]
     [!code-vb[System.Double.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist1.vb#5)]  
  
     <span data-ttu-id="28aef-156">Чтобы избежать этой проблемы, используйте либо <xref:System.Double> вместо <xref:System.Single> <xref:System.Math.Round%2A> типа данных, либо используйте метод, чтобы оба значения имели одинаковую точность.</span><span class="sxs-lookup"><span data-stu-id="28aef-156">To avoid this problem, use either the <xref:System.Double> in place of the <xref:System.Single> data type, or use the <xref:System.Math.Round%2A> method so that both values have the same precision.</span></span>  
  
 <span data-ttu-id="28aef-157">Кроме того, результат арифметических операций и операции присваивания <xref:System.Double> со значениями могут немного отличаться от платформы из-за потери точности <xref:System.Double> типа.</span><span class="sxs-lookup"><span data-stu-id="28aef-157">In addition, the result of arithmetic and assignment operations with <xref:System.Double> values may differ slightly by platform because of the loss of precision of the <xref:System.Double> type.</span></span> <span data-ttu-id="28aef-158">Например, результат присваивания литерального <xref:System.Double> значения может отличаться в 32-разрядной и 64-разрядной версиях .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="28aef-158">For example, the result of assigning a literal <xref:System.Double> value may differ in the 32-bit and 64-bit versions of the .NET Framework.</span></span> <span data-ttu-id="28aef-159">В следующем примере демонстрируется это различие, когда литеральное значение-4.42330604244772 e-305 и переменная со значением-4.42330604244772 e-305 присваивается <xref:System.Double> переменной.</span><span class="sxs-lookup"><span data-stu-id="28aef-159">The following example illustrates this difference when the literal value -4.42330604244772E-305 and a variable whose value is -4.42330604244772E-305 are assigned to a <xref:System.Double> variable.</span></span> <span data-ttu-id="28aef-160">Обратите внимание, что в <xref:System.Double.Parse%28System.String%29> этом случае результат метода не страдает от потери точности.</span><span class="sxs-lookup"><span data-stu-id="28aef-160">Note that the result of the <xref:System.Double.Parse%28System.String%29> method in this case does not suffer from a loss of precision.</span></span>  
  
 [!code-csharp[System.Double.Class.Precision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.class.precision/cs/precision1.cs#1)]
 [!code-vb[System.Double.Class.Precision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.class.precision/vb/precision1.vb#1)]  
  
<a name="Equality"></a>   
## <a name="testing-for-equality"></a><span data-ttu-id="28aef-161">Проверка на равенство</span><span class="sxs-lookup"><span data-stu-id="28aef-161">Testing for Equality</span></span>  
 <span data-ttu-id="28aef-162">Чтобы считаться равными, <xref:System.Double> два значения должны представлять одинаковые значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-162">To be considered equal, two <xref:System.Double> values must represent identical values.</span></span> <span data-ttu-id="28aef-163">Однако из-за различий в точности между значениями или из-за потери точности на одно или оба значения значения с плавающей запятой, которые должны быть одинаковыми, часто становятся неравными из-за различий в их минимально значащих цифрах.</span><span class="sxs-lookup"><span data-stu-id="28aef-163">However, because of differences in precision between values, or because of a loss of precision by one or both values, floating-point values that are expected to be identical often turn out to be unequal because of differences in their least significant digits.</span></span> <span data-ttu-id="28aef-164">В результате вызовы <xref:System.Double.Equals%2A> метода для определения того, равны ли два значения, или вызовы <xref:System.Double.CompareTo%2A> метода для определения связи между двумя <xref:System.Double> значениями, часто дают непредвиденные результаты.</span><span class="sxs-lookup"><span data-stu-id="28aef-164">As a result, calls to the <xref:System.Double.Equals%2A> method to determine whether two values are equal, or calls to the <xref:System.Double.CompareTo%2A> method to determine the relationship between two <xref:System.Double> values, often yield unexpected results.</span></span> <span data-ttu-id="28aef-165">Это очевидно в следующем примере, где два <xref:System.Double> очевидных значения могут быть неравными, так как первая имеет 15 разрядов точности, а вторая — 17.</span><span class="sxs-lookup"><span data-stu-id="28aef-165">This is evident in the following example, where two apparently equal <xref:System.Double> values turn out to be unequal because the first has 15 digits of precision, while the second has 17.</span></span>  
  
 [!code-csharp[System.Double.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison1.cs#9)]
 [!code-vb[System.Double.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison1.vb#9)]  
  
 <span data-ttu-id="28aef-166">Вычисляемые значения, которые следуют разным путям кода и управляются разными способами, часто не считаются равными.</span><span class="sxs-lookup"><span data-stu-id="28aef-166">Calculated values that follow different code paths and that are manipulated in different ways often prove to be unequal.</span></span> <span data-ttu-id="28aef-167">В следующем примере одно <xref:System.Double> значение помещается в квадрат, а затем вычисляется квадратный корень для восстановления исходного значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-167">In the following example, one <xref:System.Double> value is squared, and then the square root is calculated to restore the original value.</span></span> <span data-ttu-id="28aef-168">Вторая <xref:System.Double> умножается на 3,51 и в квадрате, прежде чем квадратный корень результата делится на 3,51 для восстановления исходного значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-168">A second <xref:System.Double> is multiplied by 3.51 and squared before the square root of the result is divided by 3.51 to restore the original value.</span></span> <span data-ttu-id="28aef-169">Несмотря на то, что два значения выглядят одинаковыми, вызов <xref:System.Double.Equals%28System.Double%29> метода указывает, что они не равны.</span><span class="sxs-lookup"><span data-stu-id="28aef-169">Although the two values appear to be identical, a call to the <xref:System.Double.Equals%28System.Double%29> method indicates that they are not equal.</span></span> <span data-ttu-id="28aef-170">Использование строки стандартного формата "R" для возврата результирующей строки, отображающей все значащие цифры каждого значения типа Double, показывает, что второе значение .0000000000001 меньше первого.</span><span class="sxs-lookup"><span data-stu-id="28aef-170">Using the "R" standard format string to return a result string that displays all the significant digits of each Double value shows that the second value is .0000000000001 less than the first.</span></span>  
  
 [!code-csharp[System.Double.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison2.cs#10)]
 [!code-vb[System.Double.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison2.vb#10)]  
  
 <span data-ttu-id="28aef-171">В случаях, когда вероятность потери точности может повлиять на результат сравнения, можно принять любые из следующих альтернатив для вызова <xref:System.Double.Equals%2A> метода или: <xref:System.Double.CompareTo%2A></span><span class="sxs-lookup"><span data-stu-id="28aef-171">In cases where a loss of precision is likely to affect the result of a comparison, you can adopt any of the following alternatives to calling the <xref:System.Double.Equals%2A> or <xref:System.Double.CompareTo%2A> method:</span></span>  
  
-   <span data-ttu-id="28aef-172">Вызовите <xref:System.Math.Round%2A?displayProperty=nameWithType> метод, чтобы убедиться, что оба значения имеют одинаковую точность.</span><span class="sxs-lookup"><span data-stu-id="28aef-172">Call the <xref:System.Math.Round%2A?displayProperty=nameWithType> method to ensure that both values have the same precision.</span></span> <span data-ttu-id="28aef-173">Следующий пример изменяет предыдущий пример, чтобы использовать этот подход, чтобы два дробных значения были эквивалентными.</span><span class="sxs-lookup"><span data-stu-id="28aef-173">The following example modifies a previous example to use this approach so that two fractional values are equivalent.</span></span>  
  
     [!code-csharp[System.Double.Structure#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison3.cs#11)]
     [!code-vb[System.Double.Structure#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison3.vb#11)]  
  
     <span data-ttu-id="28aef-174">Однако обратите внимание, что проблема точности по-прежнему применима к округлению средних значений.</span><span class="sxs-lookup"><span data-stu-id="28aef-174">Note, though, that the problem of precision still applies to rounding of midpoint values.</span></span> <span data-ttu-id="28aef-175">Дополнительные сведения см. в описании метода <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28aef-175">For more information, see the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="28aef-176">Проверка на приблизительный равенство, а не на равенство.</span><span class="sxs-lookup"><span data-stu-id="28aef-176">Test for approximate equality rather than equality.</span></span> <span data-ttu-id="28aef-177">Для этого необходимо определить абсолютную величину, с которой два значения могут различаться, но по-прежнему равны, или определить относительный объем, на который меньшее значение может отличаться от большего.</span><span class="sxs-lookup"><span data-stu-id="28aef-177">This requires that you define either an absolute amount by which the two values can differ but still be equal, or that you define a relative amount by which the smaller value can diverge from the larger value.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="28aef-178"><xref:System.Double.Epsilon?displayProperty=nameWithType>иногда используется в качестве абсолютной меры расстояния между двумя <xref:System.Double> значениями при проверке на равенство.</span><span class="sxs-lookup"><span data-stu-id="28aef-178"><xref:System.Double.Epsilon?displayProperty=nameWithType> is sometimes used as an absolute measure of the distance between two <xref:System.Double> values when testing for equality.</span></span>  <span data-ttu-id="28aef-179">Однако измеряет наименьшее возможное значение, которое можно добавить или вычесть из <xref:System.Double> , значение которого равно нулю. <xref:System.Double.Epsilon?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="28aef-179">However, <xref:System.Double.Epsilon?displayProperty=nameWithType> measures the smallest possible value that can be added to, or subtracted from, a <xref:System.Double> whose value is zero.</span></span> <span data-ttu-id="28aef-180">Для большинства положительных и <xref:System.Double> отрицательных значений <xref:System.Double.Epsilon?displayProperty=nameWithType> значение слишком мало для обнаружения.</span><span class="sxs-lookup"><span data-stu-id="28aef-180">For most positive and negative <xref:System.Double> values, the value of <xref:System.Double.Epsilon?displayProperty=nameWithType> is too small to be detected.</span></span> <span data-ttu-id="28aef-181">Таким образом, за исключением нулевых значений, не рекомендуется использовать его в тестах на равенство.</span><span class="sxs-lookup"><span data-stu-id="28aef-181">Therefore, except for values that are zero, we do not recommend its use in tests for equality.</span></span>  
  
     <span data-ttu-id="28aef-182">В следующем примере используется второй подход для определения `IsApproximatelyEqual` метода, который проверяет относительное различие между двумя значениями.</span><span class="sxs-lookup"><span data-stu-id="28aef-182">The following example uses the latter approach to define an `IsApproximatelyEqual` method that tests the relative difference between two values.</span></span> <span data-ttu-id="28aef-183">Он также отличается от результата вызовов `IsApproximatelyEqual` метода <xref:System.Double.Equals%28System.Double%29> и метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-183">It also contrasts the result of calls to the `IsApproximatelyEqual` method and the <xref:System.Double.Equals%28System.Double%29> method.</span></span>  
  
     [!code-csharp[System.Double.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/comparison4.cs#12)]
     [!code-vb[System.Double.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/comparison4.vb#12)]  
  
<a name="Exceptions"></a>   
## <a name="floating-point-values-and-exceptions"></a><span data-ttu-id="28aef-184">Значения и исключения с плавающей запятой</span><span class="sxs-lookup"><span data-stu-id="28aef-184">Floating-Point Values and Exceptions</span></span>  
 <span data-ttu-id="28aef-185">В отличие от операций с целочисленными типами, которые создают исключения в случае переполнения или недопустимых операций, таких как деление на ноль, операции с значениями с плавающей запятой не создают исключения.</span><span class="sxs-lookup"><span data-stu-id="28aef-185">Unlike operations with integral types, which throw exceptions in cases of overflow or illegal operations such as division by zero, operations with floating-point values do not throw exceptions.</span></span> <span data-ttu-id="28aef-186">Вместо этого в исключительных ситуациях результат операции с плавающей запятой равен нулю, плюс бесконечность, отрицательная бесконечность или не является числом (NaN):</span><span class="sxs-lookup"><span data-stu-id="28aef-186">Instead, in exceptional situations, the result of a floating-point operation is zero, positive infinity, negative infinity, or not a number (NaN):</span></span>  
  
-   <span data-ttu-id="28aef-187">Если результат операции с плавающей запятой слишком мал для конечного формата, результат равен нулю.</span><span class="sxs-lookup"><span data-stu-id="28aef-187">If the result of a floating-point operation is too small for the destination format, the result is zero.</span></span> <span data-ttu-id="28aef-188">Это может произойти при умножении двух очень маленьких чисел, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-188">This can occur when two very small numbers are multiplied, as the following example shows.</span></span>  
  
     [!code-csharp[System.Double.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/exceptional1.cs#1)]
     [!code-vb[System.Double.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/exceptional1.vb#1)]  
  
-   <span data-ttu-id="28aef-189">Если величина результата операции с плавающей запятой превышает диапазон формата назначения, результатом операции будет <xref:System.Double.PositiveInfinity> или <xref:System.Double.NegativeInfinity>, в зависимости от знака результата.</span><span class="sxs-lookup"><span data-stu-id="28aef-189">If the magnitude of the result of a floating-point operation exceeds the range of the destination format, the result of the operation is <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>, as appropriate for the sign of the result.</span></span> <span data-ttu-id="28aef-190">Результатом <xref:System.Double.MaxValue?displayProperty=nameWithType> операции, которая переполняется, является <xref:System.Double.PositiveInfinity>, а результатом <xref:System.Double.MinValue?displayProperty=nameWithType> операции, которая переполняется, является <xref:System.Double.NegativeInfinity>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-190">The result of an operation that overflows <xref:System.Double.MaxValue?displayProperty=nameWithType> is <xref:System.Double.PositiveInfinity>, and the result of an operation that overflows <xref:System.Double.MinValue?displayProperty=nameWithType> is <xref:System.Double.NegativeInfinity>, as the following example shows.</span></span>  
  
     [!code-csharp[System.Double.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/exceptional2.cs#2)]
     [!code-vb[System.Double.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/exceptional2.vb#2)]  
  
     <span data-ttu-id="28aef-191"><xref:System.Double.PositiveInfinity>также результаты из деления на ноль с положительным делимым и <xref:System.Double.NegativeInfinity> результатом деления на ноль с отрицательным делимым.</span><span class="sxs-lookup"><span data-stu-id="28aef-191"><xref:System.Double.PositiveInfinity> also results from a division by zero with a positive dividend, and <xref:System.Double.NegativeInfinity> results from a division by zero with a negative dividend.</span></span>  
  
-   <span data-ttu-id="28aef-192">Если операция с плавающей запятой является недопустимой, результатом операции будет <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="28aef-192">If a floating-point operation is invalid, the result of the operation is <xref:System.Double.NaN>.</span></span> <span data-ttu-id="28aef-193">Например, <xref:System.Double.NaN> результаты выполнения следующих операций:</span><span class="sxs-lookup"><span data-stu-id="28aef-193">For example, <xref:System.Double.NaN> results from the following operations:</span></span>  
  
    -   <span data-ttu-id="28aef-194">Деление на ноль с делимым на ноль.</span><span class="sxs-lookup"><span data-stu-id="28aef-194">Division by zero with a dividend of zero.</span></span> <span data-ttu-id="28aef-195">Обратите внимание, что другие варианты деления на ноль приводят <xref:System.Double.NegativeInfinity>к одному <xref:System.Double.PositiveInfinity> или.</span><span class="sxs-lookup"><span data-stu-id="28aef-195">Note that other cases of division by zero result in either <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>.</span></span>  
  
-   <span data-ttu-id="28aef-196">Любая операция с плавающей запятой с недопустимым входом.</span><span class="sxs-lookup"><span data-stu-id="28aef-196">Any floating-point operation with an invalid input.</span></span> <span data-ttu-id="28aef-197">Например, вызов <xref:System.Math.Sqrt%2A?displayProperty=nameWithType> метода с отрицательным значением возвращает <xref:System.Double.NaN> <xref:System.Math.Acos%2A?displayProperty=nameWithType> , как и вызов метода со значением, которое больше одного или меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="28aef-197">For example, calling the <xref:System.Math.Sqrt%2A?displayProperty=nameWithType> method with a negative value returns <xref:System.Double.NaN>, as does calling the <xref:System.Math.Acos%2A?displayProperty=nameWithType> method with a value that is greater than one or less than negative one.</span></span>  
  
-   <span data-ttu-id="28aef-198">Любая операция с аргументом, значение которого <xref:System.Double.NaN?displayProperty=nameWithType>равно.</span><span class="sxs-lookup"><span data-stu-id="28aef-198">Any operation with an argument whose value is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
<a name="Conversions"></a>   
## <a name="type-conversions-and-the-double-structure"></a><span data-ttu-id="28aef-199">Преобразования типов и двойная структура</span><span class="sxs-lookup"><span data-stu-id="28aef-199">Type conversions and the Double structure</span></span>  
 <span data-ttu-id="28aef-200">В <xref:System.Double> структуре не определены явные или неявные операторы преобразования. вместо этого преобразования реализуются компилятором.</span><span class="sxs-lookup"><span data-stu-id="28aef-200">The <xref:System.Double> structure does not define any explicit or implicit conversion operators; instead, conversions are implemented by the compiler.</span></span>  
  
 <span data-ttu-id="28aef-201">Преобразование значения любого примитивного числового типа <xref:System.Double> в является расширяющим преобразованием и, следовательно, не требует явного приведения или вызова метода преобразования, если только компилятор явно не требует его.</span><span class="sxs-lookup"><span data-stu-id="28aef-201">The conversion of the value of any primitive numeric type to a <xref:System.Double> is a widening conversion and therefore does not require an explicit cast operator or call to a conversion method unless a compiler explicitly requires it.</span></span> <span data-ttu-id="28aef-202">Например, C# компилятор требует оператора приведения для преобразования из <xref:System.Decimal> в <xref:System.Double>, а Visual Basic компилятора — нет.</span><span class="sxs-lookup"><span data-stu-id="28aef-202">For example, the C# compiler requires a casting operator for conversions from <xref:System.Decimal> to <xref:System.Double>, while the Visual Basic compiler does not.</span></span> <span data-ttu-id="28aef-203">В следующем примере минимальное или максимальное значение других примитивных числовых типов <xref:System.Double>преобразуется в.</span><span class="sxs-lookup"><span data-stu-id="28aef-203">The following example converts the minimum or maximum value of other primitive numeric types to a <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Double.Structure#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/convert1.cs#20)]
 [!code-vb[System.Double.Structure#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/convert1.vb#20)]  
  
 <span data-ttu-id="28aef-204">Кроме <xref:System.Single> того, <xref:System.Single.NaN?displayProperty=nameWithType> <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>значения, и <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> переполняются<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>в, и соответственно. <xref:System.Double.NaN?displayProperty=nameWithType> <xref:System.Single.PositiveInfinity?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="28aef-204">In addition, the <xref:System.Single> values <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> covert to <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="28aef-205">Обратите внимание, что преобразование значения некоторых числовых типов в <xref:System.Double> значение может привести к утрате точности.</span><span class="sxs-lookup"><span data-stu-id="28aef-205">Note that the conversion of the value of some numeric types to a <xref:System.Double> value can involve a loss of precision.</span></span> <span data-ttu-id="28aef-206">Как показано в примере <xref:System.Decimal>, возможна утрата точности при преобразовании значений <xref:System.Single>, <xref:System.Int64>, и <xref:System.UInt64> в <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-206">As the example illustrates, a loss of precision is possible when converting <xref:System.Decimal>, <xref:System.Int64>, <xref:System.Single>, and <xref:System.UInt64> values to <xref:System.Double> values.</span></span>  
  
 <span data-ttu-id="28aef-207">Преобразование <xref:System.Double> значения в значение любого другого числового типа данных-примитива является узким преобразованием и требует оператора приведения (in C#), метода преобразования (в Visual Basic) или вызова <xref:System.Convert> метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-207">The conversion of a <xref:System.Double> value to a value of any other primitive numeric data type is a narrowing conversion and requires a cast operator (in C#), a conversion method (in Visual Basic), or a call to a <xref:System.Convert> method.</span></span> <span data-ttu-id="28aef-208">Значения, находящиеся за пределами диапазона целевого типа данных, определяемые свойствами `MinValue` и `MaxValue` свойств целевого типа, ведут себя так, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="28aef-208">Values that are outside the range of the target data type, which are defined by the target type's `MinValue` and `MaxValue` properties, behave as shown in the following table.</span></span>  
  
|<span data-ttu-id="28aef-209">Тип результирующего значения</span><span class="sxs-lookup"><span data-stu-id="28aef-209">Target type</span></span>|<span data-ttu-id="28aef-210">Результат</span><span class="sxs-lookup"><span data-stu-id="28aef-210">Result</span></span>|  
|-----------------|------------|  
|<span data-ttu-id="28aef-211">Любой целочисленный тип</span><span class="sxs-lookup"><span data-stu-id="28aef-211">Any integral type</span></span>|<span data-ttu-id="28aef-212"><xref:System.OverflowException> Исключение, если преобразование происходит в проверяемом контексте.</span><span class="sxs-lookup"><span data-stu-id="28aef-212">An <xref:System.OverflowException> exception if the conversion occurs in a checked context.</span></span><br /><br /> <span data-ttu-id="28aef-213">Если преобразование происходит в непроверяемом контексте (по умолчанию в C#), операция преобразования выполняется успешно, но значение переполняется.</span><span class="sxs-lookup"><span data-stu-id="28aef-213">If the conversion occurs in an unchecked context (the default in C#), the conversion operation succeeds but the value overflows.</span></span>|  
|<xref:System.Decimal>|<span data-ttu-id="28aef-214">Исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="28aef-214">An <xref:System.OverflowException> exception.</span></span>|  
|<xref:System.Single>|<span data-ttu-id="28aef-215"><xref:System.Single.NegativeInfinity?displayProperty=nameWithType>для отрицательных значений.</span><span class="sxs-lookup"><span data-stu-id="28aef-215"><xref:System.Single.NegativeInfinity?displayProperty=nameWithType> for negative values.</span></span><br /><br /> <span data-ttu-id="28aef-216"><xref:System.Single.PositiveInfinity?displayProperty=nameWithType>для положительных значений.</span><span class="sxs-lookup"><span data-stu-id="28aef-216"><xref:System.Single.PositiveInfinity?displayProperty=nameWithType> for positive values.</span></span>|  
  
 <span data-ttu-id="28aef-217">Кроме <xref:System.Double.NaN?displayProperty=nameWithType> того<xref:System.Double.PositiveInfinity?displayProperty=nameWithType> <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> ,, и вызывают для преобразования в целые числа в проверяемом контексте, но эти значения переполняются при преобразовании в целые числа в непроверяемом контексте. <xref:System.OverflowException></span><span class="sxs-lookup"><span data-stu-id="28aef-217">In addition, <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> throw an <xref:System.OverflowException> for conversions to integers in a checked context, but these values overflow when converted to integers in an unchecked context.</span></span> <span data-ttu-id="28aef-218">Для преобразований <xref:System.Decimal>они всегда <xref:System.OverflowException>создают исключение.</span><span class="sxs-lookup"><span data-stu-id="28aef-218">For conversions to <xref:System.Decimal>, they always throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="28aef-219">Для преобразований <xref:System.Single>они преобразуют в <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>и <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>соответственно.</span><span class="sxs-lookup"><span data-stu-id="28aef-219">For conversions to <xref:System.Single>, they convert to <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="28aef-220">Обратите внимание, что при преобразовании <xref:System.Double> значения в другой числовой тип может произойти утрата точности.</span><span class="sxs-lookup"><span data-stu-id="28aef-220">Note that a loss of precision may result from converting a <xref:System.Double> value to another numeric type.</span></span> <span data-ttu-id="28aef-221">В случае преобразования нецелочисленных <xref:System.Double> значений, как показано в выходных данных примера, дробный компонент теряется, <xref:System.Double> если значение округляется (как в Visual Basic) или усекается (как в C#).</span><span class="sxs-lookup"><span data-stu-id="28aef-221">In the case of converting non-integral <xref:System.Double> values, as the output from the example shows, the fractional component is lost when the <xref:System.Double> value is either rounded (as in Visual Basic) or truncated (as in C#).</span></span> <span data-ttu-id="28aef-222">Для преобразований <xref:System.Decimal> в <xref:System.Single> значения <xref:System.Double> и значение может не иметь точного представления в целевом типе данных.</span><span class="sxs-lookup"><span data-stu-id="28aef-222">For conversions to <xref:System.Decimal> and <xref:System.Single> values, the <xref:System.Double> value may not have a precise representation in the target data type.</span></span>  
  
 <span data-ttu-id="28aef-223">В следующем примере число <xref:System.Double> значений преобразуется в несколько других числовых типов.</span><span class="sxs-lookup"><span data-stu-id="28aef-223">The following example converts a number of <xref:System.Double> values to several other numeric types.</span></span> <span data-ttu-id="28aef-224">Преобразования выполняются в проверяемом контексте в Visual Basic (по умолчанию) и в C# (из-за ключевого слова [checked](~/docs/csharp/language-reference/keywords/checked.md) ).</span><span class="sxs-lookup"><span data-stu-id="28aef-224">The conversions occur in a checked context in Visual Basic (the default) and in C# (because of the [checked](~/docs/csharp/language-reference/keywords/checked.md) keyword).</span></span> <span data-ttu-id="28aef-225">Выходные данные в примере показывают результат для преобразований в проверяемом непроверяемом контексте.</span><span class="sxs-lookup"><span data-stu-id="28aef-225">The output from the example shows the result for conversions in both a checked an unchecked context.</span></span> <span data-ttu-id="28aef-226">Можно выполнять преобразования в непроверенном контексте в Visual Basic путем компиляции с `/removeintchecks+` переключателем компилятора и в C# , заменив `checked` инструкцию.</span><span class="sxs-lookup"><span data-stu-id="28aef-226">You can perform conversions in an unchecked context in Visual Basic by compiling with the `/removeintchecks+` compiler switch and in C# by commenting out the `checked` statement.</span></span>  
  
 [!code-csharp[System.Double.Structure#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/convert2.cs#21)]
 [!code-vb[System.Double.Structure#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/convert2.vb#21)]  
  
 <span data-ttu-id="28aef-227">Дополнительные сведения о преобразовании числовых типов см. в разделе [Преобразование типов в](~/docs/standard/base-types/type-conversion.md) таблицах .NET Framework и [преобразования типов](~/docs/standard/base-types/conversion-tables.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-227">For more information on the conversion of numeric types, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md) and [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md).</span></span>  
  
<a name="Functionality"></a>   
## <a name="floating-point-functionality"></a><span data-ttu-id="28aef-228">Функция вычислений с плавающей запятой</span><span class="sxs-lookup"><span data-stu-id="28aef-228">Floating-Point Functionality</span></span>  
 <span data-ttu-id="28aef-229"><xref:System.Double> Структура и связанные типы предоставляют методы для выполнения операций в следующих областях:</span><span class="sxs-lookup"><span data-stu-id="28aef-229">The <xref:System.Double> structure and related types provide methods to perform operations in the following areas:</span></span>  
  
-   <span data-ttu-id="28aef-230">**Сравнение значений**.</span><span class="sxs-lookup"><span data-stu-id="28aef-230">**Comparison of values**.</span></span> <span data-ttu-id="28aef-231">Можно вызвать <xref:System.Double.Equals%2A> метод, чтобы определить, равны ли <xref:System.Double> два значения, или <xref:System.Double.CompareTo%2A> метод для определения связи между двумя значениями.</span><span class="sxs-lookup"><span data-stu-id="28aef-231">You can call the <xref:System.Double.Equals%2A> method to determine whether two <xref:System.Double> values are equal, or the <xref:System.Double.CompareTo%2A> method to determine the relationship between two values.</span></span>  
  
     <span data-ttu-id="28aef-232"><xref:System.Double> Структура также поддерживает полный набор операторов сравнения.</span><span class="sxs-lookup"><span data-stu-id="28aef-232">The <xref:System.Double> structure also supports a complete set of comparison operators.</span></span> <span data-ttu-id="28aef-233">Например, можно проверить на равенство или неравенство или определить, является ли одно значение больше или равно другому.</span><span class="sxs-lookup"><span data-stu-id="28aef-233">For example, you can test for equality or inequality, or determine whether one value is greater than or equal to another.</span></span> <span data-ttu-id="28aef-234">Если один из операндов является числовым типом <xref:System.Double>, отличным от, то <xref:System.Double> перед выполнением сравнения он преобразуется в.</span><span class="sxs-lookup"><span data-stu-id="28aef-234">If one of the operands is a numeric type other than a <xref:System.Double>, it is converted to a <xref:System.Double> before performing the comparison.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="28aef-235">Из-за различий в точности <xref:System.Double> два значения, которые должны быть равны, могут быть неравными, что влияет на результат сравнения.</span><span class="sxs-lookup"><span data-stu-id="28aef-235">Because of differences in precision, two <xref:System.Double> values that you expect to be equal may turn out to be unequal, which affects the result of the comparison.</span></span> <span data-ttu-id="28aef-236">Дополнительные сведения о сравнении двух <xref:System.Double> значений см. в разделе [Проверка на равенство](#Equality) .</span><span class="sxs-lookup"><span data-stu-id="28aef-236">See the [Testing for Equality](#Equality) section for more information about comparing two <xref:System.Double> values.</span></span>  
  
     <span data-ttu-id="28aef-237">Для проверки этих специальных значений <xref:System.Double.IsNaN%2A>можно <xref:System.Double.IsInfinity%2A>также вызвать методы <xref:System.Double.IsNegativeInfinity%2A> ,, <xref:System.Double.IsPositiveInfinity%2A>и.</span><span class="sxs-lookup"><span data-stu-id="28aef-237">You can also call the <xref:System.Double.IsNaN%2A>, <xref:System.Double.IsInfinity%2A>, <xref:System.Double.IsPositiveInfinity%2A>, and <xref:System.Double.IsNegativeInfinity%2A> methods to test for these special values.</span></span>  
  
-   <span data-ttu-id="28aef-238">**Математические операции**.</span><span class="sxs-lookup"><span data-stu-id="28aef-238">**Mathematical operations**.</span></span> <span data-ttu-id="28aef-239">Общие арифметические операции, такие как сложение, вычитание, умножение и деление, реализуются компиляторами языка и инструкциями на языке CIL, а не <xref:System.Double> методами.</span><span class="sxs-lookup"><span data-stu-id="28aef-239">Common arithmetic operations, such as addition, subtraction, multiplication, and division, are implemented by language compilers and Common Intermediate Language (CIL) instructions, rather than by <xref:System.Double> methods.</span></span> <span data-ttu-id="28aef-240">Если один из операндов в математической операции является числовым типом <xref:System.Double>, отличным от, то <xref:System.Double> перед выполнением операции он преобразуется в.</span><span class="sxs-lookup"><span data-stu-id="28aef-240">If one of the operands in a mathematical operation is a numeric type other than a <xref:System.Double>, it is converted to a <xref:System.Double> before performing the operation.</span></span> <span data-ttu-id="28aef-241">Результат операции также <xref:System.Double> является значением.</span><span class="sxs-lookup"><span data-stu-id="28aef-241">The result of the operation is also a <xref:System.Double> value.</span></span>  
  
     <span data-ttu-id="28aef-242">Другие математические операции можно выполнить, `static` вызвав`Shared` методы (в <xref:System.Math?displayProperty=nameWithType> Visual Basic) в классе.</span><span class="sxs-lookup"><span data-stu-id="28aef-242">Other mathematical operations can be performed by calling `static` (`Shared` in Visual Basic) methods in the <xref:System.Math?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="28aef-243">Он содержит дополнительные методы, обычно используемые для арифметических операций <xref:System.Math.Abs%2A?displayProperty=nameWithType>( <xref:System.Math.Sign%2A?displayProperty=nameWithType>например, <xref:System.Math.Sqrt%2A?displayProperty=nameWithType>, и), Geometry ( <xref:System.Math.Cos%2A?displayProperty=nameWithType> например <xref:System.Math.Sin%2A?displayProperty=nameWithType>, и) и математического анализа за (например <xref:System.Math.Log%2A?displayProperty=nameWithType>,).</span><span class="sxs-lookup"><span data-stu-id="28aef-243">It includes additional methods commonly used for arithmetic (such as <xref:System.Math.Abs%2A?displayProperty=nameWithType>, <xref:System.Math.Sign%2A?displayProperty=nameWithType>, and <xref:System.Math.Sqrt%2A?displayProperty=nameWithType>), geometry (such as <xref:System.Math.Cos%2A?displayProperty=nameWithType> and <xref:System.Math.Sin%2A?displayProperty=nameWithType>), and calculus (such as <xref:System.Math.Log%2A?displayProperty=nameWithType>).</span></span>  
  
     <span data-ttu-id="28aef-244">Можно также манипулировать отдельными битами <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-244">You can also manipulate the individual bits in a <xref:System.Double> value.</span></span> <span data-ttu-id="28aef-245">Метод сохраняет битовый шаблон значения в 64-разрядном целом число. <xref:System.Double> <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="28aef-245">The <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType> method preserves a <xref:System.Double> value's bit pattern in a 64-bit integer.</span></span> <span data-ttu-id="28aef-246"><xref:System.BitConverter.GetBytes%28System.Double%29?displayProperty=nameWithType> Метод возвращает свой битовый шаблон в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="28aef-246">The <xref:System.BitConverter.GetBytes%28System.Double%29?displayProperty=nameWithType> method returns its bit pattern in a byte array.</span></span>  
  
-   <span data-ttu-id="28aef-247">**Округление**.</span><span class="sxs-lookup"><span data-stu-id="28aef-247">**Rounding**.</span></span> <span data-ttu-id="28aef-248">Округление часто используется как метод снижения влияния различий между значениями, вызванными проблемами представления и точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-248">Rounding is often used as a technique for reducing the impact of differences between values caused by problems of floating-point representation and precision.</span></span> <span data-ttu-id="28aef-249">Можно округлить <xref:System.Double> значение, <xref:System.Math.Round%2A?displayProperty=nameWithType> вызвав метод.</span><span class="sxs-lookup"><span data-stu-id="28aef-249">You can round a <xref:System.Double> value by calling the <xref:System.Math.Round%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="28aef-250">**Форматирование**.</span><span class="sxs-lookup"><span data-stu-id="28aef-250">**Formatting**.</span></span> <span data-ttu-id="28aef-251"><xref:System.Double> Значение можно преобразовать в строковое представление, <xref:System.Double.ToString%2A> вызвав метод или воспользовавшись функцией составного форматирования.</span><span class="sxs-lookup"><span data-stu-id="28aef-251">You can convert a <xref:System.Double> value to its string representation by calling the <xref:System.Double.ToString%2A> method or by using the composite formatting feature.</span></span> <span data-ttu-id="28aef-252">Сведения о том, как строки формата управляют строковым представлением значений с плавающей запятой, см. в разделах [стандартные строки числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md) .</span><span class="sxs-lookup"><span data-stu-id="28aef-252">For information about how format strings control the string representation of floating-point values, see the [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md) topics.</span></span>  
  
-   <span data-ttu-id="28aef-253">**Синтаксический анализ строк**.</span><span class="sxs-lookup"><span data-stu-id="28aef-253">**Parsing strings**.</span></span> <span data-ttu-id="28aef-254">Можно преобразовать строковое представление значения с плавающей запятой в <xref:System.Double> значение, вызвав либо <xref:System.Double.TryParse%2A> метод, <xref:System.Double.Parse%2A> либо.</span><span class="sxs-lookup"><span data-stu-id="28aef-254">You can convert the string representation of a floating-point value to a <xref:System.Double> value by calling either the <xref:System.Double.Parse%2A> or <xref:System.Double.TryParse%2A> method.</span></span> <span data-ttu-id="28aef-255">Если операция синтаксического анализа завершается <xref:System.Double.Parse%2A> неудачно, метод создает исключение, <xref:System.Double.TryParse%2A> в то `false`время как метод возвращает.</span><span class="sxs-lookup"><span data-stu-id="28aef-255">If the parse operation fails, the <xref:System.Double.Parse%2A> method throws an exception, whereas the <xref:System.Double.TryParse%2A> method returns `false`.</span></span>  
  
-   <span data-ttu-id="28aef-256">**Преобразование типов**.</span><span class="sxs-lookup"><span data-stu-id="28aef-256">**Type conversion**.</span></span> <span data-ttu-id="28aef-257">Структура предоставляет явную реализацию интерфейса <xref:System.IConvertible> для интерфейса, который поддерживает преобразование между любыми двумя стандартными .NET Frameworkными типами данных. <xref:System.Double></span><span class="sxs-lookup"><span data-stu-id="28aef-257">The <xref:System.Double> structure provides an explicit interface implementation for the <xref:System.IConvertible> interface, which supports conversion between any two standard .NET Framework data types.</span></span> <span data-ttu-id="28aef-258">Языковые компиляторы также поддерживают неявное преобразование значений всех других стандартных числовых типов в <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-258">Language compilers also support the implicit conversion of values of all other standard numeric types to <xref:System.Double> values.</span></span> <span data-ttu-id="28aef-259">Преобразование значения любого стандартного числового типа в <xref:System.Double> является расширяющим преобразованием и не требует использования пользователем оператора приведения или метода преобразования.</span><span class="sxs-lookup"><span data-stu-id="28aef-259">Conversion of a value of any standard numeric type to a <xref:System.Double> is a widening conversion and does not require the user of a casting operator or conversion method,</span></span>  
  
     <span data-ttu-id="28aef-260">Однако преобразование <xref:System.Int64> значений и <xref:System.Single> может привести к утрате точности.</span><span class="sxs-lookup"><span data-stu-id="28aef-260">However, conversion of <xref:System.Int64> and <xref:System.Single> values can involve a loss of precision.</span></span> <span data-ttu-id="28aef-261">В следующей таблице перечислены различия в точности для каждого из этих типов:</span><span class="sxs-lookup"><span data-stu-id="28aef-261">The following table lists the differences in precision for each of these types:</span></span>  
  
    |<span data-ttu-id="28aef-262">Тип</span><span class="sxs-lookup"><span data-stu-id="28aef-262">Type</span></span>|<span data-ttu-id="28aef-263">Максимальная точность</span><span class="sxs-lookup"><span data-stu-id="28aef-263">Maximum precision</span></span>|<span data-ttu-id="28aef-264">Внутренняя точность</span><span class="sxs-lookup"><span data-stu-id="28aef-264">Internal precision</span></span>|  
    |----------|-----------------------|------------------------|  
    |<xref:System.Double>|<span data-ttu-id="28aef-265">15</span><span class="sxs-lookup"><span data-stu-id="28aef-265">15</span></span>|<span data-ttu-id="28aef-266">17</span><span class="sxs-lookup"><span data-stu-id="28aef-266">17</span></span>|  
    |<xref:System.Int64>|<span data-ttu-id="28aef-267">19 десятичных знаков</span><span class="sxs-lookup"><span data-stu-id="28aef-267">19 decimal digits</span></span>|<span data-ttu-id="28aef-268">19 десятичных знаков</span><span class="sxs-lookup"><span data-stu-id="28aef-268">19 decimal digits</span></span>|  
    |<xref:System.Single>|<span data-ttu-id="28aef-269">7 десятичных знаков</span><span class="sxs-lookup"><span data-stu-id="28aef-269">7 decimal digits</span></span>|<span data-ttu-id="28aef-270">9 десятичных знаков</span><span class="sxs-lookup"><span data-stu-id="28aef-270">9 decimal digits</span></span>|  
  
     <span data-ttu-id="28aef-271">Проблема точности чаще всего влияет <xref:System.Single> на значения, которые преобразуются в <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-271">The problem of precision most frequently affects <xref:System.Single> values that are converted to <xref:System.Double> values.</span></span> <span data-ttu-id="28aef-272">В следующем примере два значения, созданные идентичными операциями деления, не равны, так как одно из значений является значением с плавающей запятой одиночной точности, <xref:System.Double>преобразованным в.</span><span class="sxs-lookup"><span data-stu-id="28aef-272">In the following example, two values produced by identical division operations are unequal because one of the values is a single-precision floating point value converted to a <xref:System.Double>.</span></span>  
  
     [!code-csharp[System.Double.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/representation1.cs#3)]
     [!code-vb[System.Double.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/representation1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="28aef-273">В следующем примере кода показано использование <xref:System.Double>:</span><span class="sxs-lookup"><span data-stu-id="28aef-273">The following code example illustrates the use of <xref:System.Double>:</span></span>  
  
 [!code-cpp[Double Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#1)]
 [!code-csharp[Double Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#1)]
 [!code-vb[Double Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="28aef-274">Все члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="28aef-274">All members of this type are thread safe.</span></span> <span data-ttu-id="28aef-275">Члены, которые могут изменить состояние экземпляра, в действительности возвращают новый экземпляр, инициализированный новым значением.</span><span class="sxs-lookup"><span data-stu-id="28aef-275">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="28aef-276">Как с любым другим типом, чтение и запись общей переменной, которая содержит экземпляр этого типа, должны быть защищены блокировкой для обеспечения потокобезопасности.</span><span class="sxs-lookup"><span data-stu-id="28aef-276">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Single" />
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="28aef-277">Пример. Служебная программа форматирования .NET Framework 4</span><span class="sxs-lookup"><span data-stu-id="28aef-277">Sample: .NET Framework 4 Formatting Utility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aef-278">Сравнивает данный экземпляр с указанным объектом или объектом <see cref="T:System.Double" /> и возвращает целое число, указывающее, что значение данного экземпляра меньше, больше или равно значению заданного объекта или объекта <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-278">Compares this instance to a specified object or <see cref="T:System.Double" /> object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or <see cref="T:System.Double" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.CompareTo(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(double value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : double -&gt; int&#xA;override this.CompareTo : double -&gt; int" Usage="double.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="28aef-279">Число двойной точности с плавающей запятой для сравнения.</span><span class="sxs-lookup"><span data-stu-id="28aef-279">A double-precision floating-point number to compare.</span></span></param>
        <summary><span data-ttu-id="28aef-280">Сравнивает данный экземпляр с заданным числом двойной точности с плавающей запятой и возвращает целое число, которое показывает, является ли значение данного экземпляра меньше, больше или равно значению заданного числа двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-280">Compares this instance to a specified double-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="28aef-281">Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-281">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="28aef-282">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="28aef-282">Return Value</span></span> 
 </term><description> <span data-ttu-id="28aef-283">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-283">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="28aef-284">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="28aef-284">Less than zero</span></span> 
 </term><description> <span data-ttu-id="28aef-285">Этот экземпляр меньше параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-285">This instance is less than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="28aef-286">- или -</span><span class="sxs-lookup"><span data-stu-id="28aef-286">-or-</span></span> 
<span data-ttu-id="28aef-287">Данный экземпляр не является числом (<see cref="F:System.Double.NaN" />), а параметр <paramref name="value" /> является.</span><span class="sxs-lookup"><span data-stu-id="28aef-287">This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="28aef-288">Нуль</span><span class="sxs-lookup"><span data-stu-id="28aef-288">Zero</span></span> 
 </term><description> <span data-ttu-id="28aef-289">Этот экземпляр и параметр <paramref name="value" /> равны.</span><span class="sxs-lookup"><span data-stu-id="28aef-289">This instance is equal to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="28aef-290">- или -</span><span class="sxs-lookup"><span data-stu-id="28aef-290">-or-</span></span> 
<span data-ttu-id="28aef-291">И этот экземпляр, и параметр <paramref name="value" /> не являются числами (<see cref="F:System.Double.NaN" />), равны <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-291">Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Double.NaN" />), <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="28aef-292">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="28aef-292">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="28aef-293">Этот экземпляр больше параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-293">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="28aef-294">- или -</span><span class="sxs-lookup"><span data-stu-id="28aef-294">-or-</span></span> 
<span data-ttu-id="28aef-295">Данный экземпляр является числом, а параметр <paramref name="value" /> — нет (<see cref="F:System.Double.NaN" />).</span><span class="sxs-lookup"><span data-stu-id="28aef-295">This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />).</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-296">Значения должны быть одинаковыми, чтобы считаться равными.</span><span class="sxs-lookup"><span data-stu-id="28aef-296">Values must be identical to be considered equal.</span></span> <span data-ttu-id="28aef-297">Особенно если значения с плавающей запятой зависят от нескольких математических операций, обычно они теряют точность и их значения практически идентичны, за исключением их наименьших значащих цифр.</span><span class="sxs-lookup"><span data-stu-id="28aef-297">Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</span></span> <span data-ttu-id="28aef-298">По этой причине возвращаемое значение <xref:System.Double.CompareTo%2A> метода иногда может показаться неожиданным.</span><span class="sxs-lookup"><span data-stu-id="28aef-298">Because of this, the return value of the <xref:System.Double.CompareTo%2A> method at times may seem surprising.</span></span> <span data-ttu-id="28aef-299">Например, умножение на определенное значение, за которым следует деление на одно и то же значение, должно создать исходное значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-299">For example, multiplication by a particular value followed by division by the same value should produce the original value.</span></span> <span data-ttu-id="28aef-300">Однако в следующем примере вычисленное значение оказывается больше, чем исходное значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-300">In the following example, however, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="28aef-301">Отображение всех значащих цифр двух значений с помощью [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) R означает, что вычисленное значение отличается от исходного значения в его минимально значащих цифрах.</span><span class="sxs-lookup"><span data-stu-id="28aef-301">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="28aef-302">Сведения об обработке таких сравнений см. в разделе <xref:System.Double.Equals%28System.Double%29> "Примечания" метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-302">For information on handling such comparisons, see the Remarks section of the <xref:System.Double.Equals%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Double.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.compareto/cs/compareto2.cs#1)]
 [!code-vb[System.Double.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.compareto/vb/compareto2.vb#1)]  
  
 <span data-ttu-id="28aef-303">Этот метод реализует <xref:System.IComparable%601?displayProperty=nameWithType> интерфейс и работает немного лучше, чем метод <xref:System.Double.CompareTo%2A?displayProperty=nameWithType> , поскольку ему `value` не нужно преобразовывать параметр в объект.</span><span class="sxs-lookup"><span data-stu-id="28aef-303">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Double.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="28aef-304">Обратите внимание, что, хотя объект, <xref:System.Double.NaN> значение которого не считается другим объектом, значение которого равно <xref:System.Double.NaN> ( <xref:System.IComparable%601> даже само собой), интерфейс требует, `A.CompareTo(A)` чтобы возвращал ноль.</span><span class="sxs-lookup"><span data-stu-id="28aef-304">Note that, although an object whose value is <xref:System.Double.NaN> is not considered equal to another object whose value is <xref:System.Double.NaN> (even itself), the <xref:System.IComparable%601> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="28aef-305">расширяющие преобразования</span><span class="sxs-lookup"><span data-stu-id="28aef-305">Widening Conversions</span></span>  
 <span data-ttu-id="28aef-306">В зависимости от языка программирования может быть возможным <xref:System.Double.CompareTo%2A> написание метода, где тип параметра имеет меньше разрядов (является более узким), чем тип экземпляра.</span><span class="sxs-lookup"><span data-stu-id="28aef-306">Depending on your programming language, it might be possible to code a <xref:System.Double.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="28aef-307">Это возможно, поскольку некоторые языки программирования выполняют неявное расширяющее преобразование, которое представляет параметр как тип с количеством битов в качестве экземпляра.</span><span class="sxs-lookup"><span data-stu-id="28aef-307">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="28aef-308">Например, предположим, что тип экземпляра — <xref:System.Double> , а тип параметра — <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="28aef-308">For example, suppose the instance type is <xref:System.Double> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="28aef-309">Компилятор Microsoft C# создает инструкции для представления значения параметра в виде <xref:System.Double> объекта <xref:System.Double.CompareTo%28System.Double%29?displayProperty=nameWithType> , а затем создает метод, который сравнивает значения экземпляра и расширенное представление параметра.</span><span class="sxs-lookup"><span data-stu-id="28aef-309">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Double> object, then generates a <xref:System.Double.CompareTo%28System.Double%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="28aef-310">Обратитесь к документации по языку программирования, чтобы определить, выполняет ли компилятор неявное расширяющее преобразование числовых типов.</span><span class="sxs-lookup"><span data-stu-id="28aef-310">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="28aef-311">Дополнительные сведения см. в разделе [таблицы преобразования типов](~/docs/standard/base-types/conversion-tables.md) .</span><span class="sxs-lookup"><span data-stu-id="28aef-311">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="28aef-312">Точность в сравнениях</span><span class="sxs-lookup"><span data-stu-id="28aef-312">Precision in Comparisons</span></span>  
 <span data-ttu-id="28aef-313">Точность чисел с плавающей запятой, превышающих задокументированную точность, зависит от реализации и версии .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="28aef-313">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="28aef-314">Следовательно, сравнение двух определенных чисел может измениться между версиями .NET Framework, так как точность внутреннего представления чисел может измениться.</span><span class="sxs-lookup"><span data-stu-id="28aef-314">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-315">В следующем примере кода показаны универсальные и неуниверсальные версии <xref:System.Double.CompareTo%2A> метода для нескольких ссылочных типов.</span><span class="sxs-lookup"><span data-stu-id="28aef-315">The following code example demonstrates generic and nongeneric versions of the <xref:System.Double.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="double.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="28aef-316">Объект для сравнения или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-316">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="28aef-317">Сравнивает данный экземпляр с указанным объектом и возвращает целое число, которое показывает, является ли значение данного экземпляра меньше, больше или равно значению заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="28aef-317">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="28aef-318">Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-318">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="28aef-319">Значение</span><span class="sxs-lookup"><span data-stu-id="28aef-319">Value</span></span> 
 </term><description> <span data-ttu-id="28aef-320">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-320">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="28aef-321">Отрицательное целое число</span><span class="sxs-lookup"><span data-stu-id="28aef-321">A negative integer</span></span> 
 </term><description> <span data-ttu-id="28aef-322">Этот экземпляр меньше параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-322">This instance is less than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="28aef-323">- или -</span><span class="sxs-lookup"><span data-stu-id="28aef-323">-or-</span></span> 
<span data-ttu-id="28aef-324">Данный экземпляр не является числом (<see cref="F:System.Double.NaN" />), а параметр <paramref name="value" /> является.</span><span class="sxs-lookup"><span data-stu-id="28aef-324">This instance is not a number (<see cref="F:System.Double.NaN" />) and <paramref name="value" /> is a number.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="28aef-325">Нуль</span><span class="sxs-lookup"><span data-stu-id="28aef-325">Zero</span></span> 
 </term><description> <span data-ttu-id="28aef-326">Этот экземпляр и параметр <paramref name="value" /> равны.</span><span class="sxs-lookup"><span data-stu-id="28aef-326">This instance is equal to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="28aef-327">- или -</span><span class="sxs-lookup"><span data-stu-id="28aef-327">-or-</span></span> 
<span data-ttu-id="28aef-328">И данный экземпляр, и <paramref name="value" /> являются <see langword="Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-328">This instance and <paramref name="value" /> are both <see langword="Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" /></span></span></description></item><item><term> <span data-ttu-id="28aef-329">Положительное целое число</span><span class="sxs-lookup"><span data-stu-id="28aef-329">A positive integer</span></span> 
 </term><description> <span data-ttu-id="28aef-330">Этот экземпляр больше параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-330">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="28aef-331">-или-</span><span class="sxs-lookup"><span data-stu-id="28aef-331">-or-</span></span> 
<span data-ttu-id="28aef-332">Данный экземпляр является числом, а параметр <paramref name="value" /> — нет (<see cref="F:System.Double.NaN" />).</span><span class="sxs-lookup"><span data-stu-id="28aef-332">This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Double.NaN" />).</span></span>  
  
<span data-ttu-id="28aef-333">- или -</span><span class="sxs-lookup"><span data-stu-id="28aef-333">-or-</span></span> 
 <span data-ttu-id="28aef-334"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-334"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-335">Параметр должен быть `null` или экземпляром `Double`; в противном случае создается исключение. `value`</span><span class="sxs-lookup"><span data-stu-id="28aef-335">The `value` parameter must be `null` or an instance of `Double`; otherwise, an exception is thrown.</span></span> <span data-ttu-id="28aef-336">Любой экземпляр <xref:System.Double>, независимо от его значения, считается `null`больше.</span><span class="sxs-lookup"><span data-stu-id="28aef-336">Any instance of <xref:System.Double>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="28aef-337">Значения должны быть одинаковыми, чтобы считаться равными.</span><span class="sxs-lookup"><span data-stu-id="28aef-337">Values must be identical to be considered equal.</span></span> <span data-ttu-id="28aef-338">Особенно если значения с плавающей запятой зависят от нескольких математических операций, обычно они теряют точность и их значения практически идентичны, за исключением их наименьших значащих цифр.</span><span class="sxs-lookup"><span data-stu-id="28aef-338">Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</span></span> <span data-ttu-id="28aef-339">По этой причине возвращаемое значение <xref:System.Double.CompareTo%2A> метода иногда может показаться неожиданным.</span><span class="sxs-lookup"><span data-stu-id="28aef-339">Because of this, the return value of the <xref:System.Double.CompareTo%2A> method at times may seem surprising.</span></span> <span data-ttu-id="28aef-340">Например, умножение на определенное значение, за которым следует деление на одно и то же значение, должно создать исходное значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-340">For example, multiplication by a particular value followed by division by the same value should produce the original value.</span></span> <span data-ttu-id="28aef-341">Однако в следующем примере вычисленное значение оказывается больше, чем исходное значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-341">In the following example, however, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="28aef-342">Отображение всех значащих цифр двух значений с помощью [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) R означает, что вычисленное значение отличается от исходного значения в его минимально значащих цифрах.</span><span class="sxs-lookup"><span data-stu-id="28aef-342">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="28aef-343">Сведения об обработке таких сравнений см. в разделе <xref:System.Double.Equals%28System.Double%29> "Примечания" метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-343">For information on handling such comparisons, see the Remarks section of the <xref:System.Double.Equals%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Double.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.compareto/cs/compareto3.cs#2)]
 [!code-vb[System.Double.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.compareto/vb/compareto3.vb#2)]  
  
 <span data-ttu-id="28aef-344">Этот метод реализован для поддержки <xref:System.IComparable> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-344">This method is implemented to support the <xref:System.IComparable> interface.</span></span> <span data-ttu-id="28aef-345">Обратите внимание, что <xref:System.Double.NaN> , хотя не считается равным другому <xref:System.Double.NaN> ( <xref:System.IComparable> даже самому), интерфейс требует, `A.CompareTo(A)` чтобы возвращал ноль.</span><span class="sxs-lookup"><span data-stu-id="28aef-345">Note that, although a <xref:System.Double.NaN> is not considered to be equal to another <xref:System.Double.NaN> (even itself), the <xref:System.IComparable> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="28aef-346">Точность в сравнениях</span><span class="sxs-lookup"><span data-stu-id="28aef-346">Precision in Comparisons</span></span>  
 <span data-ttu-id="28aef-347">Точность чисел с плавающей запятой, превышающих задокументированную точность, зависит от реализации и версии .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="28aef-347">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="28aef-348">Следовательно, сравнение двух определенных чисел может измениться между версиями .NET Framework, так как точность внутреннего представления чисел может измениться.</span><span class="sxs-lookup"><span data-stu-id="28aef-348">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-349">В следующем примере кода показано использование `CompareTo` в `Double`контексте.</span><span class="sxs-lookup"><span data-stu-id="28aef-349">The following code example illustrates the use of `CompareTo` in the context of `Double`.</span></span>  
  
 [!code-cpp[System.Double#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#16)]
 [!code-csharp[System.Double#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#16)]
 [!code-vb[System.Double#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28aef-350"><paramref name="value" /> не является объектом <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-350"><paramref name="value" /> is not a <see cref="T:System.Double" />.</span></span></exception>
        <altmember cref="M:System.Double.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public const double Epsilon = 4.94065645841247E-324;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 Epsilon = float64(4.94065645841247E-324)" />
      <MemberSignature Language="DocId" Value="F:System.Double.Epsilon" />
      <MemberSignature Language="VB.NET" Value="Public Const Epsilon As Double  = 4.94065645841247E-324" />
      <MemberSignature Language="C++ CLI" Value="public: double Epsilon = 4.94065645841247E-324;" />
      <MemberSignature Language="F#" Value="val mutable Epsilon : double" Usage="System.double.Epsilon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>4.94065645841247E-324</MemberValue>
      <Docs>
        <summary><span data-ttu-id="28aef-351">Представляет наименьшее положительное значение <see cref="T:System.Double" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="28aef-351">Represents the smallest positive <see cref="T:System.Double" /> value that is greater than zero.</span></span> <span data-ttu-id="28aef-352">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="28aef-352">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-353">Значение <xref:System.Double.Epsilon> свойства отражает наименьшее положительное <xref:System.Double> значение, значимое в числовых операциях или сравнениях, <xref:System.Double> если значение экземпляра равно нулю.</span><span class="sxs-lookup"><span data-stu-id="28aef-353">The value of the <xref:System.Double.Epsilon> property reflects the smallest positive <xref:System.Double> value that is significant in numeric operations or comparisons when the value of the <xref:System.Double> instance is zero.</span></span> <span data-ttu-id="28aef-354">Например, следующий код показывает, что ноль и <xref:System.Double.Epsilon> считаются неравными значениями, тогда как ноль и половина <xref:System.Double.Epsilon> значения считаются равными.</span><span class="sxs-lookup"><span data-stu-id="28aef-354">For example, the following code shows that zero and <xref:System.Double.Epsilon> are considered to be unequal values, whereas zero and half the value of <xref:System.Double.Epsilon> are considered to be equal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/epsilon.cs#5)]
 [!code-vb[System.Double.Epsilon#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/epsilon.vb#5)]  
  
 <span data-ttu-id="28aef-355">Точнее, формат с плавающей запятой состоит из знака, 52-разрядной мантисса или значащим и 11-разрядной экспоненты.</span><span class="sxs-lookup"><span data-stu-id="28aef-355">More precisely, the floating point format consists of a sign, a 52-bit mantissa or significand, and an 11-bit exponent.</span></span> <span data-ttu-id="28aef-356">Как показано в следующем примере, ноль имеет показатель степени-1022 и мантисса 0.</span><span class="sxs-lookup"><span data-stu-id="28aef-356">As the following example shows, zero has an exponent of -1022 and a mantissa of 0.</span></span> <span data-ttu-id="28aef-357"><xref:System.Double.Epsilon>имеет показатель степени-1022 и мантисса 1.</span><span class="sxs-lookup"><span data-stu-id="28aef-357"><xref:System.Double.Epsilon> has an exponent of -1022 and a mantissa of 1.</span></span> <span data-ttu-id="28aef-358">Это означает, <xref:System.Double.Epsilon> что наименьшее положительное <xref:System.Double> значение больше нуля и представляет наименьшее возможное значение и наименьшее возможное приращение для <xref:System.Double> , степень которого равна-1022.</span><span class="sxs-lookup"><span data-stu-id="28aef-358">This means that <xref:System.Double.Epsilon> is the smallest positive <xref:System.Double> value greater than zero and represents the smallest possible value and the smallest possible increment for a <xref:System.Double> whose exponent is -1022.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/epsilon1.cs#6)]
 [!code-vb[System.Double.Epsilon#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/epsilon1.vb#6)]  
  
 <span data-ttu-id="28aef-359">Однако свойство не является общей мерой точности <xref:System.Double> типа. оно применяется только к <xref:System.Double> экземплярам, имеющим нулевое значение или показатель степени-1022. <xref:System.Double.Epsilon></span><span class="sxs-lookup"><span data-stu-id="28aef-359">However, the <xref:System.Double.Epsilon> property is not a general measure of precision of the <xref:System.Double> type; it applies only to <xref:System.Double> instances that have a value of zero or an exponent of -1022.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28aef-360">Значение <xref:System.Double.Epsilon> свойства не эквивалентно компьютеру Эпсилон, который представляет верхнюю границу относительных ошибок из-за округления в арифметических операциях с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-360">The value of the <xref:System.Double.Epsilon> property is not equivalent to machine epsilon, which represents the upper bound of the relative error due to rounding in floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="28aef-361">Значение этой константы — 4.94065645841247 e-324.</span><span class="sxs-lookup"><span data-stu-id="28aef-361">The value of this constant is 4.94065645841247e-324.</span></span>  
  
 <span data-ttu-id="28aef-362">Два невероятных эквивалентных числа с плавающей запятой могут не сравниваться, так как они имеют различия в крайне значащих цифрах.</span><span class="sxs-lookup"><span data-stu-id="28aef-362">Two apparently equivalent floating-point numbers might not compare equal because of differences in their least significant digits.</span></span> <span data-ttu-id="28aef-363">Например, C# выражение `(double)1/3 == (double)0.33333`не сравнивает равенство, поскольку операция деления в левой части имеет максимальную точность, а константа в правой части является точной только для указанных цифр.</span><span class="sxs-lookup"><span data-stu-id="28aef-363">For example, the C# expression, `(double)1/3 == (double)0.33333`, does not compare equal because the division operation on the left side has maximum precision while the constant on the right side is precise only to the specified digits.</span></span> <span data-ttu-id="28aef-364">Если создать пользовательский алгоритм, определяющий, могут ли два числа с плавающей запятой считаться равными, мы не рекомендуем основывать свой алгоритм на значении <xref:System.Double.Epsilon> константы, чтобы установить допустимое абсолютное поле разности для два значения считаются равными.</span><span class="sxs-lookup"><span data-stu-id="28aef-364">If you create a custom algorithm that determines whether two floating-point numbers can be considered equal, we do not recommend that you base your algorithm on the value of the <xref:System.Double.Epsilon> constant to establish the acceptable absolute margin of difference for the two values to be considered equal.</span></span>  <span data-ttu-id="28aef-365">(Как правило, это поле разности имеет много раз больше <xref:System.Double.Epsilon>, чем.) Дополнительные сведения о сравнении двух значений с плавающей запятой двойной точности см <xref:System.Double> . <xref:System.Double.Equals%28System.Double%29>в разделе и.</span><span class="sxs-lookup"><span data-stu-id="28aef-365">(Typically, that margin of difference is many times greater than <xref:System.Double.Epsilon>.) For information about comparing two double-precision floating-point values, see <xref:System.Double> and <xref:System.Double.Equals%28System.Double%29>.</span></span>  
  
## <a name="platform-notes"></a><span data-ttu-id="28aef-366">Примечания к платформе</span><span class="sxs-lookup"><span data-stu-id="28aef-366">Platform Notes</span></span>  
 <span data-ttu-id="28aef-367">В системах ARM значение <xref:System.Double.Epsilon> константы слишком мало для обнаружения, поэтому оно равно нулю.</span><span class="sxs-lookup"><span data-stu-id="28aef-367">On ARM systems, the value of the <xref:System.Double.Epsilon> constant is too small to be detected, so it equates to zero.</span></span> <span data-ttu-id="28aef-368">Вместо этого можно определить альтернативное значение Эпсилон, равное 2.2250738585072014 E-308.</span><span class="sxs-lookup"><span data-stu-id="28aef-368">You can define an alternative epsilon value that equals 2.2250738585072014E-308 instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aef-369">Возвращает значение, указывающее, представляют ли два экземпляра <see cref="T:System.Double" /> одно и то же значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-369">Returns a value indicating whether two instances of <see cref="T:System.Double" /> represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (double obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(float64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Equals(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(double obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : double -&gt; bool" Usage="double.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="28aef-370">Объект <see cref="T:System.Double" />, сравниваемый с этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="28aef-370">A <see cref="T:System.Double" /> object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="28aef-371">Возвращает значение, позволяющее определить, представляют ли этот экземпляр и заданный объект <see cref="T:System.Double" /> одно и то же значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-371">Returns a value indicating whether this instance and a specified <see cref="T:System.Double" /> object represent the same value.</span></span></summary>
        <returns><span data-ttu-id="28aef-372">Значение <see langword="true" />, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-372"><see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-373">Этот метод реализует <xref:System.IEquatable%601?displayProperty=nameWithType> интерфейс и работает немного лучше, чем <xref:System.Double.Equals%2A> потому, что `obj` не требуется преобразовывать параметр в объект.</span><span class="sxs-lookup"><span data-stu-id="28aef-373">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Double.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="28aef-374">расширяющие преобразования</span><span class="sxs-lookup"><span data-stu-id="28aef-374">Widening Conversions</span></span>  
 <span data-ttu-id="28aef-375">В зависимости от языка программирования может быть возможным <xref:System.Double.Equals%2A> написание метода, где тип параметра имеет меньше разрядов (является более узким), чем тип экземпляра.</span><span class="sxs-lookup"><span data-stu-id="28aef-375">Depending on your programming language, it might be possible to code a <xref:System.Double.Equals%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="28aef-376">Это возможно, поскольку некоторые языки программирования выполняют неявное расширяющее преобразование, которое представляет параметр как тип с количеством битов в качестве экземпляра.</span><span class="sxs-lookup"><span data-stu-id="28aef-376">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="28aef-377">Например, предположим, что тип экземпляра — <xref:System.Double> , а тип параметра — <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="28aef-377">For example, suppose the instance type is <xref:System.Double> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="28aef-378">Компилятор Microsoft C# создает инструкции для представления значения параметра в виде <xref:System.Double> объекта <xref:System.Double.Equals%28System.Double%29?displayProperty=nameWithType> , а затем создает метод, который сравнивает значения экземпляра и расширенное представление параметра.</span><span class="sxs-lookup"><span data-stu-id="28aef-378">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Double> object, then generates a <xref:System.Double.Equals%28System.Double%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="28aef-379">Обратитесь к документации по языку программирования, чтобы определить, выполняет ли компилятор неявное расширяющее преобразование числовых типов.</span><span class="sxs-lookup"><span data-stu-id="28aef-379">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="28aef-380">Дополнительные сведения см. в разделе [таблицы преобразования типов](~/docs/standard/base-types/conversion-tables.md) .</span><span class="sxs-lookup"><span data-stu-id="28aef-380">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="28aef-381">Точность в сравнениях</span><span class="sxs-lookup"><span data-stu-id="28aef-381">Precision in Comparisons</span></span>  
 <span data-ttu-id="28aef-382">Этот <xref:System.Double.Equals%2A> метод следует использовать с осторожностью, поскольку два неравенства значения могут быть неравными из-за разной точности этих двух значений.</span><span class="sxs-lookup"><span data-stu-id="28aef-382">The <xref:System.Double.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</span></span> <span data-ttu-id="28aef-383">В следующем примере сообщается, <xref:System.Double> что значение. 333333 <xref:System.Double> и значение, возвращаемое делением 1 на 3, не равны.</span><span class="sxs-lookup"><span data-stu-id="28aef-383">The following example reports that the <xref:System.Double> value .333333 and the <xref:System.Double> value returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/Equals_25051.cs#1)]
 [!code-vb[System.Double.Epsilon#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/Equals_25051.vb#1)]  
  
 <span data-ttu-id="28aef-384">Вместо сравнения на равенство, один прием подразумевает определение приемлемого относительного поля разности между двумя значениями (например, 001% одного из значений).</span><span class="sxs-lookup"><span data-stu-id="28aef-384">Rather than comparing for equality, one technique involves defining an acceptable relative margin of difference between two values (such as .001% of one of the values).</span></span> <span data-ttu-id="28aef-385">Если абсолютное значение разницы между двумя значениями меньше или равно этому полю, разница, скорее всего, будет обусловлена различиями в точности и, следовательно, значения, скорее всего, будут равны.</span><span class="sxs-lookup"><span data-stu-id="28aef-385">If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to differences in precision and, therefore, the values are likely to be equal.</span></span> <span data-ttu-id="28aef-386">В следующем примере этот метод используется для сравнения. 33333 и 1/3, два <xref:System.Double> значения которых в предыдущем примере кода не совпадают.</span><span class="sxs-lookup"><span data-stu-id="28aef-386">The following example uses this technique to compare .33333 and 1/3, the two <xref:System.Double> values that the previous code example found to be unequal.</span></span> <span data-ttu-id="28aef-387">В этом случае значения равны.</span><span class="sxs-lookup"><span data-stu-id="28aef-387">In this case, the values are equal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/Equals_25051.cs#2)]
 [!code-vb[System.Double.Epsilon#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/Equals_25051.vb#2)]  
  
> [!NOTE]
>  <span data-ttu-id="28aef-388">Поскольку <xref:System.Double.Epsilon> определяет минимальное выражение положительного значения, чей диапазон близок к нулю, то поле разности между двумя похожими значениями должно быть <xref:System.Double.Epsilon>больше.</span><span class="sxs-lookup"><span data-stu-id="28aef-388">Because <xref:System.Double.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference between two similar values must be greater than <xref:System.Double.Epsilon>.</span></span> <span data-ttu-id="28aef-389">Как правило, это множество раз больше, <xref:System.Double.Epsilon>чем.</span><span class="sxs-lookup"><span data-stu-id="28aef-389">Typically, it is many times greater than <xref:System.Double.Epsilon>.</span></span> <span data-ttu-id="28aef-390">Поэтому рекомендуется не использовать <xref:System.Double.Epsilon> при сравнении <xref:System.Double> значений на равенство.</span><span class="sxs-lookup"><span data-stu-id="28aef-390">Because of this, we recommend that you do not use <xref:System.Double.Epsilon> when comparing <xref:System.Double> values for equality.</span></span>  
  
 <span data-ttu-id="28aef-391">Второй метод включает сравнение различий между двумя числами с плавающей запятой и определенным абсолютным значением.</span><span class="sxs-lookup"><span data-stu-id="28aef-391">A second technique involves comparing the difference between two floating-point numbers with some absolute value.</span></span> <span data-ttu-id="28aef-392">Если разность меньше или равна этому абсолютному значению, числа равны.</span><span class="sxs-lookup"><span data-stu-id="28aef-392">If the difference is less than or equal to that absolute value, the numbers are equal.</span></span> <span data-ttu-id="28aef-393">Если оно больше, числа не равны.</span><span class="sxs-lookup"><span data-stu-id="28aef-393">If it is greater, the numbers are not equal.</span></span> <span data-ttu-id="28aef-394">Одним из альтернативных способов является произвольное выделение абсолютного значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-394">One alternative is to arbitrarily select an absolute value.</span></span> <span data-ttu-id="28aef-395">Однако это проблематично, поскольку приемлемое поле разности зависит от величины <xref:System.Double> значений.</span><span class="sxs-lookup"><span data-stu-id="28aef-395">This is problematic, however, because an acceptable margin of difference depends on the magnitude of the <xref:System.Double> values.</span></span> <span data-ttu-id="28aef-396">Второй вариант использует преимущества функции проектирования в формате с плавающей запятой: Разница между целочисленным представлением двух значений с плавающей запятой указывает количество возможных значений с плавающей запятой, разделяющих их.</span><span class="sxs-lookup"><span data-stu-id="28aef-396">A second alternative takes advantage of a design feature of the floating-point format: The difference between the integer representation of two floating-point values indicates the number of possible floating-point values that separates them.</span></span> <span data-ttu-id="28aef-397">Например, разница между 0,0 и <xref:System.Double.Epsilon> равно 1, поскольку <xref:System.Double.Epsilon> — это наименьшее значение, которое может быть представлено при работе <xref:System.Double> с, значение которого равно нулю.</span><span class="sxs-lookup"><span data-stu-id="28aef-397">For example, the difference between 0.0 and <xref:System.Double.Epsilon> is 1, because <xref:System.Double.Epsilon> is the smallest representable value when working with a <xref:System.Double> whose value is zero.</span></span> <span data-ttu-id="28aef-398">В следующем примере этот метод используется для сравнения значений. 33333 и 1/3, которые являются двумя <xref:System.Double> значениями, приведенными в предыдущем примере кода <xref:System.Double.Equals%28System.Double%29> с методом, не равным.</span><span class="sxs-lookup"><span data-stu-id="28aef-398">The following example uses this technique to compare .33333 and 1/3, which are the two <xref:System.Double> values that the previous code example with the <xref:System.Double.Equals%28System.Double%29> method found to be unequal.</span></span> <span data-ttu-id="28aef-399">Обратите внимание, что в <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType> примере используется метод для преобразования значения с плавающей запятой двойной точности в целочисленное представление.</span><span class="sxs-lookup"><span data-stu-id="28aef-399">Note that the example uses the <xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType> method to convert a double-precision floating-point value to its integer representation.</span></span>  
  
 [!code-csharp[System.Double.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsabs1.cs#1)]
 [!code-vb[System.Double.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsabs1.vb#1)]  
  
 <span data-ttu-id="28aef-400">Точность чисел с плавающей запятой, превышающих задокументированную точность, зависит от реализации и версии .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="28aef-400">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="28aef-401">Следовательно, сравнение двух определенных чисел может измениться между версиями .NET Framework, так как точность внутреннего представления чисел может измениться.</span><span class="sxs-lookup"><span data-stu-id="28aef-401">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
 <span data-ttu-id="28aef-402">Если два <xref:System.Double.NaN?displayProperty=nameWithType> значения проверяются на равенство путем <xref:System.Double.Equals%2A> вызова метода, метод возвращает `true`значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-402">If two <xref:System.Double.NaN?displayProperty=nameWithType> values are tested for equality by calling the <xref:System.Double.Equals%2A> method, the method returns `true`.</span></span> <span data-ttu-id="28aef-403">Однако если два <xref:System.Double.NaN> значения проверяются на равенство с помощью оператора равенства, оператор возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="28aef-403">However, if two <xref:System.Double.NaN> values are tested for equality by using the equality operator, the operator returns `false`.</span></span> <span data-ttu-id="28aef-404">Если нужно определить, <xref:System.Double> является ли значение параметра нечисловым (NaN), можно <xref:System.Double.IsNaN%2A> вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="28aef-404">When you want to determine whether the value of a <xref:System.Double> is not a number (NaN), an alternative is to call the <xref:System.Double.IsNaN%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="28aef-405">Разрешение перегрузки компилятора может учитывать очевидную разницу в поведении двух <see cref="M:System.Double.Equals(System.Object)" /> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-405">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Double.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="28aef-406">Если неявное преобразование между <paramref name="obj" /> <see cref="T:System.Double" /> аргументом и определено и аргумент не типизирован как <see cref="T:System.Object" />, компиляторы <see cref="M:System.Double.Equals(System.Double)" /> могут выполнить неявное преобразование и вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="28aef-406">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Double" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Double.Equals(System.Double)" /> method.</span></span> <span data-ttu-id="28aef-407">В противном случае они <see cref="M:System.Double.Equals(System.Object)" /> вызывают метод, который всегда <see langword="false" /> возвращает, <paramref name="obj" /> если <see cref="T:System.Double" /> его аргумент не является значением.</span><span class="sxs-lookup"><span data-stu-id="28aef-407">Otherwise, they call the <see cref="M:System.Double.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Double" /> value.</span></span> <span data-ttu-id="28aef-408">В следующем примере показано различие в поведении между двумя перегрузками метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-408">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="28aef-409">В случае со всеми примитивными числовыми типами, <see cref="T:System.Decimal" /> за исключением и в C#, первое <see langword="true" /> сравнение возвращает, потому что компилятор автоматически выполняет расширяющее преобразование и <see cref="M:System.Double.Equals(System.Double)" /> вызывает метод, тогда как второй сравнение возвращает <see langword="false" /> , <see cref="M:System.Double.Equals(System.Object)" /> так как компилятор вызывает метод.</span><span class="sxs-lookup"><span data-stu-id="28aef-409">In the case of all primitive numeric types except for <see cref="T:System.Decimal" /> and in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Double.Equals(System.Double)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Double.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="28aef-410">[! код-CSharp[System. Double. Equals # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [! код-VB[System. Double. Equals # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="28aef-410">[!code-csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Double.Equals(System.Object)" />
        <altmember cref="Overload:System.Double.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="double.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="28aef-411">Объект для сравнения с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="28aef-411">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="28aef-412">Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="28aef-412">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="28aef-413">Значение <see langword="true" />, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.Double" /> и равен значению данного экземпляра; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-413"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Double" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-414">Этот <xref:System.Double.Equals%2A> метод следует использовать с осторожностью, поскольку два неравенства значения могут быть неравными из-за разной точности этих двух значений.</span><span class="sxs-lookup"><span data-stu-id="28aef-414">The <xref:System.Double.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</span></span> <span data-ttu-id="28aef-415">В следующем примере сообщается, <xref:System.Double> что значение. 3333 <xref:System.Double> и возвращенное делением 1 на 3 не равны.</span><span class="sxs-lookup"><span data-stu-id="28aef-415">The following example reports that the <xref:System.Double> value .3333 and the <xref:System.Double> returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Double.Epsilon#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Epsilon/cs/Equals_25051.cs#3)]
 [!code-vb[System.Double.Epsilon#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Epsilon/vb/Equals_25051.vb#3)]  
  
 <span data-ttu-id="28aef-416">Альтернативные варианты вызова <xref:System.Double.Equals%2A> метода см. в документации <xref:System.Double.Equals%28System.Double%29> по перегрузке.</span><span class="sxs-lookup"><span data-stu-id="28aef-416">For alternatives to calling the <xref:System.Double.Equals%2A> method, see the documentation for the <xref:System.Double.Equals%28System.Double%29> overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28aef-417">Поскольку <xref:System.Double.Epsilon> определяет минимальное выражение положительного значения, чей диапазон близок к нулю, то поле разности между двумя похожими значениями должно быть <xref:System.Double.Epsilon>больше.</span><span class="sxs-lookup"><span data-stu-id="28aef-417">Because <xref:System.Double.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference between two similar values must be greater than <xref:System.Double.Epsilon>.</span></span> <span data-ttu-id="28aef-418">Как правило, это множество раз больше, <xref:System.Double.Epsilon>чем.</span><span class="sxs-lookup"><span data-stu-id="28aef-418">Typically, it is many times greater than <xref:System.Double.Epsilon>.</span></span>  
  
 <span data-ttu-id="28aef-419">Точность чисел с плавающей запятой, превышающих задокументированную точность, зависит от реализации и версии .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="28aef-419">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="28aef-420">Следовательно, сравнение двух определенных чисел может измениться между версиями .NET Framework, так как точность внутреннего представления чисел может измениться.</span><span class="sxs-lookup"><span data-stu-id="28aef-420">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
 <span data-ttu-id="28aef-421">Если два <xref:System.Double.NaN?displayProperty=nameWithType> значения проверяются на равенство путем <xref:System.Double.Equals%2A> вызова метода, метод возвращает `true`значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-421">If two <xref:System.Double.NaN?displayProperty=nameWithType> values are tested for equality by calling the <xref:System.Double.Equals%2A> method, the method returns `true`.</span></span> <span data-ttu-id="28aef-422">Однако если два <xref:System.Double.NaN> значения проверяются на равенство с помощью оператора равенства, оператор возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="28aef-422">However, if two <xref:System.Double.NaN> values are tested for equality by using the equality operator, the operator returns `false`.</span></span> <span data-ttu-id="28aef-423">Если нужно определить, <xref:System.Double> является ли значение параметра нечисловым (NaN), можно <xref:System.Double.IsNaN%2A> вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="28aef-423">When you want to determine whether the value of a <xref:System.Double> is not a number (NaN), an alternative is to call the <xref:System.Double.IsNaN%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="28aef-424">Разрешение перегрузки компилятора может учитывать очевидную разницу в поведении двух <see cref="M:System.Double.Equals(System.Object)" /> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-424">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Double.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="28aef-425">Если неявное преобразование между <paramref name="obj" /> <see cref="T:System.Double" /> аргументом и определено и аргумент не типизирован как <see cref="T:System.Object" />, компиляторы <see cref="M:System.Double.Equals(System.Double)" /> могут выполнить неявное преобразование и вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="28aef-425">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Double" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Double.Equals(System.Double)" /> method.</span></span> <span data-ttu-id="28aef-426">В противном случае они <see cref="M:System.Double.Equals(System.Object)" /> вызывают метод, который всегда <see langword="false" /> возвращает, <paramref name="obj" /> если <see cref="T:System.Double" /> его аргумент не является значением.</span><span class="sxs-lookup"><span data-stu-id="28aef-426">Otherwise, they call the <see cref="M:System.Double.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Double" /> value.</span></span> <span data-ttu-id="28aef-427">В следующем примере показано различие в поведении между двумя перегрузками метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-427">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="28aef-428">В случае со всеми примитивными числовыми типами, <see cref="T:System.Decimal" /> за исключением и в C#, первое <see langword="true" /> сравнение возвращает, потому что компилятор автоматически выполняет расширяющее преобразование и <see cref="M:System.Double.Equals(System.Double)" /> вызывает метод, тогда как второй сравнение возвращает <see langword="false" /> , <see cref="M:System.Double.Equals(System.Object)" /> так как компилятор вызывает метод.</span><span class="sxs-lookup"><span data-stu-id="28aef-428">In the case of all primitive numeric types except for <see cref="T:System.Decimal" /> and in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Double.Equals(System.Double)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Double.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="28aef-429">[! код-CSharp[System. Double. Equals # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [! код-VB[System. Double. Equals # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="28aef-429">[!code-csharp[System.Double.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Double.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Double.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="double.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28aef-430">Возвращает хэш-код данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="28aef-430">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="28aef-431">Хэш-код в виде 32-битовым целым числом со знаком.</span><span class="sxs-lookup"><span data-stu-id="28aef-431">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="double.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28aef-432">Возвращает <see cref="T:System.TypeCode" /> для типа значения <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-432">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-433">Константа перечислимого типа, <see cref="F:System.TypeCode.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-433">The enumerated constant, <see cref="F:System.TypeCode.Double" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="C#" Value="public static bool IsFinite (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFinite(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsFinite(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFinite (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFinite(double d);" />
      <MemberSignature Language="F#" Value="static member IsFinite : double -&gt; bool" Usage="System.double.IsFinite d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="28aef-434">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-434">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="28aef-435">Определяет, является ли указанное значение конечным (нулевым, поднормальным или нормальным).</span><span class="sxs-lookup"><span data-stu-id="28aef-435">Determines whether the specified value is finite (zero, subnormal, or normal).</span></span></summary>
        <returns><span data-ttu-id="28aef-436"><see langword="true" />, если значение является конечным (нулевым, поднормальным или нормальным); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-436"><see langword="true" /> if the value is finite (zero, subnormal or normal); <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinity">
      <MemberSignature Language="C#" Value="public static bool IsInfinity (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinity(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsInfinity(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInfinity (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInfinity(double d);" />
      <MemberSignature Language="F#" Value="static member IsInfinity : double -&gt; bool" Usage="System.double.IsInfinity d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="28aef-437">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-437">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="28aef-438">Возвращает значение, позволяющее определить, равно ли данное число плюс или минус бесконечности.</span><span class="sxs-lookup"><span data-stu-id="28aef-438">Returns a value indicating whether the specified number evaluates to negative or positive infinity</span></span></summary>
        <returns><span data-ttu-id="28aef-439">Значение <see langword="true" />, если параметр <paramref name="d" /> равен значению <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-439"><see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-440">Операции с плавающей запятой <xref:System.Double.PositiveInfinity> возвращают или <xref:System.Double.NegativeInfinity> сообщают о состоянии переполнения.</span><span class="sxs-lookup"><span data-stu-id="28aef-440">Floating-point operations return <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-441">В следующем примере кода показано использование <xref:System.Double.IsInfinity%2A>:</span><span class="sxs-lookup"><span data-stu-id="28aef-441">The following code example illustrates the use of <xref:System.Double.IsInfinity%2A>:</span></span>  
  
 [!code-cpp[System.Double#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#11)]
 [!code-csharp[System.Double#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#11)]
 [!code-vb[System.Double#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsPositiveInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsNegativeInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public static bool IsNaN (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNaN(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNaN(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNaN (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNaN(double d);" />
      <MemberSignature Language="F#" Value="static member IsNaN : double -&gt; bool" Usage="System.double.IsNaN d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="28aef-442">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-442">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="28aef-443">Возвращает значение, показывающее, что указанное значение не является числом (<see cref="F:System.Double.NaN" />).</span><span class="sxs-lookup"><span data-stu-id="28aef-443">Returns a value that indicates whether the specified value is not a number (<see cref="F:System.Double.NaN" />).</span></span></summary>
        <returns><span data-ttu-id="28aef-444">Значение <see langword="true" />, если значение параметра <paramref name="d" /> равно значению <see cref="F:System.Double.NaN" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-444"><see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.NaN" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-445">Операции с плавающей запятой <xref:System.Double.NaN> возвращают сигнал о том, что результат операции не определен.</span><span class="sxs-lookup"><span data-stu-id="28aef-445">Floating-point operations return <xref:System.Double.NaN> to signal that result of the operation is undefined.</span></span> <span data-ttu-id="28aef-446">Например, деление 0,0 на 0,0 приводит <xref:System.Double.NaN>к.</span><span class="sxs-lookup"><span data-stu-id="28aef-446">For example, dividing 0.0 by 0.0 results in <xref:System.Double.NaN>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28aef-447"><xref:System.Double.IsNaN%2A>Возвращает `false` <xref:System.Double.PositiveInfinity> , <xref:System.Double> если значение равно либо <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="28aef-447"><xref:System.Double.IsNaN%2A> returns `false` if a <xref:System.Double> value is either <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="28aef-448">Чтобы проверить эти значения, используйте <xref:System.Double.IsInfinity%2A>методы, <xref:System.Double.IsPositiveInfinity%2A>и <xref:System.Double.IsNegativeInfinity%2A> .</span><span class="sxs-lookup"><span data-stu-id="28aef-448">To test for these values, use the <xref:System.Double.IsInfinity%2A>, <xref:System.Double.IsPositiveInfinity%2A>, and <xref:System.Double.IsNegativeInfinity%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-449">В следующем примере кода показано использование <xref:System.Double.IsNaN%2A>:</span><span class="sxs-lookup"><span data-stu-id="28aef-449">The following code example illustrates the use of <xref:System.Double.IsNaN%2A>:</span></span>  
  
 [!code-cpp[System.Double#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#8)]
 [!code-csharp[System.Double#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#8)]
 [!code-vb[System.Double#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Double.NaN" />
      </Docs>
    </Member>
    <Member MemberName="IsNegative">
      <MemberSignature Language="C#" Value="public static bool IsNegative (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegative(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNegative(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegative (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegative(double d);" />
      <MemberSignature Language="F#" Value="static member IsNegative : double -&gt; bool" Usage="System.double.IsNegative d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="28aef-450">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-450">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="28aef-451">Определяет, является ли заданное значение отрицательным.</span><span class="sxs-lookup"><span data-stu-id="28aef-451">Determines whether the specified value is negative.</span></span></summary>
        <returns><span data-ttu-id="28aef-452">Значение <see langword="true" />, если значение отрицательное; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-452"><see langword="true" /> if the value is negative; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeInfinity">
      <MemberSignature Language="C#" Value="public static bool IsNegativeInfinity (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegativeInfinity(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNegativeInfinity(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegativeInfinity (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegativeInfinity(double d);" />
      <MemberSignature Language="F#" Value="static member IsNegativeInfinity : double -&gt; bool" Usage="System.double.IsNegativeInfinity d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="28aef-453">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-453">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="28aef-454">Возвращает значение, позволяющее определить, равно ли данное число минус бесконечности.</span><span class="sxs-lookup"><span data-stu-id="28aef-454">Returns a value indicating whether the specified number evaluates to negative infinity.</span></span></summary>
        <returns><span data-ttu-id="28aef-455">Значение <see langword="true" />, если значение параметра <paramref name="d" /> равно значению <see cref="F:System.Double.NegativeInfinity" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-455"><see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.NegativeInfinity" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-456">Операции с плавающей запятой <xref:System.Double.NegativeInfinity> возвращают, чтобы сообщить о состоянии переполнения.</span><span class="sxs-lookup"><span data-stu-id="28aef-456">Floating-point operations return <xref:System.Double.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-457">В следующем примере кода показано использование <xref:System.Double.IsNegativeInfinity%2A>:</span><span class="sxs-lookup"><span data-stu-id="28aef-457">The following code example illustrates the use of <xref:System.Double.IsNegativeInfinity%2A>:</span></span>  
  
 [!code-cpp[System.Double#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#13)]
 [!code-csharp[System.Double#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#13)]
 [!code-vb[System.Double#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#13)]  
[!code-cpp[System.Double#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#4)]
[!code-csharp[System.Double#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#4)]
[!code-vb[System.Double#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#4)]  
[!code-cpp[System.Double#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#9)]
[!code-csharp[System.Double#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#9)]
[!code-vb[System.Double#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsPositiveInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNormal">
      <MemberSignature Language="C#" Value="public static bool IsNormal (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormal(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsNormal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNormal (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNormal(double d);" />
      <MemberSignature Language="F#" Value="static member IsNormal : double -&gt; bool" Usage="System.double.IsNormal d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="28aef-458">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-458">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="28aef-459">Определяет, является ли заданное значение нормальным.</span><span class="sxs-lookup"><span data-stu-id="28aef-459">Determines whether the specified value is normal.</span></span></summary>
        <returns><span data-ttu-id="28aef-460">Значение <see langword="true" />, если значение является нормальным; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-460"><see langword="true" /> if the value is normal; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveInfinity">
      <MemberSignature Language="C#" Value="public static bool IsPositiveInfinity (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPositiveInfinity(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsPositiveInfinity(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPositiveInfinity (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPositiveInfinity(double d);" />
      <MemberSignature Language="F#" Value="static member IsPositiveInfinity : double -&gt; bool" Usage="System.double.IsPositiveInfinity d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="28aef-461">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-461">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="28aef-462">Возвращает значение, показывающее, равно ли данное число плюс бесконечности.</span><span class="sxs-lookup"><span data-stu-id="28aef-462">Returns a value indicating whether the specified number evaluates to positive infinity.</span></span></summary>
        <returns><span data-ttu-id="28aef-463">Значение <see langword="true" />, если значение параметра <paramref name="d" /> равно значению <see cref="F:System.Double.PositiveInfinity" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-463"><see langword="true" /> if <paramref name="d" /> evaluates to <see cref="F:System.Double.PositiveInfinity" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-464">Операции с плавающей запятой <xref:System.Double.PositiveInfinity> возвращают, чтобы сообщить о состоянии переполнения.</span><span class="sxs-lookup"><span data-stu-id="28aef-464">Floating-point operations return <xref:System.Double.PositiveInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-465">В следующем примере кода показано использование <xref:System.Double.IsPositiveInfinity%2A>:</span><span class="sxs-lookup"><span data-stu-id="28aef-465">The following code example illustrates the use of <xref:System.Double.IsPositiveInfinity%2A>:</span></span>  
  
 [!code-cpp[System.Double#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#12)]
 [!code-csharp[System.Double#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#12)]
 [!code-vb[System.Double#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsNegativeInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsSubnormal">
      <MemberSignature Language="C#" Value="public static bool IsSubnormal (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSubnormal(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.IsSubnormal(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSubnormal (d As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSubnormal(double d);" />
      <MemberSignature Language="F#" Value="static member IsSubnormal : double -&gt; bool" Usage="System.double.IsSubnormal d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="28aef-466">Число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-466">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="28aef-467">Определяет, является ли заданное значение поднормальным.</span><span class="sxs-lookup"><span data-stu-id="28aef-467">Determines whether the specified value is subnormal.</span></span></summary>
        <returns><span data-ttu-id="28aef-468"><see langword="true" />, если значение является поднормальным; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-468"><see langword="true" /> if the value is subnormal; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const double MaxValue = 1.79769313486232E+308;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MaxValue = float64(1.79769313486232E+308)" />
      <MemberSignature Language="DocId" Value="F:System.Double.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Double  = 1.79769313486232E+308" />
      <MemberSignature Language="C++ CLI" Value="public: double MaxValue = 1.79769313486232E+308;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : double" Usage="System.double.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>1.79769313486232E+308</MemberValue>
      <Docs>
        <summary><span data-ttu-id="28aef-469">Представляет наибольшее возможное значение типа <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-469">Represents the largest possible value of a <see cref="T:System.Double" />.</span></span> <span data-ttu-id="28aef-470">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="28aef-470">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-471">Значение этой константы является положительным 7976931348623157E E + 308.</span><span class="sxs-lookup"><span data-stu-id="28aef-471">The value of this constant is positive 1.7976931348623157E+308.</span></span>  
  
 <span data-ttu-id="28aef-472">Результат операции, которая превышает <xref:System.Double.MaxValue?displayProperty=nameWithType> значение, равно. <xref:System.Double.PositiveInfinity?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="28aef-472">The result of an operation that exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType> is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="28aef-473">В следующем примере <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> результаты операций сложения, умножения и возведения в степень возводятся в случае <xref:System.Double.MaxValue?displayProperty=nameWithType>превышения результата.</span><span class="sxs-lookup"><span data-stu-id="28aef-473">In the following example, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> results from addition, multiplication, and exponentiation operations when the result exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Double.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.maxvalue/cs/maxvalueex.cs#1)]
 [!code-vb[System.Double.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.maxvalue/vb/maxvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="28aef-474">В следующем примере кода показано использование <xref:System.Double.MaxValue>:</span><span class="sxs-lookup"><span data-stu-id="28aef-474">The following code example illustrates the use of <xref:System.Double.MaxValue>:</span></span>  
  
 [!code-cpp[Double Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#2)]
 [!code-csharp[Double Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#2)]
 [!code-vb[Double Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const double MinValue = -1.79769313486232E+308;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 MinValue = float64(-1.79769313486232E+308)" />
      <MemberSignature Language="DocId" Value="F:System.Double.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Double  = -1.79769313486232E+308" />
      <MemberSignature Language="C++ CLI" Value="public: double MinValue = -1.79769313486232E+308;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : double" Usage="System.double.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>-1.79769313486232E+308</MemberValue>
      <Docs>
        <summary><span data-ttu-id="28aef-475">Представляет минимально допустимое значение типа <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-475">Represents the smallest possible value of a <see cref="T:System.Double" />.</span></span> <span data-ttu-id="28aef-476">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="28aef-476">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-477">Значение этой константы отрицательно 7976931348623157E E + 308.</span><span class="sxs-lookup"><span data-stu-id="28aef-477">The value of this constant is negative 1.7976931348623157E+308.</span></span>  
  
 <span data-ttu-id="28aef-478">Результат операции меньше, чем <xref:System.Double.MinValue?displayProperty=nameWithType>. <xref:System.Double.NegativeInfinity?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="28aef-478">The result of an operation that is less than <xref:System.Double.MinValue?displayProperty=nameWithType> is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="28aef-479">В следующем примере результаты операций <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> вычитания и умножения выполняются, если результат <xref:System.Double.MinValue?displayProperty=nameWithType>меньше.</span><span class="sxs-lookup"><span data-stu-id="28aef-479">In the following example, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> results from subtraction and multiplication operations when the result is less than <xref:System.Double.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Double.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.minvalue/cs/minvalueex.cs#1)]
 [!code-vb[System.Double.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.minvalue/vb/minvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="28aef-480">В следующем примере кода показано использование <xref:System.Double.MinValue>:</span><span class="sxs-lookup"><span data-stu-id="28aef-480">The following code example illustrates the use of <xref:System.Double.MinValue>:</span></span>  
  
 [!code-cpp[Double Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#2)]
 [!code-csharp[Double Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#2)]
 [!code-vb[Double Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="C#" Value="public const double NaN = NaN;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 NaN = float64(NaN)" />
      <MemberSignature Language="DocId" Value="F:System.Double.NaN" />
      <MemberSignature Language="VB.NET" Value="Public Const NaN As Double  = NaN" />
      <MemberSignature Language="C++ CLI" Value="public: double NaN = NaN;" />
      <MemberSignature Language="F#" Value="val mutable NaN : double" Usage="System.double.NaN" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>NaN</MemberValue>
      <Docs>
        <summary><span data-ttu-id="28aef-481">Представляет значение, не являющееся числом (<see langword="NaN" />).</span><span class="sxs-lookup"><span data-stu-id="28aef-481">Represents a value that is not a number (<see langword="NaN" />).</span></span> <span data-ttu-id="28aef-482">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="28aef-482">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-483">Метод или оператор возвращает <xref:System.Double.NaN> , когда результат операции не определен.</span><span class="sxs-lookup"><span data-stu-id="28aef-483">A method or operator returns <xref:System.Double.NaN> when the result of an operation is undefined.</span></span> <span data-ttu-id="28aef-484">Например, результат деления нуля на ноль равен <xref:System.Double.NaN>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-484">For example, the result of dividing zero by zero is <xref:System.Double.NaN>, as the following example shows.</span></span> <span data-ttu-id="28aef-485">(Однако обратите внимание, что деление ненулевого числа на ноль <xref:System.Double.PositiveInfinity> возвращает <xref:System.Double.NegativeInfinity>либо или, в зависимости от знака делителя.)</span><span class="sxs-lookup"><span data-stu-id="28aef-485">(But note that dividing a non-zero number by zero returns either <xref:System.Double.PositiveInfinity> or <xref:System.Double.NegativeInfinity>, depending on the sign of the divisor.)</span></span>  
  
 [!code-csharp[System.Double.NaN#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.nan/cs/nan1.cs#1)]
 [!code-vb[System.Double.NaN#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.nan/vb/nan1.vb#1)]  
  
 <span data-ttu-id="28aef-486">Кроме того, вызов метода со <xref:System.Double.NaN> значением или операцией <xref:System.Double.NaN> со значением возвращается <xref:System.Double.NaN>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-486">In addition, a method call with a <xref:System.Double.NaN> value or an operation on a <xref:System.Double.NaN> value returns <xref:System.Double.NaN>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Double.NaN#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.nan/cs/nan1.cs#2)]
 [!code-vb[System.Double.NaN#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.nan/vb/nan1.vb#2)]  
  
 <span data-ttu-id="28aef-487"><xref:System.Double.IsNaN%2A> Используйте метод, чтобы определить, является ли значение нечисловым.</span><span class="sxs-lookup"><span data-stu-id="28aef-487">Use the <xref:System.Double.IsNaN%2A> method to determine whether a value is not a number.</span></span> <span data-ttu-id="28aef-488">Оператор рассматривает два <xref:System.Double.NaN> значения как неравные друг другу. <xref:System.Double.op_Equality%2A></span><span class="sxs-lookup"><span data-stu-id="28aef-488">The <xref:System.Double.op_Equality%2A> operator considers two <xref:System.Double.NaN> values to be unequal to one another.</span></span> <span data-ttu-id="28aef-489">Как правило, <xref:System.Double> операторы нельзя использовать для сравнения <xref:System.Double.NaN?displayProperty=nameWithType> с другими <xref:System.Double> значениями, хотя методы сравнения (такие как <xref:System.Double.Equals%2A> и <xref:System.Double.CompareTo%2A>) могут быть.</span><span class="sxs-lookup"><span data-stu-id="28aef-489">In general, <xref:System.Double> operators cannot be used to compare <xref:System.Double.NaN?displayProperty=nameWithType> with other <xref:System.Double> values, although comparison methods (such as <xref:System.Double.Equals%2A> and <xref:System.Double.CompareTo%2A>) can.</span></span> <span data-ttu-id="28aef-490">В следующем примере показано различие в поведении между <xref:System.Double> операторами сравнения и методами.</span><span class="sxs-lookup"><span data-stu-id="28aef-490">The following example illustrates the difference in behavior between <xref:System.Double> comparison operators and methods.</span></span>  
  
 [!code-csharp[System.Double.NaN#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.nan/cs/double.nan4.cs#4)]
 [!code-vb[System.Double.NaN#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.nan/vb/double.nan4.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="28aef-491">В следующем примере демонстрируется применение <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="28aef-491">The following example illustrates the use of <xref:System.Double.NaN>:</span></span>  
  
 [!code-cpp[System.Double#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#7)]
 [!code-csharp[System.Double#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#7)]
 [!code-vb[System.Double#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsNaN(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="C#" Value="public const double NegativeInfinity = -Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 NegativeInfinity = float64(-Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Double.NegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const NegativeInfinity As Double  = -Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: double NegativeInfinity = -Infinity;" />
      <MemberSignature Language="F#" Value="val mutable NegativeInfinity : double" Usage="System.double.NegativeInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>-Infinity</MemberValue>
      <Docs>
        <summary><span data-ttu-id="28aef-492">Представляет минус бесконечность.</span><span class="sxs-lookup"><span data-stu-id="28aef-492">Represents negative infinity.</span></span> <span data-ttu-id="28aef-493">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="28aef-493">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-494">Значение этой константы является результатом деления отрицательного числа на ноль.</span><span class="sxs-lookup"><span data-stu-id="28aef-494">The value of this constant is the result of dividing a negative number by zero.</span></span>  
  
 <span data-ttu-id="28aef-495">Эта константа возвращается, если результат операции меньше <xref:System.Double.MinValue>.</span><span class="sxs-lookup"><span data-stu-id="28aef-495">This constant is returned when the result of an operation is less than <xref:System.Double.MinValue>.</span></span>  
  
 <span data-ttu-id="28aef-496">Используйте <xref:System.Double.IsNegativeInfinity%2A> , чтобы определить, является ли значение отрицательной бесконечностью.</span><span class="sxs-lookup"><span data-stu-id="28aef-496">Use <xref:System.Double.IsNegativeInfinity%2A> to determine whether a value evaluates to negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-497">В следующем примере кода показано использование <xref:System.Double.NegativeInfinity>:</span><span class="sxs-lookup"><span data-stu-id="28aef-497">The following code example illustrates the use of <xref:System.Double.NegativeInfinity>:</span></span>  
  
 [!code-cpp[System.Double#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#9)]
 [!code-csharp[System.Double#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#9)]
 [!code-vb[System.Double#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsNegativeInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="F:System.Double.PositiveInfinity" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_Equality(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : double * double -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Double" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="28aef-498">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-498">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="28aef-499">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-499">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="28aef-500">Возвращает значение, указывающее, равны ли два заданных значения <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-500">Returns a value that indicates whether two specified <see cref="T:System.Double" /> values are equal.</span></span></summary>
        <returns><span data-ttu-id="28aef-501">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-501"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-502">Метод определяет оператор равенства для <xref:System.Double> значений. <xref:System.Double.op_Equality%2A></span><span class="sxs-lookup"><span data-stu-id="28aef-502">The <xref:System.Double.op_Equality%2A> method defines the equality operator for <xref:System.Double> values.</span></span>  
  
 <span data-ttu-id="28aef-503">Если два <xref:System.Double.NaN?displayProperty=nameWithType> значения проверяются на равенство с помощью оператора равенства, результат равен `false`; два <xref:System.Double.NaN?displayProperty=nameWithType> значения не считаются равными.</span><span class="sxs-lookup"><span data-stu-id="28aef-503">If two <xref:System.Double.NaN?displayProperty=nameWithType> values are tested for equality by using the equality operator, the result is `false`; two <xref:System.Double.NaN?displayProperty=nameWithType> values are not considered equal.</span></span> <span data-ttu-id="28aef-504">Если они проверяются на равенство путем <xref:System.Double.Equals%2A> вызова метода, результатом будет `true`.</span><span class="sxs-lookup"><span data-stu-id="28aef-504">If they are tested for equality by calling the <xref:System.Double.Equals%2A> method, the result is `true`.</span></span>  <span data-ttu-id="28aef-505">Если нужно определить, <xref:System.Double> является ли значение параметра нечисловым (NaN), можно <xref:System.Double.IsNaN%2A> вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="28aef-505">When you want to determine whether the value of a <xref:System.Double> is not a number (NaN), an alternative is to call the <xref:System.Double.IsNaN%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_GreaterThan(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : double * double -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Double" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="28aef-506">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-506">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="28aef-507">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-507">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="28aef-508">Возвращает значение, указывающее, действительно ли заданное значение <see cref="T:System.Double" /> больше другого заданного значения <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-508">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is greater than another specified <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="28aef-509"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-509"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-510">Метод определяет операцию оператора "больше" для <xref:System.Double> значений. <xref:System.Double.op_GreaterThan%2A></span><span class="sxs-lookup"><span data-stu-id="28aef-510">The <xref:System.Double.op_GreaterThan%2A> method defines the operation of the greater-than operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : double * double -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Double" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="28aef-511">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-511">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="28aef-512">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-512">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="28aef-513">Возвращает значение, указывающее, действительно ли заданное значение <see cref="T:System.Double" /> больше или равно другому заданному значению <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-513">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is greater than or equal to another specified <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="28aef-514"><see langword="true" />, если значение <paramref name="left" /> больше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-514"><see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-515">Метод определяет операцию оператора "больше или равно" для <xref:System.Double> значений. <xref:System.Double.op_GreaterThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="28aef-515">The <xref:System.Double.op_GreaterThanOrEqual%2A> method defines the operation of the greater-than-or-equal operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_Inequality(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(double left, double right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : double * double -&gt; bool" Usage="System.double.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Double" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="28aef-516">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-516">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="28aef-517">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-517">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="28aef-518">Возвращает значение, указывающее, не равны ли два заданных значения <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-518">Returns a value that indicates whether two specified <see cref="T:System.Double" /> values are not equal.</span></span></summary>
        <returns><span data-ttu-id="28aef-519">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-519"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-520">Метод определяет оператор неравенства для <xref:System.Double> значений. <xref:System.Double.op_Inequality%2A></span><span class="sxs-lookup"><span data-stu-id="28aef-520">The <xref:System.Double.op_Inequality%2A> method defines the inequality operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_LessThan(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : double * double -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Double" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="28aef-521">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-521">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="28aef-522">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-522">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="28aef-523">Возвращает значение, указывающее, действительно ли заданное значение <see cref="T:System.Double" /> меньше другого заданного значения <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-523">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is less than another specified <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="28aef-524"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-524"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-525">Метод определяет операцию оператора "меньше чем" для <xref:System.Double> значений. <xref:System.Double.op_LessThan%2A></span><span class="sxs-lookup"><span data-stu-id="28aef-525">The <xref:System.Double.op_LessThan%2A> method defines the operation of the less-than operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (double left, double right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(float64 left, float64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Double, right As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(double left, double right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : double * double -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Double" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="28aef-526">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-526">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="28aef-527">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-527">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="28aef-528">Возвращает значение, указывающее, действительно ли заданное значение <see cref="T:System.Double" /> меньше или равно другому заданному значению <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-528">Returns a value that indicates whether a specified <see cref="T:System.Double" /> value is less than or equal to another specified <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="28aef-529"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-529"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-530">Метод определяет операцию оператора "меньше или равно" для <xref:System.Double> значений. <xref:System.Double.op_LessThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="28aef-530">The <xref:System.Double.op_LessThanOrEqual%2A> method defines the operation of the less-than-or-equal operator for <xref:System.Double> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aef-531">Преобразует строковое представление числа в эквивалентное ему число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-531">Converts the string representation of a number to its double-precision floating-point number equivalent.</span></span></summary>
        <altmember cref="Overload:System.Double.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; double" Usage="System.double.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="28aef-532">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="28aef-532">A string that contains a number to convert.</span></span></param>
        <summary><span data-ttu-id="28aef-533">Преобразует строковое представление числа в эквивалентное ему число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-533">Converts the string representation of a number to its double-precision floating-point number equivalent.</span></span></summary>
        <returns><span data-ttu-id="28aef-534">Число с плавающей запятой двойной точности, которое эквивалентно числовому значению или символу, заданному параметром <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-534">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-535">Параметр может содержать строку в формате <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>, или в текущем языке и региональных параметрах: `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-535">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>, or a string of the form:</span></span>  
  
 <span data-ttu-id="28aef-536">[*WS*] [*Sign*] [*целочисленные цифры*[*,*]] *целые числа* [*.* [*дробные цифры*]] [E [*знак*]*экспоненциальные цифры*] [*WS*]</span><span class="sxs-lookup"><span data-stu-id="28aef-536">[*ws*][*sign*][*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="28aef-537">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="28aef-537">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="28aef-538">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="28aef-538">The following table describes each element.</span></span>  
  
|<span data-ttu-id="28aef-539">Элемент</span><span class="sxs-lookup"><span data-stu-id="28aef-539">Element</span></span>|<span data-ttu-id="28aef-540">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-540">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="28aef-541">*ws*</span><span class="sxs-lookup"><span data-stu-id="28aef-541">*ws*</span></span>|<span data-ttu-id="28aef-542">Последовательность пробельных символов.</span><span class="sxs-lookup"><span data-stu-id="28aef-542">A series of white-space characters.</span></span>|  
|<span data-ttu-id="28aef-543">*sign*</span><span class="sxs-lookup"><span data-stu-id="28aef-543">*sign*</span></span>|<span data-ttu-id="28aef-544">Знак отрицательного знака (-) или знак плюс (+).</span><span class="sxs-lookup"><span data-stu-id="28aef-544">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="28aef-545">Можно использовать только ведущий знак.</span><span class="sxs-lookup"><span data-stu-id="28aef-545">Only a leading sign can be used.</span></span>|  
|<span data-ttu-id="28aef-546">*целые числа*</span><span class="sxs-lookup"><span data-stu-id="28aef-546">*integral-digits*</span></span>|<span data-ttu-id="28aef-547">Последовательность цифр от 0 до 9, указывающих целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-547">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="28aef-548">Выполнение *целочисленных цифр* может быть разделено символом разделителя групп.</span><span class="sxs-lookup"><span data-stu-id="28aef-548">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="28aef-549">Например, в некоторых культурах запятая (,) разделяет группы тысяч.</span><span class="sxs-lookup"><span data-stu-id="28aef-549">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="28aef-550">Элемент \*\* с целочисленными цифрами может отсутствовать, если строка содержит элемент *дробной разрядности* .</span><span class="sxs-lookup"><span data-stu-id="28aef-550">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="28aef-551">,</span><span class="sxs-lookup"><span data-stu-id="28aef-551">,</span></span>|<span data-ttu-id="28aef-552">Символ разделителя тысяч, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-552">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="28aef-553">.</span><span class="sxs-lookup"><span data-stu-id="28aef-553">.</span></span>|<span data-ttu-id="28aef-554">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-554">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="28aef-555">*Дробные разряды*</span><span class="sxs-lookup"><span data-stu-id="28aef-555">*fractional-digits*</span></span>|<span data-ttu-id="28aef-556">Последовательность цифр от 0 до 9, которая указывает дробную часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-556">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="28aef-557">E</span><span class="sxs-lookup"><span data-stu-id="28aef-557">E</span></span>|<span data-ttu-id="28aef-558">Символ "e" или "E", указывающий, что значение представлено в экспоненциальной (экспоненциальной) нотации.</span><span class="sxs-lookup"><span data-stu-id="28aef-558">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="28aef-559">*экспоненциальные цифры*</span><span class="sxs-lookup"><span data-stu-id="28aef-559">*exponential-digits*</span></span>|<span data-ttu-id="28aef-560">Последовательность цифр от 0 до 9, указывающая показатель степени.</span><span class="sxs-lookup"><span data-stu-id="28aef-560">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="28aef-561">Параметр интерпретируется с помощью сочетания <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> флагов и <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-561">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="28aef-562">Это означает, что пробелы и разделители тысяч разрешены, например, если символы валют не совпадают.</span><span class="sxs-lookup"><span data-stu-id="28aef-562">This means that white space and thousands separators are allowed, for example, while currency symbols are not.</span></span> <span data-ttu-id="28aef-563">Для более точного контроля над тем, какие элементы стиля `s` разрешены для выполнения операции синтаксического анализа, <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> вызовите <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод или.</span><span class="sxs-lookup"><span data-stu-id="28aef-563">For finer control over which style elements are permitted in `s` for the parse operation to succeed, call the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="28aef-564">Параметр интерпретируется с использованием сведений о форматировании <xref:System.Globalization.NumberFormatInfo> в объекте, инициализированном для языка и региональных параметров текущего потока. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-564">The `s` parameter is interpreted using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current thread culture.</span></span> <span data-ttu-id="28aef-565">Для получения дополнительной информации см. <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="28aef-565">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="28aef-566">Чтобы выполнить синтаксический анализ строки, используя сведения о форматировании другого языка и <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> региональных <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> параметров, вызовите метод или.</span><span class="sxs-lookup"><span data-stu-id="28aef-566">To parse a string using the formatting information of some other culture, call the <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="28aef-567">Обычно, если передать <xref:System.Double.Parse%2A?displayProperty=nameWithType> методу строку, созданную путем <xref:System.Double.ToString%2A?displayProperty=nameWithType> вызова метода, возвращается исходное <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-567">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="28aef-568">Однако из-за потери точности значения могут не совпадать.</span><span class="sxs-lookup"><span data-stu-id="28aef-568">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="28aef-569">Кроме того, попытка выполнить синтаксический анализ строкового представления <xref:System.Double.MinValue> или <xref:System.Double.MaxValue> вызывает <xref:System.OverflowException>исключение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-569">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="28aef-570">Если в `s` параметре во время операции синтаксического анализа встречается разделитель, а применимые разделители денежных единиц или десятичного числа и групп совпадают, то операция синтаксического анализа предполагает, что разделитель является десятичным разделителем, а не группой. двоеточи.</span><span class="sxs-lookup"><span data-stu-id="28aef-570">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="28aef-571"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>Дополнительные сведения о разделителях см. <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>в разделе <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>,, и <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="28aef-571">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-572">В следующем примере показано использование метода <xref:System.Double.Parse%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="28aef-572">The following example illustrates the use of the <xref:System.Double.Parse%28System.String%29> method.</span></span>  
  
 [!code-cpp[Double Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#5)]
 [!code-csharp[Double Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#5)]
 [!code-vb[Double Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aef-573"><paramref name="s" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-573"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="28aef-574"><paramref name="s" /> не представляет число в допустимом формате.</span><span class="sxs-lookup"><span data-stu-id="28aef-574"><paramref name="s" /> does not represent a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="28aef-575">Параметр <paramref name="s" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-575"><paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Double.ToString" />
        <altmember cref="M:System.Double.TryParse(System.String,System.Double@)" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="28aef-576">Синтаксический анализ числовых строк в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-576">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; double" Usage="System.double.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="28aef-577">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="28aef-577">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="28aef-578">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут присутствовать в параметре <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-578">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="28aef-579">Типичным задаваемым значением является сочетание <see cref="F:System.Globalization.NumberStyles.Float" /> и <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-579">A typical value to specify is a combination of <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span></span></param>
        <summary><span data-ttu-id="28aef-580">Преобразует строковое представление числа указанного стиля в эквивалентное ему число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-580">Converts the string representation of a number in a specified style to its double-precision floating-point number equivalent.</span></span></summary>
        <returns><span data-ttu-id="28aef-581">Число с плавающей запятой двойной точности, которое эквивалентно числовому значению или символу, заданному параметром <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-581">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-582">Параметр определяет элементы стиля (такие как пробелы, разделители групп разрядов и символы валют), допустимые `s` в параметре для выполнения операции синтаксического анализа. `style`</span><span class="sxs-lookup"><span data-stu-id="28aef-582">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="28aef-583">Он должен представлять собой сочетание битовых флагов из <xref:System.Globalization.NumberStyles> перечисления.</span><span class="sxs-lookup"><span data-stu-id="28aef-583">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="28aef-584">Следующие <xref:System.Globalization.NumberStyles> члены не поддерживаются:</span><span class="sxs-lookup"><span data-stu-id="28aef-584">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="28aef-585">Параметр может содержать текущий <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>язык и региональные параметры, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>или <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-585">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="28aef-586">В зависимости от значения `style`, оно также может принимать форму:</span><span class="sxs-lookup"><span data-stu-id="28aef-586">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="28aef-587">[*WS*] [*$*] [*Sign*] [*целая-разрядная*[*,*]]*целая-разрядная*[*.* [*дробные цифры*]] [E [*знак*]*экспоненциальные цифры*] [*WS*]</span><span class="sxs-lookup"><span data-stu-id="28aef-587">[*ws*][*$*][*sign*][*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="28aef-588">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="28aef-588">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="28aef-589">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="28aef-589">The following table describes each element.</span></span>  
  
|<span data-ttu-id="28aef-590">Элемент</span><span class="sxs-lookup"><span data-stu-id="28aef-590">Element</span></span>|<span data-ttu-id="28aef-591">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-591">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="28aef-592">*ws*</span><span class="sxs-lookup"><span data-stu-id="28aef-592">*ws*</span></span>|<span data-ttu-id="28aef-593">Последовательность пробельных символов.</span><span class="sxs-lookup"><span data-stu-id="28aef-593">A series of white-space characters.</span></span> <span data-ttu-id="28aef-594">Пробел может `s` присутствовать в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> флаг, `s` и может <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-594">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|$|<span data-ttu-id="28aef-595">Символ валюты, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-595">A culture-specific currency symbol.</span></span> <span data-ttu-id="28aef-596">Его расположение в строке определяется <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> свойствами и <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-596">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="28aef-597">Символ валюты текущего языка и региональных параметров может отображаться `s` в `style` , если <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-597">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-598">*sign*</span><span class="sxs-lookup"><span data-stu-id="28aef-598">*sign*</span></span>|<span data-ttu-id="28aef-599">Знак отрицательного знака (-) или знак плюс (+).</span><span class="sxs-lookup"><span data-stu-id="28aef-599">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="28aef-600">Знак может `s` присутствовать в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> флаг, `s` и может <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-600">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="28aef-601">Круглые скобки могут использоваться в `s` , чтобы указать отрицательное значение `style` , если <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-601">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-602">*целые числа*</span><span class="sxs-lookup"><span data-stu-id="28aef-602">*integral-digits*</span></span>|<span data-ttu-id="28aef-603">Последовательность цифр от 0 до 9, указывающих целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-603">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="28aef-604">Элемент \*\* с целочисленными цифрами может отсутствовать, если строка содержит элемент *дробной разрядности* .</span><span class="sxs-lookup"><span data-stu-id="28aef-604">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="28aef-605">,</span><span class="sxs-lookup"><span data-stu-id="28aef-605">,</span></span>|<span data-ttu-id="28aef-606">Разделитель групп, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-606">A culture-specific group separator.</span></span> <span data-ttu-id="28aef-607">Символ разделителя групп текущего языка и региональных параметров может отображаться `s` в `style` , если <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> включает флаг</span><span class="sxs-lookup"><span data-stu-id="28aef-607">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>|  
|<span data-ttu-id="28aef-608">.</span><span class="sxs-lookup"><span data-stu-id="28aef-608">.</span></span>|<span data-ttu-id="28aef-609">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-609">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="28aef-610">Символ десятичной запятой текущего языка и региональных параметров может `s` присутствовать в <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> , если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-610">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-611">*Дробные разряды*</span><span class="sxs-lookup"><span data-stu-id="28aef-611">*fractional-digits*</span></span>|<span data-ttu-id="28aef-612">Последовательность цифр от 0 до 9, которая указывает дробную часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-612">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="28aef-613">Дробные цифры могут присутствовать `s` в `style` , <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> если включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-613">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-614">E</span><span class="sxs-lookup"><span data-stu-id="28aef-614">E</span></span>|<span data-ttu-id="28aef-615">Символ "e" или "E", указывающий, что значение представлено в экспоненциальной (экспоненциальной) нотации.</span><span class="sxs-lookup"><span data-stu-id="28aef-615">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="28aef-616">Параметр может представлять число в экспоненциальной нотации, `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> если включает флаг. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-616">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-617">*экспоненциальные цифры*</span><span class="sxs-lookup"><span data-stu-id="28aef-617">*exponential-digits*</span></span>|<span data-ttu-id="28aef-618">Последовательность цифр от 0 до 9, указывающая показатель степени.</span><span class="sxs-lookup"><span data-stu-id="28aef-618">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="28aef-619">Все завершающие символы NUL (U + 0000) в `s` игнорируются операцией синтаксического анализа, независимо от значения `style` аргумента.</span><span class="sxs-lookup"><span data-stu-id="28aef-619">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="28aef-620">Строка с цифрами (которая соответствует <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> стилю) всегда будет успешно проанализирована.</span><span class="sxs-lookup"><span data-stu-id="28aef-620">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="28aef-621">Остальные <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> элементы управляют элементами управления, которые могут присутствовать, но не обязательно должны присутствовать во входной строке.</span><span class="sxs-lookup"><span data-stu-id="28aef-621">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="28aef-622">В следующей таблице показано, как <xref:System.Globalization.NumberStyles> отдельные флаги влияют на элементы, которые могут `s`присутствовать в.</span><span class="sxs-lookup"><span data-stu-id="28aef-622">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="28aef-623">Значение NumberStyles</span><span class="sxs-lookup"><span data-stu-id="28aef-623">NumberStyles value</span></span>|<span data-ttu-id="28aef-624">Элементы, разрешенные в `s` в дополнение к цифрам</span><span class="sxs-lookup"><span data-stu-id="28aef-624">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="28aef-625">Только \*\* элемент с целыми цифрами.</span><span class="sxs-lookup"><span data-stu-id="28aef-625">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="28aef-626">Элементы десятичной запятой (*.*) и *дробные разряды* .</span><span class="sxs-lookup"><span data-stu-id="28aef-626">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="28aef-627">Символ "e" или "E", который указывает на экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-627">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="28aef-628">Этот флаг сам по себе поддерживает значения в виде *цифр*E*цифр*. Дополнительные флаги необходимы для успешного анализа строк с такими элементами, как знаки плюса или минуса и символы десятичной запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-628">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="28aef-629">Элемент *WS* в начале `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-629">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="28aef-630">Элемент *WS* в конце `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-630">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="28aef-631">Элемент *Sign* в начале `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-631">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="28aef-632">Элемент *Sign* в конце `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-632">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="28aef-633">Элемент *Sign* в виде круглых скобок, охватывающих числовое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-633">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="28aef-634">Элемент разделителя тысяч (,).</span><span class="sxs-lookup"><span data-stu-id="28aef-634">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="28aef-635">Элемент Currency ($).</span><span class="sxs-lookup"><span data-stu-id="28aef-635">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="28aef-636">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="28aef-636">All elements.</span></span> <span data-ttu-id="28aef-637">`s` Однако не может представлять шестнадцатеричное число или число в экспоненциальной нотации.</span><span class="sxs-lookup"><span data-stu-id="28aef-637">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="28aef-638">Элемент *WS* в начале или конце `s`, \*\* `s`знак в начале и символ десятичной запятой (.).</span><span class="sxs-lookup"><span data-stu-id="28aef-638">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="28aef-639">`s` Параметр также может использовать экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-639">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="28aef-640">Элементы `ws` ,`sign`, тысячные разделители (,) и десятичные точки (.).</span><span class="sxs-lookup"><span data-stu-id="28aef-640">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="28aef-641">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="28aef-641">All elements.</span></span> <span data-ttu-id="28aef-642">`s` Однако не может представлять шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="28aef-642">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="28aef-643">Параметр анализируется с помощью сведений о форматировании <xref:System.Globalization.NumberFormatInfo> в объекте, инициализированном для текущего языка и региональных параметров системы. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-643">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="28aef-644">Для получения дополнительной информации см. <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="28aef-644">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="28aef-645">Обычно, если передать <xref:System.Double.Parse%2A?displayProperty=nameWithType> методу строку, созданную путем <xref:System.Double.ToString%2A?displayProperty=nameWithType> вызова метода, возвращается исходное <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-645">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="28aef-646">Однако из-за потери точности значения могут не совпадать.</span><span class="sxs-lookup"><span data-stu-id="28aef-646">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="28aef-647">Кроме того, попытка выполнить синтаксический анализ строкового представления <xref:System.Double.MinValue> или <xref:System.Double.MaxValue> вызывает <xref:System.OverflowException>исключение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-647">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="28aef-648">Если в `s` параметре во время операции синтаксического анализа встречается разделитель, а применимые разделители денежных единиц или десятичного числа и групп совпадают, то операция синтаксического анализа предполагает, что разделитель является десятичным разделителем, а не группой. двоеточи.</span><span class="sxs-lookup"><span data-stu-id="28aef-648">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="28aef-649"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>Дополнительные сведения о разделителях см. <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>в разделе <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>,, и <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="28aef-649">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-650">В следующем примере <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> метод используется для анализа строковых <xref:System.Double> представлений значений с помощью языка и региональных параметров en-US.</span><span class="sxs-lookup"><span data-stu-id="28aef-650">The following example uses the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Double> values using the en-US culture.</span></span>  
  
 [!code-csharp[System.Double.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/Parse.cs#1)]
 [!code-vb[System.Double.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/Parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aef-651">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-651"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="28aef-652"><paramref name="s" /> не представляет число в допустимом формате.</span><span class="sxs-lookup"><span data-stu-id="28aef-652"><paramref name="s" /> does not represent a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="28aef-653">Параметр <paramref name="s" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-653"><paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28aef-654"><paramref name="style" /> не является значением <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-654"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="28aef-655">- или -</span><span class="sxs-lookup"><span data-stu-id="28aef-655">-or-</span></span> 
 <span data-ttu-id="28aef-656"><paramref name="style" /> включает значение <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-656"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="M:System.Double.ToString" />
        <altmember cref="Overload:System.Double.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="28aef-657">Синтаксический анализ числовых строк в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-657">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; double" Usage="System.double.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="28aef-658">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="28aef-658">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="28aef-659">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" /> в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-659">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="28aef-660">Преобразует строковое представление числа, выраженное в заданном формате, связанном с языком и региональными параметрами, в эквивалентное ему число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-660">Converts the string representation of a number in a specified culture-specific format to its double-precision floating-point number equivalent.</span></span></summary>
        <returns><span data-ttu-id="28aef-661">Число с плавающей запятой двойной точности, которое эквивалентно числовому значению или символу, заданному параметром <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-661">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-662">Эта перегрузка <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> метода обычно используется для преобразования текста, который может быть отформатирован различными способами <xref:System.Double> , в значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-662">This overload of the <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to a <xref:System.Double> value.</span></span> <span data-ttu-id="28aef-663">Например, можно использовать для преобразования текста, вводимых пользователем, в текстовое поле HTML в числовое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-663">For example, it can be used to convert the text that is entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="28aef-664">Параметр интерпретируется с помощью сочетания <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> флагов и <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-664">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="28aef-665"><xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType> `provider`Параметр может содержать ,<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType> или<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> для языка и региональных параметров, заданных параметром, или может содержать строку в формате: `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-665">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`, or it can contain a string of the form:</span></span>  
  
 <span data-ttu-id="28aef-666">[*WS*] [*Sign*] *целые числа* [*.* [*дробные цифры*]] [E [*знак*]*экспоненциальные цифры*] [*WS*]</span><span class="sxs-lookup"><span data-stu-id="28aef-666">[*ws*][*sign*]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="28aef-667">Необязательные элементы заключены в квадратные скобки ([и]).</span><span class="sxs-lookup"><span data-stu-id="28aef-667">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="28aef-668">Элементы, содержащие термин "цифры", состоят из ряда числовых символов в диапазоне от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="28aef-668">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span>  
  
|<span data-ttu-id="28aef-669">Элемент</span><span class="sxs-lookup"><span data-stu-id="28aef-669">Element</span></span>|<span data-ttu-id="28aef-670">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-670">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="28aef-671">*ws*</span><span class="sxs-lookup"><span data-stu-id="28aef-671">*ws*</span></span>|<span data-ttu-id="28aef-672">Последовательность пробельных символов.</span><span class="sxs-lookup"><span data-stu-id="28aef-672">A series of white-space characters.</span></span>|  
|<span data-ttu-id="28aef-673">*sign*</span><span class="sxs-lookup"><span data-stu-id="28aef-673">*sign*</span></span>|<span data-ttu-id="28aef-674">Знак отрицательного знака (-) или знак плюс (+).</span><span class="sxs-lookup"><span data-stu-id="28aef-674">A negative sign symbol (-) or a positive sign symbol (+).</span></span>|  
|<span data-ttu-id="28aef-675">*целые числа*</span><span class="sxs-lookup"><span data-stu-id="28aef-675">*integral-digits*</span></span>|<span data-ttu-id="28aef-676">Последовательность цифр от 0 до 9, указывающих целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-676">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="28aef-677">Выполнение *целочисленных цифр* может быть разделено символом разделителя групп.</span><span class="sxs-lookup"><span data-stu-id="28aef-677">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="28aef-678">Например, в некоторых культурах запятая (,) разделяет группы тысяч.</span><span class="sxs-lookup"><span data-stu-id="28aef-678">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="28aef-679">Элемент \*\* с целочисленными цифрами может отсутствовать, если строка содержит элемент *дробной разрядности* .</span><span class="sxs-lookup"><span data-stu-id="28aef-679">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="28aef-680">.</span><span class="sxs-lookup"><span data-stu-id="28aef-680">.</span></span>|<span data-ttu-id="28aef-681">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-681">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="28aef-682">*Дробные разряды*</span><span class="sxs-lookup"><span data-stu-id="28aef-682">*fractional-digits*</span></span>|<span data-ttu-id="28aef-683">Последовательность цифр от 0 до 9, которая указывает дробную часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-683">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="28aef-684">E</span><span class="sxs-lookup"><span data-stu-id="28aef-684">E</span></span>|<span data-ttu-id="28aef-685">Символ "e" или "E", указывающий, что значение представлено в экспоненциальной (экспоненциальной) нотации.</span><span class="sxs-lookup"><span data-stu-id="28aef-685">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="28aef-686">*экспоненциальные цифры*</span><span class="sxs-lookup"><span data-stu-id="28aef-686">*exponential-digits*</span></span>|<span data-ttu-id="28aef-687">Последовательность цифр от 0 до 9, указывающая показатель степени.</span><span class="sxs-lookup"><span data-stu-id="28aef-687">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="28aef-688">Дополнительные сведения о числовых форматах см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md) .</span><span class="sxs-lookup"><span data-stu-id="28aef-688">For more information about numeric formats, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span>  
  
 <span data-ttu-id="28aef-689"><xref:System.IFormatProvider.GetFormat%2A> `s`Параметр — это<xref:System.Globalization.NumberFormatInfo> реализация, метод которой возвращает объект, предоставляющий сведения о языке и региональных параметрах, используемые для интерпретации формата. <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="28aef-689">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that supplies culture-specific information used in interpreting the format of `s`.</span></span> <span data-ttu-id="28aef-690">Как правило, <xref:System.Globalization.NumberFormatInfo> это объект или <xref:System.Globalization.CultureInfo> .</span><span class="sxs-lookup"><span data-stu-id="28aef-690">Typically, it is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="28aef-691">Если `provider` параметр `null` имеет значение <xref:System.Globalization.NumberFormatInfo> или не может быть получен, используются сведения о форматировании для текущего языка и региональных параметров системы.</span><span class="sxs-lookup"><span data-stu-id="28aef-691">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> cannot be obtained, the formatting information for the current system culture is used.</span></span>  
  
 <span data-ttu-id="28aef-692">Обычно, если передать <xref:System.Double.Parse%2A?displayProperty=nameWithType> методу строку, созданную путем <xref:System.Double.ToString%2A?displayProperty=nameWithType> вызова метода, возвращается исходное <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-692">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="28aef-693">Однако из-за потери точности значения могут не совпадать.</span><span class="sxs-lookup"><span data-stu-id="28aef-693">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="28aef-694">Кроме того, попытка выполнить синтаксический анализ строкового представления <xref:System.Double.MinValue> или <xref:System.Double.MaxValue> вызывает <xref:System.OverflowException>исключение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-694">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="28aef-695">Если в `s` параметре во время операции синтаксического анализа встречается разделитель, а применимые разделители денежных единиц или десятичного числа и групп совпадают, то операция синтаксического анализа предполагает, что разделитель является десятичным разделителем, а не группой. двоеточи.</span><span class="sxs-lookup"><span data-stu-id="28aef-695">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="28aef-696"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>Дополнительные сведения о разделителях см. <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>в разделе <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>,, и <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="28aef-696">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-697">В следующем примере показан обработчик событий нажатия кнопки в веб-форме.</span><span class="sxs-lookup"><span data-stu-id="28aef-697">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="28aef-698">Он использует массив, возвращаемый <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> свойством, чтобы определить языковой стандарт пользователя.</span><span class="sxs-lookup"><span data-stu-id="28aef-698">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="28aef-699">Затем создается экземпляр <xref:System.Globalization.CultureInfo> объекта, соответствующий этому языковому стандарту.</span><span class="sxs-lookup"><span data-stu-id="28aef-699">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="28aef-700">Затем объект, принадлежащий этому <xref:System.Globalization.CultureInfo> объекту, передается <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> методу <xref:System.Double> для преобразования входных данных пользователя в значение. <xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="28aef-700">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Double> value.</span></span>  
  
 [!code-csharp[ParseMethod#2](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#2)]
 [!code-vb[ParseMethod#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aef-701">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-701"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="28aef-702"><paramref name="s" /> не представляет число в допустимом формате.</span><span class="sxs-lookup"><span data-stu-id="28aef-702"><paramref name="s" /> does not represent a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="28aef-703">Параметр <paramref name="s" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-703"><paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Double.ToString" />
        <altmember cref="Overload:System.Double.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="28aef-704">Синтаксический анализ числовых строк в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-704">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Double" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; double" Usage="System.double.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static double Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; double" Usage="System.double.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="28aef-705">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="28aef-705">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="28aef-706">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут присутствовать в параметре <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-706">A bitwise combination of enumeration values that indicate the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="28aef-707">Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Float" /> в сочетании со значением <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-707">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span></span></param>
        <param name="provider"><span data-ttu-id="28aef-708">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" /> в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-708">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="28aef-709">Преобразует строковое представление числа указанного стиля, выраженное в формате, соответствующем определенному языку и региональным параметрам, в эквивалентное ему число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-709">Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</span></span></summary>
        <returns><span data-ttu-id="28aef-710">Число с плавающей запятой двойной точности, которое эквивалентно числовому значению или символу, заданному параметром <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-710">A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-711">Параметр определяет элементы стиля (такие как пробелы, разделители групп разрядов и символы валют), допустимые `s` в параметре для выполнения операции синтаксического анализа. `style`</span><span class="sxs-lookup"><span data-stu-id="28aef-711">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="28aef-712">Он должен представлять собой сочетание битовых флагов из <xref:System.Globalization.NumberStyles> перечисления.</span><span class="sxs-lookup"><span data-stu-id="28aef-712">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="28aef-713">Следующие <xref:System.Globalization.NumberStyles> члены не поддерживаются:</span><span class="sxs-lookup"><span data-stu-id="28aef-713">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="28aef-714"><xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>Параметр может содержать, `provider`или дляязыкаирегиональныхпараметров,заданныхпараметром.<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-714">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`.</span></span> <span data-ttu-id="28aef-715">В зависимости от значения `style`, оно также может принимать форму:</span><span class="sxs-lookup"><span data-stu-id="28aef-715">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="28aef-716">[*WS*] [*$*] [*знак*] [*цифры целой*и дробной части],*целая-цифры*[. [ *дробные цифры*]] [E [*знак*]*экспоненциальные цифры*] [*WS*]</span><span class="sxs-lookup"><span data-stu-id="28aef-716">[*ws*] [*$*] [*sign*][*integral-digits*,]*integral-digits*[.[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="28aef-717">Элементы, заключенные в квадратные скобки ([и]), являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="28aef-717">Elements framed in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="28aef-718">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="28aef-718">The following table describes each element.</span></span>  
  
|<span data-ttu-id="28aef-719">Элемент</span><span class="sxs-lookup"><span data-stu-id="28aef-719">Element</span></span>|<span data-ttu-id="28aef-720">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-720">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="28aef-721">*ws*</span><span class="sxs-lookup"><span data-stu-id="28aef-721">*ws*</span></span>|<span data-ttu-id="28aef-722">Последовательность пробельных символов.</span><span class="sxs-lookup"><span data-stu-id="28aef-722">A series of white-space characters.</span></span> <span data-ttu-id="28aef-723">Пробел может `s` присутствовать в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> флаг, `s` и может <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-723">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|$|<span data-ttu-id="28aef-724">Символ валюты, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-724">A culture-specific currency symbol.</span></span> <span data-ttu-id="28aef-725">Его расположение в строке определяется <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> свойствами и <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-725">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="28aef-726">Символ валюты текущего языка и региональных параметров может отображаться `s` в `style` , если <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-726">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-727">*sign*</span><span class="sxs-lookup"><span data-stu-id="28aef-727">*sign*</span></span>|<span data-ttu-id="28aef-728">Знак отрицательного знака (-) или знак плюс (+).</span><span class="sxs-lookup"><span data-stu-id="28aef-728">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="28aef-729">Знак может `s` присутствовать в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> флаг, `s` и может <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-729">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="28aef-730">Круглые скобки могут использоваться в `s` , чтобы указать отрицательное значение `style` , если <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-730">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-731">*целые числа*</span><span class="sxs-lookup"><span data-stu-id="28aef-731">*integral-digits*</span></span>|<span data-ttu-id="28aef-732">Последовательность цифр от 0 до 9, указывающих целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-732">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="28aef-733">Элемент \*\* с целочисленными цифрами может отсутствовать, если строка содержит элемент *дробной разрядности* .</span><span class="sxs-lookup"><span data-stu-id="28aef-733">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="28aef-734">,</span><span class="sxs-lookup"><span data-stu-id="28aef-734">,</span></span>|<span data-ttu-id="28aef-735">Разделитель групп, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-735">A culture-specific group separator.</span></span> <span data-ttu-id="28aef-736">Символ разделителя групп текущего языка и региональных параметров может отображаться `s` в `style` , если <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> включает флаг</span><span class="sxs-lookup"><span data-stu-id="28aef-736">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>|  
|<span data-ttu-id="28aef-737">.</span><span class="sxs-lookup"><span data-stu-id="28aef-737">.</span></span>|<span data-ttu-id="28aef-738">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-738">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="28aef-739">Символ десятичной запятой текущего языка и региональных параметров может `s` присутствовать в <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> , если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-739">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-740">*Дробные разряды*</span><span class="sxs-lookup"><span data-stu-id="28aef-740">*fractional-digits*</span></span>|<span data-ttu-id="28aef-741">Последовательность цифр от 0 до 9, которая указывает дробную часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-741">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="28aef-742">Дробные цифры могут присутствовать `s` в `style` , <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> если включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-742">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-743">E</span><span class="sxs-lookup"><span data-stu-id="28aef-743">E</span></span>|<span data-ttu-id="28aef-744">Символ "e" или "E", указывающий, что значение представлено в экспоненциальной (экспоненциальной) нотации.</span><span class="sxs-lookup"><span data-stu-id="28aef-744">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="28aef-745">Параметр может представлять число в экспоненциальной нотации, `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> если включает флаг. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-745">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-746">*экспоненциальные цифры*</span><span class="sxs-lookup"><span data-stu-id="28aef-746">*exponential-digits*</span></span>|<span data-ttu-id="28aef-747">Последовательность цифр от 0 до 9, указывающая показатель степени.</span><span class="sxs-lookup"><span data-stu-id="28aef-747">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="28aef-748">Все завершающие символы NUL (U + 0000) в `s` игнорируются операцией синтаксического анализа, независимо от значения `style` аргумента.</span><span class="sxs-lookup"><span data-stu-id="28aef-748">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="28aef-749">Строка с цифрами (которая соответствует <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> стилю) всегда будет успешно проанализирована.</span><span class="sxs-lookup"><span data-stu-id="28aef-749">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="28aef-750">Остальные <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> элементы управляют элементами управления, которые могут присутствовать, но не обязательно должны присутствовать во входной строке.</span><span class="sxs-lookup"><span data-stu-id="28aef-750">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="28aef-751">В следующей таблице показано, как <xref:System.Globalization.NumberStyles> отдельные флаги влияют на элементы, которые могут `s`присутствовать в.</span><span class="sxs-lookup"><span data-stu-id="28aef-751">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="28aef-752">Значение NumberStyles</span><span class="sxs-lookup"><span data-stu-id="28aef-752">NumberStyles value</span></span>|<span data-ttu-id="28aef-753">Элементы, разрешенные в `s` в дополнение к цифрам</span><span class="sxs-lookup"><span data-stu-id="28aef-753">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="28aef-754">Только \*\* элемент с целыми цифрами.</span><span class="sxs-lookup"><span data-stu-id="28aef-754">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="28aef-755">Элементы десятичной запятой (*.*) и *дробные разряды* .</span><span class="sxs-lookup"><span data-stu-id="28aef-755">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="28aef-756">Символ "e" или "E", который указывает на экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-756">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="28aef-757">Этот флаг сам по себе поддерживает значения в виде *цифр*E*цифр*. Дополнительные флаги необходимы для успешного анализа строк с такими элементами, как знаки плюса или минуса и символы десятичной запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-757">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="28aef-758">Элемент *WS* в начале `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-758">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="28aef-759">Элемент *WS* в конце `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-759">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="28aef-760">Элемент *Sign* в начале `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-760">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="28aef-761">Элемент *Sign* в конце `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-761">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="28aef-762">Элемент *Sign* в виде круглых скобок, охватывающих числовое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-762">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="28aef-763">Элемент разделителя тысяч (,).</span><span class="sxs-lookup"><span data-stu-id="28aef-763">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="28aef-764">Элемент Currency ($).</span><span class="sxs-lookup"><span data-stu-id="28aef-764">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="28aef-765">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="28aef-765">All elements.</span></span> <span data-ttu-id="28aef-766">`s` Однако не может представлять шестнадцатеричное число или число в экспоненциальной нотации.</span><span class="sxs-lookup"><span data-stu-id="28aef-766">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="28aef-767">Элемент *WS* в начале или конце `s`, \*\* `s`знак в начале и символ десятичной запятой (.).</span><span class="sxs-lookup"><span data-stu-id="28aef-767">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="28aef-768">`s` Параметр также может использовать экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-768">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="28aef-769">Элементы `ws` ,`sign`, тысячные разделители (,) и десятичные точки (.).</span><span class="sxs-lookup"><span data-stu-id="28aef-769">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="28aef-770">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="28aef-770">All elements.</span></span> <span data-ttu-id="28aef-771">`s` Однако не может представлять шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="28aef-771">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="28aef-772"><xref:System.IFormatProvider.GetFormat%2A> `s`Параметр — это<xref:System.Globalization.NumberFormatInfo> реализация, метод которой возвращает объект, предоставляющий сведения о языке и региональных параметрах, используемые для интерпретации формата. <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="28aef-772">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that supplies culture-specific information used in interpreting the format of `s`.</span></span> <span data-ttu-id="28aef-773">Как правило, <xref:System.Globalization.NumberFormatInfo> это объект или <xref:System.Globalization.CultureInfo> .</span><span class="sxs-lookup"><span data-stu-id="28aef-773">Typically, it is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="28aef-774">Если `provider` параметр `null` имеет значение <xref:System.Globalization.NumberFormatInfo> или не может быть получен, используются сведения о форматировании для текущего языка и региональных параметров системы.</span><span class="sxs-lookup"><span data-stu-id="28aef-774">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> cannot be obtained, the formatting information for the current system culture is used.</span></span>  
  
 <span data-ttu-id="28aef-775">Обычно, если передать <xref:System.Double.Parse%2A?displayProperty=nameWithType> методу строку, созданную путем <xref:System.Double.ToString%2A?displayProperty=nameWithType> вызова метода, возвращается исходное <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-775">Ordinarily, if you pass the <xref:System.Double.Parse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="28aef-776">Однако из-за потери точности значения могут не совпадать.</span><span class="sxs-lookup"><span data-stu-id="28aef-776">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="28aef-777">Кроме того, попытка выполнить синтаксический анализ строкового представления <xref:System.Double.MinValue> или <xref:System.Double.MaxValue> вызывает <xref:System.OverflowException>исключение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-777">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/parse2.cs#3)]
 [!code-vb[System.Double.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/parse2.vb#3)]  
  
 <span data-ttu-id="28aef-778">Если в `s` параметре во время операции синтаксического анализа встречается разделитель, а применимые разделители денежных единиц или десятичного числа и групп совпадают, то операция синтаксического анализа предполагает, что разделитель является десятичным разделителем, а не группой. двоеточи.</span><span class="sxs-lookup"><span data-stu-id="28aef-778">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="28aef-779"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>Дополнительные сведения о разделителях см. <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>в разделе <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>,, и <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="28aef-779">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-780">В следующем примере показано использование <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> метода для назначения нескольких строковых представлений значений `Temperature` температуры объекту.</span><span class="sxs-lookup"><span data-stu-id="28aef-780">The following example illustrates the use of the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to assign several string representations of temperature values to a `Temperature` object.</span></span>  
  
 [!code-csharp[System.Double.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.Parse/cs/Parse3.cs#2)]
 [!code-vb[System.Double.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.Parse/vb/Parse3.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28aef-781">Свойство <paramref name="s" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-781"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="28aef-782">Параметр <paramref name="s" /> не представляет числовое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-782"><paramref name="s" /> does not represent a numeric value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28aef-783"><paramref name="style" /> не является значением <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-783"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="28aef-784">- или -</span><span class="sxs-lookup"><span data-stu-id="28aef-784">-or-</span></span> 
 <span data-ttu-id="28aef-785"><paramref name="style" /> является значением <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-785"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="28aef-786">Параметр <paramref name="s" /> представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-786"><paramref name="s" /> represents a number that is less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Double.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="28aef-787">Синтаксический анализ числовых строк в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-787">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="C#" Value="public const double PositiveInfinity = Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PositiveInfinity = float64(Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Double.PositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const PositiveInfinity As Double  = Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: double PositiveInfinity = Infinity;" />
      <MemberSignature Language="F#" Value="val mutable PositiveInfinity : double" Usage="System.double.PositiveInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>Infinity</MemberValue>
      <Docs>
        <summary><span data-ttu-id="28aef-788">Представляет плюс бесконечность.</span><span class="sxs-lookup"><span data-stu-id="28aef-788">Represents positive infinity.</span></span> <span data-ttu-id="28aef-789">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="28aef-789">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-790">Значение этой константы является результатом деления положительного числа на ноль.</span><span class="sxs-lookup"><span data-stu-id="28aef-790">The value of this constant is the result of dividing a positive number by zero.</span></span>  
  
 <span data-ttu-id="28aef-791">Эта константа возвращается, если результат операции больше <xref:System.Double.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="28aef-791">This constant is returned when the result of an operation is greater than <xref:System.Double.MaxValue>.</span></span>  
  
 <span data-ttu-id="28aef-792">Используйте <xref:System.Double.IsPositiveInfinity%2A> , чтобы определить, является ли значение положительным бесконечностью.</span><span class="sxs-lookup"><span data-stu-id="28aef-792">Use <xref:System.Double.IsPositiveInfinity%2A> to determine whether a value evaluates to positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-793">В следующем примере кода показано использование <xref:System.Double.PositiveInfinity>:</span><span class="sxs-lookup"><span data-stu-id="28aef-793">The following code example illustrates the use of <xref:System.Double.PositiveInfinity>:</span></span>  
  
 [!code-cpp[System.Double#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#10)]
 [!code-csharp[System.Double#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#10)]
 [!code-vb[System.Double#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.IsPositiveInfinity(System.Double)" />
        <altmember cref="M:System.Double.IsInfinity(System.Double)" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-794">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-794">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-795">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-795">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-796"><see langword="true" />, если значение текущего экземпляра не равно нулю; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-796"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-797">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-797">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-798">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-798">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-799">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToBoolean%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-799">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-800">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-800">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-801">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-801">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-802">Значение текущего экземпляра, приведенное к типу <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-802">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-803">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-803">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-804">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-804">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-805">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToByte%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-805">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-806">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-806">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-807">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="28aef-807">This conversion is not supported.</span></span> <span data-ttu-id="28aef-808">При попытке использовать этот метод выбрасывается исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-808">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-809">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="28aef-809">This conversion is not supported.</span></span> <span data-ttu-id="28aef-810">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="28aef-810">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="28aef-811">Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="28aef-811">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-812">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-812">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-813">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="28aef-813">This conversion is not supported.</span></span> <span data-ttu-id="28aef-814">При попытке использовать этот метод возникает исключение <see cref="T:System.InvalidCastException" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-814">Attempting to use this method throws an <see cref="T:System.InvalidCastException" /></span></span></summary>
        <returns><span data-ttu-id="28aef-815">Данное преобразование не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="28aef-815">This conversion is not supported.</span></span> <span data-ttu-id="28aef-816">Возвращаемое значение отсутствует.</span><span class="sxs-lookup"><span data-stu-id="28aef-816">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="28aef-817">Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="28aef-817">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-818">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-818">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-819">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-819">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-820">Значение текущего экземпляра, приведенное к типу <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-820">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-821">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-821">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-822">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-822">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-823">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-823">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-824">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-824">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-825">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-825">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-826">Значение текущего экземпляра, не измененное.</span><span class="sxs-lookup"><span data-stu-id="28aef-826">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-827">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-827">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-828">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-828">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-829">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-829">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-830">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-830">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-831">Значение текущего экземпляра, приведенное к типу <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-831">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-832">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-832">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-833">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-833">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-834">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToInt16%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-834">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-835">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-835">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-836">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-836">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-837">Значение текущего экземпляра, приведенное к типу <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-837">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-838">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-838">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-839">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-839">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-840">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToInt32%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-840">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-841">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-841">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-842">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-842">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-843">Значение текущего экземпляра, приведенное к типу <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-843">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-844">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-844">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-845">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-845">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-846">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToInt64%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-846">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-847">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-847">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-848">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-848">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-849">Значение текущего экземпляра, приведенное к типу <see cref="T:System.SByte" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-849">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-850">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-850">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-851">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-851">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-852">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToSByte%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-852">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-853">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-853">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-854">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-854">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-855">Значение текущего экземпляра, приведенное к типу <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-855">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-856">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-856">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-857">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-857">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-858">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToSingle%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-858">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="28aef-859">Тип, к которому необходимо привести это значение <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-859">The type to which to convert this <see cref="T:System.Double" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="28aef-860">Реализация интерфейса <see cref="T:System.IFormatProvider" />, предоставляющая сведения о формате возвращаемого значения, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="28aef-860">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="28aef-861">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-861">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-862">Значение текущего экземпляра, приведенное к типу <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-862">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-863">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-863">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-864">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-864">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-865">Рекомендуемым альтернативным вариантом является `static` вызов`Shared` метода (в <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="28aef-865">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-866">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-866">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-867">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-867">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-868">Значение текущего экземпляра, приведенное к типу <see cref="T:System.UInt16" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-868">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-869">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-869">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-870">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-870">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-871">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToUInt16%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-871">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-872">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-872">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-873">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-873">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-874">Значение текущего экземпляра, приведенное к типу <see cref="T:System.UInt32" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-874">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-875">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-875">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-876">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-876">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-877">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToUInt32%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-877">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-878">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="28aef-878">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="28aef-879">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-879">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="28aef-880">Значение текущего экземпляра, приведенное к типу <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-880">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-881">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="28aef-881">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28aef-882">Он может использоваться, только если экземпляр <xref:System.Double> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="28aef-882">It can be used only when the <xref:System.Double> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="28aef-883">Рекомендуемым альтернативным вариантом является <xref:System.Convert.ToUInt64%28System.Double%29?displayProperty=nameWithType> вызов метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-883">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aef-884">Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="28aef-884">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="double.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28aef-885">Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="28aef-885">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="28aef-886">Строковое представление значения этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="28aef-886">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-887"><xref:System.Double.ToString> Метод<xref:System.Double> форматирует значение в формате по умолчанию ("G" или "общий") текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-887">The <xref:System.Double.ToString> method formats a <xref:System.Double> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="28aef-888">Если необходимо указать другой формат, точность или язык и региональные параметры, используйте другие перегрузки <xref:System.Double.ToString%2A> метода следующим образом:</span><span class="sxs-lookup"><span data-stu-id="28aef-888">If you want to specify a different format, precision, or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="28aef-889">Использование формата</span><span class="sxs-lookup"><span data-stu-id="28aef-889">To use format</span></span>|<span data-ttu-id="28aef-890">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="28aef-890">For culture</span></span>|<span data-ttu-id="28aef-891">Использование перегрузки</span><span class="sxs-lookup"><span data-stu-id="28aef-891">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="28aef-892">Формат по умолчанию ("G")</span><span class="sxs-lookup"><span data-stu-id="28aef-892">Default ("G") format</span></span>|<span data-ttu-id="28aef-893">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="28aef-893">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="28aef-894">Конкретный формат или точность</span><span class="sxs-lookup"><span data-stu-id="28aef-894">A specific format or precision</span></span>|<span data-ttu-id="28aef-895">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="28aef-895">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
|<span data-ttu-id="28aef-896">Конкретный формат или точность</span><span class="sxs-lookup"><span data-stu-id="28aef-896">A specific format or precision</span></span>|<span data-ttu-id="28aef-897">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="28aef-897">A specific culture</span></span>|<xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="28aef-898">Возвращаемое значение может быть <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>или строкой вида:</span><span class="sxs-lookup"><span data-stu-id="28aef-898">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="28aef-899">[знак] целочисленные цифры [. [ дробные цифры]] [e [знак] экспоненциальные цифры]</span><span class="sxs-lookup"><span data-stu-id="28aef-899">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="28aef-900">Необязательные элементы заключены в квадратные скобки ([и]).</span><span class="sxs-lookup"><span data-stu-id="28aef-900">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="28aef-901">Элементы, содержащие термин "цифры", состоят из ряда числовых символов в диапазоне от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="28aef-901">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="28aef-902">Поддерживаются элементы, перечисленные в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="28aef-902">The elements listed in the following table are supported.</span></span>  
  
|<span data-ttu-id="28aef-903">Элемент</span><span class="sxs-lookup"><span data-stu-id="28aef-903">Element</span></span>|<span data-ttu-id="28aef-904">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-904">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="28aef-905">*sign*</span><span class="sxs-lookup"><span data-stu-id="28aef-905">*sign*</span></span>|<span data-ttu-id="28aef-906">Знак отрицательного или положительного знака.</span><span class="sxs-lookup"><span data-stu-id="28aef-906">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="28aef-907">*целые числа*</span><span class="sxs-lookup"><span data-stu-id="28aef-907">*integral-digits*</span></span>|<span data-ttu-id="28aef-908">Последовательность цифр, указывающих целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-908">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="28aef-909">Целочисленные цифры могут отсутствовать, если есть дробные разряды.</span><span class="sxs-lookup"><span data-stu-id="28aef-909">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="28aef-910">'*.*'</span><span class="sxs-lookup"><span data-stu-id="28aef-910">'*.*'</span></span>|<span data-ttu-id="28aef-911">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-911">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="28aef-912">*Дробные разряды*</span><span class="sxs-lookup"><span data-stu-id="28aef-912">*fractional-digits*</span></span>|<span data-ttu-id="28aef-913">Последовательность цифр, указывающая дробную часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-913">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="28aef-914">"*e*"</span><span class="sxs-lookup"><span data-stu-id="28aef-914">'*e*'</span></span>|<span data-ttu-id="28aef-915">Символ нижнего регистра "e", указывающий экспоненциальную (экспоненциальную) нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-915">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="28aef-916">*экспоненциальные цифры*</span><span class="sxs-lookup"><span data-stu-id="28aef-916">*exponential-digits*</span></span>|<span data-ttu-id="28aef-917">Последовательность цифр, указывающая показатель степени.</span><span class="sxs-lookup"><span data-stu-id="28aef-917">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="28aef-918">Примеры возвращаемых значений: "100", "-123 456 789", "123,45 e + 6", "500", "3,1416", "600", "-0,123" и "-Infinity".</span><span class="sxs-lookup"><span data-stu-id="28aef-918">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="28aef-919">.NET Framework обеспечивает обширную поддержку форматирования, которая подробно описана в следующих разделах форматирования:</span><span class="sxs-lookup"><span data-stu-id="28aef-919">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="28aef-920">Дополнительные сведения о спецификаторах числовых форматов см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-920">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="28aef-921">Дополнительные сведения о форматировании см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-921">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-922">В следующем примере используется метод по <xref:System.Double.ToString?displayProperty=nameWithType> умолчанию для отображения строкового представления <xref:System.Double> количества значений.</span><span class="sxs-lookup"><span data-stu-id="28aef-922">The following example uses the default <xref:System.Double.ToString?displayProperty=nameWithType> method to display the string representations of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Double.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Double.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#1)]  
  
 <span data-ttu-id="28aef-923">В следующем примере показано использование <xref:System.Double.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="28aef-923">The following example illustrates the use of <xref:System.Double.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Double#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double/CPP/doublesample.cpp#3)]
 [!code-csharp[System.Double#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double/CS/doublesample.cs#3)]
 [!code-vb[System.Double#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double/VB/doublesample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="28aef-924">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-924">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="double.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28aef-925">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-925">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28aef-926">Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-926">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="28aef-927">Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-927">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-928"><xref:System.Double.ToString%28System.IFormatProvider%29> Метод<xref:System.Double> форматирует значение в формате по умолчанию ("G" или "общий") указанного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-928">The <xref:System.Double.ToString%28System.IFormatProvider%29> method formats a <xref:System.Double> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="28aef-929">Если необходимо указать другой формат или язык и региональные параметры, используйте другие перегрузки <xref:System.Double.ToString%2A> метода следующим образом:</span><span class="sxs-lookup"><span data-stu-id="28aef-929">If you want to specify a different format or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="28aef-930">Использование формата</span><span class="sxs-lookup"><span data-stu-id="28aef-930">To use format</span></span>|<span data-ttu-id="28aef-931">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="28aef-931">For culture</span></span>|<span data-ttu-id="28aef-932">Использование перегрузки</span><span class="sxs-lookup"><span data-stu-id="28aef-932">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="28aef-933">Формат по умолчанию ("G")</span><span class="sxs-lookup"><span data-stu-id="28aef-933">Default ("G") format</span></span>|<span data-ttu-id="28aef-934">По умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="28aef-934">Default (current)</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="28aef-935">Конкретный формат или точность</span><span class="sxs-lookup"><span data-stu-id="28aef-935">A specific format or precision</span></span>|<span data-ttu-id="28aef-936">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="28aef-936">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
|<span data-ttu-id="28aef-937">Конкретный формат или точность</span><span class="sxs-lookup"><span data-stu-id="28aef-937">A specific format or precision</span></span>|<span data-ttu-id="28aef-938">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="28aef-938">A specific culture</span></span>|<xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="28aef-939">Возвращаемое значение может быть <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>или строкой вида:</span><span class="sxs-lookup"><span data-stu-id="28aef-939">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="28aef-940">[знак] целочисленные цифры [. [ дробные цифры]] [e [знак] экспоненциальные цифры]</span><span class="sxs-lookup"><span data-stu-id="28aef-940">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="28aef-941">Необязательные элементы заключены в квадратные скобки ([и]).</span><span class="sxs-lookup"><span data-stu-id="28aef-941">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="28aef-942">Элементы, содержащие термин "цифры", состоят из ряда числовых символов в диапазоне от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="28aef-942">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="28aef-943">Поддерживаются элементы, перечисленные в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="28aef-943">The elements listed in the following table are supported.</span></span>  
  
|<span data-ttu-id="28aef-944">Элемент</span><span class="sxs-lookup"><span data-stu-id="28aef-944">Element</span></span>|<span data-ttu-id="28aef-945">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-945">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="28aef-946">*sign*</span><span class="sxs-lookup"><span data-stu-id="28aef-946">*sign*</span></span>|<span data-ttu-id="28aef-947">Знак отрицательного или положительного знака.</span><span class="sxs-lookup"><span data-stu-id="28aef-947">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="28aef-948">*целые числа*</span><span class="sxs-lookup"><span data-stu-id="28aef-948">*integral-digits*</span></span>|<span data-ttu-id="28aef-949">Последовательность цифр, указывающих целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-949">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="28aef-950">Целочисленные цифры могут отсутствовать, если есть дробные разряды.</span><span class="sxs-lookup"><span data-stu-id="28aef-950">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="28aef-951">'*.*'</span><span class="sxs-lookup"><span data-stu-id="28aef-951">'*.*'</span></span>|<span data-ttu-id="28aef-952">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-952">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="28aef-953">*Дробные разряды*</span><span class="sxs-lookup"><span data-stu-id="28aef-953">*fractional-digits*</span></span>|<span data-ttu-id="28aef-954">Последовательность цифр, указывающая дробную часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-954">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="28aef-955">"*e*"</span><span class="sxs-lookup"><span data-stu-id="28aef-955">'*e*'</span></span>|<span data-ttu-id="28aef-956">Символ нижнего регистра "e", указывающий экспоненциальную (экспоненциальную) нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-956">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="28aef-957">*экспоненциальные цифры*</span><span class="sxs-lookup"><span data-stu-id="28aef-957">*exponential-digits*</span></span>|<span data-ttu-id="28aef-958">Последовательность цифр, указывающая показатель степени.</span><span class="sxs-lookup"><span data-stu-id="28aef-958">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="28aef-959">Примеры возвращаемых значений: "100", "-123 456 789", "123,45 e + 6", "500", "3,1416", "600", "-0,123" и "-Infinity".</span><span class="sxs-lookup"><span data-stu-id="28aef-959">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="28aef-960">Этот экземпляр форматируется с помощью описателя общего числового формата ("G").</span><span class="sxs-lookup"><span data-stu-id="28aef-960">This instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="28aef-961">.NET Framework обеспечивает обширную поддержку форматирования, которая подробно описана в следующих разделах форматирования:</span><span class="sxs-lookup"><span data-stu-id="28aef-961">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="28aef-962">Дополнительные сведения о спецификаторах числовых форматов см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-962">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="28aef-963">Дополнительные сведения о форматировании см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-963">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="28aef-964">Параметр — это <xref:System.IFormatProvider.GetFormat%2A>реализация, метод которой возвращает объект.<xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="28aef-964">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="28aef-965">Как правило `provider` , <xref:System.Globalization.CultureInfo> является объектом или <xref:System.Globalization.NumberFormatInfo> объектом.</span><span class="sxs-lookup"><span data-stu-id="28aef-965">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="28aef-966">Параметр `provider` предоставляет сведения о языке и региональных параметрах, используемые при форматировании.</span><span class="sxs-lookup"><span data-stu-id="28aef-966">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="28aef-967">Если `provider` параметр `null` имеет<xref:System.Globalization.NumberFormatInfo> значение, возвращаемые значения форматируются с использованием объекта для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-967">If `provider` is `null`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-968">В следующем примере показано строковое представление двух <xref:System.Double> значений с помощью <xref:System.Globalization.CultureInfo> объектов, представляющих различные языки и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="28aef-968">The following example displays the string representation of two <xref:System.Double> values using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Double.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#2)]
 [!code-vb[System.Double.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#2)]  
  
 <span data-ttu-id="28aef-969">В следующем примере показано использование <xref:System.Double.ToString%2A>, <xref:System.String> принимающее параметры и <xref:System.IFormatProvider> .</span><span class="sxs-lookup"><span data-stu-id="28aef-969">The following example illustrates the use of <xref:System.Double.ToString%2A>, taking a <xref:System.String> and an <xref:System.IFormatProvider> as parameters.</span></span>  
  
 [!code-cpp[Double Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#4)]
 [!code-csharp[Double Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#4)]
 [!code-vb[Double Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="28aef-970">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-970">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="double.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="28aef-971">Строка числового формата.</span><span class="sxs-lookup"><span data-stu-id="28aef-971">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="28aef-972">Преобразует числовое значение данного экземпляра в эквивалентное строковое представление с использованием указанного формата.</span><span class="sxs-lookup"><span data-stu-id="28aef-972">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="28aef-973">Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-973">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-974"><xref:System.Double.ToString%28System.String%29> Метод<xref:System.Double> форматирует значение в указанном формате, используя правила текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-974">The <xref:System.Double.ToString%28System.String%29> method formats a <xref:System.Double> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="28aef-975">Если необходимо указать другой формат или язык и региональные параметры, используйте другие перегрузки <xref:System.Double.ToString%2A> метода следующим образом:</span><span class="sxs-lookup"><span data-stu-id="28aef-975">If you want to specify a different format or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="28aef-976">Использование формата</span><span class="sxs-lookup"><span data-stu-id="28aef-976">To use format</span></span>|<span data-ttu-id="28aef-977">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="28aef-977">For culture</span></span>|<span data-ttu-id="28aef-978">Использование перегрузки</span><span class="sxs-lookup"><span data-stu-id="28aef-978">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="28aef-979">Формат по умолчанию ("G")</span><span class="sxs-lookup"><span data-stu-id="28aef-979">Default ("G") format</span></span>|<span data-ttu-id="28aef-980">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="28aef-980">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="28aef-981">Формат по умолчанию ("G")</span><span class="sxs-lookup"><span data-stu-id="28aef-981">Default ("G") format</span></span>|<span data-ttu-id="28aef-982">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="28aef-982">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="28aef-983">Конкретный формат или точность</span><span class="sxs-lookup"><span data-stu-id="28aef-983">A specific format or precision</span></span>|<span data-ttu-id="28aef-984">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="28aef-984">A specific culture</span></span>|<xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="28aef-985">Возвращаемое значение может быть <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>или строковым представлением числа, как указано в `format`.</span><span class="sxs-lookup"><span data-stu-id="28aef-985">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of a number, as specified by `format`.</span></span>  
  
 <span data-ttu-id="28aef-986">`format` Параметр может быть любым допустимым описателем стандартного числового формата, за исключением D и X, а также любого сочетания настраиваемых описателей числового формата.</span><span class="sxs-lookup"><span data-stu-id="28aef-986">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="28aef-987">Если `format` параметр `null` имеет значение или является пустой строкой, возвращаемые значения форматируются с помощью описателя общего числового формата ("G").</span><span class="sxs-lookup"><span data-stu-id="28aef-987">If `format` is `null` or an empty string, the return value is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="28aef-988">.NET Framework обеспечивает обширную поддержку форматирования, которая подробно описана в следующих разделах форматирования:</span><span class="sxs-lookup"><span data-stu-id="28aef-988">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="28aef-989">Дополнительные сведения о спецификаторах числовых форматов см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-989">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="28aef-990">Дополнительные сведения о форматировании см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-990">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="28aef-991">По умолчанию возвращаемое значение содержит только 15 цифр точности, хотя для внутренних целей поддерживается не более 17 цифр.</span><span class="sxs-lookup"><span data-stu-id="28aef-991">By default, the return value only contains 15 digits of precision although a maximum of 17 digits is maintained internally.</span></span> <span data-ttu-id="28aef-992">Если значение этого экземпляра превышает 15 цифр, <xref:System.Double.ToString%2A> возвращает <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> или <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> вместо ожидаемого числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-992">If the value of this instance has greater than 15 digits, <xref:System.Double.ToString%2A> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="28aef-993">Если требуется дополнительная точность, укажите `format` с помощью спецификации формата "G17", которая всегда возвращает 17 разрядов точности или "R", которая возвращает 15 цифр, если число может быть представлено с точностью представлено с максимальной точностью.</span><span class="sxs-lookup"><span data-stu-id="28aef-993">If you require more precision, specify `format` with the "G17" format specification, which always returns 17 digits of precision, or "R", which returns 15 digits if the number can be represented with that precision or 17 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-994">В следующем примере определяется числовое значение и форматируется как денежное значение с помощью строки стандартного числового формата "C", а в качестве числового значения для трех десятичных разрядов используется строка стандартного числового формата "N".</span><span class="sxs-lookup"><span data-stu-id="28aef-994">The following example defines a numeric value and formats it as a currency value by using the "C" standard numeric format string and as a numeric value to three decimal places by using the "N" standard numeric format string.</span></span> <span data-ttu-id="28aef-995">Строки результатов форматируются с помощью соглашений языка и региональных параметров en-US.</span><span class="sxs-lookup"><span data-stu-id="28aef-995">The result strings are formatted by using the conventions of the en-US culture.</span></span> <span data-ttu-id="28aef-996">Дополнительные сведения о строках числового формата см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-996">For more information on numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
 [!code-csharp[System.Double.ToString#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString7.cs#7)]
 [!code-vb[System.Double.ToString#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString7.vb#7)]  
  
 <span data-ttu-id="28aef-997">В следующем примере показано несколько <xref:System.Double> значений с использованием поддерживаемых стандартных описателей числового формата вместе с тремя строками настраиваемого числового формата.</span><span class="sxs-lookup"><span data-stu-id="28aef-997">The following example displays several <xref:System.Double> values using the supported standard numeric format specifiers together with three custom numeric format strings.</span></span> <span data-ttu-id="28aef-998">Одна из этих строк настраиваемого формата показывает, как заполнить <xref:System.Single> значение начальными нулями.</span><span class="sxs-lookup"><span data-stu-id="28aef-998">One of those custom format strings illustrates how to pad a <xref:System.Single> value with leading zeros.</span></span> <span data-ttu-id="28aef-999">Кроме того, в примере используются описатели точности с каждым описателем стандартного формата, за исключением "R".</span><span class="sxs-lookup"><span data-stu-id="28aef-999">In addition, the example uses precision specifiers with each standard format specifier except for "R".</span></span> <span data-ttu-id="28aef-1000">Значения описателей точности находятся в диапазоне от 0 до 3.</span><span class="sxs-lookup"><span data-stu-id="28aef-1000">The values of the precision specifiers range from 0 to 3.</span></span> <span data-ttu-id="28aef-1001">Чтобы преобразовать числовые значения в строки, в примере используются соглашения о форматировании для языка и региональных параметров en-US.</span><span class="sxs-lookup"><span data-stu-id="28aef-1001">To convert the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Double.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double.ToString/cpp/tostring3.cpp#3)]
 [!code-csharp[System.Double.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Double.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="28aef-1002"><paramref name="format" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="28aef-1002"><paramref name="format" /> is invalid.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="28aef-1003">В некоторых случаях для значений <see cref="T:System.Double" />, отформатированных с использованием строки стандартного числового формата "R", не удается успешно выполнить обратное преобразование при компиляции с использованием параметра <see langword="/platform:x64" /> или <see langword="/platform:anycpu" /> и запуска в 64-разрядных системах.</span><span class="sxs-lookup"><span data-stu-id="28aef-1003">In some cases, <see cref="T:System.Double" /> values formatted with the "R" standard numeric format string do not successfully round-trip if compiled using the <see langword="/platform:x64" /> or <see langword="/platform:anycpu" /> switches and run on 64-bit systems.</span></span> <span data-ttu-id="28aef-1004">Чтобы обойти эту проблему, можно форматировать значения <see cref="T:System.Double" /> с помощью строки стандартного числового формата "G17".</span><span class="sxs-lookup"><span data-stu-id="28aef-1004">To work around this problem, you can format <see cref="T:System.Double" /> values by using the "G17" standard numeric format string.</span></span> <span data-ttu-id="28aef-1005">В примере ниже используется строка формата "R" со значением <see cref="T:System.Double" />, для которого не удается выполнить обратное преобразование, а также строка формата "G17" для успешного обратного преобразования исходного значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-1005">The following example uses the "R" format string with a <see cref="T:System.Double" /> value that does not round-trip successfully, and also uses the "G17" format string to successfully round-trip the original value.</span></span>  
  
<span data-ttu-id="28aef-1006">[! код-CSharp[System. Double. ToString # 6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex2.cs#6)] [! код-VB[System. Double. ToString # 6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex2.vb#6)]</span><span class="sxs-lookup"><span data-stu-id="28aef-1006">[!code-csharp[System.Double.ToString#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex2.cs#6)] [!code-vb[System.Double.ToString#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex2.vb#6)]</span></span></para></block>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="28aef-1007">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-1007">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="28aef-1008">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="28aef-1008">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="28aef-1009">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="28aef-1009">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="28aef-1010">Практическое руководство. Добавление к числу начальных нулей.</span><span class="sxs-lookup"><span data-stu-id="28aef-1010">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="double.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="28aef-1011">Строка числового формата.</span><span class="sxs-lookup"><span data-stu-id="28aef-1011">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="28aef-1012">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1012">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28aef-1013">Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1013">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="28aef-1014">Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-1014">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-1015"><xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> Метод<xref:System.Double> форматирует значение в указанном формате указанного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1015">The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture.</span></span> <span data-ttu-id="28aef-1016">Если необходимо указать другой формат или язык и региональные параметры, используйте другие перегрузки <xref:System.Double.ToString%2A> метода следующим образом:</span><span class="sxs-lookup"><span data-stu-id="28aef-1016">If you want to specify a different format or culture, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="28aef-1017">Использование формата</span><span class="sxs-lookup"><span data-stu-id="28aef-1017">To use format</span></span>|<span data-ttu-id="28aef-1018">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="28aef-1018">For culture</span></span>|<span data-ttu-id="28aef-1019">Использование перегрузки</span><span class="sxs-lookup"><span data-stu-id="28aef-1019">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="28aef-1020">Формат по умолчанию ("G")</span><span class="sxs-lookup"><span data-stu-id="28aef-1020">Default ("G") format</span></span>|<span data-ttu-id="28aef-1021">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="28aef-1021">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="28aef-1022">Формат по умолчанию ("G")</span><span class="sxs-lookup"><span data-stu-id="28aef-1022">Default ("G") format</span></span>|<span data-ttu-id="28aef-1023">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="28aef-1023">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="28aef-1024">Конкретный формат или точность</span><span class="sxs-lookup"><span data-stu-id="28aef-1024">A specific format or precision</span></span>|<span data-ttu-id="28aef-1025">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="28aef-1025">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
  
 <span data-ttu-id="28aef-1026">Возвращаемое значение может быть <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>или строковым представлением числа, как указано в `format`.</span><span class="sxs-lookup"><span data-stu-id="28aef-1026">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of a number, as specified by `format`.</span></span>  
  
 <span data-ttu-id="28aef-1027">`format` Параметр может быть любым допустимым описателем стандартного числового формата, за исключением D и X, а также любого сочетания настраиваемых описателей числового формата.</span><span class="sxs-lookup"><span data-stu-id="28aef-1027">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="28aef-1028">Если `format` параметр `null` имеет значение или является пустой строкой, то возвращаемые значения для этого экземпляра форматируются с помощью описателя общего числового формата ("G").</span><span class="sxs-lookup"><span data-stu-id="28aef-1028">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="28aef-1029">.NET Framework обеспечивает обширную поддержку форматирования, которая подробно описана в следующих разделах форматирования:</span><span class="sxs-lookup"><span data-stu-id="28aef-1029">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="28aef-1030">Дополнительные сведения о спецификаторах числовых форматов см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-1030">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="28aef-1031">Дополнительные сведения о форматировании см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-1031">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="28aef-1032">Параметр — это <xref:System.IFormatProvider.GetFormat%2A>реализация, метод которой возвращает объект.<xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="28aef-1032">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="28aef-1033">Как правило `provider` , <xref:System.Globalization.CultureInfo> является объектом или <xref:System.Globalization.NumberFormatInfo> объектом.</span><span class="sxs-lookup"><span data-stu-id="28aef-1033">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="28aef-1034">Параметр `provider` предоставляет сведения о языке и региональных параметрах, используемые при форматировании.</span><span class="sxs-lookup"><span data-stu-id="28aef-1034">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="28aef-1035">Если `provider` параметр `null` имеет<xref:System.Globalization.NumberFormatInfo> значение, возвращаемые значения форматируются с использованием объекта для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1035">If `provider` is `null`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
 <span data-ttu-id="28aef-1036">По умолчанию возвращаемое значение содержит только 15 цифр точности, хотя для внутренних целей поддерживается не более 17 цифр.</span><span class="sxs-lookup"><span data-stu-id="28aef-1036">By default, the return value only contains 15 digits of precision although a maximum of 17 digits is maintained internally.</span></span> <span data-ttu-id="28aef-1037">Если значение этого экземпляра превышает 15 цифр, <xref:System.Double.ToString%2A> возвращает <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> или <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> вместо ожидаемого числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-1037">If the value of this instance has greater than 15 digits, <xref:System.Double.ToString%2A> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="28aef-1038">Если требуется дополнительная точность, укажите `format` с помощью спецификации формата "G17", которая всегда возвращает 17 разрядов точности или "R", которая возвращает 15 цифр, если число может быть представлено с точностью представлено с максимальной точностью.</span><span class="sxs-lookup"><span data-stu-id="28aef-1038">If you require more precision, specify `format` with the "G17" format specification, which always returns 17 digits of precision, or "R", which returns 15 digits if the number can be represented with that precision or 17 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-1039">В следующем примере отображается <xref:System.Double> значение с использованием каждого из поддерживаемых стандартных описателей числового формата для нескольких различных языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1039">The following example displays a <xref:System.Double> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-cpp[System.Double.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Double.ToString/cpp/tostring1.cpp#4)]
 [!code-csharp[System.Double.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Double.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/ToString1.vb#4)]  
  
 <span data-ttu-id="28aef-1040">В следующем примере показано использование <xref:System.Double.ToString%2A>, <xref:System.String> принимающее параметры и <xref:System.IFormatProvider> .</span><span class="sxs-lookup"><span data-stu-id="28aef-1040">The following example illustrates the use of <xref:System.Double.ToString%2A>, taking a <xref:System.String> and an <xref:System.IFormatProvider> as parameters.</span></span>  
  
 [!code-cpp[Double Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Double Example/CPP/source.cpp#4)]
 [!code-csharp[Double Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Double Example/CS/source.cs#4)]
 [!code-vb[Double Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Double Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="28aef-1041">В некоторых случаях для значений <see cref="T:System.Double" />, отформатированных с использованием строки стандартного числового формата "R", не удается успешно выполнить обратное преобразование при компиляции с использованием параметра <see langword="/platform:x64" /> или <see langword="/platform:anycpu" /> и запуска в 64-разрядных системах.</span><span class="sxs-lookup"><span data-stu-id="28aef-1041">In some cases, <see cref="T:System.Double" /> values formatted with the "R" standard numeric format string do not successfully round-trip if compiled using the <see langword="/platform:x64" /> or <see langword="/platform:anycpu" /> switches and run on 64-bit systems.</span></span> <span data-ttu-id="28aef-1042">Чтобы обойти эту проблему, можно форматировать значения <see cref="T:System.Double" /> с помощью строки стандартного числового формата "G17".</span><span class="sxs-lookup"><span data-stu-id="28aef-1042">To work around this problem, you can format <see cref="T:System.Double" /> values by using the "G17" standard numeric format string.</span></span> <span data-ttu-id="28aef-1043">В примере ниже используется строка формата "R" со значением <see cref="T:System.Double" />, для которого не удается выполнить обратное преобразование, а также строка формата "G17" для успешного обратного преобразования исходного значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-1043">The following example uses the "R" format string with a <see cref="T:System.Double" /> value that does not round-trip successfully, and also uses the "G17" format string to successfully round-trip the original value.</span></span>  
  
<span data-ttu-id="28aef-1044">[! код-CSharp[System. Double. ToString # 5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex1.cs#5)] [! код-VB[System. Double. ToString # 5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex1.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="28aef-1044">[!code-csharp[System.Double.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.ToString/cs/roundtripex1.cs#5)] [!code-vb[System.Double.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.ToString/vb/roundtripex1.vb#5)]</span></span></para></block>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="28aef-1045">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-1045">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="28aef-1046">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="28aef-1046">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="28aef-1047">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="28aef-1047">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="28aef-1048">Практическое руководство. Добавление к числу начальных нулей.</span><span class="sxs-lookup"><span data-stu-id="28aef-1048">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="28aef-1049">Пример. Служебная программа форматирования .NET Framework 4</span><span class="sxs-lookup"><span data-stu-id="28aef-1049">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="double.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28aef-1050">Преобразует строковое представление числа в эквивалентное ему число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-1050">Converts the string representation of a number to its double-precision floating-point number equivalent.</span></span> <span data-ttu-id="28aef-1051">Возвращает значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="28aef-1051">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Double.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] double % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.double.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Double" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.String,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] double % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.double.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Double" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="28aef-1052">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="28aef-1052">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="28aef-1053">При возврате этот метод содержит число двойной точности с плавающей запятой, эквивалентное параметру <paramref name="s" />, если преобразование завершилось успешно, или нуль, если оно завершилось неудачно.</span><span class="sxs-lookup"><span data-stu-id="28aef-1053">When this method returns, contains the double-precision floating-point number equivalent of the <paramref name="s" /> parameter, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="28aef-1054">Преобразование завершается сбоем, если значение параметра <paramref name="s" /> равно <see langword="null" /> или <see cref="F:System.String.Empty" />, не является числом допустимого формата или представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-1054">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a valid format, or represents a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span> <span data-ttu-id="28aef-1055">Этот параметр передается неинициализированным; любое значение, первоначально предоставленное в <paramref name="result" />, будет перезаписано.</span><span class="sxs-lookup"><span data-stu-id="28aef-1055">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="28aef-1056">Преобразует строковое представление числа в эквивалентное ему число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-1056">Converts the string representation of a number to its double-precision floating-point number equivalent.</span></span> <span data-ttu-id="28aef-1057">Возвращает значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="28aef-1057">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="28aef-1058">Значение <see langword="true" />, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-1058"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-1059">Эта перегрузка отличается от <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> метода путем возвращения логического значения, которое указывает, завершилась ли операция синтаксического анализа, а не возвращать проанализированное числовое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-1059">This overload differs from the <xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="28aef-1060">Это исключает необходимость использования обработки исключений для проверки <xref:System.FormatException> в случае, `s` если событие является недопустимым и его невозможно успешно проанализировать.</span><span class="sxs-lookup"><span data-stu-id="28aef-1060">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="28aef-1061">Параметр может содержать текущие <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>язык и региональные параметры, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> (сравнение строк с учетом регистра) или строку в формате: `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-1061">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> (the string comparison is case-sensitive), or a string of the form:</span></span>  
  
 <span data-ttu-id="28aef-1062">Протокол писать [целые числа,] целые цифры [. [ дробные цифры]] [e [знак] экспоненциальные цифры] [ws]</span><span class="sxs-lookup"><span data-stu-id="28aef-1062">[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="28aef-1063">Элементы в квадратных скобках являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="28aef-1063">Elements in square brackets are optional.</span></span> <span data-ttu-id="28aef-1064">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="28aef-1064">The following table describes each element.</span></span>  
  
|<span data-ttu-id="28aef-1065">Элемент</span><span class="sxs-lookup"><span data-stu-id="28aef-1065">Element</span></span>|<span data-ttu-id="28aef-1066">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-1066">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="28aef-1067">*ws*</span><span class="sxs-lookup"><span data-stu-id="28aef-1067">*ws*</span></span>|<span data-ttu-id="28aef-1068">Последовательность пробельных символов.</span><span class="sxs-lookup"><span data-stu-id="28aef-1068">A series of white-space characters.</span></span>|  
|<span data-ttu-id="28aef-1069">*sign*</span><span class="sxs-lookup"><span data-stu-id="28aef-1069">*sign*</span></span>|<span data-ttu-id="28aef-1070">Знак отрицательного или положительного знака.</span><span class="sxs-lookup"><span data-stu-id="28aef-1070">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="28aef-1071">*целые числа*</span><span class="sxs-lookup"><span data-stu-id="28aef-1071">*integral-digits*</span></span>|<span data-ttu-id="28aef-1072">Последовательность числовых символов в диапазоне от 0 до 9, которые указывают целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-1072">A series of numeric characters ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="28aef-1073">Целочисленные цифры могут отсутствовать, если есть дробные разряды.</span><span class="sxs-lookup"><span data-stu-id="28aef-1073">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="28aef-1074">*,*</span><span class="sxs-lookup"><span data-stu-id="28aef-1074">*,*</span></span>|<span data-ttu-id="28aef-1075">Символ разделителя группы, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1075">A culture-specific group separator symbol.</span></span>|  
|<span data-ttu-id="28aef-1076">*.*</span><span class="sxs-lookup"><span data-stu-id="28aef-1076">*.*</span></span>|<span data-ttu-id="28aef-1077">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1077">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="28aef-1078">*Дробные разряды*</span><span class="sxs-lookup"><span data-stu-id="28aef-1078">*fractional-digits*</span></span>|<span data-ttu-id="28aef-1079">Последовательность числовых символов в диапазоне от 0 до 9, которые указывают дробную часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-1079">A series of numeric characters ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="28aef-1080">*E*</span><span class="sxs-lookup"><span data-stu-id="28aef-1080">*E*</span></span>|<span data-ttu-id="28aef-1081">Прописная или строчная буква "e", которая указывает на экспоненциальную (экспоненциальную) нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-1081">An uppercase or lowercase character 'e', that indicates exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="28aef-1082">*экспоненциальные цифры*</span><span class="sxs-lookup"><span data-stu-id="28aef-1082">*exponential-digits*</span></span>|<span data-ttu-id="28aef-1083">Последовательность числовых символов в диапазоне от 0 до 9, задающих показатель степени.</span><span class="sxs-lookup"><span data-stu-id="28aef-1083">A series of numeric characters ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="28aef-1084">Дополнительные сведения о числовых форматах см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="28aef-1084">For more information about numeric formats, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="28aef-1085">Параметр интерпретируется с помощью сочетания <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> флагов и <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-1085">The `s` parameter is interpreted by using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="28aef-1086">Это означает, что пробелы и разделители групп разрядов разрешены, а символы валют — нет.</span><span class="sxs-lookup"><span data-stu-id="28aef-1086">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="28aef-1087">Чтобы явно определить элементы (например, символы валют, разделители тысяч и пробелы), которые могут присутствовать в `s`, <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> используйте перегрузку метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-1087">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="28aef-1088">Параметр анализируется с помощью сведений о форматировании <xref:System.Globalization.NumberFormatInfo> в объекте, инициализированном для текущего языка и региональных параметров системы. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-1088">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="28aef-1089">Для получения дополнительной информации см. <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28aef-1089">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="28aef-1090">Чтобы выполнить синтаксический анализ строки, используя сведения о форматировании некоторых других указанных региональных <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> параметров, используйте перегрузку метода.</span><span class="sxs-lookup"><span data-stu-id="28aef-1090">To parse a string using the formatting information of some other specified culture, use the <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="28aef-1091">Обычно, если передать <xref:System.Double.TryParse%2A?displayProperty=nameWithType> методу строку, созданную путем <xref:System.Double.ToString%2A?displayProperty=nameWithType> вызова метода, возвращается исходное <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-1091">Ordinarily, if you pass the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="28aef-1092">Однако из-за потери точности значения могут не совпадать.</span><span class="sxs-lookup"><span data-stu-id="28aef-1092">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="28aef-1093">Кроме того, попытка выполнить синтаксический анализ строкового представления <xref:System.Double.MinValue> или <xref:System.Double.MaxValue> вызывает <xref:System.OverflowException>исключение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-1093">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/tryparse2.cs#3)]
 [!code-vb[System.Double.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/tryparse2.vb#3)]  
  
 <span data-ttu-id="28aef-1094">Если в `s` параметре во время операции синтаксического анализа обнаружен разделитель, а разделители десятичных и групп одинаковы, то операция синтаксического анализа предполагает, что разделитель является десятичным разделителем, а не разделителем групп.</span><span class="sxs-lookup"><span data-stu-id="28aef-1094">If a separator is encountered in the `s` parameter during a parse operation, and the decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="28aef-1095"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>Дополнительные сведения о разделителях см. <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>в разделе <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>,, и <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="28aef-1095">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-1096">В следующем примере <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29> метод используется для преобразования строковых представлений числовых значений в <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="28aef-1096">The following example uses the <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29> method to convert the string representations of numeric values to <xref:System.Double> values.</span></span> <span data-ttu-id="28aef-1097">Предполагается, что en-US является текущим языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="28aef-1097">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Double.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/tryparse1a.cs#1)]
 [!code-vb[System.Double.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/tryparse1a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Double.Parse(System.String)" />
        <altmember cref="M:System.Double.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="28aef-1098">Синтаксический анализ числовых строк в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-1098">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="28aef-1099">Пример. Служебная программа форматирования .NET Framework 4</span><span class="sxs-lookup"><span data-stu-id="28aef-1099">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] double % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.double.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Double" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] double % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.double.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Double" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="28aef-1100">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="28aef-1100">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="28aef-1101">Побитовое сочетание значений <see cref="T:System.Globalization.NumberStyles" />, определяющее разрешенный формат параметра <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-1101">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="28aef-1102">Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Float" /> в сочетании со значением <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-1102">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span></span></param>
        <param name="provider"><span data-ttu-id="28aef-1103">Интерфейс <see cref="T:System.IFormatProvider" /> предоставляет сведения о форматировании параметра <paramref name="s" /> для соответствующего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1103">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="28aef-1104">При возврате этот метод содержит число двойной точности с плавающей запятой, эквивалентное числовому значению или символу, содержащемуся в параметре <paramref name="s" />, если преобразование завершилось успешно, или нуль, если оно завершилось неудачно.</span><span class="sxs-lookup"><span data-stu-id="28aef-1104">When this method returns, contains a double-precision floating-point number equivalent of the numeric value or symbol contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="28aef-1105">Преобразование завершается неудачно, если параметр <paramref name="s" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />, не является значением в формате, совместимом с параметром <paramref name="style" />, представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />, либо если <paramref name="style" /> не является допустимой комбинацией перечисленных констант <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-1105">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />, or if <paramref name="style" /> is not a valid combination of <see cref="T:System.Globalization.NumberStyles" /> enumerated constants.</span></span> <span data-ttu-id="28aef-1106">Этот параметр передается неинициализированным; любое значение, первоначально предоставленное в <paramref name="result" />, будет перезаписано.</span><span class="sxs-lookup"><span data-stu-id="28aef-1106">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="28aef-1107">Преобразует строковое представление числа указанного стиля, выраженное в формате, соответствующем определенному языку и региональным параметрам, в эквивалентное ему число двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-1107">Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</span></span> <span data-ttu-id="28aef-1108">Возвращает значение, указывающее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="28aef-1108">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="28aef-1109">Значение <see langword="true" />, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-1109"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28aef-1110">Метод похож на <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> метод, за исключением того, что этот метод не создает исключение в случае сбоя преобразования. <xref:System.Double.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="28aef-1110">The <xref:System.Double.TryParse%2A> method is like the <xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except this method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="28aef-1111">Если преобразование выполнено, возвращается значение `true` , `result` а для параметра задается результат преобразования.</span><span class="sxs-lookup"><span data-stu-id="28aef-1111">If the conversion succeeds, the return value is `true` and the `result` parameter is set to the outcome of the conversion.</span></span> <span data-ttu-id="28aef-1112">Если преобразование завершается неудачно, возвращается `false` значение, `result` а параметр устанавливается в нуль.</span><span class="sxs-lookup"><span data-stu-id="28aef-1112">If the conversion fails, the return value is `false` and the `result` parameter is set to zero.</span></span> <span data-ttu-id="28aef-1113">Это избавляет от необходимости использовать обработку исключений для проверки <xref:System.FormatException> в случае, `s` если событие является недопустимым и не может быть успешно проанализировано.</span><span class="sxs-lookup"><span data-stu-id="28aef-1113">This eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="28aef-1114">Параметр определяет допустимый формат `s` параметра для выполнения операции синтаксического анализа. `style`</span><span class="sxs-lookup"><span data-stu-id="28aef-1114">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="28aef-1115">Он должен представлять собой сочетание битовых флагов из <xref:System.Globalization.NumberStyles> перечисления.</span><span class="sxs-lookup"><span data-stu-id="28aef-1115">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="28aef-1116">Следующие <xref:System.Globalization.NumberStyles> члены не поддерживаются:</span><span class="sxs-lookup"><span data-stu-id="28aef-1116">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="28aef-1117"><xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>Параметр может содержать, `provider`или дляязыкаирегиональныхпараметров,указанныхв<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-1117">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture indicated by `provider`.</span></span> <span data-ttu-id="28aef-1118">Кроме того, в зависимости от значения `style` `s` параметр может включать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="28aef-1118">In addition, depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="28aef-1119">Протокол [$] писать [целые числа,] целочисленные цифры [. дробные цифры] [e [знак] экспоненциальные цифры] [ws]</span><span class="sxs-lookup"><span data-stu-id="28aef-1119">[ws] [$] [sign][integral-digits,]integral-digits[.fractional-digits][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="28aef-1120">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="28aef-1120">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="28aef-1121">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="28aef-1121">The following table describes each element.</span></span>  
  
|<span data-ttu-id="28aef-1122">Элемент</span><span class="sxs-lookup"><span data-stu-id="28aef-1122">Element</span></span>|<span data-ttu-id="28aef-1123">Описание</span><span class="sxs-lookup"><span data-stu-id="28aef-1123">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="28aef-1124">*ws*</span><span class="sxs-lookup"><span data-stu-id="28aef-1124">*ws*</span></span>|<span data-ttu-id="28aef-1125">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="28aef-1125">Optional white space.</span></span> <span data-ttu-id="28aef-1126">Пробелы могут присутствовать в начале `s` , если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-1126">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="28aef-1127">Он может находиться в конце `s` , если `style` включает <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-1127">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="28aef-1128">Символ валюты, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1128">A culture-specific currency symbol.</span></span> <span data-ttu-id="28aef-1129">Его <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> расположение в строке определяется свойствами <xref:System.Globalization.NumberFormatInfo> или <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> объекта, возвращаемыми <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> методом `provider` параметра.</span><span class="sxs-lookup"><span data-stu-id="28aef-1129">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="28aef-1130">Символ валюты может отображаться в `s` , <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-1130">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-1131">*sign*</span><span class="sxs-lookup"><span data-stu-id="28aef-1131">*sign*</span></span>|<span data-ttu-id="28aef-1132">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="28aef-1132">An optional sign.</span></span> <span data-ttu-id="28aef-1133">Знак может `s` присутствовать в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> флаг, `s` и может <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-1133">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="28aef-1134">Круглые скобки могут использоваться в `s` , чтобы указать отрицательное значение `style` , если <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-1134">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-1135">*целые числа*</span><span class="sxs-lookup"><span data-stu-id="28aef-1135">*integral-digits*</span></span>|<span data-ttu-id="28aef-1136">Последовательность цифр от 0 до 9, указывающих целую часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-1136">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="28aef-1137">Целочисленные цифры могут отсутствовать, если есть дробные разряды.</span><span class="sxs-lookup"><span data-stu-id="28aef-1137">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="28aef-1138">*,*</span><span class="sxs-lookup"><span data-stu-id="28aef-1138">*,*</span></span>|<span data-ttu-id="28aef-1139">Символ разделителя тысяч, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1139">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="28aef-1140">Символ разделителя тысяч текущего языка и региональных параметров может отображаться `s` в `style` , если <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-1140">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-1141">*.*</span><span class="sxs-lookup"><span data-stu-id="28aef-1141">*.*</span></span>|<span data-ttu-id="28aef-1142">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1142">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="28aef-1143">Символ десятичной запятой текущего языка и региональных параметров может `s` присутствовать в <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> , если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-1143">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-1144">*Дробные разряды*</span><span class="sxs-lookup"><span data-stu-id="28aef-1144">*fractional-digits*</span></span>|<span data-ttu-id="28aef-1145">Последовательность цифр от 0 до 9, которая указывает дробную часть числа.</span><span class="sxs-lookup"><span data-stu-id="28aef-1145">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="28aef-1146">Дробные цифры могут присутствовать `s` в `style` , <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> если включает флаг.</span><span class="sxs-lookup"><span data-stu-id="28aef-1146">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-1147">*e*</span><span class="sxs-lookup"><span data-stu-id="28aef-1147">*e*</span></span>|<span data-ttu-id="28aef-1148">Символ e или e, который указывает, что `s` может представлять число, используя экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-1148">The e or E character, which indicates that `s` can represent a number using exponential notation.</span></span> <span data-ttu-id="28aef-1149">Параметр может представлять число в экспоненциальной нотации, <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> если стиль включает флаг. `s`</span><span class="sxs-lookup"><span data-stu-id="28aef-1149">The `s` parameter can represent a number in exponential notation if style includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="28aef-1150">*экспоненциальные цифры*</span><span class="sxs-lookup"><span data-stu-id="28aef-1150">*exponential-digits*</span></span>|<span data-ttu-id="28aef-1151">Последовательность цифр от 0 до 9, указывающая показатель степени.</span><span class="sxs-lookup"><span data-stu-id="28aef-1151">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="28aef-1152">Все завершающие символы NUL (U + 0000) в `s` игнорируются операцией синтаксического анализа, независимо от значения `style` аргумента.</span><span class="sxs-lookup"><span data-stu-id="28aef-1152">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="28aef-1153">Строка с цифрами (которая соответствует <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> стилю) всегда будет успешно проанализирована.</span><span class="sxs-lookup"><span data-stu-id="28aef-1153">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="28aef-1154">Остальные <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> элементы управляют элементами, которые могут быть, но не обязательно присутствовать во входной строке.</span><span class="sxs-lookup"><span data-stu-id="28aef-1154">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="28aef-1155">В следующей таблице показано, как <xref:System.Globalization.NumberStyles> отдельные флаги влияют на элементы, которые могут `s`присутствовать в.</span><span class="sxs-lookup"><span data-stu-id="28aef-1155">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="28aef-1156">Значение NumberStyles</span><span class="sxs-lookup"><span data-stu-id="28aef-1156">NumberStyles value</span></span>|<span data-ttu-id="28aef-1157">Элементы, разрешенные в s в дополнение к цифрам</span><span class="sxs-lookup"><span data-stu-id="28aef-1157">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="28aef-1158">Только \*\* элемент с целыми цифрами.</span><span class="sxs-lookup"><span data-stu-id="28aef-1158">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="28aef-1159">Языковой элемент *.*</span><span class="sxs-lookup"><span data-stu-id="28aef-1159">The *.*</span></span> <span data-ttu-id="28aef-1160">и *дробные разрядные* элементы.</span><span class="sxs-lookup"><span data-stu-id="28aef-1160">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="28aef-1161">`s` Параметр также может использовать экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-1161">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="28aef-1162">Этот флаг сам по себе поддерживает значения в виде экспоненциальных разрядов\*\* E- *цифр*. Дополнительные флаги необходимы для успешного анализа строк в экспоненциальной нотации с такими элементами, как положительные или отрицательные знаки и символы десятичной запятой.</span><span class="sxs-lookup"><span data-stu-id="28aef-1162">This flag by itself supports values in the form *integral-digits*E*exponential-digits*; additional flags are needed to successfully parse strings in exponential notation with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="28aef-1163">Элемент *WS* в начале `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-1163">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="28aef-1164">Элемент *WS* в конце `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-1164">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="28aef-1165">Элемент *Sign* в начале `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-1165">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="28aef-1166">Элемент *Sign* в конце `s`.</span><span class="sxs-lookup"><span data-stu-id="28aef-1166">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="28aef-1167">Элемент *Sign* в виде круглых скобок, охватывающих числовое значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-1167">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="28aef-1168">Элемент *,* .</span><span class="sxs-lookup"><span data-stu-id="28aef-1168">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="28aef-1169">*$* Элемент.</span><span class="sxs-lookup"><span data-stu-id="28aef-1169">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="28aef-1170">Все.</span><span class="sxs-lookup"><span data-stu-id="28aef-1170">All.</span></span> <span data-ttu-id="28aef-1171">`s` Параметр не может представлять шестнадцатеричное число или число в экспоненциальной нотации.</span><span class="sxs-lookup"><span data-stu-id="28aef-1171">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="28aef-1172">Элемент *WS* в начале или конце `s` `s`, *знак* в начале и *.*</span><span class="sxs-lookup"><span data-stu-id="28aef-1172">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="28aef-1173">знак.</span><span class="sxs-lookup"><span data-stu-id="28aef-1173">symbol.</span></span> <span data-ttu-id="28aef-1174">`s` Параметр также может использовать экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="28aef-1174">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="28aef-1175">Элементы `ws` ,`sign`, тысячные разделители (*,)* и десятичные точки (*.*).</span><span class="sxs-lookup"><span data-stu-id="28aef-1175">The `ws`, `sign`, thousands separator (*,),* and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="28aef-1176">Все стили, кроме `s` , не могут представлять шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="28aef-1176">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="28aef-1177">Параметр является <xref:System.Globalization.CultureInfo> реализацией, например объектом или.<xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="28aef-1177">The `provider` parameter is a <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="28aef-1178">Параметр `provider` предоставляет сведения, зависящие от языка и региональных параметров, используемые при анализе.</span><span class="sxs-lookup"><span data-stu-id="28aef-1178">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="28aef-1179">Если `provider` параметр `null` имеет значение <xref:System.Globalization.NumberFormatInfo> или объект не может быть получен, используется информация о форматировании для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1179">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained, the format information for the current culture is used.</span></span>  
  
 <span data-ttu-id="28aef-1180">Преобразование завершается неудачей, `null` если `s` параметр имеет значение или не является `provider` числовым значением, параметр <xref:System.Globalization.NumberFormatInfo> не возвращает объект, `style` или параметр не является сочетанием битовых флагов <xref:System.Globalization.NumberStyles> из цело.</span><span class="sxs-lookup"><span data-stu-id="28aef-1180">The conversion fails if the `s` parameter is `null` or not a numeric value, the `provider` parameter does not yield a <xref:System.Globalization.NumberFormatInfo> object, or the `style` parameter is not a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="28aef-1181">Обычно, если передать <xref:System.Double.TryParse%2A?displayProperty=nameWithType> методу строку, созданную путем <xref:System.Double.ToString%2A?displayProperty=nameWithType> вызова метода, возвращается исходное <xref:System.Double> значение.</span><span class="sxs-lookup"><span data-stu-id="28aef-1181">Ordinarily, if you pass the <xref:System.Double.TryParse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Double> value is returned.</span></span> <span data-ttu-id="28aef-1182">Однако из-за потери точности значения могут не совпадать.</span><span class="sxs-lookup"><span data-stu-id="28aef-1182">However, because of a loss of precision, the values may not be equal.</span></span> <span data-ttu-id="28aef-1183">Кроме того, попытка выполнить синтаксический анализ строкового представления <xref:System.Double.MinValue> или <xref:System.Double.MaxValue> вызывает <xref:System.OverflowException>исключение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="28aef-1183">In addition, attempting to parse the string representation of either <xref:System.Double.MinValue> or <xref:System.Double.MaxValue> throws an <xref:System.OverflowException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Double.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/tryparse2.cs#3)]
 [!code-vb[System.Double.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/tryparse2.vb#3)]  
  
 <span data-ttu-id="28aef-1184">Если в `s` параметре во время операции синтаксического анализа встречается разделитель, а применимые разделители денежных единиц или десятичного числа и групп совпадают, то операция синтаксического анализа предполагает, что разделитель является десятичным разделителем, а не группой. двоеточи.</span><span class="sxs-lookup"><span data-stu-id="28aef-1184">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="28aef-1185"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>Дополнительные сведения о разделителях см. <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>в разделе <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>,, и <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span><span class="sxs-lookup"><span data-stu-id="28aef-1185">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28aef-1186">В следующем примере демонстрируется использование <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> метода для синтаксического анализа строкового представления чисел с определенным стилем и форматирования с использованием соглашений определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="28aef-1186">The following example demonstrates the use of the <xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType> method to parse the string representation of numbers that have a particular style and are formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Double.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Double.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Double.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Double.TryParse/vb/TryParse1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28aef-1187"><paramref name="style" /> не является значением <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-1187"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="28aef-1188">- или -</span><span class="sxs-lookup"><span data-stu-id="28aef-1188">-or-</span></span> 
 <span data-ttu-id="28aef-1189"><paramref name="style" /> включает значение <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</span><span class="sxs-lookup"><span data-stu-id="28aef-1189"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="M:System.Double.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="28aef-1190">Синтаксический анализ числовых строк в .NET</span><span class="sxs-lookup"><span data-stu-id="28aef-1190">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
