<Type Name="FormatException" FullName="System.FormatException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07b6383d64284fcc3b4b1f5e1337e6777bd384aa" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75173081" /></Metadata><TypeSignature Language="C#" Value="public class FormatException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FormatException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.FormatException" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatException : SystemException" />
  <TypeSignature Language="F#" Value="type FormatException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Исключение, которое возникает в случае, если формат аргумента недопустим или <see href="https://docs.microsoft.com/dotnet/standard/base-types/composite-formatting">строка составного формата</see> построена неправильно.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исключение <xref:System.FormatException> может быть вызвано одной из следующих причин:  
  
-   При вызове метода, который преобразует строку в другой тип данных, строка не соответствует требуемому шаблону. Обычно это происходит при вызове некоторых методов класса <xref:System.Convert> и методов `Parse` и `ParseExact` некоторых типов.  
  
     В большинстве случаев, особенно если Преобразуемая строка является входной пользователем или считывается из файла, следует использовать блок `try/catch` и обработайте <xref:System.FormatException> исключение, если преобразование завершилось неудачно. Также можно заменить вызов метода преобразования вызовом метода `TryParse` или `TryParseExact`, если он существует. Однако <xref:System.FormatException> исключение, возникающее при попытке проанализировать стандартную или жестко заданную строку, указывает на ошибку программы. В этом случае следует исправить ошибку, а не обрабатывайте исключение.  
  
     Преобразование строки в следующие типы в пространстве имен <xref:System> может вызвать исключение <xref:System.FormatException>:  
  
    -   <xref:System.Boolean>. Для методов <xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType> и <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> требуется, чтобы строка была преобразована в значение "true", "true", "false" или "false". Любое другое значение вызывает исключение <xref:System.FormatException>.  
  
    -   <xref:System.DateTime> и <xref:System.DateTimeOffset>. Все данные даты и времени обрабатываются на основе соглашений о форматировании для определенного языка и региональных параметров: язык и региональные параметры текущего потока (или, в некоторых случаях, культура текущего домена приложения), инвариантный язык и региональные параметры. При вызове методов <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> данные даты и времени должны также *точно* соответствовать шаблону, заданному одним или несколькими [строками стандартного формата](~/docs/standard/base-types/standard-date-and-time-format-strings.md) или [строками настраиваемого формата](~/docs/standard/base-types/custom-date-and-time-format-strings.md) , которые предоставляются в качестве аргументов в вызове метода. Если он не соответствует ожидаемому шаблону, зависящему от языка и региональных параметров, возникает исключение <xref:System.FormatException>. Это означает, что данные даты и времени, сохраненные в формате, зависящем от языка и региональных параметров, в одной системе могут быть успешно проанализированы в другой системе.  
  
         Дополнительные сведения о синтаксическом анализе даты и времени см. в разделе [синтаксический анализ строк даты и времени](~/docs/standard/base-types/parsing-datetime.md) и документация для метода, вызвавшего исключение.  
  
    -   **Идентификаторы GUID.** Строковое представление GUID должно состоять из 32 шестнадцатеричных цифр (0 – F) и должно быть в одном из пяти выходных форматов, выводимых методом <xref:System.Guid.ToString%2A?displayProperty=nameWithType>. Дополнительные сведения см. в описании метода <xref:System.Guid.Parse%2A?displayProperty=nameWithType>.  
  
    -   **Числовые типы, включая все целые числа со знаком, целые числа без знака и типы с плавающей запятой.** Анализируемая строка должна состоять из латинских цифр 0-9. Допускается также использование положительных или отрицательных знаков, разделителей групп и символов валюты. Попытка выполнить синтаксический анализ строки, которая содержит любой другой символ, всегда вызывает исключение <xref:System.FormatException>.  
  
         Все числовые строки обрабатываются на основе соглашений о форматировании для определенного языка и региональных параметров: язык и региональные параметры текущего потока (или, в некоторых случаях, культура текущего домена приложения), инвариантный язык и региональные параметры. В результате числовая строка, проанализированная с использованием соглашений одного языка и региональных параметров, может завершиться ошибкой при использовании соглашений другого.  
  
         Дополнительные сведения о синтаксическом анализе числовых строк см. в разделе [синтаксический анализ числовых строк](~/docs/standard/base-types/parsing-numeric.md) и документация для конкретного метода, вызвавшего исключение.  
  
    -   **Интервалы времени.** Анализируемая строка должна быть в неизменном формате с учетом языка и региональных параметров или в формате, зависящем от языка и региональных параметров (или, в некоторых случаях, языка и региональных параметров текущего приложения), инвариантного языка и региональных параметров. Если строка не находится в соответствующем формате или, по крайней мере, компоненты дней, часов и минут интервала времени отсутствуют, метод анализа вызывает исключение <xref:System.FormatException>. Дополнительные сведения см. в документации по методу <xref:System.TimeSpan> синтаксического анализа, вызвавшему исключение.  
  
-   Тип реализует интерфейс <xref:System.IFormattable>, который поддерживает строки формата, определяющие, как объект преобразуется в строковое представление, и используется недопустимая строка формата. Это наиболее распространенная операция форматирования. В следующем примере строка стандартного формата "Q" используется в строке составного формата для форматирования числа. Однако "Q" не является допустимой [строкой стандартного формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
     [!code-csharp[System.FormatException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable1.cs#7)]
     [!code-vb[System.FormatException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable1.vb#7)]  
  
     Это исключение возникает из-за ошибки в коде. Чтобы исправить ошибку, либо удалите строку формата, либо замените допустимый. В следующем примере ошибка исправляется путем замены недопустимой строки формата строкой формата "C" (Currency).  
  
     [!code-csharp[System.FormatException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable2.cs#8)]
     [!code-vb[System.FormatException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable2.vb#8)]  
  
     <xref:System.FormatException> исключение также может создаваться методами синтаксического анализа, такими как <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> и <xref:System.Guid.ParseExact%2A?displayProperty=nameWithType>, для которых требуется синтаксический анализ строки для точного соответствия шаблону, заданному строкой формата. В следующем примере предполагается, что строковое представление идентификатора GUID соответствует шаблону, заданному строкой стандартного формата "G". Однако реализация <xref:System.IFormattable> структуры <xref:System.Guid> не поддерживает строку формата "G".  
  
     [!code-csharp[System.FormatException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable3.cs#9)]
     [!code-vb[System.FormatException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable3.vb#9)]  
  
     Это исключение также приводит к ошибке в коде. Чтобы исправить его, вызовите метод синтаксического анализа, который не требует точного формата, например <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> или <xref:System.Guid.Parse%2A?displayProperty=nameWithType>, или замените допустимую строку формата. В следующем примере ошибка исправляется путем вызова метода <xref:System.Guid.Parse%2A?displayProperty=nameWithType>.  
  
     [!code-csharp[System.FormatException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable4.cs#10)]
     [!code-vb[System.FormatException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable4.vb#10)]  
  
-   Один или несколько индексов элементов формата в [строке составного формата](~/docs/standard/base-types/composite-formatting.md) больше, чем индексы элементов в списке объектов или массиве параметров. В следующем примере самый крупный индекс элемента формата в строке форматирования равен 3. Поскольку индексы элементов в списке объектов отсчитываются от нуля, эта строка формата потребует, чтобы список объектов имел четыре элемента. Вместо этого он содержит только три, `dat`, `temp`и `scale`, поэтому код приводит к возникновению исключения <xref:System.FormatException> во время выполнения:.  
  
     [!code-csharp[System.FormatException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example1.cs#1)]
     [!code-vb[System.FormatException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example1.vb#1)]  
  
     В этом случае исключение <xref:System.FormatException> является результатом ошибки разработчика. Его следует исправить, а не обрабатывать в блоке `try/catch`, убедившись, что каждый элемент в списке объектов соответствует индексу элемента форматирования. Чтобы исправить этот пример, измените индекс второго элемента форматирования, чтобы он ссылался на переменную `dat`, и уменьшите индекс каждого последующего элемента форматирования на единицу.  
  
     [!code-csharp[System.FormatException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example2.cs#2)]
     [!code-vb[System.FormatException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example2.vb#2)]  
  
-   Строка составного формата не имеет правильного формата. В этом случае исключение <xref:System.FormatException> всегда является результатом ошибки разработчика. Его следует исправить, а не обрабатывать в блоке `try/catch`.  
  
     При попытке включить в строку литеральные скобки, как показано в следующем примере, вызовет исключение.  
  
     [!code-csharp[System.String.Format#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#23)]
     [!code-vb[System.String.Format#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#23)]  
  
     Рекомендуемый способ включения литеральных скобок в строку составного формата состоит в том, чтобы включить их в список объектов и использовать элементы форматирования для вставки их в результирующую строку. Например, можно изменить предыдущую строку составного формата, как показано здесь.  
  
     [!code-csharp[System.String.Format#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#24)]
     [!code-vb[System.String.Format#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#24)]  
  
     Исключение также создается, если строка формата содержит опечатку. Следующий вызов метода <xref:System.String.Format%2A?displayProperty=nameWithType> опускает закрывающую фигурную скобку и пары открывающих фигурных скобок с закрывающей квадратной скобкой.  
  
     [!code-csharp[System.FormatException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#3)]
     [!code-vb[System.FormatException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#3)]  
  
     Чтобы исправить ошибку, убедитесь, что все открывающие и закрывающие фигурные скобки соответствуют.  
  
     [!code-csharp[System.FormatException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#4)]
     [!code-vb[System.FormatException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#4)]  
  
-   Вы указали список объектов в методе составного форматирования как строго типизированный массив параметров, а исключение <xref:System.FormatException> указывает, что индекс одного или нескольких элементов формата превышает число аргументов в списке объектов. Это происходит потому, что явное преобразование между типами массивов не существует, поэтому компилятор обрабатывает массив как единственный аргумент, а не как массив параметров. Например, следующий вызов метода <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> вызывает исключение <xref:System.FormatException>, хотя самый верхний индекс элементов формата — 3, а массив параметров типа <xref:System.Int32> имеет четыре элемента.  
  
     [!code-csharp[System.FormatException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa1.cs#5)]
     [!code-vb[System.FormatException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa1.vb#5)]  
  
     Вместо обработки этого исключения следует устранить его причину. Поскольку ни Visual Basic, C# ни не могут преобразовывать массив целых чисел в массив объектов, необходимо выполнить преобразование самостоятельно перед вызовом метода составного форматирования. В следующем примере показана одна реализация.  
  
     [!code-csharp[System.FormatException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa2.cs#6)]
     [!code-vb[System.FormatException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa2.vb#6)]  
  
 <xref:System.FormatException> использует COR_E_FORMAT HRESULT, значение которого равно 0x80131537.  
  
 Класс <xref:System.FormatException> является производным от <xref:System.Exception> и не добавляет уникальных членов. Список начальных значений свойств для экземпляра <xref:System.FormatException>, см. в разделе <xref:System.FormatException.%23ctor%2A> конструкторы.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">Обработка и создание исключений</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.FormatException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.FormatException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует свойство <xref:System.Exception.Message%2A> нового экземпляра, сопоставляя с ним системное сообщение, описывающее ошибку, например "Недопустимый формат". В этом сообщении учитывается текущий язык и региональные параметры системы.  
  
 В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.FormatException>.  
  
|Свойство|Значение|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Пустая ссылка (`Nothing` в Visual Basic).|  
|<xref:System.Exception.Message%2A>|Локализованная строка сообщения об ошибке.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new FormatException : string -&gt; FormatException" Usage="new System.FormatException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение с описанием ошибки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.FormatException" /> с указанным сообщением об ошибке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует свойство <xref:System.Exception.Message%2A?displayProperty=nameWithType> нового исключения с помощью параметра `message`. Содержимое параметра `message` должно быть понятным пользователю. Для гарантированной локализации этой строки для текущей системной культуры необходимы сведения о том, кто вызывает этот конструктор.  
  
 В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.FormatException>.  
  
|Свойство|Значение|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Пустая ссылка (`Nothing` в Visual Basic).|  
|<xref:System.Exception.Message%2A>|Строка сообщения об ошибке.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormatException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormatException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new FormatException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; FormatException" Usage="new System.FormatException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info">Объект, содержащий сериализованные данные объекта.</param>
        <param name="context">Контекстные данные об источнике или назначении.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.FormatException" /> с указанными сериализованными данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор вызывается во время десериализации для восстановления объекта исключения, переданного в потоке.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new FormatException : string * Exception -&gt; FormatException" Usage="new System.FormatException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
        <param name="innerException">Исключение, ставшее причиной текущего исключения. Если параметр <paramref name="innerException" /> не является указателем null (<see langword="Nothing" /> в Visual Basic), то текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.FormatException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исключение, созданное как прямой результат предыдущего исключения, должно содержать в свойстве <xref:System.Exception.InnerException%2A> ссылку на предыдущее исключение. Свойство <xref:System.Exception.InnerException%2A> возвращает то же значение, которое передается конструктору, или пустую ссылку (`Nothing` в Visual Basic), если свойство <xref:System.Exception.InnerException%2A> не предоставляет конструктору значение внутреннего исключения.  
  
 В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.FormatException>.  
  
|Свойство|Значение|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ссылка на внутреннее исключение.|  
|<xref:System.Exception.Message%2A>|Строка сообщения об ошибке.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">Обработка и создание исключений</related>
      </Docs>
    </Member>
  </Members>
</Type>
