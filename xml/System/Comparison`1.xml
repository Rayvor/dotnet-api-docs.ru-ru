<Type Name="Comparison&lt;T&gt;" FullName="System.Comparison&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e382930813c3e352899d10ed4e0bfc61a6bfe1cb" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75043237" /></Metadata><TypeSignature Language="C#" Value="public delegate int Comparison&lt;in T&gt;(T x, T y);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Comparison`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Comparison`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Comparison(Of In T)(x As T, y As T) As Integer " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate int Comparison(T x, T y);" />
  <TypeSignature Language="F#" Value="type Comparison&lt;'T&gt; = delegate of 'T * 'T -&gt; int" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="x" Type="T" />
    <Parameter Name="y" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Int32</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T"><span data-ttu-id="d7974-101">Тип сравниваемых объектов.</span><span class="sxs-lookup"><span data-stu-id="d7974-101">The type of the objects to compare.</span></span></typeparam>
    <param name="x"><span data-ttu-id="d7974-102">Первый сравниваемый объект.</span><span class="sxs-lookup"><span data-stu-id="d7974-102">The first object to compare.</span></span></param>
    <param name="y"><span data-ttu-id="d7974-103">Второй сравниваемый объект.</span><span class="sxs-lookup"><span data-stu-id="d7974-103">The second object to compare.</span></span></param>
    <summary><span data-ttu-id="d7974-104">Представляет метод, который сравнивает два объекта одного типа.</span><span class="sxs-lookup"><span data-stu-id="d7974-104">Represents the method that compares two objects of the same type.</span></span></summary>
    <returns><span data-ttu-id="d7974-105">Знаковое целое число, которое определяет относительные значения параметров <paramref name="x" /> и <paramref name="y" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7974-105">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d7974-106">Значение</span><span class="sxs-lookup"><span data-stu-id="d7974-106">Value</span></span> 
 </term><description> <span data-ttu-id="d7974-107">Значение</span><span class="sxs-lookup"><span data-stu-id="d7974-107">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d7974-108">Меньше 0</span><span class="sxs-lookup"><span data-stu-id="d7974-108">Less than 0</span></span> 
 </term><description><span data-ttu-id="d7974-109">Значение <paramref name="x" /> меньше <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="d7974-109"><paramref name="x" /> is less than <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7974-110">0</span><span class="sxs-lookup"><span data-stu-id="d7974-110">0</span></span> 
 </term><description><span data-ttu-id="d7974-111">Значения параметров <paramref name="x" /> и <paramref name="y" /> равны.</span><span class="sxs-lookup"><span data-stu-id="d7974-111"><paramref name="x" /> equals <paramref name="y" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7974-112">Больше 0</span><span class="sxs-lookup"><span data-stu-id="d7974-112">Greater than 0</span></span> 
 </term><description><span data-ttu-id="d7974-113">Значение <paramref name="x" /> больше значения <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="d7974-113"><paramref name="x" /> is greater than <paramref name="y" />.</span></span>  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7974-114">Этот делегат используется перегрузкой метода <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29> класса <xref:System.Array> и перегрузкой метода <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> класса <xref:System.Collections.Generic.List%601> для сортировки элементов массива или списка.</span><span class="sxs-lookup"><span data-stu-id="d7974-114">This delegate is used by the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29> method overload of the <xref:System.Array> class and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload of the <xref:System.Collections.Generic.List%601> class to sort the elements of an array or list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7974-115">В следующем примере кода показано использование делегата <xref:System.Comparison%601> с перегрузкой метода <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29>.</span><span class="sxs-lookup"><span data-stu-id="d7974-115">The following code example demonstrates the use of the <xref:System.Comparison%601> delegate with the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="d7974-116">В примере кода определяется альтернативный метод сравнения для строк с именем `CompareDinosByLength`.</span><span class="sxs-lookup"><span data-stu-id="d7974-116">The code example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="d7974-117">Этот метод работает следующим образом: во-первых, сравниваемые проверяются на `null`, а пустая ссылка считается меньше, чем значение, отличное от NULL.</span><span class="sxs-lookup"><span data-stu-id="d7974-117">This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="d7974-118">Во-вторых, длины строк сравниваются, а более длинная строка считается большей.</span><span class="sxs-lookup"><span data-stu-id="d7974-118">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="d7974-119">В-третьих, если длины равны, используется обычное сравнение строк.</span><span class="sxs-lookup"><span data-stu-id="d7974-119">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="d7974-120"><xref:System.Collections.Generic.List%601> строк создается и заполняется четырьмя строками без определенного порядка.</span><span class="sxs-lookup"><span data-stu-id="d7974-120">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="d7974-121">Список также содержит пустую строку и пустую ссылку.</span><span class="sxs-lookup"><span data-stu-id="d7974-121">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="d7974-122">Список отображается, сортируется с помощью <xref:System.Comparison%601> универсального делегата, представляющего метод `CompareDinosByLength`, и снова отображается.</span><span class="sxs-lookup"><span data-stu-id="d7974-122">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 <span data-ttu-id="d7974-123">В следующем примере используется делегат <xref:System.Comparison%601> для сортировки элементов коллекции `CityInfo` объектов.</span><span class="sxs-lookup"><span data-stu-id="d7974-123">The following example uses the <xref:System.Comparison%601> delegate to sort the elements of a collection of `CityInfo` objects.</span></span> <span data-ttu-id="d7974-124">`CityInfo` — это определяемый приложением класс, содержащий сведения о городе и его заполнении.</span><span class="sxs-lookup"><span data-stu-id="d7974-124">`CityInfo` is an application-defined class that contains information about a city and its population.</span></span> <span data-ttu-id="d7974-125">В примере определяются три метода: `CompareByName`, `CompareByPopulation`и `CompareByNames`, которые предлагают три разных способа упорядочения объектов `CityInfo`.</span><span class="sxs-lookup"><span data-stu-id="d7974-125">The example defines three methods, `CompareByName`, `CompareByPopulation`, and `CompareByNames`, that offer three different ways of ordering the `CityInfo` objects.</span></span> <span data-ttu-id="d7974-126">Каждый метод назначается аргументу `comparison` метода <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7974-126">Each method is assigned to the `comparison` argument of the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Comparison\`1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.comparison`1/cs/comparisont1.cs#1)]
 [!code-vb[System.Comparison\`1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.comparison`1/vb/comparisont1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
    <altmember cref="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
  </Docs>
</Type>
