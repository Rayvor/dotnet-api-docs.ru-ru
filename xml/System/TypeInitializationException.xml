<Type Name="TypeInitializationException" FullName="System.TypeInitializationException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39a4b1dcc059d82d9cb113e1969487948a2ac652" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69418936" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeInitializationException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit TypeInitializationException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.TypeInitializationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeInitializationException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeInitializationException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type TypeInitializationException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="33763-101">Исключение, которое выбрасывается как оболочка для исключения, выброшенного инициализатором класса.</span><span class="sxs-lookup"><span data-stu-id="33763-101">The exception that is thrown as a wrapper around the exception thrown by the class initializer.</span></span> <span data-ttu-id="33763-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="33763-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33763-103">Если инициализация типа инициализатором класса завершилась сбоем, то будет создан объект <xref:System.TypeInitializationException>, которому будет передана ссылка на исключение, созданное инициализатором класса этого типа.</span><span class="sxs-lookup"><span data-stu-id="33763-103">When a class initializer fails to initialize a type, a <xref:System.TypeInitializationException> is created and passed a reference to the exception thrown by the type's class initializer.</span></span> <span data-ttu-id="33763-104"><xref:System.Exception.InnerException%2A> Свойство объекта<xref:System.TypeInitializationException> содержит базовое исключение.</span><span class="sxs-lookup"><span data-stu-id="33763-104">The <xref:System.Exception.InnerException%2A> property of <xref:System.TypeInitializationException> holds the underlying exception.</span></span>  
  
 <span data-ttu-id="33763-105">Как правило, <xref:System.TypeInitializationException> исключение отражает разрушительное условие (среда выполнения не может создать экземпляр типа), которая не позволяет продолжить работу приложения.</span><span class="sxs-lookup"><span data-stu-id="33763-105">Typically, the <xref:System.TypeInitializationException> exception reflects a catastrophic condition (the runtime is unable to instantiate a type) that prevents an application from continuing.</span></span>  <span data-ttu-id="33763-106"><xref:System.TypeInitializationException> Чаще всего исключение возникает в ответ на некоторое изменение в среде выполнения приложения.</span><span class="sxs-lookup"><span data-stu-id="33763-106">Most commonly, the <xref:System.TypeInitializationException> is thrown in response to some change in the executing environment of the application.</span></span> <span data-ttu-id="33763-107">В связи с этим исключение не должно обрабатываться в `try` / `catch` блоке, кроме, возможно, для устранения неполадок кода отладки.</span><span class="sxs-lookup"><span data-stu-id="33763-107">Consequently, other than possibly for troubleshooting debug code, the exception should not be handled in a `try`/`catch` block.</span></span> <span data-ttu-id="33763-108">Вместо этого следует исследовать и устранять причину исключения.</span><span class="sxs-lookup"><span data-stu-id="33763-108">Instead, the cause of the exception should be investigated and eliminated.</span></span>  
  
 <span data-ttu-id="33763-109"><xref:System.TypeInitializationException>использует HRESULT COR_E_TYPEINITIALIZATION, имеющий значение 0x80131534.</span><span class="sxs-lookup"><span data-stu-id="33763-109"><xref:System.TypeInitializationException> uses the HRESULT COR_E_TYPEINITIALIZATION, which has the value 0x80131534.</span></span>  
  
 <span data-ttu-id="33763-110">Список начальных значений свойств для экземпляра <xref:System.TypeInitializationException>, см. в разделе <xref:System.TypeInitializationException.%23ctor%2A> конструкторы.</span><span class="sxs-lookup"><span data-stu-id="33763-110">For a list of initial property values for an instance of <xref:System.TypeInitializationException>, see the <xref:System.TypeInitializationException.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="33763-111">В следующих разделах описываются некоторые ситуации, в которых <xref:System.TypeInitializationException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="33763-111">The following sections describe some of the situations in which a <xref:System.TypeInitializationException> exception is thrown.</span></span>  
  
- [<span data-ttu-id="33763-112">Статические конструкторы и исключение TypeInitializationException</span><span class="sxs-lookup"><span data-stu-id="33763-112">Static constructors and the TypeInitializationException exception</span></span>](#Static)   
- [<span data-ttu-id="33763-113">Значения времени ожидания сопоставления регулярных выражений</span><span class="sxs-lookup"><span data-stu-id="33763-113">Regular expression match timeout values</span></span>](#Timeout)   
- [<span data-ttu-id="33763-114">Календари и региональные данные</span><span class="sxs-lookup"><span data-stu-id="33763-114">Calendars and cultural data</span></span>](#Calendars)  
  
<a name="Static"></a>   
## <a name="static-constructors-and-the-typeinitializationexception"></a><span data-ttu-id="33763-115">Статические конструкторы и TypeInitializationException</span><span class="sxs-lookup"><span data-stu-id="33763-115">Static constructors and the TypeInitializationException</span></span>

 <span data-ttu-id="33763-116">Статический конструктор, если он существует, вызывается автоматически средой выполнения перед созданием нового экземпляра типа.</span><span class="sxs-lookup"><span data-stu-id="33763-116">A static constructor, if one exists, is called automatically by the runtime before creating a new instance of a type.</span></span> <span data-ttu-id="33763-117">Статические конструкторы могут явно определяться разработчиком.</span><span class="sxs-lookup"><span data-stu-id="33763-117">Static constructors can be explicitly defined by a developer.</span></span> <span data-ttu-id="33763-118">Если статический конструктор не определен явно, компиляторы автоматически создают его для инициализации любых `static` (в C#) или `Shared` (в Visual Basic) членов типа.</span><span class="sxs-lookup"><span data-stu-id="33763-118">If a static  constructor is not explicitly defined, compilers automatically create one to initialize any `static` (in C#) or `Shared` (in Visual Basic) members of the type.</span></span>  <span data-ttu-id="33763-119">Дополнительные сведения о статических конструкторах см. в [](~/docs/csharp/programming-guide/classes-and-structs/static-constructors.md)разделе Статические конструкторы.</span><span class="sxs-lookup"><span data-stu-id="33763-119">For more information on static constructors, see [Static Constructors](~/docs/csharp/programming-guide/classes-and-structs/static-constructors.md).</span></span>  
  
 <span data-ttu-id="33763-120">Чаще всего <xref:System.TypeInitializationException> исключение возникает, когда статический конструктор не может создать экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="33763-120">Most commonly, a <xref:System.TypeInitializationException> exception is thrown when a static constructor is unable to instantiate a type.</span></span>  <span data-ttu-id="33763-121"><xref:System.Exception.InnerException%2A> Свойство указывает, почему статическому конструктору не удалось создать экземпляр типа.</span><span class="sxs-lookup"><span data-stu-id="33763-121">The <xref:System.Exception.InnerException%2A> property indicates why the static constructor was unable to instantiate the type.</span></span> <span data-ttu-id="33763-122">Ниже приведены некоторые из наиболее распространенных причин <xref:System.TypeInitializationException> возникновения исключения.</span><span class="sxs-lookup"><span data-stu-id="33763-122">Some of the more common causes of a <xref:System.TypeInitializationException> exception are:</span></span>  
  
- <span data-ttu-id="33763-123">Необработанное исключение в статическом конструкторе</span><span class="sxs-lookup"><span data-stu-id="33763-123">An unhandled exception in a static constructor</span></span>  
 
   <span data-ttu-id="33763-124">Если в статическом конструкторе возникает исключение, это исключение упаковывается в <xref:System.TypeInitializationException> исключение, и тип не может быть создан.</span><span class="sxs-lookup"><span data-stu-id="33763-124">If an exception is thrown in a static constructor, that exception is wrapped in a <xref:System.TypeInitializationException> exception, and the type cannot be instantiated.</span></span>  
  
   <span data-ttu-id="33763-125">Часто это исключение затрудняет устранение неполадок, так как статические конструкторы не всегда явно определяются в исходном коде.</span><span class="sxs-lookup"><span data-stu-id="33763-125">What often makes this exception difficult to troubleshoot is that static constructors are not always explicitly defined in source code.</span></span> <span data-ttu-id="33763-126">Статический конструктор существует в типе, если:</span><span class="sxs-lookup"><span data-stu-id="33763-126">A static constructor exists in a type if:</span></span>  
  
   -   <span data-ttu-id="33763-127">Он был явно определен как член типа.</span><span class="sxs-lookup"><span data-stu-id="33763-127">It has been explicitly defined as a member of a type.</span></span>  
  
   -   <span data-ttu-id="33763-128">Тип содержит `static` переменные (in C#) или `Shared` (в Visual Basic), которые объявляются и инициализируются в одной инструкции.</span><span class="sxs-lookup"><span data-stu-id="33763-128">The type has  `static` (in C#) or `Shared` (in Visual Basic) variables that are declared and initialized in a single statement.</span></span> <span data-ttu-id="33763-129">В этом случае компилятор языка создает статический конструктор для типа.</span><span class="sxs-lookup"><span data-stu-id="33763-129">In this case, the language compiler generates a static constructor for the type.</span></span> <span data-ttu-id="33763-130">Его можно проверить с помощью служебной программы, такой как [дизассемблер IL](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span><span class="sxs-lookup"><span data-stu-id="33763-130">You can inspect it by using a utility such as [IL Disassembler](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span></span> <span data-ttu-id="33763-131">Например, когда компиляторы C# и VB компилируются в следующем примере, они создают Il для статического конструктора, аналогичного следующему:</span><span class="sxs-lookup"><span data-stu-id="33763-131">For instance, when the C# and VB compilers compile the following example, they generate the IL for a static constructor that is similar to this:</span></span>  
  
   ```  
   .method private specialname rtspecialname static   
           void  .cctor() cil managed  
   {  
     // Code size       12 (0xc)  
     .maxstack  8  
     IL_0000:  ldc.i4.3  
     IL_0001:  newobj     instance void TestClass::.ctor(int32)  
     IL_0006:  stsfld     class TestClass Example::test  
     IL_000b:  ret  
   } // end of method Example::.cctor  
   ```  
  
   <span data-ttu-id="33763-132">В следующем примере показано <xref:System.TypeInitializationException> исключение, вызванное статическим конструктором, созданным компилятором.</span><span class="sxs-lookup"><span data-stu-id="33763-132">The following example shows a <xref:System.TypeInitializationException> exception thrown by a compiler-generated static constructor.</span></span> <span data-ttu-id="33763-133">C# `Shared` `TestClass` Класс включает в `static` себя поле (в) или (в Visual Basic) типа, экземпляр которого создается путем передачи значения 3 в конструктор класса. `Example`</span><span class="sxs-lookup"><span data-stu-id="33763-133">The `Example` class includes a `static` (in C#) or `Shared` (in Visual Basic) field of type `TestClass` that is instantiated by passing a value of 3 to its class constructor.</span></span>  <span data-ttu-id="33763-134">Однако это значение недопустимо; разрешены только значения 0 и 1.</span><span class="sxs-lookup"><span data-stu-id="33763-134">That value, however, is illegal; only values of 0 or 1 are permitted.</span></span> <span data-ttu-id="33763-135">В результате `TestClass` конструктор класса <xref:System.ArgumentOutOfRangeException>создает исключение.</span><span class="sxs-lookup"><span data-stu-id="33763-135">As a result, the `TestClass` class constructor throws an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="33763-136">Так как это исключение не обрабатывается, оно упаковывается в <xref:System.TypeInitializationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="33763-136">Since this exception is not handled, it is wrapped in a <xref:System.TypeInitializationException> exception.</span></span>  
  
   [!code-csharp[System.TypeInitializationException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TypeInitializationException/cs/ctorException1.cs#3)]
   [!code-vb[System.TypeInitializationException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TypeInitializationException/vb/CtorException1.vb#3)]  
  
   <span data-ttu-id="33763-137">Обратите внимание, что в сообщении об исключении отображаются сведения о <xref:System.Exception.InnerException%2A> свойстве.</span><span class="sxs-lookup"><span data-stu-id="33763-137">Note that the exception message displays information about the <xref:System.Exception.InnerException%2A> property.</span></span>  
  
- <span data-ttu-id="33763-138">Отсутствует сборка или файл данных</span><span class="sxs-lookup"><span data-stu-id="33763-138">A missing assembly or data file</span></span>  
 
   <span data-ttu-id="33763-139">Распространенной причиной <xref:System.TypeInitializationException> возникновения исключения является то, что сборка или файл данных, которые присутствовали в средах разработки и тестирования приложения, отсутствуют в среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="33763-139">A common cause of a <xref:System.TypeInitializationException> exception is that an assembly or data file that was present in an application's development and test environments is missing from its runtime environment.</span></span> <span data-ttu-id="33763-140">Например, можно скомпилировать следующий пример в сборку с именем Missing1a. dll, используя следующий синтаксис командной строки:</span><span class="sxs-lookup"><span data-stu-id="33763-140">For example, you can compile the following example to an assembly named Missing1a.dll by using this command-line syntax:</span></span>  
  
   ```csharp  
   csc -t:library Missing1a.cs  
   ```  
  
   ```vb  
   vbc Missing1a.vb -t:library  
   ```  
  
   [!code-csharp[System.TypeInitializationException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TypeInitializationException/cs/Missing1a.cs#1)]
   [!code-vb[System.TypeInitializationException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TypeInitializationException/vb/Missing1a.vb#1)]  
  
   <span data-ttu-id="33763-141">Затем можно скомпилировать следующий пример в исполняемый файл с именем Missing1. exe, включив ссылку на Missing1a. dll:</span><span class="sxs-lookup"><span data-stu-id="33763-141">You can then compile the following example to an executable named Missing1.exe by including a reference to Missing1a.dll:</span></span>  
  
   ```csharp
   csc Missing1.cs /r:Missing1a.dll  
   ```  
  
   ```vb
   vbc Missing1.vb /r:Missing1a.dll  
   ```  
  
   <span data-ttu-id="33763-142">Однако если вы переименуете, перемещаете или удаляете Missing1a. dll и запускаете пример, <xref:System.TypeInitializationException> он создает исключение и отображает выходные данные, показанные в примере.</span><span class="sxs-lookup"><span data-stu-id="33763-142">However, if you rename, move, or delete Missing1a.dll and run the example, it throws a <xref:System.TypeInitializationException> exception and displays the output shown in the example.</span></span>  <span data-ttu-id="33763-143">Обратите внимание, что сообщение об исключении <xref:System.Exception.InnerException%2A> содержит сведения о свойстве.</span><span class="sxs-lookup"><span data-stu-id="33763-143">Note that the exception message includes information about the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="33763-144">В этом случае внутреннее исключение — <xref:System.IO.FileNotFoundException> это исключение, так как среда выполнения не может найти зависимую сборку.</span><span class="sxs-lookup"><span data-stu-id="33763-144">In this case,  the inner exception is a <xref:System.IO.FileNotFoundException> that is thrown because the runtime cannot find the dependent assembly.</span></span>  
  
   [!code-csharp[System.TypeInitializationException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TypeInitializationException/cs/Missing1.cs#2)]
   [!code-vb[System.TypeInitializationException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TypeInitializationException/vb/Missing1.vb#2)]  
  
   > [!NOTE]
   >  <span data-ttu-id="33763-145">В этом примере было вызвано <xref:System.TypeInitializationException> исключение, так как не удалось загрузить сборку.</span><span class="sxs-lookup"><span data-stu-id="33763-145">In this example, a <xref:System.TypeInitializationException> exception was thrown because an assembly could not be loaded.</span></span> <span data-ttu-id="33763-146">Исключение также может возникать, если статический конструктор пытается открыть файл данных, например файл конфигурации, XML-файл или файл, содержащий сериализованные данные, которые не удается найти.</span><span class="sxs-lookup"><span data-stu-id="33763-146">The exception can also be thrown if a static constructor attempts to open a data file, such as a configuration file, an XML file, or a file containing serialized data, that it cannot find.</span></span>  
  
<a name="Timeout"></a>   
## <a name="regular-expression-match-timeout-values"></a><span data-ttu-id="33763-147">Значения времени ожидания сопоставления регулярных выражений</span><span class="sxs-lookup"><span data-stu-id="33763-147">Regular expression match timeout values</span></span>  
 <span data-ttu-id="33763-148">Можно задать значение времени ожидания по умолчанию для операции сопоставления шаблона регулярного выражения для каждого домена приложения.</span><span class="sxs-lookup"><span data-stu-id="33763-148">You can set the default timeout value for a regular expression pattern matching operation on a per-application domain basis.</span></span> <span data-ttu-id="33763-149">Время ожидания определяется <xref:System.TimeSpan> <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> методом, задающим значение для свойства "REGEX_DEFAULT_MATCH_TIMEOUT".</span><span class="sxs-lookup"><span data-stu-id="33763-149">The timeout is defined by a specifying a <xref:System.TimeSpan> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property to the  <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="33763-150">Интервал времени должен быть допустимым <xref:System.TimeSpan> объектом, который больше нуля и меньше 24 дней.</span><span class="sxs-lookup"><span data-stu-id="33763-150">The time interval must be a valid <xref:System.TimeSpan> object that is greater than zero and less than approximately 24 days.</span></span> <span data-ttu-id="33763-151">Если эти требования не выполняются, попытка установить значение времени ожидания по умолчанию порождает <xref:System.ArgumentOutOfRangeException>исключение, которое, в свою очередь, <xref:System.TypeInitializationException> заключено в оболочку исключения.</span><span class="sxs-lookup"><span data-stu-id="33763-151">If these requirements are not met, the attempt to set the default timeout value throws an <xref:System.ArgumentOutOfRangeException>, which in turn is wrapped in a <xref:System.TypeInitializationException> exception.</span></span>  
  
 <span data-ttu-id="33763-152">В следующем примере показано <xref:System.TypeInitializationException> , что вызывается, когда значение, присвоенное свойству "REGEX_DEFAULT_MATCH_TIMEOUT", является недопустимым.</span><span class="sxs-lookup"><span data-stu-id="33763-152">The following example shows the <xref:System.TypeInitializationException> that is thrown when the value assigned to the "REGEX_DEFAULT_MATCH_TIMEOUT" property is invalid.</span></span> <span data-ttu-id="33763-153">Чтобы исключить исключение, задайте для <xref:System.TimeSpan> свойства "REGEX_DEFAULT_MATCH_TIMEOUT" значение больше нуля и менее 24 дней.</span><span class="sxs-lookup"><span data-stu-id="33763-153">To eliminate the exception, set the"REGEX_DEFAULT_MATCH_TIMEOUT" property to a  <xref:System.TimeSpan> value that is greater than zero and less than approximately 24 days.</span></span>  
  
 [!code-csharp[System.TypeInitializationException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TypeInitializationException/cs/Regex1.cs#4)]
 [!code-vb[System.TypeInitializationException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TypeInitializationException/vb/Regex1.vb#4)]  
  
<a name="Calendars"></a>   
## <a name="calendars-and-cultural-data"></a><span data-ttu-id="33763-154">Календари и региональные данные</span><span class="sxs-lookup"><span data-stu-id="33763-154">Calendars and cultural data</span></span>  
 <span data-ttu-id="33763-155">При попытке создать экземпляр календаря, но среда выполнения не может создать экземпляр <xref:System.Globalization.CultureInfo> объекта, соответствующего этому календарю, он <xref:System.TypeInitializationException> выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="33763-155">If you attempt to instantiate a calendar but the runtime is unable to instantiate  the <xref:System.Globalization.CultureInfo> object that corresponds to that calendar, it throws a <xref:System.TypeInitializationException> exception.</span></span> <span data-ttu-id="33763-156">Это исключение может быть создано следующими конструкторами классов календаря:</span><span class="sxs-lookup"><span data-stu-id="33763-156">This exception can be thrown by the following calendar class constructors:</span></span>  
  
-   <span data-ttu-id="33763-157">Конструктор без параметров <xref:System.Globalization.JapaneseCalendar> класса.</span><span class="sxs-lookup"><span data-stu-id="33763-157">The parameterless constructor of the <xref:System.Globalization.JapaneseCalendar> class.</span></span>  
  
-   <span data-ttu-id="33763-158">Конструктор без параметров <xref:System.Globalization.KoreanCalendar> класса.</span><span class="sxs-lookup"><span data-stu-id="33763-158">The parameterless constructor of the <xref:System.Globalization.KoreanCalendar> class.</span></span>  
  
-   <span data-ttu-id="33763-159">Конструктор без параметров <xref:System.Globalization.TaiwanCalendar> класса.</span><span class="sxs-lookup"><span data-stu-id="33763-159">The parameterless constructor of the <xref:System.Globalization.TaiwanCalendar> class.</span></span>  
  
 <span data-ttu-id="33763-160">Так как культурные данные для этих языков и региональных параметров должны быть доступны во всех системах, следует столкнуться с этим исключением редко.</span><span class="sxs-lookup"><span data-stu-id="33763-160">Since cultural data for these cultures should be available on all systems, you should rarely, if ever, encounter this exception.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="33763-161">Обработка и создание исключений в .NET</span><span class="sxs-lookup"><span data-stu-id="33763-161">Handling and throwing exceptions in .NET</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeInitializationException (string fullTypeName, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fullTypeName, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeInitializationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullTypeName As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeInitializationException(System::String ^ fullTypeName, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new TypeInitializationException : string * Exception -&gt; TypeInitializationException" Usage="new System.TypeInitializationException (fullTypeName, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullTypeName" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="fullTypeName"><span data-ttu-id="33763-162">Полное имя типа, который не удалось инициализировать.</span><span class="sxs-lookup"><span data-stu-id="33763-162">The fully qualified name of the type that fails to initialize.</span></span></param>
        <param name="innerException"><span data-ttu-id="33763-163">Исключение, которое является причиной текущего исключения.</span><span class="sxs-lookup"><span data-stu-id="33763-163">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="33763-164">Если параметр <paramref name="innerException" /> не является указателем null (<see langword="Nothing" /> в Visual Basic), то текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="33763-164">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="33763-165">Инициализирует новый экземпляр класса <see cref="T:System.TypeInitializationException" /> используемым по умолчанию сообщением об ошибке, указанным именем типа и ссылкой на внутреннее исключение, которое является основной причиной возникновения данного исключения.</span><span class="sxs-lookup"><span data-stu-id="33763-165">Initializes a new instance of the <see cref="T:System.TypeInitializationException" /> class with the default error message, the specified type name, and a reference to the inner exception that is the root cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33763-166">Исключение, созданное как прямой результат предыдущего исключения, может содержать в свойстве <xref:System.Exception.InnerException%2A> ссылку на предыдущее исключение.</span><span class="sxs-lookup"><span data-stu-id="33763-166">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="33763-167">Свойство <xref:System.Exception.InnerException%2A> возвращает то же значение, которое передается конструктору, или пустую ссылку (`Nothing` в Visual Basic), если свойство <xref:System.Exception.InnerException%2A> не предоставляет конструктору значение внутреннего исключения.</span><span class="sxs-lookup"><span data-stu-id="33763-167">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="33763-168">В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.TypeInitializationException>.</span><span class="sxs-lookup"><span data-stu-id="33763-168">The following table shows the initial property values for an instance of <xref:System.TypeInitializationException>.</span></span>  
  
|<span data-ttu-id="33763-169">Свойство.</span><span class="sxs-lookup"><span data-stu-id="33763-169">Property</span></span>|<span data-ttu-id="33763-170">Значение</span><span class="sxs-lookup"><span data-stu-id="33763-170">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="33763-171">Ссылка на внутреннее исключения.</span><span class="sxs-lookup"><span data-stu-id="33763-171">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="33763-172">Строка локализованного сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="33763-172">The localized error message string.</span></span>|  
|<xref:System.TypeInitializationException.TypeName%2A>|<span data-ttu-id="33763-173">Имя типа.</span><span class="sxs-lookup"><span data-stu-id="33763-173">The name of the type.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="33763-174">Обработка и создание исключений в .NET</span><span class="sxs-lookup"><span data-stu-id="33763-174">Handling and throwing exceptions in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeInitializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="typeInitializationException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="33763-175">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</span><span class="sxs-lookup"><span data-stu-id="33763-175">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="33763-176">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</span><span class="sxs-lookup"><span data-stu-id="33763-176">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="33763-177">Задает имя типа и дополнительные сведения об исключении для объекта <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span><span class="sxs-lookup"><span data-stu-id="33763-177">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the type name and additional exception information.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="33763-178">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="33763-178">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="33763-179">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="33763-179">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.TypeInitializationException.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="System.TypeInitializationException.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33763-180">Возвращает полное имя типа, который не удалось инициализировать.</span><span class="sxs-lookup"><span data-stu-id="33763-180">Gets the fully qualified name of the type that fails to initialize.</span></span></summary>
        <value><span data-ttu-id="33763-181">Полное имя типа, который не удалось инициализировать.</span><span class="sxs-lookup"><span data-stu-id="33763-181">The fully qualified name of the type that fails to initialize.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
