<Type Name="Enum" FullName="System.Enum">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6f510547314b6d99ac638b24ecb199189103407" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75023745" /></Metadata><TypeSignature Language="C#" Value="public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Enum extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Enum" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Enum&#xA;Inherits ValueType&#xA;Implements IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enum abstract : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="F#" Value="type Enum = class&#xA;    inherit ValueType&#xA;    interface IComparable&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9c677-101">Предоставляет базовый класс для перечислений.</span><span class="sxs-lookup"><span data-stu-id="9c677-101">Provides the base class for enumerations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-102">Перечисление — это набор именованных констант, базовый тип которых имеет любой целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="9c677-102">An enumeration is a set of named constants whose underlying type is any integral type.</span></span> <span data-ttu-id="9c677-103">Если базовый тип не объявлен явно, используется <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="9c677-103">If no underlying type is explicitly declared, <xref:System.Int32> is used.</span></span> <span data-ttu-id="9c677-104"><xref:System.Enum> является базовым классом для всех перечислений в .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="9c677-104"><xref:System.Enum> is the base class for all enumerations in the .NET Framework.</span></span> <span data-ttu-id="9c677-105">Типы перечисления определяются с помощью ключевого слова C# `enum` в и конструкции `Enum`...`End Enum` в Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="9c677-105">Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic.</span></span>  
  
 <span data-ttu-id="9c677-106"><xref:System.Enum> предоставляет методы для сравнения экземпляров этого класса, преобразования значения экземпляра в строковое представление, преобразования строкового представления числа в экземпляр этого класса и создания экземпляра указанного перечисления и значения.</span><span class="sxs-lookup"><span data-stu-id="9c677-106"><xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.</span></span>  
  
 <span data-ttu-id="9c677-107">Кроме того, перечисление можно рассматривать как битовое поле.</span><span class="sxs-lookup"><span data-stu-id="9c677-107">You can also treat an enumeration as a bit field.</span></span> <span data-ttu-id="9c677-108">Дополнительные сведения см. в разделах [Неисключительные члены и атрибут Flags](#Flags) и <xref:System.FlagsAttribute> разделе.</span><span class="sxs-lookup"><span data-stu-id="9c677-108">For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic.</span></span>  
  
 <span data-ttu-id="9c677-109">В этом разделе.</span><span class="sxs-lookup"><span data-stu-id="9c677-109">In this topic:</span></span>  
  
 <span data-ttu-id="9c677-110">[Создание типа перечисления](#Creating) </span><span class="sxs-lookup"><span data-stu-id="9c677-110">[Creating an enumeration type](#Creating) </span></span>  
 <span data-ttu-id="9c677-111">[Создание экземпляра типа перечисления](#Instantiating) </span><span class="sxs-lookup"><span data-stu-id="9c677-111">[Instantiating an enumeration type](#Instantiating) </span></span>  
 <span data-ttu-id="9c677-112">Рекомендации по [Перечислению](#BestPractices) </span><span class="sxs-lookup"><span data-stu-id="9c677-112">[Enumeration best practices](#BestPractices) </span></span>  
 <span data-ttu-id="9c677-113">[Выполнение операций с перечислениями](#Operations) </span><span class="sxs-lookup"><span data-stu-id="9c677-113">[Performing operations with enumerations](#Operations) </span></span>  
 [<span data-ttu-id="9c677-114">Выполнение преобразований</span><span class="sxs-lookup"><span data-stu-id="9c677-114">Performing conversions</span></span>](#conversions)  
 [<span data-ttu-id="9c677-115">Синтаксический анализ значений перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-115">Parsing enumeration values</span></span>](#parsing)  
 [<span data-ttu-id="9c677-116">Форматирование значений перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-116">Formatting enumeration values</span></span>](#formatting)  
[<span data-ttu-id="9c677-117">Перебор членов перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-117">Iterating enumeration members</span></span>](#iterating)  
[<span data-ttu-id="9c677-118">Неисключительные члены и атрибут Flags</span><span class="sxs-lookup"><span data-stu-id="9c677-118">Non-exclusive members and the Flags attribute</span></span>](#Flags)  
[<span data-ttu-id="9c677-119">Добавление методов перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-119">Adding enumeration methods</span></span>](#Methods)  
  
<a name="Creating"></a>   
## <a name="creating-an-enumeration-type"></a><span data-ttu-id="9c677-120">Создание типа перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-120">Creating an enumeration type</span></span>  
 <span data-ttu-id="9c677-121">Языки программирования обычно предоставляют синтаксис для объявления перечисления, состоящего из набора именованных констант и их значений.</span><span class="sxs-lookup"><span data-stu-id="9c677-121">Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values.</span></span> <span data-ttu-id="9c677-122">В следующем примере показан синтаксис, C# используемый и Visual Basic для определения перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-122">The following example illustrates the syntax used by C# and Visual Basic to define an enumeration.</span></span> <span data-ttu-id="9c677-123">Он создает перечисление с именем `ArrivalStatus`, которое имеет три члена: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`и `ArrivalStatus.Late`.</span><span class="sxs-lookup"><span data-stu-id="9c677-123">It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`.</span></span> <span data-ttu-id="9c677-124">Обратите внимание, что в обоих случаях перечисление не наследует явно от <xref:System.Enum>; отношение наследования обрабатывается компилятором неявно.</span><span class="sxs-lookup"><span data-stu-id="9c677-124">Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler.</span></span>  
  
 [!code-csharp[System.Enum.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)]
 [!code-vb[System.Enum.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)]  
  
> [!WARNING]
>  <span data-ttu-id="9c677-125">Никогда не следует создавать тип перечисления, базовый тип которого не является целочисленным или <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="9c677-125">You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>.</span></span> <span data-ttu-id="9c677-126">Несмотря на то, что можно создать такой тип перечисления с помощью отражения, вызовы методов, которые используют полученный тип, являются ненадежными и могут также создавать дополнительные исключения.</span><span class="sxs-lookup"><span data-stu-id="9c677-126">Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.</span></span>  
  
<a name="Instantiating"></a>   
## <a name="instantiating-an-enumeration-type"></a><span data-ttu-id="9c677-127">Создание экземпляра типа перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-127">Instantiating an enumeration type</span></span>  
 <span data-ttu-id="9c677-128">Можно создать экземпляр типа перечисления так же, как и любой другой тип значения: путем объявления переменной и присвоения ей одной из констант перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-128">You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it.</span></span> <span data-ttu-id="9c677-129">В следующем примере создается экземпляр `ArrivalStatus`, значение которого равно `ArrivalStatus.OnTime`.</span><span class="sxs-lookup"><span data-stu-id="9c677-129">The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`.</span></span>  
  
 [!code-csharp[System.Enum.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)]
 [!code-vb[System.Enum.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)]  
  
 <span data-ttu-id="9c677-130">Кроме того, можно создать экземпляр значения перечисления следующими способами.</span><span class="sxs-lookup"><span data-stu-id="9c677-130">You can also instantiate an enumeration value in the following ways:</span></span>  
  
-   <span data-ttu-id="9c677-131">С помощью определенных функций языка программирования для приведения (как в C#) или преобразования (как в Visual Basic) целочисленное значение в значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-131">By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value.</span></span> <span data-ttu-id="9c677-132">В следующем примере создается объект `ArrivalStatus`, значение которого `ArrivalStatus.Early` таким образом.</span><span class="sxs-lookup"><span data-stu-id="9c677-132">The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way.</span></span>  
  
     [!code-csharp[System.Enum.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)]
     [!code-vb[System.Enum.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)]  
  
-   <span data-ttu-id="9c677-133">Путем вызова его неявного конструктора без параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-133">By calling its implicit parameterless constructor.</span></span> <span data-ttu-id="9c677-134">Как показано в следующем примере, в данном случае базовое значение экземпляра перечисления равно 0.</span><span class="sxs-lookup"><span data-stu-id="9c677-134">As the following example shows, in this case the underlying value of the enumeration instance is 0.</span></span> <span data-ttu-id="9c677-135">Однако это не обязательно значение допустимой константы в перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c677-135">However, this is not necessarily the value of a valid constant in the enumeration.</span></span>  
  
     [!code-csharp[System.Enum.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)]
     [!code-vb[System.Enum.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)]  
  
-   <span data-ttu-id="9c677-136">Вызвав метод <xref:System.Enum.Parse%2A> или <xref:System.Enum.TryParse%2A>, чтобы проанализировать строку, содержащую имя константы в перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c677-136">By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration.</span></span> <span data-ttu-id="9c677-137">Дополнительные сведения см. в разделе [анализ значений перечисления](#parsing) .</span><span class="sxs-lookup"><span data-stu-id="9c677-137">For more information, see the [Parsing Enumeration Values](#parsing) section.</span></span>  
  
-   <span data-ttu-id="9c677-138">Путем вызова метода <xref:System.Enum.ToObject%2A> для преобразования целочисленного значения в тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-138">By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type.</span></span> <span data-ttu-id="9c677-139">Дополнительные сведения см. в разделе [выполнение преобразований](#conversions) .</span><span class="sxs-lookup"><span data-stu-id="9c677-139">For more information, see the [Performing Conversions](#conversions) section.</span></span>  
  
<a name="BestPractices"></a>   
## <a name="enumeration-best-practices"></a><span data-ttu-id="9c677-140">Рекомендации по перечислению</span><span class="sxs-lookup"><span data-stu-id="9c677-140">Enumeration best practices</span></span>  
 <span data-ttu-id="9c677-141">При определении типов перечислений рекомендуется использовать следующие рекомендации:</span><span class="sxs-lookup"><span data-stu-id="9c677-141">We recommend that you use the following best practices when you define enumeration types:</span></span>  
  
-   <span data-ttu-id="9c677-142">Если вы не определили член перечисления, значение которого равно 0, попробуйте создать `None` перечислимую константу.</span><span class="sxs-lookup"><span data-stu-id="9c677-142">If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant.</span></span> <span data-ttu-id="9c677-143">По умолчанию память, используемая для перечисления, инициализируется средой CLR равным нулю.</span><span class="sxs-lookup"><span data-stu-id="9c677-143">By default, the memory used for the enumeration is initialized to zero by the common language runtime.</span></span> <span data-ttu-id="9c677-144">Следовательно, если не определить константу, значение которой равно нулю, то при создании перечисление будет содержать недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-144">Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</span></span>  
  
-   <span data-ttu-id="9c677-145">Если существует очевидный вариант по умолчанию, который должен представлять приложение, рассмотрите возможность использования перечислимой константы, значение которой равно нулю, чтобы представить ее.</span><span class="sxs-lookup"><span data-stu-id="9c677-145">If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it.</span></span> <span data-ttu-id="9c677-146">Если регистр по умолчанию отсутствует, рассмотрите возможность использования перечислимой константы, значение которой равно нулю, чтобы указать вариант, который не представлен ни одной из других перечислимых констант.</span><span class="sxs-lookup"><span data-stu-id="9c677-146">If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.</span></span>  
  
-   <span data-ttu-id="9c677-147">Не указывайте константы перечисления, зарезервированные для будущего использования.</span><span class="sxs-lookup"><span data-stu-id="9c677-147">Do not specify enumerated constants that are reserved for future use.</span></span>  
  
-   <span data-ttu-id="9c677-148">При определении метода или свойства, принимающего перечисляемую константу в качестве значения, рассмотрите возможность проверки значения.</span><span class="sxs-lookup"><span data-stu-id="9c677-148">When you define a method or property that takes an enumerated constant as a value, consider validating the value.</span></span> <span data-ttu-id="9c677-149">Причина в том, что можно привести числовое значение к типу перечисления, даже если это числовое значение не определено в перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c677-149">The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</span></span>  
  
 <span data-ttu-id="9c677-150">Дополнительные рекомендации по типам перечислений, константы которых являются битовыми полями, перечислены в [неисключительных членах и разделе атрибута flags](#Flags) .</span><span class="sxs-lookup"><span data-stu-id="9c677-150">Additional best practices for enumeration types whose constants are bit fields are listed in the [Non-Exclusive Members and the Flags Attribute](#Flags) section.</span></span>  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-enumerations"></a><span data-ttu-id="9c677-151">Выполнение операций с перечислениями</span><span class="sxs-lookup"><span data-stu-id="9c677-151">Performing operations with enumerations</span></span>  
 <span data-ttu-id="9c677-152">При создании перечисления нельзя определять новые методы.</span><span class="sxs-lookup"><span data-stu-id="9c677-152">You cannot define new methods when you are creating an enumeration.</span></span> <span data-ttu-id="9c677-153">Однако тип перечисления наследует полный набор статических методов и экземпляров класса <xref:System.Enum>.</span><span class="sxs-lookup"><span data-stu-id="9c677-153">However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class.</span></span> <span data-ttu-id="9c677-154">В следующих разделах рассматриваются большинство этих методов, а также несколько других методов, которые обычно используются при работе со значениями перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-154">The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.</span></span>  
  
<a name="conversions"></a>   
### <a name="performing-conversions"></a><span data-ttu-id="9c677-155">Выполнение преобразований</span><span class="sxs-lookup"><span data-stu-id="9c677-155">Performing conversions</span></span>  
 <span data-ttu-id="9c677-156">Преобразование между членом перечисления и его базовым типом осуществляется с помощью оператора приведения ( C#in) или преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9c677-156">You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator.</span></span> <span data-ttu-id="9c677-157">В следующем примере операторы приведения или преобразования используются для выполнения преобразований из целого числа в значение перечисления и из значения перечисления в целое число.</span><span class="sxs-lookup"><span data-stu-id="9c677-157">The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.</span></span>  
  
 [!code-csharp[System.Enum.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)]
 [!code-vb[System.Enum.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)]  
  
 <span data-ttu-id="9c677-158">Класс <xref:System.Enum> также включает метод <xref:System.Enum.ToObject%2A>, который преобразует значение любого целочисленного типа в значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-158">The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value.</span></span> <span data-ttu-id="9c677-159">В следующем примере метод <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> используется для преобразования <xref:System.Int32> в значение `ArrivalStatus`.</span><span class="sxs-lookup"><span data-stu-id="9c677-159">The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value.</span></span> <span data-ttu-id="9c677-160">Обратите внимание, что, поскольку <xref:System.Enum.ToObject%2A> возвращает значение типа <xref:System.Object>, использование оператора приведения или преобразования по-прежнему может потребоваться для приведения объекта к типу перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-160">Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)]
 [!code-vb[System.Enum.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)]  
  
 <span data-ttu-id="9c677-161">При преобразовании целого числа в значение перечисления можно присвоить значение, которое не является членом перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-161">When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration.</span></span> <span data-ttu-id="9c677-162">Чтобы избежать этого, можно передать целое число в метод <xref:System.Enum.IsDefined%2A> перед выполнением преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-162">To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion.</span></span> <span data-ttu-id="9c677-163">В следующем примере этот метод используется для определения того, можно ли преобразовать элементы массива целочисленных значений в `ArrivalStatus` значения.</span><span class="sxs-lookup"><span data-stu-id="9c677-163">The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values.</span></span>  
  
 [!code-csharp[System.Enum.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs#7)]
 [!code-vb[System.Enum.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb#7)]  
  
 <span data-ttu-id="9c677-164">Несмотря на то, что класс <xref:System.Enum> предоставляет явные реализации интерфейса <xref:System.IConvertible> для преобразования значения перечисления в целочисленный тип, для выполнения этих преобразований следует использовать методы класса <xref:System.Convert>, такие как <xref:System.Convert.ToInt32%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-164">Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions.</span></span> <span data-ttu-id="9c677-165">В следующем примере показано, как можно использовать метод <xref:System.Enum.GetUnderlyingType%2A> вместе с методом <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> для преобразования значения перечисления в его базовый тип.</span><span class="sxs-lookup"><span data-stu-id="9c677-165">The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method to convert an enumeration value to its underlying type.</span></span> <span data-ttu-id="9c677-166">Обратите внимание, что в этом примере не требуется, чтобы базовый тип перечисления был известен во время компиляции.</span><span class="sxs-lookup"><span data-stu-id="9c677-166">Note that this example does not require the underlying type of the enumeration to be known at compile time.</span></span>  
  
 [!code-csharp[System.Enum.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)]
 [!code-vb[System.Enum.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)]  
  
<a name="parsing"></a>   
### <a name="parsing-enumeration-values"></a><span data-ttu-id="9c677-167">Синтаксический анализ значений перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-167">Parsing enumeration values</span></span>  
 <span data-ttu-id="9c677-168">Методы <xref:System.Enum.Parse%2A> и <xref:System.Enum.TryParse%2A> позволяют преобразовать строковое представление значения перечисления в это значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-168">The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value.</span></span> <span data-ttu-id="9c677-169">Строковое представление может быть либо именем, либо базовым значением константы перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-169">The string representation can be either the name or the underlying value of an enumeration constant.</span></span> <span data-ttu-id="9c677-170">Обратите внимание, что методы синтаксического анализа будут успешно преобразовывать строковые представления чисел, которые не являются элементами определенного перечисления, если строки можно преобразовать в значение базового типа перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-170">Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type.</span></span> <span data-ttu-id="9c677-171">Чтобы избежать этого, можно вызвать метод <xref:System.Enum.IsDefined%2A>, чтобы убедиться в том, что результат метода анализа является допустимым значением перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-171">To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value.</span></span> <span data-ttu-id="9c677-172">Пример иллюстрирует этот подход и демонстрирует вызовы методов <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> и <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9c677-172">The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="9c677-173">Обратите внимание, что неуниверсальный метод анализа возвращает объект, который может потребоваться привести (в C#) или преобразовать (в Visual Basic) к соответствующему типу перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-173">Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)]
 [!code-vb[System.Enum.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)]  
  
<a name="formatting"></a>   
### <a name="formatting-enumeration-values"></a><span data-ttu-id="9c677-174">Форматирование значений перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-174">Formatting enumeration values</span></span>  
 <span data-ttu-id="9c677-175">Можно преобразовать значения перечисления в их строковые представления, вызвав статический метод <xref:System.Enum.Format%2A>, а также перегрузки метода <xref:System.Enum.ToString%2A> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9c677-175">You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method.</span></span> <span data-ttu-id="9c677-176">Строку формата можно использовать для управления точным способом представления значения перечисления в виде строки.</span><span class="sxs-lookup"><span data-stu-id="9c677-176">You can use a format string to control the precise way in which an enumeration value is represented as a string.</span></span> <span data-ttu-id="9c677-177">Дополнительные сведения см. в разделе [строки формата перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9c677-177">For more information, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="9c677-178">В следующем примере используется каждая из поддерживаемых строк формата перечисления ("G" или "g", "D" или "d", "X", "x" и "F" или "f") для преобразования члена перечисления `ArrivalStatus` в его строковые представления.</span><span class="sxs-lookup"><span data-stu-id="9c677-178">The following example uses each of the supported enumeration format strings ("G" or "g", "D" or "d", "X" or "x", and "F" or "f" ) to convert a member of the `ArrivalStatus` enumeration to its string representations.</span></span>  
  
 [!code-csharp[System.Enum.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)]
 [!code-vb[System.Enum.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)]  
  
<a name="iterating"></a>   
### <a name="iterating-enumeration-members"></a><span data-ttu-id="9c677-179">Перебор членов перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-179">Iterating enumeration members</span></span>  
 <span data-ttu-id="9c677-180">Тип <xref:System.Enum> не реализует интерфейс <xref:System.Collections.IEnumerable> или <xref:System.Collections.Generic.IEnumerable%601>, который позволяет выполнять итерацию элементов коллекции с помощью конструкции `foreach` (in C#) или `For Each` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9c677-180">The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct.</span></span> <span data-ttu-id="9c677-181">Однако можно перечислить элементы одним из двух способов.</span><span class="sxs-lookup"><span data-stu-id="9c677-181">However, you can enumerate members in either of two ways.</span></span>  
  
-   <span data-ttu-id="9c677-182">Можно вызвать метод <xref:System.Enum.GetNames%2A>, чтобы получить массив строк, содержащий имена членов перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-182">You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members.</span></span> <span data-ttu-id="9c677-183">Затем для каждого элемента массива строк можно вызвать метод <xref:System.Enum.Parse%2A>, чтобы преобразовать строку в ее эквивалентное значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-183">Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value.</span></span> <span data-ttu-id="9c677-184">Этот подход показан в приведенном ниже примере.</span><span class="sxs-lookup"><span data-stu-id="9c677-184">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)]
     [!code-vb[System.Enum.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)]  
  
-   <span data-ttu-id="9c677-185">Можно вызвать метод <xref:System.Enum.GetValues%2A>, чтобы получить массив, содержащий базовые значения в перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c677-185">You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration.</span></span> <span data-ttu-id="9c677-186">Затем для каждого элемента массива можно вызвать метод <xref:System.Enum.ToObject%2A> для преобразования целого числа в эквивалентное ему значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-186">Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value.</span></span> <span data-ttu-id="9c677-187">Этот подход показан в приведенном ниже примере.</span><span class="sxs-lookup"><span data-stu-id="9c677-187">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)]
     [!code-vb[System.Enum.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)]  
  
<a name="Flags"></a>   
## <a name="non-exclusive-members-and-the-flags-attribute"></a><span data-ttu-id="9c677-188">Неисключительные члены и атрибут Flags</span><span class="sxs-lookup"><span data-stu-id="9c677-188">Non-exclusive members and the Flags attribute</span></span>  
 <span data-ttu-id="9c677-189">Одним из распространенных способов использования перечисления является представление набора взаимно исключающих значений.</span><span class="sxs-lookup"><span data-stu-id="9c677-189">One common use of an enumeration is to represent a set of mutually exclusive values.</span></span> <span data-ttu-id="9c677-190">Например, экземпляр `ArrivalStatus` может иметь значение `Early`, `OnTime`или `Late`.</span><span class="sxs-lookup"><span data-stu-id="9c677-190">For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`.</span></span> <span data-ttu-id="9c677-191">Не имеет смысла, чтобы значение экземпляра `ArrivalStatus` отражало более одной константы перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-191">It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant.</span></span>  
  
 <span data-ttu-id="9c677-192">Однако в других случаях значение объекта перечисления может включать несколько членов перечисления, а каждый элемент представляет битовое поле в значении перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-192">In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value.</span></span> <span data-ttu-id="9c677-193">Чтобы указать, что перечисление состоит из битовых полей, можно использовать атрибут <xref:System.FlagsAttribute>.</span><span class="sxs-lookup"><span data-stu-id="9c677-193">The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields.</span></span> <span data-ttu-id="9c677-194">Например, перечисление с именем `Pets` может использоваться для указания видов Pets в семье.</span><span class="sxs-lookup"><span data-stu-id="9c677-194">For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household.</span></span> <span data-ttu-id="9c677-195">Его можно определить следующим образом.</span><span class="sxs-lookup"><span data-stu-id="9c677-195">It can be defined as follows.</span></span>  
  
 [!code-csharp[System.Enum.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)]
 [!code-vb[System.Enum.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)]  
  
 <span data-ttu-id="9c677-196">Затем можно использовать перечисление `Pets`, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="9c677-196">The `Pets` enumeration can then be used as shown in the following example.</span></span>  
  
 [!code-csharp[System.Enum.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)]
 [!code-vb[System.Enum.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)]  
  
 <span data-ttu-id="9c677-197">При определении побитового перечисления и применении атрибута <xref:System.FlagsAttribute> следует использовать следующие рекомендации.</span><span class="sxs-lookup"><span data-stu-id="9c677-197">The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="9c677-198">Используйте настраиваемый атрибут <xref:System.FlagsAttribute> для перечисления, только если Побитовая операция (AND, OR, ИСКЛЮЧАЮЩая или) должна быть выполнена для числового значения.</span><span class="sxs-lookup"><span data-stu-id="9c677-198">Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</span></span>  
  
-   <span data-ttu-id="9c677-199">Определите константы перечисления в степени двойки, то есть 1, 2, 4, 8 и т. д.</span><span class="sxs-lookup"><span data-stu-id="9c677-199">Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</span></span> <span data-ttu-id="9c677-200">Это означает, что отдельные флаги в Объединенных константах перечисления не перекрываются.</span><span class="sxs-lookup"><span data-stu-id="9c677-200">This means the individual flags in combined enumeration constants do not overlap.</span></span>  
  
-   <span data-ttu-id="9c677-201">Рассмотрите возможность создания перечислимой константы для часто используемых сочетаний флагов.</span><span class="sxs-lookup"><span data-stu-id="9c677-201">Consider creating an enumerated constant for commonly used flag combinations.</span></span> <span data-ttu-id="9c677-202">Например, если имеется перечисление, используемое для операций файлового ввода-вывода, содержащих перечислимые константы `Read = 1` и `Write = 2`, рассмотрите возможность создания перечислимого `ReadWrite = Read OR Write`константы, объединяющего флаги `Read` и `Write`.</span><span class="sxs-lookup"><span data-stu-id="9c677-202">For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags.</span></span> <span data-ttu-id="9c677-203">Кроме того, побитовая операция OR, используемая для объединения флагов, может рассматриваться как расширенная концепция в некоторых обстоятельствах, которая не должна требоваться для простых задач.</span><span class="sxs-lookup"><span data-stu-id="9c677-203">In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</span></span>  
  
-   <span data-ttu-id="9c677-204">Будьте внимательны при определении отрицательного числа в виде перечислимой константы, так как для множества положений флагов может быть задано значение 1, что может сделать код запутанным и рекомендовать ошибки кода.</span><span class="sxs-lookup"><span data-stu-id="9c677-204">Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</span></span>  
  
-   <span data-ttu-id="9c677-205">Чтобы проверить, установлен ли флаг в числовом значении, нужно вызвать метод <xref:System.Enum.HasFlag%2A> метода, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="9c677-205">A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)]
     [!code-vb[System.Enum.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)]  
  
     <span data-ttu-id="9c677-206">Это эквивалентно выполнению побитовой операции и между числовым значением и константой, перечисленной по флагу, которая устанавливает все биты в числовом значении равными нулю, не соответствующим флагу, а затем проверяет, равен ли результат этой операции свойству отметить константу перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-206">It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant.</span></span> <span data-ttu-id="9c677-207">Это показано в следующем примере:</span><span class="sxs-lookup"><span data-stu-id="9c677-207">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)]
     [!code-vb[System.Enum.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)]  
  
-   <span data-ttu-id="9c677-208">Используйте `None` в качестве имени константы перечисления флагов, значение которой равно нулю.</span><span class="sxs-lookup"><span data-stu-id="9c677-208">Use `None` as the name of the flag enumerated constant whose value is zero.</span></span> <span data-ttu-id="9c677-209">Нельзя использовать `None` перечислимую константу в битовой операции AND для проверки флага, так как результат всегда равен нулю.</span><span class="sxs-lookup"><span data-stu-id="9c677-209">You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</span></span> <span data-ttu-id="9c677-210">Однако можно выполнить логическое, а не побитовое сравнение числового значения и `None` перечислимую константу, чтобы определить, заданы ли биты в числовом значении.</span><span class="sxs-lookup"><span data-stu-id="9c677-210">However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set.</span></span> <span data-ttu-id="9c677-211">Это показано в следующем примере:</span><span class="sxs-lookup"><span data-stu-id="9c677-211">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)]
     [!code-vb[System.Enum.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)]  
  
-   <span data-ttu-id="9c677-212">Не определяйте значение перечисления исключительно для отражения состояния самого перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-212">Do not define an enumeration value solely to mirror the state of the enumeration itself.</span></span> <span data-ttu-id="9c677-213">Например, не определяйте константу перечисления, которая только отмечает конец перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-213">For example, do not define an enumerated constant that merely marks the end of the enumeration.</span></span> <span data-ttu-id="9c677-214">Если необходимо определить Последнее значение перечисления, проверьте это значение явным образом.</span><span class="sxs-lookup"><span data-stu-id="9c677-214">If you need to determine the last value of the enumeration, check for that value explicitly.</span></span> <span data-ttu-id="9c677-215">Кроме того, можно выполнить проверку диапазона для первой и последней перечислимой константы, если все значения в диапазоне допустимы.</span><span class="sxs-lookup"><span data-stu-id="9c677-215">In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</span></span>  
  
<a name="Methods"></a>   
## <a name="adding-enumeration-methods"></a><span data-ttu-id="9c677-216">Добавление методов перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-216">Adding enumeration methods</span></span>  
 <span data-ttu-id="9c677-217">Поскольку типы перечислений определяются языковой структурой, напримерC#`enum` () и `Enum` (Visual Basic), нельзя определить пользовательские методы для типа перечисления, кроме тех методов, которые унаследованы от класса <xref:System.Enum>.</span><span class="sxs-lookup"><span data-stu-id="9c677-217">Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class.</span></span>  <span data-ttu-id="9c677-218">Однако методы расширения можно использовать для добавления функциональных возможностей к конкретному типу перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-218">However, you can use extension methods to add functionality to a particular enumeration type.</span></span>  
  
 <span data-ttu-id="9c677-219">В следующем примере перечисление `Grades` содержит возможные буквенные оценки, которые учащийся может получить в классе.</span><span class="sxs-lookup"><span data-stu-id="9c677-219">In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class.</span></span> <span data-ttu-id="9c677-220">Метод расширения с именем `Passing` добавляется в тип `Grades`, чтобы каждый экземпляр этого типа "знал", проходной это балл или нет.</span><span class="sxs-lookup"><span data-stu-id="9c677-220">An extension method named `Passing` is added to the `Grades` type so that each instance of that type now "knows" whether it represents a passing grade or not.</span></span>       <span data-ttu-id="9c677-221">Класс `Extensions` также содержит статическую переменную для чтения и записи, которая определяет минимальный уровень прохождения.</span><span class="sxs-lookup"><span data-stu-id="9c677-221">The `Extensions` class also contains a static read-write variable that defines the minimum passing grade.</span></span> <span data-ttu-id="9c677-222">Возвращаемое значение метода расширения `Passing` отражает текущее значение этой переменной.</span><span class="sxs-lookup"><span data-stu-id="9c677-222">The return value of the `Passing` extension method reflects the current value of that variable.</span></span>  
  
 [!code-csharp[System.Enum.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs#18)]
 [!code-vb[System.Enum.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb#18)]  
  
   
  
## Examples  
 <span data-ttu-id="9c677-223">В следующем примере демонстрируется использование перечисления для представления именованных значений и другого перечисления для представления именованных битовых полей.</span><span class="sxs-lookup"><span data-stu-id="9c677-223">The following example demonstrates using an enumeration to represent named values and another enumeration to represent named bit fields.</span></span>  
  
 [!code-cpp[enummain#1](~/samples/snippets/cpp/VS_Snippets_CLR/enummain/CPP/EnumMain.cpp#1)]
 [!code-csharp[enummain#1](~/samples/snippets/csharp/VS_Snippets_CLR/enummain/CS/EnumMain.cs#1)]
 [!code-vb[enummain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enummain/VB/EnumMain.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="9c677-224">Данный тип потокобезопасен.</span><span class="sxs-lookup"><span data-stu-id="9c677-224">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.ValueType" />
    <altmember cref="T:System.FlagsAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Enum ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Enum();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c677-225">Инициализирует новый экземпляр класса <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-225">Initializes a new instance of the <see cref="T:System.Enum" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (target As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="enum.CompareTo target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9c677-226">Объект для сравнения или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-226">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9c677-227">Сравнивает этот экземпляр с заданным объектом и возвращает значение, указывающее, как соотносятся значения этих объектов.</span><span class="sxs-lookup"><span data-stu-id="9c677-227">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="9c677-228">Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-228">A signed number that indicates the relative values of this instance and <paramref name="target" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="9c677-229">Значение</span><span class="sxs-lookup"><span data-stu-id="9c677-229">Value</span></span> 
 </term><description> <span data-ttu-id="9c677-230">Значение</span><span class="sxs-lookup"><span data-stu-id="9c677-230">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="9c677-231">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="9c677-231">Less than zero</span></span> 
 </term><description> <span data-ttu-id="9c677-232">Значение данного экземпляра меньше значения параметра <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-232">The value of this instance is less than the value of <paramref name="target" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9c677-233">Zero</span><span class="sxs-lookup"><span data-stu-id="9c677-233">Zero</span></span> 
 </term><description> <span data-ttu-id="9c677-234">Значение данного экземпляра равно значению параметра <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-234">The value of this instance is equal to the value of <paramref name="target" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9c677-235">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="9c677-235">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="9c677-236">Значение данного экземпляра больше значения параметра <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-236">The value of this instance is greater than the value of <paramref name="target" />.</span></span>  
  
<span data-ttu-id="9c677-237">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-237">-or-</span></span> 
 <span data-ttu-id="9c677-238">Свойство <paramref name="target" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-238"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9c677-239">В следующем примере показано использование `CompareTo` в контексте `Enum`.</span><span class="sxs-lookup"><span data-stu-id="9c677-239">The following example illustrates the use of `CompareTo` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumcompareto#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumcompareto/CPP/EnumCompareTo.cpp#1)]
 [!code-csharp[enumcompareto#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumcompareto/CS/EnumCompareTo.cs#1)]
 [!code-vb[enumcompareto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumcompareto/VB/EnumCompareTo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-240"><paramref name="target" /> и этот экземпляр не принадлежат к одному типу.</span><span class="sxs-lookup"><span data-stu-id="9c677-240"><paramref name="target" /> and this instance are not the same type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c677-241">Этот экземпляр не принадлежит к типу <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" /> или <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-241">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.Enum.Equals(System.Object)" />
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="9c677-242">Этот экземпляр имеет значение NULL.</span><span class="sxs-lookup"><span data-stu-id="9c677-242">This instance is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="enum.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9c677-243">Объект, сравниваемый с этим экземпляром, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-243">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9c677-244">Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="9c677-244">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="9c677-245"><see langword="true" />, если <paramref name="obj" /> является значением перечисления того же типа и с тем же базовым значением, что и у этого экземпляра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-245"><see langword="true" /> if <paramref name="obj" /> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-246">Метод <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> переопределяет <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType>, чтобы определить, как члены перечисления оцениваются на равенство.</span><span class="sxs-lookup"><span data-stu-id="9c677-246">The <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> to define how enumeration members are evaluated for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-247">В следующем примере показано использование метода <xref:System.Enum.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-247">The following example illustrates the use of the <xref:System.Enum.Equals%2A> method.</span></span>  
  
 [!code-cpp[enumequals#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumequals/CPP/EnumEquals.cpp#1)]
 [!code-csharp[enumequals#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumequals/CS/EnumEquals.cs#1)]
 [!code-vb[enumequals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumequals/VB/EnumEquals.vb#1)]  
  
 <span data-ttu-id="9c677-248">В следующем примере определяются два типа перечисления: `SledDog` и `WorkDog`.</span><span class="sxs-lookup"><span data-stu-id="9c677-248">The following example defines two enumeration types, `SledDog` and `WorkDog`.</span></span> <span data-ttu-id="9c677-249">Перечисление `SledDog` содержит два члена, `SledDog.AlaskanMalamute` и `SledDog.Malamute`, имеющие одно и то же базовое значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-249">The `SledDog` enumeration has two members, `SledDog.AlaskanMalamute` and `SledDog.Malamute`, that have the same underlying value.</span></span> <span data-ttu-id="9c677-250">Вызов метода <xref:System.Enum.Equals%2A> указывает, что эти значения равны, так как их базовые значения одинаковы.</span><span class="sxs-lookup"><span data-stu-id="9c677-250">The call to the <xref:System.Enum.Equals%2A> method indicates that these values are equal because their underlying values are the same.</span></span> <span data-ttu-id="9c677-251">Члены `SledDog.Malamute` и `WorkDog.Newfoundland` имеют одинаковое базовое значение, хотя они представляют различные типы перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-251">The `SledDog.Malamute` and `WorkDog.Newfoundland` members have the same underlying value, although they represent different enumeration types.</span></span> <span data-ttu-id="9c677-252">Вызов метода <xref:System.Enum.Equals%2A> указывает, что эти значения не равны.</span><span class="sxs-lookup"><span data-stu-id="9c677-252">A call to the <xref:System.Enum.Equals%2A> method indicates that these values are not equal.</span></span>  
  
 [!code-csharp[System.Enum.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.equals/cs/enumequals.cs#1)]
 [!code-vb[System.Enum.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.equals/vb/enumequals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Enum.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (Type enumType, object value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.Type enumType, object value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (enumType As Type, value As Object, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(Type ^ enumType, System::Object ^ value, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Format : Type * obj * string -&gt; string" Usage="System.Enum.Format (enumType, value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-253">Тип перечисления преобразуемого значения.</span><span class="sxs-lookup"><span data-stu-id="9c677-253">The enumeration type of the value to convert.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-254">Преобразуемое значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-254">The value to convert.</span></span></param>
        <param name="format"><span data-ttu-id="9c677-255">Используемый формат вывода.</span><span class="sxs-lookup"><span data-stu-id="9c677-255">The output format to use.</span></span></param>
        <summary><span data-ttu-id="9c677-256">Преобразует указанное значение заданного перечислимого типа в эквивалентное строковое представление в соответствии с заданным форматом.</span><span class="sxs-lookup"><span data-stu-id="9c677-256">Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.</span></span></summary>
        <returns><span data-ttu-id="9c677-257">Строковое представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-257">A string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-258">В следующей таблице приведены допустимые значения параметра `format`.</span><span class="sxs-lookup"><span data-stu-id="9c677-258">The following table shows the valid values for the `format` parameter.</span></span>  
  
|<span data-ttu-id="9c677-259">Формат</span><span class="sxs-lookup"><span data-stu-id="9c677-259">Format</span></span>|<span data-ttu-id="9c677-260">Описание</span><span class="sxs-lookup"><span data-stu-id="9c677-260">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="9c677-261">"G" или "g"</span><span class="sxs-lookup"><span data-stu-id="9c677-261">"G" or "g"</span></span>|<span data-ttu-id="9c677-262">Если `value` равен именованной константе перечисления, возвращается имя этой константы. в противном случае возвращается десятичный эквивалент `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-262">If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned.</span></span><br /><br /> <span data-ttu-id="9c677-263">Например, предположим, что единственная Перечисляемая константа имеет имя Red, а ее значение равно 1.</span><span class="sxs-lookup"><span data-stu-id="9c677-263">For example, suppose the only enumerated constant is named Red, and its value is 1.</span></span> <span data-ttu-id="9c677-264">Если `value` указан как 1, этот формат возвращает "Red".</span><span class="sxs-lookup"><span data-stu-id="9c677-264">If `value` is specified as 1, this format returns "Red".</span></span> <span data-ttu-id="9c677-265">Однако если `value` указан как 2, то этот формат возвращает «2».</span><span class="sxs-lookup"><span data-stu-id="9c677-265">However, if `value` is specified as 2, this format returns "2".</span></span><br /><br /> <span data-ttu-id="9c677-266">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-266">-or-</span></span><br /><br /> <span data-ttu-id="9c677-267">Если к перечислению применяется настраиваемый атрибут <xref:System.FlagsAttribute>, `value` обрабатывается как битовое поле, содержащее один или несколько флагов, состоящих из одного или нескольких битов.</span><span class="sxs-lookup"><span data-stu-id="9c677-267">If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits.</span></span><br /><br /> <span data-ttu-id="9c677-268">Если `value` равно сочетанию именованных перечислимых констант, то возвращается список имен этих констант с разделителями-разделителями.</span><span class="sxs-lookup"><span data-stu-id="9c677-268">If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned.</span></span> <span data-ttu-id="9c677-269">`value` ищет флаги, начиная от флага с самым большим значением до наименьшего значения.</span><span class="sxs-lookup"><span data-stu-id="9c677-269">`value` is searched for flags, going from the flag with the largest value to the smallest value.</span></span> <span data-ttu-id="9c677-270">Для каждого флага, соответствующего битовому полю в `value`, имя константы объединяется в список с разделителями-разделителями.</span><span class="sxs-lookup"><span data-stu-id="9c677-270">For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list.</span></span> <span data-ttu-id="9c677-271">Затем значение этого флага исключается из рассмотрения, и поиск продолжается для следующего флага.</span><span class="sxs-lookup"><span data-stu-id="9c677-271">The value of that flag is then excluded from further consideration, and the search continues for the next flag.</span></span><br /><br /> <span data-ttu-id="9c677-272">Если `value` не равно сочетанию именованных перечислимых констант, возвращается десятичный эквивалент `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-272">If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned.</span></span>|  
|<span data-ttu-id="9c677-273">"X" или "x"</span><span class="sxs-lookup"><span data-stu-id="9c677-273">"X" or "x"</span></span>|<span data-ttu-id="9c677-274">Представляет `value` в шестнадцатеричном формате без начального символа "0x".</span><span class="sxs-lookup"><span data-stu-id="9c677-274">Represents `value` in hexadecimal format without a leading "0x".</span></span>|  
|<span data-ttu-id="9c677-275">"D" или "d"</span><span class="sxs-lookup"><span data-stu-id="9c677-275">"D" or "d"</span></span>|<span data-ttu-id="9c677-276">Представляет `value` в десятичном формате.</span><span class="sxs-lookup"><span data-stu-id="9c677-276">Represents `value` in decimal form.</span></span>|  
|<span data-ttu-id="9c677-277">"F" или "f"</span><span class="sxs-lookup"><span data-stu-id="9c677-277">"F" or "f"</span></span>|<span data-ttu-id="9c677-278">Ведет себя идентично "G" или "g", за исключением того, что <xref:System.FlagsAttribute> не обязательно должен присутствовать в объявлении <xref:System.Enum>.</span><span class="sxs-lookup"><span data-stu-id="9c677-278">Behaves identically to "G" or "g", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9c677-279">В следующем примере показано использование `Format` в контексте `Enum`.</span><span class="sxs-lookup"><span data-stu-id="9c677-279">The following example illustrates the use of `Format` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumformat/CPP/EnumFormat.cpp#1)]
 [!code-csharp[enumformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumformat/CS/EnumFormat.cs#1)]
 [!code-vb[enumformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumformat/VB/EnumFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-280">Параметр <paramref name="enumType" />, <paramref name="value" /> или <paramref name="format" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-280">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-281">Параметр <paramref name="enumType" /> не принадлежит к типу <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-281">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.</span></span>  
  
<span data-ttu-id="9c677-282">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-282">-or-</span></span> 
<span data-ttu-id="9c677-283">Параметр <paramref name="value" /> принадлежит к перечислению, тип которого отличается от типа <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-283">The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.</span></span>  
  
<span data-ttu-id="9c677-284">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-284">-or-</span></span> 
<span data-ttu-id="9c677-285">Тип параметра <paramref name="value" /> не является базовым типом параметра <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-285">The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="9c677-286">Недопустимое значение параметра <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-286">The <paramref name="format" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c677-287"><paramref name="format" /> равняется "X", но тип перечисления неизвестен.</span><span class="sxs-lookup"><span data-stu-id="9c677-287"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.ToString(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="9c677-288">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="9c677-288">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="9c677-289">Строки форматов перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-289">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="enum.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c677-290">Возвращает хэш-код для значения данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9c677-290">Returns the hash code for the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="9c677-291">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="9c677-291">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetName(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (enumType As Type, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetName : Type * obj -&gt; string" Usage="System.Enum.GetName (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-292">Тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-292">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-293">Значение данной перечислимой константы в терминах ее базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-293">The value of a particular enumerated constant in terms of its underlying type.</span></span></param>
        <summary><span data-ttu-id="9c677-294">Возвращает имя константы с заданным значением из указанного перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-294">Retrieves the name of the constant in the specified enumeration that has the specified value.</span></span></summary>
        <returns><span data-ttu-id="9c677-295">Строка, содержащая имя константы перечислимого типа в <paramref name="enumType" />, значение которой равно <paramref name="value" />, или значение <see langword="null" />, если такая константа не найдена.</span><span class="sxs-lookup"><span data-stu-id="9c677-295">A string containing the name of the enumerated constant in <paramref name="enumType" /> whose value is <paramref name="value" />; or <see langword="null" /> if no such constant is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-296">Если несколько членов перечисления имеют одно и то же базовое значение, метод <xref:System.Enum.GetName%2A> гарантирует, что он возвратит имя одного из этих членов перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-296">If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members.</span></span> <span data-ttu-id="9c677-297">Однако он не гарантирует, что он всегда будет возвращать имя того же члена перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-297">However, it does not guarantee that it will always return the name of the same enumeration member.</span></span> <span data-ttu-id="9c677-298">В результате, если несколько членов перечисления имеют одинаковое значение, код приложения никогда не должен зависеть от метода, возвращающего имя определенного члена.</span><span class="sxs-lookup"><span data-stu-id="9c677-298">As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-299">В следующем примере показано использование `GetName`.</span><span class="sxs-lookup"><span data-stu-id="9c677-299">The following example illustrates the use of `GetName`.</span></span>  
  
 [!code-cpp[enumgetname#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetname/CPP/EnumGetName.cpp#1)]
 [!code-csharp[enumgetname#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetname/CS/EnumGetName.cs#1)]
 [!code-vb[enumgetname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetname/VB/EnumGetName.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-300">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-300"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-301">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-301"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="9c677-302">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-302">-or-</span></span> 
 <span data-ttu-id="9c677-303">Параметр <paramref name="value" /> не принадлежит к типу <paramref name="enumType" />, и его базовым типом также не является <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-303"><paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNames">
      <MemberSignature Language="C#" Value="public static string[] GetNames (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetNames(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetNames(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNames (enumType As Type) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetNames(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetNames : Type -&gt; string[]" Usage="System.Enum.GetNames enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-304">Тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-304">An enumeration type.</span></span></param>
        <summary><span data-ttu-id="9c677-305">Возвращает массив имен констант в указанном перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c677-305">Retrieves an array of the names of the constants in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="9c677-306">Строковый массив имен констант в <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-306">A string array of the names of the constants in <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-307">Элементы массива возвращаемых значений сортируются по двоичным значениям перечисленных констант (то есть по их незнаковой величине).</span><span class="sxs-lookup"><span data-stu-id="9c677-307">The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="9c677-308">В следующем примере выводятся сведения о массиве, возвращаемом методом <xref:System.Enum.GetNames%2A> для перечисления, который содержит отрицательное, нулевое и положительное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-308">The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)]
 [!code-vb[System.Enum.GetNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)]  
  
 <span data-ttu-id="9c677-309">Если есть перечислимые константы с одинаковым значением, порядок их соответствующих имен не определен.</span><span class="sxs-lookup"><span data-stu-id="9c677-309">If there are enumerated constants with same value, the order of their corresponding names is unspecified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-310">В следующем примере показано использование метода <xref:System.Enum.GetNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-310">The following example illustrates the use of the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 [!code-cpp[enumgetnames#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetnames/CPP/EnumGetNames.cpp#1)]
 [!code-csharp[enumgetnames#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetnames/CS/EnumGetNames.cs#1)]
 [!code-vb[enumgetnames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetnames/VB/EnumGetNames.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-311">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-311"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-312"><paramref name="enumType" /> не является <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-312"><paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TypeCode GetTypeCode() cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCode GetTypeCode();" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="member this.GetTypeCode : unit -&gt; TypeCode" Usage="enum.GetTypeCode " FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="enum.GetTypeCode " FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c677-313">Возвращает код типа базового типа члена этого перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-313">Returns the type code of the underlying type of this enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-314">Код типа базового типа этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9c677-314">The type code of the underlying type of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c677-315">Тип данного перечисления неизвестен.</span><span class="sxs-lookup"><span data-stu-id="9c677-315">The enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.GetUnderlyingType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnderlyingType">
      <MemberSignature Language="C#" Value="public static Type GetUnderlyingType (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetUnderlyingType(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetUnderlyingType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnderlyingType (enumType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetUnderlyingType(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetUnderlyingType : Type -&gt; Type" Usage="System.Enum.GetUnderlyingType enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-316">Перечисление, базовый тип которого требуется получить.</span><span class="sxs-lookup"><span data-stu-id="9c677-316">The enumeration whose underlying type will be retrieved.</span></span></param>
        <summary><span data-ttu-id="9c677-317">Возвращает базовый тип заданного перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-317">Returns the underlying type of the specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="9c677-318">Базовый тип <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-318">The underlying type of <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-319">Структура <xref:System.Enum> позволяет представлять значения как именованные константы.</span><span class="sxs-lookup"><span data-stu-id="9c677-319">The <xref:System.Enum> structure enables values to be represented as named constants.</span></span> <span data-ttu-id="9c677-320">Тип данных значений перечисления называется базовым типом.</span><span class="sxs-lookup"><span data-stu-id="9c677-320">The data type of the enumeration's values is known as its underlying type.</span></span> <span data-ttu-id="9c677-321">Например, базовый тип перечисления <xref:System.DayOfWeek>, состоящий из констант, представляющих каждый день недели (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>и т. д.), <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="9c677-321">For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>, and so on), is <xref:System.Int32>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-322">В следующем примере вызывается метод <xref:System.Enum.GetUnderlyingType%2A> для вывода базового типа некоторых элементов перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-322">The following example calls the <xref:System.Enum.GetUnderlyingType%2A> method to display the underlying type of some enumeration members.</span></span>  
  
 [!code-csharp[System.Enum.GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getunderlyingtype/cs/getunderlyingtype1.cs#1)]
 [!code-vb[System.Enum.GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getunderlyingtype/vb/getunderlyingtype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-323">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-323"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-324">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-324"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.GetTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public static Array GetValues (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array GetValues(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetValues(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValues (enumType As Type) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ GetValues(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetValues : Type -&gt; Array" Usage="System.Enum.GetValues enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-325">Тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-325">An enumeration type.</span></span></param>
        <summary><span data-ttu-id="9c677-326">Возвращает массив значений констант в указанном перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c677-326">Retrieves an array of the values of the constants in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="9c677-327">Массив, который содержит значения констант в <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-327">An array that contains the values of the constants in <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-328">Элементы массива сортируются по двоичным значениям констант перечисления (то есть по неподписанной величине).</span><span class="sxs-lookup"><span data-stu-id="9c677-328">The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="9c677-329">В следующем примере отображаются сведения о массиве, возвращенном методом <xref:System.Enum.GetValues%2A> для перечисления, который содержит отрицательное значение, ноль и положительное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-329">The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs#1)]
 [!code-vb[System.Enum.GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb#1)]  
  
 <span data-ttu-id="9c677-330">Метод <xref:System.Enum.GetValues%2A> возвращает массив, содержащий значение для каждого элемента перечисления `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-330">The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration.</span></span> <span data-ttu-id="9c677-331">Если несколько членов имеют одинаковое значение, возвращаемый массив содержит дублирующиеся значения.</span><span class="sxs-lookup"><span data-stu-id="9c677-331">If multiple members have the same value, the returned array includes duplicate values.</span></span> <span data-ttu-id="9c677-332">В этом случае вызов метода <xref:System.Enum.GetName%2A> с каждым значением в возвращаемом массиве не приводит к восстановлению уникальных имен, присвоенных элементам, которые имеют повторяющиеся значения.</span><span class="sxs-lookup"><span data-stu-id="9c677-332">In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values.</span></span> <span data-ttu-id="9c677-333">Чтобы успешно получить все имена членов перечисления, вызовите метод <xref:System.Enum.GetNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-333">To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-334">Метод <xref:System.Enum.GetValues%2A> не может быть вызван с помощью отражения в контексте, предназначенном только для отражения.</span><span class="sxs-lookup"><span data-stu-id="9c677-334">The <xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context.</span></span> <span data-ttu-id="9c677-335">Вместо этого можно получить значение всех членов перечисления с помощью метода <xref:System.Type.GetFields%2A?displayProperty=nameWithType>, чтобы получить массив <xref:System.Reflection.FieldInfo> объектов, представляющих члены перечисления, а затем вызвать метод <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> для каждого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="9c677-335">Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> method on each element of the array.</span></span> <span data-ttu-id="9c677-336">Этот метод показан в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="9c677-336">The following example illustrates this technique.</span></span> <span data-ttu-id="9c677-337">Для этого необходимо определить следующее перечисление в сборке с именем перечисления. dll:</span><span class="sxs-lookup"><span data-stu-id="9c677-337">It requires that you define the following enumeration in an assembly named Enumerations.dll:</span></span>  
  
 [!code-csharp[System.Enum.GetValues#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)]
 [!code-vb[System.Enum.GetValues#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)]  
  
 <span data-ttu-id="9c677-338">Сборка загружается в контекст, предназначенный только для отражения, объект <xref:System.Type>, представляющий перечисление `Pets`, извлекается массив объектов <xref:System.Reflection.FieldInfo>, а значения полей выводятся на консоль.</span><span class="sxs-lookup"><span data-stu-id="9c677-338">The assembly is loaded in a reflection-only context, a <xref:System.Type> object that represents the `Pets` enumeration is instantiated, an array of <xref:System.Reflection.FieldInfo> objects is retrieved, and the field values are displayed to the console.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)]
 [!code-vb[System.Enum.GetValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="9c677-339">В следующем примере показано использование <xref:System.Enum.GetValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-339">The following example illustrates the use of <xref:System.Enum.GetValues%2A>.</span></span>  
  
 [!code-cpp[enumgetvalues#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetvalues/CPP/EnumGetValues.cpp#1)]
 [!code-csharp[enumgetvalues#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetvalues/CS/EnumGetValues.cs#1)]
 [!code-vb[enumgetvalues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetvalues/VB/EnumGetValues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-340">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-340"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-341">Значение параметра <paramref name="enumType" /> не является объектом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-341"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c677-342">Метод вызывается отражением в контексте, предназначенном только для отражения.</span><span class="sxs-lookup"><span data-stu-id="9c677-342">The method is invoked by reflection in a reflection-only context,</span></span> 
<span data-ttu-id="9c677-343">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-343">-or-</span></span> 
 <span data-ttu-id="9c677-344"><paramref name="enumType" /> — это тип из сборки, загруженной в контексте только для отражения.</span><span class="sxs-lookup"><span data-stu-id="9c677-344"><paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasFlag">
      <MemberSignature Language="C#" Value="public bool HasFlag (Enum flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasFlag(class System.Enum flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.HasFlag(System.Enum)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFlag (flag As Enum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFlag(Enum ^ flag);" />
      <MemberSignature Language="F#" Value="member this.HasFlag : Enum -&gt; bool" Usage="enum.HasFlag flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Enum" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="9c677-345">Значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-345">An enumeration value.</span></span></param>
        <summary><span data-ttu-id="9c677-346">Определяет, установлены ли в текущем экземпляре одно или несколько битовых полей.</span><span class="sxs-lookup"><span data-stu-id="9c677-346">Determines whether one or more bit fields are set in the current instance.</span></span></summary>
        <returns><span data-ttu-id="9c677-347">Значение <see langword="true" />, если одно или несколько битовых полей, установленных в параметре <paramref name="flag" />, также установлены в текущем экземпляре; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-347"><see langword="true" /> if the bit field or bit fields that are set in <paramref name="flag" /> are also set in the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-348">Метод <xref:System.Enum.HasFlag%2A> возвращает результат следующего логического выражения.</span><span class="sxs-lookup"><span data-stu-id="9c677-348">The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression.</span></span>  
  
```  
thisInstance And flag = flag   
```  
  
 <span data-ttu-id="9c677-349">Если базовое значение `flag` равно нулю, метод возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="9c677-349">If the underlying value of `flag` is zero, the method returns `true`.</span></span> <span data-ttu-id="9c677-350">Если такое поведение нежелательно, можно использовать метод <xref:System.Enum.Equals%2A> для проверки на равенство нулем и вызвать <xref:System.Enum.HasFlag%2A> только в том случае, если базовое значение `flag` не равно нулю, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="9c677-350">If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)]
 [!code-vb[System.Enum.HasFlag#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)]  
  
 <span data-ttu-id="9c677-351">Метод <xref:System.Enum.HasFlag%2A> предназначен для использования с типами перечислений, помеченными атрибутом <xref:System.FlagsAttribute>, и может использоваться для определения того, задано ли несколько битовых полей.</span><span class="sxs-lookup"><span data-stu-id="9c677-351">The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set.</span></span> <span data-ttu-id="9c677-352">Для типов перечисления, которые не помечены атрибутом <xref:System.FlagsAttribute>, вызовите метод <xref:System.Enum.Equals%2A> или метод <xref:System.Enum.CompareTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-352">For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-353">В следующем примере определяется перечисление `ItemsOrdered`, отражающее категории элементов, которые клиент может заказать в ресторане.</span><span class="sxs-lookup"><span data-stu-id="9c677-353">The following example defines an `ItemsOrdered` enumeration that reflects categories of items that a customer can order in a restaurant.</span></span> <span data-ttu-id="9c677-354">В примере проверяется, заказан ли заказчик как безболезненным, так и напитки.</span><span class="sxs-lookup"><span data-stu-id="9c677-354">The example tests whether the customer has ordered both an entrée and a beverage.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag1.cs#2)]
 [!code-vb[System.Enum.HasFlag#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-355"><paramref name="flag" /> является типом, отличным от текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9c677-355"><paramref name="flag" /> is a different type than the current instance.</span></span></exception>
        <altmember cref="T:System.FlagsAttribute" />
        <altmember cref="M:System.Enum.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.IsDefined(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (enumType As Type, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDefined : Type * obj -&gt; bool" Usage="System.Enum.IsDefined (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-356">Перечислимый тип.</span><span class="sxs-lookup"><span data-stu-id="9c677-356">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-357">Значение или имя константы в <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-357">The value or name of a constant in <paramref name="enumType" />.</span></span></param>
        <summary><span data-ttu-id="9c677-358">Возвращает логическое значение, указывающее, существует ли заданное целочисленное значение или его имя в виде строки в заданном перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c677-358">Returns a Boolean telling whether a given integral value, or its name as a string, exists in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="9c677-359">Значение <see langword="true" />, если константа в <paramref name="enumType" /> имеет значение <paramref name="value" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-359"><see langword="true" /> if a constant in <paramref name="enumType" /> has a value equal to <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-360">Параметр `value` может быть любым из следующих:</span><span class="sxs-lookup"><span data-stu-id="9c677-360">The `value` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="9c677-361">Любой член типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-361">Any member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="9c677-362">Переменная, значение которой является элементом перечисления типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-362">A variable whose value is an enumeration member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="9c677-363">Строковое представление имени члена перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-363">The string representation of the name of an enumeration member.</span></span> <span data-ttu-id="9c677-364">Символы в строке должны иметь тот же регистр, что и имя члена перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-364">The characters in the string must have the same case as the enumeration member name.</span></span>  
  
-   <span data-ttu-id="9c677-365">Значение базового типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-365">A value of the underlying type of `enumType`.</span></span>  
  
 <span data-ttu-id="9c677-366">Если константы в `enumType` определяют набор битовых полей и `value` содержат значения, имена или базовые значения нескольких битовых полей, метод <xref:System.Enum.IsDefined%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="9c677-366">If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`.</span></span> <span data-ttu-id="9c677-367">Иными словами, для перечислений, определяющих набор битовых полей, метод определяет только то, принадлежит ли одно битовое поле перечислению.</span><span class="sxs-lookup"><span data-stu-id="9c677-367">In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration.</span></span> <span data-ttu-id="9c677-368">Чтобы определить, задано ли несколько битовых полей в типе перечисления, помеченном атрибутом <xref:System.FlagsAttribute>, можно вызвать метод <xref:System.Enum.HasFlag%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-368">To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-369">В следующем примере определяется перечисление с именем `PetType`, состоящее из отдельных битовых полей.</span><span class="sxs-lookup"><span data-stu-id="9c677-369">The following example defines an enumeration named `PetType` that consists of individual bit fields.</span></span> <span data-ttu-id="9c677-370">Затем он вызывает метод <xref:System.Enum.IsDefined%2A> с возможными базовыми значениями перечисления, именами строк и составными значениями, полученными в результате установки нескольких битовых полей.</span><span class="sxs-lookup"><span data-stu-id="9c677-370">It then calls the <xref:System.Enum.IsDefined%2A> method with possible underlying enumeration values, string names, and composite values that result from setting multiple bit fields.</span></span>  
  
 [!code-csharp[System.Enum.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined1.cs#1)]
 [!code-vb[System.Enum.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/IsDefined1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-371">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-371"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-372">Параметр <paramref name="enumType" /> не является классом <see langword="Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-372"><paramref name="enumType" /> is not an <see langword="Enum" />.</span></span>  
  
<span data-ttu-id="9c677-373">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-373">-or-</span></span> 
<span data-ttu-id="9c677-374">Тип <paramref name="value" /> является перечислением, однако не является перечислением типа <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-374">The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.</span></span>  
  
<span data-ttu-id="9c677-375">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-375">-or-</span></span> 
<span data-ttu-id="9c677-376">Тип <paramref name="value" /> не является базовым типом <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-376">The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c677-377"><paramref name="value" /> не является типом <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, <see cref="T:System.UInt64" /> или <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-377"><paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="9c677-378">Если <paramref name="enumType" /> является перечислением, определенным с помощью атрибута <see cref="T:System.FlagsAttribute" />, метод возвращает <see langword="false" />, если несколько битовых полей в <paramref name="value" /> заданы, но <paramref name="value" /> не соответствует составному значению перечисления или если <paramref name="value" /> является сцеплением имен нескольких битовых флагов.</span><span class="sxs-lookup"><span data-stu-id="9c677-378">If <paramref name="enumType" /> is an enumeration that is defined by using the <see cref="T:System.FlagsAttribute" /> attribute, the method returns <see langword="false" /> if multiple bit fields in <paramref name="value" /> are set but <paramref name="value" /> does not correspond to a composite enumeration value, or if <paramref name="value" /> is a string concatenation of the names of multiple bit flags.</span></span> <span data-ttu-id="9c677-379">В следующем примере перечисление <c>pets</c> определяется с помощью атрибута <see cref="T:System.FlagsAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-379">In the following example, a <c>Pets</c> enumeration is defined with the <see cref="T:System.FlagsAttribute" /> attribute.</span></span> <span data-ttu-id="9c677-380">Метод <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> возвращает <see langword="false" /> при передаче ему значения перечисления с двумя битовыми полями (<c>pets. Dog</c> и <c>pets.Cat</c>) и при передаче ему строкового представления этого значения перечисления ("Dog, CAT").</span><span class="sxs-lookup"><span data-stu-id="9c677-380">The <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> method returns <see langword="false" /> when you pass it an enumeration value that has two bit fields (<c>Pets.Dog</c> and <c>Pets.Cat</c>) set, and when you pass it the string representation of that enumeration value ("Dog, Cat").</span></span>  
  
<span data-ttu-id="9c677-381">[! код-CSharp[System. Enum. defined # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [! код-VB[System. Enum. defined # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="9c677-381">[!code-csharp[System.Enum.IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [!code-vb[System.Enum.IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]</span></span> 
<span data-ttu-id="9c677-382">Чтобы определить, задано ли несколько битовых полей, вызвав метод <see cref="M:System.Enum.HasFlag(System.Enum)" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-382">You can determine whether multiple bit fields are set by calling the <see cref="M:System.Enum.HasFlag(System.Enum)" /> method.</span></span></para></block>
        <altmember cref="M:System.Enum.GetName(System.Type,System.Object)" />
        <altmember cref="M:System.Enum.GetNames(System.Type)" />
        <altmember cref="M:System.Enum.GetValues(System.Type)" />
        <altmember cref="M:System.Enum.HasFlag(System.Enum)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c677-383">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-383">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <altmember cref="M:System.Enum.TryParse``1(System.String,``0@)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string -&gt; obj" Usage="System.Enum.Parse (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-384">Тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-384">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-385">Строка, содержащая имя или значение для преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-385">A string containing the name or value to convert.</span></span></param>
        <summary><span data-ttu-id="9c677-386">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-386">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="9c677-387">Объект типа <paramref name="enumType" />, значение которого представлено параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-387">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-388">Параметр `value` содержит строковое представление базового значения или именованной константы члена перечисления или список именованных констант, разделенных запятыми (,).</span><span class="sxs-lookup"><span data-stu-id="9c677-388">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="9c677-389">Один или несколько пробелов перед каждым значением, именем или запятой в `value`могут предшествовать или следовать.</span><span class="sxs-lookup"><span data-stu-id="9c677-389">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="9c677-390">Если `value` является списком, возвращаемое значение представляет собой значение указанных имен в сочетании с побитовой операцией `OR`.</span><span class="sxs-lookup"><span data-stu-id="9c677-390">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="9c677-391">Если `value` является именем, которое не соответствует именованной константе `enumType`, метод создает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="9c677-391">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="9c677-392">Если `value` — строковое представление целого числа, которое не представляет базовое значение перечисления `enumType`, метод возвращает член перечисления, базовое значение которого `value` преобразуется в целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="9c677-392">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="9c677-393">Если такое поведение нежелательно, вызовите метод <xref:System.Enum.IsDefined%2A>, чтобы убедиться, что определенное строковое представление целого числа действительно является членом `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-393">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="9c677-394">В следующем примере определяется перечисление `Colors`, вызывается метод <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> для преобразования строк в соответствующие значения перечисления и вызывается метод <xref:System.Enum.IsDefined%2A>, чтобы гарантировать, что определенные целочисленные значения являются базовыми значениями в перечислении `Colors`.</span><span class="sxs-lookup"><span data-stu-id="9c677-394">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs#1)]
 [!code-vb[System.Enum.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb#1)]  
  
 <span data-ttu-id="9c677-395">В этой операции учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="9c677-395">This operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-396">В следующем примере используется метод <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> для синтаксического анализа массива строк, созданных путем вызова метода <xref:System.Enum.GetNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-396">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="9c677-397">Он также использует метод <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> для синтаксического анализа значения перечисления, состоящего из битового поля.</span><span class="sxs-lookup"><span data-stu-id="9c677-397">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-cpp[enumparse#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumparse/CPP/EnumParse.cpp#1)]
 [!code-csharp[enumparse#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumparse/CS/EnumParse.cs#1)]
 [!code-vb[enumparse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumparse/VB/EnumParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-398">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-398"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-399">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-399"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="9c677-400">-или-</span><span class="sxs-lookup"><span data-stu-id="9c677-400">-or-</span></span> 
 <span data-ttu-id="9c677-401"><paramref name="value" /> является пустой строкой или содержит только пробелы.</span><span class="sxs-lookup"><span data-stu-id="9c677-401"><paramref name="value" /> is either an empty string or only contains white space.</span></span>  
  
<span data-ttu-id="9c677-402">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-402">-or-</span></span> 
 <span data-ttu-id="9c677-403">В параметре <paramref name="value" /> задано имя, не являющееся именем одной из именованных констант, определенных для данного перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-403"><paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="9c677-404"><paramref name="value" /> находится вне диапазона базового типа <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-404"><paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string * bool -&gt; obj" Usage="System.Enum.Parse (enumType, value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-405">Тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-405">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-406">Строка, содержащая имя или значение для преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-406">A string containing the name or value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="9c677-407">Значение <see langword="true" />, чтобы игнорировать регистр; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-407"><see langword="true" /> to ignore case; <see langword="false" /> to regard case.</span></span></param>
        <summary><span data-ttu-id="9c677-408">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-408">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="9c677-409">Параметр указывает, учитывается ли в операции регистр.</span><span class="sxs-lookup"><span data-stu-id="9c677-409">A parameter specifies whether the operation is case-insensitive.</span></span></summary>
        <returns><span data-ttu-id="9c677-410">Объект типа <paramref name="enumType" />, значение которого представлено параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-410">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-411">Параметр `value` содержит строковое представление базового значения или именованной константы члена перечисления или список именованных констант, разделенных запятыми (,).</span><span class="sxs-lookup"><span data-stu-id="9c677-411">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="9c677-412">Один или несколько пробелов перед каждым значением, именем или запятой в `value`могут предшествовать или следовать.</span><span class="sxs-lookup"><span data-stu-id="9c677-412">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="9c677-413">Если `value` является списком, возвращаемое значение представляет собой значение указанных имен в сочетании с побитовой операцией `OR`.</span><span class="sxs-lookup"><span data-stu-id="9c677-413">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="9c677-414">Если `value` является именем, которое не соответствует именованной константе `enumType`, метод создает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="9c677-414">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="9c677-415">Если `value` — строковое представление целого числа, которое не представляет базовое значение перечисления `enumType`, метод возвращает член перечисления, базовое значение которого `value` преобразуется в целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="9c677-415">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="9c677-416">Если такое поведение нежелательно, вызовите метод <xref:System.Enum.IsDefined%2A>, чтобы убедиться, что определенное строковое представление целого числа действительно является членом `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-416">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="9c677-417">В следующем примере определяется перечисление `Colors`, вызывается метод <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> для преобразования строк в соответствующие значения перечисления и вызывается метод <xref:System.Enum.IsDefined%2A>, чтобы гарантировать, что определенные целочисленные значения являются базовыми значениями в перечислении `Colors`.</span><span class="sxs-lookup"><span data-stu-id="9c677-417">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 <span data-ttu-id="9c677-418">Параметр `ignoreCase` указывает, учитывается ли регистр в этой операции.</span><span class="sxs-lookup"><span data-stu-id="9c677-418">The `ignoreCase` parameter specifies whether this operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-419">В следующем примере используется метод <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> для синтаксического анализа массива строк, созданных путем вызова метода <xref:System.Enum.GetNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-419">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="9c677-420">Он также использует метод <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> для синтаксического анализа значения перечисления, состоящего из битового поля.</span><span class="sxs-lookup"><span data-stu-id="9c677-420">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-421">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-421"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-422">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-422"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="9c677-423">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-423">-or-</span></span> 
 <span data-ttu-id="9c677-424"><paramref name="value" /> является пустой строкой ("") или содержит только пробелы.</span><span class="sxs-lookup"><span data-stu-id="9c677-424"><paramref name="value" /> is either an empty string ("") or only contains white space.</span></span>  
  
<span data-ttu-id="9c677-425">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-425">-or-</span></span> 
 <span data-ttu-id="9c677-426">В параметре <paramref name="value" /> задано имя, не являющееся именем одной из именованных констант, определенных для данного перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-426"><paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="9c677-427"><paramref name="value" /> находится вне диапазона базового типа <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-427"><paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="9c677-428">Тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-428">An enumeration type.</span></span></typeparam>
        <param name="value"><span data-ttu-id="9c677-429">Строка, содержащая имя или значение для преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-429">A string containing the name or value to convert.</span></span></param>
        <summary><span data-ttu-id="9c677-430">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант, указанных в параметре <typeparamref name="TEnum" />, в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-430">Converts the string representation of the name or numeric value of one or more enumerated constants specified by <typeparamref name="TEnum" /> to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="9c677-431">Объект типа <paramref name="TEnum" />, значение которого представлено параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-431">An object of type <paramref name="TEnum" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-432">Параметр <typeparamref name="TEnum" /> не является типом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-432"><typeparamref name="TEnum" /> is not an <see cref="T:System.Enum" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-433">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-433"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-434"><paramref name="value" /> не содержит сведения о перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c677-434"><paramref name="value" /> does not contain enumeration information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value, bool ignoreCase) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String, ignoreCase As Boolean) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : string * bool -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse (value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="9c677-435">Тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-435">An enumeration type.</span></span></typeparam>
        <param name="value"><span data-ttu-id="9c677-436">Строка, содержащая имя или значение для преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-436">A string containing the name or value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="9c677-437">Значение <see langword="true" /> предписывает игнорировать регистр. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-437"><see langword="true" /> to ignore case; <see langword="false" /> to regard case.</span></span></param>
        <summary><span data-ttu-id="9c677-438">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант, указанных в параметре <typeparamref name="TEnum" />, в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-438">Converts the string representation of the name or numeric value of one or more enumerated constants specified by <typeparamref name="TEnum" /> to an equivalent enumerated object.</span></span> <span data-ttu-id="9c677-439">Параметр указывает, учитывается ли в операции регистр.</span><span class="sxs-lookup"><span data-stu-id="9c677-439">A parameter specifies whether the operation is case-insensitive.</span></span></summary>
        <returns><span data-ttu-id="9c677-440">Объект типа <paramref name="TEnum" />, значение которого представлено параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-440">An object of type <paramref name="TEnum" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-441">Параметр <typeparamref name="TEnum" /> не является типом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-441"><typeparamref name="TEnum" /> is not an <see cref="T:System.Enum" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-442">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-442"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-443"><paramref name="value" /> не содержит сведения о перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c677-443"><paramref name="value" /> does not contain enumeration information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c677-444">Возвращает код типа этого экземпляра <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-444">Returns the type code of this <see cref="T:System.Enum" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9c677-445">Значение перечисления, которое описывает код типа этого экземпляра <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-445">An enumeration value that describes the type code of this <see cref="T:System.Enum" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c677-446">Неизвестный тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-446">The enum type is unknown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-447">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-447">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-448">Преобразует текущее значение в логическое значение на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-448">Converts the current value to a Boolean value based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-449">Этот член всегда выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-449">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-450">В настоящий момент не реализовано.</span><span class="sxs-lookup"><span data-stu-id="9c677-450">Currently not implemented.</span></span> <span data-ttu-id="9c677-451">Всегда вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-451">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9c677-452">Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="9c677-452">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-453">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-453">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-454">Преобразует текущее значение в 8-битовое целое число без знака на основе базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-454">Converts the current value to an 8-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-455">Преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-455">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-456">Использует <xref:System.Convert> для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-456">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-457">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-457">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-458">Преобразует текущее значение в символ Юникода на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-458">Converts the current value to a Unicode character based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-459">Этот член всегда выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-459">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-460">В настоящий момент не реализовано.</span><span class="sxs-lookup"><span data-stu-id="9c677-460">Currently not implemented.</span></span> <span data-ttu-id="9c677-461">Всегда вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-461">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9c677-462">Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="9c677-462">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-463">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-463">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-464">Преобразует текущее значение в значение типа <see cref="T:System.DateTime" /> на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-464">Converts the current value to a <see cref="T:System.DateTime" /> based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-465">Этот член всегда выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-465">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-466">В настоящий момент не реализовано.</span><span class="sxs-lookup"><span data-stu-id="9c677-466">Currently not implemented.</span></span> <span data-ttu-id="9c677-467">Всегда вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-467">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9c677-468">Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="9c677-468">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-469">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-469">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-470">Преобразует текущее значение в значение типа <see cref="T:System.Decimal" /> на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-470">Converts the current value to a <see cref="T:System.Decimal" /> based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-471">Этот член всегда выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-471">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-472">В настоящий момент не реализовано.</span><span class="sxs-lookup"><span data-stu-id="9c677-472">Currently not implemented.</span></span> <span data-ttu-id="9c677-473">Всегда вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-473">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9c677-474">Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="9c677-474">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-475">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-475">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-476">Преобразует текущее значение объекта в число двойной точности с плавающей запятой на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-476">Converts the current value to a double-precision floating point number based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-477">Этот член всегда выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-477">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-478">В настоящий момент не реализовано.</span><span class="sxs-lookup"><span data-stu-id="9c677-478">Currently not implemented.</span></span> <span data-ttu-id="9c677-479">Всегда вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-479">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9c677-480">Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="9c677-480">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-481">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-481">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-482">Преобразует текущее значение в 16-битовое целое число со знаком на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-482">Converts the current value to a 16-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-483">Преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-483">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-484">Использует <xref:System.Convert> для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-484">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-485">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-485">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-486">Преобразует текущее значение в 32-битовое целое число со знаком на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-486">Converts the current value to a 32-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-487">Преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-487">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-488">Использует <xref:System.Convert> для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-488">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-489">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-489">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-490">Преобразует текущее значение в 64-битовое целое число со знаком на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-490">Converts the current value to a 64-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-491">Преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-491">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-492">Использует <xref:System.Convert> для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-492">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-493">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-493">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-494">Преобразует текущее значение в 8-битовое целое число со знаком на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-494">Converts the current value to an 8-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-495">Преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-495">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-496">Использует <xref:System.Convert> для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-496">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-497">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-497">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-498">Преобразует текущее значение в число с плавающей запятой одиночной точности на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-498">Converts the current value to a single-precision floating-point number based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-499">Этот член всегда выбрасывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-499">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-500">В настоящий момент не реализовано.</span><span class="sxs-lookup"><span data-stu-id="9c677-500">Currently not implemented.</span></span> <span data-ttu-id="9c677-501">Всегда вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="9c677-501">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9c677-502">Во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="9c677-502">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-503">Реализация интерфейса <see cref="T:System.IFormatProvider" />, предоставляющая сведения о формате возвращаемого значения, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="9c677-503">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span> <span data-ttu-id="9c677-504">Этот аргумент не используется.</span><span class="sxs-lookup"><span data-stu-id="9c677-504">This argument is not used.</span></span></param>
        <summary><span data-ttu-id="9c677-505">Эта перегрузка метода является устаревшей, используйте вместо нее <see cref="M:System.Enum.ToString" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-505">This method overload is obsolete; use <see cref="M:System.Enum.ToString" /> instead.</span></span></summary>
        <returns><span data-ttu-id="9c677-506">Строковое представление значения этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9c677-506">The string representation of the value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9c677-507">Целевой тип преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-507">The type to convert to.</span></span></param>
        <param name="provider"><span data-ttu-id="9c677-508">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-508">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-509">Преобразует текущее значение к заданному типу на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-509">Converts the current value to a specified type based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-510">Преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-510">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-511">Использует <xref:System.Convert> для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-511">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-512">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-512">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-513">Преобразует текущее значение в 16-битовое целое число без знака на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-513">Converts the current value to a 16-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-514">Преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-514">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-515">Использует <xref:System.Convert> для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-515">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-516">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-516">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-517">Преобразует текущее значение в 32-битовое целое число без знака на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-517">Converts the current value to a 32-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-518">Преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-518">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-519">Использует <xref:System.Convert> для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-519">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-520">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9c677-520">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="9c677-521">Преобразует текущее значение в 64-битовое целое число без знака на основе его базового типа.</span><span class="sxs-lookup"><span data-stu-id="9c677-521">Converts the current value to a 64-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="9c677-522">Преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-522">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-523">Использует <xref:System.Convert> для выполнения преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-523">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;dotnet-uwp-10.0">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="9c677-524">Спецификация формата.</span><span class="sxs-lookup"><span data-stu-id="9c677-524">A format specification.</span></span></param>
        <param name="provider"><span data-ttu-id="9c677-525">Реализация интерфейса <see cref="T:System.IFormatProvider" />, предоставляющая сведения о формате возвращаемого значения, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="9c677-525">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span> <span data-ttu-id="9c677-526">Этот аргумент не используется.</span><span class="sxs-lookup"><span data-stu-id="9c677-526">This argument is not used.</span></span></param>
        <summary><span data-ttu-id="9c677-527">Эта перегрузка метода является устаревшей. Используйте <see cref="M:System.Enum.ToString(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-527">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="9c677-528">Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-528">The string representation of the value of this instance, as specified by <paramref name="format" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="9c677-529"><paramref name="format" /> не содержит допустимую спецификацию формата.</span><span class="sxs-lookup"><span data-stu-id="9c677-529"><paramref name="format" /> does not contain a valid format specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c677-530">Параметр <paramref name="format" /> равен X, но тип перечисления неизвестен.</span><span class="sxs-lookup"><span data-stu-id="9c677-530"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c677-531">Преобразует значение заданного целого числа в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-531">Converts a specified integer value to an enumeration member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Byte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * byte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-532">Тип перечисления, который требуется вернуть.</span><span class="sxs-lookup"><span data-stu-id="9c677-532">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-533">Значение, которое необходимо преобразовать в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-533">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="9c677-534">Преобразует значение заданного 8-разрядного целого числа в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-534">Converts the specified 8-bit unsigned integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-535">Экземпляр перечисления, которому присвоено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-535">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-536">Метод <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> преобразует `value` в член перечисления, базовое значение которого — `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-536">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="9c677-537">Обратите внимание, что преобразование будет выполнено, даже если значение выходит за границы элементов `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-537">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="9c677-538">Чтобы гарантировать, что `value` является допустимым базовым значением перечисления `enumType`, передайте его методу <xref:System.Enum.IsDefined%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-538">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-539">Этот метод преобразования возвращает значение типа <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9c677-539">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="9c677-540">Затем его можно привести или преобразовать в объект типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-540">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-541"><paramref name="enumType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-541"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-542">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-542"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, short value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-543">Тип перечисления, который требуется вернуть.</span><span class="sxs-lookup"><span data-stu-id="9c677-543">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-544">Значение, которое необходимо преобразовать в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-544">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="9c677-545">Преобразует значение заданного 16-разрядного знакового целого числа в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-545">Converts the specified 16-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-546">Экземпляр перечисления, которому присвоено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-546">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-547">Метод <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> преобразует `value` в член перечисления, базовое значение которого — `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-547">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="9c677-548">Обратите внимание, что преобразование будет выполнено, даже если значение выходит за границы элементов `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-548">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="9c677-549">Чтобы гарантировать, что `value` является допустимым базовым значением перечисления `enumType`, передайте его методу <xref:System.Enum.IsDefined%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-549">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-550">Этот метод преобразования возвращает значение типа <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9c677-550">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="9c677-551">Затем его можно привести или преобразовать в объект типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-551">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-552">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-552"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-553">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-553"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, int value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-554">Тип перечисления, который требуется вернуть.</span><span class="sxs-lookup"><span data-stu-id="9c677-554">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-555">Значение, которое необходимо преобразовать в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-555">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="9c677-556">Преобразует значение заданного 32-разрядного знакового целого числа в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-556">Converts the specified 32-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-557">Экземпляр перечисления, которому присвоено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-557">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-558">Метод <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> преобразует `value` в член перечисления, базовое значение которого — `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-558">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="9c677-559">Обратите внимание, что преобразование будет выполнено, даже если значение выходит за границы элементов `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-559">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="9c677-560">Чтобы гарантировать, что `value` является допустимым базовым значением перечисления `enumType`, передайте его методу <xref:System.Enum.IsDefined%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-560">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-561">Этот метод преобразования возвращает значение типа <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9c677-561">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="9c677-562">Затем его можно привести или преобразовать в объект типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-562">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-563">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-563"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-564">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-564"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, long value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-565">Тип перечисления, который требуется вернуть.</span><span class="sxs-lookup"><span data-stu-id="9c677-565">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-566">Значение, которое необходимо преобразовать в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-566">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="9c677-567">Преобразует значение заданного 64-разрядного знакового целого числа в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-567">Converts the specified 64-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-568">Экземпляр перечисления, которому присвоено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-568">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-569">Метод <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> преобразует `value` в член перечисления, базовое значение которого — `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-569">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="9c677-570">Обратите внимание, что преобразование будет выполнено, даже если значение выходит за границы элементов `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-570">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="9c677-571">Чтобы гарантировать, что `value` является допустимым базовым значением перечисления `enumType`, передайте его методу <xref:System.Enum.IsDefined%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-571">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-572">Этот метод преобразования возвращает значение типа <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9c677-572">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="9c677-573">Затем его можно привести или преобразовать в объект типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-573">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-574">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-574"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-575">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-575"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * obj -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-576">Тип перечисления, который требуется вернуть.</span><span class="sxs-lookup"><span data-stu-id="9c677-576">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-577">Значение, которое необходимо преобразовать в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-577">The value convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="9c677-578">Преобразует заданный объект с целочисленным значением в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-578">Converts the specified object with an integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-579">Объект перечисления, значение которого равно <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-579">An enumeration object whose value is <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-580">Метод <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> преобразует целочисленное значение `value` в член перечисления, базовое значение которого — `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-580">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="9c677-581">Обратите внимание, что преобразование будет выполнено, даже если значение выходит за границы элементов `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-581">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="9c677-582">Чтобы гарантировать, что `value` является допустимым базовым значением перечисления `enumType`, передайте его методу <xref:System.Enum.IsDefined%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-582">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-583">Этот метод преобразования возвращает значение типа <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9c677-583">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="9c677-584">Затем его можно привести или преобразовать в объект типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-584">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-585">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-585"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-586">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-586"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="9c677-587">- или -</span><span class="sxs-lookup"><span data-stu-id="9c677-587">-or-</span></span> 
 <span data-ttu-id="9c677-588">Типом <paramref name="value" /> не является <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, или <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-588"><paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As SByte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * sbyte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.SByte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-589">Тип перечисления, который требуется вернуть.</span><span class="sxs-lookup"><span data-stu-id="9c677-589">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-590">Значение, которое необходимо преобразовать в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-590">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="9c677-591">Преобразует значение заданного 8-разрядного знакового целого числа в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-591">Converts the specified 8-bit signed integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-592">Экземпляр перечисления, которому присвоено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-592">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-593">Метод <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> преобразует `value` в член перечисления, базовое значение которого — `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-593">The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="9c677-594">Обратите внимание, что преобразование будет выполнено, даже если значение выходит за границы элементов `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-594">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="9c677-595">Чтобы гарантировать, что `value` является допустимым базовым значением перечисления `enumType`, передайте его методу <xref:System.Enum.IsDefined%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-595">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-596">Этот метод преобразования возвращает значение типа <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9c677-596">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="9c677-597">Затем его можно привести или преобразовать в объект типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-597">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-598">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-598"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-599">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-599"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-600">Тип перечисления, который требуется вернуть.</span><span class="sxs-lookup"><span data-stu-id="9c677-600">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-601">Значение, которое необходимо преобразовать в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-601">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="9c677-602">Преобразует значение заданного 16-разрядного целого числа без знака в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-602">Converts the specified 16-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-603">Экземпляр перечисления, которому присвоено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-603">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-604">Метод <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> преобразует `value` в член перечисления, базовое значение которого — `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-604">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="9c677-605">Обратите внимание, что преобразование будет выполнено, даже если значение выходит за границы элементов `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-605">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="9c677-606">Чтобы гарантировать, что `value` является допустимым базовым значением перечисления `enumType`, передайте его методу <xref:System.Enum.IsDefined%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-606">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-607">Этот метод преобразования возвращает значение типа <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9c677-607">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="9c677-608">Затем его можно привести или преобразовать в объект типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-608">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-609">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-609"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-610">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-610"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UInteger) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint32 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-611">Тип перечисления, который требуется вернуть.</span><span class="sxs-lookup"><span data-stu-id="9c677-611">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-612">Значение, которое необходимо преобразовать в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-612">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="9c677-613">Преобразует значение заданного 32-разрядного целого числа без знака в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-613">Converts the specified 32-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-614">Экземпляр перечисления, которому присвоено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-614">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-615">Метод <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> преобразует `value` в член перечисления, базовое значение которого — `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-615">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="9c677-616">Обратите внимание, что преобразование будет выполнено, даже если значение выходит за границы элементов `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-616">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="9c677-617">Чтобы гарантировать, что `value` является допустимым базовым значением перечисления `enumType`, передайте его методу <xref:System.Enum.IsDefined%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-617">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-618">Этот метод преобразования возвращает значение типа <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9c677-618">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="9c677-619">Затем его можно привести или преобразовать в объект типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-619">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-620">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-620"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-621">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-621"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-622">Тип перечисления, который требуется вернуть.</span><span class="sxs-lookup"><span data-stu-id="9c677-622">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-623">Значение, которое необходимо преобразовать в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-623">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="9c677-624">Преобразует значение заданного 64-разрядного целого числа без знака в член перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-624">Converts the specified 64-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="9c677-625">Экземпляр перечисления, которому присвоено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-625">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-626">Метод <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> преобразует `value` в член перечисления, базовое значение которого — `value`.</span><span class="sxs-lookup"><span data-stu-id="9c677-626">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="9c677-627">Обратите внимание, что преобразование будет выполнено, даже если значение выходит за границы элементов `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-627">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="9c677-628">Чтобы гарантировать, что `value` является допустимым базовым значением перечисления `enumType`, передайте его методу <xref:System.Enum.IsDefined%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c677-628">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="9c677-629">Этот метод преобразования возвращает значение типа <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9c677-629">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="9c677-630">Затем его можно привести или преобразовать в объект типа `enumType`.</span><span class="sxs-lookup"><span data-stu-id="9c677-630">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9c677-631">Свойство <paramref name="enumType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-631"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-632">Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-632"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c677-633">Преобразует значение этого экземпляра в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="9c677-633">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="9c677-634">Строки форматов перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-634">Enumeration Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="enum.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c677-635">Преобразует значение этого экземпляра в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="9c677-635">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="9c677-636">Строковое представление значения этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9c677-636">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-637">Возвращаемое значение форматируется с помощью общего описателя формата ("G").</span><span class="sxs-lookup"><span data-stu-id="9c677-637">The return value is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="9c677-638">То есть если <xref:System.FlagsAttribute> не применяется к этому перечислимому типу и существует именованная константа, равная значению этого экземпляра, то возвращаемое значение является строкой, содержащей имя константы.</span><span class="sxs-lookup"><span data-stu-id="9c677-638">That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant.</span></span> <span data-ttu-id="9c677-639">Если применяется <xref:System.FlagsAttribute> и существует сочетание одной или нескольких именованных констант, равное значению этого экземпляра, то возвращаемое значение является строкой, содержащей разделенный разделителем список имен констант.</span><span class="sxs-lookup"><span data-stu-id="9c677-639">If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants.</span></span> <span data-ttu-id="9c677-640">В противном случае возвращаемое значение является строковым представлением числового значения данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9c677-640">Otherwise, the return value is the string representation of the numeric value of this instance.</span></span> <span data-ttu-id="9c677-641">Дополнительные сведения о форматировании значений перечисления см. в разделе [строки формата перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9c677-641">For more information about formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="9c677-642">Дополнительные сведения о форматировании в целом см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="9c677-642">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-643">В следующем примере показано преобразование перечислимого значения в строку.</span><span class="sxs-lookup"><span data-stu-id="9c677-643">The following example demonstrates converting an enumerated value to a string.</span></span>  
  
 [!code-cpp[Classic Enum.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Enum.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic Enum.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="9c677-644">Если несколько членов перечисления имеют одинаковое базовое значение и вы пытаетесь получить строковое представление имени члена перечисления на основе его базового значения, код не должен делать никаких предположений о том, какое имя будет возвращено методом.</span><span class="sxs-lookup"><span data-stu-id="9c677-644">If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</span></span> <span data-ttu-id="9c677-645">Например, следующее перечисление определяет два члена: <c>затенять. Gray</c> и <c>Shader. Grey</c>, имеющие одно и то же базовое значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-645">For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.</span></span>  
  
<span data-ttu-id="9c677-646">[! код-CSharp[System. Enum. ToString # 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! код-VB[System. Enum. ToString # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="9c677-646">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span></span> 
<span data-ttu-id="9c677-647">Следующий вызов метода пытается получить имя элемента перечисления <c>заливки</c> , базовое значение которого равно 1.</span><span class="sxs-lookup"><span data-stu-id="9c677-647">The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1.</span></span> <span data-ttu-id="9c677-648">Метод может возвращать "серый" или "серый", и код не должен делать никаких предположений о том, какая строка будет возвращена.</span><span class="sxs-lookup"><span data-stu-id="9c677-648">The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</span></span>  
  
<span data-ttu-id="9c677-649">[! код-CSharp[System. Enum. ToString # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [! код-VB[System. Enum. ToString # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="9c677-649">[!code-csharp[System.Enum.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [!code-vb[System.Enum.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="enum.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="9c677-650">(Является устаревшим.)</span><span class="sxs-lookup"><span data-stu-id="9c677-650">(obsolete)</span></span></param>
        <summary><span data-ttu-id="9c677-651">Перегруженная версия метода является устаревшей, вместо нее следует использовать метод <see cref="M:System.Enum.ToString" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-651">This method overload is obsolete; use <see cref="M:System.Enum.ToString" />.</span></span></summary>
        <returns><span data-ttu-id="9c677-652">Строковое представление значения этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="9c677-652">The string representation of the value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="enum.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="9c677-653">Строка формата.</span><span class="sxs-lookup"><span data-stu-id="9c677-653">A format string.</span></span></param>
        <summary><span data-ttu-id="9c677-654">Преобразует числовое значение этого экземпляра в эквивалентное ему строковое представление с использованием указанного формата.</span><span class="sxs-lookup"><span data-stu-id="9c677-654">Converts the value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="9c677-655">Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-655">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-656">Параметр `format` может быть одной из следующих строк формата: "G" или "g", "D", "d", "X", "x", "F" или "f" (строка формата не учитывает регистр).</span><span class="sxs-lookup"><span data-stu-id="9c677-656">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="9c677-657">Если `format` является `null` или пустой строкой (""), используется описатель общего формата ("G").</span><span class="sxs-lookup"><span data-stu-id="9c677-657">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="9c677-658">Дополнительные сведения о строках формата перечисления и значениях перечисления форматирования см. в разделе [строки формата перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9c677-658">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="9c677-659">Дополнительные сведения о форматировании в целом см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="9c677-659">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-660">В следующем примере показано, как преобразовать перечислимое значение в строку.</span><span class="sxs-lookup"><span data-stu-id="9c677-660">The following example demonstrates how to convert an enumerated value to a string.</span></span>  
  
 [!code-cpp[enum.tostring#1](~/samples/snippets/cpp/VS_Snippets_CLR/enum.tostring/CPP/tostr.cpp#1)]
 [!code-csharp[enum.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/enum.tostring/CS/tostr.cs#1)]
 [!code-vb[enum.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enum.tostring/VB/tostr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="9c677-661"><paramref name="format" /> содержит недопустимую спецификацию.</span><span class="sxs-lookup"><span data-stu-id="9c677-661"><paramref name="format" /> contains an invalid specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c677-662">Параметр <paramref name="format" /> равен X, но тип перечисления неизвестен.</span><span class="sxs-lookup"><span data-stu-id="9c677-662"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="9c677-663">Если несколько членов перечисления имеют одинаковое базовое значение и вы пытаетесь получить строковое представление имени члена перечисления на основе его базового значения, код не должен делать никаких предположений о том, какое имя будет возвращено методом.</span><span class="sxs-lookup"><span data-stu-id="9c677-663">If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</span></span> <span data-ttu-id="9c677-664">Например, следующее перечисление определяет два члена: <c>затенять. Gray</c> и <c>Shader. Grey</c>, имеющие одно и то же базовое значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-664">For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.</span></span>  
  
<span data-ttu-id="9c677-665">[! код-CSharp[System. Enum. ToString # 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! код-VB[System. Enum. ToString # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="9c677-665">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span></span> 
<span data-ttu-id="9c677-666">Следующий вызов метода пытается получить имя элемента перечисления <c>заливки</c> , базовое значение которого равно 1.</span><span class="sxs-lookup"><span data-stu-id="9c677-666">The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1.</span></span> <span data-ttu-id="9c677-667">Метод может возвращать "серый" или "серый", и код не должен делать никаких предположений о том, какая строка будет возвращена.</span><span class="sxs-lookup"><span data-stu-id="9c677-667">The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</span></span>  
  
<span data-ttu-id="9c677-668">[! код-CSharp[System. Enum. ToString # 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [! код-VB[System. Enum. ToString # 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="9c677-668">[!code-csharp[System.Enum.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [!code-vb[System.Enum.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
        <altmember cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="9c677-669">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="9c677-669">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="9c677-670">Строки форматов перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-670">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="enum.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="9c677-671">Спецификация формата.</span><span class="sxs-lookup"><span data-stu-id="9c677-671">A format specification.</span></span></param>
        <param name="provider"><span data-ttu-id="9c677-672">(Является устаревшим.)</span><span class="sxs-lookup"><span data-stu-id="9c677-672">(Obsolete.)</span></span></param>
        <summary><span data-ttu-id="9c677-673">Эта перегрузка метода является устаревшей. Используйте <see cref="M:System.Enum.ToString(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-673">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="9c677-674">Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-674">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-675">Параметр `format` может быть одной из следующих строк формата: "G" или "g", "D", "d", "X", "x", "F" или "f" (строка формата не учитывает регистр).</span><span class="sxs-lookup"><span data-stu-id="9c677-675">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="9c677-676">Если `format` является `null` или пустой строкой (""), используется описатель общего формата ("G").</span><span class="sxs-lookup"><span data-stu-id="9c677-676">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="9c677-677">Дополнительные сведения о строках формата перечисления и значениях перечисления форматирования см. в разделе [строки формата перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9c677-677">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="9c677-678">Дополнительные сведения о форматировании в целом см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="9c677-678">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="9c677-679">Укажите только `format`; параметр `provider` устарел.</span><span class="sxs-lookup"><span data-stu-id="9c677-679">Specify only `format`; the `provider` parameter is obsolete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="9c677-680">Формат <paramref name="format" /> не содержит допустимой спецификации формата.</span><span class="sxs-lookup"><span data-stu-id="9c677-680"><paramref name="format" /> does not contain a valid format specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9c677-681">Параметр <paramref name="format" /> равен X, но тип перечисления неизвестен.</span><span class="sxs-lookup"><span data-stu-id="9c677-681"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="9c677-682">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="9c677-682">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="9c677-683">Строки форматов перечисления</span><span class="sxs-lookup"><span data-stu-id="9c677-683">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9c677-684">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-684">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="9c677-685">Возвращаемое значение указывает, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="9c677-685">The return value indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string * obj -&gt; bool" Usage="System.Enum.TryParse (enumType, value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Object" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-686">Тип перечисления, используемый для разбора.</span><span class="sxs-lookup"><span data-stu-id="9c677-686">The enum type to use for parsing.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-687">Строковое представление имени или числового значения одной или нескольких перечислимых констант.</span><span class="sxs-lookup"><span data-stu-id="9c677-687">The string representation of the name or numeric value of one or more enumerated constants.</span></span></param>
        <param name="result"><span data-ttu-id="9c677-688">Когда этот метод возвращает значение <see langword="true" />, содержит объект с константой перечисления, представляющей разобранное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-688">When this method returns <see langword="true" />, an object containing an enumeration constant representing the parsed value.</span></span></param>
        <summary><span data-ttu-id="9c677-689">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-689">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="9c677-690"><see langword="true" />, если преобразование выполнено успешно; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-690"><see langword="true" /> if the conversion succeeded; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, bool ignoreCase, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, bool ignoreCase, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ignoreCase As Boolean, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string * bool * obj -&gt; bool" Usage="System.Enum.TryParse (enumType, value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Object" RefType="out" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="9c677-691">Тип перечисления, используемый для разбора.</span><span class="sxs-lookup"><span data-stu-id="9c677-691">The enum type to use for parsing.</span></span></param>
        <param name="value"><span data-ttu-id="9c677-692">Строковое представление имени или числового значения одной или нескольких перечислимых констант.</span><span class="sxs-lookup"><span data-stu-id="9c677-692">The string representation of the name or numeric value of one or more enumerated constants.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="9c677-693">Значение <see langword="true" /> для чтения <paramref name="value" /> в режиме без учета регистра; значение <see langword="false" /> для чтения <paramref name="value" /> в режиме с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="9c677-693"><see langword="true" /> to read <paramref name="value" /> in case insensitive mode; <see langword="false" /> to read <paramref name="value" /> in case sensitive mode.</span></span></param>
        <param name="result"><span data-ttu-id="9c677-694">Когда этот метод возвращает значение <see langword="true" />, содержит объект с константой перечисления, представляющей разобранное значение.</span><span class="sxs-lookup"><span data-stu-id="9c677-694">When this method returns <see langword="true" />, an object containing an enumeration constant representing the parsed value.</span></span></param>
        <summary><span data-ttu-id="9c677-695">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-695">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="9c677-696"><see langword="true" />, если преобразование выполнено успешно; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-696"><see langword="true" /> if the conversion succeeded; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * 'Enum -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="TEnum" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="9c677-697">Тип перечисления, в который требуется преобразовать <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-697">The enumeration type to which to convert <paramref name="value" />.</span></span></typeparam>
        <param name="value"><span data-ttu-id="9c677-698">Чувствительное к регистру строковое представление имени перечисления или базового значения для преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-698">The case-sensitive string representation of the enumeration name or underlying value to convert.</span></span></param>
        <param name="result"><span data-ttu-id="9c677-699">При возврате данного метода <paramref name="result" /> содержит объект типа <c>TEnum</c>, значение которого представлено параметром <paramref name="value" />, если операция анализа выполнена успешно.</span><span class="sxs-lookup"><span data-stu-id="9c677-699">When this method returns, <paramref name="result" /> contains an object of type <c>TEnum</c> whose value is represented by <paramref name="value" /> if the parse operation succeeds.</span></span> <span data-ttu-id="9c677-700">Если операция анализа завершается неудачно, то <paramref name="result" /> содержит значение по умолчанию базового типа <c>TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="9c677-700">If the parse operation fails, <paramref name="result" /> contains the default value of the underlying type of <c>TEnum</c>.</span></span> <span data-ttu-id="9c677-701">Обратите внимание, что это значение не обязательно должно быть членом перечисления <c>TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="9c677-701">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span></span> <span data-ttu-id="9c677-702">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="9c677-702">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="9c677-703">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-703">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="9c677-704">Возвращаемое значение указывает, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="9c677-704">The return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="9c677-705">Значение <see langword="true" />, если параметр <paramref name="value" /> успешно преобразован; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-705"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-706"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> идентичен методу <xref:System.Enum.Parse%28System.Type%2CSystem.String%29>, за исключением того, что вместо создания исключения он возвращает `false`, если преобразование завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="9c677-706"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="9c677-707">Он устраняет необходимость в обработке исключений при анализе строкового представления значения перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-707">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="9c677-708">Параметр `value` содержит строковое представление базового значения или именованной константы члена перечисления либо список именованных констант или базовых значений, разделенных запятыми (,).</span><span class="sxs-lookup"><span data-stu-id="9c677-708">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="9c677-709">Если `value` включает несколько именованных констант или значений, то перед каждым значением, именем или запятой в `value`может предшествовать один или несколько пробелов.</span><span class="sxs-lookup"><span data-stu-id="9c677-709">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="9c677-710">Если `value` является списком, `result` отражает значение указанных имен или базовых значений в сочетании с побитовой операцией `OR`.</span><span class="sxs-lookup"><span data-stu-id="9c677-710">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="9c677-711">Если `value` является строковым представлением имени значения перечисления, то при сравнении `value` с именами перечислений учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="9c677-711">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive.</span></span>  
  
 <span data-ttu-id="9c677-712">Если `value` является именем, которое не соответствует именованной константе `TEnum`, метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="9c677-712">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="9c677-713">Если `value` — строковое представление целого числа, которое не представляет базовое значение перечисления `TEnum`, метод возвращает член перечисления, базовое значение которого `value` преобразуется в целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="9c677-713">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="9c677-714">Если такое поведение нежелательно, вызовите метод <xref:System.Enum.IsDefined%2A>, чтобы убедиться, что определенное строковое представление целого числа действительно является членом `TEnum`.</span><span class="sxs-lookup"><span data-stu-id="9c677-714">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-715">В следующем примере определяется перечисление `Colors`, вызывается метод <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> для преобразования строк в соответствующие значения перечисления и вызывается метод <xref:System.Enum.IsDefined%2A>, чтобы гарантировать, что определенные целочисленные значения являются базовыми значениями в перечислении `Colors`.</span><span class="sxs-lookup"><span data-stu-id="9c677-715">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Enum.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-716"><paramref name="TEnum" /> не является типом перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-716"><paramref name="TEnum" /> is not an enumeration type.</span></span></exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, bool ignoreCase, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ignoreCase As Boolean, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * bool * 'Enum -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="TEnum" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="9c677-717">Тип перечисления, в который требуется преобразовать <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-717">The enumeration type to which to convert <paramref name="value" />.</span></span></typeparam>
        <param name="value"><span data-ttu-id="9c677-718">Строковое представление имени перечисления или базового значения для преобразования.</span><span class="sxs-lookup"><span data-stu-id="9c677-718">The string representation of the enumeration name or underlying value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="9c677-719">Значение <see langword="true" />, чтобы игнорировать регистр; значение <see langword="false" />, чтобы учитывать регистр.</span><span class="sxs-lookup"><span data-stu-id="9c677-719"><see langword="true" /> to ignore case; <see langword="false" /> to consider case.</span></span></param>
        <param name="result"><span data-ttu-id="9c677-720">При возврате данного метода <paramref name="result" /> содержит объект типа <c>TEnum</c>, значение которого представлено параметром <paramref name="value" />, если операция анализа выполнена успешно.</span><span class="sxs-lookup"><span data-stu-id="9c677-720">When this method returns, <paramref name="result" /> contains an object of type <c>TEnum</c> whose value is represented by <paramref name="value" /> if the parse operation succeeds.</span></span> <span data-ttu-id="9c677-721">Если операция анализа завершается неудачно, то <paramref name="result" /> содержит значение по умолчанию базового типа <c>TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="9c677-721">If the parse operation fails, <paramref name="result" /> contains the default value of the underlying type of <c>TEnum</c>.</span></span> <span data-ttu-id="9c677-722">Обратите внимание, что это значение не обязательно должно быть членом перечисления <c>TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="9c677-722">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span></span> <span data-ttu-id="9c677-723">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="9c677-723">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="9c677-724">Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект.</span><span class="sxs-lookup"><span data-stu-id="9c677-724">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="9c677-725">Параметр указывает, учитывается ли в операции регистр.</span><span class="sxs-lookup"><span data-stu-id="9c677-725">A parameter specifies whether the operation is case-sensitive.</span></span> <span data-ttu-id="9c677-726">Возвращаемое значение указывает, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="9c677-726">The return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="9c677-727">Значение <see langword="true" />, если параметр <paramref name="value" /> успешно преобразован; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9c677-727"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c677-728"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> идентичен методу <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29>, за исключением того, что вместо создания исключения он возвращает `false`, если преобразование завершается неудачно.</span><span class="sxs-lookup"><span data-stu-id="9c677-728"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="9c677-729">Он устраняет необходимость в обработке исключений при анализе строкового представления значения перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-729">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="9c677-730">Параметр `value` содержит строковое представление базового значения или именованной константы члена перечисления либо список именованных констант или базовых значений, разделенных запятыми (,).</span><span class="sxs-lookup"><span data-stu-id="9c677-730">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="9c677-731">Если `value` включает несколько именованных констант или значений, то перед каждым значением, именем или запятой в `value`может предшествовать один или несколько пробелов.</span><span class="sxs-lookup"><span data-stu-id="9c677-731">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="9c677-732">Если `value` является списком, `result` отражает значение указанных имен или базовых значений в сочетании с побитовой операцией `OR`.</span><span class="sxs-lookup"><span data-stu-id="9c677-732">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="9c677-733">Если `value` является строковым представлением имени значения перечисления, сравнение `value` с именами перечислений зависит от параметра `ignoreCase`.</span><span class="sxs-lookup"><span data-stu-id="9c677-733">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter.</span></span> <span data-ttu-id="9c677-734">Если `true`, при сравнении регистр не учитывается; Если `false`, регистр учитывается.</span><span class="sxs-lookup"><span data-stu-id="9c677-734">If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive.</span></span>  
  
 <span data-ttu-id="9c677-735">Если `value` является именем, которое не соответствует именованной константе `TEnum`, метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="9c677-735">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="9c677-736">Если `value` — строковое представление целого числа, которое не представляет базовое значение перечисления `TEnum`, метод возвращает член перечисления, базовое значение которого `value` преобразуется в целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="9c677-736">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="9c677-737">Если такое поведение нежелательно, вызовите метод <xref:System.Enum.IsDefined%2A>, чтобы убедиться, что определенное строковое представление целого числа действительно является членом `TEnum`.</span><span class="sxs-lookup"><span data-stu-id="9c677-737">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c677-738">В следующем примере определяется перечисление `Colors`, вызывается метод <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> для преобразования строк в соответствующие значения перечисления и вызывается метод <xref:System.Enum.IsDefined%2A>, чтобы гарантировать, что определенные целочисленные значения являются базовыми значениями в перечислении `Colors`.</span><span class="sxs-lookup"><span data-stu-id="9c677-738">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span> <span data-ttu-id="9c677-739">При попытке преобразовать строковые представления именованных констант в эквивалентные им значения перечисления метод <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> использует сравнение без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="9c677-739">The <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method uses case-insensitive comparison when trying to convert the string representations of named constants to their equivalent enumeration values.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.Enum.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c677-740"><paramref name="TEnum" /> не является типом перечисления.</span><span class="sxs-lookup"><span data-stu-id="9c677-740"><paramref name="TEnum" /> is not an enumeration type.</span></span></exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>
