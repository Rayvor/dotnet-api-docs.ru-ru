<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="71b0a0cd8962732c2527728314ee76a1a38a543e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70711959" /></Metadata><TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="7bd3b-101">Источник события.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="7bd3b-102">Объект , не содержащий данных о событии.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-102">An object that contains no event data.</span></span></param>
    <summary><span data-ttu-id="7bd3b-103">Представляет метод, который будет обрабатывать событие, не имеющее данных.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-103">Represents the method that will handle an event that has no event data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bd3b-104">Модель событий в .NET Framework основана на наличии делегата события, соединяющего событие с его обработчиком.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-104">The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</span></span> <span data-ttu-id="7bd3b-105">Для вызова события необходимы два элемента:</span><span class="sxs-lookup"><span data-stu-id="7bd3b-105">To raise an event, two elements are needed:</span></span>  
  
-   <span data-ttu-id="7bd3b-106">Делегат, определяющий метод, который предоставляет ответ на событие.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-106">A delegate that identifies the method that provides the response to the event.</span></span>  
  
-   <span data-ttu-id="7bd3b-107">При необходимости — класс, содержащий данные события, если событие предоставляет данные.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-107">Optionally, a class that holds the event data, if the event provides data.</span></span>  
  
 <span data-ttu-id="7bd3b-108">Делегат — это тип, определяющий сигнатуру, то есть тип возвращаемого значения и типы списка параметров для метода.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-108">The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</span></span> <span data-ttu-id="7bd3b-109">Можно использовать тип делегата для объявления переменной, которая может ссылаться на любой метод с той же сигнатурой, что и делегат.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-109">You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</span></span>  
  
 <span data-ttu-id="7bd3b-110">Стандартная сигнатура делегата обработчика событий определяет метод, который не возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-110">The standard signature of an event handler delegate defines a method that does not return a value.</span></span> <span data-ttu-id="7bd3b-111">Первый параметр этого метода имеет тип <xref:System.Object> и ссылается на экземпляр, который вызывает событие.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-111">This method's first parameter is of type <xref:System.Object> and refers to the instance that raises the event.</span></span> <span data-ttu-id="7bd3b-112">Второй параметр является производным от типа <xref:System.EventArgs> и содержит данные события.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-112">Its second parameter is derived from type <xref:System.EventArgs> and holds the event data.</span></span> <span data-ttu-id="7bd3b-113">Если событие не создает данные события, второй параметр — это просто значение <xref:System.EventArgs.Empty?displayProperty=nameWithType> поля.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-113">If the event does not generate event data, the second parameter is simply the value of the <xref:System.EventArgs.Empty?displayProperty=nameWithType> field.</span></span> <span data-ttu-id="7bd3b-114">В противном случае второй параметр является типом, производным от <xref:System.EventArgs> , и предоставляет все поля или свойства, необходимые для хранения данных события.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-114">Otherwise, the second parameter is a type derived from <xref:System.EventArgs> and supplies any fields or properties needed to hold the event data.</span></span>  
  
 <span data-ttu-id="7bd3b-115"><xref:System.EventHandler> Делегат — это предопределенный делегат, который специально представляет метод обработчика событий для события, которое не создает данные.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-115">The <xref:System.EventHandler> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</span></span> <span data-ttu-id="7bd3b-116">Если событие создает данные, необходимо использовать универсальный <xref:System.EventHandler%601> класс делегата.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-116">If your event does generate data, you must use the generic <xref:System.EventHandler%601> delegate class.</span></span>  
  
 <span data-ttu-id="7bd3b-117">Чтобы связать событие с методом, который будет выполнять обработку события, добавьте в событие экземпляр делегата.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-117">To associate the event with the method that will handle the event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="7bd3b-118">Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-118">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span>  
  
 <span data-ttu-id="7bd3b-119">Дополнительные сведения о делегатах обработчиков событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="7bd3b-119">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bd3b-120">В следующем примере показано событие с именем `ThresholdReached` , связанное <xref:System.EventHandler> с делегатом.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-120">The following example shows an event named `ThresholdReached` that is associated with an <xref:System.EventHandler> delegate.</span></span> <span data-ttu-id="7bd3b-121">Метод, назначенный <xref:System.EventHandler> делегату, вызывается `OnThresholdReached` в методе.</span><span class="sxs-lookup"><span data-stu-id="7bd3b-121">The method assigned to the <xref:System.EventHandler> delegate is called in the `OnThresholdReached` method.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f"><span data-ttu-id="7bd3b-122">Обработка и вызов событий</span><span class="sxs-lookup"><span data-stu-id="7bd3b-122">Handling and Raising Events</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/42afade7-3a02-4f2e-868b-95845f302f8f"><span data-ttu-id="7bd3b-123">Практическое руководство. Вызов и прием событий</span><span class="sxs-lookup"><span data-stu-id="7bd3b-123">How to: Raise and Consume Events</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/8fb0353a-e41b-4e23-b78f-da65db832f70"><span data-ttu-id="7bd3b-124">События (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="7bd3b-124">Events (Visual Basic)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/a8e51b22-d294-44fb-9539-0072f06c4cb3"><span data-ttu-id="7bd3b-125">События (Руководство по программированию в C#)</span><span class="sxs-lookup"><span data-stu-id="7bd3b-125">Events (C# Programming Guide)</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=261485"><span data-ttu-id="7bd3b-126">Общие сведения о событиях и перенаправленных событиях (приложения для Магазина Windows)</span><span class="sxs-lookup"><span data-stu-id="7bd3b-126">Events and routed events overview (Windows store apps)</span></span></related>
  </Docs>
</Type>
