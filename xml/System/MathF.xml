<Type Name="MathF" FullName="System.MathF">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b0d6155bbd0b32cf6c7c853590ebc3a635d9fcf" /><Meta Name="ms.sourcegitcommit" Value="08fc3691deb7adaf0dfd751b9d9d0b23a3d3a7b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/09/2019" /><Meta Name="ms.locfileid" Value="68901018" /></Metadata><TypeSignature Language="C#" Value="public static class MathF" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MathF extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.MathF" />
  <TypeSignature Language="VB.NET" Value="Public Class MathF" />
  <TypeSignature Language="C++ CLI" Value="public ref class MathF abstract sealed" />
  <TypeSignature Language="F#" Value="type MathF = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1ca98-101">Предоставляет константы и статические методы для тригонометрических, логарифмических и иных общих математических функций.</span><span class="sxs-lookup"><span data-stu-id="1ca98-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

<span data-ttu-id="1ca98-102">`MathF` Статические поля и методы класса соответствуют <xref:System.Math> классу класса, за исключением того, что их параметры <xref:System.Double>имеют тип <xref:System.Single> , <xref:System.Double> а не и возвращают <xref:System.Single> , а не значения.</span><span class="sxs-lookup"><span data-stu-id="1ca98-102">The static fields and methods of the `MathF` class correspond to those of the <xref:System.Math> class, except that their parameters are of type <xref:System.Single> rather than <xref:System.Double>, and they return <xref:System.Single> rather than <xref:System.Double> values.</span></span>

         ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float x);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.MathF.Abs x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-103">Число, которое больше или равно значению <see cref="F:System.Single.MinValue" />, но меньше или равно значению <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-103">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="1ca98-104">Возвращает абсолютное значение числа одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-104">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-105">Число х одинарной точности с плавающей запятой, такое, что 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-105">A single-precision floating-point number, x, such that 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-106">Абсолютное значение <xref:System.Single> объекта — это числовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="1ca98-106">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="1ca98-107">Например, абсолютное значение 1,2 e-03 и-1.2 E03 — 1,2 E03.</span><span class="sxs-lookup"><span data-stu-id="1ca98-107">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="1ca98-108">Если `x` параметр <xref:System.Single.PositiveInfinity>равен или ,<xref:System.Single.PositiveInfinity>возвращается значение. <xref:System.Single.NegativeInfinity></span><span class="sxs-lookup"><span data-stu-id="1ca98-108">If `x` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="1ca98-109">Если `x`параметр равен <xref:System.Single.NaN>, возвращается значение. <xref:System.Single.NaN></span><span class="sxs-lookup"><span data-stu-id="1ca98-109">If `x` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static float Acos (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Acos(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Acos(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Acos(float x);" />
      <MemberSignature Language="F#" Value="static member Acos : single -&gt; single" Usage="System.MathF.Acos x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-110">Число, представляющее косинус, где значение параметра <paramref name="x" /> должно быть больше или равно -1, но меньше или равно 1.</span><span class="sxs-lookup"><span data-stu-id="1ca98-110">A number representing a cosine, where <paramref name="x" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="1ca98-111">Возвращает угол, косинус которого равен указанному числу.</span><span class="sxs-lookup"><span data-stu-id="1ca98-111">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-112">Угол θ, измеренный в радианах, такой, что 0 ≤ θ ≤ π.</span><span class="sxs-lookup"><span data-stu-id="1ca98-112">An angle, θ, measured in radians, such that 0 ≤ θ ≤ π.</span></span>
  
<span data-ttu-id="1ca98-113">- или -</span><span class="sxs-lookup"><span data-stu-id="1ca98-113">-or-</span></span> 
 <span data-ttu-id="1ca98-114">Значение <see cref="F:System.Single.NaN" />, если <paramref name="x" /> &lt; –1 или <paramref name="x" /> &gt; 1 или значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-114"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> &lt; -1 or <paramref name="x" /> &gt; 1 or <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-115">Умножьте возвращаемое значение на 180/<xref:System.MathF.PI?displayProperty=nameWithType> , чтобы преобразовать из радианов в градусы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-115">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static float Acosh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Acosh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Acosh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Acosh(float x);" />
      <MemberSignature Language="F#" Value="static member Acosh : single -&gt; single" Usage="System.MathF.Acosh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-116">Число, представляющее гиперболический косинус, где значение параметра <paramref name="x" /> должно быть больше или равно 1, но меньше или равно <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-116">A number representing a hyperbolic cosine, where <paramref name="x" /> must be greater than or equal to 1, but less than or equal to <see cref="F:System.Single.PositiveInfinity" />.</span></span></param>
        <summary><span data-ttu-id="1ca98-117">Возвращает угол, гиперболический косинус которого равен указанному числу.</span><span class="sxs-lookup"><span data-stu-id="1ca98-117">Returns the angle whose hyperbolic cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-118">Угол θ, измеренный в радианах, такой, что 0 ≤ θ ≤ ∞.</span><span class="sxs-lookup"><span data-stu-id="1ca98-118">An angle, θ, measured in radians, such that 0 ≤ θ ≤ ∞.</span></span>
  
<span data-ttu-id="1ca98-119">-или-</span><span class="sxs-lookup"><span data-stu-id="1ca98-119">-or-</span></span> 
 <span data-ttu-id="1ca98-120"><see cref="F:System.Single.NaN" />, если <paramref name="x" /> &lt; 1 или <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-120"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> &lt; 1 or <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-121">Умножьте возвращаемое значение на 180/<xref:System.MathF.PI?displayProperty=nameWithType> , чтобы преобразовать из радианов в градусы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-121">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static float Asin (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Asin(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Asin(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Asin(float x);" />
      <MemberSignature Language="F#" Value="static member Asin : single -&gt; single" Usage="System.MathF.Asin x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-122">Число, представляющее синус, где значение параметра <paramref name="x" /> должно быть больше или равно -1, но меньше или равно 1.</span><span class="sxs-lookup"><span data-stu-id="1ca98-122">A number representing a sine, where <paramref name="x" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="1ca98-123">Возвращает угол, синус которого равен указанному числу.</span><span class="sxs-lookup"><span data-stu-id="1ca98-123">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-124">Угол θ, измеренный в радианах, такой, что –π/2 ≤ θ ≤ π/2.</span><span class="sxs-lookup"><span data-stu-id="1ca98-124">An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2.</span></span>
  
<span data-ttu-id="1ca98-125">- или -</span><span class="sxs-lookup"><span data-stu-id="1ca98-125">-or-</span></span> 
 <span data-ttu-id="1ca98-126">Значение <see cref="F:System.Single.NaN" />, если <paramref name="x" /> &lt; –1 или <paramref name="x" /> &gt; 1 или значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-126"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> &lt; -1 or <paramref name="x" /> &gt; 1 or <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-127">Положительное возвращаемое значение представляет собой угол против часовой стрелки от оси x; Отрицательное возвращаемое значение представляет собой угол по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="1ca98-127">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="1ca98-128">Умножьте возвращаемое значение на 180/<xref:System.MathF.PI?displayProperty=nameWithType> , чтобы преобразовать из радианов в градусы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-128">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static float Asinh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Asinh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Asinh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Asinh(float x);" />
      <MemberSignature Language="F#" Value="static member Asinh : single -&gt; single" Usage="System.MathF.Asinh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-129">Число, представляющее гиперболический синус, где значение параметра <paramref name="x" /> должно быть больше или равно <see cref="F:System.Single.NegativeInfinity" />, но меньше или равно <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-129">A number representing a hyperbolic sine, where <paramref name="x" /> must be greater than or equal to <see cref="F:System.Single.NegativeInfinity" />, but less than or equal to <see cref="F:System.Single.PositiveInfinity" />.</span></span></param>
        <summary><span data-ttu-id="1ca98-130">Возвращает угол, гиперболический синус которого равен указанному числу.</span><span class="sxs-lookup"><span data-stu-id="1ca98-130">Returns the angle whose hyperbolic sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-131">Угол θ, измеренный в радианах, такой, что –∞ &lt; θ ≤ –1 или 1 ≤ θ &lt; ∞.</span><span class="sxs-lookup"><span data-stu-id="1ca98-131">An angle, θ, measured in radians, such that -∞ &lt; θ ≤ -1, or 1 ≤ θ &lt; ∞.</span></span> 
  
<span data-ttu-id="1ca98-132">-или-</span><span class="sxs-lookup"><span data-stu-id="1ca98-132">-or-</span></span> 
 <span data-ttu-id="1ca98-133"><see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-133"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-134">Умножьте возвращаемое значение на 180/<xref:System.MathF.PI?displayProperty=nameWithType> , чтобы преобразовать из радианов в градусы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-134">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static float Atan (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Atan(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Atan(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Atan(float x);" />
      <MemberSignature Language="F#" Value="static member Atan : single -&gt; single" Usage="System.MathF.Atan x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-135">Число, представляющее тангенс.</span><span class="sxs-lookup"><span data-stu-id="1ca98-135">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="1ca98-136">Возвращает угол, тангенс которого равен указанному числу.</span><span class="sxs-lookup"><span data-stu-id="1ca98-136">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-137">Угол θ, измеренный в радианах, такой, что –π/2 ≤ θ ≤ π/2.</span><span class="sxs-lookup"><span data-stu-id="1ca98-137">An angle, θ, measured in radians, such that -π/2 ≤ θ ≤ π/2.</span></span>  
  
<span data-ttu-id="1ca98-138">- или -</span><span class="sxs-lookup"><span data-stu-id="1ca98-138">-or-</span></span> 
 <span data-ttu-id="1ca98-139">Значение <see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, -π/2, округленное до двойной точности (–1,5707963267949), если <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />, или π/2, округленное до двойной точности (1,5707963267949), если <paramref name="x" /> равно <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-139"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Single.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="x" /> equals <see cref="F:System.Single.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="x" /> equals <see cref="F:System.Single.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-140">Положительное возвращаемое значение представляет собой угол против часовой стрелки от оси x; Отрицательное возвращаемое значение представляет собой угол по часовой стрелке.</span><span class="sxs-lookup"><span data-stu-id="1ca98-140">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="1ca98-141">Умножьте возвращаемое значение на 180/<xref:System.MathF.PI?displayProperty=nameWithType> , чтобы преобразовать из радианов в градусы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-141">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static float Atan2 (float y, float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Atan2(float32 y, float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Atan2(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Single, x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Atan2(float y, float x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : single * single -&gt; single" Usage="System.MathF.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="1ca98-142">Координата y точки.</span><span class="sxs-lookup"><span data-stu-id="1ca98-142">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="1ca98-143">Координата х точки.</span><span class="sxs-lookup"><span data-stu-id="1ca98-143">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="1ca98-144">Возвращает угол, тангенс которого равен отношению двух указанных чисел.</span><span class="sxs-lookup"><span data-stu-id="1ca98-144">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="1ca98-145">Угол θ, измеренный в радианах, такой, что –π ≤ θ ≤ π, и tan(θ) = <paramref name="y" /> / <paramref name="x" />, где (<paramref name="x" />, <paramref name="y" />) — это точка в декартовой системе координат.</span><span class="sxs-lookup"><span data-stu-id="1ca98-145">An angle, θ, measured in radians, such that -π ≤ θ ≤ π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="1ca98-146">Обратите внимание на следующее.</span><span class="sxs-lookup"><span data-stu-id="1ca98-146">Observe the following:</span></span> 
<span data-ttu-id="1ca98-147">– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 1, 0 &lt; θ &lt; π/2.</span><span class="sxs-lookup"><span data-stu-id="1ca98-147">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
<span data-ttu-id="1ca98-148">– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 2, π/2 &lt; θ ≤ π.</span><span class="sxs-lookup"><span data-stu-id="1ca98-148">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ ≤ π.</span></span>  
  
<span data-ttu-id="1ca98-149">– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 3, -π &lt; θ &lt; -π/2.</span><span class="sxs-lookup"><span data-stu-id="1ca98-149">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
<span data-ttu-id="1ca98-150">– Для (<paramref name="x" />, <paramref name="y" />) в квадранте 4, -π/2 &lt; θ &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-150">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
<span data-ttu-id="1ca98-151">Для точек за пределами указанных квадрантов возвращаемое значение указано ниже.</span><span class="sxs-lookup"><span data-stu-id="1ca98-151">For points on the boundaries of the quadrants, the return value is the following:</span></span> 
<span data-ttu-id="1ca98-152">– Если y равно 0, и x не является отрицательным, то θ = 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-152">-   If y is 0 and x is not negative, θ = 0.</span></span>  
  
<span data-ttu-id="1ca98-153">– Если y равно 0, и x является отрицательным, то θ = π.</span><span class="sxs-lookup"><span data-stu-id="1ca98-153">-   If y is 0 and x is negative, θ = π.</span></span>  
  
<span data-ttu-id="1ca98-154">– Если y — положительное число, а x равно 0, то θ = π/2.</span><span class="sxs-lookup"><span data-stu-id="1ca98-154">-   If y is positive and x is 0, θ = π/2.</span></span>  
  
<span data-ttu-id="1ca98-155">– Если y — отрицательное число, а х равно 0, то θ = -π/2.</span><span class="sxs-lookup"><span data-stu-id="1ca98-155">-   If y is negative and x is 0, θ = -π/2.</span></span>  
  
<span data-ttu-id="1ca98-156">– Если y равен 0, и х равен 0, то θ = 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-156">-   If y is 0 and x is 0, θ = 0.</span></span>  
  
<span data-ttu-id="1ca98-157">Если значение параметра <paramref name="x" /> или <paramref name="y" /> равно <see cref="F:System.Single.NaN" /> либо если значения параметров <paramref name="x" /> и <paramref name="y" /> равны значению <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" />, метод возвращает значение <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-157">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Single.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Single.PositiveInfinity" /> or <see cref="F:System.Single.NegativeInfinity" />, the method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-158">Возвращаемое значение — это угол в декартовой плоскости, сформированный по оси x, и вектор, начинающийся с начала координат, (0,0) и заканчивающийся на точке (x, y).</span><span class="sxs-lookup"><span data-stu-id="1ca98-158">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static float Atanh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Atanh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Atanh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Atanh(float x);" />
      <MemberSignature Language="F#" Value="static member Atanh : single -&gt; single" Usage="System.MathF.Atanh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-159">Число, представляющее гиперболический тангенс, где значение параметра <paramref name="x" /> должно быть больше или равно –1, но меньше или равно 1.</span><span class="sxs-lookup"><span data-stu-id="1ca98-159">A number representing a hyperbolic tangent, where <paramref name="x" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="1ca98-160">Возвращает угол, гиперболический тангенс которого равен указанному числу.</span><span class="sxs-lookup"><span data-stu-id="1ca98-160">Returns the angle whose hyperbolic tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-161">Угол θ, измеренный в радианах, такой, что –∞ &lt; θ &lt;–1 или 1 &lt; θ &lt; ∞.</span><span class="sxs-lookup"><span data-stu-id="1ca98-161">An angle, θ, measured in radians, such that -∞ &lt; θ &lt;-1, or 1 &lt; θ &lt; ∞.</span></span>  
  
<span data-ttu-id="1ca98-162">- или -</span><span class="sxs-lookup"><span data-stu-id="1ca98-162">-or-</span></span> 
 <span data-ttu-id="1ca98-163">Значение <see cref="F:System.Single.NaN" />, если <paramref name="x" /> &lt; –1 или <paramref name="x" /> &gt; 1 или значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-163"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> &lt; -1 or <paramref name="x" /> &gt; 1 or <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-164">Умножьте возвращаемое значение на 180/<xref:System.MathF.PI?displayProperty=nameWithType> , чтобы преобразовать из радианов в градусы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-164">Multiply the return value by 180/<xref:System.MathF.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitDecrement">
      <MemberSignature Language="C#" Value="public static float BitDecrement (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 BitDecrement(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.BitDecrement(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitDecrement (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float BitDecrement(float x);" />
      <MemberSignature Language="F#" Value="static member BitDecrement : single -&gt; single" Usage="System.MathF.BitDecrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-165">Уменьшаемое значение.</span><span class="sxs-lookup"><span data-stu-id="1ca98-165">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="1ca98-166">Возвращает ближайшее самое маленькое значение, которое меньше, чем <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-166">Returns the next smallest value that compares less than <paramref name="x" />.</span></span></summary>
        <returns><span data-ttu-id="1ca98-167">Ближайшее самое маленькое значение, которое меньше, чем <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-167">The next smallest value that compares less than <paramref name="x" />.</span></span>
  
<span data-ttu-id="1ca98-168">- или -</span><span class="sxs-lookup"><span data-stu-id="1ca98-168">-or-</span></span> 
 <span data-ttu-id="1ca98-169"><see cref="F:System.Single.NegativeInfinity" />, если <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-169"><see cref="F:System.Single.NegativeInfinity" /> if <paramref name="x" /> is equals <see cref="F:System.Single.NegativeInfinity" />.</span></span>
  
<span data-ttu-id="1ca98-170">- или -</span><span class="sxs-lookup"><span data-stu-id="1ca98-170">-or-</span></span> 
 <span data-ttu-id="1ca98-171"><see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-171"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="BitIncrement">
      <MemberSignature Language="C#" Value="public static float BitIncrement (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 BitIncrement(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.BitIncrement(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitIncrement (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float BitIncrement(float x);" />
      <MemberSignature Language="F#" Value="static member BitIncrement : single -&gt; single" Usage="System.MathF.BitIncrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-172">Увеличиваемое значение.</span><span class="sxs-lookup"><span data-stu-id="1ca98-172">The value to increment.</span></span></param>
        <summary><span data-ttu-id="1ca98-173">Возвращает ближайшее значение, превышающее <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-173">Returns the next largest value that is greater than <paramref name="x" />.</span></span></summary>
        <returns><span data-ttu-id="1ca98-174">Ближайшее значение, превышающее <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-174">The next largest value that is greater than <paramref name="x" />.</span></span>
  
<span data-ttu-id="1ca98-175">- или -</span><span class="sxs-lookup"><span data-stu-id="1ca98-175">-or-</span></span> 
 <span data-ttu-id="1ca98-176"><see cref="F:System.Single.PositiveInfinity" />, если <paramref name="x" /> равно <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-176"><see cref="F:System.Single.PositiveInfinity" /> if <paramref name="x" /> equals <see cref="F:System.Single.PositiveInfinity" />.</span></span>
  
<span data-ttu-id="1ca98-177">- или -</span><span class="sxs-lookup"><span data-stu-id="1ca98-177">-or-</span></span> 
 <span data-ttu-id="1ca98-178"><see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-178"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> is equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static float Cbrt (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Cbrt(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Cbrt(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Cbrt(float x);" />
      <MemberSignature Language="F#" Value="static member Cbrt : single -&gt; single" Usage="System.MathF.Cbrt x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-179">Число, кубический корень которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="1ca98-179">The number whose cube root is to be found.</span></span></param>
        <summary><span data-ttu-id="1ca98-180">Возвращает кубический корень из указанного числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-180">Returns the cube root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-181">Кубический корень <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-181">The cube root of <paramref name="x" />.</span></span>
  
<span data-ttu-id="1ca98-182">- или -</span><span class="sxs-lookup"><span data-stu-id="1ca98-182">-or-</span></span> 
 <span data-ttu-id="1ca98-183"><see cref="F:System.Single.NaN" />, если <paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-183"><see cref="F:System.Single.NaN" /> if <paramref name="x" /> is equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks></remarks>
        <altmember cref="M:System.MathF.Pow(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static float Ceiling (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Ceiling(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Ceiling(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Ceiling(float x);" />
      <MemberSignature Language="F#" Value="static member Ceiling : single -&gt; single" Usage="System.MathF.Ceiling x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-184">Число одиночной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-184">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="1ca98-185">Возвращает наименьшее целое число, которое больше или равно заданному числу с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="1ca98-185">Returns the smallest integral value that is greater than or equal to the specified single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-186">Наименьшее целое число, которое больше или равно <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-186">The smallest integral value that is greater than or equal to <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-187">Если значение параметра <paramref name="x" /> равно  <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, возвращается это значение.</span><span class="sxs-lookup"><span data-stu-id="1ca98-187">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="1ca98-188">Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-188">Note that this method returns a <see cref="T:System.Single" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-189">Поведение этого метода соответствует стандарту IEEE 754, разделу 4.</span><span class="sxs-lookup"><span data-stu-id="1ca98-189">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="1ca98-190">Этот тип округления иногда называют округлением до положительной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="1ca98-190">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="1ca98-191">Иными словами, если `x` имеет положительное значение, присутствие какого-либо компонента дробной части приводит `x` к округлению до ближайшего наибольшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-191">In other words, if `x` is positive, the presence of any fractional component causes `x` to be rounded to the next highest integer.</span></span> <span data-ttu-id="1ca98-192">Если `x` имеет отрицательное значение, операция округления приводит к отмене любого `x` дробного компонента для.</span><span class="sxs-lookup"><span data-stu-id="1ca98-192">If `x` is negative, the rounding operation causes any fractional component of `x` to be discarded.</span></span> <span data-ttu-id="1ca98-193">Операция этого метода отличается от <xref:System.MathF.Floor%28System.Single%29> метода, который поддерживает округление в сторону отрицательной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="1ca98-193">The operation of this method differs from the <xref:System.MathF.Floor%28System.Single%29> method, which supports rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.MathF.Round" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="CopySign">
      <MemberSignature Language="C#" Value="public static float CopySign (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CopySign(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.CopySign(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopySign (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float CopySign(float x, float y);" />
      <MemberSignature Language="F#" Value="static member CopySign : single * single -&gt; single" Usage="System.MathF.CopySign (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Single" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-194">Число, величина которого используется в результате.</span><span class="sxs-lookup"><span data-stu-id="1ca98-194">A number whose magnitude is used in the result.</span></span></param>
        <param name="y"><span data-ttu-id="1ca98-195">Число, знак которого используется в результате.</span><span class="sxs-lookup"><span data-stu-id="1ca98-195">A number whose sign is the used in the result.</span></span></param>
        <summary><span data-ttu-id="1ca98-196">Возвращает значение с величиной <paramref name="x" /> и знаком <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-196">Returns a value with the magnitude of <paramref name="x" /> and the sign of <paramref name="y" />.</span></span></summary>
        <returns><span data-ttu-id="1ca98-197">Значение с величиной <paramref name="x" /> и знаком <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-197">A value with the magnitude of <paramref name="x" /> and the sign of <paramref name="y" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static float Cos (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Cos(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Cos(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Cos(float x);" />
      <MemberSignature Language="F#" Value="static member Cos : single -&gt; single" Usage="System.MathF.Cos x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-198">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-198">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="1ca98-199">Возвращает косинус указанного угла.</span><span class="sxs-lookup"><span data-stu-id="1ca98-199">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="1ca98-200">Косинус <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-200">The cosine of <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-201">Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-201">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, this method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-202">Угол, `x`, должен быть в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-202">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="1ca98-203">Умножьте на <xref:System.MathF.PI?displayProperty=nameWithType>/180, чтобы преобразовать градусы в радианы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-203">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static float Cosh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Cosh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Cosh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Cosh(float x);" />
      <MemberSignature Language="F#" Value="static member Cosh : single -&gt; single" Usage="System.MathF.Cosh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-204">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-204">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="1ca98-205">Возвращает гиперболический косинус указанного угла.</span><span class="sxs-lookup"><span data-stu-id="1ca98-205">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="1ca98-206">Гиперболический косинус <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-206">The hyperbolic cosine of <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-207">Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, то возвращаемое значение равно <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-207">If <paramref name="x" /> is equal to <see cref="F:System.Single.NegativeInfinity" /> or <see cref="F:System.Single.PositiveInfinity" />, <see cref="F:System.Single.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="1ca98-208">Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-208">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-209">Угол, `x`, должен быть в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-209">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="1ca98-210">Умножьте на <xref:System.MathF.PI?displayProperty=nameWithType>/180, чтобы преобразовать градусы в радианы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-210">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>    
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const float E = 2.718282;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 E = (2.718282)" />
      <MemberSignature Language="DocId" Value="F:System.MathF.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Single  = 2.718282" />
      <MemberSignature Language="C++ CLI" Value="public: float E = 2.718282;" />
      <MemberSignature Language="F#" Value="val mutable E : single" Usage="System.MathF.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>2.718282</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1ca98-211">Представляет основание натурального логарифма, определяемое константой <see langword="e" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-211">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="1ca98-212">Значение этой константы равно 2,71828175.</span><span class="sxs-lookup"><span data-stu-id="1ca98-212">The value of this constant is 2.71828175.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static float Exp (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Exp(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Exp(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Exp(float x);" />
      <MemberSignature Language="F#" Value="static member Exp : single -&gt; single" Usage="System.MathF.Exp x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-213">Число, определяющее степень.</span><span class="sxs-lookup"><span data-stu-id="1ca98-213">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="1ca98-214">Возвращает <see langword="e" />, возведенное в указанную степень.</span><span class="sxs-lookup"><span data-stu-id="1ca98-214">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="1ca98-215">Число <see langword="e" />, возведенное в степень <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-215">The number <see langword="e" /> raised to the power <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-216">Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" /> или <see cref="F:System.Single.PositiveInfinity" />, возвращается это значение.</span><span class="sxs-lookup"><span data-stu-id="1ca98-216">If <paramref name="x" /> equals <see cref="F:System.Single.NaN" /> or <see cref="F:System.Single.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="1ca98-217">Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />, возвращается значение 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-217">If <paramref name="x" /> equals <see cref="F:System.Single.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-218">`e`Математическая константа, значение которой приблизительно 2,71828.</span><span class="sxs-lookup"><span data-stu-id="1ca98-218">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="1ca98-219"><xref:System.MathF.Pow%2A> Используйте метод для вычисления степеней других базовых баз.</span><span class="sxs-lookup"><span data-stu-id="1ca98-219">Use the <xref:System.MathF.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="1ca98-220"><xref:System.MathF.Exp%2A>является обратным для <xref:System.MathF.Log%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ca98-220"><xref:System.MathF.Exp%2A> is the inverse of <xref:System.MathF.Log%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.MathF.E" />
        <altmember cref="M:System.MathF.Pow(System.Single,System.Single)" />
        <altmember cref="M:System.MathF.Log(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static float Floor (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Floor(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Floor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Floor(float x);" />
      <MemberSignature Language="F#" Value="static member Floor : single -&gt; single" Usage="System.MathF.Floor x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-221">Число одиночной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-221">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="1ca98-222">Возвращает наибольшее целое число, которое меньше или равно заданному числу с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="1ca98-222">Returns the largest integral value less than or equal to the specified single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-223">Наибольшее целое число, которое меньше или равно <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-223">The largest integral value less than or equal to <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-224">Если значение параметра <paramref name="x" /> равно  <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, возвращается это значение.</span><span class="sxs-lookup"><span data-stu-id="1ca98-224">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-225">Поведение этого метода соответствует стандарту IEEE 754, разделу 4.</span><span class="sxs-lookup"><span data-stu-id="1ca98-225">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="1ca98-226">Этот тип округления иногда называют округлением в сторону отрицательной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="1ca98-226">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="1ca98-227">Иными словами, если `x` является положительным, любой дробный компонент усекается.</span><span class="sxs-lookup"><span data-stu-id="1ca98-227">In other words, if `x` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="1ca98-228">Если `x` имеет отрицательное значение, присутствие любого компонента дробной части приводит к округлению его до меньшего целого числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-228">If `x` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="1ca98-229">Операция этого метода отличается от <xref:System.MathF.Ceiling%2A> метода, который поддерживает округление в сторону положительной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="1ca98-229">The operation of this method differs from the <xref:System.MathF.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.MathF.Round" />
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAdd">
      <MemberSignature Language="C#" Value="public static float FusedMultiplyAdd (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 FusedMultiplyAdd(float32 x, float32 y, float32 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.FusedMultiplyAdd(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAdd (x As Single, y As Single, z As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float FusedMultiplyAdd(float x, float y, float z);" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAdd : single * single * single -&gt; single" Usage="System.MathF.FusedMultiplyAdd (x, y, z)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Single" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="z" Type="System.Single" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-230">Число, которое будет умножаться на <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-230">The number to be multiplied with <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="1ca98-231">Число, которое будет умножаться на <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-231">The number to be multiplied with <paramref name="x" />.</span></span></param>
        <param name="z"><span data-ttu-id="1ca98-232">Число, которое будет добавляться к результату <paramref name="x" />, умноженному на <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-232">The number to be added to the result of <paramref name="x" /> multiplied by <paramref name="y" />.</span></span></param>
        <summary><span data-ttu-id="1ca98-233">Возвращает значение (x \* y) + z, округленное в рамках одной тернарной операции.</span><span class="sxs-lookup"><span data-stu-id="1ca98-233">Returns (x \* y) + z, rounded as one ternary operation.</span></span></summary>
        <returns><span data-ttu-id="1ca98-234">Значение (x \* y) + z, округленное в рамках одной тернарной операции.</span><span class="sxs-lookup"><span data-stu-id="1ca98-234">(x \* y) + z, rounded as one ternary operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-235">При этом вычисляются `(x * y)` , как если бы точность была `z` неограниченной, добавляет к этому результату, как если бы точность была неограниченной, и, наконец, округляется до ближайшего представимого значения.</span><span class="sxs-lookup"><span data-stu-id="1ca98-235">This computes `(x * y)` as if to infinite precision, adds `z` to that result as if to infinite precision, and finally rounds to the nearest representable value.</span></span>
  
 <span data-ttu-id="1ca98-236">Это отличается от последовательности с плавким предохранителем, которая `(x * y)` будет вычисляться так, как если бы преиЦисион, округлять результат до ближайшего представимого значения, добавлять "z" к округленному результату как при неограниченной точности, а затем округлять до ближайшего представления. значений.</span><span class="sxs-lookup"><span data-stu-id="1ca98-236">This differs from the non-fused sequence which would compute `(x * y)` as if to infinite preicision, round the result to the nearest representable value, add 'z' to the rounded result as if to infinite precision, and finally round to the nearest representable value.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static float IEEERemainder (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 IEEERemainder(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.IEEERemainder(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float IEEERemainder(float x, float y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : single * single -&gt; single" Usage="System.MathF.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-237">Делимое.</span><span class="sxs-lookup"><span data-stu-id="1ca98-237">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="1ca98-238">Делитель.</span><span class="sxs-lookup"><span data-stu-id="1ca98-238">A divisor.</span></span></param>
        <summary><span data-ttu-id="1ca98-239">Возвращает остаток от деления одного указанного числа на другое указанное число.</span><span class="sxs-lookup"><span data-stu-id="1ca98-239">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-240">Число, равное <paramref name="x" /> – (<paramref name="y" /> Q), где Q является частным <paramref name="x" /> / <paramref name="y" />, округленным до ближайшего целого числа (если <paramref name="x" /> / <paramref name="y" /> находится на равном расстоянии от двух целых чисел, выбирается четное число).</span><span class="sxs-lookup"><span data-stu-id="1ca98-240">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
<span data-ttu-id="1ca98-241">Если значение <paramref name="x" /> - ( <paramref name="y" /> Q) равно нулю, возвращается значение +0 при положительном <paramref name="x" />, или значение -0 при отрицательном <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-241">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
<span data-ttu-id="1ca98-242">Если значение параметра <paramref name="y" /> равно 0, возвращается значение <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-242">If <paramref name="y" /> = 0, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-243">Эта операция соответствует операции остатка, определенной в разделе 5,1 ANSI/IEEE Std 754-1985; Стандарт IEEE для двоичных арифметических операций с плавающей запятой; Институт инженеров по электрической и электронике, Inc; 1985.</span><span class="sxs-lookup"><span data-stu-id="1ca98-243">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="1ca98-244">Метод не совпадает с оператором остатка. [](~/docs/csharp/language-reference/operators/remainder-operator.md) <xref:System.MathF.IEEERemainder%2A></span><span class="sxs-lookup"><span data-stu-id="1ca98-244">The <xref:System.MathF.IEEERemainder%2A> method is not the same as the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span> <span data-ttu-id="1ca98-245">Хотя оба варианта возвращают остаток после деления, используемые ими формулы различаются.</span><span class="sxs-lookup"><span data-stu-id="1ca98-245">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="1ca98-246">Формула для <xref:System.MathF.IEEERemainder%2A> метода:</span><span class="sxs-lookup"><span data-stu-id="1ca98-246">The formula for the <xref:System.MathF.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * MathF.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="1ca98-247">В отличие от этого, формула для оператора остатка:</span><span class="sxs-lookup"><span data-stu-id="1ca98-247">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (MathF.Abs(dividend) - (MathF.Abs(divisor) *   
            (MathF.Floor(MathF.Abs(dividend) / MathF.Abs(divisor))))) *   
            MathF.Sign(dividend)  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ILogB">
      <MemberSignature Language="C#" Value="public static int ILogB (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ILogB(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.ILogB(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ILogB (x As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ILogB(float x);" />
      <MemberSignature Language="F#" Value="static member ILogB : single -&gt; int" Usage="System.MathF.ILogB x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-248">Число, логарифм которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="1ca98-248">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="1ca98-249">Возвращает целочисленный логарифм с основанием 2 указанного числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-249">Returns the base 2 integer logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-250">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1ca98-250">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="1ca98-251">Параметр <paramref name="x" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-251"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="1ca98-252">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-252">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="1ca98-253">Значение по умолчанию</span><span class="sxs-lookup"><span data-stu-id="1ca98-253">Default</span></span> 
 </term><description> <span data-ttu-id="1ca98-254">Целочисленный логарифм с основанием 2 <paramref name="x" />, то есть (int)log2(<paramref name="x" />).</span><span class="sxs-lookup"><span data-stu-id="1ca98-254">The base 2 integer log of <paramref name="x" />; that is, (int)log2(<paramref name="x" />).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1ca98-255">Нуль</span><span class="sxs-lookup"><span data-stu-id="1ca98-255">Zero</span></span> 
 </term><description><see cref="F:System.Int32.MinValue" /></description></item><item><term> <span data-ttu-id="1ca98-256">Равно <see cref="F:System.Single.NaN" /> или <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-256">Equal to <see cref="F:System.Single.NaN" /> or <see cref="F:System.Single.PositiveInfinity" /> or <see cref="F:System.Single.NegativeInfinity" /></span></span></term><description><see cref="F:System.Int32.MaxValue" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-257">Значение `x` параметра указывается как базовое 10.</span><span class="sxs-lookup"><span data-stu-id="1ca98-257">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static float Log (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Log(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Log(float x);" />
      <MemberSignature Language="F#" Value="static member Log : single -&gt; single" Usage="System.MathF.Log x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-258">Число, логарифм которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="1ca98-258">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="1ca98-259">Возвращает натуральный логарифм (с основанием <see langword="e" />) указанного числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-259">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-260">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1ca98-260">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="1ca98-261">Параметр <paramref name="x" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-261"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="1ca98-262">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-262">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="1ca98-263">Положительное число</span><span class="sxs-lookup"><span data-stu-id="1ca98-263">Positive</span></span> 
 </term><description> <span data-ttu-id="1ca98-264">Натуральный логарифм <paramref name="x" />, то есть ln <paramref name="x" /> или log e <paramref name="x" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-264">The natural logarithm of <paramref name="x" />; that is, ln <paramref name="x" />, or log e <paramref name="x" /></span></span></description></item><item><term> <span data-ttu-id="1ca98-265">Нуль</span><span class="sxs-lookup"><span data-stu-id="1ca98-265">Zero</span></span> 
 </term><description><see cref="F:System.Single.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="1ca98-266">Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="1ca98-266">Negative</span></span> 
 </term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="1ca98-267">Равно значению <see cref="F:System.Single.NaN" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-267">Equal to <see cref="F:System.Single.NaN" /></span></span></term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="1ca98-268">Равно значению <see cref="F:System.Single.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-268">Equal to <see cref="F:System.Single.PositiveInfinity" /></span></span></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-269">Значение `x` параметра указывается как базовое 10.</span><span class="sxs-lookup"><span data-stu-id="1ca98-269">Parameter `x` is specified as a base 10 number.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.MathF.E" />
        <altmember cref="M:System.MathF.Exp(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static float Log (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Log(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Log(float x, float y);" />
      <MemberSignature Language="F#" Value="static member Log : single * single -&gt; single" Usage="System.MathF.Log (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-270">Число, логарифм которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="1ca98-270">The number whose logarithm is to be found.</span></span></param>
        <param name="y">To be added.</param>
        <summary><span data-ttu-id="1ca98-271">Возвращает логарифм указанного числа в системе счисления с указанным основанием.</span><span class="sxs-lookup"><span data-stu-id="1ca98-271">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="1ca98-272">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1ca98-272">One of the values in the following table.</span></span> <span data-ttu-id="1ca98-273">(+бесконечность обозначает <see cref="F:System.Single.PositiveInfinity" />, -бесконечность обозначает <see cref="F:System.Single.NegativeInfinity" />, а нечисловое значение обозначает <see cref="F:System.Single.NaN" />.)</span><span class="sxs-lookup"><span data-stu-id="1ca98-273">(+Infinity denotes <see cref="F:System.Single.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Single.NegativeInfinity" />, and NaN denotes <see cref="F:System.Single.NaN" />.)</span></span> 
 <list type="table"><listheader><term><paramref name="x" /></term><description><paramref name="newBase" /></description><description> <span data-ttu-id="1ca98-274">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-274">Return value</span></span> 
 </description></listheader><item><term><span data-ttu-id="1ca98-275"><paramref name="x" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="1ca98-275"><paramref name="x" />&gt; 0</span></span> 
 </term><description> <span data-ttu-id="1ca98-276">(0 &lt;<paramref name="newBase" />&lt; 1) -или-(<paramref name="newBase" />&gt; 1)</span><span class="sxs-lookup"><span data-stu-id="1ca98-276">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span> 
 </description><description> <span data-ttu-id="1ca98-277">lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="1ca98-277">lognewBase(a)</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-278"><paramref name="x" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="1ca98-278"><paramref name="x" />&lt; 0</span></span> 
 </term><description> <span data-ttu-id="1ca98-279">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="1ca98-279">(any value)</span></span> 
 </description><description> <span data-ttu-id="1ca98-280">NaN</span><span class="sxs-lookup"><span data-stu-id="1ca98-280">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="1ca98-281">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="1ca98-281">(any value)</span></span> 
 </term><description><span data-ttu-id="1ca98-282"><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="1ca98-282"><paramref name="newBase" />&lt; 0</span></span> 
 </description><description> <span data-ttu-id="1ca98-283">NaN</span><span class="sxs-lookup"><span data-stu-id="1ca98-283">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-284"><paramref name="x" /> != 1</span><span class="sxs-lookup"><span data-stu-id="1ca98-284"><paramref name="x" /> != 1</span></span> 
 </term><description><span data-ttu-id="1ca98-285"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="1ca98-285"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="1ca98-286">NaN</span><span class="sxs-lookup"><span data-stu-id="1ca98-286">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-287"><paramref name="x" /> != 1</span><span class="sxs-lookup"><span data-stu-id="1ca98-287"><paramref name="x" /> != 1</span></span> 
 </term><description><span data-ttu-id="1ca98-288"><paramref name="newBase" /> = +бесконечность</span><span class="sxs-lookup"><span data-stu-id="1ca98-288"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="1ca98-289">NaN</span><span class="sxs-lookup"><span data-stu-id="1ca98-289">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-290"><paramref name="x" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="1ca98-290"><paramref name="x" /> = NaN</span></span> 
 </term><description> <span data-ttu-id="1ca98-291">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="1ca98-291">(any value)</span></span> 
 </description><description> <span data-ttu-id="1ca98-292">NaN</span><span class="sxs-lookup"><span data-stu-id="1ca98-292">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="1ca98-293">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="1ca98-293">(any value)</span></span> 
 </term><description><span data-ttu-id="1ca98-294"><paramref name="newBase" /> = не число</span><span class="sxs-lookup"><span data-stu-id="1ca98-294"><paramref name="newBase" /> = NaN</span></span> 
 </description><description> <span data-ttu-id="1ca98-295">не число</span><span class="sxs-lookup"><span data-stu-id="1ca98-295">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="1ca98-296">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="1ca98-296">(any value)</span></span> 
 </term><description><span data-ttu-id="1ca98-297"><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="1ca98-297"><paramref name="newBase" /> = 1</span></span> 
 </description><description> <span data-ttu-id="1ca98-298">NaN</span><span class="sxs-lookup"><span data-stu-id="1ca98-298">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-299"><paramref name="x" /> = 0</span><span class="sxs-lookup"><span data-stu-id="1ca98-299"><paramref name="x" /> = 0</span></span> 
 </term><description> <span data-ttu-id="1ca98-300">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="1ca98-300">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="1ca98-301">+бесконечность</span><span class="sxs-lookup"><span data-stu-id="1ca98-301">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-302"><paramref name="x" /> = 0</span><span class="sxs-lookup"><span data-stu-id="1ca98-302"><paramref name="x" /> = 0</span></span> 
 </term><description><span data-ttu-id="1ca98-303"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="1ca98-303"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="1ca98-304">-бесконечность</span><span class="sxs-lookup"><span data-stu-id="1ca98-304">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-305"><paramref name="x" /> = +бесконечность</span><span class="sxs-lookup"><span data-stu-id="1ca98-305"><paramref name="x" /> =  +Infinity</span></span> 
 </term><description> <span data-ttu-id="1ca98-306">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="1ca98-306">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="1ca98-307">-Infinity</span><span class="sxs-lookup"><span data-stu-id="1ca98-307">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-308"><paramref name="x" /> = +бесконечность</span><span class="sxs-lookup"><span data-stu-id="1ca98-308"><paramref name="x" /> =  +Infinity</span></span> 
 </term><description><span data-ttu-id="1ca98-309"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="1ca98-309"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="1ca98-310">+бесконечность</span><span class="sxs-lookup"><span data-stu-id="1ca98-310">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-311"><paramref name="x" /> = 1</span><span class="sxs-lookup"><span data-stu-id="1ca98-311"><paramref name="x" /> = 1</span></span> 
 </term><description><span data-ttu-id="1ca98-312"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="1ca98-312"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="1ca98-313">0</span><span class="sxs-lookup"><span data-stu-id="1ca98-313">0</span></span> 
 </description></item><item><term><span data-ttu-id="1ca98-314"><paramref name="x" /> = 1</span><span class="sxs-lookup"><span data-stu-id="1ca98-314"><paramref name="x" /> = 1</span></span> 
 </term><description><span data-ttu-id="1ca98-315"><paramref name="newBase" /> = +бесконечность</span><span class="sxs-lookup"><span data-stu-id="1ca98-315"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="1ca98-316">0</span><span class="sxs-lookup"><span data-stu-id="1ca98-316">0</span></span> 
 </description></item></list></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static float Log10 (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log10(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Log10(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Log10(float x);" />
      <MemberSignature Language="F#" Value="static member Log10 : single -&gt; single" Usage="System.MathF.Log10 x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-317">Число, логарифм которого должен быть найден.</span><span class="sxs-lookup"><span data-stu-id="1ca98-317">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="1ca98-318">Возвращает логарифм с основанием 10 указанного числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-318">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-319">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1ca98-319">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="1ca98-320">Параметр <paramref name="x" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-320"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="1ca98-321">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-321">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="1ca98-322">Положительное число</span><span class="sxs-lookup"><span data-stu-id="1ca98-322">Positive</span></span> 
 </term><description> <span data-ttu-id="1ca98-323">Основание 10 логарифма <paramref name="x" />, то есть log 10<paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-323">The base 10 log of <paramref name="x" />; that is, log 10<paramref name="x" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1ca98-324">Нуль</span><span class="sxs-lookup"><span data-stu-id="1ca98-324">Zero</span></span> 
 </term><description><see cref="F:System.Single.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="1ca98-325">Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="1ca98-325">Negative</span></span> 
 </term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="1ca98-326">Равно значению <see cref="F:System.Single.NaN" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-326">Equal to <see cref="F:System.Single.NaN" /></span></span></term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="1ca98-327">Равно значению <see cref="F:System.Single.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-327">Equal to <see cref="F:System.Single.PositiveInfinity" /></span></span></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-328">Значение `x` параметра указывается как базовое 10.</span><span class="sxs-lookup"><span data-stu-id="1ca98-328">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static float Log2 (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Log2(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Log2(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Log2(float x);" />
      <MemberSignature Language="F#" Value="static member Log2 : single -&gt; single" Usage="System.MathF.Log2 x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-329">Число, логарифм которого должен быть найден.</span><span class="sxs-lookup"><span data-stu-id="1ca98-329">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="1ca98-330">Возвращает логарифм с основанием 2 указанного числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-330">Returns the base 2 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-331">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1ca98-331">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="1ca98-332">Параметр <paramref name="x" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-332"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="1ca98-333">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-333">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="1ca98-334">Положительное число</span><span class="sxs-lookup"><span data-stu-id="1ca98-334">Positive</span></span> 
 </term><description> <span data-ttu-id="1ca98-335">Логарифм с основанием 2 <paramref name="x" />, то есть log 2<paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-335">The base 2 log of <paramref name="x" />; that is, log 2<paramref name="x" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1ca98-336">Нуль</span><span class="sxs-lookup"><span data-stu-id="1ca98-336">Zero</span></span> 
 </term><description><see cref="F:System.Single.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="1ca98-337">Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="1ca98-337">Negative</span></span> 
 </term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="1ca98-338">Равно значению <see cref="F:System.Single.NaN" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-338">Equal to <see cref="F:System.Single.NaN" /></span></span></term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="1ca98-339">Равно значению <see cref="F:System.Single.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-339">Equal to <see cref="F:System.Single.PositiveInfinity" /></span></span></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-340">Значение `x` параметра указывается как базовое 10.</span><span class="sxs-lookup"><span data-stu-id="1ca98-340">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float x, float y);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.MathF.Max (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-341">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-341">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="1ca98-342">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-342">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="1ca98-343">Возвращает большее из двух чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-343">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="1ca98-344">Большее из значений двух параметров, <paramref name="x" /> или <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-344">Parameter <paramref name="x" /> or <paramref name="y" />, whichever is larger.</span></span> <span data-ttu-id="1ca98-345">Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-345">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMagnitude">
      <MemberSignature Language="C#" Value="public static float MaxMagnitude (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 MaxMagnitude(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.MaxMagnitude(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxMagnitude (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float MaxMagnitude(float x, float y);" />
      <MemberSignature Language="F#" Value="static member MaxMagnitude : single * single -&gt; single" Usage="System.MathF.MaxMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Single" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-346">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-346">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="1ca98-347">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-347">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="1ca98-348">Возвращает большую величину из двух чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-348">Returns the larger magnitude of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="1ca98-349">Параметр <paramref name="x" /> или <paramref name="y" />, в зависимости от большей величины.</span><span class="sxs-lookup"><span data-stu-id="1ca98-349">Parameter <paramref name="x" /> or <paramref name="y" />, whichever has the larger magnitude.</span></span> <span data-ttu-id="1ca98-350">Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-350">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float x, float y);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.MathF.Min (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-351">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-351">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="1ca98-352">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-352">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="1ca98-353">Возвращает меньшее из двух чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-353">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="1ca98-354">Меньший из двух параметров, <paramref name="x" /> или <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-354">Parameter <paramref name="x" /> or <paramref name="y" />, whichever is smaller.</span></span> <span data-ttu-id="1ca98-355">Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-355">If <paramref name="x" />, <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MinMagnitude">
      <MemberSignature Language="C#" Value="public static float MinMagnitude (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 MinMagnitude(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.MinMagnitude(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinMagnitude (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float MinMagnitude(float x, float y);" />
      <MemberSignature Language="F#" Value="static member MinMagnitude : single * single -&gt; single" Usage="System.MathF.MinMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Single" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-356">Первое из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-356">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="1ca98-357">Второе из двух сравниваемых чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-357">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="1ca98-358">Возвращает меньшую величину из двух чисел одинарной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-358">Returns the smaller magnitude of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="1ca98-359">Параметр <paramref name="x" /> или <paramref name="y" />, в зависимости от меньшей величины.</span><span class="sxs-lookup"><span data-stu-id="1ca98-359">Parameter <paramref name="x" /> or <paramref name="y" />, whichever has the smaller magnitude.</span></span> <span data-ttu-id="1ca98-360">Если <paramref name="x" />, <paramref name="y" /> или оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see cref="F:System.Single.NaN" />, возвращается значение <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-360">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const float PI = 3.141593;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 PI = (3.141593)" />
      <MemberSignature Language="DocId" Value="F:System.MathF.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Single  = 3.141593" />
      <MemberSignature Language="C++ CLI" Value="public: float PI = 3.141593;" />
      <MemberSignature Language="F#" Value="val mutable PI : single" Usage="System.MathF.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>3.141593</MemberValue>
      <Docs>
        <summary><span data-ttu-id="1ca98-361">Представляет отношение длины окружности к ее диаметру, определяемое константой π.</span><span class="sxs-lookup"><span data-stu-id="1ca98-361">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="1ca98-362">Значение этого поля — 3,14159274.</span><span class="sxs-lookup"><span data-stu-id="1ca98-362">The value of this field is 3.14159274.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static float Pow (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Pow(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Pow(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Single, y As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Pow(float x, float y);" />
      <MemberSignature Language="F#" Value="static member Pow : single * single -&gt; single" Usage="System.MathF.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-363">Число одиночной точности с плавающей запятой, возводимое в степень.</span><span class="sxs-lookup"><span data-stu-id="1ca98-363">A single-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="1ca98-364">Число одиночной точности с плавающей запятой, задающее степень.</span><span class="sxs-lookup"><span data-stu-id="1ca98-364">A single-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="1ca98-365">Возвращает указанное число, возведенное в указанную степень.</span><span class="sxs-lookup"><span data-stu-id="1ca98-365">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="1ca98-366">Число <paramref name="x" />, возведенное в степень <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-366">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-367">В следующей таблице указано возвращаемое значение, если для `x` параметров и `y` указаны различные значения или диапазоны значений.</span><span class="sxs-lookup"><span data-stu-id="1ca98-367">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="1ca98-368">Дополнительные сведения см. в разделах <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> и <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ca98-368">For more information, see <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="1ca98-369">Параметры</span><span class="sxs-lookup"><span data-stu-id="1ca98-369">Parameters</span></span>|<span data-ttu-id="1ca98-370">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-370">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="1ca98-371">`x`или `y` . =  `NaN`</span><span class="sxs-lookup"><span data-stu-id="1ca98-371">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="1ca98-372">`x`= Любое значение, `NaN`Кроме; `y` = 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-372">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="1ca98-373">1</span><span class="sxs-lookup"><span data-stu-id="1ca98-373">1</span></span>|  
|<span data-ttu-id="1ca98-374">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-374">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="1ca98-375">0</span><span class="sxs-lookup"><span data-stu-id="1ca98-375">0</span></span>|  
|<span data-ttu-id="1ca98-376">`x` = `NegativeInfinity`; `y` положительное нечетное целое число.</span><span class="sxs-lookup"><span data-stu-id="1ca98-376">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="1ca98-377">`x` = `NegativeInfinity`; `y` положительное, но не нечетное целое число.</span><span class="sxs-lookup"><span data-stu-id="1ca98-377">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="1ca98-378">`x`< 0, но `NegativeInfinity`не; не является целым числом `NegativeInfinity`, или `PositiveInfinity`. `y`</span><span class="sxs-lookup"><span data-stu-id="1ca98-378">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="1ca98-379">`x`=-1; `y` или.`PositiveInfinity`  =  `NegativeInfinity`</span><span class="sxs-lookup"><span data-stu-id="1ca98-379">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="1ca98-380">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="1ca98-380">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="1ca98-381">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="1ca98-381">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="1ca98-382">0</span><span class="sxs-lookup"><span data-stu-id="1ca98-382">0</span></span>|  
|<span data-ttu-id="1ca98-383">`x`<-1 или `x` > 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="1ca98-383">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="1ca98-384">0</span><span class="sxs-lookup"><span data-stu-id="1ca98-384">0</span></span>|  
|<span data-ttu-id="1ca98-385">`x`<-1 или `x` > 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="1ca98-385">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="1ca98-386">`x`= 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-386">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="1ca98-387">`x`= 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-387">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="1ca98-388">0</span><span class="sxs-lookup"><span data-stu-id="1ca98-388">0</span></span>|  
|<span data-ttu-id="1ca98-389">`x`= 1; — любое значение, `NaN`Кроме. `y`</span><span class="sxs-lookup"><span data-stu-id="1ca98-389">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="1ca98-390">1</span><span class="sxs-lookup"><span data-stu-id="1ca98-390">1</span></span>|  
|<span data-ttu-id="1ca98-391">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-391">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="1ca98-392">0</span><span class="sxs-lookup"><span data-stu-id="1ca98-392">0</span></span>|  
|<span data-ttu-id="1ca98-393">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="1ca98-393">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.MathF.Sqrt(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static float Round (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Round(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Round(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Round(float x);" />
      <MemberSignature Language="F#" Value="static member Round : single -&gt; single" Usage="System.MathF.Round x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-394">Округляемое число одиночной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-394">A single-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="1ca98-395">Округляет значение с плавающей запятой одиночной точности до ближайшего целого значения; значения посередине округляются до ближайшего четного числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-395">Rounds a single-precision floating-point value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-396">Целое число, ближайшее к значению параметра <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-396">The integer nearest <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-397">Если дробная часть <paramref name="x" /> находится на равном расстоянии от двух целых чисел (четного и нечетного), возвращается четное число.</span><span class="sxs-lookup"><span data-stu-id="1ca98-397">If the fractional component of <paramref name="x" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="1ca98-398">Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-398">Note that this method returns a <see cref="T:System.Single" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="1ca98-399">Этот метод использует соглашение о <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>округлении по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1ca98-399">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="1ca98-400">Если `x` аргумент имеет <xref:System.Single.NaN?displayProperty=nameWithType>значение, метод возвращает <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ca98-400">If the value of the `x` argument is <xref:System.Single.NaN?displayProperty=nameWithType>, the method returns <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1ca98-401">Если `x` параметр <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> имеет <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>значение или, то <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> метод <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>Возвращает или соответственно.</span><span class="sxs-lookup"><span data-stu-id="1ca98-401">If `x` is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="1ca98-402">Из-за потери точности, которая может быть результатом представления десятичных значений в виде чисел с плавающей запятой или выполнения арифметических операций с значениями с плавающей запятой <see cref="M:System.MathF.Round(System.Single)" /> , в некоторых случаях метод может не отображаться для округления средних значений в ближайшее четное целое число.</span><span class="sxs-lookup"><span data-stu-id="1ca98-402">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.MathF.Round(System.Single)" /> method may not appear to round midpoint values to the nearest even integer.</span></span></para></block>
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static float Round (float x, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Round(float32 x, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Round(System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (x As Single, digits As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Round(float x, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : single * int -&gt; single" Usage="System.MathF.Round (x, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-403">Округляемое число одиночной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-403">A single-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="1ca98-404">Количество цифр дробной части в возвращаемом значении.</span><span class="sxs-lookup"><span data-stu-id="1ca98-404">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="1ca98-405">Округляет значение с плавающей запятой одиночной точности до указанного числа знаков после запятой; значения посередине округляются до ближайшего четного числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-405">Rounds a single-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-406">Число, ближайшее к параметру <paramref name="x" />, количество цифр дробной части которого равно <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-406">The number nearest to <paramref name="x" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="1ca98-407">Значение `digits` аргумента может находиться в диапазоне от 0 до 6.</span><span class="sxs-lookup"><span data-stu-id="1ca98-407">The value of the `digits` argument can range from 0 to 6.</span></span> <span data-ttu-id="1ca98-408">Обратите внимание, что 6 — это максимальное число целочисленных и дробных разрядов, поддерживаемое <xref:System.Single> типом.</span><span class="sxs-lookup"><span data-stu-id="1ca98-408">Note that 6 is the maximum number of integral and fractional digits supported by the <xref:System.Single> type.</span></span>

<span data-ttu-id="1ca98-409">Этот метод использует соглашение о <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>округлении по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1ca98-409">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> 

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="1ca98-410">Если `x` аргумент имеет <xref:System.Single.NaN?displayProperty=nameWithType>значение, метод возвращает <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ca98-410">If the value of the `x` argument is <xref:System.Single.NaN?displayProperty=nameWithType>, the method returns <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1ca98-411">Если `x` параметр <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> имеет <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>значение или, то <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> метод <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>Возвращает или соответственно.</span><span class="sxs-lookup"><span data-stu-id="1ca98-411">If `x` is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1ca98-412">Параметр <paramref name="digits" /> имеет значение меньше 0 или больше 6.</span><span class="sxs-lookup"><span data-stu-id="1ca98-412"><paramref name="digits" /> is less than 0 or greater than 6.</span></span></exception>
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static float Round (float x, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Round(float32 x, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Round(System.Single,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (x As Single, mode As MidpointRounding) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Round(float x, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : single * MidpointRounding -&gt; single" Usage="System.MathF.Round (x, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-413">Округляемое число одиночной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-413">A single-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="1ca98-414">Значение, задающее правило округления параметра <paramref name="x" />, если его значение находится ровно посредине между двумя другими числами.</span><span class="sxs-lookup"><span data-stu-id="1ca98-414">Specification for how to round <paramref name="x" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="1ca98-415">Округляет значение с плавающей запятой одиночной точности до ближайшего целого числа; использует указанное соглашение для округления значений посередине.</span><span class="sxs-lookup"><span data-stu-id="1ca98-415">Rounds a single-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="1ca98-416">Целое число, ближайшее к значению параметра <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-416">The integer nearest <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-417">Если <paramref name="x" /> находится на равном расстоянии от двух целых чисел, четного и нечетного, то возвращаемое число определяется по значению параметра <paramref name="mode" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-417">If <paramref name="x" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="1ca98-418">Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-418">Note that this method returns a <see cref="T:System.Single" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  


[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="1ca98-419">Если `x` аргумент имеет <xref:System.Single.NaN?displayProperty=nameWithType>значение, метод возвращает <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ca98-419">If the value of the `x` argument is <xref:System.Single.NaN?displayProperty=nameWithType>, the method returns <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1ca98-420">Если `x` параметр <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> имеет <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>значение или, то <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> метод <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>Возвращает или соответственно.</span><span class="sxs-lookup"><span data-stu-id="1ca98-420">If `x` is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1ca98-421"><paramref name="mode" /> не является допустимым значением <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-421"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static float Round (float x, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Round(float32 x, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Round(System.Single,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (x As Single, digits As Integer, mode As MidpointRounding) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Round(float x, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : single * int * MidpointRounding -&gt; single" Usage="System.MathF.Round (x, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-422">Округляемое число одиночной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-422">A single-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="1ca98-423">Количество цифр дробной части в возвращаемом значении.</span><span class="sxs-lookup"><span data-stu-id="1ca98-423">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="1ca98-424">Значение, задающее правило округления параметра <paramref name="x" />, если его значение находится ровно посредине между двумя другими числами.</span><span class="sxs-lookup"><span data-stu-id="1ca98-424">Specification for how to round <paramref name="x" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="1ca98-425">Округляет значение с плавающей запятой одиночной точности до указанного числа знаков после запятой; использует указанное соглашение для округления значений посередине.</span><span class="sxs-lookup"><span data-stu-id="1ca98-425">Rounds a single-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="1ca98-426">Число, ближайшее к параметру <paramref name="x" />, количество цифр дробной части которого равно <paramref name="digits" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-426">The number nearest to <paramref name="x" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="1ca98-427">Если <paramref name="x" /> имеет меньшее количество цифр дробной части, чем <paramref name="digits" />, то <paramref name="x" /> возвращается без изменений.</span><span class="sxs-lookup"><span data-stu-id="1ca98-427">If <paramref name="x" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="x" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="1ca98-428">Значение `digits` аргумента может находиться в диапазоне от 0 до 6.</span><span class="sxs-lookup"><span data-stu-id="1ca98-428">The value of the `digits` argument can range from 0 to 6.</span></span> <span data-ttu-id="1ca98-429">Обратите внимание, что 6 — это максимальное число целочисленных и дробных разрядов, поддерживаемое <xref:System.Single> типом.</span><span class="sxs-lookup"><span data-stu-id="1ca98-429">Note that 6 is the maximum number of integral and fractional digits supported by the <xref:System.Single> type.</span></span>


[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="1ca98-430">Если `x` аргумент имеет <xref:System.Single.NaN?displayProperty=nameWithType>значение, метод возвращает <xref:System.Single.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1ca98-430">If the value of the `x` argument is <xref:System.Single.NaN?displayProperty=nameWithType>, the method returns <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1ca98-431">Если `x` параметр <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> имеет <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>значение или, то <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> метод <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>Возвращает или соответственно.</span><span class="sxs-lookup"><span data-stu-id="1ca98-431">If `x` is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1ca98-432">Параметр <paramref name="digits" /> имеет значение меньше 0 или больше 6.</span><span class="sxs-lookup"><span data-stu-id="1ca98-432"><paramref name="digits" /> is less than 0 or greater than 6.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1ca98-433"><paramref name="mode" /> не является допустимым значением <see cref="T:System.MidpointRounding" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-433"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleB">
      <MemberSignature Language="C#" Value="public static float ScaleB (float x, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ScaleB(float32 x, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.ScaleB(System.Single,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScaleB (x As Single, n As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ScaleB(float x, int n);" />
      <MemberSignature Language="F#" Value="static member ScaleB : single * int -&gt; single" Usage="System.MathF.ScaleB (x, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="n" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-434">Число одиночной точности с плавающей запятой, задающее базовое значение.</span><span class="sxs-lookup"><span data-stu-id="1ca98-434">A single-precision floating-point number that specifies the base value.</span></span></param>
        <param name="n"><span data-ttu-id="1ca98-435">Число одиночной точности с плавающей запятой, задающее степень.</span><span class="sxs-lookup"><span data-stu-id="1ca98-435">A single-precision floating-point number that specifies the power.</span></span></param>
        <summary><span data-ttu-id="1ca98-436">Возвращает значение x \* 2^n, вычисленное эффективно.</span><span class="sxs-lookup"><span data-stu-id="1ca98-436">Returns x \* 2^n computed efficiently.</span></span></summary>
        <returns><span data-ttu-id="1ca98-437">Значение x \* 2^n, вычисленное эффективно.</span><span class="sxs-lookup"><span data-stu-id="1ca98-437">x \* 2^n computed efficiently.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (x As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float x);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.MathF.Sign x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-438">Число со знаком.</span><span class="sxs-lookup"><span data-stu-id="1ca98-438">A signed number.</span></span></param>
        <summary><span data-ttu-id="1ca98-439">Возвращает целое число, обозначающее знак числа с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="1ca98-439">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-440">Число, которое указывает знак значения <paramref name="x" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1ca98-440">A number that indicates the sign of <paramref name="x" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="1ca98-441">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-441">Return value</span></span> 
 </term><description> <span data-ttu-id="1ca98-442">Значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-442">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="1ca98-443">-1</span><span class="sxs-lookup"><span data-stu-id="1ca98-443">-1</span></span> 
 </term><description><span data-ttu-id="1ca98-444">Значение параметра <paramref name="x" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="1ca98-444"><paramref name="x" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1ca98-445">0</span><span class="sxs-lookup"><span data-stu-id="1ca98-445">0</span></span> 
 </term><description><span data-ttu-id="1ca98-446">Значение параметра <paramref name="x" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="1ca98-446"><paramref name="x" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1ca98-447">1</span><span class="sxs-lookup"><span data-stu-id="1ca98-447">1</span></span> 
 </term><description><span data-ttu-id="1ca98-448">Значение параметра <paramref name="x" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="1ca98-448"><paramref name="x" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks></remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="1ca98-449"><paramref name="x" /> равно <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-449"><paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static float Sin (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sin(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Sin(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Sin(float x);" />
      <MemberSignature Language="F#" Value="static member Sin : single -&gt; single" Usage="System.MathF.Sin x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-450">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-450">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="1ca98-451">Возвращает синус указанного угла.</span><span class="sxs-lookup"><span data-stu-id="1ca98-451">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="1ca98-452">Синус <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-452">The sine of <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-453">Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-453">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, this method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-454">Угол, `x`, должен быть в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-454">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="1ca98-455">Умножьте на <xref:System.MathF.PI?displayProperty=nameWithType>/180, чтобы преобразовать градусы в радианы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-455">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static float Sinh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sinh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Sinh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Sinh(float x);" />
      <MemberSignature Language="F#" Value="static member Sinh : single -&gt; single" Usage="System.MathF.Sinh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-456">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-456">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="1ca98-457">Возвращает гиперболический синус указанного угла.</span><span class="sxs-lookup"><span data-stu-id="1ca98-457">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="1ca98-458">Гиперболический синус <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-458">The hyperbolic sine of <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-459">Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />, <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NaN" />, то этот метод возвращает значение <see cref="T:System.Single" />, равное <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-459">If <paramref name="x" /> is equal to <see cref="F:System.Single.NegativeInfinity" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NaN" />, this method returns a <see cref="T:System.Single" /> equal to <paramref name="x" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-460">Угол, `x`, должен быть в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-460">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="1ca98-461">Умножьте на <xref:System.MathF.PI?displayProperty=nameWithType>/180, чтобы преобразовать градусы в радианы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-461">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static float Sqrt (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sqrt(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Sqrt(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Sqrt(float x);" />
      <MemberSignature Language="F#" Value="static member Sqrt : single -&gt; single" Usage="System.MathF.Sqrt x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-462">Число, квадратный корень которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="1ca98-462">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="1ca98-463">Возвращает квадратный корень из указанного числа.</span><span class="sxs-lookup"><span data-stu-id="1ca98-463">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-464">Одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1ca98-464">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="1ca98-465">Параметр <paramref name="x" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-465"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="1ca98-466">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-466">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="1ca98-467">Нуль или положительное число</span><span class="sxs-lookup"><span data-stu-id="1ca98-467">Zero or positive</span></span> 
 </term><description> <span data-ttu-id="1ca98-468">Положительный квадратный корень из <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-468">The positive square root of <paramref name="x" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="1ca98-469">Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="1ca98-469">Negative</span></span> 
 </term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="1ca98-470">Равняется <see cref="F:System.Single.NaN" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-470">Equals <see cref="F:System.Single.NaN" /></span></span></term><description><see cref="F:System.Single.NaN" /></description></item><item><term> <span data-ttu-id="1ca98-471">Равняется <see cref="F:System.Single.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="1ca98-471">Equals <see cref="F:System.Single.PositiveInfinity" /></span></span></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks></remarks>
        <altmember cref="M:System.MathF.Pow(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static float Tan (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Tan(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Tan(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Tan(float x);" />
      <MemberSignature Language="F#" Value="static member Tan : single -&gt; single" Usage="System.MathF.Tan x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-472">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-472">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="1ca98-473">Возвращает тангенс указанного угла.</span><span class="sxs-lookup"><span data-stu-id="1ca98-473">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="1ca98-474">Тангенс <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-474">The tangent of <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-475">Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />, то данный метод возвращает <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-475">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />, this method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-476">Угол, `x`, должен быть в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-476">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="1ca98-477">Умножьте на <xref:System.MathF.PI?displayProperty=nameWithType>/180, чтобы преобразовать градусы в радианы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-477">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static float Tanh (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Tanh(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Tanh(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Tanh(float x);" />
      <MemberSignature Language="F#" Value="static member Tanh : single -&gt; single" Usage="System.MathF.Tanh x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-478">Угол, измеряемый в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-478">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="1ca98-479">Возвращает гиперболический тангенс указанного угла.</span><span class="sxs-lookup"><span data-stu-id="1ca98-479">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="1ca98-480">Гиперболический тангенс <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-480">The hyperbolic tangent of <paramref name="x" />.</span></span> <span data-ttu-id="1ca98-481">Если значение параметра  <paramref name="x" /> равно <see cref="F:System.Single.NegativeInfinity" />, данный метод возвращает -1.</span><span class="sxs-lookup"><span data-stu-id="1ca98-481">If <paramref name="x" /> is equal to <see cref="F:System.Single.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="1ca98-482">Если значение равно <see cref="F:System.Single.PositiveInfinity" />, данный метод возвращает 1.</span><span class="sxs-lookup"><span data-stu-id="1ca98-482">If value is equal to <see cref="F:System.Single.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="1ca98-483">Если значение параметра <paramref name="x" /> равно <see cref="F:System.Single.NaN" />, этот метод возвращает <see cref="F:System.Single.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="1ca98-483">If <paramref name="x" /> is equal to <see cref="F:System.Single.NaN" />, this method returns <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca98-484">Угол, `x`, должен быть в радианах.</span><span class="sxs-lookup"><span data-stu-id="1ca98-484">The angle, `x`, must be in radians.</span></span> <span data-ttu-id="1ca98-485">Умножьте на <xref:System.MathF.PI?displayProperty=nameWithType>/180, чтобы преобразовать градусы в радианы.</span><span class="sxs-lookup"><span data-stu-id="1ca98-485">Multiply by <xref:System.MathF.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static float Truncate (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Truncate(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MathF.Truncate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (x As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Truncate(float x);" />
      <MemberSignature Language="F#" Value="static member Truncate : single -&gt; single" Usage="System.MathF.Truncate x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1ca98-486">Усекаемое число.</span><span class="sxs-lookup"><span data-stu-id="1ca98-486">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="1ca98-487">Вычисляет целую часть заданного числа одиночной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="1ca98-487">Calculates the integral part of a specified single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="1ca98-488">Целая часть <paramref name="x" />, то есть число, которое остается после отбрасывания всех цифр дробной части, или одно из значений, перечисленных в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="1ca98-488">The integral part of <paramref name="x" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <list type="table"><listheader><term><paramref name="x" /></term><description> <span data-ttu-id="1ca98-489">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="1ca98-489">Return value</span></span> 
 </description></listheader><item><term><see cref="F:System.Single.NaN" /></term><description><see cref="F:System.Single.NaN" /></description></item><item><term><see cref="F:System.Single.NegativeInfinity" /></term><description><see cref="F:System.Single.NegativeInfinity" /></description></item><item><term><see cref="F:System.Single.PositiveInfinity" /></term><description><see cref="F:System.Single.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="1ca98-490"><xref:System.MathF.Truncate%2A>Округляет `x` до ближайшего целого числа в сторону нуля.</span><span class="sxs-lookup"><span data-stu-id="1ca98-490"><xref:System.MathF.Truncate%2A> rounds `x` to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.MathF.Round" />
        <altmember cref="M:System.MathF.Ceiling(System.Single)" />
        <altmember cref="M:System.MathF.Floor(System.Single)" />
      </Docs>
    </Member>
  </Members>
</Type>