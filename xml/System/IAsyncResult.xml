<Type Name="IAsyncResult" FullName="System.IAsyncResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e146db19e5a83c2ef68363fb3b583f92f2c62b48" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69420484" /></Metadata><TypeSignature Language="C#" Value="public interface IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAsyncResult" />
  <TypeSignature Language="F#" Value="type IAsyncResult = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет состояние асинхронной операции.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IAsyncResult> Интерфейс реализуется классами, содержащими методы, которые могут выполняться асинхронно. Это возвращаемый тип методов, инициирующих асинхронную операцию, например <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, и передаваемый методам, завершающим асинхронную операцию, <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>например. <xref:System.IAsyncResult>объекты также передаются в методы, <xref:System.AsyncCallback> вызываемые делегатами при завершении асинхронной операции.  
  
 Объект, который поддерживает <xref:System.IAsyncResult> интерфейс, хранит сведения о состоянии асинхронной операции и предоставляет объект синхронизации, позволяющий потокам получать сигнал о завершении операции.  
  
> [!NOTE]
>  Класс является реализацией `BeginInvoke`,возвращаемой методом при использовании делегата для асинхронного вызова метода. <xref:System.IAsyncResult> <xref:System.Runtime.Remoting.Messaging.AsyncResult>  
  
 Подробное описание <xref:System.IAsyncResult> использования интерфейса см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) .  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> свойства для <xref:System.Threading.WaitHandle>получения и ожидания асинхронного вызова в делегате. Объект <xref:System.Threading.WaitHandle> получает сигнал после завершения асинхронного вызова; его можно дождаться путем вызова метода <xref:System.Threading.WaitHandle.WaitOne%2A> .  
  
 Пример состоит из двух классов: класса, содержащего метод, который вызывается асинхронно, и класс, содержащий `Main` метод, который выполняет вызов.  
  
 Дополнительные сведения и дополнительные примеры асинхронного вызова методов с помощью делегатов см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает определенный пользователем объект, который определяет или содержит сведения об асинхронной операции.</summary>
        <value>Определенный пользователем объект, который определяет или содержит сведения об асинхронной операции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает объект, который является последним параметром метода, который инициирует асинхронную операцию.  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> как свойство используется для передачи сведений в метод обратного вызова. Последний параметр `BeginInvoke` вызова метода — это строка формата, которую метод обратного вызова использует для форматирования выходного сообщения.  
  
 Пример состоит из двух классов: класса, содержащего метод, который вызывается асинхронно, и класс, содержащий `Main` метод, который выполняет вызов.  
  
 Дополнительные сведения о работе этого примера обратного вызова и дополнительные примеры асинхронного вызова методов с помощью делегатов см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Реализуйте это свойство, чтобы вызывающая сторона асинхронной операции получала определенный приложением объект, указанный в начале операции.</para></block>
        <block subset="none" type="usage"><para>Этот объект можно использовать для передачи сведений о состоянии асинхронной операции в <see cref="T:System.AsyncCallback" /> предоставленный вами.</para></block>
        <altmember cref="T:System.AsyncCallback" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает дескриптор <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</summary>
        <value>Дескриптор <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение позволяет клиенту ожидать завершения асинхронной операции вместо опроса <xref:System.IAsyncResult.IsCompleted%2A> , пока операция не завершится. Возвращаемое значение можно использовать для выполнения <xref:System.Threading.WaitHandle.WaitOne%2A>операции, <xref:System.Threading.WaitHandle.WaitAny%2A>или <xref:System.Threading.WaitHandle.WaitAll%2A> .  
  
 Общеязыковая среда выполнения предоставляет ряд ожидающих объектов, таких как, <xref:System.Threading.ManualResetEvent> <xref:System.Threading.AutoResetEvent>и <xref:System.Threading.Mutex>, все из которых являются зеркальными примитивами синхронизации Win32.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.IAsyncResult.AsyncWaitHandle%2A> свойства для <xref:System.Threading.WaitHandle>получения и ожидания асинхронного вызова в делегате. Объект <xref:System.Threading.WaitHandle> получает сигнал после завершения асинхронного вызова; его можно дождаться путем вызова метода <xref:System.Threading.WaitHandle.WaitOne%2A> .  
  
 Пример состоит из двух классов: класса, содержащего метод, который вызывается асинхронно, и класс, содержащий `Main` метод, который выполняет вызов.  
  
 Дополнительные сведения и дополнительные примеры асинхронного вызова методов с помощью делегатов см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Объект, реализующий <see cref="T:System.IAsyncResult" /> , не требует создания объекта, <see cref="T:System.Threading.WaitHandle" /> пока <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> свойство не будет считано. Он выбирается <see cref="T:System.IAsyncResult" /> разработчиком. Тем не менее, если разработчик создает <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, то разработчик обязан <see cref="T:System.Threading.WaitHandle" /> сообщить, что прекратит ожидание в соответствующее время. Например, завершает <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> ожидание от имени вызывающего объекта, когда асинхронно вызванный метод возвращает значение. После создания <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> он должен оставаться активным до тех пор, пока пользователь не вызовет метод, завершающий асинхронную операцию. В это время объект, лежащий <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> в основе, может быть удален.</para></block>
        <block subset="none" type="usage"><para>Клиенты, которые ожидают завершения операции (в отличие от опроса), используют это свойство для получения объекта синхронизации для ожидания.  
  
 <block subset="none" type="note"><para>  
 При использовании <see langword="BeginInvoke" /> метода делегата для асинхронного вызова метода и получения маркера ожидания из полученного результата <see cref="T:System.IAsyncResult" />рекомендуется закрыть маркер ожидания, как только вы закончите <see cref="M:System.Threading.WaitHandle.Close" /> его использовать, вызвав метод. Если просто освободить все ссылки на маркер ожидания, системные ресурсы освобождаются, когда сборщик мусора освобождает обработчик ожидания, но сборка мусора работает более эффективно, когда удаляемые объекты явным образом закрываются или удаляются. Дополнительные сведения см. в описании свойства <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />.  
  
</para></block></para></block>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, выполнялась ли асинхронная операция синхронно.</summary>
        <value>Значение <see langword="true" />, если асинхронная операция выполнена синхронно, в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в <xref:System.AsyncCallback> делегате обнаруживается синхронное завершение вызова, вероятно, поток, инициирующий асинхронную операцию, является текущим потоком.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Большинство реализаций <see cref="T:System.IAsyncResult" /> интерфейса не будут использовать это свойство и должно возвращать <see langword="false" />значение. Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)], задача, созданная <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> с помощью метода, не будет завершена, если это свойство не реализовано должным образом. См. раздел [совместимость приложений в 4,5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</para></block>
        <block subset="none" type="usage"><para>Используйте это свойство, чтобы определить, завершилась ли асинхронная операция синхронно. Например, это свойство может возвращать <see langword="true" /> для асинхронной операции ввода-вывода, если запрос ввода-вывода был небольшим.</para></block>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, выполнена ли асинхронная операция.</summary>
        <value>Значение <see langword="true" />, если операция завершена; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство имеет `true`значение, можно предположить, что все ресурсы, выделенные для использования асинхронной операцией, могут быть небезопасны.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.IAsyncResult.IsCompleted%2A> свойство <xref:System.IAsyncResult> объекта для обнаружения завершения асинхронного вызова. В этом случае асинхронный вызов выполняется с помощью `BeginInvoke` метода делегата. <xref:System.IAsyncResult.IsCompleted%2A> Свойство можно использовать для опроса завершения при выполнении асинхронного вызова из потока, который выполняет обслуживание пользовательского интерфейса. Опрос завершения позволяет вызывающему потоку продолжить выполнение при асинхронном вызове для потока <xref:System.Threading.ThreadPool> .  
  
 Пример состоит из двух классов: класса, содержащего метод, который вызывается асинхронно, и класс, содержащий `Main` метод, который выполняет вызов.  
  
 Дополнительные сведения и дополнительные примеры асинхронного вызова методов с помощью делегатов см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Разработчики, как правило, возвращают значение закрытого поля или внутреннего теста в качестве значения этого свойства.</para></block>
        <block subset="none" type="usage"><para>Клиенты, выполняющие опрос состояния операции (а не ожидания объекта синхронизации), используют это свойство для определения состояния операции.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
