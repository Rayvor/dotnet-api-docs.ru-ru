<Type Name="Action&lt;T1,T2,T3,T4&gt;" FullName="System.Action&lt;T1,T2,T3,T4&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc7babe2f2d976cc4581a87362835f28b710b564" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70523285" /></Metadata><TypeSignature Language="C#" Value="public delegate void Action&lt;in T1,in T2,in T3,in T4&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action`4&lt;- T1, - T2, - T3, - T4&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action`4" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action(Of In T1, In T2, In T3, In T4)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;public delegate void Action(T1 arg1, T2 arg2, T3 arg3, T4 arg4);" />
  <TypeSignature Language="F#" Value="type Action&lt;'T1, 'T2, 'T3, 'T4&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="arg1" Type="T1" Index="0" FrameworkAlternate="xamarinmac-3.0" />
    <Parameter Name="arg2" Type="T2" Index="1" FrameworkAlternate="xamarinmac-3.0" />
    <Parameter Name="arg3" Type="T3" Index="2" FrameworkAlternate="xamarinmac-3.0" />
    <Parameter Name="arg4" Type="T4" Index="3" FrameworkAlternate="xamarinmac-3.0" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="aa6e8-101">Тип первого параметра метода, инкапсулируемого данным делегатом.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-101">The type of the first parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="aa6e8-102">Тип второго параметра метода, инкапсулируемого данным делегатом.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-102">The type of the second parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="aa6e8-103">Тип третьего параметра метода, инкапсулируемого данным делегатом.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-103">The type of the third parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="aa6e8-104">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-104">The type of the fourth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <param name="arg1"><span data-ttu-id="aa6e8-105">Первый параметр метода, инкапсулируемого данным делегатом.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-105">The first parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg2"><span data-ttu-id="aa6e8-106">Второй параметр метода, инкапсулируемого данным делегатом.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-106">The second parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg3"><span data-ttu-id="aa6e8-107">Третий параметр метода, инкапсулируемого данным делегатом.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-107">The third parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg4"><span data-ttu-id="aa6e8-108">Четвертый параметр метода, инкапсулируемого данным делегатом.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-108">The fourth parameter of the method that this delegate encapsulates.</span></span></param>
    <summary><span data-ttu-id="aa6e8-109">Инкапсулирует метод, который принимает четыре параметра и не возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-109">Encapsulates a method that has four parameters and does not return a value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa6e8-110"><xref:System.Action%604> Делегат можно использовать для передачи метода в качестве параметра без явного объявления пользовательского делегата.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-110">You can use the <xref:System.Action%604> delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="aa6e8-111">Инкапсулированный метод должен соответствовать сигнатуре метода, определяемого этим делегатом.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-111">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="aa6e8-112">Это означает, что инкапсулированный метод должен иметь четыре параметра, которые передаются ему по значению и не должны возвращать значение.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-112">This means that the encapsulated method must have four parameters that are all passed to it by value, and it must not return a value.</span></span> <span data-ttu-id="aa6e8-113">(В C#метод должен возвращать `void`.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-113">(In C#, the method must return `void`.</span></span> <span data-ttu-id="aa6e8-114">В Visual Basic он должен быть определен `Sub`с помощью...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="aa6e8-114">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="aa6e8-115">создания.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-115">construct.</span></span> <span data-ttu-id="aa6e8-116">Это также может быть метод, возвращающий значение, которое игнорируется.) Как правило, такой метод используется для выполнения операции.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-116">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa6e8-117">Для ссылки на метод, который имеет четыре параметра и возвращает значение, используйте вместо него <xref:System.Func%605> универсальный делегат.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-117">To reference a method that has four parameters and returns a value, use the generic <xref:System.Func%605> delegate instead.</span></span>  
  
 <span data-ttu-id="aa6e8-118">При использовании <xref:System.Action%604> делегата нет необходимости явно определять делегат, инкапсулирующий метод с четырьмя параметрами.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-118">When you use the <xref:System.Action%604> delegate, you do not have to explicitly define a delegate that encapsulates a method with four parameters.</span></span> <span data-ttu-id="aa6e8-119">Например, следующий код явно объявляет делегат с именем `StringCopy` и присваивает ссылку `CopyStrings` на метод его экземпляру делегата.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-119">For example, the following code explicitly declares a delegate named `StringCopy` and assigns a reference to the `CopyStrings` method to its delegate instance.</span></span>  
  
 [!code-csharp[System.Action~4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Delegate.cs#1)]
 [!code-vb[System.Action~4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~4/vb/Delegate.vb#1)]  
  
 <span data-ttu-id="aa6e8-120">В следующем примере этот код упрощается путем создания экземпляра <xref:System.Action%604> делегата вместо явного определения нового делегата и назначения ему именованного метода.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-120">The following example simplifies this code by instantiating the <xref:System.Action%604> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-csharp[System.Action~4#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Action4.cs#2)]
 [!code-vb[System.Action~4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~4/vb/Action4.vb#2)]  
  
 <span data-ttu-id="aa6e8-121">Также можно использовать <xref:System.Action%604> делегат с анонимными методами в C#, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-121">You can also use the <xref:System.Action%604> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="aa6e8-122">(Общие сведения о анонимных методах см. в разделе [анонимные методы](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="aa6e8-122">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action~4#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Anon.cs#3)]  
  
 <span data-ttu-id="aa6e8-123">Можно также назначить лямбда-выражение <xref:System.Action%604> экземпляру делегата, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="aa6e8-123">You can also assign a lambda expression to an <xref:System.Action%604> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="aa6e8-124">(Общие сведения о лямбда-выражениях см. в разделе [лямбда-выражения](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="aa6e8-124">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action~4#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action~4/cs/Lambda.cs#4)]
 [!code-vb[System.Action~4#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action~4/vb/lambda.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`5" />
  </Docs>
</Type>
