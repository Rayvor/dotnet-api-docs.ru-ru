<Type Name="String" FullName="System.String">
  <Metadata><Meta Name="ms.openlocfilehash" Value="724a2c81495d1f45e9c67ec0db06a75752526aaa" /><Meta Name="ms.sourcegitcommit" Value="101e237579339f500467ba198ec0d3471dec4e4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/17/2019" /><Meta Name="ms.locfileid" Value="67150002" /></Metadata><TypeSignature Language="C#" Value="public sealed class String : ICloneable, IComparable, IComparable&lt;string&gt;, IConvertible, IEquatable&lt;string&gt;, System.Collections.Generic.IEnumerable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit string extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;char&gt;, class System.Collections.IEnumerable, class System.ICloneable, class System.IComparable, class System.IComparable`1&lt;string&gt;, class System.IConvertible, class System.IEquatable`1&lt;string&gt;" />
  <TypeSignature Language="DocId" Value="T:System.String" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class String&#xA;Implements ICloneable, IComparable, IComparable(Of String), IConvertible, IEnumerable(Of Char), IEquatable(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class String sealed : ICloneable, IComparable, IComparable&lt;System::String ^&gt;, IConvertible, IEquatable&lt;System::String ^&gt;, System::Collections::Generic::IEnumerable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type string = class&#xA;    interface IComparable&#xA;    interface ICloneable&#xA;    interface IConvertible&#xA;    interface IEnumerable&#xA;    interface IComparable&lt;string&gt;&#xA;    interface seq&lt;char&gt;&#xA;    interface IEquatable&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.String&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="086c0-101">Представляет текст как последовательность из частей кода UTF-16.</span><span class="sxs-lookup"><span data-stu-id="086c0-101">Represents text as a sequence of UTF-16 code units.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="086c0-102">Строка является упорядоченной коллекции символов, который используется для представления текста.</span><span class="sxs-lookup"><span data-stu-id="086c0-102">A string is a sequential collection of characters that is used to represent text.</span></span> <span data-ttu-id="086c0-103">Объект <xref:System.String> объект является упорядоченной коллекции <xref:System.Char?displayProperty=nameWithType> объекты, представляющие строку; <xref:System.Char?displayProperty=nameWithType> соответствует единицу кода UTF-16.</span><span class="sxs-lookup"><span data-stu-id="086c0-103">A <xref:System.String> object is a sequential collection of <xref:System.Char?displayProperty=nameWithType> objects that represent a string; a <xref:System.Char?displayProperty=nameWithType> object corresponds to a UTF-16 code unit.</span></span> <span data-ttu-id="086c0-104">Значение <xref:System.String> объекта заключается в содержании упорядоченной коллекции <xref:System.Char?displayProperty=nameWithType> объекты, и что значение является неизменяемым (то есть это только для чтения).</span><span class="sxs-lookup"><span data-stu-id="086c0-104">The value of the <xref:System.String> object is the content of the sequential collection of <xref:System.Char?displayProperty=nameWithType> objects, and that value is immutable (that is, it is read-only).</span></span> <span data-ttu-id="086c0-105">Дополнительные сведения о неизменность строк, см. в разделе [неизменность и класс StringBuilder](#Immutability) подразделе данного раздела.</span><span class="sxs-lookup"><span data-stu-id="086c0-105">For more information about the immutability of strings, see the [Immutability and the StringBuilder class](#Immutability) section later in this topic.</span></span> <span data-ttu-id="086c0-106">Максимальный размер <xref:System.String> объект в памяти — 2 ГБ, около 1 миллиарда символы.</span><span class="sxs-lookup"><span data-stu-id="086c0-106">The maximum size of a <xref:System.String> object in memory is 2GB, or about 1 billion characters.</span></span>  
  
[!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="086c0-107">Содержание</span><span class="sxs-lookup"><span data-stu-id="086c0-107">In this section:</span></span>  
  
 <span data-ttu-id="086c0-108">[Создание экземпляра объекта строки](#Instantiation) </span><span class="sxs-lookup"><span data-stu-id="086c0-108">[Instantiating a String object](#Instantiation) </span></span>  
 <span data-ttu-id="086c0-109">[Объекты char и символы Юникода](#Characters) </span><span class="sxs-lookup"><span data-stu-id="086c0-109">[Char objects and Unicode characters](#Characters) </span></span>  
 <span data-ttu-id="086c0-110">[Строки и стандарт Юникода](#Unicode) </span><span class="sxs-lookup"><span data-stu-id="086c0-110">[Strings and The Unicode Standard](#Unicode) </span></span>  
 <span data-ttu-id="086c0-111">[Строки и внедренные символы null](#EmbeddedNulls) </span><span class="sxs-lookup"><span data-stu-id="086c0-111">[Strings and embedded null characters](#EmbeddedNulls) </span></span>  
 <span data-ttu-id="086c0-112">[Строки и индексы](#Indexes) </span><span class="sxs-lookup"><span data-stu-id="086c0-112">[Strings and indexes](#Indexes) </span></span>  
 <span data-ttu-id="086c0-113">[Строки NULL и пустые строки](#Nulls) </span><span class="sxs-lookup"><span data-stu-id="086c0-113">[Null strings and empty strings](#Nulls) </span></span>  
 <span data-ttu-id="086c0-114">[Неизменность и класса StringBuilder](#Immutability) </span><span class="sxs-lookup"><span data-stu-id="086c0-114">[Immutability and the StringBuilder class](#Immutability) </span></span>  
 <span data-ttu-id="086c0-115">[Порядковый номер и операций с учетом языка и региональных параметров](#CultureSensitive) </span><span class="sxs-lookup"><span data-stu-id="086c0-115">[Ordinal vs. culture-sensitive operations](#CultureSensitive) </span></span>  
 <span data-ttu-id="086c0-116">[Нормализация](#Normalization) </span><span class="sxs-lookup"><span data-stu-id="086c0-116">[Normalization](#Normalization) </span></span>  
 [<span data-ttu-id="086c0-117">Операции со строками по категориям</span><span class="sxs-lookup"><span data-stu-id="086c0-117">String operations by category</span></span>](#ByCategory)  
  
<a name="Instantiation"></a>   
## <a name="instantiating-a-string-object"></a><span data-ttu-id="086c0-118">Создание экземпляра объекта строки</span><span class="sxs-lookup"><span data-stu-id="086c0-118">Instantiating a String object</span></span>  
 <span data-ttu-id="086c0-119">Можно создать экземпляр <xref:System.String> объект одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="086c0-119">You can instantiate a <xref:System.String> object in the following ways:</span></span>  
  
-   <span data-ttu-id="086c0-120">Назначив строковый литерал <xref:System.String> переменной.</span><span class="sxs-lookup"><span data-stu-id="086c0-120">By assigning a string literal to a <xref:System.String> variable.</span></span> <span data-ttu-id="086c0-121">Это наиболее часто используемый метод для создания строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-121">This is the most commonly used method for creating a string.</span></span> <span data-ttu-id="086c0-122">В следующем примере присваивания используется для создания нескольких строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-122">The following example uses assignment to create several strings.</span></span> <span data-ttu-id="086c0-123">Обратите внимание, что в C#, так как обратная косая черта (\\) является escape-символа, необходимо экранировать символы обратной косой черты, литерал в строке или вся строка должны быть @-quoted.</span><span class="sxs-lookup"><span data-stu-id="086c0-123">Note that in C#, because the backslash (\\) is an escape character, literal backslashes in a string must be escaped or the entire string must be @-quoted.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate1.cpp#1)]
     [!code-csharp-interactive[System.String.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#1)]
     [!code-vb[System.String.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#1)]  
  
-   <span data-ttu-id="086c0-124">Путем вызова <xref:System.String> конструктора класса.</span><span class="sxs-lookup"><span data-stu-id="086c0-124">By calling a <xref:System.String> class constructor.</span></span> <span data-ttu-id="086c0-125">В следующем примере создается строк путем вызова несколько конструкторов класса.</span><span class="sxs-lookup"><span data-stu-id="086c0-125">The following example instantiates strings by calling several class constructors.</span></span> <span data-ttu-id="086c0-126">Обратите внимание, что некоторые конструкторы включают указатели на массивы символов или байт со знаком массивов в качестве параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-126">Note that some of the constructors include pointers to character arrays or signed byte arrays as parameters.</span></span> <span data-ttu-id="086c0-127">Visual Basic не поддерживает вызовы этих конструкторов.</span><span class="sxs-lookup"><span data-stu-id="086c0-127">Visual Basic does not support calls to these constructors.</span></span> <span data-ttu-id="086c0-128">Подробные сведения о <xref:System.String> конструкторы, см. в разделе <xref:System.String.%23ctor%2A> конструктор сводки.</span><span class="sxs-lookup"><span data-stu-id="086c0-128">For detailed information about <xref:System.String> constructors, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate2.cpp#2)]
     [!code-csharp[System.String.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#2)]
     [!code-vb[System.String.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#2)]  
  
-   <span data-ttu-id="086c0-129">С помощью оператора объединения строк (+ в C# и & или + в Visual Basic) для создания одной строки из любого сочетания <xref:System.String> экземпляров и строковые литералы.</span><span class="sxs-lookup"><span data-stu-id="086c0-129">By using the string concatenation operator (+ in C# and & or + in Visual Basic) to create a single string from any combination of <xref:System.String> instances and string literals.</span></span> <span data-ttu-id="086c0-130">Следующий пример иллюстрирует использование оператора объединения строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-130">The following example illustrates the use of the string concatenation operator.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate3.cpp#3)]
     [!code-csharp-interactive[System.String.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#3)]
     [!code-vb[System.String.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#3)]  
  
-   <span data-ttu-id="086c0-131">Путем получения свойства или вызов метода, который возвращает строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-131">By retrieving a property or calling a method that returns a string.</span></span> <span data-ttu-id="086c0-132">В следующем примере используется методы класса <xref:System.String> класса для извлечения подстроки в строку большего размера.</span><span class="sxs-lookup"><span data-stu-id="086c0-132">The following example uses the methods of the <xref:System.String> class to extract a substring from a larger string.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate3.cpp#4)]
     [!code-csharp-interactive[System.String.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#4)]
     [!code-vb[System.String.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#4)]  
  
-   <span data-ttu-id="086c0-133">С помощью метода форматирования для преобразования значения или объекта в строковое представление.</span><span class="sxs-lookup"><span data-stu-id="086c0-133">By calling a formatting method to convert a value or object to its string representation.</span></span> <span data-ttu-id="086c0-134">В следующем примере используется [составное форматирование](~/docs/standard/base-types/composite-formatting.md) возможность внедрить строковую презентацию два объекта в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-134">The following example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature to embed the string representation of two objects into a string.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate3.cpp#5)]
     [!code-csharp[System.String.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#5)]
     [!code-vb[System.String.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#5)]  
  
<a name="Characters"></a>   
## <a name="char-objects-and-unicode-characters"></a><span data-ttu-id="086c0-135">Объекты char и символы Юникода</span><span class="sxs-lookup"><span data-stu-id="086c0-135">Char objects and Unicode characters</span></span>  
 <span data-ttu-id="086c0-136">Каждый символ в строке определяется скалярное значение Юникод, которые также называют кодовую точку Юникода или порядковый номер (числовое) значение символа Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-136">Each character in a string is defined by a Unicode scalar value, also called a Unicode code point or the ordinal (numeric) value of the Unicode character.</span></span> <span data-ttu-id="086c0-137">Каждую кодовую точку кодируется, используя кодировку UTF-16, а числовое значение каждого элемента кодировки представлен <xref:System.Char> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-137">Each code point is encoded by using UTF-16 encoding, and the numeric value of each element of the encoding is represented by a <xref:System.Char> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-138">Обратите внимание, что, поскольку <xref:System.String> экземпляра состоит из упорядоченной коллекции частей кода UTF-16, можно создать <xref:System.String> объект, который не является правильным форматом строки Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-138">Note that, because a <xref:System.String> instance consists of a sequential collection of UTF-16 code units, it is possible to create a <xref:System.String> object that is not a well-formed Unicode string.</span></span> <span data-ttu-id="086c0-139">Например можно создать строки, которая содержит младшим символом-заместителем без соответствующего старшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="086c0-139">For example, it is possible to create a string that has a low surrogate without a corresponding high surrogate.</span></span> <span data-ttu-id="086c0-140">Несмотря на то что некоторые методы, такие как методы кодирования и декодирования объектов в <xref:System.Text> пространства имен, может выполняет проверку, чтобы убедиться, что строки сформированы, <xref:System.String> члены класса не гарантируют, что строка имеет правильный формат.</span><span class="sxs-lookup"><span data-stu-id="086c0-140">Although some methods, such as the methods of encoding and decoding objects in the <xref:System.Text> namespace, may performs checks to ensure that strings are well-formed, <xref:System.String> class members don't ensure that a string is well-formed.</span></span>  
  
 <span data-ttu-id="086c0-141">Один <xref:System.Char> объект обычно представляет отдельную кодовую точку, то есть числовое значение <xref:System.Char> равно кодовой точке.</span><span class="sxs-lookup"><span data-stu-id="086c0-141">A single <xref:System.Char> object usually represents a single code point; that is, the numeric value of the <xref:System.Char> equals the code point.</span></span> <span data-ttu-id="086c0-142">Например, кодовая точка для символа «» разрешается 0061 U +.</span><span class="sxs-lookup"><span data-stu-id="086c0-142">For example, the code point for the character "a" is U+0061.</span></span> <span data-ttu-id="086c0-143">Однако кодовую точку может потребоваться более одного элемента кодировки (более одного <xref:System.Char> объекта).</span><span class="sxs-lookup"><span data-stu-id="086c0-143">However, a code point might require more than one encoded element (more than one <xref:System.Char> object).</span></span> <span data-ttu-id="086c0-144">Стандарт Юникод определяет два типа символов, которые соответствуют к нескольким <xref:System.Char> объектов: graphemes и добавочные кодовые позиции Юникода, соответствующие символы в плоскостей Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-144">The Unicode standard defines two types of characters that correspond to multiple <xref:System.Char> objects: graphemes, and Unicode supplementary code points that correspond to characters in the Unicode supplementary planes.</span></span>  
  
-   <span data-ttu-id="086c0-145">Графем представляется базового символа, за которыми следует один или несколько символов объединения.</span><span class="sxs-lookup"><span data-stu-id="086c0-145">A grapheme is represented by a base character followed by one or more combining characters.</span></span> <span data-ttu-id="086c0-146">Например, символ д представлен объект <xref:System.Char> объект, которого кодовая точка U + 0061 следуют объект <xref:System.Char> объект, которого кодовая точка U + 0308.</span><span class="sxs-lookup"><span data-stu-id="086c0-146">For example, the character ä is represented by a <xref:System.Char> object whose code point is U+0061 followed by a <xref:System.Char> object whose code point is U+0308.</span></span> <span data-ttu-id="086c0-147">Также этот символ можно определить с помощью одной <xref:System.Char> объект с кодовой точкой U + 00E4.</span><span class="sxs-lookup"><span data-stu-id="086c0-147">This character can also be defined by a single <xref:System.Char> object that has a code point of U+00E4.</span></span> <span data-ttu-id="086c0-148">Как в следующем примере показано, учитывающего культуру сравнения на равенство указывает, что эти два представления равны, несмотря на то, что обычные порядковое сравнение — нет.</span><span class="sxs-lookup"><span data-stu-id="086c0-148">As the following example shows, a culture-sensitive comparison for equality indicates that these two representations are equal, although an ordinary ordinal comparison does not.</span></span> <span data-ttu-id="086c0-149">Тем не менее если две строки были нормализованы, порядковое сравнение также указывает, что они равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-149">However, if the two strings are normalized, an ordinal comparison also indicates that they are equal.</span></span> <span data-ttu-id="086c0-150">(Дополнительные сведения о нормализации строк, см. в разделе [нормализации](#Normalization) разделе.)</span><span class="sxs-lookup"><span data-stu-id="086c0-150">(For more information on normalizing strings, see the [Normalization](#Normalization) section.)</span></span>  
  
     [!code-cpp[System.String.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.char1.cpp#2)]
     [!code-csharp[System.String.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/grapheme1.cs#2)]
     [!code-vb[System.String.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/grapheme1.vb#2)]  
  
-   <span data-ttu-id="086c0-151">Юникода, представленный добавочную кодовую позицию (суррогатная пара) <xref:System.Char> объект которого кодовая точка является заместителем, за которым следует <xref:System.Char> объект которого кодовая точка является младшим символом-заместителем.</span><span class="sxs-lookup"><span data-stu-id="086c0-151">A Unicode supplementary code point (a surrogate pair) is represented by a <xref:System.Char> object whose code point is a high surrogate followed by a <xref:System.Char> object whose code point is a low surrogate.</span></span> <span data-ttu-id="086c0-152">Единицы кода высокой суррогаты в диапазоне от U + D800 до U + DBFF.</span><span class="sxs-lookup"><span data-stu-id="086c0-152">The code units of high surrogates range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="086c0-153">Единицы кода низкой суррогаты в диапазоне от U + DC00 до U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="086c0-153">The code units of low surrogates range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="086c0-154">Суррогатные пары используются для представления символов в 16 плоскостей Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-154">Surrogate pairs are used to represent characters in the 16 Unicode supplementary planes.</span></span> <span data-ttu-id="086c0-155">В следующем примере символ-заместитель создает и передает его <xref:System.Char.IsSurrogatePair%28System.Char%2CSystem.Char%29?displayProperty=nameWithType> метод, чтобы определить, является ли оно суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="086c0-155">The following example creates a surrogate character and passes it to the <xref:System.Char.IsSurrogatePair%28System.Char%2CSystem.Char%29?displayProperty=nameWithType> method to determine whether it is a surrogate pair.</span></span>  
  
     [!code-cpp[System.String.Class#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.char2.cpp#3)]
     [!code-csharp-interactive[System.String.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/surrogate1.cs#3)]
     [!code-vb[System.String.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/surrogate1.vb#3)]  
  
<a name="Unicode"></a>   
## <a name="strings-and-the-unicode-standard"></a><span data-ttu-id="086c0-156">Строки и стандарт Юникода</span><span class="sxs-lookup"><span data-stu-id="086c0-156">Strings and the Unicode Standard</span></span>  
 <span data-ttu-id="086c0-157">Символы в строке, представляются частей кода в кодировке UTF-16, которые соответствуют <xref:System.Char> значения.</span><span class="sxs-lookup"><span data-stu-id="086c0-157">Characters in a string are represented by UTF-16 encoded code units, which correspond to <xref:System.Char> values.</span></span>  
  
 <span data-ttu-id="086c0-158">Каждый символ в строке имеет категории символов связанные Юникода, представленный в .NET с <xref:System.Globalization.UnicodeCategory> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-158">Each character in a string has an associated Unicode character category, which is represented in .NET by the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span> <span data-ttu-id="086c0-159">Категория символ или суррогатную пару можно определить путем вызова <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-159">The category of a character or a surrogate pair can be determined by calling the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method.</span></span>  

[!INCLUDE[character-categories](~/includes/unicode-categories.md)]
  
 <span data-ttu-id="086c0-160">Кроме того платформа .NET поддерживает сравнения строк и сортировку на основе Юникода стандарта.</span><span class="sxs-lookup"><span data-stu-id="086c0-160">In addition, .NET supports string comparison and sorting based on the Unicode standard.</span></span> <span data-ttu-id="086c0-161">В версиях .NET Framework с помощью [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], .NET Framework поддерживает собственную таблицу строковых данных.</span><span class="sxs-lookup"><span data-stu-id="086c0-161">In versions of the .NET Framework through the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the .NET Framework maintains its own table of string data.</span></span> <span data-ttu-id="086c0-162">Это справедливо также для версии платформы .NET Framework, начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)] под управлением Windows 7.</span><span class="sxs-lookup"><span data-stu-id="086c0-162">This is also true of versions of the .NET Framework starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] running on Windows 7.</span></span> <span data-ttu-id="086c0-163">Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)] под управлением Windows 8 и более поздних версиях операционной системы Windows, среда выполнения делегаты строка сравнения и сортировки в операционную систему.</span><span class="sxs-lookup"><span data-stu-id="086c0-163">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] running on Window 8 and later versions of the Windows operating system, the runtime delegates string comparison and sorting operations to the operating system.</span></span> <span data-ttu-id="086c0-164">Сравнение строк в .NET Core, и сортировка данных предоставляется компанией [International компоненты для Юникода](http://site.icu-project.org/) библиотеки. Ниже перечислены версии платформы .NET и версии стандарта Юникод, на какой символ основаны сравнение и сортировка.</span><span class="sxs-lookup"><span data-stu-id="086c0-164">On .NET Core, string comparison and sorting information is provided by  [International Components for Unicode](http://site.icu-project.org/) libraries.The following table lists the versions of .NET and the versions of the Unicode Standard on which character comparison and sorting are based.</span></span>  
  
|<span data-ttu-id="086c0-165">Версия .NET</span><span class="sxs-lookup"><span data-stu-id="086c0-165">.NET version</span></span>|<span data-ttu-id="086c0-166">Версия стандарта Юникод</span><span class="sxs-lookup"><span data-stu-id="086c0-166">Version of the Unicode Standard</span></span>|  
|----------------------------|-------------------------------------|  
|[!INCLUDE[net_v11_long](~/includes/net-v11-long-md.md)]|[<span data-ttu-id="086c0-167">Стандарт Юникод, версия 4.0.0</span><span class="sxs-lookup"><span data-stu-id="086c0-167">The Unicode Standard, Version 4.0.0</span></span>](https://www.unicode.org/versions/Unicode4.0.0/)|  
|<span data-ttu-id="086c0-168">.NET Framework 2.0</span><span class="sxs-lookup"><span data-stu-id="086c0-168">The .NET Framework 2.0</span></span>|[<span data-ttu-id="086c0-169">Стандарт Юникод, версия 5.0.0</span><span class="sxs-lookup"><span data-stu-id="086c0-169">The Unicode Standard, Version 5.0.0</span></span>](https://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]|[<span data-ttu-id="086c0-170">Стандарт Юникод, версия 5.0.0</span><span class="sxs-lookup"><span data-stu-id="086c0-170">The Unicode Standard, Version 5.0.0</span></span>](https://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]|[<span data-ttu-id="086c0-171">Стандарт Юникод, версия 5.0.0</span><span class="sxs-lookup"><span data-stu-id="086c0-171">The Unicode Standard, Version 5.0.0</span></span>](https://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] <span data-ttu-id="086c0-172">и более поздних версий на Windows 7</span><span class="sxs-lookup"><span data-stu-id="086c0-172">and later on Windows 7</span></span>|[<span data-ttu-id="086c0-173">Стандарт Юникод, версия 5.0.0</span><span class="sxs-lookup"><span data-stu-id="086c0-173">The Unicode Standard, Version 5.0.0</span></span>](https://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] <span data-ttu-id="086c0-174">и более поздних версий на Windows 8 и более поздних операционных системах Windows</span><span class="sxs-lookup"><span data-stu-id="086c0-174">and later on Windows 8 and later Windows operating systems</span></span>|[<span data-ttu-id="086c0-175">Стандарт Юникод, версия 6.3.0</span><span class="sxs-lookup"><span data-stu-id="086c0-175">The Unicode Standard, Version 6.3.0</span></span>](https://www.unicode.org/versions/Unicode6.3.0/)|  
|<span data-ttu-id="086c0-176">.NET Core (все версии)</span><span class="sxs-lookup"><span data-stu-id="086c0-176">.NET Core (all versions)</span></span>|<span data-ttu-id="086c0-177">Зависит от версии стандарта Юникода, поддерживаемой базовой операционной системой.</span><span class="sxs-lookup"><span data-stu-id="086c0-177">Depends on the version of the Unicode Standard supported by the underlying operating system.</span></span>|

<a name="EmbeddedNulls"></a>   
## <a name="strings-and-embedded-null-characters"></a><span data-ttu-id="086c0-178">Строки и внедренные символы null</span><span class="sxs-lookup"><span data-stu-id="086c0-178">Strings and embedded null characters</span></span>  
 <span data-ttu-id="086c0-179">В .NET <xref:System.String> объект может содержать внедренные символы null, которые считаются частью длину строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-179">In .NET, a <xref:System.String> object can include embedded null characters, which count as a part of the string's length.</span></span> <span data-ttu-id="086c0-180">Тем не менее в некоторых языках, таких как C и C++, символ null указывает на конец строки; он не является частью строки и не считаются частью длину строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-180">However, in some languages such as C and C++, a null character indicates the end of a string; it is not considered a part of the string and is not counted as part of the string's length.</span></span> <span data-ttu-id="086c0-181">Это означает, что следующие общие предположения, которые программисты C и C++ или библиотек, написанных на C или C++ могут сделать сведения о строках не непременно являются допустимыми при применении к <xref:System.String> объектов:</span><span class="sxs-lookup"><span data-stu-id="086c0-181">This means that the following common assumptions that C and C++ programmers or libraries written in C or C++ might make about strings are not necessarily valid when applied to <xref:System.String> objects:</span></span>  
  
-   <span data-ttu-id="086c0-182">Значение, возвращенное `strlen` или `wcslen` функций не обязательно равно <xref:System.String.Length%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-182">The value returned by the `strlen` or `wcslen` functions does not necessarily equal <xref:System.String.Length%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="086c0-183">Строка, созданная по `strcpy_s` или `wcscpy_s` функций не обязательно идентичен строку, созданную путем <xref:System.String.Copy%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-183">The string created by the `strcpy_s` or `wcscpy_s` functions is not necessarily identical to the string created by the <xref:System.String.Copy%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="086c0-184">Следует убедиться, что машинного кода C и C++, создающий экземпляр <xref:System.String> объекты и код, который передается <xref:System.String> объектов посредством вызова, не следует предполагать, что внедренный символ null отмечает конец строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-184">You should ensure that native C and C++ code that instantiates <xref:System.String> objects, and code that is passed <xref:System.String> objects through platform invoke, don't assume that an embedded null character marks the end of the string.</span></span>  
  
 <span data-ttu-id="086c0-185">Когда строка сортировки (или по сравнению с), и при поиске строки внедренные символы null в строке также обрабатываются по-разному.</span><span class="sxs-lookup"><span data-stu-id="086c0-185">Embedded null characters in a string are also treated differently when a string is sorted (or compared) and when a string is searched.</span></span> <span data-ttu-id="086c0-186">Символы NULL учитываются при выполнении сравнения с учетом языка и региональных параметров между двумя строками, включая сравнение с использованием инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-186">Null characters are ignored when performing culture-sensitive comparisons between two strings, including comparisons using the invariant culture.</span></span> <span data-ttu-id="086c0-187">Они учитываются только порядковые сравнения порядковыми, так и без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-187">They are considered only for ordinal or case-insensitive ordinal comparisons.</span></span> <span data-ttu-id="086c0-188">С другой стороны, внедренные символы null всегда считаются при поиске строки с методами, например <xref:System.String.Contains%2A>, <xref:System.String.StartsWith%2A>, и <xref:System.String.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="086c0-188">On the other hand, embedded null characters are always considered when searching a string with methods such as <xref:System.String.Contains%2A>, <xref:System.String.StartsWith%2A>, and <xref:System.String.IndexOf%2A>.</span></span>  
  
<a name="Indexes"></a>   
## <a name="strings-and-indexes"></a><span data-ttu-id="086c0-189">Строки и индексы</span><span class="sxs-lookup"><span data-stu-id="086c0-189">Strings and indexes</span></span>  
 <span data-ttu-id="086c0-190">Индекс — это положение <xref:System.Char> объекта (а не символ Юникода) в <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="086c0-190">An index is the position of a <xref:System.Char> object (not a Unicode character) in a <xref:System.String>.</span></span> <span data-ttu-id="086c0-191">Индекс является неотрицательным число, которое начинается с первого знака в строке, равно нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-191">An index is a zero-based, nonnegative number that starts from the first position in the string, which is index position zero.</span></span> <span data-ttu-id="086c0-192">Ряд методов поиска такие как <xref:System.String.IndexOf%2A> и <xref:System.String.LastIndexOf%2A>, возврата индекса символа или подстроки в экземпляре строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-192">A number of search methods, such as <xref:System.String.IndexOf%2A> and <xref:System.String.LastIndexOf%2A>, return the index of a character or substring in the string instance.</span></span>  
  
 <span data-ttu-id="086c0-193"><xref:System.String.Chars%2A> Свойство позволяет получить доступ к отдельным <xref:System.Char> объекты по их позиции индекса в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-193">The <xref:System.String.Chars%2A> property lets you access individual <xref:System.Char> objects by their index position in the string.</span></span> <span data-ttu-id="086c0-194">Так как <xref:System.String.Chars%2A> свойство является свойством по умолчанию (в Visual Basic) или индексатор (для C#), вы можете получить доступ к отдельные <xref:System.Char> объектов в строке, используя следующий код.</span><span class="sxs-lookup"><span data-stu-id="086c0-194">Because the <xref:System.String.Chars%2A> property is the default property (in Visual Basic) or the indexer (in C#), you can access the individual <xref:System.Char> objects in a string by using code such as the following.</span></span> <span data-ttu-id="086c0-195">Этот код ищет пробелы или знаки препинания в строке, чтобы определить, сколько слов, строка содержит.</span><span class="sxs-lookup"><span data-stu-id="086c0-195">This code looks for white space or punctuation characters in a string to determine how many words the string contains.</span></span>  
  
 [!code-cpp[System.String.Class#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.index1.cpp#4)]
 [!code-csharp-interactive[System.String.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/index1.cs#4)]
 [!code-vb[System.String.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/index1.vb#4)]  
  
 <span data-ttu-id="086c0-196">Так как <xref:System.String> класс реализует <xref:System.Collections.IEnumerable> интерфейс, можно также выполнить итерацию <xref:System.Char> объектов в строке с помощью `foreach` конструкцию, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="086c0-196">Because the <xref:System.String> class implements the <xref:System.Collections.IEnumerable> interface, you can also iterate through the <xref:System.Char> objects in a string by using a `foreach` construct, as the following example shows.</span></span>  
  
 [!code-cpp[System.String.Class#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.index2.cpp#5)]
 [!code-csharp-interactive[System.String.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/index2.cs#5)]
 [!code-vb[System.String.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/index2.vb#5)]  
  
 <span data-ttu-id="086c0-197">Номер индекса может не соответствовать последовательных символов Юникода, так как знак Юникода может быть закодирован несколькими <xref:System.Char> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-197">Consecutive index values might not correspond to consecutive Unicode characters, because a Unicode character might be encoded as more than one <xref:System.Char> object.</span></span> <span data-ttu-id="086c0-198">В частности строка может содержать Многосимвольная единицы текста, которые образуются базовый символ, за следует один или несколько несамостоятельных символов или суррогатные пары.</span><span class="sxs-lookup"><span data-stu-id="086c0-198">In particular, a string may contain multi-character units of text that are formed by a base character followed by one or more combining characters or by surrogate pairs.</span></span> <span data-ttu-id="086c0-199">Для работы с символами Юникода, а не <xref:System.Char> объекты, используют <xref:System.Globalization.StringInfo?displayProperty=nameWithType> и <xref:System.Globalization.TextElementEnumerator> классы.</span><span class="sxs-lookup"><span data-stu-id="086c0-199">To work with Unicode characters instead of <xref:System.Char> objects, use the <xref:System.Globalization.StringInfo?displayProperty=nameWithType> and <xref:System.Globalization.TextElementEnumerator> classes.</span></span> <span data-ttu-id="086c0-200">В следующем примере показано различие между кодом, который работает с <xref:System.Char> объекты и код, который работает с символами Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-200">The following example illustrates the difference between code that works with <xref:System.Char> objects and code that works with Unicode characters.</span></span> <span data-ttu-id="086c0-201">Он сравнивает число символов или элементов текста в каждое слово предложения.</span><span class="sxs-lookup"><span data-stu-id="086c0-201">It compares the number of characters or text elements in each word of a sentence.</span></span> <span data-ttu-id="086c0-202">Строка состоит из двух последовательностей базового символа, за которым следует символ объединения.</span><span class="sxs-lookup"><span data-stu-id="086c0-202">The string includes two sequences of a base character followed by a combining character.</span></span>  
  
 [!code-cpp[System.String.Class#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.index3.cpp#6)]
 [!code-csharp-interactive[System.String.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/index3.cs#6)]
 [!code-vb[System.String.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/index3.vb#6)]  
  
 <span data-ttu-id="086c0-203">Этот пример работает с элементами текста с помощью <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> метод и <xref:System.Globalization.TextElementEnumerator> для перечисления всех текстовых элементов в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-203">This example works with text elements by using the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> method and the <xref:System.Globalization.TextElementEnumerator> class to enumerate all the text elements in a string.</span></span> <span data-ttu-id="086c0-204">Можно также получить массив, содержащий начальный индекс каждого элемента текста, вызвав <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-204">You can also retrieve an array that contains the starting index of each text element by calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="086c0-205">Дополнительные сведения о работе с единицы текста, а не отдельные <xref:System.Char> значения, см. в разделе <xref:System.Globalization.StringInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="086c0-205">For more information about working with units of text rather than individual <xref:System.Char> values, see the <xref:System.Globalization.StringInfo> class.</span></span>  
  
<a name="Nulls"></a>   
## <a name="null-strings-and-empty-strings"></a><span data-ttu-id="086c0-206">Строки NULL и пустые строки</span><span class="sxs-lookup"><span data-stu-id="086c0-206">Null strings and empty strings</span></span>  
 <span data-ttu-id="086c0-207">Строка, который был объявлен, но не было назначено значение `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-207">A string that has been declared but has not been assigned a value is `null`.</span></span> <span data-ttu-id="086c0-208">Попытка вызова методов для этой строки вызывает <xref:System.NullReferenceException>.</span><span class="sxs-lookup"><span data-stu-id="086c0-208">Attempting to call methods on that string throws a <xref:System.NullReferenceException>.</span></span> <span data-ttu-id="086c0-209">Строку null отличается от пустой строкой, который является строкой, значение которого равно «» или <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-209">A null string is different from an empty string, which is a string whose value is "" or <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-210">В некоторых случаях передачи строку null или пустую строку в качестве аргумента в вызове метода вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="086c0-210">In some cases, passing either a null string or an empty string as an argument in a method call throws an exception.</span></span> <span data-ttu-id="086c0-211">Например, передав строку "null", чтобы <xref:System.Int32.Parse%2A?displayProperty=nameWithType> вызывает метод <xref:System.ArgumentNullException>и передать пустую строку, возникает исключение <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="086c0-211">For example, passing a null string to the <xref:System.Int32.Parse%2A?displayProperty=nameWithType> method throws an <xref:System.ArgumentNullException>, and passing an empty string throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="086c0-212">В других случаях аргумента метода может быть пустой строкой или пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="086c0-212">In other cases, a method argument can be either a null string or an empty string.</span></span> <span data-ttu-id="086c0-213">Например, если вы предоставляете <xref:System.IFormattable> реализацию для класса, вы хотите сравнить строку null и указана пустая строка с Описатель общего формата («G»).</span><span class="sxs-lookup"><span data-stu-id="086c0-213">For example, if you are providing an <xref:System.IFormattable> implementation for a class, you want to equate both a null string and an empty string with the general ("G") format specifier.</span></span>  
  
 <span data-ttu-id="086c0-214"><xref:System.String> Класс включает следующие два удобных методов, которые позволяют проверить, является ли строка `null` или пуст:</span><span class="sxs-lookup"><span data-stu-id="086c0-214">The <xref:System.String> class includes the following two convenience methods that enable you to test whether a string is `null` or empty:</span></span>  
  
-   <span data-ttu-id="086c0-215"><xref:System.String.IsNullOrEmpty%2A>, который указывает, является ли строка либо `null` или равно <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-215"><xref:System.String.IsNullOrEmpty%2A>, which indicates whether a string is either `null` or is equal to  <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-216">Этот метод исключает необходимость использовать следующий код:</span><span class="sxs-lookup"><span data-stu-id="086c0-216">This method eliminates the need to use code such as the following:</span></span>  
  
     [!code-cpp[System.String.Class.Null#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.null/cpp/string.null.cpp#1)]
     [!code-csharp[System.String.Class.Null#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.null/cs/nullorempty1.cs#1)]
     [!code-vb[System.String.Class.Null#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.null/vb/nullorempty1.vb#1)]  
  
-   <span data-ttu-id="086c0-217"><xref:System.String.IsNullOrWhiteSpace%2A>, который указывает, является ли строка `null`, равно <xref:System.String.Empty?displayProperty=nameWithType>, или содержит только пробелы.</span><span class="sxs-lookup"><span data-stu-id="086c0-217"><xref:System.String.IsNullOrWhiteSpace%2A>, which indicates whether a string is `null`, equals <xref:System.String.Empty?displayProperty=nameWithType>, or consists exclusively of white-space characters.</span></span> <span data-ttu-id="086c0-218">Этот метод исключает необходимость использовать следующий код:</span><span class="sxs-lookup"><span data-stu-id="086c0-218">This method eliminates the need to use code such as the following:</span></span>  
  
     [!code-cpp[System.String.Class.Null#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.null/cpp/string.null.cpp#2)]
     [!code-csharp[System.String.Class.Null#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.null/cs/nullorempty1.cs#2)]
     [!code-vb[System.String.Class.Null#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.null/vb/nullorempty1.vb#2)]  
  
 <span data-ttu-id="086c0-219">В следующем примере используется <xref:System.String.IsNullOrEmpty%2A> метод в <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> реализация пользовательского `Temperature` класса.</span><span class="sxs-lookup"><span data-stu-id="086c0-219">The following example uses the <xref:System.String.IsNullOrEmpty%2A> method in the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation of a custom `Temperature` class.</span></span> <span data-ttu-id="086c0-220">Метод поддерживает строки формата «G», «C», «F» и «K».</span><span class="sxs-lookup"><span data-stu-id="086c0-220">The method supports the "G", "C", "F", and "K" format strings.</span></span> <span data-ttu-id="086c0-221">Если формат или пустой строкой формата строка, значение которого является `null` передается в метод, его значение изменяется строки формата «G».</span><span class="sxs-lookup"><span data-stu-id="086c0-221">If an empty format string or a format string whose value is `null` is passed to the method, its value is changed to the "G" format string.</span></span>  
  
 [!code-cpp[System.String.Class.Null#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.null/cpp/string.null.cpp#3)]
 [!code-csharp[System.String.Class.Null#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.null/cs/nullorempty1.cs#3)]
 [!code-vb[System.String.Class.Null#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.null/vb/nullorempty1.vb#3)]  
  
<a name="Immutability"></a>   
## <a name="immutability-and-the-stringbuilder-class"></a><span data-ttu-id="086c0-222">Неизменность и класса StringBuilder</span><span class="sxs-lookup"><span data-stu-id="086c0-222">Immutability and the StringBuilder class</span></span>  
 <span data-ttu-id="086c0-223">Объект <xref:System.String> объект называется неизменяемый (только для чтения), так как его значение нельзя изменить после ее создания.</span><span class="sxs-lookup"><span data-stu-id="086c0-223">A <xref:System.String> object is called immutable (read-only), because its value cannot be modified after it has been created.</span></span> <span data-ttu-id="086c0-224">Методы, которые могут изменить <xref:System.String> объект на самом деле возвращается новый <xref:System.String> объект, содержащий изменения.</span><span class="sxs-lookup"><span data-stu-id="086c0-224">Methods that appear to modify a <xref:System.String> object actually return a new <xref:System.String> object that contains the modification.</span></span>  
  
 <span data-ttu-id="086c0-225">Поскольку строки являются неизменяемыми, процедуры обработки строки, которые выполняют повторяющиеся добавлений или удалений для отображается одна строка может точные к значительному снижению производительности.</span><span class="sxs-lookup"><span data-stu-id="086c0-225">Because strings are immutable, string manipulation routines that perform repeated additions or deletions to what appears to be a single string can exact a significant performance penalty.</span></span> <span data-ttu-id="086c0-226">Например следующий код использует генератор случайных чисел для создания строки с 1000 символов в диапазоне 0x0001 для 0x052F.</span><span class="sxs-lookup"><span data-stu-id="086c0-226">For example, the following code uses a random number generator to create a string with 1000 characters in the range 0x0001 to 0x052F.</span></span> <span data-ttu-id="086c0-227">Несмотря на то, что код будет использовать объединение строк для добавления нового символа в существующую строку с именем `str`, фактически создает новый <xref:System.String> объект для каждой операции объединения.</span><span class="sxs-lookup"><span data-stu-id="086c0-227">Although the code appears to use string concatenation to append a new character to the existing string named `str`, it actually creates a new <xref:System.String> object for each concatenation operation.</span></span>  
  
 [!code-cpp[System.String.Class#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.stringbuilder1.cpp#15)]
 [!code-csharp[System.String.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/immutable.cs#15)]
 [!code-vb[System.String.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/immutable.vb#15)]  
  
 <span data-ttu-id="086c0-228">Можно использовать <xref:System.Text.StringBuilder> вместо класса <xref:System.String> класс для операций, которые вносят изменения в нескольких значения строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-228">You can use the <xref:System.Text.StringBuilder> class instead of the <xref:System.String> class for operations that make multiple changes to the value of a string.</span></span> <span data-ttu-id="086c0-229">В отличие от экземпляров <xref:System.String> класс, <xref:System.Text.StringBuilder> объекты являются изменяемыми; при объединения, добавления или удаления подстрок из строки, операции выполняются на одну строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-229">Unlike instances of the <xref:System.String> class, <xref:System.Text.StringBuilder> objects are mutable; when you concatenate, append, or delete substrings from a string, the operations are performed on a single string.</span></span> <span data-ttu-id="086c0-230">После завершения изменения значения <xref:System.Text.StringBuilder> объекта, можно вызвать его <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> метод для преобразования его в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-230">When you have finished modifying the value of a <xref:System.Text.StringBuilder> object, you can call its <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method to convert it to a string.</span></span> <span data-ttu-id="086c0-231">В следующем примере заменяется <xref:System.String> используется в предыдущем примере для объединения 1000 случайные символы в диапазоне в 0x0001, чтобы 0x052F с <xref:System.Text.StringBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-231">The following example replaces the <xref:System.String> used in the previous example to concatenate 1000 random characters in the range to  0x0001 to 0x052F with a <xref:System.Text.StringBuilder> object.</span></span>  
  
 [!code-cpp[System.String.Class#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.stringbuilder2.cpp#16)]
 [!code-csharp[System.String.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/immutable1.cs#16)]
 [!code-vb[System.String.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/immutable1.vb#16)]  
  
<a name="CultureSensitive"></a>   
## <a name="ordinal-vs-culture-sensitive-operations"></a><span data-ttu-id="086c0-232">Порядковый номер и операций с учетом языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="086c0-232">Ordinal vs. culture-sensitive operations</span></span>  
 <span data-ttu-id="086c0-233">Членами <xref:System.String> класс оперируют порядковый номер или культуры (лингвистические) <xref:System.String> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-233">Members of the <xref:System.String> class perform either ordinal or culture-sensitive (linguistic) operations on a <xref:System.String> object.</span></span> <span data-ttu-id="086c0-234">Порядковые операции выполняются над числовыми значениями каждого <xref:System.Char> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-234">An ordinal operation acts on the numeric value of each <xref:System.Char> object.</span></span> <span data-ttu-id="086c0-235">Операция с учетом языка и региональных параметров при обнаружении значение <xref:System.String> объекта и принимает о регистре, сортировку, форматирование и правила синтаксического анализа в учетную запись.</span><span class="sxs-lookup"><span data-stu-id="086c0-235">A culture-sensitive operation acts on the value of the <xref:System.String> object, and takes culture-specific casing, sorting, formatting, and parsing rules into account.</span></span> <span data-ttu-id="086c0-236">Операций с учетом языка и региональных параметров, выполняются в контексте объявленные явным образом языка и региональных параметров или неявное текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-236">Culture-sensitive operations execute in the context of an explicitly declared culture or the implicit current culture.</span></span> <span data-ttu-id="086c0-237">Два вида операций может дать очень разные результаты, если они выполняются в ту же строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-237">The two kinds of operations can produce very different results when they are performed on the same string.</span></span>  
  
<span data-ttu-id="086c0-238">.NET также поддерживает операции со строками без учета языка и региональных параметров лингвистические с использованием инвариантных региональных параметров (<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>), который слабо зависит от региональных параметров зависит от региона английский язык.</span><span class="sxs-lookup"><span data-stu-id="086c0-238">.NET also supports culture-insensitive linguistic string operations by using the invariant culture (<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>), which is loosely based on the culture settings of the English language independent of region.</span></span> <span data-ttu-id="086c0-239">В отличие от других <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> параметров, параметров инвариантного языка и региональных параметров будут гарантированно остаются согласованными на одном компьютере, из системы к системе и всех версий платформы .NET.</span><span class="sxs-lookup"><span data-stu-id="086c0-239">Unlike other <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> settings, the settings of the invariant culture are guaranteed to remain consistent on a single computer, from system to system, and across versions of .NET.</span></span> <span data-ttu-id="086c0-240">Инвариантного языка и региональных параметров может быть материал в качестве своего рода черным ящиком, который обеспечивает стабильность сравнения строк и упорядочения для всех языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-240">The invariant culture can be seen as a kind of black box that ensures stability of string comparisons and ordering across all cultures.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086c0-241">Если приложение принимает решение безопасности о символического идентификатора, такие как имя файла или именованный канал, или о материализованных данных, таких как текстовые данные в XML-файл, операцию следует использовать сравнение по порядковому номеру вместо сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-241">If your application makes a security decision about a symbolic identifier such as a file name or named pipe, or about persisted data such as the text-based data in an XML file, the operation should use an ordinal comparison instead of a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-242">Это обусловлено тем, учитывающего культуру сравнения могут выдавать различные результаты в зависимости от языка и региональных параметров, по сути, тогда как порядковое сравнение зависит только от двоичное значение сравниваемых символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-242">This is because a culture-sensitive comparison can yield different results depending on the culture in effect, whereas an ordinal comparison depends solely on the binary value of the compared characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086c0-243">Большинство методов, которые выполняют операции со строками включают перегрузку, имеющую параметр типа <xref:System.StringComparison>, который позволяет указать, выполняет ли метод операцию порядковыми, так и от культуры.</span><span class="sxs-lookup"><span data-stu-id="086c0-243">Most methods that perform string operations include an overload that has a parameter of type <xref:System.StringComparison>, which enables you to specify whether the method performs an ordinal or culture-sensitive operation.</span></span> <span data-ttu-id="086c0-244">Как правило следует вызывать эту перегрузку, чтобы сделать назначение метода вызова.</span><span class="sxs-lookup"><span data-stu-id="086c0-244">In general, you should call this overload to make the intent of your method call clear.</span></span> <span data-ttu-id="086c0-245">Советы и рекомендации по использованию порядковый номер, с учетом языка и региональных параметров операции со строками, см. в разделе [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-245">For best practices and guidance for using ordinal and culture-sensitive operations on strings, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="086c0-246">Операции для [регистр](#casing), [синтаксического анализа и форматирования](#parsing), [сравнение и сортировка](#comparison), и [проверка на равенство](#equality) может быть либо порядковый номер или зависящие от культуры.</span><span class="sxs-lookup"><span data-stu-id="086c0-246">Operations for [casing](#casing), [parsing and formatting](#parsing), [comparison and sorting](#comparison), and [testing for equality](#equality) can be either ordinal or culture-sensitive.</span></span> <span data-ttu-id="086c0-247">В следующих разделах рассматриваются каждой категории операции.</span><span class="sxs-lookup"><span data-stu-id="086c0-247">The following sections discuss each category of operation.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="086c0-248">Следует всегда вызывать перегрузки метода, который делает назначение метода вызова.</span><span class="sxs-lookup"><span data-stu-id="086c0-248">You should always call a method overload that makes the intent of your method call clear.</span></span> <span data-ttu-id="086c0-249">Например, вместо вызова метода <xref:System.String.Compare%28System.String%2CSystem.String%29> метод, чтобы выполнить сравнение с учетом языка и региональных параметров двух строк с помощью правил текущего языка и региональных параметров, следует вызывать <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> метод со значением <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType> для `comparisonType` аргумент.</span><span class="sxs-lookup"><span data-stu-id="086c0-249">For example, instead of calling the <xref:System.String.Compare%28System.String%2CSystem.String%29> method to perform a culture-sensitive comparison of two strings by using the conventions of the current culture, you should call the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method with a value of <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType> for the `comparisonType` argument.</span></span> <span data-ttu-id="086c0-250">Дополнительные сведения см. в разделе [Рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-250">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  

<span data-ttu-id="086c0-251">Можно скачать [таблицы коэффициентов сортировки](https://www.microsoft.com/download/details.aspx?id=10921) — набор текстовых файлов, которые содержат сведения о весовых коэффициентах символов, используемых в операциях сортировки и сравнения для операционных систем Windows, а также [таблицу параметров сортировки по умолчанию для элементов Юникод](https://www.unicode.org/Public/UCA/latest/allkeys.txt) — таблицу весовых коэффициентов сортировки для Linux и macOS.</span><span class="sxs-lookup"><span data-stu-id="086c0-251">You can download the [Sorting Weight Tables](https://www.microsoft.com/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, and the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the sort weight table for Linux and macOS.</span></span>

<a name="casing"></a>   
### <a name="casing"></a><span data-ttu-id="086c0-252">Регистр</span><span class="sxs-lookup"><span data-stu-id="086c0-252">Casing</span></span>  
 <span data-ttu-id="086c0-253">Правила определения регистра для определения способа изменить регистр символа Юникода; например из нижнего регистра в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-253">Casing rules determine how to change the capitalization of a Unicode character; for example, from lowercase to uppercase.</span></span> <span data-ttu-id="086c0-254">Часто операция регистр выполняется перед сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-254">Often, a casing operation is performed before a string comparison.</span></span> <span data-ttu-id="086c0-255">Например строки могут быть преобразованы в верхний регистр, таким образом, чтобы его можно сравнить с другим строку в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="086c0-255">For example, a string might be converted to uppercase so that it can be compared with another uppercase string.</span></span> <span data-ttu-id="086c0-256">Можно преобразовать символы в строке в нижний регистр, вызвав <xref:System.String.ToLower%2A> или <xref:System.String.ToLowerInvariant%2A> метод и их можно преобразовать в верхний регистр, вызвав <xref:System.String.ToUpper%2A> или <xref:System.String.ToUpperInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-256">You can convert the characters in a string to lowercase by calling the <xref:System.String.ToLower%2A> or <xref:System.String.ToLowerInvariant%2A> method, and you can convert them to uppercase by calling the <xref:System.String.ToUpper%2A> or <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="086c0-257">Кроме того, можно использовать <xref:System.Globalization.TextInfo.ToTitleCase%2A?displayProperty=nameWithType> метод для преобразования строки в заглавные символы.</span><span class="sxs-lookup"><span data-stu-id="086c0-257">In addition, you can use the <xref:System.Globalization.TextInfo.ToTitleCase%2A?displayProperty=nameWithType> method to convert a string to title case.</span></span>  

[!INCLUDE[platform-note](~/includes/c-and-posix-cultures.md)]  
  
 <span data-ttu-id="086c0-258">Регистр операций может быть на основе правил текущего языка и региональных параметров, заданных региональных параметров или инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-258">Casing operations can be based on the rules of the current culture, a specified culture, or the invariant culture.</span></span> <span data-ttu-id="086c0-259">Поскольку сопоставление регистра могут различаться в зависимости от языка и региональных параметров, результатов операций регистр зависит от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-259">Because case mappings can vary depending on the culture used, the result of casing operations can vary based on culture.</span></span> <span data-ttu-id="086c0-260">Фактический различия в регистре ключевых имеют три типа:</span><span class="sxs-lookup"><span data-stu-id="086c0-260">The actual differences in casing are of three kinds:</span></span>  
  
-   <span data-ttu-id="086c0-261">Различия в сопоставления в LATIN CAPITAL LETTER I (U + 0049), LATIN НЕБОЛЬШОЙ буква I (U + 0069), LATIN CAPITAL LETTER I с ТОЧКОЙ выше (U + 0130) и LATIN НЕБОЛЬШОЙ буквы без ТОЧКИ I (U + 0131).</span><span class="sxs-lookup"><span data-stu-id="086c0-261">Differences in the case mapping of LATIN CAPITAL LETTER I (U+0049), LATIN SMALL LETTER I (U+0069), LATIN CAPITAL LETTER I WITH DOT ABOVE (U+0130), and LATIN SMALL LETTER DOTLESS I (U+0131).</span></span> <span data-ttu-id="086c0-262">В az-Latn-AZ (латиница, Азербайджан) языков и региональных параметров и tr-TR (турецкий (Турция)), tr, az и az-Latn нейтральные культуры, эквивалент LATIN ЗАГЛАВНОЙ буквы I в нижнем регистре — LATIN НЕБОЛЬШОЙ буквы без ТОЧКИ I и эквивалент регистре LATIN НЕБОЛЬШОЙ буквы I – ПРОПИСНЫЕ ЛАТИНСКИЕ БУКВЫ I С ТОЧКОЙ ВЫШЕ.</span><span class="sxs-lookup"><span data-stu-id="086c0-262">In the tr-TR (Turkish (Turkey)) and az-Latn-AZ (Azerbaijan, Latin) cultures, and in the tr, az, and az-Latn neutral cultures, the lowercase equivalent of LATIN CAPITAL LETTER I is LATIN SMALL LETTER DOTLESS I, and the uppercase equivalent of LATIN SMALL LETTER I is LATIN CAPITAL LETTER I WITH DOT ABOVE.</span></span> <span data-ttu-id="086c0-263">В других культурах в том числе инвариантных региональных параметров, LATIN НЕБОЛЬШОЙ буквы I и я являются эквивалентами строчные и прописные буквы LATIN.</span><span class="sxs-lookup"><span data-stu-id="086c0-263">In all other cultures, including the invariant culture, LATIN SMALL LETTER I and LATIN CAPITAL LETTER I are lowercase and uppercase equivalents.</span></span>  
  
     <span data-ttu-id="086c0-264">В следующем примере показано как сравнения строк предназначен для предотвращения доступа к файловой системе может завершиться ошибкой, если он основывается на сравнении регистр с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-264">The following example demonstrates how a string comparison designed to prevent file system access can fail if it relies on a culture-sensitive casing comparison.</span></span> <span data-ttu-id="086c0-265">(Правила регистра инвариантного языка и региональных параметров должно быть использовано.)</span><span class="sxs-lookup"><span data-stu-id="086c0-265">(The casing conventions of the invariant culture should have been used.)</span></span>  
  
     [!code-csharp[System.String.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/case2.cs#17)]
     [!code-vb[System.String.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/case2.vb#17)]  
  
-   <span data-ttu-id="086c0-266">Различия в сопоставление регистра инвариантного языка и региональных параметров и всех других языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-266">Differences in case mappings between the invariant culture and all other cultures.</span></span> <span data-ttu-id="086c0-267">В таких случаях с помощью правила учета регистра инвариантного языка и региональных параметров, чтобы изменить символ в верхний или нижний возвращает тот же символ.</span><span class="sxs-lookup"><span data-stu-id="086c0-267">In these cases, using the casing rules of the invariant culture to change a character to uppercase or lowercase returns the same character.</span></span> <span data-ttu-id="086c0-268">Для всех других языков и региональных параметров он возвращает другой символ.</span><span class="sxs-lookup"><span data-stu-id="086c0-268">For all other cultures, it returns a different character.</span></span> <span data-ttu-id="086c0-269">В следующей таблице перечислены некоторые из затронутых символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-269">Some of the affected characters are listed in the following table.</span></span>  
  
    |<span data-ttu-id="086c0-270">Знак</span><span class="sxs-lookup"><span data-stu-id="086c0-270">Character</span></span>|<span data-ttu-id="086c0-271">При изменении</span><span class="sxs-lookup"><span data-stu-id="086c0-271">If changed to</span></span>|<span data-ttu-id="086c0-272">Returns</span><span class="sxs-lookup"><span data-stu-id="086c0-272">Returns</span></span>|  
    |---------------|-------------------|-------------|  
    |<span data-ttu-id="086c0-273">МКМ ВХОДА (U + 00B5)</span><span class="sxs-lookup"><span data-stu-id="086c0-273">MICRON SIGN (U+00B5)</span></span>|<span data-ttu-id="086c0-274">Прописные буквы</span><span class="sxs-lookup"><span data-stu-id="086c0-274">Uppercase</span></span>|<span data-ttu-id="086c0-275">ЦЕНТР ОБНОВЛЕНИЯ МАЙКРОСОФТ ЗАГЛАВНУЮ ГРЕЧЕСКУЮ БУКВУ (U +-39C)</span><span class="sxs-lookup"><span data-stu-id="086c0-275">GREEK CAPITAL LETTER MU (U+-39C)</span></span>|  
    |<span data-ttu-id="086c0-276">ПРОПИСНЫЕ ЛАТИНСКИЕ БУКВЫ I С ТОЧКОЙ ВЫШЕ (U + 0130)</span><span class="sxs-lookup"><span data-stu-id="086c0-276">LATIN CAPITAL LETTER I WITH DOT ABOVE (U+0130)</span></span>|<span data-ttu-id="086c0-277">Строчные буквы</span><span class="sxs-lookup"><span data-stu-id="086c0-277">Lowercase</span></span>|<span data-ttu-id="086c0-278">ЛАТИНИЦА МАЛОГО БУКВЫ I (U + 0069)</span><span class="sxs-lookup"><span data-stu-id="086c0-278">LATIN SMALL LETTER I (U+0069)</span></span>|  
    |<span data-ttu-id="086c0-279">КРАТКУЮ ЛАТИНСКАЯ СТРОЧНАЯ БУКВА I (U + 0131)</span><span class="sxs-lookup"><span data-stu-id="086c0-279">LATIN SMALL LETTER DOTLESS I (U+0131)</span></span>|<span data-ttu-id="086c0-280">Прописные буквы</span><span class="sxs-lookup"><span data-stu-id="086c0-280">Uppercase</span></span>|<span data-ttu-id="086c0-281">ПРОПИСНЫЕ ЛАТИНСКИЕ БУКВЫ I (U + 0049)</span><span class="sxs-lookup"><span data-stu-id="086c0-281">LATIN CAPITAL LETTER I (U+0049)</span></span>|  
    |<span data-ttu-id="086c0-282">ЛАТИНСКАЯ СТРОЧНАЯ БУКВА LONG S (U + 017F)</span><span class="sxs-lookup"><span data-stu-id="086c0-282">LATIN SMALL LETTER LONG S (U+017F)</span></span>|<span data-ttu-id="086c0-283">Прописные буквы</span><span class="sxs-lookup"><span data-stu-id="086c0-283">Uppercase</span></span>|<span data-ttu-id="086c0-284">ПРОПИСНАЯ ЛАТИНСКАЯ БУКВА S (U + 0053)</span><span class="sxs-lookup"><span data-stu-id="086c0-284">LATIN CAPITAL LETTER S (U+0053)</span></span>|  
    |<span data-ttu-id="086c0-285">ПРОПИСНАЯ ЛАТИНСКАЯ БУКВА D С СТРОЧНАЯ БУКВА Z С ГАЛОЧКОЙ (U + 01C 5)</span><span class="sxs-lookup"><span data-stu-id="086c0-285">LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON (U+01C5)</span></span>|<span data-ttu-id="086c0-286">Строчные буквы</span><span class="sxs-lookup"><span data-stu-id="086c0-286">Lowercase</span></span>|<span data-ttu-id="086c0-287">ЛАТИНСКАЯ СТРОЧНАЯ БУКВА DZ С ГАЛОЧКОЙ (U + 01C 6)</span><span class="sxs-lookup"><span data-stu-id="086c0-287">LATIN SMALL LETTER DZ WITH CARON (U+01C6)</span></span>|  
    |<span data-ttu-id="086c0-288">ГРЕЧЕСКИЙ YPOGEGRAMMENI ОБЪЕДИНЕНИЯ (U + 0345)</span><span class="sxs-lookup"><span data-stu-id="086c0-288">COMBINING GREEK YPOGEGRAMMENI (U+0345)</span></span>|<span data-ttu-id="086c0-289">Прописные буквы</span><span class="sxs-lookup"><span data-stu-id="086c0-289">Uppercase</span></span>|<span data-ttu-id="086c0-290">IOTA ЗАГЛАВНУЮ ГРЕЧЕСКУЮ БУКВУ (U + 0399)</span><span class="sxs-lookup"><span data-stu-id="086c0-290">GREEK CAPITAL LETTER IOTA (U+0399)</span></span>|  
  
-   <span data-ttu-id="086c0-291">Различия в сопоставление регистра из пары заглавных букв в диапазоне символов ASCII.</span><span class="sxs-lookup"><span data-stu-id="086c0-291">Differences in case mappings of two-letter mixed-case pairs in the ASCII character range.</span></span> <span data-ttu-id="086c0-292">В большинстве языков и региональных параметров пару заглавных букв равно эквивалентное пар верхний или нижний регистр букв.</span><span class="sxs-lookup"><span data-stu-id="086c0-292">In most cultures, a two-letter mixed-case pair is equal to the equivalent two-letter uppercase or lowercase pair.</span></span> <span data-ttu-id="086c0-293">Это не относится к пары следующих языков и региональных параметров, в следующих двух букв, так как в каждом случае они сравниваются с диграф:</span><span class="sxs-lookup"><span data-stu-id="086c0-293">This is not true for the following two-letter pairs in the following cultures, because in each case they are compared to a digraph:</span></span>  
  
    -   <span data-ttu-id="086c0-294">«lJ» и «nJ» в культуре, hr-HR (Хорватский (Хорватия)).</span><span class="sxs-lookup"><span data-stu-id="086c0-294">"lJ" and "nJ" in the hr-HR (Croatian (Croatia)) culture.</span></span>  
  
    -   <span data-ttu-id="086c0-295">«cH» в cs-CZ (чешский (Чешская Республика)) и sk-SK (словацкий (Словакия)) языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-295">"cH" in the cs-CZ (Czech (Czech Republic)) and sk-SK (Slovak (Slovakia)) cultures.</span></span>  
  
    -   <span data-ttu-id="086c0-296">«aA» в культуре da-DK (датский (Дания)).</span><span class="sxs-lookup"><span data-stu-id="086c0-296">"aA" in the da-DK (Danish (Denmark)) culture.</span></span>  
  
    -   <span data-ttu-id="086c0-297">«cS», «dZ», «dZS», «nY», «sZ», «tY» и «zS» в культуре, hu-HU (Венгерский (Венгрия)).</span><span class="sxs-lookup"><span data-stu-id="086c0-297">"cS", "dZ", "dZS", "nY", "sZ", "tY", and "zS" in the hu-HU (Hungarian (Hungary)) culture.</span></span>  
  
    -   <span data-ttu-id="086c0-298">«cH» и «lL» в язык и региональные параметры es-ES_tradnl (испанский (Испания, традиционная сортировка)).</span><span class="sxs-lookup"><span data-stu-id="086c0-298">"cH" and "lL" in the es-ES_tradnl (Spanish (Spain, Traditional Sort)) culture.</span></span>  
  
    -   <span data-ttu-id="086c0-299">«cH», «gI», «kH», «nG» «центр уведомлений», «pH», «qU ", «tH» и «tR» в культуре vi-VN (вьетнамский (Вьетнам)).</span><span class="sxs-lookup"><span data-stu-id="086c0-299">"cH", "gI", "kH", "nG" "nH", "pH", "qU', "tH", and "tR" in the vi-VN (Vietnamese (Vietnam)) culture.</span></span>  
  
     <span data-ttu-id="086c0-300">Тем не менее не передается столкнуться с ситуацией, в котором учитывающего культуру сравнения этих пар создает проблемы, в том случае, поскольку эти пары происходят нечасто в фиксированных строк или идентификаторов.</span><span class="sxs-lookup"><span data-stu-id="086c0-300">However, it is unusual to encounter a situation in which a culture-sensitive comparison of these pairs creates problems, because these pairs are uncommon in fixed strings or identifiers.</span></span>  
  
 <span data-ttu-id="086c0-301">Следующий пример иллюстрирует некоторые различия в правила определения регистра для языков и региональных параметров при преобразовании строки в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-301">The following example illustrates some of the differences in casing rules between cultures when converting strings to uppercase.</span></span>  
  
 [!code-cpp[System.String.Class#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.casing.cpp#7)]
 [!code-csharp[System.String.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/case1.cs#7)]
 [!code-vb[System.String.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/case1.vb#7)]  
  
<a name="parsing"></a>   
### <a name="parsing-and-formatting"></a><span data-ttu-id="086c0-302">Синтаксического анализа и форматирования</span><span class="sxs-lookup"><span data-stu-id="086c0-302">Parsing and formatting</span></span>  
 <span data-ttu-id="086c0-303">Форматирование и разбор — это обратная операции.</span><span class="sxs-lookup"><span data-stu-id="086c0-303">Formatting and parsing are inverse operations.</span></span> <span data-ttu-id="086c0-304">Правила форматирования определяют способ преобразования значение, например даты и времени или номер, в строковое представление, в то время как синтаксического анализа правила определяют способ преобразования строкового представления в значение даты и времени.</span><span class="sxs-lookup"><span data-stu-id="086c0-304">Formatting rules determine how to convert a value, such as a date and time or a number, to its string representation, whereas parsing rules determine how to convert a string representation to a value such as a date and time.</span></span> <span data-ttu-id="086c0-305">Форматирования и разбора правила зависят от национальные стандарты.</span><span class="sxs-lookup"><span data-stu-id="086c0-305">Both formatting and parsing rules are dependent on cultural conventions.</span></span> <span data-ttu-id="086c0-306">В следующем примере показано неоднозначности, которые могут возникнуть при интерпретации строки даты конкретного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-306">The following example illustrates the ambiguity that can arise when interpreting a culture-specific date string.</span></span> <span data-ttu-id="086c0-307">Не зная соглашений для языка и региональных параметров, который использовался для создания строки даты, не сможете узнать ли 03/01/2011 г., 3/1/2011 и 01/03/2011 представляют 3 января 2011 г. или 1 марта 2011 г.</span><span class="sxs-lookup"><span data-stu-id="086c0-307">Without knowing the conventions of the culture that was used to produce a date string, it is not possible to know whether 03/01/2011, 3/1/2011, and 01/03/2011 represent January 3, 2011 or March 1, 2011.</span></span>  
  
 [!code-cpp[System.String.Class#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.format1.cpp#8)]
 [!code-csharp[System.String.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/format1.cs#8)]
 [!code-vb[System.String.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/format1.vb#8)]  
  
 <span data-ttu-id="086c0-308">Точно так же как показано в следующем примере, одну строку может привести к другие дни, в зависимости от языка и региональных параметров, соглашения о которых используются в операции синтаксического анализа.</span><span class="sxs-lookup"><span data-stu-id="086c0-308">Similarly, as the following example shows, a single string can produce different dates depending on the culture whose conventions are used in the parsing operation.</span></span>  
  
 [!code-cpp[System.String.Class#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.parse1.cpp#9)]
 [!code-csharp[System.String.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/parse1.cs#9)]
 [!code-vb[System.String.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/parse1.vb#9)]  
  
<a name="comparison"></a>   
### <a name="string-comparison-and-sorting"></a><span data-ttu-id="086c0-309">Сравнение и сортировка строк</span><span class="sxs-lookup"><span data-stu-id="086c0-309">String comparison and sorting</span></span>  
 <span data-ttu-id="086c0-310">Соглашения для сравнения и сортировки строк зависят от языка и региональных параметров для языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-310">Conventions for comparing and sorting strings vary from culture to culture.</span></span> <span data-ttu-id="086c0-311">Например порядок сортировки может основываться на Фонетическое название или визуальным представлением символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-311">For example, the sort order may be based on phonetics or on the visual representation of characters.</span></span> <span data-ttu-id="086c0-312">В восточно-азиатских языков символы являются отсортированный обводкой и корнями идеограмм.</span><span class="sxs-lookup"><span data-stu-id="086c0-312">In East Asian languages, characters are sorted by the stroke and radical of ideographs.</span></span> <span data-ttu-id="086c0-313">Также сортировки зависит от порядка языков и использовать языки и региональные параметры для алфавита.</span><span class="sxs-lookup"><span data-stu-id="086c0-313">Sorting also depends on the order languages and cultures use for the alphabet.</span></span> <span data-ttu-id="086c0-314">Например датского языка есть символ «Æ», который в алфавите после «Z».</span><span class="sxs-lookup"><span data-stu-id="086c0-314">For example, the Danish language has an "Æ" character that it sorts after "Z" in the alphabet.</span></span> <span data-ttu-id="086c0-315">Кроме того может быть сравнение зависеть от регистра символов, и в некоторых случаях правила определения регистра также отличаются языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-315">In addition, comparisons can be case-sensitive or case-insensitive, and in some cases casing rules also differ by culture.</span></span> <span data-ttu-id="086c0-316">Порядковое сравнение, с другой стороны, использует кодовые позиции Юникода, отдельных символов в строки при сравнения и сортировки строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-316">Ordinal comparison, on the other hand, uses the Unicode code points of individual characters in a string when comparing and sorting strings.</span></span>  
  
 <span data-ttu-id="086c0-317">Правила сортировки определяют алфавитный порядок символов Юникода и как две строки сравнивать друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-317">Sort rules determine the alphabetic order of Unicode characters and how two strings compare to each other.</span></span> <span data-ttu-id="086c0-318">Например <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> метод сравнивает две строки, на основе <xref:System.StringComparison> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-318">For example, the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> method compares two strings based on the <xref:System.StringComparison> parameter.</span></span> <span data-ttu-id="086c0-319">Если значение параметра не <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, метод выполняет лингвистического сравнения, который использует соглашения текущих региональных параметров; Если значение параметра не <xref:System.StringComparison.Ordinal?displayProperty=nameWithType>, метод выполняет порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-319">If the parameter value is <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, the method performs a linguistic comparison that uses the conventions of the current culture; if the parameter value is <xref:System.StringComparison.Ordinal?displayProperty=nameWithType>, the method performs an ordinal comparison.</span></span> <span data-ttu-id="086c0-320">Следовательно, как показано в следующем примере, если текущий язык — американский английский Английский, первый вызов <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> метод (с помощью сравнение с учетом языка и региональных параметров) рассматривает «» меньше, чем «A», но второй вызов на тот же метод (с помощью порядковое сравнение) рассматривает «a» больше «A».</span><span class="sxs-lookup"><span data-stu-id="086c0-320">Consequently, as the following example shows, if the current culture is U.S. English, the first call to the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> method (using culture-sensitive comparison) considers "a" less than "A", but the second call to the same method (using ordinal comparison) considers "a" greater than "A".</span></span>  
  
 [!code-cpp[System.String.Class#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.compare1.cpp#10)]
 [!code-csharp[System.String.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/compare1.cs#10)]
 [!code-vb[System.String.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/compare1.vb#10)]  
  
 <span data-ttu-id="086c0-321">Платформа .NET поддерживает word, строка и правила сортировки по порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="086c0-321">.NET supports word, string, and ordinal sort rules:</span></span>  
  
-   <span data-ttu-id="086c0-322">Сортировка по словам выполняет сравнение строк с учетом языка и региональных параметров, в котором некоторые символы Юникода могут иметь особые весовые коэффициенты.</span><span class="sxs-lookup"><span data-stu-id="086c0-322">A word sort performs a culture-sensitive comparison of strings in which certain nonalphanumeric Unicode characters might have special weights assigned to them.</span></span> <span data-ttu-id="086c0-323">Например дефис (-) может иметь очень низкий весовой «coop» и «co-op» отображаются рядом друг с другом в сортированном списке.</span><span class="sxs-lookup"><span data-stu-id="086c0-323">For example, the hyphen (-) might have a very small weight assigned to it so that "coop" and "co-op" appear next to each other in a sorted list.</span></span> <span data-ttu-id="086c0-324">Список <xref:System.String> методы, которые сравнивают две строки, word, используя правила сортировки см. в разделе [строковые операции по категориям](#ByCategory) раздел.</span><span class="sxs-lookup"><span data-stu-id="086c0-324">For a list of the <xref:System.String> methods that compare two strings using word sort rules, see the [String operations by category](#ByCategory) section.</span></span>  
  
-   <span data-ttu-id="086c0-325">Сортировка по строкам также выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-325">A string sort also performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-326">Она аналогична Сортировка по словам, за исключением того, что существует особых случаев нет, и все символы не алфавитно-цифровым предшествуют буквенно-цифровые символы.</span><span class="sxs-lookup"><span data-stu-id="086c0-326">It is similar to a word sort, except that there are no special cases, and all nonalphanumeric symbols come before all alphanumeric Unicode characters.</span></span> <span data-ttu-id="086c0-327">Можно сравнить две строки с помощью правила сортировки строк путем вызова <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> перегрузок метода, имеющих `options` параметр, который имеет указанное значение <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-327">Two strings can be compared using string sort rules by calling the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method overloads that have an `options` parameter that is supplied a value of <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-328">Обратите внимание, что это единственный метод, платформа .NET предоставляет для сравнения двух строк, используя правила сортировки строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-328">Note that this is the only method that .NET provides to compare two strings using string sort rules.</span></span>  
  
-   <span data-ttu-id="086c0-329">Сортировки по порядковому номеру строки сравниваются на основе числовое значение каждого из них <xref:System.Char> объекта в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-329">An ordinal sort compares strings based on the numeric value of each <xref:System.Char> object in the string.</span></span> <span data-ttu-id="086c0-330">Порядковое сравнение автоматически с учетом регистра, так как в нижнем и верхнем регистре символа имеют разные кодовые точки.</span><span class="sxs-lookup"><span data-stu-id="086c0-330">An ordinal comparison is automatically case-sensitive because the lowercase and uppercase versions of a character have different code points.</span></span> <span data-ttu-id="086c0-331">Тем не менее если регистр не имеет значения, можно указать порядковое сравнение, которое не учитывает регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-331">However, if case is not important, you can specify an ordinal comparison that ignores case.</span></span> <span data-ttu-id="086c0-332">Это эквивалентно преобразованию строки в верхний регистр с помощью инвариантного языка и региональных параметров и выполнению порядкового сравнения результатов.</span><span class="sxs-lookup"><span data-stu-id="086c0-332">This is equivalent to converting the string to uppercase by using the invariant culture and then performing an ordinal comparison on the result.</span></span> <span data-ttu-id="086c0-333">Список <xref:System.String> методы, которые сравнивают две строки, используя правила сортировки по порядковому номеру, см. в разделе [строковые операции по категориям](#ByCategory) раздел.</span><span class="sxs-lookup"><span data-stu-id="086c0-333">For a list of the <xref:System.String> methods that compare two strings using ordinal sort rules, see the [String operations by category](#ByCategory) section.</span></span>  
  
 <span data-ttu-id="086c0-334">Сравнение с учетом языка и региональных параметров является любое сравнение, которое явно или неявно использующая <xref:System.Globalization.CultureInfo> объекта, включая инвариантного языка и региональных параметров, который задается параметром <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="086c0-334">A culture-sensitive comparison is any comparison that explicitly or implicitly uses a <xref:System.Globalization.CultureInfo> object, including the invariant culture that is specified by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="086c0-335">Неявное языка и региональных параметров является текущим языком, который задается путем <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> и <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="086c0-335">The implicit culture is the current culture, which is specified by the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> and <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="086c0-336">Есть значительные отклонения в порядке сортировки букв (то есть символы, для которого <xref:System.Char.IsLetter%2A?displayProperty=nameWithType> возвращает `true`) различных региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-336">There is considerable variation in the sort order of alphabetic characters (that is, characters for which the <xref:System.Char.IsLetter%2A?displayProperty=nameWithType> property returns `true`) across cultures.</span></span> <span data-ttu-id="086c0-337">Можно указать сравнение с учетом языка и региональных параметров, который использует правила конкретного языка и региональных параметров, указав <xref:System.Globalization.CultureInfo> объекта в метод сравнения строк, таких как <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29>.</span><span class="sxs-lookup"><span data-stu-id="086c0-337">You can specify a culture-sensitive comparison that uses the conventions of a specific culture by supplying a <xref:System.Globalization.CultureInfo> object to a string comparison method such as <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29>.</span></span> <span data-ttu-id="086c0-338">Можно указать сравнение с учетом языка и региональных параметров, который использует соглашения текущих региональных параметров, указав <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>, или любой член <xref:System.Globalization.CompareOptions> перечисления, отличное от <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> — соответствующую перегруженная версия <xref:System.String.Compare%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-338">You can specify a culture-sensitive comparison that uses the conventions of the current culture by supplying <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>, or any member of the <xref:System.Globalization.CompareOptions> enumeration other than <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> to an appropriate overload of the <xref:System.String.Compare%2A> method.</span></span> <span data-ttu-id="086c0-339">Сравнение с учетом языка и региональных параметров обычно подходит для сортировки, тогда как порядковое сравнение — нет.</span><span class="sxs-lookup"><span data-stu-id="086c0-339">A culture-sensitive comparison is generally appropriate for sorting whereas an ordinal comparison is not.</span></span> <span data-ttu-id="086c0-340">Порядковое сравнение, как правило, подходят для определения, равны ли две строки (то есть для определения удостоверений) в то время как не является сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-340">An ordinal comparison is generally appropriate for determining whether two strings are equal (that is, for determining identity) whereas a culture-sensitive comparison is not.</span></span>  
  
 <span data-ttu-id="086c0-341">В следующем примере показано различие между сравнения с учетом языка и региональных параметров и порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="086c0-341">The following example illustrates the difference between culture-sensitive and ordinal comparison.</span></span> <span data-ttu-id="086c0-342">Пример возвращает три строки, «Apple», «Æble» и «AEble», используя порядковое сравнение и соглашений для языков и региональных параметров da-DK "и" en US (каждый из которых является языком по умолчанию во время <xref:System.String.Compare%2A> вызывается метод).</span><span class="sxs-lookup"><span data-stu-id="086c0-342">The example evaluates three strings, "Apple", "Æble", and "AEble", using ordinal comparison and the conventions of the da-DK and en-US cultures (each of which is the default culture at the time the <xref:System.String.Compare%2A> method is called).</span></span> <span data-ttu-id="086c0-343">Поскольку датского языка воспринимает символ «Æ» отдельной буквой и сортирует его после «Z» в алфавите, строка «Æble» больше, чем «Apple».</span><span class="sxs-lookup"><span data-stu-id="086c0-343">Because the Danish language treats the character "Æ" as an individual letter and sorts it after "Z" in the alphabet, the string "Æble" is greater than "Apple".</span></span> <span data-ttu-id="086c0-344">Тем не менее «Æble» не считаются эквивалентными «AEble», поэтому «Æble» также больше, чем «AEble».</span><span class="sxs-lookup"><span data-stu-id="086c0-344">However, "Æble" is not considered equivalent to "AEble", so "Æble" is also greater than "AEble".</span></span> <span data-ttu-id="086c0-345">Отсутствует буква «Æ» en-US, но считает, что эквивалентно «AE», что объясняет, почему «Æble» меньше, чем «Apple», но равным «AEble».</span><span class="sxs-lookup"><span data-stu-id="086c0-345">The en-US culture doesn't include the letter"Æ" but treats it as equivalent to "AE", which explains why  "Æble" is less than "Apple" but equal to "AEble".</span></span> <span data-ttu-id="086c0-346">Порядковое сравнение, с другой стороны, считает, что «Apple», чтобы быть меньше, чем «Æble» и «Æble» должно быть больше «AEble».</span><span class="sxs-lookup"><span data-stu-id="086c0-346">Ordinal comparison, on the other hand, considers "Apple" to be less than "Æble", and "Æble" to be greater than "AEble".</span></span>  
  
 [!code-csharp[System.String.Class#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/compare4.cs#21)]
 [!code-vb[System.String.Class#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/compare4.vb#21)]  
  
 <span data-ttu-id="086c0-347">Используйте следующие общие рекомендации для выбора соответствующего метода сравнения сортировки или строки:</span><span class="sxs-lookup"><span data-stu-id="086c0-347">Use the following general guidelines to choose an appropriate sorting or string comparison method:</span></span>  
  
-   <span data-ttu-id="086c0-348">Если требуется строки, которые следует упорядочить зависимости от языка и региональных параметров пользователя, следует упорядочить их на основе соглашений текущих региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-348">If you want the strings to be ordered based on the user's culture, you should order them based on the conventions of the current culture.</span></span> <span data-ttu-id="086c0-349">При изменении языка и региональных параметров пользователя, порядок сортировки строк также изменится соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="086c0-349">If the user's culture changes, the order of sorted strings will also change accordingly.</span></span> <span data-ttu-id="086c0-350">Например приложение тезауруса следует всегда сортировки слов, в зависимости от языка и региональных параметров пользователя.</span><span class="sxs-lookup"><span data-stu-id="086c0-350">For example, a thesaurus application should always sort words based on the user's culture.</span></span>  
  
-   <span data-ttu-id="086c0-351">Если требуется строки, которые следует упорядочить зависимости от соглашений для конкретного языка и региональных параметров, следует упорядочить их, указав <xref:System.Globalization.CultureInfo> объект, представляющий этот язык для метода сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-351">If you want the strings to be ordered based on the conventions of a specific culture, you should order them by supplying a <xref:System.Globalization.CultureInfo> object that represents that culture to a comparison method.</span></span> <span data-ttu-id="086c0-352">Например в приложение, предназначенное для обучения определенного языка, вы можете строки заказываемого зависимости от соглашения одного из языков и региональных параметров, которые произносит этого языка.</span><span class="sxs-lookup"><span data-stu-id="086c0-352">For example, in an application designed to teach students a particular language, you want strings to be ordered based on the conventions of one of the cultures that speaks that language.</span></span>  
  
-   <span data-ttu-id="086c0-353">Если требуется, чтобы порядок строк остаются неизменными в разных языках, следует упорядочить их на основе соглашений инвариантного языка и региональных параметров или используют порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-353">If you want the order of strings to remain unchanged across cultures, you should order them based on the conventions of the invariant culture or use an ordinal comparison.</span></span> <span data-ttu-id="086c0-354">Например будет использовать порядковую сортировку для организации имен файлов, процессов, взаимные исключения или именованные каналы.</span><span class="sxs-lookup"><span data-stu-id="086c0-354">For example, you would use an ordinal sort to organize the names of files, processes, mutexes, or named pipes.</span></span>  
  
-   <span data-ttu-id="086c0-355">Для сравнения, который включает в себя решение безопасности (например, допустим ли имя пользователя), всегда следует выполнять порядковый номер проверка на равенство, вызвав перегрузку <xref:System.String.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-355">For a comparison that involves a security decision (such as whether a username is valid), you should always perform an ordinal test for equality by calling an overload of the <xref:System.String.Equals%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-356">Сортировка с учетом языка и региональных параметров и правил, используемых в сравнении строк регистр зависят от версии платформы .NET.</span><span class="sxs-lookup"><span data-stu-id="086c0-356">The culture-sensitive sorting and casing rules used in string comparison depend on the version of the .NET.</span></span> <span data-ttu-id="086c0-357">В .NET Framework 4.5 и более поздних версий на [!INCLUDE[win8](~/includes/win8-md.md)] операционной системы, сортировку, регистр, нормализации и сведений о символах Юникода соответствует стандарту Юникод 6.0.</span><span class="sxs-lookup"><span data-stu-id="086c0-357">In the .NET Framework 4.5 and later versions running on the [!INCLUDE[win8](~/includes/win8-md.md)] operating system, sorting, casing, normalization, and Unicode character information conforms to the Unicode 6.0 standard.</span></span> <span data-ttu-id="086c0-358">В других операционных системах Windows он соответствует стандартной Unicode 5.0.</span><span class="sxs-lookup"><span data-stu-id="086c0-358">On other Windows operating systems, it conforms to the Unicode 5.0 standard.</span></span> <span data-ttu-id="086c0-359">В .NET Core она зависит от версии стандарта Юникод, поддерживаемых операционной системы.</span><span class="sxs-lookup"><span data-stu-id="086c0-359">On .NET Core, it depends on the version of the Unicode Standard supported by the underlying operating system.</span></span> 
  
 <span data-ttu-id="086c0-360">Дополнительные сведения о word, строка и правила сортировки по порядковому номеру, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> раздела.</span><span class="sxs-lookup"><span data-stu-id="086c0-360">For more information about word, string, and ordinal sort rules, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> topic.</span></span> <span data-ttu-id="086c0-361">См. Дополнительные рекомендации по использованию каждого правила [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-361">For additional recommendations on when to use each rule, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="086c0-362">Как правило, вы не вызываете строковое сравнение методов, таких как <xref:System.String.Compare%2A> напрямую, чтобы определить порядок сортировки строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-362">Ordinarily, you don't call string comparison methods such as <xref:System.String.Compare%2A> directly to determine the sort order of strings.</span></span> <span data-ttu-id="086c0-363">Вместо этого вызываются методы сравнения, таких как методы сортировки <xref:System.Array.Sort%2A?displayProperty=nameWithType> или <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-363">Instead, comparison methods are called by sorting methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> or <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-364">В следующем примере выполняется четыре различных сортировки операций (с использованием текущего языка и региональных параметров, сортировки word с использованием инвариантных региональных параметров, порядковый номер сортировки и сортировка по строкам с использованием инвариантных региональных параметров сортировки word) без явного вызова метода сравнения строк, Несмотря на то, что их следует указывать тип сравнения для использования.</span><span class="sxs-lookup"><span data-stu-id="086c0-364">The following example performs four different sorting operations (word sort using the current culture, word sort using the invariant culture, ordinal sort, and string sort using the invariant culture) without explicitly calling a string comparison method, although they do specify the type of comparison to use.</span></span> <span data-ttu-id="086c0-365">Обратите внимание на то, что каждый тип сортировки создает уникальный упорядочение строк в его массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-365">Note that each type of sort produces a unique ordering of strings in its array.</span></span>  
  
 [!code-cpp[System.String.Class#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.compare2.cpp#12)]
 [!code-csharp[System.String.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/compare2.cs#12)]
 [!code-vb[System.String.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/compare2.vb#12)]  
  
> [!TIP]
>  <span data-ttu-id="086c0-366">На внутреннем уровне .NET использует ключи сортировки для поддержки сравнение сортировок, зависящих от строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-366">Internally, .NET uses sort keys to support culturally sensitive string comparison.</span></span> <span data-ttu-id="086c0-367">Каждый символ в строке дается несколько категорий весового значения сортировки, включая буквы, регистра и диакритических знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-367">Each character in a string is given several categories of sort weights, including alphabetic, case, and diacritic.</span></span> <span data-ttu-id="086c0-368">Ключ сортировки, представленный <xref:System.Globalization.SortKey> класса, предоставляет хранилищем этих значений для определенной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-368">A sort key, represented by the <xref:System.Globalization.SortKey> class, provides a repository of these weights for a particular string.</span></span> <span data-ttu-id="086c0-369">Если приложение выполняет большое количество поиска и сортировки тот же набор строк, может повысить его производительность, создавая и сохраняя ключи сортировки для всех строк, которые он использует.</span><span class="sxs-lookup"><span data-stu-id="086c0-369">If your app performs a large number of searching or sorting operations on the same set of strings, you can improve its performance by generating and storing sort keys for all the strings that it uses.</span></span> <span data-ttu-id="086c0-370">Если требуется операция сортировки или сравнения, ключи сортировки используется вместо строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-370">When a sort or comparison operation is required, you use the sort keys instead of the strings.</span></span> <span data-ttu-id="086c0-371">Дополнительные сведения см. в описании класса <xref:System.Globalization.SortKey>.</span><span class="sxs-lookup"><span data-stu-id="086c0-371">For more information, see the <xref:System.Globalization.SortKey> class.</span></span>  
  
 <span data-ttu-id="086c0-372">Если вы не укажете соглашение сравнения строки, методы сортировки например <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> выполнения сортировки с учетом языка и региональных параметров символов, с учетом регистра строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-372">If you don't specify a string comparison convention, sorting methods such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> perform a culture-sensitive, case-sensitive sort on strings.</span></span> <span data-ttu-id="086c0-373">В следующем примере показано, как изменение текущего языка и региональных параметров влияет на порядок сортировки строк в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-373">The following example illustrates how changing the current culture affects the order of sorted strings in an array.</span></span> <span data-ttu-id="086c0-374">Он создает массив из трех строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-374">It creates an array of three strings.</span></span> <span data-ttu-id="086c0-375">Во-первых, он задает `System.Threading.Thread.CurrentThread.CurrentCulture` значение en US и вызовы <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-375">First, it sets the `System.Threading.Thread.CurrentThread.CurrentCulture` property to en-US and calls the <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="086c0-376">Полученный порядок сортировки основан на правилах сортировки для английского языка (США).</span><span class="sxs-lookup"><span data-stu-id="086c0-376">The resulting sort order is based on sorting conventions for the English (United States) culture.</span></span> <span data-ttu-id="086c0-377">Далее в этом примере `System.Threading.Thread.CurrentThread.CurrentCulture` свойство da-DK и вызовы <xref:System.Array.Sort%2A?displayProperty=nameWithType> метод снова.</span><span class="sxs-lookup"><span data-stu-id="086c0-377">Next, the example sets the `System.Threading.Thread.CurrentThread.CurrentCulture` property to da-DK and calls the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method again.</span></span> <span data-ttu-id="086c0-378">Обратите внимание на то, как полученный порядок сортировки отличается от результатов en US, так как он использует правила сортировки для датский (Дания).</span><span class="sxs-lookup"><span data-stu-id="086c0-378">Notice how the resulting sort order differs from the en-US results because it uses the sorting conventions for Danish (Denmark).</span></span>  
  
 [!code-csharp[Conceptual.Strings.Comparing#3](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.strings.comparing/cs/sort1.cs#3)]
 [!code-vb[Conceptual.Strings.Comparing#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.strings.comparing/vb/sort1.vb#3)]  
  
> [!WARNING]
>  <span data-ttu-id="086c0-379">Если ваша основная цель в сравнении строк — чтобы определить, равны ли они, следует вызвать <xref:System.String.Equals%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-379">If your primary purpose in comparing strings is to determine whether they are equal, you should call the <xref:System.String.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="086c0-380">Как правило, следует использовать <xref:System.String.Equals%2A> для выполняют порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-380">Typically, you should use <xref:System.String.Equals%2A> to perform an ordinal comparison.</span></span> <span data-ttu-id="086c0-381"><xref:System.String.Compare%2A?displayProperty=nameWithType> Метод предназначен главным образом для сортировки строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-381">The <xref:System.String.Compare%2A?displayProperty=nameWithType> method is intended primarily to sort strings.</span></span>  
  
 <span data-ttu-id="086c0-382">Строка, методы поиска, такие как <xref:System.String.StartsWith%2A?displayProperty=nameWithType> и <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, также можно выполнять сравнение строк с учетом языка и региональных параметров или порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="086c0-382">String search methods, such as <xref:System.String.StartsWith%2A?displayProperty=nameWithType> and <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, also can perform culture-sensitive or ordinal string comparisons.</span></span> <span data-ttu-id="086c0-383">В следующем примере показано различия между сравнения порядкового номера, с учетом языка и региональных параметров, с использованием <xref:System.String.IndexOf%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-383">The following example illustrates the differences between ordinal and culture-sensitive comparisons using the <xref:System.String.IndexOf%2A> method.</span></span> <span data-ttu-id="086c0-384">Поиск зависящих от языка и региональных параметров, в котором текущий язык — Русский (Россия) считает, что подстрока «обозревателя объектов» в соответствии с лигатуры «œ».</span><span class="sxs-lookup"><span data-stu-id="086c0-384">A culture-sensitive search in which the current culture is English (United States) considers the substring "oe" to match the ligature "œ".</span></span> <span data-ttu-id="086c0-385">Поскольку мягкий перенос (U + 00AD) является символом нулевой ширины, поиск считает мягкий перенос эквивалентно <xref:System.String.Empty> и поиск совпадения в начале строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-385">Because a soft hyphen (U+00AD) is a zero-width character, the search treats the soft hyphen as equivalent to <xref:System.String.Empty> and finds a match at the beginning of the string.</span></span> <span data-ttu-id="086c0-386">Поиск по порядковым номерам, с другой стороны, не найден в любом случае.</span><span class="sxs-lookup"><span data-stu-id="086c0-386">An ordinal search, on the other hand, does not find a match in either case.</span></span>  
  
 [!code-cpp[System.String.Class#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.compare3.cpp#13)]
 [!code-csharp[System.String.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/compare3.cs#13)]
 [!code-vb[System.String.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/compare3.vb#13)]  
  
### <a name="searching-strings"></a><span data-ttu-id="086c0-387">Поиск строк</span><span class="sxs-lookup"><span data-stu-id="086c0-387">Searching Strings</span></span>  
 <span data-ttu-id="086c0-388">Строка, методы поиска, такие как <xref:System.String.StartsWith%2A?displayProperty=nameWithType> и <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, также можно выполнить от культуры или сравнения строк по порядковому номеру, чтобы определить, является ли символ или подстроку находится в указанной строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-388">String search methods, such as <xref:System.String.StartsWith%2A?displayProperty=nameWithType> and <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, also can perform culture-sensitive or ordinal string comparisons to determine whether a character or substring is found in a specified string.</span></span>  
  
 <span data-ttu-id="086c0-389">Методы поиска в <xref:System.String> класса, такие как найти отдельный символ, <xref:System.String.IndexOf%2A> метода или один из набора символов, таких как <xref:System.String.IndexOfAny%2A> метод, выполняет поиск по порядковым номерам.</span><span class="sxs-lookup"><span data-stu-id="086c0-389">The search methods in the <xref:System.String> class that search for an individual character, such as the <xref:System.String.IndexOf%2A> method, or one of a set of characters,   such as the <xref:System.String.IndexOfAny%2A> method, all perform an ordinal search.</span></span> <span data-ttu-id="086c0-390">Чтобы выполнить поиск с учетом языка и региональных параметров для символа, необходимо вызвать <xref:System.Globalization.CompareInfo> метода, такого как <xref:System.Globalization.CompareInfo.IndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType> или <xref:System.Globalization.CompareInfo.LastIndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-390">To perform a culture-sensitive search for a character, you must call a <xref:System.Globalization.CompareInfo> method such as <xref:System.Globalization.CompareInfo.IndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType> or <xref:System.Globalization.CompareInfo.LastIndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-391">Обратите внимание на то, что результаты поиска для символов, с помощью сравнения порядкового номера, с учетом языка и региональных параметров могут оказаться совершенно другими.</span><span class="sxs-lookup"><span data-stu-id="086c0-391">Note that the results of searching for a character using ordinal and culture-sensitive comparison can be very different.</span></span> <span data-ttu-id="086c0-392">Например, при поиске составной знак Юникода, например лигатура «?» (U + 00 C 6) может соответствовать любой из его компонентов в правильной последовательности, например «AE» экземпляров (U + 041U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-392">For example, a search for a precomposed Unicode character such as the ligature "Æ" (U+00C6) might match any occurrence of its components in the correct sequence, such as "AE" (U+041U+0045), depending on the culture.</span></span> <span data-ttu-id="086c0-393">В следующем примере показано различие между <xref:System.String.IndexOf%28System.Char%29?displayProperty=nameWithType> и <xref:System.Globalization.CompareInfo.IndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType> методы при поиске отдельный символ.</span><span class="sxs-lookup"><span data-stu-id="086c0-393">The following example illustrates the difference between the <xref:System.String.IndexOf%28System.Char%29?displayProperty=nameWithType> and <xref:System.Globalization.CompareInfo.IndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType> methods when searching for an individual character.</span></span> <span data-ttu-id="086c0-394">Лигатура «?» (U + 00E6) находится в строке «воздушный» при использовании правил языка en US, но не в том случае, когда с помощью соглашений культуры da-DK или при выполнении порядкового сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-394">The ligature "æ" (U+00E6) is found in the string "aerial" when using the conventions of the en-US culture, but not when using the conventions of the da-DK culture or when performing an ordinal comparison.</span></span>  
  
 [!code-csharp[System.String.Class#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/search1.cs#22)]
 [!code-vb[System.String.Class#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/search1.vb#22)]  
  
 <span data-ttu-id="086c0-395">С другой стороны <xref:System.String> методы, найдите строку, а не символ выполнения поиска с учетом языка и региональных параметров, если параметры поиска не заданы явным образом с помощью параметра типа класса <xref:System.StringComparison>.</span><span class="sxs-lookup"><span data-stu-id="086c0-395">On the other hand, <xref:System.String> class methods that search for a string rather than a character perform a culture-sensitive search if search options are not explicitly specified by a parameter of type <xref:System.StringComparison>.</span></span> <span data-ttu-id="086c0-396">Единственное исключение — <xref:System.String.Contains%2A>, который выполняет поиск по порядковым номерам.</span><span class="sxs-lookup"><span data-stu-id="086c0-396">The sole exception is <xref:System.String.Contains%2A>, which performs an ordinal search.</span></span>  
  
<a name="equality"></a>   
### <a name="testing-for-equality"></a><span data-ttu-id="086c0-397">Проверка на равенство</span><span class="sxs-lookup"><span data-stu-id="086c0-397">Testing for equality</span></span>  
 <span data-ttu-id="086c0-398">Используйте <xref:System.String.Compare%2A?displayProperty=nameWithType> метод, чтобы определить связь между двумя строками в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-398">Use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method to determine the relationship of two strings in the sort order.</span></span> <span data-ttu-id="086c0-399">Как правило это операция с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-399">Typically, this is a culture-sensitive operation.</span></span> <span data-ttu-id="086c0-400">Напротив, вызовите <xref:System.String.Equals%2A?displayProperty=nameWithType> метод для проверки на равенство.</span><span class="sxs-lookup"><span data-stu-id="086c0-400">In contrast, call the <xref:System.String.Equals%2A?displayProperty=nameWithType> method to test for equality.</span></span> <span data-ttu-id="086c0-401">Так как проверка на равенство обычно сравнивает входные данные пользователя с некоторых известных строка, такая как допустимое имя пользователя, пароль или путь файловой системы, это обычно порядковые операции.</span><span class="sxs-lookup"><span data-stu-id="086c0-401">Because the test for equality usually compares user input with some known string, such as a valid user name, a password, or a file system path, it is typically an ordinal operation.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="086c0-402">Возможно, для проверки на равенство, вызвав <xref:System.String.Compare%2A?displayProperty=nameWithType> метод и определить, является ли возвращаемое значение ноль.</span><span class="sxs-lookup"><span data-stu-id="086c0-402">It is possible to test for equality by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method and determining whether the return value is zero.</span></span> <span data-ttu-id="086c0-403">Тем не менее это не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="086c0-403">However, this practice is not recommended.</span></span> <span data-ttu-id="086c0-404">Чтобы определить, равны ли две строки, следует вызвать один из перегруженных версий <xref:System.String.Equals%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-404">To determine whether two strings are equal, you should call one of the overloads of the <xref:System.String.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="086c0-405">Предпочтительный перегрузки для вызова является либо экземпляром <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> метод или статический <xref:System.String.Equals%28System.String%2CSystem.String%2CSystem.StringComparison%29> метод, так как оба метода включают <xref:System.StringComparison?displayProperty=nameWithType> параметр, который явно указывает тип сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-405">The preferred overload to call is either the instance <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> method or the static <xref:System.String.Equals%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, because both methods include a <xref:System.StringComparison?displayProperty=nameWithType> parameter that explicitly specifies the type of comparison.</span></span>  
  
 <span data-ttu-id="086c0-406">В следующем примере показано опасности выполнения учитывающего культуру сравнения на равенство, когда один из них следует использовать вместо этого порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="086c0-406">The following example illustrates the danger of performing a culture-sensitive comparison for equality when an ordinal one should be used instead.</span></span> <span data-ttu-id="086c0-407">В этом случае назначение кода — запретить доступ к файловой системе с URL-адресов, которые начинаются с «FILE://» или «file://», выполнив сравнение без учета регистра, начиная со строки «FILE://» URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="086c0-407">In this case, the intent of the code is to prohibit file system access from URLs that begin with "FILE://" or "file://" by performing a case-insensitive comparison of the beginning of a URL with the string "FILE://".</span></span> <span data-ttu-id="086c0-408">Тем не менее если сравнение с учетом языка и региональных параметров выполняется с помощью турецкий (Турция) языка и региональных параметров в URL-адрес, который начинается с «file://», сравнение на предмет равенства завершается ошибкой, так как эквивалент турецкого регистре нижний регистр «i» — «i» вместо «I».</span><span class="sxs-lookup"><span data-stu-id="086c0-408">However, if a culture-sensitive comparison is performed using the Turkish (Turkey) culture on a URL that begins with "file://", the comparison for equality fails, because the Turkish uppercase equivalent of the lowercase "i" is "İ" instead of "I".</span></span> <span data-ttu-id="086c0-409">Таким образом случайно разрешен доступ к файловой системе.</span><span class="sxs-lookup"><span data-stu-id="086c0-409">As a result, file system access is inadvertently permitted.</span></span> <span data-ttu-id="086c0-410">С другой стороны Если выполняется порядковое сравнение, сравнение на равенство успешно и запрещен доступ к файловой системе.</span><span class="sxs-lookup"><span data-stu-id="086c0-410">On the other hand, if an ordinal comparison is performed, the comparison for equality succeeds, and file system access is denied.</span></span>  
  
 [!code-cpp[System.String.Class#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.equals.cpp#11)]
 [!code-csharp[System.String.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/equality1.cs#11)]
 [!code-vb[System.String.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/equality1.vb#11)]  
  
<a name="Normalization"></a>   
## <a name="normalization"></a><span data-ttu-id="086c0-411">Нормализация</span><span class="sxs-lookup"><span data-stu-id="086c0-411">Normalization</span></span>  
 <span data-ttu-id="086c0-412">Некоторые символы Юникода, имеют несколько представлений.</span><span class="sxs-lookup"><span data-stu-id="086c0-412">Some Unicode characters have multiple representations.</span></span> <span data-ttu-id="086c0-413">Например любой из следующих кодовых точек может представлять имя символа «ắ»:</span><span class="sxs-lookup"><span data-stu-id="086c0-413">For example, any of the following code points can represent the letter "ắ":</span></span>  
  
-   <span data-ttu-id="086c0-414">U+1EAF</span><span class="sxs-lookup"><span data-stu-id="086c0-414">U+1EAF</span></span>  
  
-   <span data-ttu-id="086c0-415">U+0103 U+0301</span><span class="sxs-lookup"><span data-stu-id="086c0-415">U+0103 U+0301</span></span>  
  
-   <span data-ttu-id="086c0-416">U+0061 U+0306 U+0301</span><span class="sxs-lookup"><span data-stu-id="086c0-416">U+0061 U+0306 U+0301</span></span>  
  
 <span data-ttu-id="086c0-417">Несколько представлений для одного символа усложнить поиск, сортировка, сопоставления и других операций со строками.</span><span class="sxs-lookup"><span data-stu-id="086c0-417">Multiple representations for a single character complicate searching, sorting, matching, and other string operations.</span></span>  
  
 <span data-ttu-id="086c0-418">В стандарте Юникод определяет процесс, называемый нормализация, которая возвращает одно двоичное представление символа Юникода для любого из его эквивалентных представлений.</span><span class="sxs-lookup"><span data-stu-id="086c0-418">The Unicode standard defines a process called normalization that returns one binary representation of a Unicode character for any of its equivalent binary representations.</span></span> <span data-ttu-id="086c0-419">Нормализация можно использовать несколько алгоритмов, вызывается нормализации, появившиеся формы разные правила.</span><span class="sxs-lookup"><span data-stu-id="086c0-419">Normalization can use several algorithms, called normalization forms, that follow different rules.</span></span> <span data-ttu-id="086c0-420">Платформа .NET поддерживает формы нормализации Юникода C, D, KC и KD.</span><span class="sxs-lookup"><span data-stu-id="086c0-420">.NET supports Unicode normalization forms C, D, KC, and KD.</span></span> <span data-ttu-id="086c0-421">Когда строки были нормализованы по той же форме нормализации, их можно проверять с помощью порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-421">When strings have been normalized to the same normalization form, they can be compared by using ordinal comparison.</span></span>  
  
 <span data-ttu-id="086c0-422">Порядковое сравнение — это двоичное сравнение скалярного значения Юникода, из соответствующего <xref:System.Char> объектов в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-422">An ordinal comparison is a binary comparison of the Unicode scalar value of corresponding <xref:System.Char> objects in each string.</span></span> <span data-ttu-id="086c0-423"><xref:System.String> Содержит ряд методов, которые можно выполнить порядковое сравнение, включая следующие:</span><span class="sxs-lookup"><span data-stu-id="086c0-423">The <xref:System.String> class includes a number of methods that can perform an ordinal comparison, including the following:</span></span>  
  
-   <span data-ttu-id="086c0-424">Любой перегрузки <xref:System.String.Compare%2A>, <xref:System.String.Equals%2A>, <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, <xref:System.String.IndexOf%2A>, и <xref:System.String.LastIndexOf%2A> методы, которые включает в себя <xref:System.StringComparison> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-424">Any overload of the <xref:System.String.Compare%2A>, <xref:System.String.Equals%2A>, <xref:System.String.StartsWith%2A>,  <xref:System.String.EndsWith%2A>, <xref:System.String.IndexOf%2A>, and <xref:System.String.LastIndexOf%2A> methods that includes a <xref:System.StringComparison> parameter.</span></span> <span data-ttu-id="086c0-425">Этот метод выполняет порядковое сравнение, если указать значение <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> или <xref:System.StringComparison.OrdinalIgnoreCase> для этого параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-425">The method performs an ordinal comparison if you supply a value of <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase> for this parameter.</span></span>  
  
-   <span data-ttu-id="086c0-426">Перегрузки <xref:System.String.CompareOrdinal%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-426">The overloads of the <xref:System.String.CompareOrdinal%2A> method.</span></span>  
  
-   <span data-ttu-id="086c0-427">Методы, которые используют порядковое сравнение по умолчанию, такие как <xref:System.String.Contains%2A>, <xref:System.String.Replace%2A>, и <xref:System.String.Split%2A>.</span><span class="sxs-lookup"><span data-stu-id="086c0-427">Methods that use ordinal comparison by default, such as <xref:System.String.Contains%2A>, <xref:System.String.Replace%2A>, and <xref:System.String.Split%2A>.</span></span>  
  
-   <span data-ttu-id="086c0-428">Методы, которые выполняют поиск <xref:System.Char> значение или для элементов в <xref:System.Char> массива в экземпляре строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-428">Methods that search for a <xref:System.Char> value or for the elements in a <xref:System.Char> array in a string instance.</span></span> <span data-ttu-id="086c0-429">Такие методы включают <xref:System.String.IndexOf%28System.Char%29> и <xref:System.String.Split%28System.Char%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="086c0-429">Such methods include <xref:System.String.IndexOf%28System.Char%29> and <xref:System.String.Split%28System.Char%5B%5D%29>.</span></span>  
  
 <span data-ttu-id="086c0-430">Можно определить нормализуется ли строка в форме нормализации Юникода C, вызвав <xref:System.String.IsNormalized?displayProperty=nameWithType> метод, либо вызвать <xref:System.String.IsNormalized%28System.Text.NormalizationForm%29?displayProperty=nameWithType> метод, чтобы определить, является ли строка нормализованным в форму нормализации, указанной.</span><span class="sxs-lookup"><span data-stu-id="086c0-430">You can determine whether a string is normalized to normalization form C by calling the <xref:System.String.IsNormalized?displayProperty=nameWithType> method, or you can call the <xref:System.String.IsNormalized%28System.Text.NormalizationForm%29?displayProperty=nameWithType> method to determine whether a string is normalized to a specified normalization form.</span></span> <span data-ttu-id="086c0-431">Можно также вызвать <xref:System.String.Normalize?displayProperty=nameWithType> можно вызвать метод для преобразования строки в форме нормализации Юникода C, или <xref:System.String.Normalize%28System.Text.NormalizationForm%29?displayProperty=nameWithType> метод для преобразования строки в указанной форму.</span><span class="sxs-lookup"><span data-stu-id="086c0-431">You can also call the <xref:System.String.Normalize?displayProperty=nameWithType> method to convert a string to normalization form C, or you can call the <xref:System.String.Normalize%28System.Text.NormalizationForm%29?displayProperty=nameWithType> method to convert a string to a specified normalization form.</span></span> <span data-ttu-id="086c0-432">Пошаговые инструкции по нормализация и сравнения строк см. в разделе <xref:System.String.Normalize> и <xref:System.String.Normalize%28System.Text.NormalizationForm%29> методы.</span><span class="sxs-lookup"><span data-stu-id="086c0-432">For step-by-step information about normalizing and comparing strings, see the <xref:System.String.Normalize> and <xref:System.String.Normalize%28System.Text.NormalizationForm%29> methods.</span></span>  
  
 <span data-ttu-id="086c0-433">Следующий простой пример иллюстрирует нормализацией строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-433">The following simple example illustrates string normalization.</span></span> <span data-ttu-id="086c0-434">Он определяет букву «ố» тремя разными способами в трех разных строк и использует порядковое сравнение на предмет равенства, чтобы определить, что каждая строка отличается от других двух строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-434">It defines the letter "ố" in three different ways in three different strings, and uses an ordinal comparison for equality to determine that each string differs from the other two strings.</span></span> <span data-ttu-id="086c0-435">Затем преобразует каждую строку в формах поддерживаемых нормализации и снова выполняет порядковое сравнение каждой строки в форме нормализации, указанной.</span><span class="sxs-lookup"><span data-stu-id="086c0-435">It then converts each string to the supported normalization forms, and again performs an ordinal comparison of each string in a specified normalization form.</span></span> <span data-ttu-id="086c0-436">В каждом случае второй тест для проверки на равенство показано, что строки равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-436">In each case, the second test for equality shows that the strings are equal.</span></span>  
  
 [!code-cpp[System.String.Class#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.normalize.cpp#14)]
 [!code-csharp[System.String.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/normalize1.cs#14)]
 [!code-vb[System.String.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/normalize1.vb#14)]  
  
 <span data-ttu-id="086c0-437">Дополнительные сведения о нормализации и формы нормализации, см. в разделе <xref:System.Text.NormalizationForm?displayProperty=nameWithType>, а также [Unicode Standard Annex #15: Формы нормализации Юникода](https://unicode.org/reports/tr15/) и [нормализация часто задаваемые вопросы о](https://www.unicode.org/faq/normalization.html) кодовые веб-сайта.</span><span class="sxs-lookup"><span data-stu-id="086c0-437">For more information about normalization and normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>, as well as [Unicode Standard Annex #15: Unicode Normalization Forms](https://unicode.org/reports/tr15/) and the [Normalization FAQ](https://www.unicode.org/faq/normalization.html) on the unicode.org website.</span></span>  
  
<a name="ByCategory"></a>   
## <a name="string-operations-by-category"></a><span data-ttu-id="086c0-438">Операции со строками по категориям</span><span class="sxs-lookup"><span data-stu-id="086c0-438">String operations by category</span></span>  
 <span data-ttu-id="086c0-439"><xref:System.String> Класс предоставляет члены для сравнения строк, проверка строк на равенство, поиска символов или подстроки в строке, изменения строки, извлечение подстрок из строки, объединения строк, форматирование значений, копирования строки, и Нормализация строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-439">The <xref:System.String> class provides members for comparing strings, testing strings for equality, finding characters or substrings in a string, modifying a string, extracting substrings from a string, combining strings, formatting values, copying a string, and normalizing a string.</span></span>  
  
### <a name="comparing-strings"></a><span data-ttu-id="086c0-440">Сравнение строк</span><span class="sxs-lookup"><span data-stu-id="086c0-440">Comparing strings</span></span>  
 <span data-ttu-id="086c0-441">Можно сравнивать строки, чтобы определить их относительное положение в порядке сортировки, с помощью следующих <xref:System.String> методы:</span><span class="sxs-lookup"><span data-stu-id="086c0-441">You can compare strings to determine their relative position in the sort order by using the following <xref:System.String> methods:</span></span>  
  
-   <span data-ttu-id="086c0-442"><xref:System.String.Compare%2A> Возвращает целое число, показывающее связь между одной строки в строку второй в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-442"><xref:System.String.Compare%2A> returns an integer that indicates the relationship of one string to a second string in the sort order.</span></span>  
  
-   <span data-ttu-id="086c0-443"><xref:System.String.CompareOrdinal%2A> Возвращает целое число, показывающее связь между одной строки на второй строку на основе сравнения кодовых позиций.</span><span class="sxs-lookup"><span data-stu-id="086c0-443"><xref:System.String.CompareOrdinal%2A> returns an integer that indicates the relationship of one string to a second string based on a comparison of their code points.</span></span>  
  
-   <span data-ttu-id="086c0-444"><xref:System.String.CompareTo%2A> Возвращает целое число, показывающее связь между текущего экземпляра строки в строку второй в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-444"><xref:System.String.CompareTo%2A> returns an integer that indicates the relationship of the current string instance to a second string in the sort order.</span></span> <span data-ttu-id="086c0-445"><xref:System.String.CompareTo%28System.String%29> Предоставляет метод <xref:System.IComparable> и <xref:System.IComparable%601> реализации для <xref:System.String> класса.</span><span class="sxs-lookup"><span data-stu-id="086c0-445">The <xref:System.String.CompareTo%28System.String%29> method provides the <xref:System.IComparable> and <xref:System.IComparable%601> implementations for the <xref:System.String> class.</span></span>  
  
### <a name="testing-strings-for-equality"></a><span data-ttu-id="086c0-446">Проверка строк на равенство</span><span class="sxs-lookup"><span data-stu-id="086c0-446">Testing strings for equality</span></span>  
 <span data-ttu-id="086c0-447">Вы вызываете <xref:System.String.Equals%2A> метод, чтобы определить, равны ли две строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-447">You call the <xref:System.String.Equals%2A> method to determine whether two strings are equal.</span></span> <span data-ttu-id="086c0-448">Экземпляр <xref:System.String.Equals%28System.String%2CSystem.String%2CSystem.StringComparison%29> и статических <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> перегрузки позволяют задать ли сравнение с учетом языка и региональных параметров символов или порядковый номер, и считается или учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-448">The instance <xref:System.String.Equals%28System.String%2CSystem.String%2CSystem.StringComparison%29> and the static <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> overloads let you specify whether the comparison is culture-sensitive or ordinal, and whether case is considered or ignored.</span></span> <span data-ttu-id="086c0-449">Является порядковым большинство тестов на предмет равенства и сравнения на равенство, которые определяют доступ к ресурсу системы (например, объект файловой системы) всегда должны быть порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="086c0-449">Most tests for equality are ordinal, and comparisons for equality that determine access to a system resource (such as a file system object) should always be ordinal.</span></span>  
  
### <a name="finding-characters-in-a-string"></a><span data-ttu-id="086c0-450">Поиск символов в строке</span><span class="sxs-lookup"><span data-stu-id="086c0-450">Finding characters in a string</span></span>  
 <span data-ttu-id="086c0-451"><xref:System.String> Класс включает два вида методов поиска:</span><span class="sxs-lookup"><span data-stu-id="086c0-451">The <xref:System.String> class includes two kinds of search methods:</span></span>  
  
-   <span data-ttu-id="086c0-452">Методы, возвращающие <xref:System.Boolean> значение, указывающее, присутствует ли в экземпляре строка определенной подстрокой.</span><span class="sxs-lookup"><span data-stu-id="086c0-452">Methods that return a <xref:System.Boolean> value to indicate whether a particular substring is present in a string instance.</span></span> <span data-ttu-id="086c0-453">К ним относятся <xref:System.String.Contains%2A>, <xref:System.String.EndsWith%2A>, и <xref:System.String.StartsWith%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="086c0-453">These include the <xref:System.String.Contains%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.StartsWith%2A> methods.</span></span>  
  
-   <span data-ttu-id="086c0-454">Методы, которые указывают Начальная позиция подстроки в экземпляре строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-454">Methods that indicate the starting position of a substring in a string instance.</span></span> <span data-ttu-id="086c0-455">К ним относятся <xref:System.String.IndexOf%2A>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.LastIndexOf%2A>, и <xref:System.String.LastIndexOfAny%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="086c0-455">These include the <xref:System.String.IndexOf%2A>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.LastIndexOf%2A>, and <xref:System.String.LastIndexOfAny%2A> methods.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="086c0-456">Если вам требуется выполнить поиск строки определенный шаблон, а не конкретной подстроки, следует использовать регулярные выражения.</span><span class="sxs-lookup"><span data-stu-id="086c0-456">If you want to search a string for a particular pattern rather than a specific substring, you should use regular expressions.</span></span> <span data-ttu-id="086c0-457">Дополнительные сведения см. в разделе [регулярных выражений .NET](~/docs/standard/base-types/regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-457">For more information, see [.NET Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
### <a name="modifying-a-string"></a><span data-ttu-id="086c0-458">Изменения строки</span><span class="sxs-lookup"><span data-stu-id="086c0-458">Modifying a string</span></span>  
 <span data-ttu-id="086c0-459"><xref:System.String> Класс включает следующие методы, которые могут изменить значение строки:</span><span class="sxs-lookup"><span data-stu-id="086c0-459">The <xref:System.String> class includes the following methods that appear to modify the value of a string:</span></span>  
  
-   <span data-ttu-id="086c0-460"><xref:System.String.Insert%2A> Вставляет строку в текущую <xref:System.String> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-460"><xref:System.String.Insert%2A> inserts a string into the current <xref:System.String> instance.</span></span>  
  
-   <span data-ttu-id="086c0-461"><xref:System.String.PadLeft%2A> Вставляет один или несколько вхождений указанный символ в начале строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-461"><xref:System.String.PadLeft%2A> inserts one or more occurrences of a specified character at the beginning of a string.</span></span>  
  
-   <span data-ttu-id="086c0-462"><xref:System.String.PadRight%2A> Вставляет один или несколько вхождений указанного символа в конце строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-462"><xref:System.String.PadRight%2A> inserts one or more occurrences of a specified character at the end of a string.</span></span>  
  
-   <span data-ttu-id="086c0-463"><xref:System.String.Remove%2A> Удаляет из текущего подстроки <xref:System.String> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-463"><xref:System.String.Remove%2A> deletes a substring from the current <xref:System.String> instance.</span></span>  
  
-   <span data-ttu-id="086c0-464"><xref:System.String.Replace%2A> заменяет подстроку другой подстрокой в текущем <xref:System.String> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-464"><xref:System.String.Replace%2A> replaces a substring with another substring in the current <xref:System.String> instance.</span></span>  
  
-   <span data-ttu-id="086c0-465"><xref:System.String.ToLower%2A> и <xref:System.String.ToLowerInvariant%2A> преобразования всех символов в строке в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-465"><xref:System.String.ToLower%2A> and <xref:System.String.ToLowerInvariant%2A> convert all the characters in a string to lowercase.</span></span>  
  
-   <span data-ttu-id="086c0-466"><xref:System.String.ToUpper%2A> и <xref:System.String.ToUpperInvariant%2A> преобразования всех символов в строке в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-466"><xref:System.String.ToUpper%2A> and <xref:System.String.ToUpperInvariant%2A> convert all the characters in a string to uppercase.</span></span>  
  
-   <span data-ttu-id="086c0-467"><xref:System.String.Trim%2A> Удаляет все вхождения знака в начале и конце строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-467"><xref:System.String.Trim%2A> removes all occurrences of a character from the beginning and end of a string.</span></span>  
  
-   <span data-ttu-id="086c0-468"><xref:System.String.TrimEnd%2A> Удаляет все вхождения знака в конце строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-468"><xref:System.String.TrimEnd%2A> removes all occurrences of a character from the end of a string.</span></span>  
  
-   <span data-ttu-id="086c0-469"><xref:System.String.TrimStart%2A> Удаляет все вхождения знака с начала строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-469"><xref:System.String.TrimStart%2A> removes all occurrences of a character from the beginning of a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086c0-470">Все методы изменения строк возвращают новый <xref:System.String> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-470">All string modification methods return a new <xref:System.String> object.</span></span> <span data-ttu-id="086c0-471">Они не изменяют значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-471">They don't modify the value of the current instance.</span></span>  
  
### <a name="extracting-substrings-from-a-string"></a><span data-ttu-id="086c0-472">Извлечение подстрок из строки</span><span class="sxs-lookup"><span data-stu-id="086c0-472">Extracting substrings from a string</span></span>  
 <span data-ttu-id="086c0-473"><xref:System.String.Split%2A?displayProperty=nameWithType> Метод разделяет одну строку на несколько строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-473">The <xref:System.String.Split%2A?displayProperty=nameWithType> method separates a single string into multiple strings.</span></span> <span data-ttu-id="086c0-474">Перегрузки метода позволяют указать несколько разделителей, чтобы определить максимальное число подстрок, метод извлекает и для определения, включены ли пустые строки (которые происходят, когда разделители являются смежными) между возвращенные строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-474">Overloads of the method allow you to specify multiple delimiters, to determine the maximum number of substrings that the method extracts, and to determine whether empty strings (which occur when delimiters are adjacent) are included among the returned strings.</span></span>  
  
### <a name="combining-strings"></a><span data-ttu-id="086c0-475">Объединение строк</span><span class="sxs-lookup"><span data-stu-id="086c0-475">Combining strings</span></span>  
 <span data-ttu-id="086c0-476">Следующие <xref:System.String> методы могут использоваться для объединения строк:</span><span class="sxs-lookup"><span data-stu-id="086c0-476">The following <xref:System.String> methods can be used for string concatenation:</span></span>  
  
-   <span data-ttu-id="086c0-477"><xref:System.String.Concat%2A> объединяет один или несколько подстрок в одну строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-477"><xref:System.String.Concat%2A> combines one or more substrings into a single string.</span></span>  
  
-   <span data-ttu-id="086c0-478"><xref:System.String.Join%2A> объединяет один или несколько подстрок в один элемент и добавляет разделитель между каждой подстроке.</span><span class="sxs-lookup"><span data-stu-id="086c0-478"><xref:System.String.Join%2A> concatenates one or more substrings into a single element and adds a separator between each substring.</span></span>  
  
### <a name="formatting-values"></a><span data-ttu-id="086c0-479">Форматирование значений</span><span class="sxs-lookup"><span data-stu-id="086c0-479">Formatting values</span></span>  
 <span data-ttu-id="086c0-480"><xref:System.String.Format%2A?displayProperty=nameWithType> Метод использует составное форматирование, чтобы заменить один или несколько заполнителей в строке строковым представлением некоторые объект или значение.</span><span class="sxs-lookup"><span data-stu-id="086c0-480">The <xref:System.String.Format%2A?displayProperty=nameWithType> method uses the composite formatting feature to replace one or more placeholders in a string with the string representation of some object or value.</span></span> <span data-ttu-id="086c0-481"><xref:System.String.Format%2A> Метод часто используется для следующих целей:</span><span class="sxs-lookup"><span data-stu-id="086c0-481">The <xref:System.String.Format%2A> method is often used to do the following:</span></span>  
  
-   <span data-ttu-id="086c0-482">Для внедрения строковое представление числового значения в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-482">To embed the string representation of a numeric value in a string.</span></span>  
  
-   <span data-ttu-id="086c0-483">Для внедрения строковое представление значения даты и времени в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-483">To embed the string representation of a date and time value in a string.</span></span>  
  
-   <span data-ttu-id="086c0-484">Для внедрения строковое представление значения перечисления в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-484">To embed the string representation of an enumeration value in a string.</span></span>  
  
-   <span data-ttu-id="086c0-485">Для внедрения строковым представлением некоторый объект, который поддерживает <xref:System.IFormattable> интерфейс в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-485">To embed the string representation of some object that supports the <xref:System.IFormattable> interface in a string.</span></span>  
  
-   <span data-ttu-id="086c0-486">К правому краю или по ширине слева подстроки в поле в строку большего размера.</span><span class="sxs-lookup"><span data-stu-id="086c0-486">To right-justify or left-justify a substring in a field within a larger string.</span></span>  
  
 <span data-ttu-id="086c0-487">Подробные сведения о форматировании операций и примеры см. в разделе <xref:System.String.Format%2A> перегружать Сводка.</span><span class="sxs-lookup"><span data-stu-id="086c0-487">For detailed information about formatting operations and examples, see the <xref:System.String.Format%2A> overload summary.</span></span>  
  
### <a name="copying-a-string"></a><span data-ttu-id="086c0-488">Копирование строки</span><span class="sxs-lookup"><span data-stu-id="086c0-488">Copying a string</span></span>  
 <span data-ttu-id="086c0-489">Вы можете вызвать следующий <xref:System.String> методы, чтобы скопировать строки:</span><span class="sxs-lookup"><span data-stu-id="086c0-489">You can call the following <xref:System.String> methods to make a copy of a string:</span></span>  
  
-   <span data-ttu-id="086c0-490"><xref:System.String.Clone%2A> Возвращает ссылку на существующий <xref:System.String> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-490"><xref:System.String.Clone%2A> returns a reference to an existing <xref:System.String> object.</span></span>  
  
-   <span data-ttu-id="086c0-491"><xref:System.String.Copy%2A> Создает копию существующей строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-491"><xref:System.String.Copy%2A> creates a copy of an existing string.</span></span>  
  
-   <span data-ttu-id="086c0-492"><xref:System.String.CopyTo%2A> копирует часть строки в массив символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-492"><xref:System.String.CopyTo%2A> copies a portion of a string to a character array.</span></span>  
  
### <a name="normalizing-a-string"></a><span data-ttu-id="086c0-493">Нормализация строки</span><span class="sxs-lookup"><span data-stu-id="086c0-493">Normalizing a string</span></span>  
 <span data-ttu-id="086c0-494">В кодировке Юникод один символ может иметь несколько кодовых точек.</span><span class="sxs-lookup"><span data-stu-id="086c0-494">In Unicode, a single character can have multiple code points.</span></span> <span data-ttu-id="086c0-495">Нормализация преобразует эти эквивалентные им знаки в том же двоичное представление.</span><span class="sxs-lookup"><span data-stu-id="086c0-495">Normalization converts these equivalent characters into the same binary representation.</span></span> <span data-ttu-id="086c0-496"><xref:System.String.Normalize%2A?displayProperty=nameWithType> Метод выполняет, нормализация и <xref:System.String.IsNormalized%2A?displayProperty=nameWithType> метод определяет, является ли строка нормализованным.</span><span class="sxs-lookup"><span data-stu-id="086c0-496">The <xref:System.String.Normalize%2A?displayProperty=nameWithType> method performs the normalization, and the <xref:System.String.IsNormalized%2A?displayProperty=nameWithType> method determines whether a string is normalized.</span></span>  
  
 <span data-ttu-id="086c0-497">Дополнительные сведения и пример см. в разделе [нормализации](#Normalization) подразделе данного раздела.</span><span class="sxs-lookup"><span data-stu-id="086c0-497">For more information and an example, see the [Normalization](#Normalization) section earlier in this topic.</span></span>  

 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/download/details.aspx?id=10921"><span data-ttu-id="086c0-498">Сортировка таблицы вес для Windows операционных систем</span><span class="sxs-lookup"><span data-stu-id="086c0-498">Sorting Weight Tables for Windows operating systems</span></span></related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt"><span data-ttu-id="086c0-499">Таблица по умолчанию Юникода параметры сортировки элемента, для Linux и macOS</span><span class="sxs-lookup"><span data-stu-id="086c0-499">Default Unicode Collation Element Table, for Linux and macOS</span></span></related>
    <threadsafe><span data-ttu-id="086c0-500">Данный тип потокобезопасен.</span><span class="sxs-lookup"><span data-stu-id="086c0-500">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.ICloneable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="086c0-501">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="086c0-501">Formatting Types in .NET</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7"><span data-ttu-id="086c0-502">Рекомендации по использованию строк в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="086c0-502">Best Practices for Using Strings in the .NET Framework</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-503">Инициализирует новый экземпляр класса <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-503">Initializes a new instance of the <see cref="T:System.String" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-504">Содержание</span><span class="sxs-lookup"><span data-stu-id="086c0-504">In this section:</span></span>  
  
 <span data-ttu-id="086c0-505">[Синтаксис перегруженный конструктор](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="086c0-505">[Overloaded constructor syntax](#Syntax) </span></span>  
 <span data-ttu-id="086c0-506">[Параметры](#Params) </span><span class="sxs-lookup"><span data-stu-id="086c0-506">[Parameters](#Params) </span></span>  
 <span data-ttu-id="086c0-507">[Исключения](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="086c0-507">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="086c0-508">[Какой метод следует вызывать?](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="086c0-508">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="086c0-509">[Создание строк](#Creating_Strings) </span><span class="sxs-lookup"><span data-stu-id="086c0-509">[Creating strings](#Creating_Strings) </span></span>  
 <span data-ttu-id="086c0-510">[Обработка повторяющихся строк](#Repetitive) </span><span class="sxs-lookup"><span data-stu-id="086c0-510">[Handling repetitive strings](#Repetitive) </span></span>  
 <span data-ttu-id="086c0-511">Примеры создания экземпляров строк:</span><span class="sxs-lookup"><span data-stu-id="086c0-511">Examples of instantiating strings:</span></span>   
 [<span data-ttu-id="086c0-512">С помощью присваивание строк</span><span class="sxs-lookup"><span data-stu-id="086c0-512">Using string assignment</span></span>](#Ctor1_Example)  
 [<span data-ttu-id="086c0-513">С помощью массива символов</span><span class="sxs-lookup"><span data-stu-id="086c0-513">Using a character array</span></span>](#Ctor2_Example)  
 [<span data-ttu-id="086c0-514">Используя часть массив символов и повторение один символ</span><span class="sxs-lookup"><span data-stu-id="086c0-514">Using a portion of a character array and repeating a single character</span></span>](#Ctor3_Example)  
 [<span data-ttu-id="086c0-515">Используя указатель на массив символов</span><span class="sxs-lookup"><span data-stu-id="086c0-515">Using a pointer to a character array</span></span>](#Ctor4_Example)  
 [<span data-ttu-id="086c0-516">С помощью указателя и диапазона массива</span><span class="sxs-lookup"><span data-stu-id="086c0-516">Using  a pointer and a range of an array</span></span>](#Ctor5_Example)  
 [<span data-ttu-id="086c0-517">Используя указатель на массив байтов со знаком</span><span class="sxs-lookup"><span data-stu-id="086c0-517">Using a pointer to a signed byte array</span></span>](#Ctor6_Example)  
[<span data-ttu-id="086c0-518">Сведения о версии</span><span class="sxs-lookup"><span data-stu-id="086c0-518">Version information</span></span>](#Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-constructor-syntax"></a><span data-ttu-id="086c0-519">Синтаксис перегруженный конструктор</span><span class="sxs-lookup"><span data-stu-id="086c0-519">Overloaded constructor syntax</span></span>  
 <span data-ttu-id="086c0-520">Конструкторы строки делятся на две категории: без параметров указатель и с параметрами указатель.</span><span class="sxs-lookup"><span data-stu-id="086c0-520">String constructors fall into two categories: those without pointer parameters, and those with pointer parameters.</span></span> <span data-ttu-id="086c0-521">Конструкторы, которые используют указатели, не являются CLS-совместимыми.</span><span class="sxs-lookup"><span data-stu-id="086c0-521">The constructors that use pointers are not CLS-compliant.</span></span> <span data-ttu-id="086c0-522">Кроме того Visual Basic не поддерживает использование указателей и C# требует код, который использует указатели для выполнения в небезопасном контексте.</span><span class="sxs-lookup"><span data-stu-id="086c0-522">In addition, Visual Basic does not support the use of pointers, and C# requires code that uses pointers to run in an unsafe context.</span></span> <span data-ttu-id="086c0-523">Дополнительные сведения см. в разделе [unsafe](~/docs/csharp/language-reference/keywords/unsafe.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-523">For more information, see [unsafe](~/docs/csharp/language-reference/keywords/unsafe.md).</span></span>  
  
 <span data-ttu-id="086c0-524">Дополнительные рекомендации по выбору перегрузки см. в разделе [вызываемого метода какие?](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="086c0-524">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 `String(Char[] value)`  
 <span data-ttu-id="086c0-525">Инициализирует новый экземпляр значением, заданным массивом знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-525">Initializes the new instance to the value indicated by an array of Unicode characters.</span></span> <span data-ttu-id="086c0-526">Этот конструктор копирует символов Юникода ([пример](#Ctor2_Example)).</span><span class="sxs-lookup"><span data-stu-id="086c0-526">This constructor copies Unicode characters([example](#Ctor2_Example)).</span></span>  
  
 `String(Char[] value, Int32 startIndex, Int32 length)`  
 <span data-ttu-id="086c0-527">Инициализирует новый экземпляр значением, заданным массивом знаков Юникода, начальной позицией знака в пределах данного массива и длиной ([пример](#Ctor3_Example)).</span><span class="sxs-lookup"><span data-stu-id="086c0-527">Initializes the new instance to the value indicated by an array of Unicode characters, a starting character position within that array, and a length ([example](#Ctor3_Example)).</span></span>  
  
 `String(Char c, Int32 count)`  
 <span data-ttu-id="086c0-528">Инициализирует новый экземпляр значение обозначается заданного знака Юникода повторяется указанное число раз ([пример](#Ctor3_Example)).</span><span class="sxs-lookup"><span data-stu-id="086c0-528">Initializes the new instance to the value indicated by a specified Unicode character repeated a specified number of times ([example](#Ctor3_Example)).</span></span>  
  
 `String(char* value)`  
 <span data-ttu-id="086c0-529">**(Не является CLS-совместимым)**  Инициализирует новый экземпляр значением, определенным указателем на массив знаков Юникода, завершается нуль-символом (U + 0000 или «\0»).</span><span class="sxs-lookup"><span data-stu-id="086c0-529">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of Unicode characters that is terminated by a null character (U+0000 or '\0').</span></span> <span data-ttu-id="086c0-530">([пример](#Ctor4_Example)).</span><span class="sxs-lookup"><span data-stu-id="086c0-530">([example](#Ctor4_Example)).</span></span>  
  
 <span data-ttu-id="086c0-531">Разрешение: <xref:System.Security.SecurityCriticalAttribute>, требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-531">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-532">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-532">This member cannot be used by partially trusted or transparent code.</span></span>  
  
 `String(char* value, Int32 startIndex, Int32 length)`  
 <span data-ttu-id="086c0-533">**(Не является CLS-совместимым)**  Инициализирует новый экземпляр значением, определенным указателем на массив знаков Юникода, начальной позицией знака в пределах данного массива и длиной.</span><span class="sxs-lookup"><span data-stu-id="086c0-533">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of Unicode characters, a starting character position within that array, and a length.</span></span> <span data-ttu-id="086c0-534">Конструктор копирует символы Юникода из `value` начиная с индекса `startIndex` и заканчивая индекс `startIndex`  +  `length` - 1 ([пример](#Ctor5_Example)).</span><span class="sxs-lookup"><span data-stu-id="086c0-534">The constructor copies the Unicode characters from `value` starting at index `startIndex` and ending at index `startIndex` + `length` - 1 ([example](#Ctor5_Example)).</span></span>  
  
 <span data-ttu-id="086c0-535">Разрешение: <xref:System.Security.SecurityCriticalAttribute>, требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-535">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-536">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-536">This member cannot be used by partially trusted or transparent code.</span></span>  
  
 `String(SByte* value)`  
 <span data-ttu-id="086c0-537">**(Не является CLS-совместимым)**  Инициализирует новый экземпляр значением, определенным указателем на массив 8-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="086c0-537">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of 8-bit signed integers.</span></span> <span data-ttu-id="086c0-538">Массив предполагается представляет строку, закодированную с помощью текущей кодовой странице системы (то есть кодировку, заданную <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="086c0-538">The array is assumed to represent a string encoded using the current system code page (that is, the encoding specified by <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="086c0-539">Конструктор обрабатывает символы из `value` начиная с позиции, определяемой заданным указателем, пока не будет достигнут нуль-символом (0x00) ([пример](#Ctor6_Example)).</span><span class="sxs-lookup"><span data-stu-id="086c0-539">The constructor processes characters from `value` starting from the location specified by the pointer until a null character (0x00) is reached ([example](#Ctor6_Example)).</span></span>  
  
 <span data-ttu-id="086c0-540">Разрешение: <xref:System.Security.SecurityCriticalAttribute>, требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-540">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-541">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-541">This member cannot be used by partially trusted or transparent code.</span></span>  
  
 `String(SByte* value, Int32 startIndex, Int32 length)`  
 <span data-ttu-id="086c0-542">**(Не является CLS-совместимым)**  Инициализирует новый экземпляр значением, определенным указателем на массив 8-разрядных целых чисел со знаком, начальной позицией в пределах данного массива и длиной.</span><span class="sxs-lookup"><span data-stu-id="086c0-542">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of 8-bit signed integers, a starting position within that array, and a length.</span></span>  <span data-ttu-id="086c0-543">Массив предполагается представляет строку, закодированную с помощью текущей кодовой странице системы (то есть кодировку, заданную <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="086c0-543">The array is assumed to represent a string encoded using the current system code page (that is, the encoding specified by <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="086c0-544">Конструктор обрабатывает символы из значения, начиная с `startIndex` и заканчивая `startIndex`  +  `length` - 1 ([пример](#Ctor6_Example)).</span><span class="sxs-lookup"><span data-stu-id="086c0-544">The constructor processes characters from value starting at `startIndex` and ending at `startIndex` + `length` - 1 ([example](#Ctor6_Example)).</span></span>  
  
 <span data-ttu-id="086c0-545">Разрешение: <xref:System.Security.SecurityCriticalAttribute>, требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-545">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-546">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-546">This member cannot be used by partially trusted or transparent code.</span></span>  
  
 `String(SByte* value, Int32 startIndex, Int32 length, Encoding enc)`  
 <span data-ttu-id="086c0-547">**(Не является CLS-совместимым)**  Инициализирует новый экземпляр значением, определенным указателем на массив 8-разрядных целых чисел со знаком, начальной позицией в пределах этого массива, длиной и <xref:System.Text.Encoding> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-547">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of 8-bit signed integers, a starting position within that array, a length, and an <xref:System.Text.Encoding> object.</span></span>  
  
 <span data-ttu-id="086c0-548">Разрешение: <xref:System.Security.SecurityCriticalAttribute>, требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-548">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-549">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-549">This member cannot be used by partially trusted or transparent code.</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="086c0-550">Параметры</span><span class="sxs-lookup"><span data-stu-id="086c0-550">Parameters</span></span>  
 <span data-ttu-id="086c0-551">Ниже приведен полный список параметров, используемых <xref:System.String> конструкторы, не включающие параметр-указатель.</span><span class="sxs-lookup"><span data-stu-id="086c0-551">Here is a complete list of parameters used by <xref:System.String> constructors that don't include a pointer parameter.</span></span> <span data-ttu-id="086c0-552">Параметры, используемые каждой перегрузке см. приведенный выше синтаксис перегрузки.</span><span class="sxs-lookup"><span data-stu-id="086c0-552">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="086c0-553">Параметр</span><span class="sxs-lookup"><span data-stu-id="086c0-553">Parameter</span></span>|<span data-ttu-id="086c0-554">Тип</span><span class="sxs-lookup"><span data-stu-id="086c0-554">Type</span></span>|<span data-ttu-id="086c0-555">Описание</span><span class="sxs-lookup"><span data-stu-id="086c0-555">Description</span></span>|  
|---------------|----------|-----------------|  
|`value`|<span data-ttu-id="086c0-556"><xref:System.Char>[]</span><span class="sxs-lookup"><span data-stu-id="086c0-556"><xref:System.Char>[]</span></span>|<span data-ttu-id="086c0-557">Массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-557">An array of Unicode characters.</span></span>|  
|`c`|<xref:System.Char>|<span data-ttu-id="086c0-558">Знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-558">A Unicode character.</span></span>|  
|`startIndex`|<xref:System.Int32>|<span data-ttu-id="086c0-559">Начальная позиция в `value` первого символа в новой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-559">The starting position in `value` of the first character in the new string.</span></span><br /><br /> <span data-ttu-id="086c0-560">Значение по умолчанию: 0</span><span class="sxs-lookup"><span data-stu-id="086c0-560">Default value: 0</span></span>|  
|`length`|<xref:System.Int32>|<span data-ttu-id="086c0-561">Число символов в `value` для включения в новую строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-561">The number of characters in `value` to include in the new string.</span></span><br /><br /> <span data-ttu-id="086c0-562">Значение по умолчанию: <xref:System.Array.Length%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="086c0-562">Default value: <xref:System.Array.Length%2A?displayProperty=nameWithType></span></span>|  
|`count`|<xref:System.Int32>|<span data-ttu-id="086c0-563">Символ, сколько раз `c` повторяется в новой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-563">The number of times the character `c` is repeated in the new string.</span></span> <span data-ttu-id="086c0-564">Если `count` равно нулю, возвращается новый объект <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-564">If `count` is zero, the value of the new object is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>|  
  
 <span data-ttu-id="086c0-565">Ниже приведен полный список параметров, используемых <xref:System.String> конструкторов, содержащих параметр-указатель.</span><span class="sxs-lookup"><span data-stu-id="086c0-565">Here is a complete list of parameters used by <xref:System.String> constructors that include a pointer parameter.</span></span> <span data-ttu-id="086c0-566">Параметры, используемые каждой перегрузке см. приведенный выше синтаксис перегрузки.</span><span class="sxs-lookup"><span data-stu-id="086c0-566">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="086c0-567">Параметр</span><span class="sxs-lookup"><span data-stu-id="086c0-567">Parameter</span></span>|<span data-ttu-id="086c0-568">Тип</span><span class="sxs-lookup"><span data-stu-id="086c0-568">Type</span></span>|<span data-ttu-id="086c0-569">Описание</span><span class="sxs-lookup"><span data-stu-id="086c0-569">Description</span></span>|  
|---------------|----------|-----------------|  
|`value`|<xref:System.Char>*<br /><br /> <span data-ttu-id="086c0-570">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-570">-or-</span></span><br /><br /> <xref:System.SByte>\*|<span data-ttu-id="086c0-571">Указатель на строку символов Юникода, завершающуюся null или массив 8-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="086c0-571">A pointer to a null-terminated array of Unicode characters or an array of 8-bit signed integers.</span></span> <span data-ttu-id="086c0-572">Если `value` — `null` , или пустой массив, значение новой строки <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-572">If `value` is `null` or an empty array, the value of the new string is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>|  
|`startIndex`|<xref:System.Int32>|<span data-ttu-id="086c0-573">Индекс элемента массива, который определяет первый символ в новой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-573">The index of the array element that defines the first character in the new string.</span></span><br /><br /> <span data-ttu-id="086c0-574">Значение по умолчанию: 0</span><span class="sxs-lookup"><span data-stu-id="086c0-574">Default value: 0</span></span>|  
|`length`|<xref:System.Int32>|<span data-ttu-id="086c0-575">Число элементов массива, использовать для создания новой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-575">The number of array elements to use to create the new string.</span></span> <span data-ttu-id="086c0-576">Если длина равна нулю, конструктор создает строку, значение которого равно <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-576">If length is zero, the constructor creates a string whose value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span><br /><br /> <span data-ttu-id="086c0-577">Значение по умолчанию: <xref:System.Array.Length%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="086c0-577">Default value: <xref:System.Array.Length%2A?displayProperty=nameWithType></span></span>|  
|`enc`|<xref:System.Text.Encoding>|<span data-ttu-id="086c0-578">Объект, задающий как `value` кодируется массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-578">An object that specifies how the `value` array is encoded.</span></span><br /><br /> <span data-ttu-id="086c0-579">Значение по умолчанию: <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>, или текущей кодовой страницы ANSI системы</span><span class="sxs-lookup"><span data-stu-id="086c0-579">Default value: <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>, or the system's current ANSI code page</span></span>|  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="086c0-580">Исключения</span><span class="sxs-lookup"><span data-stu-id="086c0-580">Exceptions</span></span>  
 <span data-ttu-id="086c0-581">Вот список исключений, генерируемых конструкторы, которые не содержат параметры указателя.</span><span class="sxs-lookup"><span data-stu-id="086c0-581">Here's a list of exceptions thrown by constructors that don't include pointer parameters.</span></span>  
  
|<span data-ttu-id="086c0-582">Исключение</span><span class="sxs-lookup"><span data-stu-id="086c0-582">Exception</span></span>|<span data-ttu-id="086c0-583">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-583">Condition</span></span>|<span data-ttu-id="086c0-584">Вызванное</span><span class="sxs-lookup"><span data-stu-id="086c0-584">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="086c0-585">`value` — `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-585">`value` is `null`.</span></span>|<xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="086c0-586">`startIndex`,`length`, или `count` меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-586">`startIndex`,`length`, or `count` is less than zero.</span></span><br /><br /> <span data-ttu-id="086c0-587">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-587">-or-</span></span><br /><br /> <span data-ttu-id="086c0-588">Сумма `startIndex` и `length` больше, чем число элементов в `value`.</span><span class="sxs-lookup"><span data-stu-id="086c0-588">The sum of `startIndex` and `length` is greater than the number of elements in `value`.</span></span><br /><br /> <span data-ttu-id="086c0-589">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-589">-or-</span></span><br /><br /> <span data-ttu-id="086c0-590">Значение параметра `count` меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-590">`count` is less than zero.</span></span>|<xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29><br /><br /> <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>|  
  
 <span data-ttu-id="086c0-591">Вот список исключений, генерируемых конструкторов, содержащих параметры-указатели.</span><span class="sxs-lookup"><span data-stu-id="086c0-591">Here's a list of exceptions thrown by constructors that include pointer parameters.</span></span>  
  
|<span data-ttu-id="086c0-592">Исключение</span><span class="sxs-lookup"><span data-stu-id="086c0-592">Exception</span></span>|<span data-ttu-id="086c0-593">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-593">Condition</span></span>|<span data-ttu-id="086c0-594">Вызванное</span><span class="sxs-lookup"><span data-stu-id="086c0-594">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="086c0-595">`value` Указывает массив, содержащий недопустимый символ Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-595">`value` specifies an array that contains an invalid Unicode character.</span></span><br /><br /> <span data-ttu-id="086c0-596">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-596">-or-</span></span><br /><br /> <span data-ttu-id="086c0-597">`value` или `value`  +  `startIndex` определяет адрес меньше 64 КБ.</span><span class="sxs-lookup"><span data-stu-id="086c0-597">`value` or `value` + `startIndex` specifies an address that is less than 64K.</span></span><br /><br /> <span data-ttu-id="086c0-598">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-598">-or-</span></span><br /><br /> <span data-ttu-id="086c0-599">Новый <xref:System.String> не удалось инициализировать экземпляр из `value` байтового массива, так как `value` не использовать кодировку по умолчанию код страницы.</span><span class="sxs-lookup"><span data-stu-id="086c0-599">A new <xref:System.String> instance could not be initialized from the `value` byte array because `value` does not use the default code page encoding.</span></span>|<span data-ttu-id="086c0-600">Все конструкторы с указателями.</span><span class="sxs-lookup"><span data-stu-id="086c0-600">All constructors with pointers.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="086c0-601">Параметр `value` имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="086c0-601">`value` is null.</span></span>|<xref:System.String.%23ctor%28System.SByte%2A%29><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="086c0-602">Текущий процесс не имеет доступа на чтение ко всем рассматриваемым символам.</span><span class="sxs-lookup"><span data-stu-id="086c0-602">The current process does not have read access to all the addressed characters.</span></span><br /><br /> <span data-ttu-id="086c0-603">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-603">-or-</span></span><br /><br /> <span data-ttu-id="086c0-604">`startIndex` или `length` меньше нуля, `value` + `startIndex` приводит к переполнению указателя, или текущий процесс не имеет доступа на чтение ко всем адресуемым символам.</span><span class="sxs-lookup"><span data-stu-id="086c0-604">`startIndex` or `length` is less than zero, `value` + `startIndex` cause a pointer overflow, or the current process does not have read access to all the addressed characters.</span></span><br /><br /> <span data-ttu-id="086c0-605">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-605">-or-</span></span><br /><br /> <span data-ttu-id="086c0-606">Длина новой строки слишком велика для выделения.</span><span class="sxs-lookup"><span data-stu-id="086c0-606">The length of the new string is too large to allocate.</span></span>|<span data-ttu-id="086c0-607">Все конструкторы с указателями.</span><span class="sxs-lookup"><span data-stu-id="086c0-607">All constructors with pointers.</span></span>|  
|<xref:System.AccessViolationException>|<span data-ttu-id="086c0-608">`value`, или `value`  +  `startIndex`  +  `length` -1, указывает недопустимый адрес.</span><span class="sxs-lookup"><span data-stu-id="086c0-608">`value`, or `value` + `startIndex` + `length` - 1, specifies an invalid address.</span></span>|<xref:System.String.%23ctor%28System.SByte%2A%29><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="086c0-609">Какой метод следует вызывать?</span><span class="sxs-lookup"><span data-stu-id="086c0-609">Which method do I call?</span></span>  
  
|<span data-ttu-id="086c0-610">Кому</span><span class="sxs-lookup"><span data-stu-id="086c0-610">To</span></span>|<span data-ttu-id="086c0-611">Звонок или используйте</span><span class="sxs-lookup"><span data-stu-id="086c0-611">Call or use</span></span>|  
|--------|-----------------|  
|<span data-ttu-id="086c0-612">Создайте строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-612">Create a string.</span></span>|<span data-ttu-id="086c0-613">Назначение из строкового литерала или существующей строки ([пример](#Ctor1_Example))</span><span class="sxs-lookup"><span data-stu-id="086c0-613">Assignment from a string literal or an existing string ([example](#Ctor1_Example))</span></span>|  
|<span data-ttu-id="086c0-614">Создайте строку из массива целого символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-614">Create a string from an entire character array.</span></span>|<span data-ttu-id="086c0-615"><xref:System.String.%23ctor%28System.Char%5B%5D%29> ([пример](#Ctor2_Example))</span><span class="sxs-lookup"><span data-stu-id="086c0-615"><xref:System.String.%23ctor%28System.Char%5B%5D%29> ([example](#Ctor2_Example))</span></span>|  
|<span data-ttu-id="086c0-616">Создайте строку из фрагмента массива символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-616">Create a string from a portion of a character array.</span></span>|<span data-ttu-id="086c0-617"><xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> ([пример](#Ctor3_Example))</span><span class="sxs-lookup"><span data-stu-id="086c0-617"><xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> ([example](#Ctor3_Example))</span></span>|  
|<span data-ttu-id="086c0-618">Создайте строку, которая повторяется несколько раз и тот же символ.</span><span class="sxs-lookup"><span data-stu-id="086c0-618">Create a string that repeats the same character multiple times.</span></span>|<span data-ttu-id="086c0-619"><xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29> ([пример](#Ctor3_Example))</span><span class="sxs-lookup"><span data-stu-id="086c0-619"><xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29> ([example](#Ctor3_Example))</span></span>|  
|<span data-ttu-id="086c0-620">Создайте строку из указателя в Юникоде или массив расширенных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-620">Create a string from a pointer to a Unicode or wide character array.</span></span>|<xref:System.String.%23ctor%28System.Char%2A%29>|  
|<span data-ttu-id="086c0-621">Создайте строку из части Юникода или массив расширенных символов с помощью ее указатель.</span><span class="sxs-lookup"><span data-stu-id="086c0-621">Create a string from a portion of a Unicode or wide character array by using its pointer.</span></span>|<xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29>|  
|<span data-ttu-id="086c0-622">Создание строки из C++ `char` массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-622">Create a string from a C++ `char` array.</span></span>|<span data-ttu-id="086c0-623"><xref:System.String.%23ctor%28System.SByte%2A%29>, <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="086c0-623"><xref:System.String.%23ctor%28System.SByte%2A%29>, <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29></span></span><br /><br /> <span data-ttu-id="086c0-624">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-624">-or-</span></span><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%29>|  
|<span data-ttu-id="086c0-625">Создайте строку из символов ASCII.</span><span class="sxs-lookup"><span data-stu-id="086c0-625">Create a string from ASCII characters.</span></span>|<xref:System.Text.ASCIIEncoding.GetString%2A?displayProperty=nameWithType>|  
  
<a name="Creating_Strings"></a>   
## <a name="creating-strings"></a><span data-ttu-id="086c0-626">Создание строк</span><span class="sxs-lookup"><span data-stu-id="086c0-626">Creating strings</span></span>  
 <span data-ttu-id="086c0-627">Наиболее часто используемые метод для создания строк программным способом — простое присваивание, как показано в [в этом примере](#Ctor1_Example).</span><span class="sxs-lookup"><span data-stu-id="086c0-627">The most commonly used technique for creating strings programmatically is simple assignment, as illustrated in [this example](#Ctor1_Example).</span></span> <span data-ttu-id="086c0-628"><xref:System.String> Класс также включает четыре типа перегрузки конструктора, которые позволяют создавать строки из следующих значений:</span><span class="sxs-lookup"><span data-stu-id="086c0-628">The <xref:System.String> class also includes four types of constructor overloads that let you create strings from the following values:</span></span>  
  
-   <span data-ttu-id="086c0-629">Из массива символов (массив символов в кодировке UTF-16).</span><span class="sxs-lookup"><span data-stu-id="086c0-629">From a character array (an array of UTF-16-encoded characters).</span></span> <span data-ttu-id="086c0-630">Вы можете создать новую <xref:System.String> объект из символов в массиве или его части.</span><span class="sxs-lookup"><span data-stu-id="086c0-630">You can create a new <xref:System.String> object from the characters in the entire array or a portion of it.</span></span> <span data-ttu-id="086c0-631"><xref:System.String.%23ctor%28System.Char%5B%5D%29> Конструктор копирует все символы новой строки в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-631">The <xref:System.String.%23ctor%28System.Char%5B%5D%29> constructor copies all the characters in the array to the new string.</span></span> <span data-ttu-id="086c0-632"><xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Конструктор копирует знаки из индекса `startIndex` индекс `startIndex`  +  `length` -1 в новой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-632">The <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> constructor copies the characters from index `startIndex` to index `startIndex` + `length` - 1 to the new string.</span></span> <span data-ttu-id="086c0-633">Если `length` равно нулю, возвращается новая строка <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-633">If `length` is zero, the value of the new string is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
     <span data-ttu-id="086c0-634">Если ваш код повторно создает экземпляр строки, которые имеют одинаковое значение, можно повысить производительность приложения с помощью альтернативный способ создания строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-634">If your code repeatedly instantiates strings that have the same value, you can improve application performance by using an alternate means of creating strings.</span></span> <span data-ttu-id="086c0-635">Дополнительные сведения см. в разделе [обработка повторяющихся строк](#Repetitive).</span><span class="sxs-lookup"><span data-stu-id="086c0-635">For more information, see [Handling repetitive strings](#Repetitive).</span></span>  
  
-   <span data-ttu-id="086c0-636">Из одного символы, повторяющийся ноль, один, или более раз, с помощью <xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="086c0-636">From a single character that is duplicated zero, one, or more times, by using the <xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29> constructor.</span></span> <span data-ttu-id="086c0-637">Если `count` равно нулю, возвращается новая строка <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-637">If `count` is zero, the value of the new string is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="086c0-638">Из указателя на массив символов с завершающим нулем, с помощью <xref:System.String.%23ctor%28System.Char%2A%29> или <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="086c0-638">From a pointer to a null-terminated character array, by using the <xref:System.String.%23ctor%28System.Char%2A%29> or <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> constructor.</span></span> <span data-ttu-id="086c0-639">Для инициализации строки можно использовать весь массив или указанный интервал.</span><span class="sxs-lookup"><span data-stu-id="086c0-639">Either the entire array or a specified range can be used to initialize the string.</span></span> <span data-ttu-id="086c0-640">Конструктор копирует последовательность символов Юникода начиная с заданного указателя или заданный указатель плюс `startIndex` и до конца массива или для `length` символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-640">The constructor copies a sequence of Unicode characters starting from the specified pointer or from the specified pointer plus `startIndex` and continuing to the end of the array or for `length` characters.</span></span> <span data-ttu-id="086c0-641">Если `value` является пустым указателем или `length` равен нулю, конструктор создает строку, значение которого равно <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-641">If `value` is a null pointer or `length` is zero, the constructor creates a string whose value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-642">Если операция копирования продолжается до конца массива и массив не является нулевым байтом, поведением конструктора зависит от системы.</span><span class="sxs-lookup"><span data-stu-id="086c0-642">If the copy operation proceeds to the end of the array and the array is not null-terminated, the constructor behavior is system-dependent.</span></span> <span data-ttu-id="086c0-643">Такое состояние может вызвать нарушение прав доступа.</span><span class="sxs-lookup"><span data-stu-id="086c0-643">Such a condition might cause an access violation.</span></span>  
  
     <span data-ttu-id="086c0-644">Если массив содержит все внедренные символы null (U + 0000 или «\0») и <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> перегрузка вызывается, содержит экземпляр строки `length` символов, включая все внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="086c0-644">If the array contains any embedded null characters (U+0000 or '\0') and the <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> overload is called, the string instance contains `length` characters including any embedded nulls.</span></span> <span data-ttu-id="086c0-645">В следующем примере показано, что произойдет, если передается указатель на массив из 10 элементов, включающий двумя символами null <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-645">The following example shows what happens when a pointer to an array of 10 elements that includes two null characters is passed to the <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="086c0-646">Так как адрес первого элемента массива и все элементы в массиве, должны быть добавлены к строке, конструктор создает строку с десять символов, включая два внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="086c0-646">Because the address is the beginning of the array and all elements in the array are to be added to the string, the constructor instantiates a string with ten characters, including two embedded nulls.</span></span> <span data-ttu-id="086c0-647">С другой стороны, если передается тот же массив <xref:System.String.%23ctor%28System.Char%2A%29> конструктор, результат является 4 символьная строка, которая не включает первого пустого знака.</span><span class="sxs-lookup"><span data-stu-id="086c0-647">On the other hand, if the same array is passed to the <xref:System.String.%23ctor%28System.Char%2A%29> constructor, the result is a four-character string that does not include the first null character.</span></span>  
  
     [!code-cpp[System.String.ctor#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/chptrctor_null.cpp#5)]
     [!code-csharp[System.String.ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/chptrctor_null.cs#5)]  
  
     <span data-ttu-id="086c0-648">Этот массив должен содержать символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-648">The array must contain Unicode characters.</span></span> <span data-ttu-id="086c0-649">В C++, это означает, что массив символов должен быть определен как управляемый <xref:System.Char>типа [] или неуправляемой`wchar_t`тип [].</span><span class="sxs-lookup"><span data-stu-id="086c0-649">In C++, this means that the character array must be defined either as the managed <xref:System.Char>[] type or the unmanaged`wchar_t`[] type.</span></span>  
  
     <span data-ttu-id="086c0-650">Если <xref:System.String.%23ctor%28System.Char%2A%29> перегрузка вызывается и массив не является нулевым байтом, или если <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> перегрузка вызывается и `startIndex`  +  `length`-1 включает диапазон, который за пределами памяти, выделенные для последовательности символов, поведение конструктора по не зависящую от системы и может возникнуть нарушение прав доступа.</span><span class="sxs-lookup"><span data-stu-id="086c0-650">If the <xref:System.String.%23ctor%28System.Char%2A%29> overload is called and the array is not null-terminated, or if the <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> overload is called and `startIndex` + `length`-1 includes a range that it outside the memory allocated for the sequence of characters, the behavior of the constructor is system-dependent, and an access violation may occur.</span></span> <span data-ttu-id="086c0-651">Кроме того, на процессоре Intel Itanium, вызывает <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> конструктор может вызывать исключение <xref:System.DataMisalignedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="086c0-651">In addition, on the Intel Itanium processor, calls to the <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> constructor may throw a <xref:System.DataMisalignedException> exception.</span></span> <span data-ttu-id="086c0-652">В этом случае вызов <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> вместо этого.</span><span class="sxs-lookup"><span data-stu-id="086c0-652">If this occurs, call the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> instead.</span></span>  
  
-   <span data-ttu-id="086c0-653">Из указателя в массив байт со знаком.</span><span class="sxs-lookup"><span data-stu-id="086c0-653">From a pointer to a signed byte array.</span></span> <span data-ttu-id="086c0-654">Для инициализации строки можно использовать весь массив или указанный интервал.</span><span class="sxs-lookup"><span data-stu-id="086c0-654">Either the entire array or a specified range can be used to initialize the string.</span></span> <span data-ttu-id="086c0-655">Последовательность байтов, которую можно интерпретировать с помощью кодирования кодовой страницей по умолчанию, или кодировку могут быть указаны в вызове конструктора.</span><span class="sxs-lookup"><span data-stu-id="086c0-655">The sequence of bytes can be interpreted by using the default code page encoding, or an encoding can be specified in the constructor call.</span></span> <span data-ttu-id="086c0-656">Если конструктор пытается создать экземпляр строку из весь массив, который не является нулем или диапазон для массива из `value`  +  `startIndex` для `value`  +  `startIndex`  +  `length` -1 выходит за пределы памяти, выделенной для массива, поведение этого конструктора не зависящую от системы и может возникнуть нарушение прав доступа.</span><span class="sxs-lookup"><span data-stu-id="086c0-656">If the constructor tries to instantiate a string from an entire array that is not null-terminated, or if the range of the array from `value` + `startIndex` to `value` + `startIndex` + `length` -1 is outside of the memory allocated for the array, the behavior of this constructor is system-dependent, and an access violation may occur.</span></span>  
  
     <span data-ttu-id="086c0-657">Три конструктора, которые включают в качестве параметра массив байт со знаком предназначены главным образом для преобразования C++ `char` массива в строку, как показано в следующем примере:</span><span class="sxs-lookup"><span data-stu-id="086c0-657">The three constructors that include a signed byte array as a parameter are designed primarily to convert a C++ `char` array to a string, as shown in this example:</span></span>  
  
     [!code-cpp[System.String.Ctor#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/sbyte_ctor1.cpp#4)]  
  
     <span data-ttu-id="086c0-658">Если массив содержит символы null («\0») или байт, значение которого равно 0 и <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> перегрузка вызывается, содержит экземпляр строки `length` символов, включая все внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="086c0-658">If the array contains any null characters ('\0') or bytes whose value is 0 and the <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> overload is called, the string instance contains `length` characters including any embedded nulls.</span></span> <span data-ttu-id="086c0-659">В следующем примере показано, что произойдет, если передается указатель на массив из 10 элементов, включающий двумя символами null <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-659">The following example shows what happens when a pointer to an array of 10 elements that includes two null characters is passed to the <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="086c0-660">Так как адрес первого элемента массива и все элементы в массиве, должны быть добавлены к строке, конструктор создает строку с десять символов, включая два внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="086c0-660">Because the address is the beginning of the array and all elements in the array are to be added to the string, the constructor instantiates a string with ten characters, including two embedded nulls.</span></span> <span data-ttu-id="086c0-661">С другой стороны, если передается тот же массив <xref:System.String.%23ctor%28System.SByte%2A%29> конструктор, результат является 4 символьная строка, которая не включает первого пустого знака.</span><span class="sxs-lookup"><span data-stu-id="086c0-661">On the other hand, if the same array is passed to the <xref:System.String.%23ctor%28System.SByte%2A%29> constructor, the result is a four-character string that does not include the first null character.</span></span>  
  
     [!code-cpp[System.String.ctor#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/ptrctor_null.cpp#6)]
     [!code-csharp[System.String.ctor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/ptrctor_null.cs#6)]  
  
     <span data-ttu-id="086c0-662">Так как <xref:System.String.%23ctor%28System.SByte%2A%29> и <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> интерпретировать конструкторы `value` кодовую страницу ANSI по умолчанию вызова этих конструкторов одинаковые байтовые массивы могут создать, строки, которые имеют разные значения в различных системах.</span><span class="sxs-lookup"><span data-stu-id="086c0-662">Because the <xref:System.String.%23ctor%28System.SByte%2A%29> and <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> constructors interpret `value` by using the default ANSI code page, calling these constructors with identical byte arrays may create strings that have different values on different systems.</span></span>  
  
<a name="Repetitive"></a>   
## <a name="handling-repetitive-strings"></a><span data-ttu-id="086c0-663">Обработка повторяющихся строк</span><span class="sxs-lookup"><span data-stu-id="086c0-663">Handling repetitive strings</span></span>  
 <span data-ttu-id="086c0-664">Приложения, которые проанализировать или декодировать потоки текста, часто используют <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> конструктор или <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод для преобразования последовательности символов в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-664">Apps that parse or decode streams of text often use the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> constructor or the <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to convert sequences of characters into a string.</span></span> <span data-ttu-id="086c0-665">Несколько раз, создание новых строк с тем же значением, вместо создания и использования одной строки занимает много памяти.</span><span class="sxs-lookup"><span data-stu-id="086c0-665">Repeatedly creating new strings with the same value instead of creating and reusing one string wastes memory.</span></span> <span data-ttu-id="086c0-666">Если вы, скорее всего несколько раз создать тот же строковый параметр, вызвав <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> конструктор, даже если вы не знаете, в переместить эти идентичные строковые значения, которые могут быть, вместо этого можно использовать таблицу уточняющих запросов.</span><span class="sxs-lookup"><span data-stu-id="086c0-666">If you are likely to create the same string value repeatedly by calling the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> constructor, even if you don't know in advance what those identical string values may be, you can use a lookup table instead.</span></span>  
  
 <span data-ttu-id="086c0-667">Например предположим, прочитать и проанализировать поток символов из файла, который содержит XML-теги и атрибуты.</span><span class="sxs-lookup"><span data-stu-id="086c0-667">For example, suppose you read and parse a stream of characters from a file that contains XML tags and attributes.</span></span> <span data-ttu-id="086c0-668">При синтаксическом анализе потока, постоянно встречаются определенные токены (то есть последовательности символов, которые имеют определенное значение).</span><span class="sxs-lookup"><span data-stu-id="086c0-668">When you parse the stream, you repeatedly encounter certain tokens (that is, sequences of characters that have a symbolic meaning).</span></span> <span data-ttu-id="086c0-669">Маркеры, эквивалентные строкам «0», «1», «true» и «false», скорее всего, часто встречаются в поток XML.</span><span class="sxs-lookup"><span data-stu-id="086c0-669">Tokens equivalent to the strings "0", "1", "true", and "false" are likely to occur frequently in an XML stream.</span></span>  
  
 <span data-ttu-id="086c0-670">Вместо преобразования каждого маркера в новую строку, можно создать <xref:System.Xml.NameTable?displayProperty=nameWithType> объект для хранения часто встречающиеся строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-670">Instead of converting each token into a new string, you can create a <xref:System.Xml.NameTable?displayProperty=nameWithType> object to hold commonly occurring strings.</span></span> <span data-ttu-id="086c0-671"><xref:System.Xml.NameTable> Объекта увеличивает производительность, так как он извлекает сохраненные строки без выделения памяти.</span><span class="sxs-lookup"><span data-stu-id="086c0-671">The <xref:System.Xml.NameTable> object improves performance, because it retrieves stored strings without allocating temporary memory.</span></span> <span data-ttu-id="086c0-672">При возникновении маркер, используйте <xref:System.Xml.NameTable.Get%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод для получения маркера из таблицы.</span><span class="sxs-lookup"><span data-stu-id="086c0-672">When you encounter a token, use the <xref:System.Xml.NameTable.Get%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to retrieve the token from the table.</span></span> <span data-ttu-id="086c0-673">Если существует маркер, метод возвращает соответствующую строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-673">If the token exists, the method returns the corresponding string.</span></span> <span data-ttu-id="086c0-674">Если маркер не существует, используйте <xref:System.Xml.NameTable.Add%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод, чтобы добавить маркер в таблицу и для получения соответствующей строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-674">If the token does not exist, use the <xref:System.Xml.NameTable.Add%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to insert the token into the table and to get the corresponding string.</span></span>  
  
<a name="Ctor1_Example"></a>   
## <a name="example-1-using-string-assignment"></a><span data-ttu-id="086c0-675">Пример 1: С помощью присваивание строк</span><span class="sxs-lookup"><span data-stu-id="086c0-675">Example 1: Using string assignment</span></span>  
 <span data-ttu-id="086c0-676">В следующем примере создается новая строка, назначив ей строкового литерала.</span><span class="sxs-lookup"><span data-stu-id="086c0-676">The following example creates a new string by assigning it a string literal.</span></span> <span data-ttu-id="086c0-677">Он создает строку второго, следует назначить первой строки к нему.</span><span class="sxs-lookup"><span data-stu-id="086c0-677">It creates a second string by assigning the value of the first string to it.</span></span> <span data-ttu-id="086c0-678">Ниже приведены два наиболее распространенных способов для создания нового <xref:System.String> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-678">These are the two most common ways to instantiate a new <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.String.ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/assignment.cpp#1)]
 [!code-csharp[System.String.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/ctor1.cs#1)]
 [!code-vb[System.String.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.ctor/vb/ctor1.vb#1)]  
  
<a name="Ctor2_Example"></a>   
## <a name="example-2-using-a-character-array"></a><span data-ttu-id="086c0-679">Пример 2: С помощью массива символов</span><span class="sxs-lookup"><span data-stu-id="086c0-679">Example 2: Using a character array</span></span>  
 <span data-ttu-id="086c0-680">В следующем примере показано, как для создания нового <xref:System.String> объекта из массива символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-680">The following example demonstrates how to create a new <xref:System.String> object from a character array.</span></span>  
  
 [!code-cpp[stringexample1#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringexample1/CPP/source.cpp#1)]
 [!code-csharp[stringexample1#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringexample1/CS/source.cs#1)]
 [!code-vb[stringexample1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringexample1/VB/source.vb#1)]  
  
<a name="Ctor3_Example"></a>   
## <a name="example-3-using-a-portion-of-a-character-array-and-repeating-a-single-character"></a><span data-ttu-id="086c0-681">Пример 3. Используя часть массив символов и повторение один символ</span><span class="sxs-lookup"><span data-stu-id="086c0-681">Example 3: Using a portion of a character array and repeating a single character</span></span>  
 <span data-ttu-id="086c0-682">В следующем примере показано, как для создания нового <xref:System.String> объекта из части массива символов и как создать новый <xref:System.String> объект, который содержит несколько экземпляров одного символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-682">The following example demonstrates how to create a new <xref:System.String> object from a portion of a character array, and how to create a new <xref:System.String> object that contains multiple occurrences of a single character.</span></span>  
  
 [!code-cpp[stringexample1#3](~/samples/snippets/cpp/VS_Snippets_CLR/stringexample1/CPP/source.cpp#3)]
 [!code-csharp[stringexample1#3](~/samples/snippets/csharp/VS_Snippets_CLR/stringexample1/CS/source.cs#3)]
 [!code-vb[stringexample1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringexample1/VB/source.vb#3)]  
  
<a name="Ctor4_Example"></a>   
## <a name="example-4-using-a-pointer-to-a-character-array"></a><span data-ttu-id="086c0-683">Пример 4. Используя указатель на массив символов</span><span class="sxs-lookup"><span data-stu-id="086c0-683">Example 4: Using a pointer to a character array</span></span>  
 <span data-ttu-id="086c0-684">В следующем примере показано, как для создания нового <xref:System.String> объекта из указателя на массив символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-684">The following example demonstrates how to create a new <xref:System.String> object from a pointer to an array of characters.</span></span> <span data-ttu-id="086c0-685">В примере C# должны компилироваться с помощью `/unsafe` параметр компилятора.</span><span class="sxs-lookup"><span data-stu-id="086c0-685">The C# example must be compiled by using the `/unsafe` compiler switch.</span></span>  
  
 [!code-cpp[System.String.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/char1_ctor.cpp#2)]
 [!code-csharp[System.String.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/ctor2.cs#2)]  
  
<a name="Ctor5_Example"></a>   
## <a name="example-5-instantiating-a-string-from-a-pointer-and-a-range-of-an-array"></a><span data-ttu-id="086c0-686">Пример 5. Создание экземпляра строки из указателя и диапазона массива</span><span class="sxs-lookup"><span data-stu-id="086c0-686">Example 5: Instantiating a string from a pointer and a range of an array</span></span>  
 <span data-ttu-id="086c0-687">В приведенном ниже примере проверяются элементы массива знаков для одной или восклицательным знаком.</span><span class="sxs-lookup"><span data-stu-id="086c0-687">The following example examines the elements of a character array for either a period or an exclamation point.</span></span> <span data-ttu-id="086c0-688">Если он найден, он создает строку из символов в массиве, предшествующие знак пунктуации.</span><span class="sxs-lookup"><span data-stu-id="086c0-688">If one is found, it instantiates a string from the characters in the array that precede the punctuation symbol.</span></span> <span data-ttu-id="086c0-689">В противном случае он создает строку с все содержимое массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-689">If not, it instantiates a string with the entire contents of the array.</span></span> <span data-ttu-id="086c0-690">В примере C# должно быть скомпилировано с использованием `/unsafe` параметр компилятора.</span><span class="sxs-lookup"><span data-stu-id="086c0-690">The C# example must be compiled using the `/unsafe` compiler switch.</span></span>  
  
 [!code-cpp[System.String.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/char2_ctor.cpp#3)]
 [!code-csharp[System.String.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/char2_ctor.cs#3)]  
  
<a name="Ctor6_Example"></a>   
## <a name="example-6-instantiating-a-string-from-a-pointer-to-a-signed-byte-array"></a><span data-ttu-id="086c0-691">Пример 6. Создание экземпляра строки из указателя в массив байт со знаком</span><span class="sxs-lookup"><span data-stu-id="086c0-691">Example 6: Instantiating a string from a pointer to a signed byte array</span></span>  
 <span data-ttu-id="086c0-692">В следующем примере показано, как можно создать экземпляр <xref:System.String> класса <xref:System.String.%23ctor%28System.SByte%2A%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="086c0-692">The following example demonstrates how you can create an instance of the <xref:System.String> class with the <xref:System.String.%23ctor%28System.SByte%2A%29> constructor.</span></span>  
  
 [!code-cpp[stringexample1#2](~/samples/snippets/cpp/VS_Snippets_CLR/stringexample1/CPP/source.cpp#2)]
 [!code-csharp[stringexample1#2](~/samples/snippets/csharp/VS_Snippets_CLR/stringexample1/CS/source.cs#2)]  
  
<a name="Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="086c0-693">Сведения о версии</span><span class="sxs-lookup"><span data-stu-id="086c0-693">Version information</span></span>  
 <span data-ttu-id="086c0-694">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="086c0-694">.NET Framework</span></span>  
 <span data-ttu-id="086c0-695">Все перегрузки поддерживаются в: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span><span class="sxs-lookup"><span data-stu-id="086c0-695">All overloads are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
  
 <span data-ttu-id="086c0-696">.NET Framework (клиентский профиль)</span><span class="sxs-lookup"><span data-stu-id="086c0-696">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="086c0-697">Все перегрузки поддерживаются в: 4, 3.5 С ПАКЕТОМ ОБНОВЛЕНИЯ 1</span><span class="sxs-lookup"><span data-stu-id="086c0-697">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="086c0-698">Переносимая библиотека классов</span><span class="sxs-lookup"><span data-stu-id="086c0-698">Portable Class Library</span></span>  
 <span data-ttu-id="086c0-699">Все перегрузки без <xref:System.SByte> `*` поддерживаются параметр</span><span class="sxs-lookup"><span data-stu-id="086c0-699">All overloads without an <xref:System.SByte>`*` parameter are supported</span></span>  
  
 <span data-ttu-id="086c0-700">Приложения .NET для Магазина Windows</span><span class="sxs-lookup"><span data-stu-id="086c0-700">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="086c0-701">Все перегрузки без <xref:System.SByte> `*` параметра поддерживаются в: Windows 8</span><span class="sxs-lookup"><span data-stu-id="086c0-701">All overloads without an <xref:System.SByte>`*` parameter are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char* value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(char* value);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;char&gt; -&gt; string" Usage="new System.string value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-702">Указатель на строку знаков в кодировке Юникод, завершающуюся нулевым значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-702">A pointer to a null-terminated array of Unicode characters.</span></span></param>
        <summary><span data-ttu-id="086c0-703">Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, определенным указателем на массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-703">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified pointer to an array of Unicode characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="086c0-704">Примеры и информация об этом и других комплексную использовании `String` перегрузки конструктора, см. в разделе <xref:System.String.%23ctor%2A> конструктор сводки.</span><span class="sxs-lookup"><span data-stu-id="086c0-704">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-705">Текущий процесс не имеет доступа на чтение ко всем рассматриваемым символам.</span><span class="sxs-lookup"><span data-stu-id="086c0-705">The current process does not have read access to all the addressed characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-706"><paramref name="value" /> указывает массив, содержащий недопустимый символ Юникода, или <paramref name="value" /> определяет адрес меньше 64 000.</span><span class="sxs-lookup"><span data-stu-id="086c0-706"><paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> specifies an address less than 64000.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="086c0-707">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-707">requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-708">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-708">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(cli::array &lt;char&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new string : char[] -&gt; string" Usage="new System.string value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-709">Массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-709">An array of Unicode characters.</span></span></param>
        <summary><span data-ttu-id="086c0-710">Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, заданным в виде массива знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-710">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by an array of Unicode characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="086c0-711">Примеры и информация об этом и других комплексную использовании `String` перегрузки конструктора, см. в разделе <xref:System.String.%23ctor%2A> конструктор сводки.</span><span class="sxs-lookup"><span data-stu-id="086c0-711">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="new string : ReadOnlySpan&lt;char&gt; -&gt; string" Usage="new System.string value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (sbyte* value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8* value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.SByte*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(System::SByte* value);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;sbyte&gt; -&gt; string" Usage="new System.string value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-712">Указатель на массив 8-разрядных целых чисел со знаком, завершающийся нулевым значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-712">A pointer to a null-terminated array of 8-bit signed integers.</span></span> <span data-ttu-id="086c0-713">Целые числа интерпретируются с использованием текущей системы кодировки страницы системным кодом (то есть, кодировки, заданной <see cref="P:System.Text.Encoding.Default" />).</span><span class="sxs-lookup"><span data-stu-id="086c0-713">The integers are interpreted using the current system code page encoding (that is, the encoding specified by <see cref="P:System.Text.Encoding.Default" />).</span></span></param>
        <summary><span data-ttu-id="086c0-714">Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, определенным указателем на массив 8-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="086c0-714">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a pointer to an array of 8-bit signed integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="086c0-715">Примеры и информация об этом и других комплексную использовании `String` перегрузки конструктора, см. в разделе <xref:System.String.%23ctor%2A> конструктор сводки.</span><span class="sxs-lookup"><span data-stu-id="086c0-715">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-716"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-716"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-717">Не удалось инициализировать новый экземпляр <see cref="T:System.String" /> с помощью <paramref name="value" />, если предполагается, что <paramref name="value" /> представлен в кодировке ANSI.</span><span class="sxs-lookup"><span data-stu-id="086c0-717">A new instance of <see cref="T:System.String" /> could not be initialized using <paramref name="value" />, assuming <paramref name="value" /> is encoded in ANSI.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-718">Длина новой инициализируемой строки, определяемая символом, завершающимся нулевым значением <paramref name="value" />, слишком велика для выделения.</span><span class="sxs-lookup"><span data-stu-id="086c0-718">The length of the new string to initialize, which is determined by the null termination character of <paramref name="value" />, is too large to allocate.</span></span></exception>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="086c0-719"><paramref name="value" /> указывает недопустимый адрес.</span><span class="sxs-lookup"><span data-stu-id="086c0-719"><paramref name="value" /> specifies an invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="086c0-720">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-720">requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-721">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-721">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char c, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char c, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Char, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(char c, int count);" />
      <MemberSignature Language="F#" Value="new string : char * int -&gt; string" Usage="new System.string (c, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="086c0-722">Знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-722">A Unicode character.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-723">Количество повторов <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-723">The number of times <paramref name="c" /> occurs.</span></span></param>
        <summary><span data-ttu-id="086c0-724">Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, полученным путем повторения заданного знака Юникода указанное число раз.</span><span class="sxs-lookup"><span data-stu-id="086c0-724">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified Unicode character repeated a specified number of times.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="086c0-725">Примеры и информация об этом и других комплексную использовании `String` перегрузки конструктора, см. в разделе <xref:System.String.%23ctor%2A> конструктор сводки.</span><span class="sxs-lookup"><span data-stu-id="086c0-725">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-726">Значение параметра <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-726"><paramref name="count" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char* value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char*,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(char* value, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;char&gt; * int * int -&gt; string" Usage="new System.string (value, startIndex, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-727">Указатель на массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-727">A pointer to an array of Unicode characters.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-728">Начальная позиция в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-728">The starting position within <paramref name="value" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-729">Используемое количество знаков в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-729">The number of characters within <paramref name="value" /> to use.</span></span></param>
        <summary><span data-ttu-id="086c0-730">Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, которое определяется заданным указателем на массив знаков Юникода, начальной позицией знака в этом массиве и длиной.</span><span class="sxs-lookup"><span data-stu-id="086c0-730">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified pointer to an array of Unicode characters, a starting character position within that array, and a length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="086c0-731">Примеры и информация об этом и других комплексную использовании `String` перегрузки конструктора, см. в разделе <xref:System.String.%23ctor%2A> конструктор сводки.</span><span class="sxs-lookup"><span data-stu-id="086c0-731">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-732"><paramref name="startIndex" /> или <paramref name="length" /> меньше нуля, <paramref name="value" /> + <paramref name="startIndex" /> приводит к переполнению указателя, или текущий процесс не имеет доступа на чтение ко всем адресуемым символам.</span><span class="sxs-lookup"><span data-stu-id="086c0-732"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero, <paramref name="value" /> + <paramref name="startIndex" /> cause a pointer overflow, or the current process does not have read access to all the addressed characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-733"><paramref name="value" /> указывает массив, содержащий недопустимый символ Юникода, или <paramref name="value" /> + <paramref name="startIndex" /> определяет адрес меньше 64 000.</span><span class="sxs-lookup"><span data-stu-id="086c0-733"><paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> + <paramref name="startIndex" /> specifies an address less than 64000.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="086c0-734">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-734">requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-735">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-735">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char[] value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Char(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(cli::array &lt;char&gt; ^ value, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="new string : char[] * int * int -&gt; string" Usage="new System.string (value, startIndex, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-736">Массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-736">An array of Unicode characters.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-737">Начальная позиция в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-737">The starting position within <paramref name="value" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-738">Используемое количество знаков в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-738">The number of characters within <paramref name="value" /> to use.</span></span></param>
        <summary><span data-ttu-id="086c0-739">Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, заданным массивом знаков Юникода, начальной позицией знака в пределах данного массива и длиной.</span><span class="sxs-lookup"><span data-stu-id="086c0-739">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by an array of Unicode characters, a starting character position within that array, and a length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="086c0-740">Примеры и информация об этом и других комплексную использовании `String` перегрузки конструктора, см. в разделе <xref:System.String.%23ctor%2A> конструктор сводки.</span><span class="sxs-lookup"><span data-stu-id="086c0-740">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-741"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-741"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-742">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-742"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span>  
  
<span data-ttu-id="086c0-743">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-743">-or-</span></span> 
<span data-ttu-id="086c0-744">Сумма <paramref name="startIndex" /> и <paramref name="length" /> больше, чем число элементов в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-744">The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the number of elements in <paramref name="value" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (sbyte* value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8* value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.SByte*,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(System::SByte* value, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;sbyte&gt; * int * int -&gt; string" Usage="new System.string (value, startIndex, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-745">Указатель на массив 8-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="086c0-745">A pointer to an array of 8-bit signed integers.</span></span> <span data-ttu-id="086c0-746">Целые числа интерпретируются с использованием текущей системы кодировки страницы системным кодом (то есть, кодировки, заданной <see cref="P:System.Text.Encoding.Default" />).</span><span class="sxs-lookup"><span data-stu-id="086c0-746">The integers are interpreted using the current system code page encoding (that is, the encoding specified by <see cref="P:System.Text.Encoding.Default" />).</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-747">Начальная позиция в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-747">The starting position within <paramref name="value" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-748">Используемое количество знаков в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-748">The number of characters within <paramref name="value" /> to use.</span></span></param>
        <summary><span data-ttu-id="086c0-749">Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, определяемым заданным указателем на массив 8-разрядных целых чисел со знаком, начальной позицией в пределах массива и длиной.</span><span class="sxs-lookup"><span data-stu-id="086c0-749">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified pointer to an array of 8-bit signed integers, a starting position within that array, and a length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="086c0-750">Примеры и информация об этом и других комплексную использовании `String` перегрузки конструктора, см. в разделе <xref:System.String.%23ctor%2A> конструктор сводки.</span><span class="sxs-lookup"><span data-stu-id="086c0-750">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-751"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-751"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-752">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-752"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span>  
  
<span data-ttu-id="086c0-753">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-753">-or-</span></span> 
<span data-ttu-id="086c0-754">Адрес, указанный значениями <paramref name="value" /> + <paramref name="startIndex" />, слишком велик для текущей платформы, то есть при вычислении адреса произошло переполнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-754">The address specified by <paramref name="value" /> + <paramref name="startIndex" /> is too large for the current platform; that is, the address calculation overflowed.</span></span>  
  
<span data-ttu-id="086c0-755">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-755">-or-</span></span> 
<span data-ttu-id="086c0-756">Длина новой инициализируемой строки слишком велика для выделения.</span><span class="sxs-lookup"><span data-stu-id="086c0-756">The length of the new string to initialize is too large to allocate.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-757">Адрес, указанный значениями <paramref name="value" /> + <paramref name="startIndex" />, меньше 64 000.</span><span class="sxs-lookup"><span data-stu-id="086c0-757">The address specified by <paramref name="value" /> + <paramref name="startIndex" /> is less than 64K.</span></span>  
  
<span data-ttu-id="086c0-758">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-758">-or-</span></span> 
<span data-ttu-id="086c0-759">Не удалось инициализировать новый экземпляр <see cref="T:System.String" /> с помощью <paramref name="value" />, исходя из предположения, что значение <paramref name="value" /> представлено в кодировке ANSI.</span><span class="sxs-lookup"><span data-stu-id="086c0-759">A new instance of <see cref="T:System.String" /> could not be initialized using <paramref name="value" />, assuming <paramref name="value" /> is encoded in ANSI.</span></span></exception>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="086c0-760"><paramref name="value" />, <paramref name="startIndex" /> и <paramref name="length" /> совместно определяют недопустимый адрес.</span><span class="sxs-lookup"><span data-stu-id="086c0-760"><paramref name="value" />, <paramref name="startIndex" />, and <paramref name="length" /> collectively specify an invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="086c0-761">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-761">requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-762">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-762">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (sbyte* value, int startIndex, int length, System.Text.Encoding enc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8* value, int32 startIndex, int32 length, class System.Text.Encoding enc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.SByte*,System.Int32,System.Int32,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(System::SByte* value, int startIndex, int length, System::Text::Encoding ^ enc);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;sbyte&gt; * int * int * System.Text.Encoding -&gt; string" Usage="new System.string (value, startIndex, length, enc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="enc" Type="System.Text.Encoding" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-763">Указатель на массив 8-разрядных целых чисел со знаком.</span><span class="sxs-lookup"><span data-stu-id="086c0-763">A pointer to an array of 8-bit signed integers.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-764">Начальная позиция в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-764">The starting position within <paramref name="value" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-765">Используемое количество знаков в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-765">The number of characters within <paramref name="value" /> to use.</span></span></param>
        <param name="enc"><span data-ttu-id="086c0-766">Объект, определяющий способ кодировки массива, на который указывает параметр <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-766">An object that specifies how the array referenced by <paramref name="value" /> is encoded.</span></span> <span data-ttu-id="086c0-767">Если значением параметра <paramref name="enc" /> является <see langword="null" />, предполагается кодировка ANSI.</span><span class="sxs-lookup"><span data-stu-id="086c0-767">If <paramref name="enc" /> is <see langword="null" />, ANSI encoding is assumed.</span></span></param>
        <summary><span data-ttu-id="086c0-768">Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, определенным заданным указателем на массив 8-разрядных целых чисел со знаком, начальной позицией в пределах этого массива, длиной и объектом <see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-768">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified pointer to an array of 8-bit signed integers, a starting position within that array, a length, and an <see cref="T:System.Text.Encoding" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="086c0-769">Примеры и информация об этом и других комплексную использовании `String` перегрузки конструктора, см. в разделе <xref:System.String.%23ctor%2A> конструктор сводки.</span><span class="sxs-lookup"><span data-stu-id="086c0-769">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-770"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-770"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-771">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-771"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span>  
  
<span data-ttu-id="086c0-772">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-772">-or-</span></span> 
<span data-ttu-id="086c0-773">Адрес, указанный значениями <paramref name="value" /> + <paramref name="startIndex" />, слишком велик для текущей платформы, то есть при вычислении адреса произошло переполнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-773">The address specified by <paramref name="value" /> + <paramref name="startIndex" /> is too large for the current platform; that is, the address calculation overflowed.</span></span>  
  
<span data-ttu-id="086c0-774">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-774">-or-</span></span> 
<span data-ttu-id="086c0-775">Длина новой инициализируемой строки слишком велика для выделения.</span><span class="sxs-lookup"><span data-stu-id="086c0-775">The length of the new string to initialize is too large to allocate.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-776">Адрес, указанный значениями <paramref name="value" /> + <paramref name="startIndex" />, меньше 64 000.</span><span class="sxs-lookup"><span data-stu-id="086c0-776">The address specified by <paramref name="value" /> + <paramref name="startIndex" /> is less than 64K.</span></span>  
  
<span data-ttu-id="086c0-777">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-777">-or-</span></span> 
<span data-ttu-id="086c0-778">Не удалось инициализировать новый экземпляр <see cref="T:System.String" /> с помощью <paramref name="value" />, если предполагается, что <paramref name="value" /> представлен в кодировке <paramref name="enc" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-778">A new instance of <see cref="T:System.String" /> could not be initialized using <paramref name="value" />, assuming <paramref name="value" /> is encoded as specified by <paramref name="enc" />.</span></span></exception>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="086c0-779"><paramref name="value" />, <paramref name="startIndex" /> и <paramref name="length" /> совместно определяют недопустимый адрес.</span><span class="sxs-lookup"><span data-stu-id="086c0-779"><paramref name="value" />, <paramref name="startIndex" />, and <paramref name="length" /> collectively specify an invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="086c0-780">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-780">requires full trust for the immediate caller.</span></span> <span data-ttu-id="086c0-781">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="086c0-781">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Chars">
      <MemberSignature Language="C#" Value="public char this[Index index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Chars(valuetype System.Index)" />
      <MemberSignature Language="DocId" Value="P:System.String.Chars(System.Index)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Chars(index As Index) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[Index] { char get(Index index); };" />
      <MemberSignature Language="F#" Value="member this.Chars(Index) : char" Usage="System.string.Chars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Index" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chars">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Chars(int32)" />
      <MemberSignature Language="DocId" Value="P:System.String.Chars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Chars(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Chars(int) : char" Usage="System.string.Chars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="086c0-782">Позиция в текущей строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-782">A position in the current string.</span></span></param>
        <summary><span data-ttu-id="086c0-783">Возвращает объект <see cref="T:System.Char" /> в указанной позиции в текущем объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-783">Gets the <see cref="T:System.Char" /> object at a specified position in the current <see cref="T:System.String" /> object.</span></span></summary>
        <value><span data-ttu-id="086c0-784">Объект в позиции <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-784">The object at position <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-785">`index` Параметр отсчитывается от нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-785">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="086c0-786">Это свойство возвращает <xref:System.Char> объект, находящийся в позиции, заданной параметром `index` параметр.</span><span class="sxs-lookup"><span data-stu-id="086c0-786">This property returns the <xref:System.Char> object at the position specified by the `index` parameter.</span></span> <span data-ttu-id="086c0-787">Тем не менее, символ Юникода могут быть представлены в более чем одной <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="086c0-787">However, a Unicode character might be represented by more than one <xref:System.Char>.</span></span> <span data-ttu-id="086c0-788">Используйте <xref:System.Globalization.StringInfo?displayProperty=nameWithType> работе с Юникодом знаков вместо <xref:System.Char> объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-788">Use the <xref:System.Globalization.StringInfo?displayProperty=nameWithType> class to work with Unicode characters instead of <xref:System.Char> objects.</span></span> <span data-ttu-id="086c0-789">Дополнительные сведения см. в разделе «Char объектов и символы Юникода» в <xref:System.String> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="086c0-789">For more information, see the "Char Objects and Unicode Characters" section in the <xref:System.String> class overview.</span></span>  
  
 <span data-ttu-id="086c0-790">В C# <xref:System.String.Chars%2A> свойство является индексатором.</span><span class="sxs-lookup"><span data-stu-id="086c0-790">In C#, the <xref:System.String.Chars%2A> property is an indexer.</span></span> <span data-ttu-id="086c0-791">В Visual Basic, это свойство по умолчанию <xref:System.String> класса.</span><span class="sxs-lookup"><span data-stu-id="086c0-791">In Visual Basic, it is the default property of the <xref:System.String> class.</span></span> <span data-ttu-id="086c0-792">Каждый <xref:System.Char> доступ к объекту в строке можно получить, используя следующий код.</span><span class="sxs-lookup"><span data-stu-id="086c0-792">Each <xref:System.Char> object in the string can be accessed by using code such as the following.</span></span>  
  
 [!code-csharp[System.String.Chars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.chars/cs/chars1.cs#1)]
 [!code-vb[System.String.Chars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.chars/vb/chars1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-793">Ниже приведен пример, как можно использовать этот индексатор в подпрограмме для проверки строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-793">The following example demonstrates how you can use this indexer in a routine to validate a string.</span></span>  
  
 [!code-cpp[Uri_IsHexDigit#1](~/samples/snippets/cpp/VS_Snippets_CLR/Uri_IsHexDigit/CPP/uri_ishexdigit.cpp#1)]
 [!code-csharp[Uri_IsHexDigit#1](~/samples/snippets/csharp/VS_Snippets_CLR/Uri_IsHexDigit/CS/uri_ishexdigit.cs#1)]
 [!code-vb[Uri_IsHexDigit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Uri_IsHexDigit/VB/uri_ishexdigit.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="086c0-794">Значение <paramref name="index" /> больше или равно длине данного объекта или меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-794"><paramref name="index" /> is greater than or equal to the length of this object or less than zero.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.GetEnumerator" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Chars">
      <MemberSignature Language="C#" Value="public string this[Range range] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Chars(valuetype System.Range)" />
      <MemberSignature Language="DocId" Value="P:System.String.Chars(System.Range)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Chars(range As Range) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[Range] { System::String ^ get(Range range); };" />
      <MemberSignature Language="F#" Value="member this.Chars(Range) : string" Usage="System.string.Chars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Range" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="string.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-795">Возвращает ссылку на данный экземпляр класса <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-795">Returns a reference to this instance of <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-796">Этот экземпляр <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-796">This instance of <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-797">Возвращаемое значение не является независимая копия данного экземпляра; Это просто другое представление тех же данных.</span><span class="sxs-lookup"><span data-stu-id="086c0-797">The return value is not an independent copy of this instance; it is simply another view of the same data.</span></span> <span data-ttu-id="086c0-798">Используйте <xref:System.String.Copy%2A> или <xref:System.String.CopyTo%2A> метод для создания отдельного <xref:System.String> объект с тем же значением, что и данный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-798">Use the <xref:System.String.Copy%2A> or <xref:System.String.CopyTo%2A> method to create a separate <xref:System.String> object with the same value as this instance.</span></span>  
  
 <span data-ttu-id="086c0-799">Так как <xref:System.String.Clone%2A> метод просто возвращает существующий экземпляр строки, не имеет практического смысла для прямого вызова.</span><span class="sxs-lookup"><span data-stu-id="086c0-799">Because the <xref:System.String.Clone%2A> method simply returns the existing string instance, there is little reason to call it directly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Copy(System.String)" />
        <altmember cref="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-800">Сравнивает два указанных объекта <see cref="T:System.String" /> и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-800">Compares two specified <see cref="T:System.String" /> objects and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-801">Все перегрузки метода <xref:System.String.Compare%2A> возвращают 32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-801">All overloads of the <xref:System.String.Compare%2A> method return a 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
|<span data-ttu-id="086c0-802">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-802">Value</span></span>|<span data-ttu-id="086c0-803">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-803">Condition</span></span>|  
|-----------|---------------|  
|<span data-ttu-id="086c0-804">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-804">Less than zero</span></span>|<span data-ttu-id="086c0-805">Первую подстроку предшествует подстроке второй в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-805">The first substring precedes the second substring in the sort order.</span></span>|  
|<span data-ttu-id="086c0-806">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-806">Zero</span></span>|<span data-ttu-id="086c0-807">Подстроки появляются в той же позиции в порядке сортировки, или параметр `length` равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-807">The substrings occur in the same position in the sort order, or `length` is zero.</span></span>|  
|<span data-ttu-id="086c0-808">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-808">Greater than zero</span></span>|<span data-ttu-id="086c0-809">Первую подстроку следует за второй подстроки в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-809">The first substring follows the second substring in the sort order.</span></span>|  
  
> [!WARNING]
>  <span data-ttu-id="086c0-810">По возможности следует вызывать перегрузку <xref:System.String.Compare%2A> метод, который включает в себя <xref:System.StringComparison> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-810">Whenever possible, you should call an overload of the <xref:System.String.Compare%2A> method that includes a <xref:System.StringComparison> parameter.</span></span> <span data-ttu-id="086c0-811">Дополнительные сведения см. в разделе [Рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-811">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b9f0bf53-e2de-4116-8ce9-d4f91a1df4f7"><span data-ttu-id="086c0-812">Рекомендации по использованию строк в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="086c0-812">Best Practices for Using Strings in the .NET Framework</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string -&gt; int" Usage="System.string.Compare (strA, strB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="strB" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-813">Первая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-813">The first string to compare.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-814">Вторая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-814">The second string to compare.</span></span></param>
        <summary><span data-ttu-id="086c0-815">Сравнивает два указанных объекта <see cref="T:System.String" /> и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-815">Compares two specified <see cref="T:System.String" /> objects and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-816">32-битовое целое число со знаком, выражающее лексическое отношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-816">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-817">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-817">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-818">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-818">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-819">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-819">Less than zero</span></span> 
 </term><description><span data-ttu-id="086c0-820"><paramref name="strA" /> предшествует <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-820"><paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-821">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-821">Zero</span></span> 
 </term><description><span data-ttu-id="086c0-822"><paramref name="strA" /> занимает ту же позицию в порядке сортировки, что и объект <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-822"><paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-823">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-823">Greater than zero</span></span> 
 </term><description><span data-ttu-id="086c0-824"><paramref name="strA" /> следует за <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-824"><paramref name="strA" /> follows <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-825">Сравнение выполняется с помощью текущего языка и региональных параметров для получения сведения об особенностях языка и региональных параметров, таких как правила учета регистра и алфавитный порядок отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-825">The comparison uses the current culture to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="086c0-826">Например, языка и региональных параметров может указать, что определенные сочетания знаков рассматриваться как один символ, или прописные и строчные буквы сравниваться определенным образом, или, порядок сортировки символа зависит от символов, которые предшествуют или Перейдите по нему.</span><span class="sxs-lookup"><span data-stu-id="086c0-826">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="086c0-827">Сравнение выполняется с помощью правил сортировки слов.</span><span class="sxs-lookup"><span data-stu-id="086c0-827">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="086c0-828">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-828">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="086c0-829">При сравнении строк следует вызывать <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> метод, который необходимо явно указать тип выполняемого сравнения строк, который использует метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-829">When comparing strings, you should call the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, which requires that you explicitly specify the type of string comparison that the method uses.</span></span> <span data-ttu-id="086c0-830">Дополнительные сведения см. в разделе [Рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-830">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="086c0-831">Один или оба сравниваемых значения могут быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-831">One or both comparands can be `null`.</span></span> <span data-ttu-id="086c0-832">По определению, любая строка, включая пустую строку ("»), сравнивает больше, чем ссылкой на null; и два указателя null равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-832">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-833">Сравнение заканчивается, когда встречается неравенство или обе строки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-833">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="086c0-834">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, затем строка с символами оставшиеся считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-834">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="086c0-835">Возвращается результат последнего выполненного сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-835">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="086c0-836">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="086c0-836">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="086c0-837">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="086c0-837">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#10)]
 [!code-csharp[System.String.Compare#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#10)]
 [!code-vb[System.String.Compare#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#10)]  
  
 <span data-ttu-id="086c0-838">Сравните имя пути «файл», используя порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-838">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="086c0-839">Правильный код для этого выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-839">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#11)]
 [!code-csharp[System.String.Compare#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#11)]
 [!code-vb[System.String.Compare#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#11)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-840">В следующем примере вызывается <xref:System.String.Compare%28System.String%2CSystem.String%29> метод для сравнения трех наборов строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-840">The following example calls the <xref:System.String.Compare%28System.String%2CSystem.String%29> method to compare three sets of strings.</span></span>  
  
 [!code-cpp[System.String.Compare#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/compare02.cpp#18)]
 [!code-csharp[System.String.Compare#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare02.cs#18)]
 [!code-vb[System.String.Compare#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare02.vb#18)]  
  
 <span data-ttu-id="086c0-841">В следующем примере `ReverseStringComparer` класс демонстрирует, как можно сравнить две строки с <xref:System.String.Compare%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-841">In the following example, the `ReverseStringComparer` class demonstrates how you can evaluate two strings with the <xref:System.String.Compare%2A> method.</span></span>  
  
 [!code-cpp[ArrayList#7](~/samples/snippets/cpp/VS_Snippets_CLR/ArrayList/CPP/ArrayListSample.cpp#7)]
 [!code-csharp[ArrayList#7](~/samples/snippets/csharp/VS_Snippets_CLR/ArrayList/CS/ArrayListSample.cs#7)]
 [!code-vb[ArrayList#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ArrayList/VB/ArrayListSample.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-842">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-842">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-843"><see cref="M:System.String.Compare(System.String,System.String)" /> Метод не учитывает такие символы, когда он выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-843">The <see cref="M:System.String.Compare(System.String,System.String)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-844">Например, если следующий код выполняется на [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, сравнение с учетом языка и региональных параметров «Animal» с «ani использовать» (с помощью мягкий перенос или 00AD U +) указывает, что две строки равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-844">For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a culture-sensitive comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent.</span></span>  
  
<span data-ttu-id="086c0-845">[!code-csharp[System.String.Compare#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare21.cs#21)] [!code-vb[System.String.Compare#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare21.vb#21)]</span><span class="sxs-lookup"><span data-stu-id="086c0-845">[!code-csharp[System.String.Compare#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare21.cs#21)] [!code-vb[System.String.Compare#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare21.vb#21)]</span></span> 
<span data-ttu-id="086c0-846">Для распознавания игнорируемые символы в сравнении строк, вызвать <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> метод и задать значение либо <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для `comparisonType` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-846">To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the `comparisonType` parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String, ignoreCase As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * bool -&gt; int" Usage="System.string.Compare (strA, strB, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="strB" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-847">Первая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-847">The first string to compare.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-848">Вторая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-848">The second string to compare.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="086c0-849">Значение <see langword="true" />, чтобы не учитывать регистр при сравнении; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-849"><see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="086c0-850">Сравнивает два указанных объекта <see cref="T:System.String" /> (с учетом или без учета регистра) и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-850">Compares two specified <see cref="T:System.String" /> objects, ignoring or honoring their case, and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-851">32-битовое целое число со знаком, выражающее лексическое отношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-851">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-852">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-852">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-853">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-853">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-854">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-854">Less than zero</span></span> 
 </term><description><span data-ttu-id="086c0-855"><paramref name="strA" /> предшествует <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-855"><paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-856">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-856">Zero</span></span> 
 </term><description><span data-ttu-id="086c0-857"><paramref name="strA" /> занимает ту же позицию в порядке сортировки, что и объект <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-857"><paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-858">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-858">Greater than zero</span></span> 
 </term><description><span data-ttu-id="086c0-859"><paramref name="strA" /> следует за <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-859"><paramref name="strA" /> follows <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-860">Сравнение выполняется с помощью текущего языка и региональных параметров для получения сведения об особенностях языка и региональных параметров, таких как правила учета регистра и алфавитный порядок отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-860">The comparison uses the current culture to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="086c0-861">Например, языка и региональных параметров может указать, что определенные сочетания знаков рассматриваться как один символ, или прописные и строчные буквы сравниваться определенным образом, или, порядок сортировки символа зависит от символов, которые предшествуют или Перейдите по нему.</span><span class="sxs-lookup"><span data-stu-id="086c0-861">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="086c0-862">Сравнение выполняется с помощью правил сортировки слов.</span><span class="sxs-lookup"><span data-stu-id="086c0-862">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="086c0-863">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-863">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="086c0-864">При сравнении строк следует вызывать <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> метод, который необходимо явно указать тип выполняемого сравнения строк, который использует метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-864">When comparing strings, you should call the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, which requires that you explicitly specify the type of string comparison that the method uses.</span></span> <span data-ttu-id="086c0-865">Дополнительные сведения см. в разделе [Рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-865">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="086c0-866">Один или оба сравниваемых значения могут быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-866">One or both comparands can be `null`.</span></span> <span data-ttu-id="086c0-867">По определению, любая строка, включая пустую строку ("»), сравнивает больше, чем ссылкой на null; и два указателя null равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-867">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-868">Сравнение заканчивается, когда встречается неравенство или обе строки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-868">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="086c0-869">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, затем строка с символами оставшиеся считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-869">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="086c0-870">Возвращается результат последнего выполненного сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-870">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="086c0-871">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="086c0-871">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="086c0-872">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="086c0-872">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#12)]
 [!code-csharp[System.String.Compare#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#12)]
 [!code-vb[System.String.Compare#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#12)]  
  
 <span data-ttu-id="086c0-873">Сравните имя пути «файл», используя порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-873">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="086c0-874">Правильный код для этого выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-874">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#13)]
 [!code-csharp[System.String.Compare#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#13)]
 [!code-vb[System.String.Compare#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-875">В следующем примере показано, что <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29> метод равнозначно использованию <xref:System.String.ToUpper%2A> или <xref:System.String.ToLower%2A> при сравнении строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-875">The following example demonstrates that the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29> method is equivalent to using <xref:System.String.ToUpper%2A> or <xref:System.String.ToLower%2A> when comparing strings.</span></span>  
  
 [!code-cpp[System.String.Compare#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/compare02.cpp#18)]
 [!code-csharp[System.String.Compare#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare02.cs#18)]
 [!code-vb[System.String.Compare#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare02.vb#18)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-876">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-876">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-877"><see cref="M:System.String.Compare(System.String,System.String,System.Boolean)" /> Метод не учитывает такие символы, когда он выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-877">The <see cref="M:System.String.Compare(System.String,System.String,System.Boolean)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-878">Например, если следующий код выполняется на [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, культуры, без учета регистра сравнение «animal» с «Ani использовать» (с помощью мягкий перенос или 00AD U +) указывает, что две строки равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-878">For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a culture-sensitive, case-insensitive comparison of "animal" with "Ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent.</span></span>  
  
<span data-ttu-id="086c0-879">[!code-csharp[System.String.Compare#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare22.cs#22)] [!code-vb[System.String.Compare#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare22.vb#22)]</span><span class="sxs-lookup"><span data-stu-id="086c0-879">[!code-csharp[System.String.Compare#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare22.cs#22)] [!code-vb[System.String.Compare#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare22.vb#22)]</span></span> 
<span data-ttu-id="086c0-880">Для распознавания игнорируемые символы в сравнении строк, вызвать <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> метод и задать значение либо <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-880">To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * StringComparison -&gt; int" Usage="System.string.Compare (strA, strB, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="strB" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-881">Первая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-881">The first string to compare.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-882">Вторая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-882">The second string to compare.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-883">Одно из значений перечисления, определяющее используемые при сравнении правила.</span><span class="sxs-lookup"><span data-stu-id="086c0-883">One of the enumeration values that specifies the rules to use in the comparison.</span></span></param>
        <summary><span data-ttu-id="086c0-884">Сравнивает два указанных объекта <see cref="T:System.String" /> с использованием заданных правил и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-884">Compares two specified <see cref="T:System.String" /> objects using the specified rules, and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-885">32-битовое целое число со знаком, выражающее лексическое отношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-885">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-886">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-886">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-887">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-887">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-888">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-888">Less than zero</span></span> 
 </term><description><span data-ttu-id="086c0-889"><paramref name="strA" /> предшествует <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-889"><paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-890">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-890">Zero</span></span> 
 </term><description><span data-ttu-id="086c0-891"><paramref name="strA" /> занимает ту же позицию в порядке сортировки, что и объект <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-891"><paramref name="strA" /> is in the same position as <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-892">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-892">Greater than zero</span></span> 
 </term><description><span data-ttu-id="086c0-893"><paramref name="strA" /> следует за <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-893"><paramref name="strA" /> follows <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-894">`comparisonType` Задаёт ли при сравнении следует использовать текущие или инвариантные язык и региональные параметры, учитывает или без учета регистра сравниваемых объектов, а использовать word (язык и региональные параметры с учетом) или правила сортировки по порядковому номеру (без учета языка и региональных параметров).</span><span class="sxs-lookup"><span data-stu-id="086c0-894">The `comparisonType` parameter indicates whether the comparison should use the current or invariant culture, honor or ignore the case of the comparands, or use word (culture-sensitive) or ordinal (culture-insensitive) sort rules.</span></span>  
  
 <span data-ttu-id="086c0-895">Один или оба сравниваемых значения могут быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-895">One or both comparands can be `null`.</span></span> <span data-ttu-id="086c0-896">По определению, любая строка, включая пустую строку ("»), сравнивает больше, чем ссылкой на null; и два указателя null равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-896">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-897">Сравнение заканчивается, когда встречается неравенство или обе строки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-897">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="086c0-898">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, строка с символами оставшиеся считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-898">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, the string with remaining characters is considered greater.</span></span> <span data-ttu-id="086c0-899">Возвращается результат последнего выполненного сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-899">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="086c0-900">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="086c0-900">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="086c0-901">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="086c0-901">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#16)]
 [!code-csharp[System.String.Compare#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#16)]
 [!code-vb[System.String.Compare#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#16)]  
  
 <span data-ttu-id="086c0-902">Сравните имя пути «файл», используя порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-902">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="086c0-903">Правильный код для этого выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-903">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#17)]
 [!code-csharp[System.String.Compare#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#17)]
 [!code-vb[System.String.Compare#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#17)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-904">В следующем примере сравниваются три версии буквы «I».</span><span class="sxs-lookup"><span data-stu-id="086c0-904">The following example compares three versions of the letter "I".</span></span> <span data-ttu-id="086c0-905">Результаты зависят от выбора языка и региональных параметров, учитывается ли регистр и выполняется ли порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-905">The results are affected by the choice of culture, whether case is ignored, and whether an ordinal comparison is performed.</span></span>  
  
 [!code-cpp[System.String.CompareCmp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.CompareCmp/cpp/cmpcmp.cpp#1)]
 [!code-csharp[System.String.CompareCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.CompareCmp/cs/cmpcmp.cs#1)]
 [!code-vb[System.String.CompareCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.CompareCmp/vb/cmpcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-906"><paramref name="comparisonType" /> не является значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-906"><paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="086c0-907">Тип <see cref="T:System.StringComparison" /> не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="086c0-907"><see cref="T:System.StringComparison" /> is not supported.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-908">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-908">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-909"><see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> Метод не учитывает такие символы, когда он выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-909">The <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-910">Для распознавания игнорируемые символы в сравнение, укажите в качестве параметра <see cref="F:System.StringComparison.Ordinal" /> или <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> для <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-910">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String, ignoreCase As Boolean, culture As CultureInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * bool * System.Globalization.CultureInfo -&gt; int" Usage="System.string.Compare (strA, strB, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="strB" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-911">Первая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-911">The first string to compare.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-912">Вторая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-912">The second string to compare.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="086c0-913">Значение <see langword="true" />, чтобы не учитывать регистр при сравнении; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-913"><see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span></span></param>
        <param name="culture"><span data-ttu-id="086c0-914">Объект, предоставляющий сведения об особенностях сравнения, определяемых языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-914">An object that supplies culture-specific comparison information.</span></span></param>
        <summary><span data-ttu-id="086c0-915">Сравнивает два указанных объекта <see cref="T:System.String" /> (с учетом или без учета регистра), используя сведения о языке и региональных параметрах, и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-915">Compares two specified <see cref="T:System.String" /> objects, ignoring or honoring their case, and using culture-specific information to influence the comparison, and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-916">32-битовое целое число со знаком, выражающее лексическое отношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-916">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-917">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-917">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-918">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-918">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-919">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-919">Less than zero</span></span> 
 </term><description><span data-ttu-id="086c0-920"><paramref name="strA" /> предшествует <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-920"><paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-921">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-921">Zero</span></span> 
 </term><description><span data-ttu-id="086c0-922"><paramref name="strA" /> занимает ту же позицию в порядке сортировки, что и объект <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-922"><paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-923">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-923">Greater than zero</span></span> 
 </term><description><span data-ttu-id="086c0-924"><paramref name="strA" /> следует за <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-924"><paramref name="strA" /> follows <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-925">Сравнение выполняется с помощью `culture` параметр, чтобы получить сведения об особенностях языка и региональных параметров, таких как правила учета регистра и алфавитный порядок отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-925">The comparison uses the `culture` parameter to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="086c0-926">Например, языка и региональных параметров может указать, что определенные сочетания знаков рассматриваться как один символ, или прописные и строчные буквы сравниваться определенным образом, или, порядок сортировки символа зависит от символов, которые предшествуют или Перейдите по нему.</span><span class="sxs-lookup"><span data-stu-id="086c0-926">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="086c0-927">Сравнение выполняется с помощью правил сортировки слов.</span><span class="sxs-lookup"><span data-stu-id="086c0-927">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="086c0-928">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-928">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="086c0-929">Один или оба сравниваемых значения могут быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-929">One or both comparands can be `null`.</span></span> <span data-ttu-id="086c0-930">По определению, любая строка, включая пустую строку ("»), сравнивает больше, чем ссылкой на null; и два указателя null равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-930">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-931">Сравнение заканчивается, когда встречается неравенство или обе строки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-931">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="086c0-932">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, затем строка с символами оставшиеся считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-932">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="086c0-933">Возвращается результат последнего выполненного сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-933">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="086c0-934">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="086c0-934">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="086c0-935">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="086c0-935">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#14)]
 [!code-csharp[System.String.Compare#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#14)]
 [!code-vb[System.String.Compare#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#14)]  
  
 <span data-ttu-id="086c0-936">Сравните имя пути «файл», используя порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-936">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="086c0-937">Правильный код для этого выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-937">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#15)]
 [!code-csharp[System.String.Compare#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#15)]
 [!code-vb[System.String.Compare#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#15)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-938">В следующем примере показано, как язык и региональные параметры могут повлиять на сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-938">The following example demonstrates how culture can affect a comparison.</span></span> <span data-ttu-id="086c0-939">Чешский — Чешская Республика языка и региональных параметров «ch» при один символ, который больше, чем «d».</span><span class="sxs-lookup"><span data-stu-id="086c0-939">In Czech - Czech Republic culture, "ch" is a single character that is greater than "d".</span></span> <span data-ttu-id="086c0-940">Тем не менее в английский — США языка и региональных параметров «ch» состоит из двух символов, и «c» меньше, чем «d».</span><span class="sxs-lookup"><span data-stu-id="086c0-940">However, in English - United States culture, "ch" consists of two characters, and "c" is less than "d".</span></span>  
  
 [!code-cpp[string.comp4#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.comp4/CPP/string.comp4.cpp#1)]
 [!code-csharp[string.comp4#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.comp4/CS/string.comp4.cs#1)]
 [!code-vb[string.comp4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.comp4/VB/string.comp4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-941"><paramref name="culture" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-941"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-942">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-942">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-943"><see cref="M:System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" /> Метод не учитывает такие символы, когда он выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-943">The <see cref="M:System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-944">Например, если следующий код выполняется на [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, без учета регистра сравнение «animal» с «Ani использовать» (с помощью мягкий перенос или U + 00AD) с помощью инвариантный язык и региональные параметры указывает, что две строки равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-944">For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a case-insensitive comparison of "animal" with "Ani-mal" (using a soft hyphen, or U+00AD) using the invariant culture indicates that the two strings are equivalent.</span></span>  
  
<span data-ttu-id="086c0-945">[!code-csharp[System.String.Compare#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare23.cs#23)] [!code-vb[System.String.Compare#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare23.vb#23)]</span><span class="sxs-lookup"><span data-stu-id="086c0-945">[!code-csharp[System.String.Compare#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare23.cs#23)] [!code-vb[System.String.Compare#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare23.vb#23)]</span></span> 
<span data-ttu-id="086c0-946">Для распознавания игнорируемые символы в сравнении строк, вызвать <see cref="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> метод и задать значение либо <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-946">To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB, System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB, class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String, culture As CultureInfo, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB, System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; int" Usage="System.string.Compare (strA, strB, culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="strB" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-947">Первая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-947">The first string to compare.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-948">Вторая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-948">The second string to compare.</span></span></param>
        <param name="culture"><span data-ttu-id="086c0-949">Язык и региональные параметры, которые предоставляют сведения об особенностях сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-949">The culture that supplies culture-specific comparison information.</span></span></param>
        <param name="options"><span data-ttu-id="086c0-950">Параметры, которые используются во время сравнения (например, игнорирование регистра или символов).</span><span class="sxs-lookup"><span data-stu-id="086c0-950">Options to use when performing the comparison (such as ignoring case or symbols).</span></span></param>
        <summary><span data-ttu-id="086c0-951">Сравнивает два заданных объекта <see cref="T:System.String" />, используя указанные параметры сравнения и сведения о языке и региональных параметрах, которые влияют на сравнение, и возвращает целое число, показывающее связь между двумя строками в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-951">Compares two specified <see cref="T:System.String" /> objects using the specified comparison options and culture-specific information to influence the comparison, and returns an integer that indicates the relationship of the two strings to each other in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-952">32-разрядное целое число со знаком, которое указывает на лексические отношения между <paramref name="strA" /> и <paramref name="strB" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="086c0-952">A 32-bit signed integer that indicates the lexical relationship between <paramref name="strA" /> and <paramref name="strB" />, as shown in the following table</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="086c0-953">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-953">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-954">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-954">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-955">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-955">Less than zero</span></span> 
 </term><description><span data-ttu-id="086c0-956"><paramref name="strA" /> предшествует <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-956"><paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-957">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-957">Zero</span></span> 
 </term><description><span data-ttu-id="086c0-958"><paramref name="strA" /> занимает ту же позицию в порядке сортировки, что и объект <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-958"><paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-959">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-959">Greater than zero</span></span> 
 </term><description><span data-ttu-id="086c0-960"><paramref name="strA" /> следует за <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-960"><paramref name="strA" /> follows <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-961">Сравнение выполняется с помощью `culture` параметр для получения сведений о культуре, такие как правила определения регистра и алфавитный порядок отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-961">The comparison uses the `culture` parameter to obtain culture-specific information, such as casing rules and the alphabetical order of individual characters.</span></span> <span data-ttu-id="086c0-962">Например, определенного языка и региональных параметров указать, что определенные сочетания знаков рассматриваться как один символ, что определенным образом сравниваться прописные и строчные буквы, или, порядок сортировки символа зависит от символов, Введите перед или после него.</span><span class="sxs-lookup"><span data-stu-id="086c0-962">For example, a particular culture could specify that certain combinations of characters be treated as a single character, that uppercase and lowercase characters be compared in a particular way, or that the sort order of a character depends on the characters that precede or follow it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086c0-963"><xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> Метод предназначен главным образом для использования в сортировке или операции сортировки в алфавитном порядке.</span><span class="sxs-lookup"><span data-stu-id="086c0-963">The <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> method is designed primarily for use in sorting or alphabetizing operations.</span></span> <span data-ttu-id="086c0-964">Он не должен использоваться, при основной целью вызова метода для определения эквивалентности двух строк (то есть, при вызове метода предназначена для проверки на возвращаемое значение 0).</span><span class="sxs-lookup"><span data-stu-id="086c0-964">It should not be used when the primary purpose of the method call is to determine whether two strings are equivalent (that is, when the purpose of the method call is to test for a return value of zero).</span></span> <span data-ttu-id="086c0-965">Чтобы определить, эквивалентны ли две строки, вызовите <xref:System.String.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-965">To determine whether two strings are equivalent, call the <xref:System.String.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="086c0-966">Можно дополнительно указать сравнения с `options` параметр, который состоит из одного или нескольких членов из <xref:System.Globalization.CompareOptions> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-966">The comparison can be further specified by the `options` parameter, which consists of one or more members of the <xref:System.Globalization.CompareOptions> enumeration.</span></span> <span data-ttu-id="086c0-967">Тем не менее, так как этот метод предназначен для проведения сравнение строк с учетом языка и региональных параметров, <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> и <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> значения не оказывают влияния.</span><span class="sxs-lookup"><span data-stu-id="086c0-967">However, because the purpose of this method is to conduct a culture-sensitive string comparison, the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> and <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> values have no effect.</span></span>  
  
 <span data-ttu-id="086c0-968">Один или два сравниваемых значения могут быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-968">Either or both comparands can be `null`.</span></span> <span data-ttu-id="086c0-969">По определению, любая строка, включая <xref:System.String.Empty?displayProperty=nameWithType>, сравнивает больше, чем пустая ссылка, а две пустые ссылки равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-969">By definition, any string, including <xref:System.String.Empty?displayProperty=nameWithType>, compares greater than a null reference, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-970">Сравнение заканчивается, когда встречается неравенство или обе строки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-970">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="086c0-971">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, строка с остальные символы считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-971">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, the string with the remaining characters is considered greater.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-972">В следующем примере сравниваются две строки тремя разными способами: с помощью лингвистического сравнения для региональных параметров en US; с помощью лингвистического сравнения с учетом регистра для региональных параметров en US; и с помощью порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-972">The following example compares two strings in three different ways: using linguistic comparison for the en-US culture; using linguistic case-sensitive comparison for the en-US culture; and using an ordinal comparison.</span></span> <span data-ttu-id="086c0-973">Здесь показано, как три метода сравнения дают три разные результаты.</span><span class="sxs-lookup"><span data-stu-id="086c0-973">It illustrates how the three methods of comparison produce three different results.</span></span>  
  
 [!code-cpp[System.String.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/example.cpp#1)]
 [!code-csharp[System.String.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/Example.cs#1)]
 [!code-vb[System.String.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-974"><paramref name="options" /> не является значением <see cref="T:System.Globalization.CompareOptions" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-974"><paramref name="options" /> is not a <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-975"><paramref name="culture" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-975"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-976">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-976">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-977"><see cref="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> Метод не учитывает такие символы, когда он выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-977">The <see cref="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-978">Для распознавания игнорируемые символы в сравнение, укажите в качестве параметра <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-978">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="Overload:System.String.CompareOrdinal" />
        <altmember cref="Overload:System.String.CompareTo" />
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="indexA" Type="System.Int32" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="indexB" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-979">Первая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-979">The first string to use in the comparison.</span></span></param>
        <param name="indexA"><span data-ttu-id="086c0-980">Позиция подстроки в <paramref name="strA" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-980">The position of the substring within <paramref name="strA" />.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-981">Вторая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-981">The second string to use in the comparison.</span></span></param>
        <param name="indexB"><span data-ttu-id="086c0-982">Позиция подстроки в <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-982">The position of the substring within <paramref name="strB" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-983">Максимальное число сравниваемых знаков в подстроках.</span><span class="sxs-lookup"><span data-stu-id="086c0-983">The maximum number of characters in the substrings to compare.</span></span></param>
        <summary><span data-ttu-id="086c0-984">Сравнивает подстроки двух указанных объектов <see cref="T:System.String" /> и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-984">Compares substrings of two specified <see cref="T:System.String" /> objects and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-985">32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-985">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-986">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-986">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-987">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-987">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-988">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-988">Less than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-989">Подстрока в <paramref name="strA" /> предшествует подстроке в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-989">The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-990">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-990">Zero</span></span> 
 </term><description> <span data-ttu-id="086c0-991">Подстроки появляются в той же позиции в порядке сортировки, или параметр <paramref name="length" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-991">The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-992">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-992">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-993">Подстрока в <paramref name="strA" /> следует за подстрокой в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-993">The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-994">Запуск подстроках в `strA` в `indexA` и в `strB` в `indexB`.</span><span class="sxs-lookup"><span data-stu-id="086c0-994">The substrings to compare start in `strA` at `indexA` and in `strB` at `indexB`.</span></span> <span data-ttu-id="086c0-995">Оба `indexA` и `indexB` являются отсчитываемый от нуля, то есть первый символ в `strA` и `strB` равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-995">Both `indexA` and `indexB` are zero-based; that is, the first character in `strA` and `strB` is at position zero.</span></span> <span data-ttu-id="086c0-996">Длина первой подстроки равна длине `strA` минус `indexA` плюс один.</span><span class="sxs-lookup"><span data-stu-id="086c0-996">The length of the first substring is equal to the length of `strA` minus `indexA` plus one.</span></span> <span data-ttu-id="086c0-997">Длина второй подстроки равна длине `strB` минус `indexB` плюс один.</span><span class="sxs-lookup"><span data-stu-id="086c0-997">The length of the second substring is equal to the length of `strB` minus `indexB` plus one.</span></span>  
  
 <span data-ttu-id="086c0-998">Число сравниваемых символов равно меньшему из длин подстрок и `length`.</span><span class="sxs-lookup"><span data-stu-id="086c0-998">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="086c0-999">`indexA`, `indexB`, И `length` параметры должны быть неотрицательными.</span><span class="sxs-lookup"><span data-stu-id="086c0-999">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="086c0-1000">Сравнение выполняется с помощью текущего языка и региональных параметров для получения сведения об особенностях языка и региональных параметров, таких как правила учета регистра и алфавитный порядок отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1000">The comparison uses the current culture to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="086c0-1001">Например, языка и региональных параметров может указать, что определенные сочетания знаков рассматриваться как один символ, или прописные и строчные буквы сравниваться определенным образом, или, порядок сортировки символа зависит от символов, которые предшествуют или Перейдите по нему.</span><span class="sxs-lookup"><span data-stu-id="086c0-1001">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="086c0-1002">Сравнение выполняется с помощью правил сортировки слов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1002">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="086c0-1003">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1003">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="086c0-1004">При сравнении строк следует вызывать <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> метод, который необходимо явно указать тип выполняемого сравнения строк, который использует метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1004">When comparing strings, you should call the <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> method, which requires that you explicitly specify the type of string comparison that the method uses.</span></span> <span data-ttu-id="086c0-1005">Дополнительные сведения см. в разделе [Рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1005">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="086c0-1006">Один или оба сравниваемых значения могут быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1006">One or both comparands can be `null`.</span></span> <span data-ttu-id="086c0-1007">По определению, любая строка, включая пустую строку ("»), сравнивает больше, чем ссылкой на null; и два указателя null равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-1007">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-1008">Сравнение заканчивается, когда встречается неравенство или обоих подстроки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1008">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="086c0-1009">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, затем строка с символами оставшиеся считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-1009">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="086c0-1010">Возвращается результат последнего выполненного сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1010">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="086c0-1011">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="086c0-1011">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="086c0-1012">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="086c0-1012">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#2)]
 [!code-csharp[System.String.Compare#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#2)]
 [!code-vb[System.String.Compare#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#2)]  
  
 <span data-ttu-id="086c0-1013">Сравните имя пути «файл», используя порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-1013">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="086c0-1014">Правильный код для этого выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-1014">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#3)]
 [!code-csharp[System.String.Compare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#3)]
 [!code-vb[System.String.Compare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1015">В следующем примере сравниваются две подстроки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1015">The following example compares two substrings.</span></span>  
  
 [!code-cpp[string.compare3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compare3/CPP/comp3.cpp#1)]
 [!code-csharp[string.compare3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compare3/CS/comp3.cs#1)]
 [!code-vb[string.compare3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compare3/VB/comp3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-1016">Значение <paramref name="indexA" /> больше значения <paramref name="strA" /><see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1016"><paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1017">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1017">-or-</span></span> 
 <span data-ttu-id="086c0-1018">Значение <paramref name="indexB" /> больше значения <paramref name="strB" /><see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1018"><paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1019">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1019">-or-</span></span> 
 <span data-ttu-id="086c0-1020"><paramref name="indexA" />, <paramref name="indexB" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-1020"><paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-1021">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1021">-or-</span></span> 
<span data-ttu-id="086c0-1022"><paramref name="indexA" /> или <paramref name="indexB" /> равно <see langword="null" />, а <paramref name="length" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1022">Either <paramref name="indexA" /> or <paramref name="indexB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1023">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-1023">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-1024"><see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" /> Метод не учитывает эти символы при выполнении лингвистического или зависящих от языка и региональных параметров сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1024">The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-1025">Для распознавания игнорируемые символы в сравнение, вызовите <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> метод и указать значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1025">To recognize ignorable characters in your comparison, call the <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer, ignoreCase As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int * bool -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="indexA" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="strB" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="indexB" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="length" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-1026">Первая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1026">The first string to use in the comparison.</span></span></param>
        <param name="indexA"><span data-ttu-id="086c0-1027">Позиция подстроки в <paramref name="strA" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1027">The position of the substring within <paramref name="strA" />.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-1028">Вторая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1028">The second string to use in the comparison.</span></span></param>
        <param name="indexB"><span data-ttu-id="086c0-1029">Позиция подстроки в <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1029">The position of the substring within <paramref name="strB" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-1030">Максимальное число сравниваемых знаков в подстроках.</span><span class="sxs-lookup"><span data-stu-id="086c0-1030">The maximum number of characters in the substrings to compare.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="086c0-1031">Значение <see langword="true" />, чтобы не учитывать регистр при сравнении; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1031"><see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="086c0-1032">Сравнивает подстроки двух заданных объектов <see cref="T:System.String" /> (с учетом или без учета регистра) и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1032">Compares substrings of two specified <see cref="T:System.String" /> objects, ignoring or honoring their case, and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-1033">32-битовое целое число со знаком, выражающее лексическое отношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-1033">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-1034">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-1034">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-1035">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-1035">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-1036">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1036">Less than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1037">Подстрока в <paramref name="strA" /> предшествует подстроке в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1037">The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1038">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-1038">Zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1039">Подстроки появляются в той же позиции в порядке сортировки, или параметр <paramref name="length" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1039">The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1040">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1040">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1041">Подстрока в <paramref name="strA" /> следует за подстрокой в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1041">The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1042">Запуск подстроках в `strA` в `indexA`и в `strB` в `indexB`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1042">The substrings to compare start in `strA` at `indexA`, and in `strB` at `indexB`.</span></span> <span data-ttu-id="086c0-1043">Оба `indexA` и `indexB` являются отсчитываемый от нуля, то есть первый символ в `strA` и `strB` равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1043">Both `indexA` and `indexB` are zero-based; that is, the first character in `strA` and `strB` is at position zero.</span></span> <span data-ttu-id="086c0-1044">Длина первой подстроки равна длине `strA` минус `indexA` плюс один.</span><span class="sxs-lookup"><span data-stu-id="086c0-1044">The length of the first substring is equal to the length of `strA` minus `indexA` plus one.</span></span> <span data-ttu-id="086c0-1045">Длина второй подстроки равна длине `strB` минус `indexB` плюс один.</span><span class="sxs-lookup"><span data-stu-id="086c0-1045">The length of the second substring is equal to the length of `strB` minus `indexB` plus one.</span></span>  
  
 <span data-ttu-id="086c0-1046">Число сравниваемых символов равно меньшему из длин подстрок и `length`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1046">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="086c0-1047">`indexA`, `indexB`, И `length` параметры должны быть неотрицательными.</span><span class="sxs-lookup"><span data-stu-id="086c0-1047">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="086c0-1048">Сравнение выполняется с помощью текущего языка и региональных параметров для получения сведения об особенностях языка и региональных параметров, таких как правила учета регистра и алфавитный порядок отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1048">The comparison uses the current culture to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="086c0-1049">Например, языка и региональных параметров может указать, что определенные сочетания знаков рассматриваться как один символ, или прописные и строчные буквы сравниваться определенным образом, или, порядок сортировки символа зависит от символов, которые предшествуют или Перейдите по нему.</span><span class="sxs-lookup"><span data-stu-id="086c0-1049">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="086c0-1050">Сравнение выполняется с помощью правил сортировки слов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1050">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="086c0-1051">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1051">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="086c0-1052">При сравнении строк следует вызывать <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> метод, который необходимо явно указать тип выполняемого сравнения строк, который использует метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1052">When comparing strings, you should call the <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> method, which requires that you explicitly specify the type of string comparison that the method uses.</span></span> <span data-ttu-id="086c0-1053">Дополнительные сведения см. в разделе [Рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1053">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="086c0-1054">Один или оба сравниваемых значения могут быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1054">One or both comparands can be `null`.</span></span> <span data-ttu-id="086c0-1055">По определению, любая строка, включая пустую строку ("»), сравнивает больше, чем ссылкой на null; и два указателя null равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-1055">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-1056">Сравнение заканчивается, когда встречается неравенство или обоих подстроки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1056">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="086c0-1057">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, затем строка с символами оставшиеся считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-1057">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="086c0-1058">Возвращается результат последнего выполненного сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1058">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="086c0-1059">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="086c0-1059">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="086c0-1060">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="086c0-1060">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#4)]
 [!code-csharp[System.String.Compare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#4)]
 [!code-vb[System.String.Compare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#4)]  
  
 <span data-ttu-id="086c0-1061">Имя пути должно сравниваться инвариантным способом.</span><span class="sxs-lookup"><span data-stu-id="086c0-1061">The path name needs to be compared in an invariant manner.</span></span> <span data-ttu-id="086c0-1062">Правильный код для этого выглядит следующим образом.</span><span class="sxs-lookup"><span data-stu-id="086c0-1062">The correct code to do this is as follows.</span></span>  
  
 [!code-cpp[System.String.Compare#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#5)]
 [!code-csharp[System.String.Compare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#5)]
 [!code-vb[System.String.Compare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1063">В следующем примере выполняется два сравнения двух подстрок, которые различаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="086c0-1063">The following example performs two comparisons of two substrings that only differ in case.</span></span> <span data-ttu-id="086c0-1064">Первое сравнение не учитывает регистр, а второй — учитывается.</span><span class="sxs-lookup"><span data-stu-id="086c0-1064">The first comparison ignores case and the second comparison considers case.</span></span>  
  
 [!code-cpp[string.compare4#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compare4/CPP/comp4.cpp#1)]
 [!code-csharp[string.compare4#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compare4/CS/comp4.cs#1)]
 [!code-vb[string.compare4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compare4/VB/comp4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-1065">Значение <paramref name="indexA" /> больше значения <paramref name="strA" /><see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1065"><paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1066">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1066">-or-</span></span> 
 <span data-ttu-id="086c0-1067">Значение <paramref name="indexB" /> больше значения <paramref name="strB" /><see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1067"><paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1068">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1068">-or-</span></span> 
 <span data-ttu-id="086c0-1069"><paramref name="indexA" />, <paramref name="indexB" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-1069"><paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-1070">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1070">-or-</span></span> 
<span data-ttu-id="086c0-1071"><paramref name="indexA" /> или <paramref name="indexB" /> равно <see langword="null" />, а <paramref name="length" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1071">Either <paramref name="indexA" /> or <paramref name="indexB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1072">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-1072">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-1073"><see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" /> Метод не учитывает эти символы при выполнении лингвистического или зависящих от языка и региональных параметров сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1073">The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-1074">Для распознавания игнорируемые символы в сравнение, вызовите <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> метод и указать значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1074">To recognize ignorable characters in your comparison, call the <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int * StringComparison -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indexA" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="strB" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indexB" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-1075">Первая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1075">The first string to use in the comparison.</span></span></param>
        <param name="indexA"><span data-ttu-id="086c0-1076">Позиция подстроки в <paramref name="strA" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1076">The position of the substring within <paramref name="strA" />.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-1077">Вторая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1077">The second string to use in the comparison.</span></span></param>
        <param name="indexB"><span data-ttu-id="086c0-1078">Позиция подстроки в <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1078">The position of the substring within <paramref name="strB" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-1079">Максимальное число сравниваемых знаков в подстроках.</span><span class="sxs-lookup"><span data-stu-id="086c0-1079">The maximum number of characters in the substrings to compare.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-1080">Одно из значений перечисления, определяющее используемые при сравнении правила.</span><span class="sxs-lookup"><span data-stu-id="086c0-1080">One of the enumeration values that specifies the rules to use in the comparison.</span></span></param>
        <summary><span data-ttu-id="086c0-1081">Сравнивает подстроки двух указанных объектов <see cref="T:System.String" /> с использованием заданных правил и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1081">Compares substrings of two specified <see cref="T:System.String" /> objects using the specified rules, and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-1082">32-битовое целое число со знаком, выражающее лексическое отношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-1082">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-1083">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-1083">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-1084">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-1084">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-1085">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1085">Less than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1086">Подстрока в <paramref name="strA" /> предшествует подстроке в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1086">The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1087">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-1087">Zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1088">Подстроки появляются в одной и той же позиции в порядке сортировки, или параметр <paramref name="length" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1088">The substrings occur in the same position in the sort order, or the <paramref name="length" /> parameter is zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1089">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1089">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1090">Подстрока в <paramref name="strA" /> следует за подстрокой в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1090">The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1091">Запуск подстроках в `strA` в `indexA` и в `strB` в `indexB`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1091">The substrings to compare start in `strA` at `indexA` and in `strB` at `indexB`.</span></span> <span data-ttu-id="086c0-1092">Оба `indexA` и `indexB` являются отсчитываемый от нуля, то есть первый символ в `strA` и `strB` — в позицию ноль, размещает один.</span><span class="sxs-lookup"><span data-stu-id="086c0-1092">Both `indexA` and `indexB` are zero-based; that is, the first character in `strA` and `strB` is at position zero, not position one.</span></span> <span data-ttu-id="086c0-1093">Длина первой подстроки равна длине `strA` минус `indexA` плюс один.</span><span class="sxs-lookup"><span data-stu-id="086c0-1093">The length of the first substring is equal to the length of `strA` minus `indexA` plus one.</span></span> <span data-ttu-id="086c0-1094">Длина второй подстроки равна длине `strB` минус `indexB` плюс один.</span><span class="sxs-lookup"><span data-stu-id="086c0-1094">The length of the second substring is equal to the length of `strB` minus `indexB` plus one.</span></span>  
  
 <span data-ttu-id="086c0-1095">Число сравниваемых символов равно меньшему из длин подстрок и `length`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1095">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="086c0-1096">`indexA`, `indexB`, И `length` параметры должны быть неотрицательными.</span><span class="sxs-lookup"><span data-stu-id="086c0-1096">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="086c0-1097">`comparisonType` Задаёт ли при сравнении следует использовать текущие или инвариантные язык и региональные параметры, учитывает или без учета регистра сравниваемых объектов, а использовать word (язык и региональные параметры с учетом) или правила сортировки по порядковому номеру (без учета языка и региональных параметров).</span><span class="sxs-lookup"><span data-stu-id="086c0-1097">The `comparisonType` parameter indicates whether the comparison should use the current or invariant culture, honor or ignore the case of the comparands, or use word (culture-sensitive) or ordinal (culture-insensitive) sort rules.</span></span>  
  
 <span data-ttu-id="086c0-1098">Один или оба сравниваемых значения могут быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1098">One or both comparands can be `null`.</span></span> <span data-ttu-id="086c0-1099">По определению, любая строка, включая пустую строку ("»), сравнивает больше, чем ссылкой на null; и два указателя null равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-1099">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-1100">Сравнение заканчивается, когда встречается неравенство или обоих подстроки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1100">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="086c0-1101">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, строка с символами оставшиеся считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-1101">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, the string with remaining characters is considered greater.</span></span> <span data-ttu-id="086c0-1102">Возвращается результат последнего выполненного сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1102">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="086c0-1103">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="086c0-1103">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="086c0-1104">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="086c0-1104">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#8)]
 [!code-csharp[System.String.Compare#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#8)]
 [!code-vb[System.String.Compare#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#8)]  
  
 <span data-ttu-id="086c0-1105">Сравните имя пути «файл», используя порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-1105">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="086c0-1106">Правильный код для этого выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-1106">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#9)]
 [!code-csharp[System.String.Compare#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#9)]
 [!code-vb[System.String.Compare#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#9)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1107">В следующем примере сравниваются две подстроки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1107">The following example compares two substrings.</span></span>  
  
 [!code-cpp[string.compare3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compare3/CPP/comp3.cpp#1)]
 [!code-csharp[string.compare3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compare3/CS/comp3.cs#1)]
 [!code-vb[string.compare3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compare3/VB/comp3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-1108">Значение <paramref name="indexA" /> больше значения <paramref name="strA" /><see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1108"><paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1109">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1109">-or-</span></span> 
 <span data-ttu-id="086c0-1110">Значение <paramref name="indexB" /> больше значения <paramref name="strB" /><see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1110"><paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1111">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1111">-or-</span></span> 
 <span data-ttu-id="086c0-1112"><paramref name="indexA" />, <paramref name="indexB" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-1112"><paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-1113">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1113">-or-</span></span> 
<span data-ttu-id="086c0-1114"><paramref name="indexA" /> или <paramref name="indexB" /> равно <see langword="null" />, а <paramref name="length" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1114">Either <paramref name="indexA" /> or <paramref name="indexB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-1115"><paramref name="comparisonType" /> не является значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1115"><paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1116">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-1116">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-1117"><see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> Метод не учитывает эти символы при выполнении лингвистического или зависящих от языка и региональных параметров сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1117">The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-1118">Для распознавания игнорируемые символы в сравнение, укажите в качестве параметра <see cref="F:System.StringComparison.Ordinal" /> или <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> для <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1118">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer, ignoreCase As Boolean, culture As CultureInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int * bool * System.Globalization.CultureInfo -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="indexA" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="strB" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="indexB" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="length" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-1119">Первая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1119">The first string to use in the comparison.</span></span></param>
        <param name="indexA"><span data-ttu-id="086c0-1120">Позиция подстроки в <paramref name="strA" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1120">The position of the substring within <paramref name="strA" />.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-1121">Вторая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1121">The second string to use in the comparison.</span></span></param>
        <param name="indexB"><span data-ttu-id="086c0-1122">Позиция подстроки в <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1122">The position of the substring within <paramref name="strB" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-1123">Максимальное число сравниваемых знаков в подстроках.</span><span class="sxs-lookup"><span data-stu-id="086c0-1123">The maximum number of characters in the substrings to compare.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="086c0-1124">Значение <see langword="true" />, чтобы не учитывать регистр при сравнении; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1124"><see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span></span></param>
        <param name="culture"><span data-ttu-id="086c0-1125">Объект, предоставляющий сведения об особенностях сравнения, определяемых языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-1125">An object that supplies culture-specific comparison information.</span></span></param>
        <summary><span data-ttu-id="086c0-1126">Сравнивает подстроки двух заданных объектов <see cref="T:System.String" /> (с учетом или без учета регистра), используя сведения о языке и региональных параметрах, и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1126">Compares substrings of two specified <see cref="T:System.String" /> objects, ignoring or honoring their case and using culture-specific information to influence the comparison, and returns an integer that indicates their relative position in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-1127">Целое число, выражающее лексическое соотношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-1127">An integer that indicates the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-1128">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-1128">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-1129">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-1129">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-1130">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1130">Less than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1131">Подстрока в <paramref name="strA" /> предшествует подстроке в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1131">The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1132">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-1132">Zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1133">Подстроки появляются в той же позиции в порядке сортировки, или параметр <paramref name="length" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1133">The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1134">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1134">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1135">Подстрока в <paramref name="strA" /> следует за подстрокой в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1135">The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1136">Запуск подстроках в `strA` в `indexA`и в `strB` в `indexB`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1136">The substrings to compare start in `strA` at `indexA`, and in `strB` at `indexB`.</span></span> <span data-ttu-id="086c0-1137">Оба `indexA` и `indexB` являются отсчитываемый от нуля, то есть первый символ в `strA` и `strB` — в позицию ноль, размещает один.</span><span class="sxs-lookup"><span data-stu-id="086c0-1137">Both `indexA` and `indexB` are zero-based; that is, the first character in `strA` and `strB` is at position zero, not position one.</span></span> <span data-ttu-id="086c0-1138">Длина первой подстроки равна длине `strA` минус `indexA` плюс один.</span><span class="sxs-lookup"><span data-stu-id="086c0-1138">The length of the first substring is equal to the length of `strA` minus `indexA` plus one.</span></span> <span data-ttu-id="086c0-1139">Длина второй подстроки равна длине `strB` минус `indexB` плюс один.</span><span class="sxs-lookup"><span data-stu-id="086c0-1139">The length of the second substring is equal to the length of `strB` minus `indexB` plus one.</span></span>  
  
 <span data-ttu-id="086c0-1140">Число сравниваемых символов равно меньшему из длин подстрок и `length`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1140">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="086c0-1141">`indexA`, `indexB`, И `length` параметры должны быть неотрицательными.</span><span class="sxs-lookup"><span data-stu-id="086c0-1141">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="086c0-1142">Сравнение выполняется с помощью `culture` параметр, чтобы получить сведения об особенностях языка и региональных параметров, таких как правила учета регистра и алфавитный порядок отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1142">The comparison uses the `culture` parameter to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="086c0-1143">Например, языка и региональных параметров может указать, что определенные сочетания знаков рассматриваться как один символ, или прописные и строчные буквы сравниваться определенным образом, или, порядок сортировки символа зависит от символов, которые предшествуют или Перейдите по нему.</span><span class="sxs-lookup"><span data-stu-id="086c0-1143">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="086c0-1144">Сравнение выполняется с помощью правил сортировки слов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1144">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="086c0-1145">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1145">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="086c0-1146">Один или оба сравниваемых значения могут быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1146">One or both comparands can be `null`.</span></span> <span data-ttu-id="086c0-1147">По определению, любая строка, включая пустую строку ("»), сравнивает больше, чем ссылкой на null; и два указателя null равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-1147">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-1148">Сравнение заканчивается, когда встречается неравенство или обоих подстроки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1148">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="086c0-1149">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, затем строка с символами оставшиеся считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-1149">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="086c0-1150">Возвращается результат последнего выполненного сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1150">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="086c0-1151">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="086c0-1151">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="086c0-1152">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="086c0-1152">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#6)]
 [!code-csharp[System.String.Compare#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#6)]
 [!code-vb[System.String.Compare#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#6)]  
  
 <span data-ttu-id="086c0-1153">Сравните имя пути «файл», используя порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-1153">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="086c0-1154">Правильный код для этого выглядит следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-1154">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#7)]
 [!code-csharp[System.String.Compare#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#7)]
 [!code-vb[System.String.Compare#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#7)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1155">Приведенный ниже сравниваются две подстроки, с помощью разных языков и региональных параметров и без учета регистра подстроки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1155">The following example compares two substrings using different cultures and ignoring the case of the substrings.</span></span> <span data-ttu-id="086c0-1156">Выбор языка и региональных параметров влияет на способ буква «I» — по сравнению с.</span><span class="sxs-lookup"><span data-stu-id="086c0-1156">The choice of culture affects how the letter "I" is compared.</span></span>  
  
 [!code-cpp[string.compare5#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compare5/CPP/comp5.cpp#1)]
 [!code-csharp[string.compare5#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compare5/CS/comp5.cs#1)]
 [!code-vb[string.compare5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compare5/VB/comp5.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-1157">Значение <paramref name="indexA" /> больше значения <paramref name="strA" /><see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1157"><paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1158">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1158">-or-</span></span> 
 <span data-ttu-id="086c0-1159">Значение <paramref name="indexB" /> больше значения <paramref name="strB" /><see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1159"><paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1160">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1160">-or-</span></span> 
 <span data-ttu-id="086c0-1161"><paramref name="indexA" />, <paramref name="indexB" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-1161"><paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-1162">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1162">-or-</span></span> 
<span data-ttu-id="086c0-1163"><paramref name="strA" /> или <paramref name="strB" /> равно <see langword="null" />, а <paramref name="length" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1163">Either <paramref name="strA" /> or <paramref name="strB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1164"><paramref name="culture" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1164"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1165">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-1165">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-1166"><see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" /> Метод не учитывает эти символы при выполнении лингвистического или зависящих от языка и региональных параметров сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1166">The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-1167">Для распознавания игнорируемые символы в сравнение, вызовите <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> метод и указать значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1167">To recognize ignorable characters in your comparison, call the <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length, System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length, class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer, culture As CultureInfo, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length, System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int * System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length, culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="indexA" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="strB" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="indexB" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="length" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-1168">Первая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1168">The first string to use in the comparison.</span></span></param>
        <param name="indexA"><span data-ttu-id="086c0-1169">Начальная позиция подстроки в пределах <paramref name="strA" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1169">The starting position of the substring within <paramref name="strA" />.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-1170">Вторая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1170">The second string to use in the comparison.</span></span></param>
        <param name="indexB"><span data-ttu-id="086c0-1171">Начальная позиция подстроки в пределах <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1171">The starting position of the substring within <paramref name="strB" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-1172">Максимальное число сравниваемых знаков в подстроках.</span><span class="sxs-lookup"><span data-stu-id="086c0-1172">The maximum number of characters in the substrings to compare.</span></span></param>
        <param name="culture"><span data-ttu-id="086c0-1173">Объект, предоставляющий сведения об особенностях сравнения, определяемых языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-1173">An object that supplies culture-specific comparison information.</span></span></param>
        <param name="options"><span data-ttu-id="086c0-1174">Параметры, которые используются во время сравнения (например, игнорирование регистра или символов).</span><span class="sxs-lookup"><span data-stu-id="086c0-1174">Options to use when performing the comparison (such as ignoring case or symbols).</span></span></param>
        <summary><span data-ttu-id="086c0-1175">Сравнивает подстроки двух заданных объектов <see cref="T:System.String" />, используя указанные параметры сравнения и сведения о языке и региональных параметрах, которые влияют на сравнение, и возвращает целое число, показывающее связь между двумя подстроками в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1175">Compares substrings of two specified <see cref="T:System.String" /> objects using the specified comparison options and culture-specific information to influence the comparison, and returns an integer that indicates the relationship of the two substrings to each other in the sort order.</span></span></summary>
        <returns><span data-ttu-id="086c0-1176">Целое число, которое указывает на лексические отношения между двумя подстроками, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="086c0-1176">An integer that indicates the lexical relationship between the two substrings, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-1177">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-1177">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-1178">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-1178">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-1179">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1179">Less than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1180">Подстрока в <paramref name="strA" /> предшествует подстроке в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1180">The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1181">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-1181">Zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1182">Подстроки появляются в той же позиции в порядке сортировки, или параметр <paramref name="length" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1182">The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1183">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1183">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1184">Подстрока в <paramref name="strA" /> следует за подстрокой в <paramref name="strB" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1184">The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1185">Запуск подстроках в `strA` позиции `indexA` и в `strB` позиции `indexB`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1185">The substrings to compare start in `strA` at position `indexA` and in `strB` at position `indexB`.</span></span> <span data-ttu-id="086c0-1186">Длина первой подстроке, представляет собой длину `strA` минус `indexA`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1186">The length of the first substring is the length of `strA` minus `indexA`.</span></span> <span data-ttu-id="086c0-1187">Длина подстроки, вторая — длина `strB` минус `indexB`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1187">The length of the second substring is the length of `strB` minus `indexB`.</span></span>  
  
 <span data-ttu-id="086c0-1188">Число сравниваемых символов равно меньшему из длин подстрок и `length`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1188">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="086c0-1189">`indexA`, `indexB`, И `length` параметры должны быть неотрицательными.</span><span class="sxs-lookup"><span data-stu-id="086c0-1189">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="086c0-1190">Сравнение выполняется с помощью `culture` параметр для получения сведений о культуре, такие как правила определения регистра и алфавитный порядок отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1190">The comparison uses the `culture` parameter to obtain culture-specific information, such as casing rules and the alphabetical order of individual characters.</span></span> <span data-ttu-id="086c0-1191">Например, определенного языка и региональных параметров указать, что определенные сочетания знаков рассматриваться как один символ, что определенным образом сравниваться прописные и строчные буквы, или, порядок сортировки символа зависит от символов, Введите перед или после него.</span><span class="sxs-lookup"><span data-stu-id="086c0-1191">For example, a particular culture could specify that certain combinations of characters be treated as a single character, that uppercase and lowercase characters be compared in a particular way, or that the sort order of a character depends on the characters that precede or follow it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086c0-1192"><xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> Метод предназначен главным образом для использования в сортировке или операции сортировки в алфавитном порядке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1192">The <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> method is designed primarily for use in sorting or alphabetizing operations.</span></span> <span data-ttu-id="086c0-1193">Он не должен использоваться, при основной целью вызова метода для определения эквивалентности двух подстроки (то есть, при вызове метода предназначена для проверки на возвращаемое значение 0).</span><span class="sxs-lookup"><span data-stu-id="086c0-1193">It should not be used when the primary purpose of the method call is to determine whether two substrings are equivalent (that is, when the purpose of the method call is to test for a return value of zero).</span></span> <span data-ttu-id="086c0-1194">Чтобы определить, эквивалентны ли две строки, вызовите <xref:System.String.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1194">To determine whether two strings are equivalent, call the <xref:System.String.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="086c0-1195">Один или оба `strA` и `strB` может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1195">One or both of `strA` and `strB` can be `null`.</span></span> <span data-ttu-id="086c0-1196">По определению, любая строка, включая <xref:System.String.Empty?displayProperty=nameWithType>, сравнивает больше, чем пустая ссылка, а две пустые ссылки равны друг с другом.</span><span class="sxs-lookup"><span data-stu-id="086c0-1196">By definition, any string, including <xref:System.String.Empty?displayProperty=nameWithType>, compares greater than a null reference, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="086c0-1197">Можно дополнительно указать сравнения с `options` параметр, который состоит из одного или нескольких членов из <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-1197">The comparison can be further specified by the `options` parameter, which consists of one or more members of the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="086c0-1198">Тем не менее, так как этот метод предназначен для проведения сравнение строк с учетом языка и региональных параметров, <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> и <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> значения не оказывают влияния.</span><span class="sxs-lookup"><span data-stu-id="086c0-1198">However, because the purpose of this method is to conduct a culture-sensitive string comparison, the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> and <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> values have no effect.</span></span>  
  
 <span data-ttu-id="086c0-1199">Сравнение заканчивается, когда встречается неравенство или обоих подстроки уже обработаны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1199">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="086c0-1200">Тем не менее если две строки считаются равными окончание одной строки, а другая строка имеет осталось символов, строка с остальные символы считается большей.</span><span class="sxs-lookup"><span data-stu-id="086c0-1200">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, the string with the remaining characters is considered greater.</span></span> <span data-ttu-id="086c0-1201">Возвращается результат последнего выполненного сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1201">The return value is the result of the last comparison performed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1202">В следующем примере используется <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> метод для сравнения фамилий два человека.</span><span class="sxs-lookup"><span data-stu-id="086c0-1202">The following example uses the <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> method to compare the last names of two people.</span></span> <span data-ttu-id="086c0-1203">Затем он размещает их в алфавитном порядке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1203">It then lists them in alphabetical order.</span></span>  
  
 [!code-csharp[System.String.Compare5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare5/cs/Example.cs#1)]
 [!code-vb[System.String.Compare5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare5/vb/Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-1204"><paramref name="options" /> не является значением <see cref="T:System.Globalization.CompareOptions" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1204"><paramref name="options" /> is not a <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-1205">Значение <paramref name="indexA" /> больше значения <paramref name="strA" /><see langword=".Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1205"><paramref name="indexA" /> is greater than <paramref name="strA" /><see langword=".Length" />.</span></span>  
  
<span data-ttu-id="086c0-1206">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1206">-or-</span></span> 
 <span data-ttu-id="086c0-1207">Значение <paramref name="indexB" /> больше значения <paramref name="strB" /><see langword=".Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1207"><paramref name="indexB" /> is greater than <paramref name="strB" /><see langword=".Length" />.</span></span>  
  
<span data-ttu-id="086c0-1208">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1208">-or-</span></span> 
 <span data-ttu-id="086c0-1209"><paramref name="indexA" />, <paramref name="indexB" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-1209"><paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-1210">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1210">-or-</span></span> 
<span data-ttu-id="086c0-1211"><paramref name="strA" /> или <paramref name="strB" /> равно <see langword="null" />, а <paramref name="length" /> больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1211">Either <paramref name="strA" /> or <paramref name="strB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1212"><paramref name="culture" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1212"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1213">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-1213">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-1214"><see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> Метод не учитывает эти символы при выполнении лингвистического или зависящих от языка и региональных параметров сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1214">The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-1215">Для распознавания игнорируемые символы в сравнение, укажите в качестве параметра <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1215">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareOrdinal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-1216">Сравнивает два объекта <see cref="T:System.String" />, оценивая числовые значения соответствующих объектов <see cref="T:System.Char" /> в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1216">Compares two <see cref="T:System.String" /> objects by evaluating the numeric values of the corresponding <see cref="T:System.Char" /> objects in each string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareOrdinal">
      <MemberSignature Language="C#" Value="public static int CompareOrdinal (string strA, string strB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareOrdinal(string strA, string strB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CompareOrdinal(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareOrdinal (strA As String, strB As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareOrdinal(System::String ^ strA, System::String ^ strB);" />
      <MemberSignature Language="F#" Value="static member CompareOrdinal : string * string -&gt; int" Usage="System.string.CompareOrdinal (strA, strB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="strB" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-1217">Первая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-1217">The first string to compare.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-1218">Вторая сравниваемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-1218">The second string to compare.</span></span></param>
        <summary><span data-ttu-id="086c0-1219">Сравнивает два указанных объекта <see cref="T:System.String" />, оценивая числовые значения соответствующих объектов <see cref="T:System.Char" /> в каждой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1219">Compares two specified <see cref="T:System.String" /> objects by evaluating the numeric values of the corresponding <see cref="T:System.Char" /> objects in each string.</span></span></summary>
        <returns><span data-ttu-id="086c0-1220">Целое число, выражающее лексическое соотношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-1220">An integer that indicates the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-1221">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-1221">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-1222">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-1222">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-1223">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1223">Less than zero</span></span> 
 </term><description><span data-ttu-id="086c0-1224">Значение параметра <paramref name="strA" /> меньше значения <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1224"><paramref name="strA" /> is less than <paramref name="strB" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1225">Zero</span><span class="sxs-lookup"><span data-stu-id="086c0-1225">Zero</span></span> 
 </term><description><span data-ttu-id="086c0-1226">Значения параметров <paramref name="strA" /> и <paramref name="strB" /> равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1226"><paramref name="strA" /> and <paramref name="strB" /> are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1227">Больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1227">Greater than zero</span></span> 
 </term><description><span data-ttu-id="086c0-1228">Значение <paramref name="strA" /> больше значения <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1228"><paramref name="strA" /> is greater than <paramref name="strB" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1229">Этот метод выполняет сравнение с учетом регистра, используя правила сортировки по порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="086c0-1229">This method performs a case-sensitive comparison using ordinal sort rules.</span></span> <span data-ttu-id="086c0-1230">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1230">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-1231">Чтобы выполнить сравнение без учета регистра, используя правила сортировки по порядковому номеру, вызовите <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> метод с `comparisonType` аргумент значение <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1231">To perform a case-insensitive comparison using ordinal sort rules, call the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method with the `comparisonType` argument set to <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="086c0-1232">Так как <xref:System.String.CompareOrdinal%28System.String%2CSystem.String%29> — это статический метод `strA` и `strB` может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1232">Because <xref:System.String.CompareOrdinal%28System.String%2CSystem.String%29> is a static method, `strA` and `strB` can be `null`.</span></span> <span data-ttu-id="086c0-1233">Если оба значения равны `null`, метод возвращает 0 (ноль), которое указывает, что `strA` и `strB` равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1233">If both values are `null`, the method returns 0 (zero), which indicates that `strA` and `strB` are equal.</span></span> <span data-ttu-id="086c0-1234">Если только одно из значений `null`, метод учитывает ненулевое значение, большее.</span><span class="sxs-lookup"><span data-stu-id="086c0-1234">If only one of the values is `null`, the method considers the non-null value to be greater.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1235">В следующем примере выполняется и порядковое сравнение двух строк, отличаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="086c0-1235">The following example performs and ordinal comparison of two strings that only differ in case.</span></span>  
  
 [!code-cpp[string.compareordinal#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compareordinal/CPP/comp0.cpp#1)]
 [!code-csharp[string.compareordinal#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compareordinal/CS/comp0.cs#1)]
 [!code-vb[string.compareordinal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compareordinal/VB/comp0.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareOrdinal">
      <MemberSignature Language="C#" Value="public static int CompareOrdinal (string strA, int indexA, string strB, int indexB, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareOrdinal(string strA, int32 indexA, string strB, int32 indexB, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareOrdinal (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareOrdinal(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length);" />
      <MemberSignature Language="F#" Value="static member CompareOrdinal : string * int * string * int * int -&gt; int" Usage="System.string.CompareOrdinal (strA, indexA, strB, indexB, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="indexA" Type="System.Int32" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="indexB" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="strA"><span data-ttu-id="086c0-1236">Первая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1236">The first string to use in the comparison.</span></span></param>
        <param name="indexA"><span data-ttu-id="086c0-1237">Начальный индекс подстроки в <paramref name="strA" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1237">The starting index of the substring in <paramref name="strA" />.</span></span></param>
        <param name="strB"><span data-ttu-id="086c0-1238">Вторая из сравниваемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1238">The second string to use in the comparison.</span></span></param>
        <param name="indexB"><span data-ttu-id="086c0-1239">Начальный индекс подстроки в <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1239">The starting index of the substring in <paramref name="strB" />.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-1240">Максимальное число сравниваемых знаков в подстроках.</span><span class="sxs-lookup"><span data-stu-id="086c0-1240">The maximum number of characters in the substrings to compare.</span></span></param>
        <summary><span data-ttu-id="086c0-1241">Сравнивает подстроки двух указанных объектов <see cref="T:System.String" />, вычисляя числовые значения соответствующих объектов <see cref="T:System.Char" /> в каждой подстроке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1241">Compares substrings of two specified <see cref="T:System.String" /> objects by evaluating the numeric values of the corresponding <see cref="T:System.Char" /> objects in each substring.</span></span></summary>
        <returns><span data-ttu-id="086c0-1242">32-битовое целое число со знаком, выражающее лексическое отношение двух сравниваемых значений.</span><span class="sxs-lookup"><span data-stu-id="086c0-1242">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-1243">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-1243">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-1244">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-1244">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-1245">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1245">Less than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1246">Подстрока в <paramref name="strA" /> меньше, чем подстрока в <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1246">The substring in <paramref name="strA" /> is less than the substring in <paramref name="strB" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1247">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-1247">Zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1248">Подстроки равны, или значение параметра <paramref name="length" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1248">The substrings are equal, or <paramref name="length" /> is zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1249">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1249">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1250">Подстрока в <paramref name="strA" /> больше, чем подстрока в <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1250">The substring in <paramref name="strA" /> is greater than the substring in <paramref name="strB" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1251">`indexA`, `indexB`, И `length` параметры должны быть неотрицательными.</span><span class="sxs-lookup"><span data-stu-id="086c0-1251">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="086c0-1252">Число сравниваемых знаков равно меньшему из длину `strA` меньше `indexA`, длина `strB` меньше `indexB`, и `length`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1252">The number of characters compared is the lesser of the length of `strA` less `indexA`, the length of `strB` less `indexB`, and `length`.</span></span>  
  
 <span data-ttu-id="086c0-1253">Этот метод выполняет сравнение с учетом регистра, используя правила сортировки по порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="086c0-1253">This method performs a case-sensitive comparison using ordinal sort rules.</span></span> <span data-ttu-id="086c0-1254">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1254">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-1255">Чтобы выполнить сравнение без учета регистра, используя правила сортировки по порядковому номеру, вызовите <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> метод с `comparisonType` аргумент значение <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1255">To perform a case-insensitive comparison using ordinal sort rules, call the <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> method with the `comparisonType` argument set to <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="086c0-1256">Так как <xref:System.String.CompareOrdinal%28System.String%2CSystem.String%29> — это статический метод `strA` и `strB` может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1256">Because <xref:System.String.CompareOrdinal%28System.String%2CSystem.String%29> is a static method, `strA` and `strB` can be `null`.</span></span> <span data-ttu-id="086c0-1257">Если оба значения равны `null`, метод возвращает 0 (ноль), которое указывает, что `strA` и `strB` равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1257">If both values are `null`, the method returns 0 (zero), which indicates that `strA` and `strB` are equal.</span></span> <span data-ttu-id="086c0-1258">Если только одно из значений `null`, метод учитывает ненулевое значение, большее.</span><span class="sxs-lookup"><span data-stu-id="086c0-1258">If only one of the values is `null`, the method considers the non-null value to be greater.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1259">В следующем примере показано, что <xref:System.String.CompareOrdinal%2A> и <xref:System.String.Compare%2A> использовать различные порядки сортировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1259">This following example demonstrates that <xref:System.String.CompareOrdinal%2A> and <xref:System.String.Compare%2A> use different sort orders.</span></span>  
  
 [!code-cpp[StringCompareOrdinal#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringCompareOrdinal/CPP/stringcompareordinal.cpp#1)]
 [!code-csharp[StringCompareOrdinal#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringCompareOrdinal/CS/stringcompareordinal.cs#1)]
 [!code-vb[StringCompareOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringCompareOrdinal/VB/stringcompareordinal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-1260"><paramref name="strA" /> не имеет значение <see langword="null" />, и значение <paramref name="indexA" /> больше <paramref name="strA" />,<see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1260"><paramref name="strA" /> is not <see langword="null" /> and <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1261">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1261">-or-</span></span> 
 <span data-ttu-id="086c0-1262"><paramref name="strB" /> не имеет значение <see langword="null" />, и значение <paramref name="indexB" /> больше <paramref name="strB" />,<see cref="P:System.String.Length" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1262"><paramref name="strB" /> is not <see langword="null" /> and <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span></span>  
  
<span data-ttu-id="086c0-1263">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1263">-or-</span></span> 
 <span data-ttu-id="086c0-1264"><paramref name="indexA" />, <paramref name="indexB" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-1264"><paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span></span></exception>
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-1265">Сравнивает данный экземпляр с заданным объектом или строкой <see cref="T:System.String" /> и возвращает целое число, которое показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и заданный объект или строка <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1265">Compares this instance with a specified object or <see cref="T:System.String" /> and returns an integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or <see cref="T:System.String" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1266">Обе перегрузки <xref:System.String.CompareTo%2A> метода выполняют сравнение с учетом языка и региональных параметров и регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1266">Both overloads of the <xref:System.String.CompareTo%2A> method perform culture-sensitive and case-sensitive comparison.</span></span> <span data-ttu-id="086c0-1267">Этот метод нельзя использовать для сравнения без учета языка и региональных параметров или порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="086c0-1267">You cannot use this method to perform culture-insensitive or ordinal comparisons.</span></span> <span data-ttu-id="086c0-1268">Для ясности кода рекомендуется избегать <xref:System.String.CompareTo%2A> метод и вызвать <xref:System.String.Compare%2A> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="086c0-1268">For code clarity, we recommend that you avoid the <xref:System.String.CompareTo%2A> method and call the <xref:System.String.Compare%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="string.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-1269">Объект, имеющий значение <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1269">An object that evaluates to a <see cref="T:System.String" />.</span></span></param>
        <summary><span data-ttu-id="086c0-1270">Сравнивает данный экземпляр с указанным объектом <see cref="T:System.Object" /> и показывает, расположен ли экземпляр перед, после или в той же позиции в порядке сортировки, что и заданный объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1270">Compares this instance with a specified <see cref="T:System.Object" /> and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-1271">32-битовое целое число со знаком, которое показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и параметр <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1271">A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the <paramref name="value" /> parameter.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-1272">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-1272">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-1273">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-1273">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-1274">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1274">Less than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1275">Данный экземпляр предшествует параметру <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1275">This instance precedes <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1276">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-1276">Zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1277">Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1277">This instance has the same position in the sort order as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1278">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1278">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1279">Данный экземпляр стоит после параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1279">This instance follows <paramref name="value" />.</span></span>  
  
<span data-ttu-id="086c0-1280">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1280">-or-</span></span> 
 <span data-ttu-id="086c0-1281"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1281"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1282">`value` должен быть <xref:System.String> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-1282">`value` must be a <xref:System.String> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086c0-1283"><xref:System.String.CompareTo%2A> Метод был разработан в первую очередь для использования в сортировке или выстраивания в алфавитном порядке операций.</span><span class="sxs-lookup"><span data-stu-id="086c0-1283">The <xref:System.String.CompareTo%2A> method was designed primarily for use in sorting or alphabetizing operations.</span></span> <span data-ttu-id="086c0-1284">Он не должен использоваться, при основной целью вызова метода для определения эквивалентности двух строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1284">It should not be used when the primary purpose of the method call is to determine whether two strings are equivalent.</span></span> <span data-ttu-id="086c0-1285">Чтобы определить, эквивалентны ли две строки, вызовите <xref:System.String.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1285">To determine whether two strings are equivalent, call the <xref:System.String.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="086c0-1286">Этот метод выполняет сравнение по словам (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1286">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</span></span> <span data-ttu-id="086c0-1287">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1287">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="086c0-1288">Дополнительные сведения о поведении этого метода см. в разделе "Примечания" <xref:System.String.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1288">For more information about the behavior of this method, see the Remarks section of the <xref:System.String.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1289">В следующем примере используется <xref:System.String.CompareTo%2A> метод с <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1289">The following example uses the <xref:System.String.CompareTo%2A> method with an <xref:System.Object>.</span></span> <span data-ttu-id="086c0-1290">Так как оно пытается сравнить <xref:System.String> экземпляр `TestClass` объекта, метод вызывает <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1290">Because it attempts to compare a <xref:System.String> instance to a `TestClass` object, the method throws an <xref:System.ArgumentException>.</span></span>  
  
 [!code-cpp[ExToString#1](~/samples/snippets/cpp/VS_Snippets_CLR/ExToString/CPP/extostring.cpp#1)]
 [!code-csharp[ExToString#1](~/samples/snippets/csharp/VS_Snippets_CLR/ExToString/CS/extostring.cs#1)]
 [!code-vb[ExToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ExToString/VB/extostring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-1291"><paramref name="value" /> не является объектом <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1291"><paramref name="value" /> is not a <see cref="T:System.String" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1292">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-1292">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-1293"><see cref="M:System.String.CompareTo(System.Object)" /> Метод не учитывает такие символы, когда он выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1293">The <see cref="M:System.String.CompareTo(System.Object)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-1294">Например, если следующий код выполняется на [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, сравнение «animal» с «ani использовать» (с помощью мягкий перенос или 00AD U +) указывает, что две строки равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1294">For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent.</span></span>  
  
<span data-ttu-id="086c0-1295">[!code-csharp[System.String.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.compareto/cs/compareto1.cs#1)] [!code-vb[System.String.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.compareto/vb/compareto1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="086c0-1295">[!code-csharp[System.String.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.compareto/cs/compareto1.cs#1)] [!code-vb[System.String.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.compareto/vb/compareto1.vb#1)]</span></span> 
<span data-ttu-id="086c0-1296">Для распознавания игнорируемые символы в сравнении строк, вызвать <see cref="M:System.String.CompareOrdinal(System.String,System.String)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1296">To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.CompareOrdinal(System.String,System.String)" /> method.</span></span></para></block>
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (string strB);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(string strB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CompareTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (strB As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::String ^ strB);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : string -&gt; int&#xA;override this.CompareTo : string -&gt; int" Usage="string.CompareTo strB" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strB" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strB"><span data-ttu-id="086c0-1297">Строка, сравниваемая с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="086c0-1297">The string to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="086c0-1298">Сравнивает данный экземпляр с заданным объектом <see cref="T:System.String" /> и показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и заданная строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-1298">Compares this instance with a specified <see cref="T:System.String" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-1299">32-битовое целое число со знаком, которое показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и параметр <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1299">A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the <paramref name="strB" /> parameter.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="086c0-1300">Значение</span><span class="sxs-lookup"><span data-stu-id="086c0-1300">Value</span></span> 
 </term><description> <span data-ttu-id="086c0-1301">Условие</span><span class="sxs-lookup"><span data-stu-id="086c0-1301">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="086c0-1302">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1302">Less than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1303">Данный экземпляр предшествует параметру <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1303">This instance precedes <paramref name="strB" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1304">Нуль</span><span class="sxs-lookup"><span data-stu-id="086c0-1304">Zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1305">Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1305">This instance has the same position in the sort order as <paramref name="strB" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="086c0-1306">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="086c0-1306">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="086c0-1307">Данный экземпляр стоит после параметра <paramref name="strB" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1307">This instance follows <paramref name="strB" />.</span></span>  
  
<span data-ttu-id="086c0-1308">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1308">-or-</span></span> 
 <span data-ttu-id="086c0-1309"><paramref name="strB" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1309"><paramref name="strB" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1310">Этот метод выполняет сравнение по словам (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1310">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</span></span> <span data-ttu-id="086c0-1311">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1311">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="086c0-1312"><xref:System.String.CompareTo%2A> Метод был разработан в первую очередь для использования в сортировке или выстраивания в алфавитном порядке операций.</span><span class="sxs-lookup"><span data-stu-id="086c0-1312">The <xref:System.String.CompareTo%2A> method was designed primarily for use in sorting or alphabetizing operations.</span></span> <span data-ttu-id="086c0-1313">Он не должен использоваться, при основной целью вызова метода для определения эквивалентности двух строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1313">It should not be used when the primary purpose of the method call is to determine whether two strings are equivalent.</span></span> <span data-ttu-id="086c0-1314">Чтобы определить, эквивалентны ли две строки, вызовите <xref:System.String.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1314">To determine whether two strings are equivalent, call the <xref:System.String.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="086c0-1315">Дополнительные сведения о поведении этого метода см. в разделе "Примечания" <xref:System.String.Compare%28System.String%2CSystem.String%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1315">For more information about the behavior of this method, see the Remarks section of the <xref:System.String.Compare%28System.String%2CSystem.String%29> method.</span></span>  
  
 <span data-ttu-id="086c0-1316">Этот метод реализует <xref:System.IComparable%601?displayProperty=nameWithType> интерфейс, а также выполняет немного лучше, чем <xref:System.String.CompareTo%28System.Object%29?displayProperty=nameWithType> метод, так как он имеет для определения ли `strB` аргумент имеет тип изменяемого значения, должны быть упакованы, и его не приходилось приводить его параметр из <xref:System.Object> для <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1316">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.String.CompareTo%28System.Object%29?displayProperty=nameWithType> method, because it does not have to determine whether the `strB` argument is a mutable value type that must be boxed, and it does not have to cast its parameter from an <xref:System.Object> to a <xref:System.String>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1317">В следующем примере используется <xref:System.String.CompareTo%2A> метод для сравнения текущего экземпляра строки другой строкой.</span><span class="sxs-lookup"><span data-stu-id="086c0-1317">The following example uses the <xref:System.String.CompareTo%2A> method to compare the current string instance with another string.</span></span>  
  
 [!code-cpp[stringcompareto#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringCompareTo/CPP/stringcompareto.cpp#1)]
 [!code-csharp[stringcompareto#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringCompareTo/CS/stringcompareto.cs#1)]
 [!code-vb[stringcompareto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringCompareTo/VB/stringcompareto.vb#1)]  
  
 <span data-ttu-id="086c0-1318">Ниже приведен пример универсальных и неуниверсальных версии метода CompareTo для нескольких типов значений и ссылочных типов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1318">The following example demonstrates generic and non-generic versions of the CompareTo method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1319">Наборы символов содержат символы, которые могут игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="086c0-1319">Character sets include ignorable characters.</span></span> <span data-ttu-id="086c0-1320"><see cref="M:System.String.CompareTo(System.String)" /> Метод не учитывает такие символы, когда он выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1320">The <see cref="M:System.String.CompareTo(System.String)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-1321">Например, если следующий код выполняется на [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, сравнение «animal» с «ani использовать» (с помощью мягкий перенос или 00AD U +) указывает, что две строки равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-1321">For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent.</span></span>  
  
<span data-ttu-id="086c0-1322">[!code-csharp[System.String.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.compareto/cs/compareto2.cs#2)] [!code-vb[System.String.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.compareto/vb/compareto2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="086c0-1322">[!code-csharp[System.String.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.compareto/cs/compareto2.cs#2)] [!code-vb[System.String.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.compareto/vb/compareto2.vb#2)]</span></span> 
<span data-ttu-id="086c0-1323">Для распознавания игнорируемые символы в сравнении строк, вызвать <see cref="M:System.String.CompareOrdinal(System.String,System.String)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1323">To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.CompareOrdinal(System.String,System.String)" /> method.</span></span></para></block>
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Concat">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-1324">Объединяет один или несколько экземпляров класса <see cref="T:System.String" /> или представления в виде <see cref="T:System.String" /> значений одного или нескольких экземпляров <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1324">Concatenates one or more instances of <see cref="T:System.String" />, or the <see cref="T:System.String" /> representations of the values of one or more instances of <see cref="T:System.Object" />.</span></span></summary>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

> [!NOTE]
>  <span data-ttu-id="086c0-1325">Можно также использовать оператор объединения строк языка, такие как `+` в C#, или `&` и `+` в Visual Basic, для объединения строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1325">You can also use your language's string concatenation operator, such as `+` in C#, or `&` and `+` in Visual Basic, to concatenate strings.</span></span> <span data-ttu-id="086c0-1326">Оба компиляторы преобразуют оператора объединения в вызов к одной из перегрузок `String.Concat`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1326">Both compilers translate the concatenation operator into a call to one of the overloads of `String.Concat`.</span></span> 

         ]]></format>
         </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (System.Collections.Generic.IEnumerable&lt;string&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(class System.Collections.Generic.IEnumerable`1&lt;string&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (values As IEnumerable(Of String)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Concat : seq&lt;string&gt; -&gt; string" Usage="System.string.Concat values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="086c0-1327">Объект коллекции, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" /> и имеющий аргумент универсального типа <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1327">A collection object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> and whose generic type argument is <see cref="T:System.String" />.</span></span></param>
        <summary><span data-ttu-id="086c0-1328">Сцепляет элементы созданной коллекции <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1328">Concatenates the members of a constructed <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of type <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-1329">Сцепленные строки в параметре <paramref name="values" />. Или <see cref="F:System.String.Empty" />, если <paramref name="values" /> — это пустой элемент <see langword="IEnumerable(Of String)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1329">The concatenated strings in <paramref name="values" />, or <see cref="F:System.String.Empty" /> if <paramref name="values" /> is an empty <see langword="IEnumerable(Of String)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1330">Метод сцепляет каждый объект в `values`; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1330">The method concatenates each object in `values`; it does not add any delimiters.</span></span> <span data-ttu-id="086c0-1331">Для указания разделителя между каждым членом `values`, вызовите <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1331">To specify a delimiter between each member of `values`, call the <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="086c0-1332"><xref:System.String.Empty> Строки используется вместо любой элемент null в `values`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1332">An <xref:System.String.Empty> string is used in place of any null element in `values`.</span></span>  
  
 <span data-ttu-id="086c0-1333">Если `values` — это пустой `IEnumerable(Of String)`, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1333">If `values` is an empty `IEnumerable(Of String)`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-1334">Если `values` — `null`, метод вызывает <xref:System.ArgumentNullException> исключение.</span><span class="sxs-lookup"><span data-stu-id="086c0-1334">If `values` is `null`, the method throws an <xref:System.ArgumentNullException> exception.</span></span>  
  
 <span data-ttu-id="086c0-1335"><xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> — Это удобный метод, который позволяет сцеплять каждого элемента в `IEnumerable(Of String)` коллекции без предварительного преобразования элементов в массив строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1335"><xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> is a convenience method that lets you concatenate each element in an `IEnumerable(Of String)` collection without first converting the elements to a string array.</span></span> <span data-ttu-id="086c0-1336">Это особенно полезно, с помощью выражения запроса Language-Integrated Query (LINQ).</span><span class="sxs-lookup"><span data-stu-id="086c0-1336">It is particularly useful with Language-Integrated Query (LINQ) query expressions.</span></span> <span data-ttu-id="086c0-1337">В следующем примере передается `List(Of String)` , содержащий прописные или строчные буквы алфавита в лямбда-выражение, который выбирает букв, которые находятся равным или больше, чем буквы (который, в примере «M»).</span><span class="sxs-lookup"><span data-stu-id="086c0-1337">The following example passes a `List(Of String)` object that contains either the uppercase or lowercase letters of the alphabet to a lambda expression that selects letters that are equal to or greater than a particular letter (which, in the example, is "M").</span></span> <span data-ttu-id="086c0-1338">`IEnumerable(Of String)` Коллекции, который возвращается <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> методу передается <xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> метод для отображения результата в виде одной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1338">The `IEnumerable(Of String)` collection that is returned by the <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> method is passed to the <xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method to display the result as a single string.</span></span>  
  
 [!code-csharp[System.String.Concat#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat2.cs#3)]
 [!code-vb[System.String.Concat#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat2.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1339">Следующий пример использует алгоритм решета Эратосфена для вычисления простых чисел, которые меньше или равно 100.</span><span class="sxs-lookup"><span data-stu-id="086c0-1339">The following example uses the Sieve of Eratosthenes algorithm to calculate the prime numbers that are less than or equal to 100.</span></span> <span data-ttu-id="086c0-1340">Результат для <xref:System.Collections.Generic.List%601> объект типа <xref:System.String>, который затем передается <xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1340">It assigns the result to a <xref:System.Collections.Generic.List%601> object of type <xref:System.String>, which it then passes to the <xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method.</span></span>  
  
 [!code-csharp[System.String.Concat#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat1.cs#2)]
 [!code-vb[System.String.Concat#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1341"><paramref name="values" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1341"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (arg0 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Concat : obj -&gt; string" Usage="System.string.Concat arg0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg0"><span data-ttu-id="086c0-1342">Объект для представления или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1342">The object to represent, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="086c0-1343">Создает строковое представление указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-1343">Creates the string  representation of a specified object.</span></span></summary>
        <returns><span data-ttu-id="086c0-1344">Строковое представление значения параметра <paramref name="arg0" /> или <see cref="F:System.String.Empty" />, если значение параметра <paramref name="arg0" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1344">The string representation of the value of <paramref name="arg0" />, or <see cref="F:System.String.Empty" /> if <paramref name="arg0" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1345"><xref:System.String.Concat%28System.Object%29> Представляет метод `arg0` как строку путем вызова его без параметров `ToString` метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1345">The <xref:System.String.Concat%28System.Object%29> method represents `arg0` as a string by calling its parameterless `ToString` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1346">В следующем примере демонстрируется <xref:System.String.Concat%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1346">The following example demonstrates the <xref:System.String.Concat%2A> method.</span></span>  
  
 [!code-cpp[string.concat5#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.concat5/CPP/string.concat5.cpp#1)]
 [!code-csharp[string.concat5#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.concat5/CS/string.concat5.cs#1)]
 [!code-vb[string.concat5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.concat5/VB/string.concat5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (ParamArray args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Concat : obj[] -&gt; string" Usage="System.string.Concat args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="086c0-1347">Массив объектов, содержащий элементы, которые требуется сцепить.</span><span class="sxs-lookup"><span data-stu-id="086c0-1347">An object array that contains the elements to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-1348">Сцепляет строковые представления элементов указанного массива <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1348">Concatenates the string representations of the elements in a specified <see cref="T:System.Object" /> array.</span></span></summary>
        <returns><span data-ttu-id="086c0-1349">Сцепленные строковые представления значений элементов параметра <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1349">The concatenated string representations of the values of the elements in <paramref name="args" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1350">Метод сцепляет каждый объект в `args` путем вызова без параметров `ToString` метод этого объекта; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1350">The method concatenates each object in `args` by calling the parameterless `ToString` method of that object; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="086c0-1351"><xref:System.String.Empty?displayProperty=nameWithType> используется вместо любого пустого объекта в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-1351"><xref:System.String.Empty?displayProperty=nameWithType> is used in place of any null object in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1352">В следующем примере показано использование <xref:System.String.Concat%2A> метод с <xref:System.Object> массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-1352">The following example demonstrates the use of the <xref:System.String.Concat%2A> method with an <xref:System.Object> array.</span></span>  
  
 [!code-csharp[stringconcat1#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringconcat1/CS/stringconcat1.cs#1)]
 [!code-vb[stringconcat1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringconcat1/VB/stringconcat1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1353"><paramref name="args" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1353"><paramref name="args" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="086c0-1354">Недостаточно памяти.</span><span class="sxs-lookup"><span data-stu-id="086c0-1354">Out of memory.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1355">Этот метод не вызывается кодом C++.</span><span class="sxs-lookup"><span data-stu-id="086c0-1355">This method is not called by C++ code.</span></span> <span data-ttu-id="086c0-1356">Компилятор C++ разрешает вызовы к <see cref="Overload:System.String.Concat" /> , имеющие четыре или более параметров объекта как вызов <see cref="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1356">The C++ compiler resolves calls to <see cref="Overload:System.String.Concat" /> that have four or more object parameters as a call to <see cref="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" />.</span></span></para></block>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (ParamArray values As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Concat : string[] -&gt; string" Usage="System.string.Concat values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="086c0-1357">Массив строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1357">An array of string instances.</span></span></param>
        <summary><span data-ttu-id="086c0-1358">Сцепляет элементы указанного массива <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1358">Concatenates the elements of a specified <see cref="T:System.String" /> array.</span></span></summary>
        <returns><span data-ttu-id="086c0-1359">Сцепленные элементы <paramref name="values" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1359">The concatenated elements of <paramref name="values" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1360">Метод сцепляет каждый объект в `values`; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1360">The method concatenates each object in `values`; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="086c0-1361"><xref:System.String.Empty> Строки используется вместо любого пустого объекта в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-1361">An <xref:System.String.Empty> string is used in place of any null object in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1362">В следующем примере показано использование <xref:System.String.Concat%2A> метод с <xref:System.String> массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-1362">The following example demonstrates the use of the <xref:System.String.Concat%2A> method with a <xref:System.String> array.</span></span>  
  
 [!code-cpp[stringconcat3#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringconcat3/CPP/stringconcat3.cpp#1)]
 [!code-csharp[stringconcat3#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringconcat3/CS/stringconcat3.cs#1)]
 [!code-vb[stringconcat3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringconcat3/VB/stringconcat3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1363"><paramref name="values" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1363"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="086c0-1364">Недостаточно памяти.</span><span class="sxs-lookup"><span data-stu-id="086c0-1364">Out of memory.</span></span></exception>
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (arg0 As Object, arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Concat : obj * obj -&gt; string" Usage="System.string.Concat (arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg0"><span data-ttu-id="086c0-1365">Первый из сцепляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1365">The first object to concatenate.</span></span></param>
        <param name="arg1"><span data-ttu-id="086c0-1366">Второй из сцепляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1366">The second object to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-1367">Сцепляет строковые представления двух указанных объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1367">Concatenates the string representations of two specified objects.</span></span></summary>
        <returns><span data-ttu-id="086c0-1368">Сцепленные строковые представления значений <paramref name="arg0" /> и <paramref name="arg1" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1368">The concatenated string representations of the values of <paramref name="arg0" /> and <paramref name="arg1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1369">Этот метод объединяет `arg0` и `arg1` путем вызова без параметров `ToString` метод `arg0` и `arg1`; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1369">The method concatenates `arg0` and `arg1` by calling the parameterless `ToString` method of `arg0` and `arg1`; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="086c0-1370"><xref:System.String.Empty?displayProperty=nameWithType> используется вместо любой аргумент null.</span><span class="sxs-lookup"><span data-stu-id="086c0-1370"><xref:System.String.Empty?displayProperty=nameWithType> is used in place of any null argument.</span></span>  
  
 <span data-ttu-id="086c0-1371">Если аргумент является ссылкой на массив, метод объединяет строковое представление этого массива, а не его члены (например, «System.String[]")").</span><span class="sxs-lookup"><span data-stu-id="086c0-1371">If either of the arguments is an array reference, the method concatenates a string representing that array, instead of its members (for example, "System.String[]").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1372">В следующем примере демонстрируется <xref:System.String.Concat%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1372">The following example demonstrates the <xref:System.String.Concat%2A> method.</span></span>  
  
 [!code-cpp[string.concat5#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.concat5/CPP/string.concat5.cpp#1)]
 [!code-csharp[string.concat5#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.concat5/CS/string.concat5.cs#1)]
 [!code-vb[string.concat5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.concat5/VB/string.concat5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (ReadOnlySpan&lt;char&gt; str0, ReadOnlySpan&lt;char&gt; str1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(valuetype System.ReadOnlySpan`1&lt;char&gt; str0, valuetype System.ReadOnlySpan`1&lt;char&gt; str1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (str0 As ReadOnlySpan(Of Char), str1 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(ReadOnlySpan&lt;char&gt; str0, ReadOnlySpan&lt;char&gt; str1);" />
      <MemberSignature Language="F#" Value="static member Concat : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.string.Concat (str0, str1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str0" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="str1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="str0">To be added.</param>
        <param name="str1">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (string str0, string str1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(string str0, string str1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (str0 As String, str1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::String ^ str0, System::String ^ str1);" />
      <MemberSignature Language="F#" Value="static member Concat : string * string -&gt; string" Usage="System.string.Concat (str0, str1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str0" Type="System.String" />
        <Parameter Name="str1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str0"><span data-ttu-id="086c0-1373">Первая из сцепляемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1373">The first string to concatenate.</span></span></param>
        <param name="str1"><span data-ttu-id="086c0-1374">Вторая из сцепляемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1374">The second string to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-1375">Сцепляет два указанных экземпляра <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1375">Concatenates two specified instances of <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-1376">Сцепление <paramref name="str0" /> и <paramref name="str1" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1376">The concatenation of <paramref name="str0" /> and <paramref name="str1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1377">Этот метод объединяет `str0` и `str1`; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1377">The method concatenates `str0` and `str1`; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="086c0-1378"><xref:System.String.Empty> Строки используется вместо любой аргумент null.</span><span class="sxs-lookup"><span data-stu-id="086c0-1378">An <xref:System.String.Empty> string is used in place of any null argument.</span></span>  
  
## Examples  
 <span data-ttu-id="086c0-1379">В приведенном ниже примере сцепляются имя, отчество и фамилию человека.</span><span class="sxs-lookup"><span data-stu-id="086c0-1379">The following example concatenates a person's first, middle, and last name.</span></span>  
  
 [!code-cpp[stringconcat4#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringconcat4/CPP/stringconcat4.cpp#1)]
 [!code-csharp[stringconcat4#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringconcat4/CS/stringconcat4.cs#1)]
 [!code-vb[stringconcat4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringconcat4/VB/stringconcat4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (arg0 As Object, arg1 As Object, arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Concat : obj * obj * obj -&gt; string" Usage="System.string.Concat (arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg0"><span data-ttu-id="086c0-1380">Первый из сцепляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1380">The first object to concatenate.</span></span></param>
        <param name="arg1"><span data-ttu-id="086c0-1381">Второй из сцепляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1381">The second object to concatenate.</span></span></param>
        <param name="arg2"><span data-ttu-id="086c0-1382">Третий из сцепляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1382">The third object to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-1383">Сцепляет строковые представления трех указанных объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1383">Concatenates the string representations of three specified objects.</span></span></summary>
        <returns><span data-ttu-id="086c0-1384">Сцепленные строковые представления значений <paramref name="arg0" />, <paramref name="arg1" /> и <paramref name="arg2" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1384">The concatenated string representations of the values of <paramref name="arg0" />, <paramref name="arg1" />, and <paramref name="arg2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1385">Этот метод объединяет `arg0`, `arg1`, и `arg2` путем вызова без параметров `ToString` каждого объекта; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1385">The method concatenates `arg0`, `arg1`, and `arg2` by calling the parameterless `ToString` method of each object; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="086c0-1386"><xref:System.String.Empty?displayProperty=nameWithType> используется вместо любой аргумент null.</span><span class="sxs-lookup"><span data-stu-id="086c0-1386"><xref:System.String.Empty?displayProperty=nameWithType> is used in place of any null argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1387">В следующем примере демонстрируется <xref:System.String.Concat%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1387">The following example demonstrates the <xref:System.String.Concat%2A> method.</span></span>  
  
 [!code-cpp[string.concat5#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.concat5/CPP/string.concat5.cpp#1)]
 [!code-csharp[string.concat5#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.concat5/CS/string.concat5.cs#1)]
 [!code-vb[string.concat5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.concat5/VB/string.concat5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (ReadOnlySpan&lt;char&gt; str0, ReadOnlySpan&lt;char&gt; str1, ReadOnlySpan&lt;char&gt; str2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(valuetype System.ReadOnlySpan`1&lt;char&gt; str0, valuetype System.ReadOnlySpan`1&lt;char&gt; str1, valuetype System.ReadOnlySpan`1&lt;char&gt; str2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (str0 As ReadOnlySpan(Of Char), str1 As ReadOnlySpan(Of Char), str2 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(ReadOnlySpan&lt;char&gt; str0, ReadOnlySpan&lt;char&gt; str1, ReadOnlySpan&lt;char&gt; str2);" />
      <MemberSignature Language="F#" Value="static member Concat : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.string.Concat (str0, str1, str2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str0" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="str1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="str2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="str0">To be added.</param>
        <param name="str1">To be added.</param>
        <param name="str2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (string str0, string str1, string str2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(string str0, string str1, string str2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (str0 As String, str1 As String, str2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::String ^ str0, System::String ^ str1, System::String ^ str2);" />
      <MemberSignature Language="F#" Value="static member Concat : string * string * string -&gt; string" Usage="System.string.Concat (str0, str1, str2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str0" Type="System.String" />
        <Parameter Name="str1" Type="System.String" />
        <Parameter Name="str2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str0"><span data-ttu-id="086c0-1388">Первая из сцепляемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1388">The first string to concatenate.</span></span></param>
        <param name="str1"><span data-ttu-id="086c0-1389">Вторая из сцепляемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1389">The second string to concatenate.</span></span></param>
        <param name="str2"><span data-ttu-id="086c0-1390">Третья из сцепляемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1390">The third string to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-1391">Сцепляет три указанных экземпляра <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1391">Concatenates three specified instances of <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-1392">Сцепление <paramref name="str0" />, <paramref name="str1" /> и <paramref name="str2" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1392">The concatenation of <paramref name="str0" />, <paramref name="str1" />, and <paramref name="str2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1393">Этот метод объединяет `str0`, `str1`, и `str2`; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1393">The method concatenates `str0`, `str1`, and `str2`; it does not add any delimiters.</span></span>  
  
## Examples  
 <span data-ttu-id="086c0-1394">В следующем примере используется <xref:System.String.Concat%2A> метод для сцепления трех строк и отображает результат.</span><span class="sxs-lookup"><span data-stu-id="086c0-1394">The following example uses the <xref:System.String.Concat%2A> method to concatenate three strings and displays the result.</span></span>  
  
 [!code-cpp[System.String.Concat#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.concat/cpp/Concat6.cpp#6)]
 [!code-csharp[System.String.Concat#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/Concat6.cs#6)]
 [!code-vb[System.String.Concat#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/Concat6.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Concat : obj * obj * obj * obj -&gt; string" Usage="System.string.Concat (arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Object" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="arg0"><span data-ttu-id="086c0-1395">Первый из сцепляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1395">The first object to concatenate.</span></span></param>
        <param name="arg1"><span data-ttu-id="086c0-1396">Второй из сцепляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1396">The second object to concatenate.</span></span></param>
        <param name="arg2"><span data-ttu-id="086c0-1397">Третий из сцепляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1397">The third object to concatenate.</span></span></param>
        <param name="arg3"><span data-ttu-id="086c0-1398">Четвертый из сцепляемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1398">The fourth object to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-1399">Сцепляет строковые представления четырех указанных объектов и любые объекты, заданные в необязательном списке параметров переменной длины.</span><span class="sxs-lookup"><span data-stu-id="086c0-1399">Concatenates the string representations of four specified objects and any objects specified in an optional variable length parameter list.</span></span></summary>
        <returns><span data-ttu-id="086c0-1400">Сцепленное строковое представление каждого значения в списке параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1400">The concatenated string representation of each value in the parameter list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="086c0-1401">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="086c0-1401">This API is not CLS-compliant.</span></span> <span data-ttu-id="086c0-1402">CLS-совместимая альтернатива — <xref:System.String.Concat%28System.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1402">The CLS-compliant alternative is <xref:System.String.Concat%28System.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-1403">Компиляторы C# и Visual Basic автоматически разрешать вызов этого метода, как вызов <xref:System.String.Concat%28System.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1403">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.String.Concat%28System.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="086c0-1404">Метод сцепляет каждый объект в списке параметров, вызвав его без параметров `ToString` метода; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1404">The method concatenates each object in the parameter list by calling its parameterless `ToString` method; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="086c0-1405"><xref:System.String.Empty?displayProperty=nameWithType> используется вместо любой аргумент null.</span><span class="sxs-lookup"><span data-stu-id="086c0-1405"><xref:System.String.Empty?displayProperty=nameWithType> is used in place of any null argument.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-1406">В последнем параметре <xref:System.String.Concat%2A> метод — необязательный список с разделителями запятыми из одного или нескольких дополнительных объектов для сцепления.</span><span class="sxs-lookup"><span data-stu-id="086c0-1406">The last parameter of the  <xref:System.String.Concat%2A> method is an optional comma-delimited list of one or more additional objects to concatenate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1407">Следующий пример иллюстрирует использование <xref:System.String.Concat%28System.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> метод сцепляемых список переменных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1407">The following example illustrates the use of the <xref:System.String.Concat%28System.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method to concatenate a list of variable parameters.</span></span> <span data-ttu-id="086c0-1408">В этом случае метод вызывается с девятью параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-1408">In this case, the method is called with nine parameters.</span></span>  
  
 [!code-csharp[System.String.Concat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat4.cs#1)]
 [!code-vb[System.String.Concat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1409">Этот метод помечен атрибутом <see langword="vararg" /> ключевое слово, которое означает, что он поддерживает переменное количество параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1409">This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters.</span></span> <span data-ttu-id="086c0-1410">Метод может вызываться из Visual C++, но он не может вызываться из кода C# или Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="086c0-1410">The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</span></span> <span data-ttu-id="086c0-1411">Компиляторы C# и Visual Basic разрешить вызовы <see cref="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" /> как вызов <see cref="M:System.String.Concat(System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1411">The C# and Visual Basic compilers resolve calls to <see cref="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.String.Concat(System.Object[])" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (ReadOnlySpan&lt;char&gt; str0, ReadOnlySpan&lt;char&gt; str1, ReadOnlySpan&lt;char&gt; str2, ReadOnlySpan&lt;char&gt; str3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(valuetype System.ReadOnlySpan`1&lt;char&gt; str0, valuetype System.ReadOnlySpan`1&lt;char&gt; str1, valuetype System.ReadOnlySpan`1&lt;char&gt; str2, valuetype System.ReadOnlySpan`1&lt;char&gt; str3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (str0 As ReadOnlySpan(Of Char), str1 As ReadOnlySpan(Of Char), str2 As ReadOnlySpan(Of Char), str3 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(ReadOnlySpan&lt;char&gt; str0, ReadOnlySpan&lt;char&gt; str1, ReadOnlySpan&lt;char&gt; str2, ReadOnlySpan&lt;char&gt; str3);" />
      <MemberSignature Language="F#" Value="static member Concat : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.string.Concat (str0, str1, str2, str3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str0" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="str1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="str2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="str3" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="str0">To be added.</param>
        <param name="str1">To be added.</param>
        <param name="str2">To be added.</param>
        <param name="str3">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (string str0, string str1, string str2, string str3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(string str0, string str1, string str2, string str3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (str0 As String, str1 As String, str2 As String, str3 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::String ^ str0, System::String ^ str1, System::String ^ str2, System::String ^ str3);" />
      <MemberSignature Language="F#" Value="static member Concat : string * string * string * string -&gt; string" Usage="System.string.Concat (str0, str1, str2, str3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str0" Type="System.String" />
        <Parameter Name="str1" Type="System.String" />
        <Parameter Name="str2" Type="System.String" />
        <Parameter Name="str3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str0"><span data-ttu-id="086c0-1412">Первая из сцепляемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1412">The first string to concatenate.</span></span></param>
        <param name="str1"><span data-ttu-id="086c0-1413">Вторая из сцепляемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1413">The second string to concatenate.</span></span></param>
        <param name="str2"><span data-ttu-id="086c0-1414">Третья из сцепляемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1414">The third string to concatenate.</span></span></param>
        <param name="str3"><span data-ttu-id="086c0-1415">Четвертая из сцепляемых строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1415">The fourth string to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-1416">Сцепляет четыре указанных экземпляра <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1416">Concatenates four specified instances of <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-1417">Сцепление <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" /> и <paramref name="str3" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1417">The concatenation of <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" />, and <paramref name="str3" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1418">Этот метод объединяет `str0`, `str1`, `str2`, и `str3`; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1418">The method concatenates `str0`, `str1`, `str2`, and `str3`; it does not add any delimiters.</span></span>  
  
## Examples  
 <span data-ttu-id="086c0-1419">В следующем примере определяется массив четырехбуквенных слов и сохраняет отдельные буквы в массив строк для их шифрования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1419">The following example defines an array of four-letter words and stores their individual letters to a string array in order to scramble them.</span></span> <span data-ttu-id="086c0-1420">Затем он вызывает <xref:System.String.Concat%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> метод, чтобы воссоздать скремблированных слова.</span><span class="sxs-lookup"><span data-stu-id="086c0-1420">It then calls the <xref:System.String.Concat%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> method to reassemble the scrambled words.</span></span>  
  
 [!code-csharp[System.String.Concat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat4.cs#1)]
 [!code-vb[System.String.Concat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static string Concat&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat(Of T) (values As IEnumerable(Of T)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::String ^ Concat(System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Concat : seq&lt;'T&gt; -&gt; string" Usage="System.string.Concat values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="086c0-1421">Тип элементов параметра <paramref name="values" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1421">The type of the members of <paramref name="values" />.</span></span></typeparam>
        <param name="values"><span data-ttu-id="086c0-1422">Объект коллекции, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1422">A collection object that implements the <see cref="T:System.Collections.Generic.IEnumerable`1" /> interface.</span></span></param>
        <summary><span data-ttu-id="086c0-1423">Сцепляет элементы реализации <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1423">Concatenates the members of an <see cref="T:System.Collections.Generic.IEnumerable`1" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="086c0-1424">Сцепленные элементы в параметре <paramref name="values" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1424">The concatenated members in <paramref name="values" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1425">Метод сцепляет каждый объект в `values`; разделители не добавляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-1425">The method concatenates each object in `values`; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="086c0-1426"><xref:System.String.Empty> Строки используется вместо любой аргумент null.</span><span class="sxs-lookup"><span data-stu-id="086c0-1426">An <xref:System.String.Empty> string is used in place of any null argument.</span></span>  
  
 <span data-ttu-id="086c0-1427"><xref:System.String.Concat%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> — Это удобный метод, который позволяет сцеплять каждого элемента в <xref:System.Collections.Generic.IEnumerable%601> коллекции без предварительного преобразования элементов в строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1427"><xref:System.String.Concat%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> is a convenience method that lets you concatenate each element in an <xref:System.Collections.Generic.IEnumerable%601> collection without first converting the elements to strings.</span></span> <span data-ttu-id="086c0-1428">Это особенно полезно, выражения запросов Language-Integrated Query (LINQ), как показано в примере.</span><span class="sxs-lookup"><span data-stu-id="086c0-1428">It is particularly useful with Language-Integrated Query (LINQ) query expressions, as the example illustrates.</span></span> <span data-ttu-id="086c0-1429">Строковое представление каждого объекта в <xref:System.Collections.Generic.IEnumerable%601> коллекции извлекается путем вызова этого объекта `ToString` метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1429">The string representation of each object in the <xref:System.Collections.Generic.IEnumerable%601> collection is derived by calling that object's `ToString` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1430">В следующем примере определяется очень простой `Animal` класс, содержащий имя животного и порядок, к которой он принадлежит.</span><span class="sxs-lookup"><span data-stu-id="086c0-1430">The following example defines a very simple `Animal` class that contains the name of an animal and the order to which it belongs.</span></span> <span data-ttu-id="086c0-1431">Затем он определяет <xref:System.Collections.Generic.List%601> объект, содержащий ряд `Animal` объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1431">It then defines a <xref:System.Collections.Generic.List%601> object to contain a number of `Animal` objects.</span></span> <span data-ttu-id="086c0-1432"><xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> Метод расширения вызывается для извлечения `Animal` объектов, `Order` свойство имеет значение «Грызун».</span><span class="sxs-lookup"><span data-stu-id="086c0-1432">The <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> extension method is called to extract the `Animal` objects whose `Order` property equals "Rodent".</span></span> <span data-ttu-id="086c0-1433">Результат передается <xref:System.String.Concat%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> метод и выводится на консоль.</span><span class="sxs-lookup"><span data-stu-id="086c0-1433">The result is passed to the <xref:System.String.Concat%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> method and displayed to the console.</span></span>  
  
 [!code-csharp[System.String.Concat#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat3.cs#4)]
 [!code-vb[System.String.Concat#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat3.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1434"><paramref name="values" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1434"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Contains(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(char value);" />
      <MemberSignature Language="F#" Value="member this.Contains : char -&gt; bool" Usage="string.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="string.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-1435">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-1435">The string to seek.</span></span></param>
        <summary><span data-ttu-id="086c0-1436">Возвращает значение, указывающее, встречается ли указанная подстрока внутри этой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1436">Returns a value indicating whether a specified substring occurs within this string.</span></span></summary>
        <returns><span data-ttu-id="086c0-1437"><see langword="true" />, если параметр <paramref name="value" /> встречается в строке или <paramref name="value" /> является пустой строкой (""); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1437"><see langword="true" /> if the <paramref name="value" /> parameter occurs within this string, or if <paramref name="value" /> is the empty string (""); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1438">Этот метод выполняет порядковое сравнение (с учетом регистра и без учета языка и региональных параметров).</span><span class="sxs-lookup"><span data-stu-id="086c0-1438">This method performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span> <span data-ttu-id="086c0-1439">Поиск начинается с позиции первого символа строки и продолжается до последней позиции символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-1439">The search begins at the first character position of this string and continues through the last character position.</span></span>  
  
 <span data-ttu-id="086c0-1440">Чтобы определить, является ли строка содержит заданной подстроки, используя отличные от порядкового сравнения (например, сравнение с учетом языка и региональных параметров или порядковое сравнение без учета регистра), вы можете создать пользовательский метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1440">To determine whether a string contains a specified substring by using something other than ordinal comparison (such as culture-sensitive comparison, or ordinal case-insensitive comparison), you can create a custom method.</span></span> <span data-ttu-id="086c0-1441">В следующем примере показано один такой новый подход.</span><span class="sxs-lookup"><span data-stu-id="086c0-1441">The following example illustrates one such approach.</span></span> <span data-ttu-id="086c0-1442">Он определяет <xref:System.String> метод расширения, который включает в себя <xref:System.StringComparison> параметр и указывает, содержит ли строка подстроку, при использовании указанной формы сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1442">It defines a <xref:System.String> extension method  that includes a <xref:System.StringComparison> parameter and indicates whether a string contains a substring when using the specified form of string comparison.</span></span>  
  
 [!code-csharp[System.String.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Contains/cs/ContainsExt1.cs#1)]
 [!code-vb[System.String.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Contains/vb/ContainsExt1.vb#1)]  
  
 <span data-ttu-id="086c0-1443">В следующем примере затем вызывается `Contains` метод расширения, чтобы определить, находится ли в строке подстроку, при использовании порядкового сравнения и порядковое сравнение без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1443">The following example then calls the `Contains` extension method to determine whether a substring is found in a string when using ordinal comparison and case-insensitive ordinal comparison.</span></span>  
  
 [!code-csharp[System.String.Contains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Contains/cs/ContainsExt1.cs#2)]
 [!code-vb[System.String.Contains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Contains/vb/ContainsExt1.vb#2)]  
  
 <span data-ttu-id="086c0-1444">Если вы заинтересованы в позицию подстроки `value` в текущем экземпляре, можно вызвать <xref:System.String.IndexOf%2A> можно вызвать метод, чтобы получить начальную позицию первого найденного или <xref:System.String.LastIndexOf%2A> метод для получения начальное положение элемента его последнее вхождение.</span><span class="sxs-lookup"><span data-stu-id="086c0-1444">If you are interested in the position of the substring `value` in the current instance, you can call the <xref:System.String.IndexOf%2A> method to get the starting position of its first occurrence, or you can call the <xref:System.String.LastIndexOf%2A> method to get the starting position of its last occurrence.</span></span> <span data-ttu-id="086c0-1445">В пример включен вызов <xref:System.String.IndexOf%28System.String%29> метод, если найден подстрока в экземпляре строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1445">The example includes a call to the <xref:System.String.IndexOf%28System.String%29> method if a substring is found in a string instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1446">В следующем примере определяется, является ли строка «fox» подстроки знакомые предложения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1446">The following example determines whether the string "fox" is a substring of a familiar quotation.</span></span> <span data-ttu-id="086c0-1447">Если «fox» найдено в строке, она также отображает его начальной позиции.</span><span class="sxs-lookup"><span data-stu-id="086c0-1447">If "fox" is found in the string, it also displays its starting position.</span></span>  
  
 [!code-cpp[String.Contains#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.contains/CPP/cont.cpp#1)]
 [!code-csharp[String.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.contains/CS/cont.cs#1)]
 [!code-vb[String.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.contains/VB/cont.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1448"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1448"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOf(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (char value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(char value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Contains(System.Char,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Char, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(char value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.Contains : char * StringComparison -&gt; bool" Usage="string.Contains (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Contains(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.Contains : string * StringComparison -&gt; bool" Usage="string.Contains (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static string Copy (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Copy(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Copy(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Copy (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Copy(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Copy : string -&gt; string" Usage="System.string.Copy str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("This API should not be used to create mutable strings. See https://go.microsoft.com/fwlink/?linkid=2084035 for alternatives.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="086c0-1449">Строка для копирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1449">The string to copy.</span></span></param>
        <summary><span data-ttu-id="086c0-1450">Создает экземпляр <see cref="T:System.String" />, имеющий то же значение, что и указанный экземпляр <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1450">Creates a new instance of <see cref="T:System.String" /> with the same value as a specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-1451">Новая строка с тем же значением, что и <paramref name="str" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1451">A new string with the same value as <paramref name="str" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="086c0-1452">`Copy` Возвращает метод <xref:System.String> объект, который имеет то же значение, что исходная строка, но представляет ссылку на другой объект.</span><span class="sxs-lookup"><span data-stu-id="086c0-1452">The `Copy` method returns a <xref:System.String> object that has the same value as the original string but represents a different object reference.</span></span> <span data-ttu-id="086c0-1453">Он отличается от операция присваивания, который назначает существующую ссылку на строку дополнительных объектной переменной.</span><span class="sxs-lookup"><span data-stu-id="086c0-1453">It differs from an assignment operation, which assigns an existing string reference to an additional object variable.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="086c0-1454">Начиная с .NET Core 3.0, этот метод является устаревшим.</span><span class="sxs-lookup"><span data-stu-id="086c0-1454">Starting with .NET Core 3.0, this method is obsolete.</span></span> <span data-ttu-id="086c0-1455">Тем не менее его использование в любой реализации .NET, не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="086c0-1455">However, we do not recommend its use in any .NET implementation.</span></span> <span data-ttu-id="086c0-1456">В частности, из-за изменения в интернирование строк в .NET Core 3.0, в некоторых случаях `Copy` метод не создает новую строку, но просто возвращает ссылку на существующей интернированные строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1456">In particular, because of changes in string interning in .NET Core 3.0, in some cases the `Copy` method will not create a new string but will simply return a reference to an existing interned string.</span></span>   

<span data-ttu-id="086c0-1457">В зависимости от того, почему необходимо вызвать `Copy` метода, существует несколько вариантов:</span><span class="sxs-lookup"><span data-stu-id="086c0-1457">Depending on Why you want to call the `Copy` method, there are a number of alternatives:</span></span>

- <span data-ttu-id="086c0-1458">Если вам нужен экземпляр другую строку для использования в операции, которая изменяет строку, используйте исходный экземпляр строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1458">If you want a different string instance to use in an operation that modifies the string, use the original string instance.</span></span> <span data-ttu-id="086c0-1459">Поскольку строки являются неизменяемыми, строка операция создает новый экземпляр строки и исходную строку, остается без изменений.</span><span class="sxs-lookup"><span data-stu-id="086c0-1459">Because strings are immutable, the string operation creates a new string instance, and the original string remains unaffected.</span></span> <span data-ttu-id="086c0-1460">В этом случае не следует присваивать новые строковая ссылка на исходную переменную строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1460">In this case, you should not assign the new string reference to the original string variable.</span></span> <span data-ttu-id="086c0-1461">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="086c0-1461">The following example provides an illustration.</span></span>

  [!code-csharp[Performing a string operation](~/samples/snippets/csharp/api/system/string/copy/program.cs#1)]
  [!code-vb[Performing a string operation](~/samples/snippets/visualbasic/api/system/string/copy/program.vb#1)]  
  
   <span data-ttu-id="086c0-1462">В этом случае вызов `Copy` метод, чтобы создать новую строку перед вызовом <xref:System.String.Substring%2A> метод без необходимости создает новый экземпляр строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1462">In this case, calling the `Copy` method to create a new string before calling the <xref:System.String.Substring%2A> method unnecessarily creates a new string instance.</span></span> 

- <span data-ttu-id="086c0-1463">Если вы хотите создать изменяемые буфер с помощью того же содержимого исходную строку, вызовите <xref:System.String.ToCharArray%2A?displayProperty=nameWithType> или <xref:System.Text.StringBuilder.%23ctor(System.String)?displayProperty=nameWithType> конструктор.</span><span class="sxs-lookup"><span data-stu-id="086c0-1463">If you want to create a mutable buffer with the same contents as the original string, call the <xref:System.String.ToCharArray%2A?displayProperty=nameWithType> or <xref:System.Text.StringBuilder.%23ctor(System.String)?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="086c0-1464">Например:</span><span class="sxs-lookup"><span data-stu-id="086c0-1464">For example:</span></span>

  [!code-csharp[Performing a string operation](~/samples/snippets/csharp/api/system/string/copy/program.cs#2)]
  [!code-vb[Performing a string operation](~/samples/snippets/visualbasic/api/system/string/copy/program.vb#2)]  

- <span data-ttu-id="086c0-1465">Если вы хотите создать копию строки, изменяемые, таким образом, можно использовать небезопасный код, чтобы изменение содержимого строки, используйте <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1465">If you want to create a mutable copy of the string so that you can use unsafe code to modify the string contents, use <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="086c0-1466">В следующем примере используется <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> способ получить указатель на расположение строки, скопированной в неуправляемой памяти, увеличивает на единицу кодовая точка Юникода каждого символа в строке и копирует результирующая строка управляемая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-1466">The following example uses the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> method to get a pointer to the location of an copied string in unmanaged memory, increments the Unicode code point of each character in the string by one, and copies the resulting string back to a managed string.</span></span>

  [!code-csharp[Performing a string operation](~/samples/snippets/csharp/api/system/string/copy/program.cs#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1467"><paramref name="str" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1467"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, char[] destination, int destinationIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, char[] destination, int32 destinationIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As Char(), destinationIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, cli::array &lt;char&gt; ^ destination, int destinationIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * char[] * int * int -&gt; unit" Usage="string.CopyTo (sourceIndex, destination, destinationIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceIndex"><span data-ttu-id="086c0-1468">Индекс первого символа в этом экземпляре, который необходимо скопировать.</span><span class="sxs-lookup"><span data-stu-id="086c0-1468">The index of the first character in this instance to copy.</span></span></param>
        <param name="destination"><span data-ttu-id="086c0-1469">Массив символов Юникода, в который копируются символы в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-1469">An array of Unicode characters to which characters in this instance are copied.</span></span></param>
        <param name="destinationIndex"><span data-ttu-id="086c0-1470">Индекс в массиве <paramref name="destination" />, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="086c0-1470">The index in <paramref name="destination" /> at which the copy operation begins.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-1471">Число знаков в этом экземпляре, копируемых в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1471">The number of characters in this instance to copy to <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="086c0-1472">Копирует заданное число знаков, начиная с указанной позиции в этом экземпляре до указанной позиции в массиве знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-1472">Copies a specified number of characters from a specified position in this instance to a specified position in an array of Unicode characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1473">Этот метод копирует `count` символы `sourceIndex` позицию данного экземпляра для `destinationIndex` положение элемента `destination` массив символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1473">This method copies `count` characters from the `sourceIndex` position of this instance to the `destinationIndex` position of `destination` character array.</span></span> <span data-ttu-id="086c0-1474">Этот метод не изменяется `destination` массив символов; он должен иметь достаточное количество элементов для хранения скопированных символов или вызывает метод <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1474">This method does not resize the `destination` character array; it must have a sufficient number of elements to accommodate the copied characters or the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="086c0-1475">`sourceIndex` и `destinationIndex` отсчитываются от нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1475">`sourceIndex` and `destinationIndex` are zero-based.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1476">В следующем примере демонстрируется <xref:System.String.CopyTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1476">The following example demonstrates the <xref:System.String.CopyTo%2A> method.</span></span>  
  
 [!code-cpp[stringcopyto#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringcopyto/CPP/stringcopyto.cpp#1)]
 [!code-csharp[stringcopyto#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringcopyto/CS/stringcopyto.cs#1)]
 [!code-vb[stringcopyto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringcopyto/VB/stringcopyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1477"><paramref name="destination" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1477"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-1478"><paramref name="sourceIndex" />, <paramref name="destinationIndex" /> или <paramref name="count" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-1478"><paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" /> is negative</span></span> 
<span data-ttu-id="086c0-1479">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1479">-or-</span></span> 
 <span data-ttu-id="086c0-1480"><paramref name="sourceIndex" /> не определяет позицию в текущем экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-1480"><paramref name="sourceIndex" /> does not identify a position in the current instance.</span></span>  
  
<span data-ttu-id="086c0-1481">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1481">-or-</span></span> 
 <span data-ttu-id="086c0-1482"><paramref name="destinationIndex" /> не определяет допустимый индекс в массиве <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1482"><paramref name="destinationIndex" /> does not identify a valid index in the <paramref name="destination" /> array.</span></span>  
  
<span data-ttu-id="086c0-1483">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1483">-or-</span></span> 
 <span data-ttu-id="086c0-1484"><paramref name="count" /> больше, чем длина подстроки от <paramref name="sourceIndex" /> до конца данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1484"><paramref name="count" /> is greater than the length of the substring from <paramref name="sourceIndex" /> to the end of this instance</span></span> 
<span data-ttu-id="086c0-1485">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1485">-or-</span></span> 
 <span data-ttu-id="086c0-1486"><paramref name="count" /> больше, чем длина подмассива от <paramref name="destinationIndex" /> до конца массива <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1486"><paramref name="count" /> is greater than the length of the subarray from <paramref name="destinationIndex" /> to the end of the <paramref name="destination" /> array.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public static string Create&lt;TState&gt; (int length, TState state, System.Buffers.SpanAction&lt;char,TState&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Create&lt;TState&gt;(int32 length, !!TState state, class System.Buffers.SpanAction`2&lt;char, !!TState&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Create``1(System.Int32,``0,System.Buffers.SpanAction{System.Char,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TState) (length As Integer, state As TState, action As SpanAction(Of Char, TState)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TState&gt;&#xA; static System::String ^ Create(int length, TState state, System::Buffers::SpanAction&lt;char, TState&gt; ^ action);" />
      <MemberSignature Language="F#" Value="static member Create : int * 'State * System.Buffers.SpanAction&lt;char, 'State&gt; -&gt; string" Usage="System.string.Create (length, state, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="TState" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="action" Type="System.Buffers.SpanAction&lt;System.Char,TState&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="length">To be added.</param>
        <param name="state">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly string Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Empty" />
      <MemberSignature Language="DocId" Value="F:System.String.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : string" Usage="System.string.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086c0-1487">Представляет пустую строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1487">Represents the empty string.</span></span> <span data-ttu-id="086c0-1488">Это поле доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1488">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1489">Значение этого поля является строкой нулевой длины, «».</span><span class="sxs-lookup"><span data-stu-id="086c0-1489">The value of this field is the zero-length string, "".</span></span>  
  
 <span data-ttu-id="086c0-1490">В коде приложения это поле чаще всего используется в назначениях инициализировать строковую переменную на пустую строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1490">In application code, this field is most commonly used in assignments to initialize a string variable to an empty string.</span></span> <span data-ttu-id="086c0-1491">Чтобы проверить, является ли значение строки `null` или <xref:System.String.Empty?displayProperty=nameWithType>, используйте <xref:System.String.IsNullOrEmpty%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1491">To test whether the value of a string is either `null` or <xref:System.String.Empty?displayProperty=nameWithType>, use the <xref:System.String.IsNullOrEmpty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.IsNullOrEmpty(System.String)" />
        <altmember cref="M:System.String.IsNullOrWhiteSpace(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EndsWith">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-1492">Определяет, совпадает ли конец данного экземпляра строки с указанной строкой.</span><span class="sxs-lookup"><span data-stu-id="086c0-1492">Determines whether the end of this string instance matches a specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.EndsWith(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(char value);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : char -&gt; bool" Usage="string.EndsWith value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.EndsWith(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string -&gt; bool" Usage="string.EndsWith value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-1493">Строка, которую необходимо сравнить с подстрокой, расположенной в конце этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1493">The string to compare to the substring at the end of this instance.</span></span></param>
        <summary><span data-ttu-id="086c0-1494">Определяет, совпадает ли конец данного экземпляра строки с указанной строкой.</span><span class="sxs-lookup"><span data-stu-id="086c0-1494">Determines whether the end of this string instance matches the specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-1495"><see langword="true" />, если конец этого экземпляра совпадает с <paramref name="value" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1495"><see langword="true" /> if <paramref name="value" /> matches the end of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1496">Этот метод сравнивает `value` подстрокой, расположенной в конце данного экземпляра, имеют одинаковую длину как `value`и возвращает значение, указывающее, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="086c0-1496">This method compares `value` to the substring at the end of this instance that is the same length as `value`, and returns an indication whether they are equal.</span></span> <span data-ttu-id="086c0-1497">Равными, `value` должен ссылаться на тот же экземпляр или соответствует концу данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1497">To be equal, `value` must be a reference to this same instance or match the end of this instance.</span></span>  
  
 <span data-ttu-id="086c0-1498">Этот метод выполняет сравнение по словам (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1498">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1499">Следующий пример показывает, заканчивается ли каждой строки в массиве с точкой (».»).</span><span class="sxs-lookup"><span data-stu-id="086c0-1499">The following example indicates whether each string in an array ends with a period (".").</span></span>  
  
 [!code-csharp[System.String.EndsWith#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.EndsWith/cs/EndsWith1.cs#1)]
 [!code-vb[System.String.EndsWith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.EndsWith/vb/EndsWith1.vb#1)]  
  
 <span data-ttu-id="086c0-1500">В следующем примере определяется `StripEndTags` метод, который использует <xref:System.String.EndsWith%28System.String%29> способ удаления закрывающие теги HTML в конце строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1500">The following example defines a `StripEndTags` method that uses the <xref:System.String.EndsWith%28System.String%29> method to remove HTML end tags from the end of a line.</span></span> <span data-ttu-id="086c0-1501">Обратите внимание, что `StripEndTags` метод вызывается рекурсивно для убедитесь, что удалены несколько закрывающие теги HTML в конце строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1501">Note that the  `StripEndTags` method is called recursively to ensure that multiple HTML end tags at the end of the line are removed.</span></span>  
  
 [!code-cpp[stringendswith#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringendswith/CPP/stringendswith.cpp#1)]
 [!code-csharp[stringendswith#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringendswith/CS/stringendswith.cs#1)]
 [!code-vb[stringendswith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringendswith/VB/stringendswith.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1502"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1502"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1503">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методы сравнения строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-1503">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-1504">Чтобы определить, заканчивается ли строка определенной подстрокой, используя правила сравнения строк для текущего языка и региональных параметров, вызовите <see cref="M:System.String.EndsWith(System.String,System.StringComparison)" /> перегрузку метода со значением <see cref="F:System.StringComparison.CurrentCulture" /> для его <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1504">To determine whether a string ends with a particular substring by using the string comparison rules of the current culture, call the <see cref="M:System.String.EndsWith(System.String,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="M:System.String.StartsWith(System.String)" />
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.EndsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * StringComparison -&gt; bool" Usage="string.EndsWith (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-1505">Строка, которую необходимо сравнить с подстрокой, расположенной в конце этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1505">The string to compare to the substring at the end of this instance.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-1506">Одно из значений перечисления, определяющее способ сравнения данной строки со значением <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1506">One of the enumeration values that determines how this string and <paramref name="value" /> are compared.</span></span></param>
        <summary><span data-ttu-id="086c0-1507">Определяет, совпадает ли конец экземпляра строки с заданной строкой при сравнении с учетом заданного параметра сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1507">Determines whether the end of this string instance matches the specified string when compared using the specified comparison option.</span></span></summary>
        <returns><span data-ttu-id="086c0-1508"><see langword="true" />, если параметр <paramref name="value" /> соответствует концу данной строки; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1508"><see langword="true" /> if the <paramref name="value" /> parameter matches the end of this string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1509"><xref:System.String.EndsWith%2A> Метод сравнивает `value` параметр подстрокой, расположенной в конце этой строки и возвращает значение, указывающее, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="086c0-1509">The <xref:System.String.EndsWith%2A> method compares the `value` parameter to the substring at the end of this string and returns a value that indicates whether they are equal.</span></span> <span data-ttu-id="086c0-1510">Равными, `value` должен быть ссылкой на ту же строку, должно быть пустой строкой ("»), или необходимо соответствует концу данной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1510">To be equal, `value` must be a reference to this same string, must be the empty string (""), or must match the end of this string.</span></span> <span data-ttu-id="086c0-1511">Тип сравнения, выполняемые <xref:System.String.EndsWith%2A> метод зависит от значения `comparisonType` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1511">The type of comparison performed by the <xref:System.String.EndsWith%2A> method depends on the value of the `comparisonType` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1512">Следующий пример определяет, заканчивается ли строка определенной подстрокой.</span><span class="sxs-lookup"><span data-stu-id="086c0-1512">The following example determines whether a string ends with a particular substring.</span></span> <span data-ttu-id="086c0-1513">Результаты зависят от выбора языка и региональных параметров, учитывается ли регистр и выполняется ли порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-1513">The results are affected by the choice of culture, whether case is ignored, and whether an ordinal comparison is performed.</span></span>  
  
 [!code-cpp[System.String.EndsWithCmp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.EndsWithCmp/cpp/ewcmp.cpp#1)]
 [!code-csharp[System.String.EndsWithCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.EndsWithCmp/cs/ewcmp.cs#1)]
 [!code-vb[System.String.EndsWithCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.EndsWithCmp/vb/ewcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1514"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1514"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-1515"><paramref name="comparisonType" /> не является значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1515"><paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <altmember cref="T:System.StringComparison" />
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string value, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string value, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As String, ignoreCase As Boolean, culture As CultureInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ value, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * bool * System.Globalization.CultureInfo -&gt; bool" Usage="string.EndsWith (value, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-1516">Строка, которую необходимо сравнить с подстрокой, расположенной в конце этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1516">The string to compare to the substring at the end of this instance.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="086c0-1517">Значение <see langword="true" />, чтобы не учитывать регистр при сравнении; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1517"><see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span></span></param>
        <param name="culture"><span data-ttu-id="086c0-1518">Связанные с языком и региональными параметрами сведения, определяющие, как выполняется сравнение этого экземпляра и <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1518">Cultural information that determines how this instance and <paramref name="value" /> are compared.</span></span> <span data-ttu-id="086c0-1519">Если значением параметра <paramref name="culture" /> является <see langword="null" />, используется текущий язык и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="086c0-1519">If <paramref name="culture" /> is <see langword="null" />, the current culture is used.</span></span></param>
        <summary><span data-ttu-id="086c0-1520">Определяет, совпадает ли конец данного экземпляра строки с заданной строкой при сравнении с учетом заданного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1520">Determines whether the end of this string instance matches the specified string when compared using the specified culture.</span></span></summary>
        <returns><span data-ttu-id="086c0-1521"><see langword="true" />, если параметр <paramref name="value" /> соответствует концу данной строки; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1521"><see langword="true" /> if the <paramref name="value" /> parameter matches the end of this string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1522">Этот метод сравнивает `value` параметр подстрокой, расположенной в конце данной строки, имеют одинаковую длину как `value`и возвращает значение, указывающее, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="086c0-1522">This method compares the `value` parameter to the substring at the end of this string that is the same length as `value`, and returns a value that indicates whether they are equal.</span></span> <span data-ttu-id="086c0-1523">Равными, `value` должен ссылаться на тот же экземпляр или соответствует концу данной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1523">To be equal, `value` must be a reference to this same instance or match the end of this string.</span></span>  
  
 <span data-ttu-id="086c0-1524">Этот метод выполняет сравнение слов (язык и региональные параметры с учетом), с помощью указанного регистра и языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1524">This method performs a word (culture-sensitive) comparison using the specified casing and culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1525">В следующем примере определяется, содержится ли строка в конце другой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1525">The following example determines whether a string occurs at the end of another string.</span></span> <span data-ttu-id="086c0-1526"><xref:System.String.EndsWith%2A> Был вызван несколько раз, используя чувствительность к регистру, учет регистра и различных языков и региональных параметров, которые влияют на результаты поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-1526">The <xref:System.String.EndsWith%2A> method is called several times using case sensitivity, case insensitivity, and different cultures that influence the results of the search.</span></span>  
  
 [!code-csharp[system.string.EndsWithCI#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.EndsWithCI/cs/ewci.cs#1)]
 [!code-vb[system.string.EndsWithCI#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.EndsWithCI/vb/ewci.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1527"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1527"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateRunes">
      <MemberSignature Language="C#" Value="public System.Text.StringRuneEnumerator EnumerateRunes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.StringRuneEnumerator EnumerateRunes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.EnumerateRunes" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateRunes () As StringRuneEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringRuneEnumerator EnumerateRunes();" />
      <MemberSignature Language="F#" Value="member this.EnumerateRunes : unit -&gt; System.Text.StringRuneEnumerator" Usage="string.EnumerateRunes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringRuneEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-1528">Определяет, равны ли значения двух объектов <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1528">Determines whether two <see cref="T:System.String" /> objects have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="string.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="086c0-1529">Строка для сравнения с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="086c0-1529">The string to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="086c0-1530">Определяет, равны ли значения этого экземпляра и указанного объекта, который также должен быть объектом <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1530">Determines whether this instance and a specified object, which must also be a <see cref="T:System.String" /> object, have the same value.</span></span></summary>
        <returns><span data-ttu-id="086c0-1531"><see langword="true" />, если объект <paramref name="obj" /> имеет тип <see cref="T:System.String" /> и его значение совпадает со значением данного экземпляра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1531"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.String" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="086c0-1532">Если значением параметра <paramref name="obj" /> является <see langword="null" />, метод возвращает <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1532">If <paramref name="obj" /> is <see langword="null" />, the method returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1533">Этот метод выполняет порядковое сравнение (с учетом регистра и без учета языка и региональных параметров).</span><span class="sxs-lookup"><span data-stu-id="086c0-1533">This method performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1534">В следующем примере демонстрируется <xref:System.String.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1534">The following example demonstrates the <xref:System.String.Equals%2A> method.</span></span>  
  
 [!code-cpp[string.equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.equals/CPP/equals.cpp#1)]
 [!code-csharp[string.equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.equals/CS/equals.cs#1)]
 [!code-vb[string.equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : string -&gt; bool" Usage="string.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-1535">Строка для сравнения с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="086c0-1535">The string to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="086c0-1536">Определяет, равны ли значения этого экземпляра и указанного объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1536">Determines whether this instance and another specified <see cref="T:System.String" /> object have the same value.</span></span></summary>
        <returns><span data-ttu-id="086c0-1537"><see langword="true" />, если значение параметра <paramref name="value" /> совпадает со значением данного экземпляра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1537"><see langword="true" /> if the value of the <paramref name="value" /> parameter is the same as the value of this instance; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="086c0-1538">Если значением параметра <paramref name="value" /> является <see langword="null" />, метод возвращает <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1538">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1539">Этот метод выполняет порядковое сравнение (с учетом регистра и без учета языка и региональных параметров).</span><span class="sxs-lookup"><span data-stu-id="086c0-1539">This method performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1540">В следующем примере демонстрируется <xref:System.String.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1540">The following example demonstrates the <xref:System.String.Equals%2A> method.</span></span> <span data-ttu-id="086c0-1541">Он сравнивает стиле title слова «File» с помощью эквивалентных должен быть словом, его эквивалент в нижнем регистре, эквивалентный символ верхнего регистра и слово, которое содержит LATIN НЕБОЛЬШОЙ буквы без ТОЧКИ I (U + 0131) вместо LATIN НЕБОЛЬШОЙ буква I (U + 0069).</span><span class="sxs-lookup"><span data-stu-id="086c0-1541">It compares the title-cased word "File" with an equivalent word, its lowercase equivalent, its uppercase equivalent, and a word that contains LATIN SMALL LETTER DOTLESS I (U+0131) instead of LATIN SMALL LETTER I (U+0069).</span></span> <span data-ttu-id="086c0-1542">Так как <xref:System.String.Equals%28System.String%29> метод выполняет порядковое сравнение, возвращает только сравнение идентичные слово `true`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1542">Because the <xref:System.String.Equals%28System.String%29> method performs an ordinal comparison, only the comparison with an identical word returns `true`.</span></span>  
  
 [!code-csharp[System.String.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/equalsex1.cs#2)]
 [!code-vb[System.String.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/equalsex1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (string a, string b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(string a, string b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As String, b As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::String ^ a, System::String ^ b);" />
      <MemberSignature Language="F#" Value="static member Equals : string * string -&gt; bool" Usage="System.string.Equals (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.String" />
        <Parameter Name="b" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="086c0-1543">Первая сравниваемая строка или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1543">The first string to compare, or <see langword="null" />.</span></span></param>
        <param name="b"><span data-ttu-id="086c0-1544">Вторая сравниваемая строка или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1544">The second string to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="086c0-1545">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1545">Determines whether two specified <see cref="T:System.String" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="086c0-1546">Значение <see langword="true" />, если значение параметра <paramref name="a" /> совпадает со значением <paramref name="b" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1546"><see langword="true" /> if the value of <paramref name="a" /> is the same as the value of <paramref name="b" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="086c0-1547">Если оба параметра <paramref name="a" /> и <paramref name="b" /> имеют значение <see langword="null" />, метод возвращает значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1547">If both <paramref name="a" /> and <paramref name="b" /> are <see langword="null" />, the method returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1548">Этот метод выполняет порядковое сравнение (с учетом регистра и без учета языка и региональных параметров).</span><span class="sxs-lookup"><span data-stu-id="086c0-1548">This method performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1549">В следующем примере демонстрируется <xref:System.String.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1549">The following example demonstrates the <xref:System.String.Equals%2A> method.</span></span>  
  
 [!code-cpp[string.equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.equals/CPP/equals.cpp#1)]
 [!code-csharp[string.equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.equals/CS/equals.cs#1)]
 [!code-vb[string.equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * StringComparison -&gt; bool" Usage="string.Equals (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-1550">Строка для сравнения с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="086c0-1550">The string to compare to this instance.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-1551">Одно из значений перечисления, задающее способ сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1551">One of the enumeration values that specifies how the strings will be compared.</span></span></param>
        <summary><span data-ttu-id="086c0-1552">Определяет, равны ли значения этой строки и указанного объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1552">Determines whether this string and a specified <see cref="T:System.String" /> object have the same value.</span></span> <span data-ttu-id="086c0-1553">Параметр определяет язык и региональные параметры, учет регистра и правила сортировки, используемые при сравнении.</span><span class="sxs-lookup"><span data-stu-id="086c0-1553">A parameter specifies the culture, case, and sort rules used in the comparison.</span></span></summary>
        <returns><span data-ttu-id="086c0-1554"><see langword="true" />, если значение параметра <paramref name="value" /> совпадает со значением данной строки; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1554"><see langword="true" /> if the value of the <paramref name="value" /> parameter is the same as this string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1555">`comparisonType` Задаёт ли при сравнении следует использовать текущие или инвариантные язык и региональные параметры, учитывает или игнорировать регистр двух сравниваемых строк либо word или правил.</span><span class="sxs-lookup"><span data-stu-id="086c0-1555">The `comparisonType` parameter indicates whether the comparison should use the current or invariant culture, honor or ignore the case of the two strings being compared, or use word or ordinal sort rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1556">В следующем примере создается массив строк, состоящий из заглавных букв, «I», символ «i» нижнего регистра и без точки «ı».</span><span class="sxs-lookup"><span data-stu-id="086c0-1556">The following example creates a string array that consists of an uppercase "I", a lowercase "i", and a dotless "ı".</span></span> <span data-ttu-id="086c0-1557">Затем он вызывает <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> метод, чтобы сравнить их с помощью каждое возможное <xref:System.StringComparison> значение перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-1557">It then calls the <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> method to compare them by using each possible <xref:System.StringComparison> enumeration value.</span></span>  
  
 [!code-csharp[System.String.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/eqcmp.cs#1)]
 [!code-vb[System.String.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/eqcmp.vb#1)]  
  
 <span data-ttu-id="086c0-1558">В следующем примере сравниваются четыре набора слов с помощью каждого члена <xref:System.StringComparison> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-1558">The following example compares four sets of words by using each member of the <xref:System.StringComparison> enumeration.</span></span>  <span data-ttu-id="086c0-1559">Сравнение использования соглашений для английского (США) и Саамский (верхний Швеция) языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1559">The comparisons use the conventions of the English (United States) and Sami (Upper Sweden) cultures.</span></span> <span data-ttu-id="086c0-1560">Обратите внимание на то, что строки «encyclopædia» и «энциклопедии» считаются эквивалент в культуре en US, но не в Саамский (Северный Швеция) языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1560">Note that the strings "encyclopædia" and "encyclopedia" are considered equivalent in the en-US culture but not in the Sami (Northern Sweden) culture.</span></span>  
  
 [!code-csharp[System.String.Equals#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/equals_ex4.cs#4)]
 [!code-vb[System.String.Equals#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/equals_ex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-1561"><paramref name="comparisonType" /> не является значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1561"><paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (string a, string b, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(string a, string b, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.String,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As String, b As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::String ^ a, System::String ^ b, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Equals : string * string * StringComparison -&gt; bool" Usage="System.string.Equals (a, b, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="b" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="086c0-1562">Первая сравниваемая строка или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1562">The first string to compare, or <see langword="null" />.</span></span></param>
        <param name="b"><span data-ttu-id="086c0-1563">Вторая сравниваемая строка или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1563">The second string to compare, or <see langword="null" />.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-1564">Одно из значений перечисления, определяющее правила сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1564">One of the enumeration values that specifies the rules for the comparison.</span></span></param>
        <summary><span data-ttu-id="086c0-1565">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1565">Determines whether two specified <see cref="T:System.String" /> objects have the same value.</span></span> <span data-ttu-id="086c0-1566">Параметр определяет язык и региональные параметры, учет регистра и правила сортировки, используемые при сравнении.</span><span class="sxs-lookup"><span data-stu-id="086c0-1566">A parameter specifies the culture, case, and sort rules used in the comparison.</span></span></summary>
        <returns><span data-ttu-id="086c0-1567"><see langword="true" />, если значения параметров <paramref name="a" /> и <paramref name="b" /> совпадают; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1567"><see langword="true" /> if the value of the <paramref name="a" /> parameter is equal to the value of the <paramref name="b" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1568">`comparisonType` Задаёт ли при сравнении следует использовать текущие или инвариантные язык и региональные параметры, учитывает или игнорировать регистр двух сравниваемых строк либо word или правил.</span><span class="sxs-lookup"><span data-stu-id="086c0-1568">The `comparisonType` parameter indicates whether the comparison should use the current or invariant culture, honor or ignore the case of the two strings being compared, or use word or ordinal sort rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1569">В следующем примере сравниваются четыре набора слов с помощью каждого члена <xref:System.StringComparison> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-1569">The following example compares four sets of words by using each member of the <xref:System.StringComparison> enumeration.</span></span>  <span data-ttu-id="086c0-1570">Сравнение использования соглашений для английского (США) и Саамский (верхний Швеция) языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1570">The comparisons use the conventions of the English (United States) and Sami (Upper Sweden) cultures.</span></span> <span data-ttu-id="086c0-1571">Обратите внимание на то, что строки «encyclopædia» и «энциклопедии» считаются эквивалент в культуре en US, но не в Саамский (Северный Швеция) языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1571">Note that the strings "encyclopædia" and "encyclopedia" are considered equivalent in the en-US culture but not in the Sami (Northern Sweden) culture.</span></span>  
  
 [!code-csharp[System.String.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/equals_ex3.cs#3)]
 [!code-vb[System.String.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/equals_ex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-1572"><paramref name="comparisonType" /> не является значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1572"><paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Format">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-1573">Преобразует значения объектов в строки на основе указанных форматов и вставляет их в другую строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1573">Converts the value of objects to strings based on the formats specified and inserts them into another string.</span></span>  
  
<span data-ttu-id="086c0-1574">Если вы не знакомы с методом `String.Format`, см. краткие сведения в разделе [Начало работы с методом String.Format](#Starting).</span><span class="sxs-lookup"><span data-stu-id="086c0-1574">If you are new to the `String.Format` method, see the [Get started with the String.Format method](#Starting) section for a quick overview.</span></span>  
  
<span data-ttu-id="086c0-1575">В разделе [Примечания](#remarks-top) приводится общая документация для метода `String.Format`.</span><span class="sxs-lookup"><span data-stu-id="086c0-1575">See the [Remarks](#remarks-top) section for general documentation for the `String.Format` method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
<a name="remarks-top"></a>   
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
 
 <span data-ttu-id="086c0-1576">Содержание</span><span class="sxs-lookup"><span data-stu-id="086c0-1576">In this section:</span></span>  
  
 <span data-ttu-id="086c0-1577">[Начало работы с методом String.Format](#Starting) </span><span class="sxs-lookup"><span data-stu-id="086c0-1577">[Get started with the String.Format method](#Starting) </span></span>  
 <span data-ttu-id="086c0-1578">[Какой метод следует вызывать?](#FTaskList) </span><span class="sxs-lookup"><span data-stu-id="086c0-1578">[Which method do I call?](#FTaskList) </span></span>  
 <span data-ttu-id="086c0-1579">[Метод Format краткое описание](#Format_Brief) </span><span class="sxs-lookup"><span data-stu-id="086c0-1579">[The Format method in brief](#Format_Brief) </span></span>  
 <span data-ttu-id="086c0-1580">[Элемент формата](#FormatItem) </span><span class="sxs-lookup"><span data-stu-id="086c0-1580">[The Format item](#FormatItem) </span></span>  
 <span data-ttu-id="086c0-1581">[Каким образом форматируются аргументов](#HowFormatted) </span><span class="sxs-lookup"><span data-stu-id="086c0-1581">[How arguments are formatted](#HowFormatted) </span></span>  
 <span data-ttu-id="086c0-1582">[Формат элементы, имеющие тот же индекс](#SameIndex) </span><span class="sxs-lookup"><span data-stu-id="086c0-1582">[Format items that have the same index](#SameIndex) </span></span>  
 <span data-ttu-id="086c0-1583">[Форматирование и языка и региональных параметров](#Format_Culture) </span><span class="sxs-lookup"><span data-stu-id="086c0-1583">[Formatting and culture](#Format_Culture) </span></span>  
 <span data-ttu-id="086c0-1584">[Настраиваемое форматирование операций](#Format_Custom) </span><span class="sxs-lookup"><span data-stu-id="086c0-1584">[Custom formatting operations](#Format_Custom) </span></span>  
 [<span data-ttu-id="086c0-1585">String.Format Q & A</span><span class="sxs-lookup"><span data-stu-id="086c0-1585">String.Format Q & A</span></span>](#QA)  
  
<a name="Starting"></a>   
## <a name="get-started-with-the-stringformat-method"></a><span data-ttu-id="086c0-1586">Начало работы с методом String.Format</span><span class="sxs-lookup"><span data-stu-id="086c0-1586">Get started with the String.Format method</span></span>  
 <span data-ttu-id="086c0-1587">Используйте <xref:System.String.Format%2A?displayProperty=nameWithType> Если вам нужно вставить значение из объекта, переменной или выражения в другой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1587">Use <xref:System.String.Format%2A?displayProperty=nameWithType> if you need to insert the value of an object, variable, or expression into another string.</span></span> <span data-ttu-id="086c0-1588">Например, можно вставить значение <xref:System.Decimal> значение в строку, чтобы отобразить ее пользователю как одну строку:</span><span class="sxs-lookup"><span data-stu-id="086c0-1588">For example, you can insert the value of a <xref:System.Decimal> value into a string to display it to the user as a single string:</span></span>  
  
 [!code-cpp[System.String.Format#35](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting2.cpp#35)]
 [!code-csharp-interactive[System.String.Format#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting2.cs#35)]
 [!code-vb[System.String.Format#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting2.vb#35)]  
  
 <span data-ttu-id="086c0-1589">И вы можете управлять форматированием это значение:</span><span class="sxs-lookup"><span data-stu-id="086c0-1589">And you can control that value's formatting:</span></span>  
  
 [!code-cpp[System.String.Format#36](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting2.cpp#36)]
 [!code-csharp[System.String.Format#36](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting2.cs#36)]
 [!code-vb[System.String.Format#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting2.vb#36)]  
  
 <span data-ttu-id="086c0-1590">Помимо форматирование, можно также управлять интервал и выравнивание.</span><span class="sxs-lookup"><span data-stu-id="086c0-1590">Besides formatting, you can also control alignment and spacing.</span></span>  
  
 ### <a name="inserting-a-string"></a><span data-ttu-id="086c0-1591">Вставка строки</span><span class="sxs-lookup"><span data-stu-id="086c0-1591">Inserting a string</span></span>  

 <span data-ttu-id="086c0-1592"><xref:System.String.Format%2A?displayProperty=nameWithType> начинается с объекта строки формата, за которым следует один или несколько объектов, или выражений, которые будут преобразованы в строки и вставить в указанном месте в строке формата.</span><span class="sxs-lookup"><span data-stu-id="086c0-1592"><xref:System.String.Format%2A?displayProperty=nameWithType> starts with a format string, followed by one or more objects or expressions that will be converted to strings and inserted at a specified place in the format string.</span></span> <span data-ttu-id="086c0-1593">Например:</span><span class="sxs-lookup"><span data-stu-id="086c0-1593">For example:</span></span>  
  
 [!code-cpp[System.String.Format#30](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#30)]
 [!code-csharp-interactive[System.String.Format#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting1.cs#30)]
 [!code-vb[System.String.Format#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#30)]  
  
 <span data-ttu-id="086c0-1594">`{0}` В формат строки — это элемент формата.</span><span class="sxs-lookup"><span data-stu-id="086c0-1594">The `{0}` in the format string is a format item.</span></span> <span data-ttu-id="086c0-1595">`0` — Это индекс объекта, значение которого строка будет вставлен в этой позиции.</span><span class="sxs-lookup"><span data-stu-id="086c0-1595">`0` is the index of the object whose string value will be inserted at that position.</span></span> <span data-ttu-id="086c0-1596">(Индексы начинаются с 0). Если вставляемый объект не является строкой, его `ToString` метод вызывается для преобразования его на позицию перед вставкой в результирующей строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1596">(Indexes start at 0.) If the object to be inserted is not a string, its `ToString` method is called to convert it to one before inserting it in the result string.</span></span>  
  
 <span data-ttu-id="086c0-1597">Вот другой пример, использующий два формата элемента и два объекта в списке объектов:</span><span class="sxs-lookup"><span data-stu-id="086c0-1597">Here's another example that uses two format items and two objects in the object list:</span></span>  
  
 [!code-cpp[System.String.Format#31](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#31)]
 [!code-csharp[System.String.Format#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting1.cs#31)]
 [!code-vb[System.String.Format#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#31)]  
  
 <span data-ttu-id="086c0-1598">Может иметь столько элементов формата, и количество объектов в списке объектов, как вы хотите, пока индекс каждый элемент форматирования имеет соответствующий объект в списке объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1598">You can have as many format items and as many objects in the object list as you want, as long as the index of every format item has a matching object in the object list.</span></span> <span data-ttu-id="086c0-1599">Вы также не нужно беспокоиться о какую перегрузку метода. компилятор будет выберите наиболее подходящий для вас.</span><span class="sxs-lookup"><span data-stu-id="086c0-1599">You also don't have to worry about which overload you call; the compiler will select the appropriate one for you.</span></span>  
  
 ### <a name="controlling-formatting"></a><span data-ttu-id="086c0-1600">Управление форматированием</span><span class="sxs-lookup"><span data-stu-id="086c0-1600">Controlling formatting</span></span>  
 <span data-ttu-id="086c0-1601">Вы можете следовать индекс в элементе форматирования строку формата для управления форматированием объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-1601">You can follow the index in a format item with a format string to control how an object is formatted.</span></span> <span data-ttu-id="086c0-1602">Например `{0:d}` применяет строки формата «d» для первого объекта в списке объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1602">For example, `{0:d}` applies the "d" format string to the first object in the object list.</span></span> <span data-ttu-id="086c0-1603">Ниже приведен пример с одним объектом и два форматирования элементов:</span><span class="sxs-lookup"><span data-stu-id="086c0-1603">Here is an example with a single object and two format items:</span></span>  
  
 [!code-cpp[System.String.Format#32](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#32)]
 [!code-csharp[System.String.Format#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting1.cs#32)]
 [!code-vb[System.String.Format#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#32)]  
  
 <span data-ttu-id="086c0-1604">Ряд типов поддержки строк формата, включая все числовые типы (оба [стандартный](~/docs/standard/base-types/standard-numeric-format-strings.md) и [пользовательских](~/docs/standard/base-types/custom-numeric-format-strings.md) форматирования строк), все значения даты и времени (оба [стандартный](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских](~/docs/standard/base-types/custom-date-and-time-format-strings.md) строки форматов) и интервалы времени (оба [стандартный](~/docs/standard/base-types/standard-timespan-format-strings.md) и [пользовательских](~/docs/standard/base-types/custom-timespan-format-strings.md) строки форматов), всех типов перечислений [типы перечисления ](~/docs/standard/base-types/enumeration-format-strings.md), и [идентификаторы GUID](https://msdn.microsoft.com/library/97af8hh4.aspx).</span><span class="sxs-lookup"><span data-stu-id="086c0-1604">A number of types support format strings, including all numeric types (both [standard](~/docs/standard/base-types/standard-numeric-format-strings.md) and [custom](~/docs/standard/base-types/custom-numeric-format-strings.md) format strings), all dates and times (both [standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [custom](~/docs/standard/base-types/custom-date-and-time-format-strings.md) format strings) and time intervals (both [standard](~/docs/standard/base-types/standard-timespan-format-strings.md) and [custom](~/docs/standard/base-types/custom-timespan-format-strings.md) format strings), all enumeration types [enumeration types](~/docs/standard/base-types/enumeration-format-strings.md), and [GUIDs](https://msdn.microsoft.com/library/97af8hh4.aspx).</span></span> <span data-ttu-id="086c0-1605">Также можно добавить поддержку для строки формата для собственных типов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1605">You can also add support for format strings to your own types.</span></span>  
  
 ### <a name="controlling-spacing"></a><span data-ttu-id="086c0-1606">Управление интервал</span><span class="sxs-lookup"><span data-stu-id="086c0-1606">Controlling spacing</span></span>  
 <span data-ttu-id="086c0-1607">Вы можете определить ширину строки, который вставляется в результирующую строку с помощью синтаксиса, такие как `{0,12}`, который вставляет строка 12 символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1607">You can define the width of the string that is inserted into the result string by using syntax such as `{0,12}`, which inserts a 12-character string.</span></span> <span data-ttu-id="086c0-1608">В этом случае строковое представление первого объекта по правому краю поля 12 символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1608">In this case, the string representation of the first object is right-aligned in the 12-character field.</span></span>  <span data-ttu-id="086c0-1609">(Если строковое представление первого объекта больше 12 символов, однако желательной ширины поля учитывается и вся строка вставляется в результирующую строку.)</span><span class="sxs-lookup"><span data-stu-id="086c0-1609">(If the string representation of the first object is more than 12 characters in length, though, the preferred field width is ignored, and the entire string is inserted into the result string.)</span></span>  
  
 <span data-ttu-id="086c0-1610">В следующем примере определяется 6-символьное поле для хранения строки «Год» и некоторые строки год, а также 15-символьного поля для хранения строки «Заполнение» и некоторые данные о населении.</span><span class="sxs-lookup"><span data-stu-id="086c0-1610">The following example defines a 6-character field to hold the string "Year" and some year strings, as well as an 15-character field to hold the string "Population" and some population data.</span></span> <span data-ttu-id="086c0-1611">Обратите внимание на то, что символы являются по правому краю поля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1611">Note that the characters are right-aligned in the field.</span></span>  
  
 [!code-cpp[System.String.Format#33](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#33)]
 [!code-csharp[System.String.Format#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting3.cs#33)]
 [!code-vb[System.String.Format#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#33)]  
  
 ### <a name="controlling-alignment"></a><span data-ttu-id="086c0-1612">Управление выравнивания</span><span class="sxs-lookup"><span data-stu-id="086c0-1612">Controlling alignment</span></span>  
 <span data-ttu-id="086c0-1613">По умолчанию строки по правому краю в своей сфере Если вы укажите ширину поля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1613">By default, strings are right-aligned within their field if you specify a field width.</span></span> <span data-ttu-id="086c0-1614">Чтобы выровнять строки в поле слева, в начале ширина поля со знаком минус, такие как `{0,-12}` определение поля по левому краю 12 символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1614">To left-align strings in a field, you preface the field width with a negative sign, such as `{0,-12}` to define a 12-character left-aligned field.</span></span>  
  
 <span data-ttu-id="086c0-1615">Следующий пример аналогичен предыдущему, за исключением того, что он по левому краю и метки и данные.</span><span class="sxs-lookup"><span data-stu-id="086c0-1615">The following example is similar to the previous one, except that it left-aligns both labels and data.</span></span>  
  
 [!code-cpp[System.String.Format#34](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#34)]
 [!code-csharp[System.String.Format#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting1.cs#34)]
 [!code-vb[System.String.Format#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#34)]  
  
 <span data-ttu-id="086c0-1616"><xref:System.String.Format%2A?displayProperty=nameWithType> используется составное форматирование.</span><span class="sxs-lookup"><span data-stu-id="086c0-1616"><xref:System.String.Format%2A?displayProperty=nameWithType> makes use of the composite formatting feature.</span></span> <span data-ttu-id="086c0-1617">Дополнительные сведения см. в разделе [Составное форматирование](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1617">For more information, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
<a name="FTaskList"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="086c0-1618">Какой метод следует вызывать?</span><span class="sxs-lookup"><span data-stu-id="086c0-1618">Which method do I call?</span></span>  
  
|<span data-ttu-id="086c0-1619">Кому</span><span class="sxs-lookup"><span data-stu-id="086c0-1619">To</span></span>|<span data-ttu-id="086c0-1620">Call</span><span class="sxs-lookup"><span data-stu-id="086c0-1620">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="086c0-1621">Форматировать один или несколько объектов с помощью правил текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1621">Format one or more objects by using the conventions of the current culture.</span></span>|<span data-ttu-id="086c0-1622">За исключением перегрузки, включающие `provider` параметра, оставшиеся <xref:System.String.Format%2A> включают перегрузки <xref:System.String> параметр следуют один или несколько параметров объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-1622">Except for the overloads that include a `provider` parameter, the remaining <xref:System.String.Format%2A> overloads include a <xref:System.String> parameter followed by one or more object parameters.</span></span> <span data-ttu-id="086c0-1623">По этой причине не нужно определить, какие <xref:System.String.Format%2A> вызываемая перегрузка.</span><span class="sxs-lookup"><span data-stu-id="086c0-1623">Because of this, you don't have to determine which <xref:System.String.Format%2A> overload you intend to call.</span></span> <span data-ttu-id="086c0-1624">Языковой компилятор выбирает соответствующую перегрузку из перегрузок, у которых нет `provider` параметру, основанному на ваш список аргументов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1624">Your language compiler selects the appropriate overload from among the overloads that don't have a `provider` parameter, based on your argument list.</span></span> <span data-ttu-id="086c0-1625">Например, если ваш список аргументов содержит пять аргументов, компилятор вызывает <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1625">For example, if your argument list has five arguments, the compiler calls the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span>|  
|<span data-ttu-id="086c0-1626">Форматировать один или несколько объектов с помощью правил конкретного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1626">Format one or more objects by using the conventions of a specific culture.</span></span>|<span data-ttu-id="086c0-1627">Каждый <xref:System.String.Format%2A> перегрузку, которая начинается с `provider` следуют параметр <xref:System.String> параметр и один или несколько объектов параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1627">Each <xref:System.String.Format%2A> overload that begins with a `provider` parameter is followed by a <xref:System.String> parameter and one or more object parameters.</span></span> <span data-ttu-id="086c0-1628">По этой причине не нужно определить, какие конкретно <xref:System.String.Format%2A> вызываемая перегрузка.</span><span class="sxs-lookup"><span data-stu-id="086c0-1628">Because of this, you don't have to determine which specific <xref:System.String.Format%2A> overload you intend to call.</span></span> <span data-ttu-id="086c0-1629">Языковой компилятор выбирает соответствующую перегрузку из перегрузок, имеющих `provider` параметру, основанному на ваш список аргументов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1629">Your language compiler selects the appropriate overload from among the overloads that have a `provider` parameter, based on your argument list.</span></span> <span data-ttu-id="086c0-1630">Например, если ваш список аргументов содержит пять аргументов, компилятор вызывает <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1630">For example, if your argument list has five arguments, the compiler calls the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> method.</span></span>|  
|<span data-ttu-id="086c0-1631">Выполнять пользовательские операции форматирования, либо с <xref:System.ICustomFormatter> реализации или <xref:System.IFormattable> реализации.</span><span class="sxs-lookup"><span data-stu-id="086c0-1631">Perform a custom formatting operation either with an <xref:System.ICustomFormatter> implementation or an <xref:System.IFormattable> implementation.</span></span>|<span data-ttu-id="086c0-1632">Любой из четырех перегрузок `provider` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1632">Any of the four overloads with a `provider` parameter.</span></span> <span data-ttu-id="086c0-1633">Компилятор выбирает соответствующую перегрузку из перегрузок, имеющих `provider` параметру, основанному на ваш список аргументов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1633">The compiler selects the appropriate overload from among the overloads that have a `provider` parameter, based on your argument list.</span></span>|  
  
<a name="Format_Brief"></a>   
## <a name="the-format-method-in-brief"></a><span data-ttu-id="086c0-1634">Метод Format краткое описание</span><span class="sxs-lookup"><span data-stu-id="086c0-1634">The Format method in brief</span></span> 

 <span data-ttu-id="086c0-1635">Каждая перегрузка <xref:System.String.Format%2A> использует метод [составного форматирования](~/docs/standard/base-types/composite-formatting.md) для включения отсчитываемый от нуля индексированные местозаполнители, *форматирования элементов*, в строке составного формата.</span><span class="sxs-lookup"><span data-stu-id="086c0-1635">Each overload of the <xref:System.String.Format%2A> method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to include zero-based indexed placeholders, called *format items*, in a composite format string.</span></span> <span data-ttu-id="086c0-1636">Во время выполнения каждый элемент формата заменяется строковым представлением соответствующего аргумента в списке параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1636">At run time, each format item is replaced with the string representation of the corresponding argument in a parameter list.</span></span> <span data-ttu-id="086c0-1637">Если значение аргумента равно `null`, элемент формата заменяется <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1637">If the value of the argument is `null`, the format item is replaced with <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-1638">Например, следующий вызов <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> метод включает строку формата с тремя элементами форматирования, {0}, {1}, и {2}и список аргументов с тремя элементами.</span><span class="sxs-lookup"><span data-stu-id="086c0-1638">For example, the following call to the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method includes a format string with three format items, {0}, {1}, and {2}, and an argument list with three items.</span></span>  
  
 [!code-cpp[System.String.Format#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatoverload1.cpp#8)]
 [!code-csharp[System.String.Format#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/formatoverload1.cs#8)]
 [!code-vb[System.String.Format#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/formatoverload1.vb#8)]  
  
<a name="FormatItem"></a>   
## <a name="the-format-item"></a><span data-ttu-id="086c0-1639">Элемент формата</span><span class="sxs-lookup"><span data-stu-id="086c0-1639">The format item</span></span>  
 <span data-ttu-id="086c0-1640">Элемент форматирования имеет следующий синтаксис:</span><span class="sxs-lookup"><span data-stu-id="086c0-1640">A format item has this syntax:</span></span>  
  
```  
{index[,alignment][:formatString]}  
```  
 
 <span data-ttu-id="086c0-1641">Квадратные скобки обозначают необязательные элементы.</span><span class="sxs-lookup"><span data-stu-id="086c0-1641">Brackets denote optional elements.</span></span> <span data-ttu-id="086c0-1642">Требуются открывающей и закрывающей фигурными скобками.</span><span class="sxs-lookup"><span data-stu-id="086c0-1642">The opening and closing braces are required.</span></span> <span data-ttu-id="086c0-1643">(Для включения литерала открывающий или закрывающая фигурная скобка в строке формата, см. в разделе [экранирование фигурных скобок](~/docs/standard/base-types/composite-formatting.md#escaping-braces) статьи [составное форматирование](~/docs/standard/base-types/composite-formatting.md) статьи.)</span><span class="sxs-lookup"><span data-stu-id="086c0-1643">(To include a literal opening or closing brace in the format string, see the [Escaping Braces](~/docs/standard/base-types/composite-formatting.md#escaping-braces) section in the [Composite Formatting](~/docs/standard/base-types/composite-formatting.md) article.)</span></span>  
  
 <span data-ttu-id="086c0-1644">Например элемент форматирования для форматирования значения валюты может отображаться следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-1644">For example, a format item to format a currency value might appear like this:</span></span>  
  
 [!code-cpp[System.String.Format#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatsyntax1.cpp#12)]
 [!code-csharp[System.String.Format#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/formatsyntax1.cs#12)]  
 [!code-vb[System.String.Format#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/formatsyntax1.vb#12)]  

 <span data-ttu-id="086c0-1645">Элемент форматирования имеет следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="086c0-1645">A format item has the following elements:</span></span>  
  
 <span data-ttu-id="086c0-1646">*Индекс*</span><span class="sxs-lookup"><span data-stu-id="086c0-1646">*index*</span></span>  
 <span data-ttu-id="086c0-1647">Отсчитываемый от нуля индекс аргумента, строковое представление которого должен быть включен в этой позиции в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1647">The zero-based index of the argument whose string representation is to be included at this position in the string.</span></span> <span data-ttu-id="086c0-1648">Если этот аргумент равен `null`, пустая строка будет включен в этой позиции в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1648">If this argument is `null`, an empty string will be included at this position in the string.</span></span>  
  
 <span data-ttu-id="086c0-1649">*Выравнивание*</span><span class="sxs-lookup"><span data-stu-id="086c0-1649">*alignment*</span></span>  
 <span data-ttu-id="086c0-1650">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="086c0-1650">Optional.</span></span> <span data-ttu-id="086c0-1651">Знаковое целое число, которое указывает общую длину поля, в которое вставляется аргумент и по правому краю (положительное целое число) или по левому краю (отрицательное целое число).</span><span class="sxs-lookup"><span data-stu-id="086c0-1651">A signed integer that indicates the total length of the field into which the argument is inserted and whether it is right-aligned (a positive integer) or left-aligned (a negative integer).</span></span> <span data-ttu-id="086c0-1652">Если опустить *выравнивание*, строковым представлением соответствующего аргумента вставляется в поле без начальных или конечных пробелов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1652">If you omit *alignment*, the string representation of the corresponding argument is inserted in a field with no leading or trailing spaces.</span></span>  
  
 <span data-ttu-id="086c0-1653">Если значение *выравнивание* меньше, чем длина аргумента должны быть вставлены, *выравнивание* игнорируется и длина строкового представления для аргумента используется в качестве значения ширины поля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1653">If the value of *alignment* is less than the length of the argument to be inserted, *alignment* is ignored and the length of the string representation of the argument is used as the field width.</span></span>  
  
 <span data-ttu-id="086c0-1654">*formatString*</span><span class="sxs-lookup"><span data-stu-id="086c0-1654">*formatString*</span></span>  
 <span data-ttu-id="086c0-1655">Необязательный параметр.</span><span class="sxs-lookup"><span data-stu-id="086c0-1655">Optional.</span></span> <span data-ttu-id="086c0-1656">Строка, указывающая формат строки соответствующего аргумента результат.</span><span class="sxs-lookup"><span data-stu-id="086c0-1656">A string that specifies the format of the corresponding argument's result string.</span></span> <span data-ttu-id="086c0-1657">Если опустить *formatString*, соответствующего аргумента без параметров `ToString` метод вызывается для получения строкового представления.</span><span class="sxs-lookup"><span data-stu-id="086c0-1657">If you omit *formatString*, the corresponding argument's parameterless `ToString` method is called to produce its string representation.</span></span> <span data-ttu-id="086c0-1658">Если указать *formatString*, аргумент, который ссылается элемент форматирования должен реализовывать <xref:System.IFormattable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="086c0-1658">If you specify *formatString*, the argument referenced by the format item must implement the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="086c0-1659">Типы, которые поддерживают формат строки:</span><span class="sxs-lookup"><span data-stu-id="086c0-1659">Types that support format strings include:</span></span>  
  
-   <span data-ttu-id="086c0-1660">Все типы с плавающей точкой.</span><span class="sxs-lookup"><span data-stu-id="086c0-1660">All integral and floating-point types.</span></span> <span data-ttu-id="086c0-1661">(См. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span><span class="sxs-lookup"><span data-stu-id="086c0-1661">(See [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
-   <span data-ttu-id="086c0-1662"><xref:System.DateTime> и <xref:System.DateTimeOffset>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1662"><xref:System.DateTime> and <xref:System.DateTimeOffset>.</span></span> <span data-ttu-id="086c0-1663">(См. в разделе [стандартных форматов даты и времени строки](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [настраиваемых форматов даты и времени строки](~/docs/standard/base-types/custom-date-and-time-format-strings.md).)</span><span class="sxs-lookup"><span data-stu-id="086c0-1663">(See [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).)</span></span>  
  
-   <span data-ttu-id="086c0-1664">Все типы перечислений.</span><span class="sxs-lookup"><span data-stu-id="086c0-1664">All enumeration types.</span></span> <span data-ttu-id="086c0-1665">(См. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).)</span><span class="sxs-lookup"><span data-stu-id="086c0-1665">(See [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).)</span></span>  
  
-   <span data-ttu-id="086c0-1666">значения типа <xref:System.TimeSpan>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1666"><xref:System.TimeSpan> values.</span></span> <span data-ttu-id="086c0-1667">(См. в разделе [строки стандартного формата TimeSpan](~/docs/standard/base-types/standard-timespan-format-strings.md) и [строки пользовательского формата TimeSpan](~/docs/standard/base-types/custom-timespan-format-strings.md).)</span><span class="sxs-lookup"><span data-stu-id="086c0-1667">(See [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).)</span></span>  
  
-   <span data-ttu-id="086c0-1668">Идентификаторы GUID.</span><span class="sxs-lookup"><span data-stu-id="086c0-1668">GUIDs.</span></span> <span data-ttu-id="086c0-1669">(См. в разделе <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> метод.)</span><span class="sxs-lookup"><span data-stu-id="086c0-1669">(See the <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method.)</span></span>  
  
 <span data-ttu-id="086c0-1670">Тем не менее, обратите внимание, что любой пользовательский тип можно реализовать <xref:System.IFormattable> или расширить существующий тип <xref:System.IFormattable> реализации.</span><span class="sxs-lookup"><span data-stu-id="086c0-1670">However, note that any custom type can implement <xref:System.IFormattable> or extend an existing type's <xref:System.IFormattable> implementation.</span></span>  
  
 <span data-ttu-id="086c0-1671">В следующем примере используется `alignment` и `formatString` аргументы для создания Форматированные выходные данные.</span><span class="sxs-lookup"><span data-stu-id="086c0-1671">The following example uses the `alignment` and `formatString` arguments to produce formatted output.</span></span>  
  
 [!code-cpp[System.String.Format#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatoverload2.cpp#9)]
 [!code-csharp[System.String.Format#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/formatoverload2.cs#9)]
 [!code-vb[System.String.Format#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/formatoverload2.vb#9)]  
  
<a name="HowFormatted"></a>   
## <a name="how-arguments-are-formatted"></a><span data-ttu-id="086c0-1672">Каким образом форматируются аргументов</span><span class="sxs-lookup"><span data-stu-id="086c0-1672">How arguments are formatted</span></span>  
 <span data-ttu-id="086c0-1673">Элементы форматирования обрабатываются последовательно от начала строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1673">Format items are processed sequentially from the beginning of the string.</span></span> <span data-ttu-id="086c0-1674">Каждый элемент формата имеет индекс, соответствующий объект в списке аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-1674">Each format item has an index that corresponds to an object in the method's argument list.</span></span> <span data-ttu-id="086c0-1675"><xref:System.String.Format%2A> Метод получает аргумент и наследует его строковое представление следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-1675">The <xref:System.String.Format%2A> method retrieves the argument and derives its string representation as follows:</span></span>  
  
-   <span data-ttu-id="086c0-1676">Если аргумент является `null`, то метод вставляет <xref:System.String.Empty?displayProperty=nameWithType> в результирующую строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1676">If the argument is `null`, the method inserts <xref:System.String.Empty?displayProperty=nameWithType> into the result string.</span></span> <span data-ttu-id="086c0-1677">У вас нет необходимости заботиться о обработки <xref:System.NullReferenceException> для аргументов, значение null.</span><span class="sxs-lookup"><span data-stu-id="086c0-1677">You don't have to be concerned with handling a <xref:System.NullReferenceException> for null arguments.</span></span> 
  
-   <span data-ttu-id="086c0-1678">При вызове метода <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> перегрузки и `provider` объекта <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> реализация возвращает ненулевой <xref:System.ICustomFormatter> , аргумент передается реализация его <xref:System.ICustomFormatter.Format%28System.String%2CSystem.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1678">If you call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> overload and the `provider` object's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> implementation returns a non-null <xref:System.ICustomFormatter> implementation, the argument is passed to its <xref:System.ICustomFormatter.Format%28System.String%2CSystem.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="086c0-1679">Если элемент формата включает *formatString* аргумент, он передается в качестве первого аргумента метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-1679">If the format item includes a *formatString* argument, it is passed as the first argument to the method.</span></span> <span data-ttu-id="086c0-1680">Если <xref:System.ICustomFormatter> реализация доступна и создает строку, отличных от null, которая строковое представление аргумента, возвращается строка; в противном случае выполняет следующий шаг.</span><span class="sxs-lookup"><span data-stu-id="086c0-1680">If the <xref:System.ICustomFormatter> implementation is available and produces a non-null string, that string is returned as the string representation of the argument; otherwise, the next step executes.</span></span>  
  
-   <span data-ttu-id="086c0-1681">Если аргумент реализует <xref:System.IFormattable> интерфейс, его <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> вызывается реализация.</span><span class="sxs-lookup"><span data-stu-id="086c0-1681">If the argument implements the <xref:System.IFormattable> interface, its <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation is called.</span></span>  
  
-   <span data-ttu-id="086c0-1682">С аргументом-по без параметров `ToString` вызывается метод, который переопределяет или наследует от реализации базового класса,.</span><span class="sxs-lookup"><span data-stu-id="086c0-1682">The argument's parameterless `ToString` method, which either overrides or inherits from a base class implementation, is called.</span></span>  
  
 <span data-ttu-id="086c0-1683">Например, который перехватывает вызовы <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> метод и позволяет увидеть, какие сведения <xref:System.String.Format%2A> передает метод в метод форматирования для каждого элемента форматирования в строке составного формата, см. в разделе [пример: Поставщик отсекаемый отрезок и модуль форматирования римские цифры](#Format7_Example).</span><span class="sxs-lookup"><span data-stu-id="086c0-1683">For an example that intercepts calls to the <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> method and allows you to see what information the <xref:System.String.Format%2A> method passes to a formatting method for each format item in a composite format string, see [Example: An intercept provider and Roman numeral formatter](#Format7_Example).</span></span>  

 <span data-ttu-id="086c0-1684">Дополнительные сведения см. в разделе [порядок обработки](~/docs/standard/base-types/composite-formatting.md##processing-order) статьи [составное форматирование](~/docs/standard/base-types/composite-formatting.md) статьи.</span><span class="sxs-lookup"><span data-stu-id="086c0-1684">For more information, see the [Processing Order](~/docs/standard/base-types/composite-formatting.md##processing-order) section in the [Composite Formatting](~/docs/standard/base-types/composite-formatting.md) article.</span></span>  
  
<a name="SameIndex"></a>   
## <a name="format-items-that-have-the-same-index"></a><span data-ttu-id="086c0-1685">Формат элементы, имеющие тот же индекс</span><span class="sxs-lookup"><span data-stu-id="086c0-1685">Format items that have the same index</span></span>  
 <span data-ttu-id="086c0-1686"><xref:System.String.Format%2A> Вызывает метод <xref:System.FormatException> исключение, если индекс элемента индекс больше или равно числу аргументов в списке аргументов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1686">The <xref:System.String.Format%2A> method throws a <xref:System.FormatException> exception if the index of an index item is greater than or equal to the number of arguments in the argument list.</span></span> <span data-ttu-id="086c0-1687">Тем не менее `format` может включать несколько элементов формата, превышает количество аргументов, поскольку несколько элементов формата имеют тот же индекс.</span><span class="sxs-lookup"><span data-stu-id="086c0-1687">However, `format` can include more format items than there are arguments, as long as multiple format items have the same index.</span></span> <span data-ttu-id="086c0-1688">В вызове <xref:System.String.Format%28System.String%2CSystem.Object%29> метод в следующем примере список аргументов имеет один аргумент, но строка форматирования содержит два элемента форматирования: один отображается десятичное значение для числа, а другой шестнадцатеричное значение.</span><span class="sxs-lookup"><span data-stu-id="086c0-1688">In the call to the <xref:System.String.Format%28System.String%2CSystem.Object%29> method in following example, the argument list has a single argument, but the format string includes two format items: one displays the decimal value of a number, and the other displays its hexadecimal value.</span></span>  
  
 [!code-csharp-interactive[System.String.Format2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format2/cs/Example1.cs#1)]
 [!code-vb[System.String.Format2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format2/vb/Example1.vb#1)]  
  
<a name="Format_Culture"></a>   
## <a name="formatting-and-culture"></a><span data-ttu-id="086c0-1689">Форматирование и языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="086c0-1689">Formatting and culture</span></span>  
 <span data-ttu-id="086c0-1690">Как правило, объекты в списке аргументов, преобразуются в их строковые представления с помощью правил текущего языка и региональных параметров, который возвращается методом <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="086c0-1690">Generally, objects in the argument list are converted to their string representations by using the conventions of the current culture, which is returned by the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="086c0-1691">Этим поведением можно управлять путем вызова одной из перегрузок <xref:System.String.Format%2A> , включающий `provider` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1691">You can control this behavior by calling one of the overloads of <xref:System.String.Format%2A> that includes a `provider` parameter.</span></span> <span data-ttu-id="086c0-1692">`provider` Параметр <xref:System.IFormatProvider> обрабатывать реализацию, которая предоставляет пользовательские и зависящие от языка и региональных параметров информации форматирования, которая используется средний форматирование.</span><span class="sxs-lookup"><span data-stu-id="086c0-1692">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies custom and culture-specific formatting information that is used to moderate the formatting process.</span></span>  
  
 <span data-ttu-id="086c0-1693"><xref:System.IFormatProvider> Интерфейс содержит только один член — <xref:System.IFormatProvider.GetFormat%2A>, который отвечает за возвращение объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="086c0-1693">The <xref:System.IFormatProvider> interface has a single member, <xref:System.IFormatProvider.GetFormat%2A>, which is responsible for returning the object that provides formatting information.</span></span> <span data-ttu-id="086c0-1694">.NET имеет три <xref:System.IFormatProvider> реализациями, которые предоставляют форматирования, зависящего от языка и региональных параметров:</span><span class="sxs-lookup"><span data-stu-id="086c0-1694">.NET has three <xref:System.IFormatProvider> implementations that provide culture-specific formatting:</span></span>  
  
-   <span data-ttu-id="086c0-1695"><xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1695"><xref:System.Globalization.CultureInfo>.</span></span> <span data-ttu-id="086c0-1696">Его <xref:System.Globalization.CultureInfo.GetFormat%2A> метод возвращает конкретный язык и региональные параметры <xref:System.Globalization.NumberFormatInfo> объект для форматирования числовых значений и зависящих от языка и региональных параметров <xref:System.Globalization.DateTimeFormatInfo> объект для форматирования значений даты и времени.</span><span class="sxs-lookup"><span data-stu-id="086c0-1696">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns a culture-specific <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values and a culture-specific <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values.</span></span>  
  
-   <span data-ttu-id="086c0-1697"><xref:System.Globalization.DateTimeFormatInfo>, используемый для форматирования значений даты и времени, зависящего от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1697"><xref:System.Globalization.DateTimeFormatInfo>, which is used for culture-specific formatting of date and time values.</span></span> <span data-ttu-id="086c0-1698">Его <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A> метод возвращает сам себя.</span><span class="sxs-lookup"><span data-stu-id="086c0-1698">Its <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A> method returns itself.</span></span>  
  
-   <span data-ttu-id="086c0-1699"><xref:System.Globalization.NumberFormatInfo>, который используется для форматирования числовых значений, зависящего от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1699"><xref:System.Globalization.NumberFormatInfo>, which is used for culture-specific formatting of numeric values.</span></span> <span data-ttu-id="086c0-1700">Его <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> свойство возвращает сам себя.</span><span class="sxs-lookup"><span data-stu-id="086c0-1700">Its <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> property returns itself.</span></span> 

<a name="Format_Custom"></a>   
## <a name="custom-formatting-operations"></a><span data-ttu-id="086c0-1701">Настраиваемое форматирование операций</span><span class="sxs-lookup"><span data-stu-id="086c0-1701">Custom formatting operations</span></span>  
 <span data-ttu-id="086c0-1702">Можно также вызвать любой из перегрузок <xref:System.String.Format%2A> метода, который имеет `provider` параметр типа <xref:System.IFormatProvider> для выполнения пользовательских операций форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1702">You can also call the any of the overloads of the <xref:System.String.Format%2A> method that have a `provider` parameter of type <xref:System.IFormatProvider> to perform custom formatting operations.</span></span> <span data-ttu-id="086c0-1703">Например вы форматирования целого числа, как идентификатор или номер телефона.</span><span class="sxs-lookup"><span data-stu-id="086c0-1703">For example, you could format an integer as an identification number or as a telephone number.</span></span> <span data-ttu-id="086c0-1704">Для выполнения пользовательского форматирования вашей `provider` аргумент следует реализовать и <xref:System.IFormatProvider> и <xref:System.ICustomFormatter> интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1704">To perform custom formatting, your `provider` argument must implement both the <xref:System.IFormatProvider> and <xref:System.ICustomFormatter> interfaces.</span></span> <span data-ttu-id="086c0-1705">Когда <xref:System.String.Format%2A> методу передается <xref:System.ICustomFormatter> реализации в качестве `provider` аргумент, <xref:System.String.Format%2A> вызовы методов его <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> реализации и запрашивает объект типа <xref:System.ICustomFormatter>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1705">When the <xref:System.String.Format%2A> method is passed an <xref:System.ICustomFormatter> implementation as the `provider` argument, the <xref:System.String.Format%2A> method calls its   <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> implementation and requests an object of type <xref:System.ICustomFormatter>.</span></span> <span data-ttu-id="086c0-1706">Затем он вызывает возвращенного <xref:System.ICustomFormatter> объекта <xref:System.ICustomFormatter.Format%2A> переданного ему метод, чтобы каждый элемент формата в строке составного формата.</span><span class="sxs-lookup"><span data-stu-id="086c0-1706">It then calls the returned <xref:System.ICustomFormatter> object's <xref:System.ICustomFormatter.Format%2A> method to format each format item in the composite string passed to it.</span></span>  
  
 <span data-ttu-id="086c0-1707">Дополнительные сведения о предоставлении пользовательских решений форматирования см. в разделе [как: Определение и использование настраиваемых поставщиков числовых форматов](~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md) и <xref:System.ICustomFormatter>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1707">For more information about providing custom formatting solutions, see [How to: Define and Use Custom Numeric Format Providers](~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md) and <xref:System.ICustomFormatter>.</span></span> <span data-ttu-id="086c0-1708">Пример, преобразует пользовательские числа целых чисел, см. в разделе [пример: Пользовательские операции форматирования](#Format6_Example).</span><span class="sxs-lookup"><span data-stu-id="086c0-1708">For an example that converts integers to formatted custom numbers, see [Example: A custom formatting operation](#Format6_Example).</span></span> <span data-ttu-id="086c0-1709">Пример, который преобразует римские цифры байтов без знака, см. в разделе [пример: Поставщик отсекаемый отрезок и модуль форматирования римские цифры](#Format7_Example).</span><span class="sxs-lookup"><span data-stu-id="086c0-1709">For an example that converts unsigned bytes to Roman numerals, see [Example: An intercept provider and Roman numeral formatter](#Format7_Example).</span></span>  
  
<a name="Format6_Example"></a>   
### <a name="example-a-custom-formatting-operation"></a><span data-ttu-id="086c0-1710">Пример Пользовательские операции форматирования</span><span class="sxs-lookup"><span data-stu-id="086c0-1710">Example: A custom formatting operation</span></span>  
 <span data-ttu-id="086c0-1711">В этом примере определяется поставщик формата, который форматирует целочисленное значение в виде номера счета заказчика в форме x-xxxxx-xx.</span><span class="sxs-lookup"><span data-stu-id="086c0-1711">This example defines a format provider that formats an integer value as a customer account number in the form x-xxxxx-xx.</span></span>  
  
 [!code-cpp[System.String.Format#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatexample2.cpp#2)]
 [!code-csharp[System.String.Format#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/FormatExample2.cs#2)]
 [!code-vb[System.String.Format#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/FormatExample2.vb#2)]  
  
<a name="Format7_Example"></a>   
### <a name="example-an-intercept-provider-and-roman-numeral-formatter"></a><span data-ttu-id="086c0-1712">Пример Поставщик отсекаемый отрезок и модуль форматирования римские цифры</span><span class="sxs-lookup"><span data-stu-id="086c0-1712">Example: An intercept provider and Roman numeral formatter</span></span>  
 <span data-ttu-id="086c0-1713">В этом примере определяется поставщик настраиваемого формата, который реализует <xref:System.ICustomFormatter> и <xref:System.IFormatProvider> интерфейсов, чтобы сделать две вещи:</span><span class="sxs-lookup"><span data-stu-id="086c0-1713">This example defines a custom format provider that implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to do two things:</span></span>  
  
-   <span data-ttu-id="086c0-1714">Он отображает параметры, передаваемые его <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> реализации.</span><span class="sxs-lookup"><span data-stu-id="086c0-1714">It displays the parameters passed to its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="086c0-1715">Это позволяет нам знать, какие параметры <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> метод передает на пользовательскую реализацию форматирования для каждого объекта, он пытается форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1715">This enables us to see what parameters the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> method is passing to the custom formatting implementation for each object that it tries to format.</span></span> <span data-ttu-id="086c0-1716">Это может быть полезно при отладке приложения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1716">This can be useful when you're debugging your application.</span></span>  
  
-   <span data-ttu-id="086c0-1717">Если объект форматируемое значение типа byte без знака, необходимо отформатировать с помощью строки стандартного формата «R», пользовательский модуль форматирования форматирует числовое значение в виде римские цифры.</span><span class="sxs-lookup"><span data-stu-id="086c0-1717">If the object to be formatted is an unsigned byte value that is to be formatted by using the "R" standard format string, the custom formatter formats the numeric value as a Roman numeral.</span></span>  
  
 [!code-cpp[System.String.Format#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/interceptor2.cpp#11)]
 [!code-csharp[System.String.Format#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/interceptor2.cs#11)]
 [!code-vb[System.String.Format#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/interceptor2.vb#11)]  
  
<a name="QA"></a>   
## <a name="stringformat-q--a"></a><span data-ttu-id="086c0-1718">String.Format Q & A</span><span class="sxs-lookup"><span data-stu-id="086c0-1718">String.Format Q & A</span></span>  
  
### <a name="why-do-you-recommend-string-interpolation-over-calls-to-the-stringformat-method"></a><span data-ttu-id="086c0-1719">Почему вы рекомендуете интерполяция между вызовами `String.Format` метод?</span><span class="sxs-lookup"><span data-stu-id="086c0-1719">Why do you recommend string interpolation over calls to the `String.Format` method?</span></span>

<span data-ttu-id="086c0-1720">Интерполяция строк предоставляет:</span><span class="sxs-lookup"><span data-stu-id="086c0-1720">String interpolation is:</span></span>

- <span data-ttu-id="086c0-1721">Более гибким.</span><span class="sxs-lookup"><span data-stu-id="086c0-1721">More flexible.</span></span> <span data-ttu-id="086c0-1722">Данное свойство можно использовать в любой строке, не обращаясь к методу, поддерживающему составное форматирование.</span><span class="sxs-lookup"><span data-stu-id="086c0-1722">It can be used in any string without requiring a call to a method that supports composite formatting.</span></span> <span data-ttu-id="086c0-1723">В противном случае необходимо вызвать <xref:System.String.Format%2A> метода или другого метода, который поддерживает составное форматирование, такими как <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или <xref:System.Text.StringBuilder.AppendFormat%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1723">Otherwise, you have to call the <xref:System.String.Format%2A> method or another method that supports composite formatting, such as <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Text.StringBuilder.AppendFormat%2A?displayProperty=nameWithType>.</span></span> 

- <span data-ttu-id="086c0-1724">Более удобном для чтения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1724">More readable.</span></span> <span data-ttu-id="086c0-1725">Поскольку содержится это выражение для вставки в строку в интерполированное выражение, а не в списке аргументов, интерполированные строки являются гораздо проще для кода и для чтения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1725">Because the expression to insert into a string appears in the interpolated expression rather than in a argument list, interpolated strings are far easier to code and to read.</span></span> <span data-ttu-id="086c0-1726">Из-за их улучшения удобочитаемости интерполированные строки можно заменить не только вызовы методов составного формата, но они могут также использоваться в операциях объединения строк для создания более кратким и чистый код.</span><span class="sxs-lookup"><span data-stu-id="086c0-1726">Because of their greater readability, interpolated strings can replace not only calls to composite format methods, but they can also be used in string concatenation operations to produce more concise, clearer code.</span></span> 

<span data-ttu-id="086c0-1727">Сравнение в следующих двух примерах кода показано superiority интерполированные строки через объединение строк и вызовы методов составного форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1727">A comparison of the following two code examples illustrates the superiority of interpolated strings over string concatenation and calls to composite formatting methods.</span></span> <span data-ttu-id="086c0-1728">Использование нескольких операций объединения строк, в следующем примере создается код verbose и трудный для чтения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1728">The use of multiple string concatenation operations in the following example produces verbose and hard-to-read code.</span></span>

[!code-csharp[non-interpolated string operations](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa-interpolated1.cs#QAInterpolated)]
[!code-vb[non-interpolated string operations](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa-interpolated1.vb)]  

<span data-ttu-id="086c0-1729">С другой стороны, использование интерполированные строки в следующем примере создают намного яснее и более понятного кода, чем оператор объединения строки и вызов <xref:System.String.Format%2A> метод в предыдущем примере.</span><span class="sxs-lookup"><span data-stu-id="086c0-1729">In contrast, the use of interpolated strings in the following example produce much clearer, more concise code than the string concatenation statement and the call to the <xref:System.String.Format%2A> method in the previous example.</span></span>

[!code-csharp[interpolated string operations](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa-interpolated2.cs#QAInterpolated2)]
[!code-vb[interpolated string operations](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa-interpolated2.vb)]  

### <a name="where-can-i-find-a-list-of-the-predefined-format-strings-that-can-be-used-with-format-items"></a><span data-ttu-id="086c0-1730">Где можно найти список стандартных строк форматирования, которые могут использоваться с элементами форматирования?</span><span class="sxs-lookup"><span data-stu-id="086c0-1730">Where can I find a list of the predefined format strings that can be used with format items?</span></span>  
  
-   <span data-ttu-id="086c0-1731">Для всех типов с плавающей точкой, см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1731">For all integral and floating-point types, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="086c0-1732">Значения даты и времени, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1732">For date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="086c0-1733">Для значений перечисления, см. в разделе [строки форматов перечисления](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1733">For enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="086c0-1734">Для <xref:System.TimeSpan> значения, см. в разделе [строки стандартного формата TimeSpan](~/docs/standard/base-types/standard-timespan-format-strings.md) и [строки пользовательского формата TimeSpan](~/docs/standard/base-types/custom-timespan-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1734">For <xref:System.TimeSpan> values, see  [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
-   <span data-ttu-id="086c0-1735">Для <xref:System.Guid> значения, см. в разделе "Примечания" <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> справочной странице.</span><span class="sxs-lookup"><span data-stu-id="086c0-1735">For <xref:System.Guid> values, see the Remarks section of the <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> reference page.</span></span>  
  
### <a name="how-do-i-control-the-alignment-of-the-result-strings-that-replace-format-items"></a><span data-ttu-id="086c0-1736">Как контролировать выравнивание строки результатов, которые замены элементов форматирования?</span><span class="sxs-lookup"><span data-stu-id="086c0-1736">How do I control the alignment of the result strings that replace format items?</span></span>  
 <span data-ttu-id="086c0-1737">Ниже приведен общий синтаксис элемента формата.</span><span class="sxs-lookup"><span data-stu-id="086c0-1737">The general syntax of a format item is:</span></span>  
  
```  
{index[,alignment][: formatString]}  
```  
  
 <span data-ttu-id="086c0-1738">где *выравнивание* является целое число со знаком, которое определяет ширину поля.</span><span class="sxs-lookup"><span data-stu-id="086c0-1738">where *alignment* is a signed integer that defines the field width.</span></span> <span data-ttu-id="086c0-1739">Если указано отрицательное значение, текст в поле по левому краю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1739">If this value is negative, text in the field is left-aligned.</span></span> <span data-ttu-id="086c0-1740">Если оно положительное, текст по правому краю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1740">If it is positive, text is right-aligned.</span></span>  
  
### <a name="how-do-i-control-the-number-of-digits-after-the-decimal-separator"></a><span data-ttu-id="086c0-1741">Как контролировать количество цифр после десятичного разделителя?</span><span class="sxs-lookup"><span data-stu-id="086c0-1741">How do I control the number of digits after the decimal separator?</span></span>  
 <span data-ttu-id="086c0-1742">Все [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) , кроме «D» (который используется только целые числа), «G», «R», а «X» разрешить описатель точности, которое определяет количество цифр дробной части в результирующей строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1742">All [standard numeric format strings](~/docs/standard/base-types/standard-numeric-format-strings.md) except "D" (which is used with integers only), "G", "R", and "X" allow a precision specifier that defines the number of decimal digits in the result string.</span></span> <span data-ttu-id="086c0-1743">В следующем примере строки стандартных числовых форматов для управления количеством десятичных цифр в результирующей строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1743">The following example uses standard numeric format strings to control the number of decimal digits in the result string.</span></span>  
  
 [!code-csharp[System.String.Format#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa26.cs#26)]
 [!code-vb[System.String.Format#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa26.vb#26)]  
  
 <span data-ttu-id="086c0-1744">Если вы используете [настраиваемого числового формата](~/docs/standard/base-types/custom-numeric-format-strings.md), позволяет контролировать количество цифр дробной части в результирующей строке, как показано в следующем примере описатель формата «0».</span><span class="sxs-lookup"><span data-stu-id="086c0-1744">If you're using a [custom numeric format string](~/docs/standard/base-types/custom-numeric-format-strings.md), use the "0" format specifier to control the number of decimal digits in the result string, as the following example shows.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa27.cs#27)]
 [!code-vb[System.String.Format#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa27.vb#27)]  
  
### <a name="how-do-i-control-the-number-of-integral-digits"></a><span data-ttu-id="086c0-1745">Как контролировать число цифр целой части?</span><span class="sxs-lookup"><span data-stu-id="086c0-1745">How do I control the number of integral digits?</span></span>  
 <span data-ttu-id="086c0-1746">По умолчанию операций форматирования отображать только цифры целой части значения ненулевое значение.</span><span class="sxs-lookup"><span data-stu-id="086c0-1746">By default, formatting operations only display non-zero integral digits.</span></span> <span data-ttu-id="086c0-1747">При форматировании целые числа, можно использовать описатель точности строки стандартного формата «X» и «D» для управления количеством цифр.</span><span class="sxs-lookup"><span data-stu-id="086c0-1747">If you are formatting integers, you can use a precision specifier with the "D" and "X" standard format strings to control the number of digits.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa29.cs#29)]
 [!code-vb[System.String.Format#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa29.vb#29)]  
  
 <span data-ttu-id="086c0-1748">Целое число или число с плавающей запятой с ведущими нулями для создания результирующую строку с указанным количеством цифр целой части с помощью «0» можно добавлять [описатель настраиваемого числового формата](~/docs/standard/base-types/custom-numeric-format-strings.md), как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="086c0-1748">You can pad an integer or floating-point number with leading zeros to produce a result string with a specified number of integral digits by using the "0" [custom numeric format specifier](~/docs/standard/base-types/custom-numeric-format-strings.md), as the following example shows.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa28.cs#28)]
 [!code-vb[System.String.Format#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa28.vb#28)]  
  
### <a name="how-many-items-can-i-include-in-the-format-list"></a><span data-ttu-id="086c0-1749">Количество элементов, можно включить в список формата?</span><span class="sxs-lookup"><span data-stu-id="086c0-1749">How many items can I include in the format list?</span></span>  
 <span data-ttu-id="086c0-1750">Нет практических ограничений.</span><span class="sxs-lookup"><span data-stu-id="086c0-1750">There is no practical limit.</span></span> <span data-ttu-id="086c0-1751">Второй параметр <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> методы, помеченные с помощью <xref:System.ParamArrayAttribute> атрибут, который позволяет включать список с разделителями или массив объектов как список формата.</span><span class="sxs-lookup"><span data-stu-id="086c0-1751">The second parameter of the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> method is tagged with the <xref:System.ParamArrayAttribute> attribute, which allows you to include either a delimited list or an object array as your format list.</span></span>  
  
<a name="braces"></a>
### <a name="how-do-i-include-literal-braces--and--in-the-result-string"></a><span data-ttu-id="086c0-1752">Как включить литерала фигурные скобки ("{» и «}») в результирующей строке?</span><span class="sxs-lookup"><span data-stu-id="086c0-1752">How do I include literal braces ("{" and "}") in the result string?</span></span>  
 <span data-ttu-id="086c0-1753">Например, как это не позволит следующий вызов метода возникновения <xref:System.FormatException> исключение?</span><span class="sxs-lookup"><span data-stu-id="086c0-1753">For example, how do you prevent the following method call from throwing a <xref:System.FormatException> exception?</span></span>  
  
 [!code-csharp[System.String.Format#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#23)]
 [!code-vb[System.String.Format#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#23)]  
  
 <span data-ttu-id="086c0-1754">Единый открывающей или закрывающей фигурной скобкой всегда интерпретируется как начало или конец элемента форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1754">A single opening or closing brace is always interpreted as the beginning or end of a format item.</span></span> <span data-ttu-id="086c0-1755">Следует интерпретировать буквально, ее следует экранировать.</span><span class="sxs-lookup"><span data-stu-id="086c0-1755">To be interpreted literally, it must be escaped.</span></span> <span data-ttu-id="086c0-1756">Экранировать фигурную скобку путем добавления другого фигурную скобку ("{{» и «}}» вместо «{» и «}»), как показано в следующем вызове метода:</span><span class="sxs-lookup"><span data-stu-id="086c0-1756">You escape a brace by adding another brace ("{{" and "}}" instead of "{" and "}"), as in the following method call:</span></span>  
  
 [!code-csharp-interactive[System.String.Format#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#24)]
 [!code-vb[System.String.Format#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#24)]  
  
 <span data-ttu-id="086c0-1757">Однако даже скобок, легко misinterpreted.</span><span class="sxs-lookup"><span data-stu-id="086c0-1757">However, even escaped braces are easily misinterpreted.</span></span> <span data-ttu-id="086c0-1758">Мы рекомендуем включать квадратные скобки в списке формат и использовать элементы формата вставить их в результирующую строку, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="086c0-1758">We recommend that you include braces in the format list and use format items to insert them in the result string, as the following example shows.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#25)]
 [!code-vb[System.String.Format#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#25)]  
  
### <a name="why-does-my-call-to-the-stringformat-method-throw-a-formatexception"></a><span data-ttu-id="086c0-1759">Почему мой вызов метода String.Format исключение FormatException?</span><span class="sxs-lookup"><span data-stu-id="086c0-1759">Why does my call to the String.Format method throw a FormatException?</span></span>  
 <span data-ttu-id="086c0-1760">Наиболее распространенной причиной исключения является то, что индекс элемента формата не соответствует объект в списке формат.</span><span class="sxs-lookup"><span data-stu-id="086c0-1760">The most common cause of the exception is that the index of a format item doesn't correspond to an object in the format list.</span></span> <span data-ttu-id="086c0-1761">Обычно это означает, что misnumbered индексы элементов формата или забыли включить объект в списке формат.</span><span class="sxs-lookup"><span data-stu-id="086c0-1761">Usually this indicates that you've misnumbered the indexes of format items or you've forgotten to include an object in the format list.</span></span> <span data-ttu-id="086c0-1762">Попытка включить без escape-последовательности левую или правую скобку символов также создает исключение <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1762">Attempting to include an unescaped left or right brace character also throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="086c0-1763">В некоторых случаях исключение является результатом опечатка; Например, типичный встречается ошиблись «[» (левая скобка) вместо «{» (открывающая фигурная скобка).</span><span class="sxs-lookup"><span data-stu-id="086c0-1763">Occasionally, the exception is the result of a typo; for example, a typical mistake is to mistype "[" (the left bracket) instead of "{" (the left brace).</span></span>  
  
### <a name="if-the-formatsystemiformatprovidersystemstringsystemobject-method-supports-parameter-arrays-why-does-my-code-throw-an-exception-when-i-use-an-array"></a><span data-ttu-id="086c0-1764">Если метод Format(System.IFormatProvider,System.String,System.Object[]) поддерживает массивы параметров, почему мой код вызова исключения, когда я использую массив?</span><span class="sxs-lookup"><span data-stu-id="086c0-1764">If the Format(System.IFormatProvider,System.String,System.Object[]) method supports parameter arrays, why does my code throw an exception when I use an array?</span></span>  
 <span data-ttu-id="086c0-1765">Например, в следующем коде возникает исключение <xref:System.FormatException> исключение:</span><span class="sxs-lookup"><span data-stu-id="086c0-1765">For example, the following code throws a <xref:System.FormatException> exception:</span></span>  
  
 [!code-csharp[System.String.Format#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa1.cs#21)]
 [!code-vb[System.String.Format#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa1.vb#21)]  
  
 <span data-ttu-id="086c0-1766">Это проблема разрешения перегрузки компилятор.</span><span class="sxs-lookup"><span data-stu-id="086c0-1766">This is a problem of compiler overload resolution.</span></span> <span data-ttu-id="086c0-1767">Так как компилятор не может преобразовать массив целых чисел в массив объектов, он рассматривает массив целых чисел как один аргумент, поэтому он вызывает <xref:System.String.Format%28System.String%2CSystem.Object%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1767">Because the compiler cannot convert an array of integers to an object array, it treats the integer array as a single argument, so it calls the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="086c0-1768">Исключение, так как существуют четыре формата элементы, но только один элемент в списке формат.</span><span class="sxs-lookup"><span data-stu-id="086c0-1768">The exception is thrown because there are four format items but only a single item in the format list.</span></span>  
  
 <span data-ttu-id="086c0-1769">Так как Visual Basic, ни C# можно преобразовать массив целых чисел в массив объектов, необходимо самостоятельно выполнить преобразование, перед вызовом <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1769">Because neither Visual Basic nor C# can convert an integer array to an object array, you have to perform the conversion yourself before calling the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="086c0-1770">Следующий пример предоставляет одну реализацию.</span><span class="sxs-lookup"><span data-stu-id="086c0-1770">The following example provides one implementation.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa2.cs#22)]
 [!code-vb[System.String.Format#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa2.vb#22)]  

## Examples

<span data-ttu-id="086c0-1771">Многочисленные примеры, которые вызывают <xref:System.String.Format%2A> метод смешиваются через ["Примечания"](#remarks-top) этой статьи.</span><span class="sxs-lookup"><span data-stu-id="086c0-1771">Numerous examples that call the <xref:System.String.Format%2A> method are interspersed through the [Remarks](#remarks-top) section of this article.</span></span>  

[!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

<span data-ttu-id="086c0-1772">Вы также можете скачать полный набор `String.Format` примеры, которые входят в [проект .NET Core 2.0 для C#](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/String.Format.zip) и [проект .NET Core 2.0 для Visual Basic](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/String.Format.zip), из [dotnet / репозитории примеров GitHub](https://github.com/dotnet/samples).</span><span class="sxs-lookup"><span data-stu-id="086c0-1772">You can also download a complete set of `String.Format` examples, which are included a [.NET Core 2.0 project for C#](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/String.Format.zip) and a [.NET Core 2.0 project for Visual Basic](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/String.Format.zip), from the [dotnet/samples GitHub repository](https://github.com/dotnet/samples).</span></span>

<span data-ttu-id="086c0-1773">Ниже приведены некоторые примеры, включенные в статью.</span><span class="sxs-lookup"><span data-stu-id="086c0-1773">The following are some of the examples included in the article:</span></span>

### <a name="create-a-format-string"></a><span data-ttu-id="086c0-1774">Создать строку формата</span><span class="sxs-lookup"><span data-stu-id="086c0-1774">Create a format string</span></span>

[<span data-ttu-id="086c0-1775">Вставка строки</span><span class="sxs-lookup"><span data-stu-id="086c0-1775">Inserting a string</span></span>](#inserting-a-string)  
[<span data-ttu-id="086c0-1776">Элемент формата</span><span class="sxs-lookup"><span data-stu-id="086c0-1776">The format item</span></span>](#the-format-item)  
[<span data-ttu-id="086c0-1777">Формат элементы, имеющие тот же индекс</span><span class="sxs-lookup"><span data-stu-id="086c0-1777">Format items that have the same index</span></span>](#format-items-that-have-the-same-index)

### <a name="control-formatted-output"></a><span data-ttu-id="086c0-1778">Элемент управления Форматированные выходные данные</span><span class="sxs-lookup"><span data-stu-id="086c0-1778">Control formatted output</span></span>

[<span data-ttu-id="086c0-1779">Управление форматированием</span><span class="sxs-lookup"><span data-stu-id="086c0-1779">Controlling formatting</span></span>](#controlling-formatting)  
[<span data-ttu-id="086c0-1780">Управление интервал</span><span class="sxs-lookup"><span data-stu-id="086c0-1780">Controlling spacing</span></span>](#controlling-spacing)  
[<span data-ttu-id="086c0-1781">Управление выравнивания</span><span class="sxs-lookup"><span data-stu-id="086c0-1781">Controlling alignment</span></span>](#controlling-alignment)  
[<span data-ttu-id="086c0-1782">Управление количеством цифр целой части</span><span class="sxs-lookup"><span data-stu-id="086c0-1782">Controlling the number of integral digits</span></span>](#how-do-i-control-the-number-of-integral-digits)  
[<span data-ttu-id="086c0-1783">Управление количеством цифр после десятичного разделителя</span><span class="sxs-lookup"><span data-stu-id="086c0-1783">Controlling the number of digits after the decimal separator</span></span>](#how-do-i-control-the-number-of-digits-after-the-decimal-separator)  
[<span data-ttu-id="086c0-1784">Включая фигурные скобки литерала в результирующую строку</span><span class="sxs-lookup"><span data-stu-id="086c0-1784">Including literal braces in a result string</span></span>](#braces)  

### <a name="make-format-strings-culture-sensitive"></a><span data-ttu-id="086c0-1785">Сделать строки формата языка и региона</span><span class="sxs-lookup"><span data-stu-id="086c0-1785">Make format strings culture-sensitive</span></span>

[<span data-ttu-id="086c0-1786">Форматирование с учетом языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="086c0-1786">Culture-sensitive formatting</span></span>](#culture-sensitive-formatting)  

### <a name="customize-the-formatting-operation"></a><span data-ttu-id="086c0-1787">Настройка операции форматирования</span><span class="sxs-lookup"><span data-stu-id="086c0-1787">Customize the formatting operation</span></span>

[<span data-ttu-id="086c0-1788">Пользовательские операции форматирования</span><span class="sxs-lookup"><span data-stu-id="086c0-1788">A custom formatting operation</span></span>](#example-a-custom-formatting-operation)  
[<span data-ttu-id="086c0-1789">Поставщик отсекаемый отрезок и модуль форматирования римские цифры</span><span class="sxs-lookup"><span data-stu-id="086c0-1789">An intercept provider and Roman numeral formatter</span></span>](#example-an-intercept-provider-and-roman-numeral-formatter)  

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="086c0-1790">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="086c0-1790">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="086c0-1791">Составное форматирование</span><span class="sxs-lookup"><span data-stu-id="086c0-1791">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="086c0-1792">Строки стандартных форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1792">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="086c0-1793">Строки настраиваемых форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1793">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="086c0-1794">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1794">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="086c0-1795">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1795">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="086c0-1796">Строки стандартного формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1796">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="086c0-1797">Строки пользовательского формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1797">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="086c0-1798">Строки форматов перечисления</span><span class="sxs-lookup"><span data-stu-id="086c0-1798">Enumeration Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (format As String, arg0 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Format : string * obj -&gt; string" Usage="System.string.Format (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="086c0-1799">[Строка составного форматирования](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1799">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span></param>
        <param name="arg0"><span data-ttu-id="086c0-1800">Объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1800">The object to format.</span></span></param>
        <summary><span data-ttu-id="086c0-1801">Заменяет один или более элементов формата в строке строковым представлением указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-1801">Replaces one or more format items in a string with the string representation of a specified object.</span></span></summary>
        <returns><span data-ttu-id="086c0-1802">Копия <paramref name="format" />, в которой все элементы формата заменены строковыми представлениями <paramref name="arg0" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1802">A copy of <paramref name="format" /> in which any format items are replaced by the string representation of <paramref name="arg0" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="086c0-1803">Этот метод использует [составного форматирования](~/docs/standard/base-types/composite-formatting.md) преобразовать значение выражения в строковое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1803">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of an expression to its string representation and to embed that representation in a string.</span></span> 

[!INCLUDE[simple-string-format](~/includes/simple-string-format.md)]

## <a name="example-formatting-a-single-argument"></a><span data-ttu-id="086c0-1804">Пример Форматирование один аргумент</span><span class="sxs-lookup"><span data-stu-id="086c0-1804">Example: Formatting a single argument</span></span>  
 
 <span data-ttu-id="086c0-1805">В следующем примере используется <xref:System.String.Format%28System.String%2CSystem.Object%29> метод для внедрения возраст человека в середине строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1805">The following example uses the <xref:System.String.Format%28System.String%2CSystem.Object%29> method to embed an individual's age in the middle of a string.</span></span>  
  
 [!code-cpp[System.String.Format#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/format7.cpp#7)]
 [!code-csharp-interactive[System.String.Format#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/format7.cs#7)]
 [!code-vb[System.String.Format#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/format7.vb#7)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1806"><paramref name="format" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1806"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-1807">Недопустимый элемент формата в <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1807">The format item in <paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="086c0-1808">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1808">-or-</span></span> 
<span data-ttu-id="086c0-1809">Индекс элемента формата не равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1809">The index of a format item is not zero.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="086c0-1810">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="086c0-1810">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="086c0-1811">Составное форматирование</span><span class="sxs-lookup"><span data-stu-id="086c0-1811">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="086c0-1812">Строки стандартных форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1812">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="086c0-1813">Строки настраиваемых форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1813">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="086c0-1814">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1814">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="086c0-1815">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1815">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="086c0-1816">Строки стандартного формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1816">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="086c0-1817">Строки пользовательского формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1817">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="086c0-1818">Строки форматов перечисления</span><span class="sxs-lookup"><span data-stu-id="086c0-1818">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (format As String, ParamArray args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Format : string * obj[] -&gt; string" Usage="System.string.Format (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="086c0-1819">[Строка составного форматирования](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1819">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span></param>
        <param name="args"><span data-ttu-id="086c0-1820">Массив объектов, содержащий нуль или более форматируемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1820">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="086c0-1821">Заменяет элемент формата в указанной строке строковым представлением соответствующего объекта в указанном массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-1821">Replaces the format item in a specified string with the string representation of a corresponding object in a specified array.</span></span></summary>
        <returns><span data-ttu-id="086c0-1822">Копия <paramref name="format" />, в которой элементы формата заменены строковыми представления соответствующих объектов в <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1822">A copy of <paramref name="format" /> in which the format items have been replaced by the string representation of the corresponding objects in <paramref name="args" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="086c0-1823">Этот метод использует [составного форматирования](~/docs/standard/base-types/composite-formatting.md) для преобразования значения четырех или более выражений в их строковые представления и для внедрения этих представлений в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1823">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of four or more expressions to their string representations and to embed those representations in a string.</span></span> <span data-ttu-id="086c0-1824">Так как `args` параметр помечается <xref:System.ParamArrayAttribute?displayProperty=nameWithType> атрибут, можно передать объекты в метод как отдельные аргументы или <xref:System.Object> массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-1824">Since the `args` parameter is marked with the <xref:System.ParamArrayAttribute?displayProperty=nameWithType> attribute, you can pass the objects to the method as individual arguments or as an <xref:System.Object> array.</span></span> 

[!INCLUDE[simple-string-format](~/includes/simple-string-format.md)]

## <a name="example-formatting-more-than-three-arguments"></a><span data-ttu-id="086c0-1825">Пример Форматирование больше трех аргументов</span><span class="sxs-lookup"><span data-stu-id="086c0-1825">Example: Formatting more than three arguments</span></span>  
 
 <span data-ttu-id="086c0-1826">В этом примере создается строка, содержащая данные на высокой и низкой температуре в определенный день.</span><span class="sxs-lookup"><span data-stu-id="086c0-1826">This example creates a string that contains data on the high and low temperature on a particular date.</span></span> <span data-ttu-id="086c0-1827">Строка составного формата имеет пять элементов формата в примере C# и шесть в примере Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="086c0-1827">The composite format string has five format items in the C# example and six in the Visual Basic example.</span></span> <span data-ttu-id="086c0-1828">Два элемента форматирования определяют ширину соответствующего значения строковое представление, а первый элемент форматирования также включают стандартные формата даты и времени.</span><span class="sxs-lookup"><span data-stu-id="086c0-1828">Two of the format items define the width of their corresponding value's string representation, and the first format item also includes a standard date and time format string.</span></span>  
  
 [!code-cpp[System.String.Format#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/format5.cpp#5)]
 [!code-csharp[System.String.Format#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/format5.cs#5)]
 [!code-vb[System.String.Format#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/format5.vb#5)]  
  
 <span data-ttu-id="086c0-1829">Можно также передать объекты отформатирован в виде массива, а не как список аргументов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1829">You can also pass the objects to be formatted as an array rather than as an argument list.</span></span>  
  
 [!code-cpp[System.String.Format#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/format_paramarray1.cpp#10)]
 [!code-csharp[System.String.Format#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/format_paramarray1.cs#10)]
 [!code-vb[System.String.Format#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/format_paramarray1.vb#10)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1830">Значение параметра <paramref name="format" /> или <paramref name="args" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1830"><paramref name="format" /> or <paramref name="args" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-1831"><paramref name="format" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="086c0-1831"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="086c0-1832">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1832">-or-</span></span> 
<span data-ttu-id="086c0-1833">Индекс элемента формата меньше нуля или больше либо равен длине массива <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1833">The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="086c0-1834">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="086c0-1834">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="086c0-1835">Составное форматирование</span><span class="sxs-lookup"><span data-stu-id="086c0-1835">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="086c0-1836">Строки стандартных форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1836">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="086c0-1837">Строки настраиваемых форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1837">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="086c0-1838">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1838">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="086c0-1839">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1839">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="086c0-1840">Строки стандартного формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1840">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="086c0-1841">Строки пользовательского формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1841">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="086c0-1842">Строки форматов перечисления</span><span class="sxs-lookup"><span data-stu-id="086c0-1842">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (IFormatProvider provider, string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.IFormatProvider provider, string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.IFormatProvider,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (provider As IFormatProvider, format As String, arg0 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Format : IFormatProvider * string * obj -&gt; string" Usage="System.string.Format (provider, format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-1843">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1843">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="086c0-1844">[Строка составного форматирования](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1844">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span></param>
        <param name="arg0"><span data-ttu-id="086c0-1845">Объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1845">The object to format.</span></span></param>
        <summary><span data-ttu-id="086c0-1846">Заменяет элементы формата в указанной строке строковым представлением соответствующего объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-1846">Replaces the format item or items in a specified string with the string representation of the corresponding object.</span></span> <span data-ttu-id="086c0-1847">Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-1847">A parameter supplies culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="086c0-1848">Копия <paramref name="format" />, в которой элементы форматирования были заменены строковым представлением <paramref name="arg0" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1848">A copy of <paramref name="format" /> in which the format item or items have been replaced by the string representation of <paramref name="arg0" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="086c0-1849">Этот метод использует [составного форматирования](~/docs/standard/base-types/composite-formatting.md) преобразовать значение выражения в строковое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1849">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of an expression to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="086c0-1850">При выполнении преобразования, данный метод использует форматирование, зависящее от языка и региональных параметров или пользовательский модуль форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1850">In performing the conversion, the method uses culture-sensitive formatting or a custom formatter.</span></span> <span data-ttu-id="086c0-1851">Метод преобразует `arg0` в строковое представление, вызвав его **ToString(IFormatProvider)** метода или, если объект, соответствующая элемент форматирования, включающий строку формата, вызвав его **ToString () String, IFormatProvider)** метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1851">The method converts `arg0` to its string representation by calling its **ToString(IFormatProvider)** method or, if the object's corresponding format item includes a format string, by calling its **ToString(String,IFormatProvider)** method.</span></span> <span data-ttu-id="086c0-1852">Если эти методы не существует, он вызывает метод объекта без параметров **ToString** метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1852">If these methods don't exist, it calls the object's parameterless **ToString** method.</span></span>  

[!INCLUDE[provider-string-format](~/includes/provider-string-format.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1853"><paramref name="format" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1853"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-1854"><paramref name="format" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="086c0-1854"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="086c0-1855">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1855">-or-</span></span> 
<span data-ttu-id="086c0-1856">Индекс элемента формата не равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-1856">The index of a format item is not zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (IFormatProvider provider, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.IFormatProvider provider, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (provider As IFormatProvider, format As String, ParamArray args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(IFormatProvider ^ provider, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Format : IFormatProvider * string * obj[] -&gt; string" Usage="System.string.Format (provider, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-1857">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1857">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="086c0-1858">[Строка составного форматирования](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1858">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span></param>
        <param name="args"><span data-ttu-id="086c0-1859">Массив объектов, содержащий нуль или более форматируемых объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1859">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="086c0-1860">Заменяет элементы формата в строке строковым представлениями соответствующих объектов в указанном массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-1860">Replaces the format items in a string with the string representations of corresponding objects in a specified array.</span></span> <span data-ttu-id="086c0-1861">Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-1861">A parameter supplies culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="086c0-1862">Копия <paramref name="format" />, в которой элементы формата заменены строковыми представления соответствующих объектов в <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1862">A copy of <paramref name="format" /> in which the format items have been replaced by the string representation of the corresponding objects in <paramref name="args" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="086c0-1863">Этот метод использует [составного форматирования](~/docs/standard/base-types/composite-formatting.md) для преобразования четырех или более выражений в их строковые представления и для внедрения этих представлений в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1863">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert four or more expressions to their string representations and to embed those representations in a string.</span></span> <span data-ttu-id="086c0-1864">При выполнении преобразования, данный метод использует форматирование, зависящее от языка и региональных параметров или пользовательский модуль форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1864">In performing the conversion, the method uses culture-sensitive formatting or a custom formatter.</span></span> <span data-ttu-id="086c0-1865">Метод преобразует каждый <xref:System.Object> аргумент в строковое представление, вызвав его **ToString(IFormatProvider)** метода или, если объект, соответствующая элемент форматирования, включающий строку формата, вызвав его **ToString(String,IFormatProvider)** метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1865">The method converts each <xref:System.Object> argument to its string representation by calling its **ToString(IFormatProvider)** method or, if the object's corresponding format item includes a format string, by calling its **ToString(String,IFormatProvider)** method.</span></span> <span data-ttu-id="086c0-1866">Если эти методы не существует, он вызывает метод объекта без параметров **ToString** метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1866">If these methods don't exist, it calls the object's parameterless **ToString** method.</span></span>  

[!INCLUDE[provider-string-format](~/includes/provider-string-format.md)]

<a name="culture-sensitive-formatting" /> 
## <a name="example-culture-sensitive-formatting"></a><span data-ttu-id="086c0-1867">Пример Форматирование с учетом языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="086c0-1867">Example: Culture-sensitive formatting</span></span>  
 <span data-ttu-id="086c0-1868">В этом примере используется <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> метод для отображения строкового представления некоторых значений даты и времени и числовых значений с помощью нескольких различных языков и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1868">This example uses the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> method to display the string representation of some date and time values and numeric values by using several different cultures.</span></span>  
  
 [!code-csharp-interactive[System.String.Format2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format2/cs/Example2.cs#2)]
 [!code-vb[System.String.Format2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format2/vb/Example2.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1869">Значение параметра <paramref name="format" /> или <paramref name="args" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1869"><paramref name="format" /> or <paramref name="args" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-1870"><paramref name="format" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="086c0-1870"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="086c0-1871">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1871">-or-</span></span> 
<span data-ttu-id="086c0-1872">Индекс элемента формата меньше нуля или больше либо равен длине массива <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1872">The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array.</span></span></exception>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.ICustomFormatter" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="086c0-1873">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="086c0-1873">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="086c0-1874">Составное форматирование</span><span class="sxs-lookup"><span data-stu-id="086c0-1874">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="086c0-1875">Строки стандартных форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1875">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="086c0-1876">Строки настраиваемых форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1876">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="086c0-1877">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1877">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="086c0-1878">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1878">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="086c0-1879">Строки стандартного формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1879">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="086c0-1880">Строки пользовательского формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1880">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="086c0-1881">Строки форматов перечисления</span><span class="sxs-lookup"><span data-stu-id="086c0-1881">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (format As String, arg0 As Object, arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Format : string * obj * obj -&gt; string" Usage="System.string.Format (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="086c0-1882">[Строка составного форматирования](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1882">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span></param>
        <param name="arg0"><span data-ttu-id="086c0-1883">Первый объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1883">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="086c0-1884">Второй объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1884">The second object to format.</span></span></param>
        <summary><span data-ttu-id="086c0-1885">Заменяет элементы формата в строке строковым представлением двух указанных объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1885">Replaces the format items in a string with the string representation of two specified objects.</span></span></summary>
        <returns><span data-ttu-id="086c0-1886">Копия <paramref name="format" />, в которой все элементы формата заменены строковыми представлениями <paramref name="arg0" /> и <paramref name="arg1" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1886">A copy of <paramref name="format" /> in which format items are replaced by the string representations of <paramref name="arg0" /> and <paramref name="arg1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="086c0-1887">Этот метод использует [составного форматирования](~/docs/standard/base-types/composite-formatting.md) для преобразования значения из двух выражений в их строковые представления и для внедрения этих представлений в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1887">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of two expressions to their string representations and to embed those representations in a string.</span></span> 

[!INCLUDE[simple-string-format](~/includes/simple-string-format.md)]

## <a name="example-formatting-two-arguments"></a><span data-ttu-id="086c0-1888">Пример Форматирование два аргумента</span><span class="sxs-lookup"><span data-stu-id="086c0-1888">Example: Formatting two arguments</span></span>  
 
 <span data-ttu-id="086c0-1889">В этом примере используется <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> метод для отображения данных температуры и времени, хранящиеся в универсальной <xref:System.Collections.Generic.Dictionary%602> объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-1889">This example uses the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method to display time and temperature data stored in a generic <xref:System.Collections.Generic.Dictionary%602> object.</span></span> <span data-ttu-id="086c0-1890">Обратите внимание на то, что строка формата имеет три элемента форматирования, несмотря на то, что имеется только два объекта для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1890">Note that the format string has three format items, although there are only two objects to format.</span></span> <span data-ttu-id="086c0-1891">Это, так как первый объект в списке (значение даты и времени) используются элементы два формата: Первый формат элемента отображает время, а вторая отображает дату.</span><span class="sxs-lookup"><span data-stu-id="086c0-1891">This is because the first object in the list (a date and time value) is used by two format items: The first format item displays the time, and the second displays the date.</span></span>  
  
 [!code-cpp[System.String.Format#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatexample4.cpp#6)]
 [!code-csharp[System.String.Format#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/formatexample4.cs#6)]
 [!code-vb[System.String.Format#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/formatexample4.vb#6)]  
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1892"><paramref name="format" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1892"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-1893"><paramref name="format" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="086c0-1893"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="086c0-1894">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1894">-or-</span></span> 
<span data-ttu-id="086c0-1895">Индекс элемента формата не равен нулю или единице.</span><span class="sxs-lookup"><span data-stu-id="086c0-1895">The index of a format item is not zero or one.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="086c0-1896">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="086c0-1896">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="086c0-1897">Составное форматирование</span><span class="sxs-lookup"><span data-stu-id="086c0-1897">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="086c0-1898">Строки стандартных форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1898">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="086c0-1899">Строки настраиваемых форматов даты и времени</span><span class="sxs-lookup"><span data-stu-id="086c0-1899">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="086c0-1900">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1900">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="086c0-1901">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="086c0-1901">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="086c0-1902">Строки стандартного формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1902">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="086c0-1903">Строки пользовательского формата TimeSpan</span><span class="sxs-lookup"><span data-stu-id="086c0-1903">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="086c0-1904">Строки форматов перечисления</span><span class="sxs-lookup"><span data-stu-id="086c0-1904">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (IFormatProvider provider, string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.IFormatProvider provider, string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Format : IFormatProvider * string * obj * obj -&gt; string" Usage="System.string.Format (provider, format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-1905">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1905">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="086c0-1906">[Строка составного форматирования](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1906">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span></param>
        <param name="arg0"><span data-ttu-id="086c0-1907">Первый объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1907">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="086c0-1908">Второй объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1908">The second object to format.</span></span></param>
        <summary><span data-ttu-id="086c0-1909">Заменяет элементы формата в строке строковым представлением двух указанных объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1909">Replaces the format items in a string with the string representation of two specified objects.</span></span> <span data-ttu-id="086c0-1910">Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-1910">A parameter supplies culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="086c0-1911">Копия <paramref name="format" />, в которой все элементы формата заменены строковыми представлениями <paramref name="arg0" /> и <paramref name="arg1" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1911">A copy of <paramref name="format" /> in which format items are replaced by the string representations of <paramref name="arg0" /> and <paramref name="arg1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="086c0-1912">Этот метод использует [составного форматирования](~/docs/standard/base-types/composite-formatting.md) для преобразования в их строковые представления двух выражений и внедрить эти представления в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1912">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert two expressions to their string representations and to embed those representations in a string.</span></span> <span data-ttu-id="086c0-1913">При выполнении преобразования, данный метод использует форматирование, зависящее от языка и региональных параметров или пользовательский модуль форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1913">In performing the conversion, the method uses culture-sensitive formatting or a custom formatter.</span></span> <span data-ttu-id="086c0-1914">Метод преобразует каждый <xref:System.Object> аргумент в строковое представление, вызвав его **ToString(IFormatProvider)** метода или, если объект, соответствующая элемент форматирования, включающий строку формата, вызвав его **ToString(String,IFormatProvider)** метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1914">The method converts each <xref:System.Object> argument to its string representation by calling its **ToString(IFormatProvider)** method or, if the object's corresponding format item includes a format string, by calling its **ToString(String,IFormatProvider)** method.</span></span> <span data-ttu-id="086c0-1915">Если эти методы не существует, он вызывает метод объекта без параметров **ToString** метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1915">If these methods don't exist, it calls the object's parameterless **ToString** method.</span></span>  

[!INCLUDE[provider-string-format](~/includes/provider-string-format.md)]
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1916"><paramref name="format" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1916"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-1917"><paramref name="format" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="086c0-1917"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="086c0-1918">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1918">-or-</span></span> 
<span data-ttu-id="086c0-1919">Индекс элемента формата не равен нулю или единице.</span><span class="sxs-lookup"><span data-stu-id="086c0-1919">The index of a format item is not zero or one.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (format As String, arg0 As Object, arg1 As Object, arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Format : string * obj * obj * obj -&gt; string" Usage="System.string.Format (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="086c0-1920">[Строка составного форматирования](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1920">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span></param>
        <param name="arg0"><span data-ttu-id="086c0-1921">Первый объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1921">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="086c0-1922">Второй объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1922">The second object to format.</span></span></param>
        <param name="arg2"><span data-ttu-id="086c0-1923">Третий объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1923">The third object to format.</span></span></param>
        <summary><span data-ttu-id="086c0-1924">Заменяет элементы формата в строке строковым представлением трех указанных объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1924">Replaces the format items in a string with the string representation of three specified objects.</span></span></summary>
        <returns><span data-ttu-id="086c0-1925">Копия <paramref name="format" />, в которой все элементы формата заменены строковыми представлениями <paramref name="arg0" />, <paramref name="arg1" /> и <paramref name="arg2" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1925">A copy of <paramref name="format" /> in which the format items have been replaced by the string representations of <paramref name="arg0" />, <paramref name="arg1" />, and <paramref name="arg2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="086c0-1926">Этот метод использует [составного форматирования](~/docs/standard/base-types/composite-formatting.md) для преобразования значения из трех выражений в их строковые представления и для внедрения этих представлений в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1926">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of three expressions to their string representations and to embed those representations in a string.</span></span> 

[!INCLUDE[simple-string-format](~/includes/simple-string-format.md)]

## <a name="example-formatting-three-arguments"></a><span data-ttu-id="086c0-1927">Пример Форматирование три аргумента</span><span class="sxs-lookup"><span data-stu-id="086c0-1927">Example: Formatting three arguments</span></span>  
 
 <span data-ttu-id="086c0-1928">В этом примере используется <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> метод, чтобы создать строку, которая иллюстрирует результат логического значения `And` операцию с двумя целочисленными значениями.</span><span class="sxs-lookup"><span data-stu-id="086c0-1928">This example uses the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method to create a string that illustrates the result of a Boolean `And` operation with two integer values.</span></span> <span data-ttu-id="086c0-1929">Обратите внимание, строка формата содержит шесть элементов форматирования, что метод имеет только три элемента в списке параметров, поскольку каждый элемент форматируется двумя разными способами.</span><span class="sxs-lookup"><span data-stu-id="086c0-1929">Note that the format string includes six format items, but the method has only three items in its parameter list, because each item is formatted in two different ways.</span></span>  
  
 [!code-cpp[System.String.Format#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/format4.cpp#4)]
 [!code-csharp-interactive[System.String.Format#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/format4.cs#4)]
 [!code-vb[System.String.Format#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/format4.vb#4)]  
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1930"><paramref name="format" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1930"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-1931"><paramref name="format" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="086c0-1931"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="086c0-1932">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1932">-or-</span></span> 
<span data-ttu-id="086c0-1933">Индекс элемента формата меньше нуля или больше двух.</span><span class="sxs-lookup"><span data-stu-id="086c0-1933">The index of a format item is less than zero, or greater than two.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="086c0-1934">Типы форматирования в .NET</span><span class="sxs-lookup"><span data-stu-id="086c0-1934">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="086c0-1935">Составное форматирование</span><span class="sxs-lookup"><span data-stu-id="086c0-1935">Composite Formatting</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (IFormatProvider provider, string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.IFormatProvider provider, string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object, arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Format : IFormatProvider * string * obj * obj * obj -&gt; string" Usage="System.string.Format (provider, format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-1936">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-1936">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="086c0-1937">[Строка составного форматирования](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1937">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span></span></param>
        <param name="arg0"><span data-ttu-id="086c0-1938">Первый объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1938">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="086c0-1939">Второй объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1939">The second object to format.</span></span></param>
        <param name="arg2"><span data-ttu-id="086c0-1940">Третий объект для форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1940">The third object to format.</span></span></param>
        <summary><span data-ttu-id="086c0-1941">Заменяет элементы формата в строке строковым представлением трех указанных объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1941">Replaces the format items in a string with the string representation of three specified objects.</span></span> <span data-ttu-id="086c0-1942">Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-1942">An parameter supplies culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="086c0-1943">Копия <paramref name="format" />, в которой все элементы формата заменены строковыми представлениями <paramref name="arg0" />, <paramref name="arg1" /> и <paramref name="arg2" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1943">A copy of <paramref name="format" /> in which the format items have been replaced by the string representations of <paramref name="arg0" />, <paramref name="arg1" />, and <paramref name="arg2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="086c0-1944">Этот метод использует [составного форматирования](~/docs/standard/base-types/composite-formatting.md) для преобразования три выражения строковыми представлениями и внедрять эти представления в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-1944">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert three expressions to their string representations and to embed those representations in a string.</span></span> <span data-ttu-id="086c0-1945">При выполнении преобразования, данный метод использует форматирование, зависящее от языка и региональных параметров или пользовательский модуль форматирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-1945">In performing the conversion, the method uses culture-sensitive formatting or a custom formatter.</span></span> <span data-ttu-id="086c0-1946">Метод преобразует каждый <xref:System.Object> аргумент в строковое представление, вызвав его **ToString(IFormatProvider)** метода или, если объект, соответствующая элемент форматирования, включающий строку формата, вызвав его **ToString(String,IFormatProvider)** метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1946">The method converts each <xref:System.Object> argument to its string representation by calling its **ToString(IFormatProvider)** method or, if the object's corresponding format item includes a format string, by calling its **ToString(String,IFormatProvider)** method.</span></span> <span data-ttu-id="086c0-1947">Если эти методы не существует, он вызывает метод объекта без параметров **ToString** метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1947">If these methods don't exist, it calls the object's parameterless **ToString** method.</span></span>  

[!INCLUDE[provider-string-format](~/includes/provider-string-format.md)]
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-1948"><paramref name="format" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1948"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-1949"><paramref name="format" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="086c0-1949"><paramref name="format" /> is invalid.</span></span>  
  
<span data-ttu-id="086c0-1950">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-1950">-or-</span></span> 
<span data-ttu-id="086c0-1951">Индекс элемента формата меньше нуля или больше двух.</span><span class="sxs-lookup"><span data-stu-id="086c0-1951">The index of a format item is less than zero, or greater than two.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public CharEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CharEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As CharEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; CharEnumerator" Usage="string.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CharEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-1952">Извлекает объект, который может выполнять итерацию отдельных знаков данной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1952">Retrieves an object that can iterate through the individual characters in this string.</span></span></summary>
        <returns><span data-ttu-id="086c0-1953">Объект перечислителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-1953">An enumerator object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
> <span data-ttu-id="086c0-1954">Вместо вызова метода <xref:System.String.GetEnumerator%2A> метод для извлечения <xref:System.CharEnumerator> объект затем используется для перечисления строки, следует использовать конструкцию итерации языка (в C#в C++/CLR и в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="086c0-1954">Rather than calling the <xref:System.String.GetEnumerator%2A> method to retrieve a <xref:System.CharEnumerator> object that you then use to enumerate a string, you should instead use your language's iteration construct (in C#, in C++/CLR, and in Visual Basic).</span></span> <span data-ttu-id="086c0-1955">[по каждому элементу](~/docs/csharp/language-reference/keywords/foreach-in.md) в C#, [для каждого](/cpp/dotnet/for-each-in) в C++/CLR, и [для каждого](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="086c0-1955">[foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) in C#, [for each](/cpp/dotnet/for-each-in) in C++/CLR, and [For Each](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) in Visual Basic).</span></span>
  
 <span data-ttu-id="086c0-1956">Этот метод позволяет выполнять итерацию отдельных знаков в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-1956">This method enables you to iterate the individual characters in a string.</span></span> <span data-ttu-id="086c0-1957">Например, Visual Basic `For Each` и C# `foreach` инструкции вызвать этот метод для возврата <xref:System.CharEnumerator> объект, способный предоставлять доступ только для чтения к символам в данного экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1957">For example, the Visual Basic `For Each` and C# `foreach` statements invoke this method to return a <xref:System.CharEnumerator> object that can provide read-only access to the characters in this string instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1958">В следующем примере выполняется итерация символы в нескольких строках и отображает сведения об их отдельных символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-1958">The following example iterates the characters in several strings and displays information about their individual characters.</span></span> <span data-ttu-id="086c0-1959">Она использует языковой конструкции итерации, а не вызов <xref:System.String.GetEnumerator%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1959">It uses the language iteration construct rather than a call to the <xref:System.String.GetEnumerator%2A> method.</span></span>  
  
 [!code-cpp[system.string.getenumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[system.string.getenumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[system.string.getenumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="P:System.String.Chars(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="string.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-1960">Возвращает хэш-код для этой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1960">Returns the hash code for this string.</span></span></summary>
        <returns><span data-ttu-id="086c0-1961">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="086c0-1961">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-1962">Поведение <xref:System.String.GetHashCode%2A> зависит от его реализации, которая может изменяться от одной версии среды CLR в другой.</span><span class="sxs-lookup"><span data-stu-id="086c0-1962">The behavior of <xref:System.String.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another.</span></span> <span data-ttu-id="086c0-1963">Причина, почему это может случиться — повышение производительности <xref:System.String.GetHashCode%2A>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1963">A reason why this might happen is to improve the performance of <xref:System.String.GetHashCode%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="086c0-1964">Если два строковых объекта равны, <xref:System.String.GetHashCode%2A> метод возвращает одинаковые значения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1964">If two string objects are equal, the <xref:System.String.GetHashCode%2A> method returns identical values.</span></span> <span data-ttu-id="086c0-1965">Тем не менее не уникальный хэш-кодом для каждого уникального строкового значения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1965">However, there is not a unique hash code value for each unique string value.</span></span> <span data-ttu-id="086c0-1966">Различные строки могут возвращать одинаковый хэш-код.</span><span class="sxs-lookup"><span data-stu-id="086c0-1966">Different strings can return the same hash code.</span></span>  
>   
>  <span data-ttu-id="086c0-1967">Хэш-код, сам не обязательно быть нестабильным.</span><span class="sxs-lookup"><span data-stu-id="086c0-1967">The hash code itself is not guaranteed to be stable.</span></span> <span data-ttu-id="086c0-1968">Хэш-коды для одинаковых строк может отличаться в разных реализациях .NET, в версиях .NET и платформ .NET (например, 32-разрядных и 64-разрядные) в одной версии платформы .NET.</span><span class="sxs-lookup"><span data-stu-id="086c0-1968">Hash codes for identical strings can differ across .NET implementations, across .NET versions, and across .NET platforms (such as 32-bit and 64-bit) for a single version of .NET.</span></span> <span data-ttu-id="086c0-1969">В некоторых случаях они могут даже отличаться по домену приложения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1969">In some cases, they can even differ by application domain.</span></span> <span data-ttu-id="086c0-1970">Это означает, что два последующих запусках той же программы могут возвращать разные хэш-коды.</span><span class="sxs-lookup"><span data-stu-id="086c0-1970">This implies that two subsequent runs of the same program may return different hash codes.</span></span>  
>   
>  <span data-ttu-id="086c0-1971">В результате хэш кодов никогда не должно использоваться за пределами домена приложения, в котором они были созданы, они никогда не должны использоваться как ключевые поля в коллекции, и они никогда не должны сохраняться.</span><span class="sxs-lookup"><span data-stu-id="086c0-1971">As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</span></span>  
>   
>  <span data-ttu-id="086c0-1972">Наконец не используйте хэш-код вместо значения, возвращаемого функцией шифрования хэширования, при необходимости криптостойкой хэш.</span><span class="sxs-lookup"><span data-stu-id="086c0-1972">Finally, don't use the hash code instead of a value returned by a cryptographic hashing function if you need a cryptographically strong hash.</span></span> <span data-ttu-id="086c0-1973">Для криптографических хэшей, используйте класс, производный от <xref:System.Security.Cryptography.HashAlgorithm?displayProperty=nameWithType> или <xref:System.Security.Cryptography.KeyedHashAlgorithm?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="086c0-1973">For cryptographic hashes, use a class derived from the <xref:System.Security.Cryptography.HashAlgorithm?displayProperty=nameWithType> or <xref:System.Security.Cryptography.KeyedHashAlgorithm?displayProperty=nameWithType> class.</span></span>  
>   
>  <span data-ttu-id="086c0-1974">Дополнительные сведения о хэш-кодов, см. в разделе <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1974">For more information about hash codes, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="086c0-1975">В классических приложениях можно использовать [ \<UseRandomizedStringHashAlgorithm > элемент](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md) создания уникальный хэш-кодов для каждого домена приложения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1975">In desktop apps, you can use the [\<UseRandomizedStringHashAlgorithm> element](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md) to generate unique hash codes on a per application domain basis.</span></span> <span data-ttu-id="086c0-1976">Это может уменьшить количество конфликтов и повысить общую производительность операций вставки и уточняющих запросов, использующих хэш-таблицы.</span><span class="sxs-lookup"><span data-stu-id="086c0-1976">This can reduce the number of collisions and improve the overall performance of insertions and lookups that use hash tables.</span></span> <span data-ttu-id="086c0-1977">В следующем примере показано, как использовать [ \<UseRandomizedStringHashAlgorithm > элемент](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-1977">The following example shows how to use the [\<UseRandomizedStringHashAlgorithm> element](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md).</span></span> <span data-ttu-id="086c0-1978">Он определяет `DisplayString` класс, который включает закрытую строковую константу, `s`, значение которого равно «This is a string».</span><span class="sxs-lookup"><span data-stu-id="086c0-1978">It defines a `DisplayString` class that includes a private string constant, `s`, whose value is "This is a string."</span></span> <span data-ttu-id="086c0-1979">Он также включает метод `ShowStringHashCode`, который отображает значение строки и ее хэш-код вместе с именем домена приложения, в котором метод выполняется.</span><span class="sxs-lookup"><span data-stu-id="086c0-1979">It also includes a `ShowStringHashCode` method that displays the string value and its hash code along with the name of the application domain in which the method is executing.</span></span>
  
 [!code-csharp[System.String.GetHashCode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.GetHashCode/CS/perdomain.cs#2)]
 [!code-vb[System.String.GetHashCode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.GetHashCode/VB/perdomain.vb#2)]  
  
 <span data-ttu-id="086c0-1980">При выполнении примера без указания файла конфигурации он отображает подобный следующему вывод.</span><span class="sxs-lookup"><span data-stu-id="086c0-1980">When you run the example without supplying a configuration file, it displays output similar to the following.</span></span> <span data-ttu-id="086c0-1981">Обратите внимание, что хэш-коды для строки идентичны в обоих доменах приложений.</span><span class="sxs-lookup"><span data-stu-id="086c0-1981">Note that the hash codes for the string are identical in the two application domains.</span></span>  
  
```
String 'This is a string.' in domain 'PerDomain.exe': 941BCEAC  
String 'This is a string.' in domain 'NewDomain': 941BCEAC
```  
  
 <span data-ttu-id="086c0-1982">Однако при добавлении следующего файла конфигурации в каталог примеров и запуске примера, хэш-коды для той же строки будут отличаться по домену приложения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1982">However, if you add the following configuration file to the example's directory and then run the example, the hash codes for the same string will differ by application domain.</span></span>  
  
```xml
<?xml version ="1.0"?>  
<configuration>  
   <runtime>  
      <UseRandomizedStringHashAlgorithm enabled="1" />  
   </runtime>  
</configuration>
```  
  
 <span data-ttu-id="086c0-1983">Если файл конфигурации существует, пример отображает следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="086c0-1983">When the configuration file is present, the example displays the following output:</span></span>  
  
```  
String 'This is a string.' in domain 'PerDomain.exe': 5435776D
String 'This is a string.' in domain 'NewDomain': 75CC8236
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="086c0-1984">Хэш-кодов используются для вставки и извлечения объектов с ключом из хэш-таблицы эффективно.</span><span class="sxs-lookup"><span data-stu-id="086c0-1984">Hash codes are used to insert and retrieve keyed objects from hash tables efficiently.</span></span> <span data-ttu-id="086c0-1985">Тем не менее хэш-коды не уникальной идентификации строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-1985">However, hash codes don't uniquely identify strings.</span></span> <span data-ttu-id="086c0-1986">Одинаковые строки имеют равно хэш-коды, но среда CLR также может назначать одинаковый хэш-код для разных строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1986">Identical strings have  equal hash codes, but the common language runtime can also assign the same hash code to different strings.</span></span> <span data-ttu-id="086c0-1987">Кроме того хэш-коды могут различаться по версии платформы .NET, платформы в одну версию и доменом приложения.</span><span class="sxs-lookup"><span data-stu-id="086c0-1987">In addition, hash codes can vary by version of .NET, by platform within a single version, and by application domain.</span></span> <span data-ttu-id="086c0-1988">По этой причине не следует сериализовать или сохранить значения хэш-кода, а также следует использовать их как ключи в хэш-таблицу или словарь.</span><span class="sxs-lookup"><span data-stu-id="086c0-1988">Because of this, you should not serialize or persist hash code values, nor should you use them as keys in a hash table or dictionary.</span></span>  
  
 <span data-ttu-id="086c0-1989">Дополнительные сведения об использовании хэш-кодов и `GetHashCode` метод, см. в разделе <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-1989">For additional information about the use of hash codes and the `GetHashCode` method, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-1990">В следующем примере демонстрируется <xref:System.String.GetHashCode%2A> метод с использованием различных входных строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-1990">The following example demonstrates the <xref:System.String.GetHashCode%2A> method using various input strings.</span></span>  
  
 [!code-cpp[system.string.gethashcode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.GetHashCode/CPP/gethashcode.cpp#1)]
 [!code-csharp[system.string.gethashcode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.GetHashCode/CS/gethashcode.cs#1)]
 [!code-vb[system.string.gethashcode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.GetHashCode/VB/gethashcode.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-1991">Значение, возвращенное <see cref="M:System.String.GetHashCode" /> зависит от платформы.</span><span class="sxs-lookup"><span data-stu-id="086c0-1991">The value returned by <see cref="M:System.String.GetHashCode" /> is platform-dependent.</span></span> <span data-ttu-id="086c0-1992">Он отличается в 32-разрядных и 64-разрядных версиях платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="086c0-1992">It differs on the 32-bit and 64-bit versions of the .NET Framework.</span></span> <span data-ttu-id="086c0-1993">Он также могут различаться в разных версиях .NET Framework и .NET Core.</span><span class="sxs-lookup"><span data-stu-id="086c0-1993">It also can differ between versions of the .NET Framework and .NET Core.</span></span></para></block>
        <altmember cref="M:System.Object.GetHashCode" />
        <related type="Article" href="https://msdn.microsoft.com/library/c08125d6-56cc-4b23-b482-813ff85dc630"><span data-ttu-id="086c0-1994">&lt;UseRandomizedStringHashAlgorithm&gt; элемент</span><span class="sxs-lookup"><span data-stu-id="086c0-1994">&lt;UseRandomizedStringHashAlgorithm&gt; Element</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public static int GetHashCode (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHashCode(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetHashCode(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHashCode (value As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHashCode(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="static member GetHashCode : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="System.string.GetHashCode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHashCode(valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetHashCode(System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : StringComparison -&gt; int" Usage="string.GetHashCode comparisonType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public static int GetHashCode (ReadOnlySpan&lt;char&gt; value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHashCode(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetHashCode(System.ReadOnlySpan{System.Char},System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHashCode (value As ReadOnlySpan(Of Char), comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHashCode(ReadOnlySpan&lt;char&gt; value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member GetHashCode : ReadOnlySpan&lt;char&gt; * StringComparison -&gt; int" Usage="System.string.GetHashCode (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPinnableReference">
      <MemberSignature Language="C#" Value="public ref readonly char GetPinnableReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.char GetPinnableReference() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetPinnableReference" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPinnableReference () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; char ^ GetPinnableReference();" />
      <MemberSignature Language="F#" Value="member this.GetPinnableReference : unit -&gt; char" Usage="string.GetPinnableReference " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue RefType="Readonly">
        <ReturnType>System.Char</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="netcore-3.0">
            <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="string.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-1995">Возвращает <see cref="T:System.TypeCode" /> для класса <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1995">Returns the <see cref="T:System.TypeCode" /> for class <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-1996">Константа перечислимого типа, <see cref="F:System.TypeCode.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-1996">The enumerated constant, <see cref="F:System.TypeCode.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="086c0-1997">В следующем примере отображается <xref:System.TypeCode> константы перечислимого типа для <xref:System.String> типа.</span><span class="sxs-lookup"><span data-stu-id="086c0-1997">The following example displays the <xref:System.TypeCode> enumerated constant for the <xref:System.String> type.</span></span>  
  
 [!code-cpp[string.gettypecode#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.gettypecode/CPP/gtc.cpp#1)]
 [!code-csharp[string.gettypecode#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.gettypecode/CS/gtc.cs#1)]
 [!code-vb[string.gettypecode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.gettypecode/VB/gtc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-1998">Возвращает индекс с отсчетом от нуля первого вхождения указанного символа Юникода или строки в пределах данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-1998">Reports the zero-based index of the first occurrence of a specified Unicode character or string within this instance.</span></span> <span data-ttu-id="086c0-1999">Метод возвращает -1, если знак или строка не найдена в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-1999">The method returns -1 if the character or string is not found in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char -&gt; int" Usage="string.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2000">Искомый знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2000">A Unicode character to seek.</span></span></param>
        <summary><span data-ttu-id="086c0-2001">Возвращает индекс с отсчетом от нуля первого вхождения указанного символа Юникода в данной строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2001">Reports the zero-based index of the first occurrence of the specified Unicode character in this string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2002">Отсчитываемое от нуля значение индекса параметра <paramref name="value" />, если этот знак найден; в противном случае — значение -1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2002">The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2003">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2003">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="086c0-2004">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярные значения в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-2004">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="086c0-2005">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2005">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2006">В следующем примере показано, как можно выполнить поиск <xref:System.String> для символов с помощью <xref:System.String.IndexOf%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2006">The following example demonstrates how you can search a <xref:System.String> for a character using the <xref:System.String.IndexOf%2A> method.</span></span>  
  
 [!code-cpp[System.String.IndexOf#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.IndexOf/CPP/indexof_c.cpp#5)]
 [!code-csharp[System.String.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/indexof_c.cs#5)]
 [!code-vb[System.String.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/indexof_c.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="string.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2007">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2007">The string to seek.</span></span></param>
        <summary><span data-ttu-id="086c0-2008">Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2008">Reports the zero-based index of the first occurrence of the specified string in this instance.</span></span></summary>
        <returns><span data-ttu-id="086c0-2009">Положение в индексе (начиная с нуля) параметра <paramref name="value" />, если эта строка найдена, или значение -1, если она не найдена.</span><span class="sxs-lookup"><span data-stu-id="086c0-2009">The zero-based index position of <paramref name="value" /> if that string is found, or -1 if it is not.</span></span> <span data-ttu-id="086c0-2010">Если значение <paramref name="value" /> равно <see cref="F:System.String.Empty" />, то возвращаемое значение равно 0.</span><span class="sxs-lookup"><span data-stu-id="086c0-2010">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2011">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2011">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="086c0-2012">Этот метод выполняет поиск слова (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2012">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span> <span data-ttu-id="086c0-2013">Поиск начинается с позиции первого символа этого экземпляра и продолжается до последней позиции знака.</span><span class="sxs-lookup"><span data-stu-id="086c0-2013">The search begins at the first character position of this instance and continues until the last character position.</span></span>  
  
 <span data-ttu-id="086c0-2014">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2014">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2015">Если при поиске с учетом языка и региональных параметров параметр `value` содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2015">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2016">Если `value` состоит только из одного или нескольких символов можно игнорировать, <xref:System.String.IndexOf%28System.String%29> метод всегда возвращает 0 (ноль), чтобы указать, что совпадения в начале текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2016">If `value` consists only of one or more ignorable characters, the <xref:System.String.IndexOf%28System.String%29> method always returns 0 (zero) to indicate that the match is found at the beginning of the current instance.</span></span> <span data-ttu-id="086c0-2017">В следующем примере <xref:System.String.IndexOf%28System.String%29> метод используется для поиска подстроки три (мягкий перенос (U + 00AD), Мягкий перенос перед буквой «n» и мягкий перенос перед буквой «m») в двух строках.</span><span class="sxs-lookup"><span data-stu-id="086c0-2017">In the following example, the <xref:System.String.IndexOf%28System.String%29> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="086c0-2018">Только одна из строк содержит мягкий перенос.</span><span class="sxs-lookup"><span data-stu-id="086c0-2018">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="086c0-2019">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, в каждом из случаев, поскольку мягкий перенос является игнорируемым символом, результат аналогичен так, как если бы мягкий перенос не были включены в `value`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2019">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in `value`.</span></span> <span data-ttu-id="086c0-2020">При поиске мягкий перенос, метод возвращает 0 (ноль), чтобы указать, что он найдено совпадение в начале строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2020">When searching for a soft hyphen only, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>  
  
 [!code-csharp[System.String.IndexOf#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable21.cs#21)]
 [!code-vb[System.String.IndexOf#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable21.vb#21)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2021">Следующий пример выполняет поиск «n» в «animal».</span><span class="sxs-lookup"><span data-stu-id="086c0-2021">The following example searches for the "n" in "animal".</span></span> <span data-ttu-id="086c0-2022">Так как строка индексы отсчитываются с нуля, а не один, <xref:System.String.IndexOf%28System.String%29> метод указывает, что «n» в позиции 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2022">Because string indexes begin at zero rather than one, the <xref:System.String.IndexOf%28System.String%29> method indicates that the "n" is at position 1.</span></span>  
  
 [!code-cpp[System.String.IndexOf#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.IndexOf/CPP/simple1.cpp#12)]
 [!code-csharp[System.String.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/simple1.cs#12)]
 [!code-vb[System.String.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/simple1.vb#12)]  
  
 <span data-ttu-id="086c0-2023">В следующем примере используется <xref:System.String.IndexOf%2A> метод, чтобы определить начальную позицию имени животного в предложение.</span><span class="sxs-lookup"><span data-stu-id="086c0-2023">The following example uses the <xref:System.String.IndexOf%2A> method to determine the starting position of an animal name in a sentence.</span></span> <span data-ttu-id="086c0-2024">Затем используется этой позиции для вставки прилагательного, которое описывает животное в предложении.</span><span class="sxs-lookup"><span data-stu-id="086c0-2024">It then uses this position to insert an adjective that describes the animal into the sentence.</span></span>  
  
 [!code-cpp[stringinsert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringinsert/CPP/stringinsert.cpp#1)]
 [!code-csharp[stringinsert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringinsert/CS/stringinsert.cs#1)]
 [!code-vb[stringinsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringinsert/VB/stringinsert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2025"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2025"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2026">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методы сравнения строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-2026">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-2027">Чтобы найти первый индекс подстроки в пределах экземпляра строки, используя правила сравнения строк для текущего языка и региональных параметров, вызовите <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> перегрузку метода со значением <see cref="F:System.StringComparison.CurrentCulture" /> для его `comparisonType` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2027">To find the first index of a substring within a string instance by using the comparison rules of the current culture, call the <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its `comparisonType` parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int -&gt; int" Usage="string.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2028">Искомый знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2028">A Unicode character to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2029">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2029">The search starting position.</span></span></param>
        <summary><span data-ttu-id="086c0-2030">Возвращает индекс с отсчетом от нуля первого вхождения указанного символа Юникода в данной строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2030">Reports the zero-based index of the first occurrence of the specified Unicode character in this string.</span></span> <span data-ttu-id="086c0-2031">Поиск начинается с указанной позиции знака.</span><span class="sxs-lookup"><span data-stu-id="086c0-2031">The search starts at a specified character position.</span></span></summary>
        <returns><span data-ttu-id="086c0-2032">Отсчитываемая от нуля позиция индекса параметра <paramref name="value" /> с начала строки, если символ найден. Значение –1, если символ не найден.</span><span class="sxs-lookup"><span data-stu-id="086c0-2032">The zero-based index position of <paramref name="value" /> from the start of the string if that character is found, or -1 if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2033">Индексация начинается с 0.</span><span class="sxs-lookup"><span data-stu-id="086c0-2033">Index numbering starts from 0.</span></span> <span data-ttu-id="086c0-2034">Параметр `startIndex` может иметь значение в диапазоне от 0 до длины экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2034">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span> <span data-ttu-id="086c0-2035">Если `startIndex` равно сумме длины экземпляра строки, метод возвращает значение -1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2035">If `startIndex` equals the length of the string instance, the method returns -1.</span></span>  
  
 <span data-ttu-id="086c0-2036">Поиск в диапазоне от `startIndex` до конца строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2036">The search ranges from `startIndex` to the end of the string.</span></span>  
  
 <span data-ttu-id="086c0-2037">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярные значения в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-2037">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="086c0-2038">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2038">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2039">В следующем примере демонстрируется <xref:System.String.IndexOf%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2039">The following example demonstrates the <xref:System.String.IndexOf%2A> method.</span></span>  
  
 [!code-cpp[string.indexof1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.indexof1/CPP/ixof1.cpp#1)]
 [!code-csharp[string.indexof1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.indexof1/CS/ixof1.cs#1)]
 [!code-vb[string.indexof1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.indexof1/VB/ixof1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2040"><paramref name="startIndex" /> имеет значение меньше нуля или больше длины строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2040"><paramref name="startIndex" /> is less than 0 (zero) or greater than the length of the string.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.Char,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * StringComparison -&gt; int" Usage="string.IndexOf (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2041">Символ для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2041">The character to seek.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-2042">Значение перечисления, определяющее правила поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2042">An enumeration value that specifies the rules for the search.</span></span></param>
        <summary><span data-ttu-id="086c0-2043">Возвращает индекс с отсчетом от нуля первого вхождения указанного символа Юникода в данной строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2043">Reports the zero-based index of the first occurrence of the specified Unicode character in this string.</span></span> <span data-ttu-id="086c0-2044">Параметр определяет тип поиска заданного символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2044">A parameter specifies the type of search to use for the specified character.</span></span></summary>
        <returns><span data-ttu-id="086c0-2045">Отсчитываемое от нуля значение индекса параметра <paramref name="value" />, если этот знак найден; в противном случае — значение –1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2045">The zero-based index of <paramref name="value" /> if that character is found, or -1 if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="086c0-2046">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2046">Index numbering starts from zero.</span></span>  
  
<span data-ttu-id="086c0-2047">`comparisonType` Параметр <xref:System.StringComparison> член перечисления, указывающее ли поиск `value` аргумент использует текущие или инвариантные язык и региональные параметры, с учетом или без учета регистра или используется word или порядковым номерам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2047">The `comparisonType` parameter is a <xref:System.StringComparison> enumeration member that specifies whether the search for the `value` argument uses the current or invariant culture, is case-sensitive or case-insensitive, or uses word or ordinal comparison rules.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2048"><paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2048"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int -&gt; int" Usage="string.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2049">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2049">The string to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2050">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2050">The search starting position.</span></span></param>
        <summary><span data-ttu-id="086c0-2051">Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2051">Reports the zero-based index of the first occurrence of the specified string in this instance.</span></span> <span data-ttu-id="086c0-2052">Поиск начинается с указанной позиции знака.</span><span class="sxs-lookup"><span data-stu-id="086c0-2052">The search starts at a specified character position.</span></span></summary>
        <returns><span data-ttu-id="086c0-2053">Отсчитываемая от нуля позиция индекса параметра <paramref name="value" /> с начала текущего экземпляра, если строка найдена. Значение –1, если строка не найдена.</span><span class="sxs-lookup"><span data-stu-id="086c0-2053">The zero-based index position of <paramref name="value" /> from the start of the current instance if that string is found, or -1 if it is not.</span></span> <span data-ttu-id="086c0-2054">Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является <paramref name="startIndex" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2054">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2055">Индексация начинается с 0.</span><span class="sxs-lookup"><span data-stu-id="086c0-2055">Index numbering starts from 0.</span></span> <span data-ttu-id="086c0-2056">Параметр `startIndex` может иметь значение в диапазоне от 0 до длины экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2056">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span> <span data-ttu-id="086c0-2057">Если `startIndex` равно сумме длины экземпляра строки, метод возвращает значение -1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2057">If `startIndex` equals the length of the string instance, the method returns -1.</span></span>  
  
 <span data-ttu-id="086c0-2058">Этот метод выполняет поиск слова (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2058">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span> <span data-ttu-id="086c0-2059">Поиск начинается с `startIndex` символ позицию данного экземпляра и продолжается до последней позиции знака.</span><span class="sxs-lookup"><span data-stu-id="086c0-2059">The search begins at the `startIndex` character position of this instance and continues until the last character position.</span></span>  
  
 <span data-ttu-id="086c0-2060">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2060">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2061">Если при поиске с учетом языка и региональных параметров параметр `value` содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2061">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2062">Если `value` состоит только из одного или нескольких символов можно игнорировать, <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29> метод всегда возвращает `startIndex`, который является позицию символа, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2062">If `value` consists only of one or more ignorable characters, the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29> method always returns `startIndex`, which is the character position at which the search begins.</span></span> <span data-ttu-id="086c0-2063">В следующем примере <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29> метод позволяет найти позицию мягкий перенос (U + 00AD) следуют «m» в двух строках.</span><span class="sxs-lookup"><span data-stu-id="086c0-2063">In the following example, the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in two strings.</span></span> <span data-ttu-id="086c0-2064">Только одна из строк содержит требуемую подстроку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2064">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="086c0-2065">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, в обоих случаях, поскольку мягкий перенос является игнорируемым символом, метод возвращает индекс «m» в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2065">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string.</span></span> <span data-ttu-id="086c0-2066">Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".</span><span class="sxs-lookup"><span data-stu-id="086c0-2066">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
 [!code-csharp[System.String.IndexOf#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable22.cs#22)]
 [!code-vb[System.String.IndexOf#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable22.vb#22)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2067">Следующий пример просматривает все вхождения указанной строки в целевой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2067">The following example searches for all occurrences of a specified string within a target string.</span></span>  
  
 [!code-cpp[stringindexof4#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringindexof4/CPP/stringindexof4.cpp#1)]
 [!code-csharp[stringindexof4#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringindexof4/CS/stringindexof4.cs#1)]
 [!code-vb[stringindexof4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringindexof4/VB/stringindexof4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2068"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2068"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2069"><paramref name="startIndex" /> имеет значение меньше нуля или больше длины этой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2069"><paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2070">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методы сравнения строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-2070">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-2071">Чтобы найти первый индекс подстроки, происходит после определенной позиции, используя правила сравнения строк для текущего языка и региональных параметров, вызовите <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> перегрузку метода со значением <see cref="F:System.StringComparison.CurrentCulture" /> для его `comparisonType` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2071">To find the first index of a substring that occurs after a particular character position by using the comparison rules of the current culture, call the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its `comparisonType` parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * StringComparison -&gt; int" Usage="string.IndexOf (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2072">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2072">The string to seek.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-2073">Одно из значений перечисления, определяющее правила поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2073">One of the enumeration values that specifies the rules for the search.</span></span></param>
        <summary><span data-ttu-id="086c0-2074">Возвращает индекс с отсчетом от нуля первого вхождения указанной строки в текущем объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2074">Reports the zero-based index of the first occurrence of the specified string in the current <see cref="T:System.String" /> object.</span></span> <span data-ttu-id="086c0-2075">Параметр определяет тип поиска заданной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2075">A parameter specifies the type of search to use for the specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2076">Индекс позиции строки, заданной в параметре <paramref name="value" />, если она найдена, и -1, если нет.</span><span class="sxs-lookup"><span data-stu-id="086c0-2076">The index position of the <paramref name="value" /> parameter if that string is found, or -1 if it is not.</span></span> <span data-ttu-id="086c0-2077">Если значение <paramref name="value" /> равно <see cref="F:System.String.Empty" />, то возвращаемое значение равно 0.</span><span class="sxs-lookup"><span data-stu-id="086c0-2077">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2078">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2078">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="086c0-2079">`comparisonType` Параметр указывает искомый `value` параметра, используя текущие или инвариантные язык и региональные параметры, с помощью поиска с учетом или без учета регистра и с помощью word или порядковым номерам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2079">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2080">В следующем примере показано три перегрузки <xref:System.String.IndexOf%2A> метод, который поиска первого экземпляра строки внутри другой строки с использованием различных значений свойства <xref:System.StringComparison> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-2080">The following example demonstrates three overloads of the <xref:System.String.IndexOf%2A> method that find the first occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.IndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.IndexOfCmp/cs/iocmp.cs#1)]
 [!code-vb[system.string.IndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.IndexOfCmp/vb/iocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2081"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2081"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2082"><paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2082"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2083">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2083">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2084">Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="comparisonType" /> не имеет значение <see cref="F:System.StringComparison.Ordinal" /> или <see cref="F:System.StringComparison.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2084">In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2085">Если <paramref name="value" /> состоит только из одного или нескольких символов можно игнорировать, <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> метод всегда возвращает 0 (ноль), чтобы указать, что совпадения в начале текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2085">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of the current instance.</span></span>  
  
<span data-ttu-id="086c0-2086">В следующем примере <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> метод используется для поиска подстроки три (мягкий перенос (U + 00AD), Мягкий перенос перед буквой «n» и мягкий перенос перед буквой «m») в двух строках.</span><span class="sxs-lookup"><span data-stu-id="086c0-2086">In the following example, the <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="086c0-2087">Только одна из строк содержит мягкий перенос.</span><span class="sxs-lookup"><span data-stu-id="086c0-2087">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="086c0-2088">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, поскольку мягкий перенос является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает значение, оно возвратит, если мягкий перенос не были включены в строку поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2088">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="086c0-2089">Поиск по порядковым номерам, однако успешно находит мягкий перенос в одной строке и сообщает, что он отсутствует из второй строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2089">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="086c0-2090">[!code-csharp[System.String.IndexOf#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable26.cs#26)] [!code-vb[System.String.IndexOf#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable26.vb#26)]</span><span class="sxs-lookup"><span data-stu-id="086c0-2090">[!code-csharp[System.String.IndexOf#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable26.cs#26)] [!code-vb[System.String.IndexOf#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable26.vb#26)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int * int -&gt; int" Usage="string.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2091">Искомый знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2091">A Unicode character to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2092">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2092">The search starting position.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2093">Количество позиций знаков для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2093">The number of character positions to examine.</span></span></param>
        <summary><span data-ttu-id="086c0-2094">Возвращает индекс с отсчетом от нуля первого вхождения указанного символа в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2094">Reports the zero-based index of the first occurrence of the specified character in this instance.</span></span> <span data-ttu-id="086c0-2095">Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.</span><span class="sxs-lookup"><span data-stu-id="086c0-2095">The search starts at a specified character position and examines a specified number of character positions.</span></span></summary>
        <returns><span data-ttu-id="086c0-2096">Отсчитываемая от нуля позиция индекса параметра <paramref name="value" /> с начала строки, если символ найден. Значение –1, если символ не найден.</span><span class="sxs-lookup"><span data-stu-id="086c0-2096">The zero-based index position of <paramref name="value" /> from the start of the string if that character is found, or -1 if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2097">Поиск начинается с `startIndex` и продолжает `startIndex`  +  `count` -1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2097">The search begins at `startIndex` and continues to `startIndex` + `count` -1.</span></span> <span data-ttu-id="086c0-2098">Символ в `startIndex`  +  `count` не включается в поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2098">The character at `startIndex` + `count` is not included in the search.</span></span>  
  
 <span data-ttu-id="086c0-2099">Индексация начинается с 0 (ноль).</span><span class="sxs-lookup"><span data-stu-id="086c0-2099">Index numbering starts from 0 (zero).</span></span> <span data-ttu-id="086c0-2100">Параметр `startIndex` может иметь значение в диапазоне от 0 до длины экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2100">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span>  
  
 <span data-ttu-id="086c0-2101">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярные значения в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-2101">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="086c0-2102">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2102">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2103">В следующем примере демонстрируется <xref:System.String.IndexOf%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2103">The following example demonstrates the <xref:System.String.IndexOf%2A> method.</span></span>  
  
 [!code-cpp[system.string.indexof#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.IndexOf/CPP/indexofcii.cpp#1)]
 [!code-csharp[system.string.indexof#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/indexofcii.cs#1)]
 [!code-vb[system.string.indexof#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/indexofcii.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2104"><paramref name="count" /> или <paramref name="startIndex" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-2104"><paramref name="count" /> or <paramref name="startIndex" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2105">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2105">-or-</span></span> 
 <span data-ttu-id="086c0-2106"><paramref name="startIndex" /> больше длины этой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2106"><paramref name="startIndex" /> is greater than the length of this string.</span></span>  
  
<span data-ttu-id="086c0-2107">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2107">-or-</span></span> 
 <span data-ttu-id="086c0-2108"><paramref name="count" /> больше, чем длина этой строки минус <paramref name="startIndex" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2108"><paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int * int -&gt; int" Usage="string.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2109">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2109">The string to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2110">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2110">The search starting position.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2111">Количество позиций знаков для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2111">The number of character positions to examine.</span></span></param>
        <summary><span data-ttu-id="086c0-2112">Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2112">Reports the zero-based index of the first occurrence of the specified string in this instance.</span></span> <span data-ttu-id="086c0-2113">Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.</span><span class="sxs-lookup"><span data-stu-id="086c0-2113">The search starts at a specified character position and examines a specified number of character positions.</span></span></summary>
        <returns><span data-ttu-id="086c0-2114">Отсчитываемая от нуля позиция индекса параметра <paramref name="value" /> с начала текущего экземпляра, если строка найдена. Значение –1, если строка не найдена.</span><span class="sxs-lookup"><span data-stu-id="086c0-2114">The zero-based index position of <paramref name="value" /> from the start of the current instance if that string is found, or -1 if it is not.</span></span> <span data-ttu-id="086c0-2115">Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является <paramref name="startIndex" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2115">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2116">Индексация начинается с 0 (ноль).</span><span class="sxs-lookup"><span data-stu-id="086c0-2116">Index numbering starts from 0 (zero).</span></span> <span data-ttu-id="086c0-2117">Параметр `startIndex` может иметь значение в диапазоне от 0 до длины экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2117">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span>  
  
 <span data-ttu-id="086c0-2118">Этот метод выполняет поиск слова (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2118">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span> <span data-ttu-id="086c0-2119">Поиск начинается с `startIndex` и продолжает `startIndex`  +  `count` -1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2119">The search begins at `startIndex` and continues to `startIndex` + `count` -1.</span></span> <span data-ttu-id="086c0-2120">Символ в `startIndex`  +  `count` не включается в поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2120">The character at `startIndex` + `count` is not included in the search.</span></span>  
  
 <span data-ttu-id="086c0-2121">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2121">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2122">Если при поиске с учетом языка и региональных параметров параметр `value` содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2122">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2123">Если `value` состоит только из одного или нескольких символов можно игнорировать, <xref:System.String.IndexOf%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод всегда возвращает `startIndex`, который является позицию символа, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2123">If `value` consists only of one or more ignorable characters, the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%2CSystem.Int32%29> method always returns `startIndex`, which is the character position at which the search begins.</span></span> <span data-ttu-id="086c0-2124">В следующем примере <xref:System.String.IndexOf%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод позволяет найти позицию мягкий перенос (U + 00AD) следуют «m», начиная с третьего по шестой позиций знаков в две строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2124">In the following example, the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%2CSystem.Int32%29> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="086c0-2125">Только одна из строк содержит требуемую подстроку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2125">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="086c0-2126">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, в обоих случаях, поскольку мягкий перенос является игнорируемым символом, метод возвращает индекс «m» в строке при выполнении учитывающего культуру сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2126">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2127">Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".</span><span class="sxs-lookup"><span data-stu-id="086c0-2127">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
 [!code-csharp[System.String.IndexOf#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable23.cs#23)]
 [!code-vb[System.String.IndexOf#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable23.vb#23)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2128">В следующем примере вычисляется всех вхождений строки «he» в подстроке другой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2128">The following example finds the index of all occurrences of the string "he" within a substring of another string.</span></span> <span data-ttu-id="086c0-2129">Обратите внимание на то, что количество символов для поиска должен вычисляться для каждой итерации поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2129">Note that the number of characters to be searched must be recalculated for each search iteration.</span></span>  
  
 [!code-cpp[string.indexof8#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.indexof8/CPP/ixof8.cpp#1)]
 [!code-csharp[string.indexof8#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.indexof8/CS/ixof8.cs#1)]
 [!code-vb[string.indexof8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.indexof8/VB/ixof8.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2130"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2130"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2131"><paramref name="count" /> или <paramref name="startIndex" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-2131"><paramref name="count" /> or <paramref name="startIndex" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2132">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2132">-or-</span></span> 
 <span data-ttu-id="086c0-2133"><paramref name="startIndex" /> больше длины этой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2133"><paramref name="startIndex" /> is greater than the length of this string.</span></span>  
  
<span data-ttu-id="086c0-2134">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2134">-or-</span></span> 
 <span data-ttu-id="086c0-2135"><paramref name="count" /> больше, чем длина этой строки минус <paramref name="startIndex" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2135"><paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2136">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методы сравнения строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-2136">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-2137">Чтобы использовать правила сравнения строк для текущего языка и региональных параметров для этой операции, вызовите <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> перегрузку метода со значением <see cref="F:System.StringComparison.CurrentCulture" /> для его `comparisonType` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2137">To use the comparison rules of the current culture to perform this operation, call the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its `comparisonType` parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int * StringComparison -&gt; int" Usage="string.IndexOf (value, startIndex, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2138">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2138">The string to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2139">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2139">The search starting position.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-2140">Одно из значений перечисления, определяющее правила поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2140">One of the enumeration values that specifies the rules for the search.</span></span></param>
        <summary><span data-ttu-id="086c0-2141">Возвращает индекс с отсчетом от нуля первого вхождения указанной строки в текущем объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2141">Reports the zero-based index of the first occurrence of the specified string in the current <see cref="T:System.String" /> object.</span></span> <span data-ttu-id="086c0-2142">Параметры задают начальную позицию поиска в текущей строке и тип поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2142">Parameters specify the starting search position in the current string and the type of search to use for the specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2143">Отсчитываемая от нуля позиция параметра <paramref name="value" /> с начала текущего экземпляра, если строка найдена, или -1, если нет.</span><span class="sxs-lookup"><span data-stu-id="086c0-2143">The zero-based index position of the <paramref name="value" /> parameter from the start of the current instance if that string is found, or -1 if it is not.</span></span> <span data-ttu-id="086c0-2144">Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является <paramref name="startIndex" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2144">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2145">Индексация начинается с 0.</span><span class="sxs-lookup"><span data-stu-id="086c0-2145">Index numbering starts from 0.</span></span> <span data-ttu-id="086c0-2146">Параметр `startIndex` может иметь значение в диапазоне от 0 до длины экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2146">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span> <span data-ttu-id="086c0-2147">Если `startIndex` равно сумме длины экземпляра строки, метод возвращает значение -1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2147">If `startIndex` equals the length of the string instance, the method returns -1.</span></span>  
  
 <span data-ttu-id="086c0-2148">`comparisonType` Параметр указывает искомый `value` параметра, используя текущие или инвариантные язык и региональные параметры, с помощью поиска с учетом или без учета регистра и с помощью word или порядковым номерам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2148">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2149">В следующем примере показано три перегрузки <xref:System.String.IndexOf%2A> метод, который поиска первого экземпляра строки внутри другой строки с использованием различных значений свойства <xref:System.StringComparison> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-2149">The following example demonstrates three overloads of the <xref:System.String.IndexOf%2A> method that find the first occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.IndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.IndexOfCmp/cs/iocmp.cs#1)]
 [!code-vb[system.string.IndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.IndexOfCmp/vb/iocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2150"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2150"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2151"><paramref name="startIndex" /> имеет значение меньше нуля или больше длины этой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2151"><paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2152"><paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2152"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2153">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2153">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2154">Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="comparisonType" /> не имеет значение <see cref="F:System.StringComparison.Ordinal" /> или <see cref="F:System.StringComparison.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2154">In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2155">Если <paramref name="value" /> состоит только из одного или нескольких символов можно игнорировать, <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> метод всегда возвращает <paramref name="startIndex" />, который является позицию символа, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2155">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="086c0-2156">В следующем примере <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> метод позволяет найти позицию мягкий перенос (U + 00AD) следуют «m», начиная с третьей позиции символа в двух строках.</span><span class="sxs-lookup"><span data-stu-id="086c0-2156">In the following example, the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting with the third character position in two strings.</span></span> <span data-ttu-id="086c0-2157">Только одна из строк содержит требуемую подстроку. Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, в обоих случаях, поскольку мягкий перенос является игнорируемым символом, метод возвращает индекс «m» в строке при выполнении учитывающего культуру сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2157">Only one of the strings contains the required substring.If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2158">Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".</span><span class="sxs-lookup"><span data-stu-id="086c0-2158">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="086c0-2159">Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2159">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
<span data-ttu-id="086c0-2160">[!code-csharp[System.String.IndexOf#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable25.cs#25)] [!code-vb[System.String.IndexOf#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable25.vb#25)]</span><span class="sxs-lookup"><span data-stu-id="086c0-2160">[!code-csharp[System.String.IndexOf#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable25.cs#25)] [!code-vb[System.String.IndexOf#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable25.vb#25)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex, int32 count, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer, count As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int * int * StringComparison -&gt; int" Usage="string.IndexOf (value, startIndex, count, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2161">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2161">The string to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2162">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2162">The search starting position.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2163">Количество позиций знаков для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2163">The number of character positions to examine.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-2164">Одно из значений перечисления, определяющее правила поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2164">One of the enumeration values that specifies the rules for the search.</span></span></param>
        <summary><span data-ttu-id="086c0-2165">Возвращает индекс с отсчетом от нуля первого вхождения указанной строки в текущем объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2165">Reports the zero-based index of the first occurrence of the specified string in the current <see cref="T:System.String" /> object.</span></span> <span data-ttu-id="086c0-2166">Параметры задают начальную позицию поиска в текущей строке, количество проверяемых знаков текущей строки и тип поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2166">Parameters specify the starting search position in the current string, the number of characters in the current string to search, and the type of search to use for the specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2167">Отсчитываемая от нуля позиция параметра <paramref name="value" /> с начала текущего экземпляра, если строка найдена, или -1, если нет.</span><span class="sxs-lookup"><span data-stu-id="086c0-2167">The zero-based index position of the <paramref name="value" /> parameter from the start of the current instance if that string is found, or -1 if it is not.</span></span> <span data-ttu-id="086c0-2168">Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является <paramref name="startIndex" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2168">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2169">Индексация начинается с 0 (ноль).</span><span class="sxs-lookup"><span data-stu-id="086c0-2169">Index numbering starts from 0 (zero).</span></span> <span data-ttu-id="086c0-2170">Параметр `startIndex` может иметь значение в диапазоне от 0 до длины экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2170">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span>  
  
 <span data-ttu-id="086c0-2171">Поиск начинается с `startIndex` и продолжает `startIndex`  +  `count` -1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2171">The search begins at `startIndex` and continues to `startIndex` + `count` -1.</span></span> <span data-ttu-id="086c0-2172">Символ в `startIndex`  +  `count` не включается в поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2172">The character at `startIndex` + `count` is not included in the search.</span></span>  
  
 <span data-ttu-id="086c0-2173">`comparisonType` Параметр указывает искомый `value` параметра, используя текущие или инвариантные язык и региональные параметры, с помощью поиска с учетом или без учета регистра и с помощью word или порядковым номерам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2173">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2174">В следующем примере показано три перегрузки <xref:System.String.IndexOf%2A> метод, который поиска первого экземпляра строки внутри другой строки с использованием различных значений свойства <xref:System.StringComparison> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-2174">The following example demonstrates three overloads of the <xref:System.String.IndexOf%2A> method that find the first occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.IndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.IndexOfCmp/cs/iocmp.cs#1)]
 [!code-vb[system.string.IndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.IndexOfCmp/vb/iocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2175"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2175"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2176"><paramref name="count" /> или <paramref name="startIndex" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-2176"><paramref name="count" /> or <paramref name="startIndex" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2177">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2177">-or-</span></span> 
 <span data-ttu-id="086c0-2178"><paramref name="startIndex" /> больше длины этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2178"><paramref name="startIndex" /> is greater than the length of this instance.</span></span>  
  
<span data-ttu-id="086c0-2179">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2179">-or-</span></span> 
 <span data-ttu-id="086c0-2180"><paramref name="count" /> больше, чем длина этой строки минус <paramref name="startIndex" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2180"><paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2181"><paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2181"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2182">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2182">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2183">Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="comparisonType" /> не имеет значение <see cref="F:System.StringComparison.Ordinal" /> или <see cref="F:System.StringComparison.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2183">In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2184">Если <paramref name="value" /> состоит только из одного или нескольких символов можно игнорировать, <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> метод всегда возвращает <paramref name="startIndex" />, который является позицию символа, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2184">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="086c0-2185">В следующем примере <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> метод позволяет найти позицию мягкий перенос (U + 00AD) следуют «m», начиная с третьего по шестой позиций знаков в две строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2185">In the following example, the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="086c0-2186">Только одна из строк содержит требуемую подстроку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2186">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="086c0-2187">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, в обоих случаях, поскольку мягкий перенос является игнорируемым символом, метод возвращает индекс «m» в строке при выполнении учитывающего культуру сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2187">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2188">Когда он выполняет порядковое сравнение, однако она находит подстрока только в первой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2188">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="086c0-2189">Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой «m», метод возвращает не индекс мягкого переноса, но вместо этого возвращает индекс «m», когда он выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2189">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2190">Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2190">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
<span data-ttu-id="086c0-2191">[!code-csharp[System.String.IndexOf#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable24.cs#24)] [!code-vb[System.String.IndexOf#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable24.vb#24)]</span><span class="sxs-lookup"><span data-stu-id="086c0-2191">[!code-csharp[System.String.IndexOf#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable24.cs#24)] [!code-vb[System.String.IndexOf#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable24.vb#24)]</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOfAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2192">Возвращает индекс первого обнаруженного в данном экземпляре знака из указанного массива знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2192">Reports the index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span></span> <span data-ttu-id="086c0-2193">Метод возвращает -1, если знаки массива не найдены в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2193">The method returns -1 if the characters in the array are not found in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOfAny(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] -&gt; int" Usage="string.IndexOfAny anyOf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="anyOf"><span data-ttu-id="086c0-2194">Массив знаков Юникода, содержащий один или несколько искомых знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2194">A Unicode character array containing one or more characters to seek.</span></span></param>
        <summary><span data-ttu-id="086c0-2195">Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2195">Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="086c0-2196">Начинающееся с нуля значение индекса первого вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если не найден ни один знак из <paramref name="anyOf" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2196">The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2197">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2197">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="086c0-2198">Поиск `anyOf` чувствителен к регистру.</span><span class="sxs-lookup"><span data-stu-id="086c0-2198">The search for `anyOf` is case-sensitive.</span></span> <span data-ttu-id="086c0-2199">Если `anyOf` — пустой массив, метод находит совпадение с началом строки (то есть в нулевом индексе).</span><span class="sxs-lookup"><span data-stu-id="086c0-2199">If `anyOf` is an empty array, the method finds a match at the beginning of the string (that  is, at index zero).</span></span>  
  
 <span data-ttu-id="086c0-2200">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярные значения в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-2200">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="086c0-2201">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2201">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2202">Следующий пример находит первый гласные в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2202">The following example finds the first vowel in a string.</span></span>  
  
 [!code-csharp[System.String.IndexOfAny#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.IndexOfAny/cs/IndexOfAny1.cs#1)]
 [!code-vb[System.String.IndexOfAny#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.IndexOfAny/vb/IndexOfAny1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2203"><paramref name="anyOf" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2203"><paramref name="anyOf" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOfAny(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int -&gt; int" Usage="string.IndexOfAny (anyOf, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf"><span data-ttu-id="086c0-2204">Массив знаков Юникода, содержащий один или несколько искомых знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2204">A Unicode character array containing one or more characters to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2205">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2205">The search starting position.</span></span></param>
        <summary><span data-ttu-id="086c0-2206">Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2206">Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span></span> <span data-ttu-id="086c0-2207">Поиск начинается с указанной позиции знака.</span><span class="sxs-lookup"><span data-stu-id="086c0-2207">The search starts at a specified character position.</span></span></summary>
        <returns><span data-ttu-id="086c0-2208">Начинающееся с нуля значение индекса первого вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если не найден ни один знак из <paramref name="anyOf" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2208">The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2209">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2209">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2210">`startIndex` Параметра могут варьироваться от 0 до единицу меньше, чем длина экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2210">The `startIndex` parameter can range from 0 to one less than the length of the string instance.</span></span>  
  
 <span data-ttu-id="086c0-2211">Поиск в диапазоне от `startIndex` до конца строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2211">The search ranges from `startIndex` to the end of the string.</span></span>  
  
 <span data-ttu-id="086c0-2212">Поиск `anyOf` чувствителен к регистру.</span><span class="sxs-lookup"><span data-stu-id="086c0-2212">The search for `anyOf` is case-sensitive.</span></span>  
  
 <span data-ttu-id="086c0-2213">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярное значение Юникод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2213">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar value are the same.</span></span> <span data-ttu-id="086c0-2214">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2214">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2215">В следующем примере вычисляется индекс вхождение любого символа строки «is» в подстроке другой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2215">The following example finds the index of the occurrence of any character of the string "is" within a substring of another string.</span></span>  
  
 [!code-cpp[string.indexofany2#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.indexofany2/CPP/ixany2.cpp#1)]
 [!code-csharp[string.indexofany2#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.indexofany2/CS/ixany2.cs#1)]
 [!code-vb[string.indexofany2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.indexofany2/VB/ixany2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2216"><paramref name="anyOf" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2216"><paramref name="anyOf" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2217"><paramref name="startIndex" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-2217"><paramref name="startIndex" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2218">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2218">-or-</span></span> 
 <span data-ttu-id="086c0-2219"><paramref name="startIndex" /> больше, чем количество символов в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2219"><paramref name="startIndex" /> is greater than the number of characters in this instance.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int * int -&gt; int" Usage="string.IndexOfAny (anyOf, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf"><span data-ttu-id="086c0-2220">Массив знаков Юникода, содержащий один или несколько искомых знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2220">A Unicode character array containing one or more characters to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2221">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2221">The search starting position.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2222">Количество позиций знаков для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2222">The number of character positions to examine.</span></span></param>
        <summary><span data-ttu-id="086c0-2223">Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2223">Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span></span> <span data-ttu-id="086c0-2224">Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.</span><span class="sxs-lookup"><span data-stu-id="086c0-2224">The search starts at a specified character position and examines a specified number of character positions.</span></span></summary>
        <returns><span data-ttu-id="086c0-2225">Начинающееся с нуля значение индекса первого вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если не найден ни один знак из <paramref name="anyOf" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2225">The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2226">Поиск начинается с `startIndex` и продолжает `startIndex`  +  `count` -1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2226">The search begins at `startIndex` and continues to `startIndex` + `count` -1.</span></span> <span data-ttu-id="086c0-2227">Символ в `startIndex`  +  `count` не включается в поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2227">The character at `startIndex` + `count` is not included in the search.</span></span>  
  
 <span data-ttu-id="086c0-2228">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2228">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2229">`startIndex` Параметра могут варьироваться от 0 до единицу меньше, чем длина экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2229">The `startIndex` parameter can range from 0 to one less than the length of the string instance.</span></span>  
  
 <span data-ttu-id="086c0-2230">Поиск `anyOf` чувствителен к регистру.</span><span class="sxs-lookup"><span data-stu-id="086c0-2230">The search for `anyOf` is case-sensitive.</span></span>  
  
 <span data-ttu-id="086c0-2231">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярное значение Юникод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2231">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar value are the same.</span></span> <span data-ttu-id="086c0-2232">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2232">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2233">В следующем примере вычисляется индекс вхождение любого символа строки «aid» в подстроке другой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2233">The following example finds the index of the occurrence of any character of the string "aid" within a substring of another string.</span></span>  
  
 [!code-cpp[string.indexofany3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.indexofany3/CPP/ixany3.cpp#1)]
 [!code-csharp[string.indexofany3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.indexofany3/CS/ixany3.cs#1)]
 [!code-vb[string.indexofany3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.indexofany3/VB/ixany3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2234"><paramref name="anyOf" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2234"><paramref name="anyOf" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2235"><paramref name="count" /> или <paramref name="startIndex" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-2235"><paramref name="count" /> or <paramref name="startIndex" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2236">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2236">-or-</span></span> 
 <span data-ttu-id="086c0-2237"><paramref name="count" /> + <paramref name="startIndex" /> больше, чем количество символов в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2237"><paramref name="count" /> + <paramref name="startIndex" /> is greater than the number of characters in this instance.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public string Insert (int startIndex, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Insert(int32 startIndex, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (startIndex As Integer, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Insert(int startIndex, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; string" Usage="string.Insert (startIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="086c0-2238">Положение отсчитываемого от нуля индекса вставки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2238">The zero-based index position of the insertion.</span></span></param>
        <param name="value"><span data-ttu-id="086c0-2239">Строка, которую требуется вставить.</span><span class="sxs-lookup"><span data-stu-id="086c0-2239">The string to insert.</span></span></param>
        <summary><span data-ttu-id="086c0-2240">Возвращает новую строку, в которой указанная строка вставляется в указанной позиции индекса в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2240">Returns a new string in which a specified string is inserted at a specified index position in this instance.</span></span></summary>
        <returns><span data-ttu-id="086c0-2241">Новая строка, эквивалентная данному экземпляру, но с тем отличием, что в положение <paramref name="value" /> помещено значение <paramref name="startIndex" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2241">A new string that is equivalent to this instance, but with <paramref name="value" /> inserted at position <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2242">Если `startIndex` равно длине данного экземпляра, `value` добавляется в конец этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2242">If `startIndex` is equal to the length of this instance, `value` is appended to the end of this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2243">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2243">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-2244">Вместо этого он возвращает новую строку, в котором `value` вставляется в текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2244">Instead, it returns a new string in which `value` is inserted into the current instance.</span></span>  
  
 <span data-ttu-id="086c0-2245">Например, возвращаемое значение `"abc".Insert(2, "XYZ")` является «abXYZc».</span><span class="sxs-lookup"><span data-stu-id="086c0-2245">For example, the return value of `"abc".Insert(2, "XYZ")` is "abXYZc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2246">Следующий пример вставляет символ пробела в четвертой позиции символа (знак с индексом 3) строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2246">The following example inserts a space character in the fourth character position (the character at index 3) of a string.</span></span>  
  
 [!code-csharp[System.String.Insert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Insert/cs/Insert1.cs#1)]
 [!code-vb[System.String.Insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Insert/vb/Insert1.vb#1)]  
  
 <span data-ttu-id="086c0-2247">Следующее консольное приложение предлагает пользователю ввести один или несколько прилагательные для описания двух животных.</span><span class="sxs-lookup"><span data-stu-id="086c0-2247">The following console application prompts the users to enter one or more adjectives to describe two animals.</span></span> <span data-ttu-id="086c0-2248">Затем он вызывает <xref:System.String.Insert%2A> метод для вставки текста, введенного пользователем в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2248">It then calls the <xref:System.String.Insert%2A> method to insert the text entered by the user into a string.</span></span>  
  
 [!code-cpp[stringinsert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringinsert/CPP/stringinsert.cpp#1)]
 [!code-csharp[stringinsert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringinsert/CS/stringinsert.cs#1)]
 [!code-vb[stringinsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringinsert/VB/stringinsert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2249"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2249"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2250"><paramref name="startIndex" /> имеет отрицательное значение или больше длины этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2250"><paramref name="startIndex" /> is negative or greater than the length of this instance.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Intern">
      <MemberSignature Language="C#" Value="public static string Intern (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Intern(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Intern(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intern (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Intern(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Intern : string -&gt; string" Usage="System.string.Intern str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="086c0-2251">Строка для поиска в пуле интернирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-2251">A string to search for in the intern pool.</span></span></param>
        <summary><span data-ttu-id="086c0-2252">Извлекает системную ссылку на указанный объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2252">Retrieves the system's reference to the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-2253">Системная ссылка на значение <paramref name="str" />, если оно уже интернировано; в противном случае возвращается новая ссылка на строку со значением <paramref name="str" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2253">The system's reference to <paramref name="str" />, if it is interned; otherwise, a new reference to a string with the value of <paramref name="str" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2254">Среда CLR экономит пространство для хранения строки, за счет создания таблицы, называемой пуле интернирования, которая содержит по одной ссылке на каждый уникальный строковый литерал, объявленный или созданный в программе.</span><span class="sxs-lookup"><span data-stu-id="086c0-2254">The common language runtime conserves string storage by maintaining a table, called the intern pool, that contains a single reference to each unique literal string declared or created programmatically in your program.</span></span> <span data-ttu-id="086c0-2255">Следовательно экземпляр строкового литерала с конкретным значением существует только один раз в системе.</span><span class="sxs-lookup"><span data-stu-id="086c0-2255">Consequently, an instance of a literal string with a particular value only exists once in the system.</span></span>  
  
 <span data-ttu-id="086c0-2256">Например если несколько переменных назначается тот же строковый литерал, среда выполнения извлекает ту же ссылку на строковый литерал в пуле интернирования и назначает его каждой переменной.</span><span class="sxs-lookup"><span data-stu-id="086c0-2256">For example, if you assign the same literal string to several variables, the runtime retrieves the same reference to the literal string from the intern pool and assigns it to each variable.</span></span>  
  
 <span data-ttu-id="086c0-2257"><xref:System.String.Intern%2A> Метод использует пуле интернирования для поиска строки, равное значению `str`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2257">The <xref:System.String.Intern%2A> method uses the intern pool to search for a string equal to the value of `str`.</span></span> <span data-ttu-id="086c0-2258">Если такая строка существует, возвращается его ссылка в пуле интернирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-2258">If such a string exists, its reference in the intern pool is returned.</span></span> <span data-ttu-id="086c0-2259">Если строка не существует, ссылку на `str` добавляется в пуле интернирования, а затем эта ссылка возвращается.</span><span class="sxs-lookup"><span data-stu-id="086c0-2259">If the string does not exist, a reference to `str` is added to the intern pool, then that reference is returned.</span></span>  
  
 <span data-ttu-id="086c0-2260">В следующем примере строка s1, который имеет значение «MyTest», уже интернировано, так как она является литералом в программе.</span><span class="sxs-lookup"><span data-stu-id="086c0-2260">In the following example, the string s1, which has a value of "MyTest", is already interned because it is a literal in the program.</span></span> <span data-ttu-id="086c0-2261"><xref:System.Text.StringBuilder?displayProperty=nameWithType> Класс создает новый строковый объект, имеющий то же значение, что s1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2261">The <xref:System.Text.StringBuilder?displayProperty=nameWithType> class generates a new string object that has the same value as s1.</span></span> <span data-ttu-id="086c0-2262">Ссылка на эту строку присваивается s2.</span><span class="sxs-lookup"><span data-stu-id="086c0-2262">A reference to that string is assigned to s2.</span></span> <span data-ttu-id="086c0-2263"><xref:System.String.Intern%2A> Метод выполняет поиск строки, которая содержит то же значение, что s2.</span><span class="sxs-lookup"><span data-stu-id="086c0-2263">The <xref:System.String.Intern%2A> method searches for a string that has the same value as s2.</span></span> <span data-ttu-id="086c0-2264">Поскольку такая строка существует, метод возвращает ту же ссылку, присвоенный s1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2264">Because such a string exists, the method returns the same reference that is assigned to s1.</span></span> <span data-ttu-id="086c0-2265">Такая ссылка затем присваивается s3.</span><span class="sxs-lookup"><span data-stu-id="086c0-2265">That reference is then assigned to s3.</span></span> <span data-ttu-id="086c0-2266">Ссылки s1 и s2 не считаются равными, поскольку они ссылаются на разные объекты; Ссылки s1 и s3 равны, поскольку они ссылаются на ту же строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2266">References s1 and s2 compare unequal because they refer to different objects; references s1 and s3 compare equal because they refer to the same string.</span></span>  
  
 [!code-csharp[System.String.Intern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Intern/cs/Intern1.cs#1)]
 [!code-vb[System.String.Intern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Intern/vb/Intern1.vb#1)]  
  
 <span data-ttu-id="086c0-2267">Этот метод, чтобы сравнить <xref:System.String.IsInterned%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2267">Compare this method to the <xref:System.String.IsInterned%2A> method.</span></span>  
  
## <a name="version-considerations"></a><span data-ttu-id="086c0-2268">Описание версии</span><span class="sxs-lookup"><span data-stu-id="086c0-2268">Version Considerations</span></span>  
 <span data-ttu-id="086c0-2269">В [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)], <xref:System.String.Intern%2A> метод возвращается к его поведение в .NET Framework 1.0 и 1.1 по отношению к интернирования пустая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-2269">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)], the <xref:System.String.Intern%2A> method reverts to its behavior in the .NET Framework 1.0 and 1.1 with regard to interning the empty string.</span></span> <span data-ttu-id="086c0-2270">В следующем примере переменная `str1` назначается ссылку <xref:System.String.Empty>и переменная `str2` назначается ссылка <xref:System.String.Empty> , возвращается путем вызова <xref:System.String.Intern%2A> метод после преобразования <xref:System.Text.StringBuilder>объект, значение которого равно <xref:System.String.Empty> в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2270">In the following example, the variable `str1` is assigned a reference to <xref:System.String.Empty>, and the variable `str2` is assigned the reference to <xref:System.String.Empty> that is returned by calling the <xref:System.String.Intern%2A> method after converting a <xref:System.Text.StringBuilder> object whose value is <xref:System.String.Empty> to a string.</span></span> <span data-ttu-id="086c0-2271">Затем ссылки, содержащиеся в `str1` и `str2` сравниваются на предмет равенства.</span><span class="sxs-lookup"><span data-stu-id="086c0-2271">Then the references contained in `str1` and `str2` are compared for equality.</span></span>  
  
 [!code-csharp[System.String.Intern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Intern/cs/Intern2.cs#2)]
 [!code-vb[System.String.Intern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Intern/vb/Intern2.vb#2)]  
  
 <span data-ttu-id="086c0-2272">В [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)], [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], и [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)], `str1` и `str2` равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-2272">In the [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)], [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], and [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)], `str1` and `str2` are equal.</span></span> <span data-ttu-id="086c0-2273">В [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] и [!INCLUDE[net_v30_long](~/includes/net-v30-long-md.md)], `str1` и `str2` не равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-2273">In the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] and [!INCLUDE[net_v30_long](~/includes/net-v30-long-md.md)], `str1` and `str2` are not equal.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="086c0-2274">Особенности производительности</span><span class="sxs-lookup"><span data-stu-id="086c0-2274">Performance Considerations</span></span>  
 <span data-ttu-id="086c0-2275">Если вы пытаетесь сократить общий объем памяти выделяет приложения, имейте в виду, что интернирование строки имеет два нежелательные побочные эффекты.</span><span class="sxs-lookup"><span data-stu-id="086c0-2275">If you are trying to reduce the total amount of memory your application allocates, keep in mind that interning a string has two unwanted side effects.</span></span> <span data-ttu-id="086c0-2276">Во-первых, память, выделенная для интернировано <xref:System.String> объекты скорее всего, не должна освобождаться до завершения общеязыковой среды выполнения (CLR).</span><span class="sxs-lookup"><span data-stu-id="086c0-2276">First, the memory allocated for interned <xref:System.String> objects is not likely to be released until the common language runtime (CLR) terminates.</span></span> <span data-ttu-id="086c0-2277">Причина в том, что CLR ссылка интернировано <xref:System.String> объект могут сохраняться после вашего приложения или даже домена приложения, завершается.</span><span class="sxs-lookup"><span data-stu-id="086c0-2277">The reason is that the CLR's reference to the interned <xref:System.String> object can persist after your application, or even your application domain, terminates.</span></span> <span data-ttu-id="086c0-2278">Во-вторых для интернирования строки, необходимо сначала создать строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2278">Second, to intern a string, you must first create the string.</span></span> <span data-ttu-id="086c0-2279">Память, занятая <xref:System.String> объект по-прежнему назначается, несмотря на то, что память будет в конечном итоге удален сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="086c0-2279">The memory used by the <xref:System.String> object must still be allocated, even though the memory will eventually be garbage collected.</span></span>  
  
 <span data-ttu-id="086c0-2280">В .NET Framework версии 2.0 вводит <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning?displayProperty=nameWithType> член перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-2280">The .NET Framework version 2.0 introduces the <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning?displayProperty=nameWithType> enumeration member.</span></span> <span data-ttu-id="086c0-2281"><xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning> Член помечает сборку как не требующую интернирования строковых литералов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2281">The <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning> member marks an assembly as not requiring string-literal interning.</span></span> <span data-ttu-id="086c0-2282">Можно применить <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning> в сборку с помощью <xref:System.Runtime.CompilerServices.CompilationRelaxationsAttribute> атрибута.</span><span class="sxs-lookup"><span data-stu-id="086c0-2282">You can apply <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning> to an assembly using the <xref:System.Runtime.CompilerServices.CompilationRelaxationsAttribute> attribute.</span></span> <span data-ttu-id="086c0-2283">Кроме того, при использовании [Ngen.exe (генератор образов в машинном)](~/docs/framework/tools/ngen-exe-native-image-generator.md) для компиляции сборки до времени выполнения, строки не интернирование другим модулям.</span><span class="sxs-lookup"><span data-stu-id="086c0-2283">Also, when you use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to compile an assembly in advance of run time, strings are not interned across modules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2284">В следующем примере используется три строки с равными значениями, чтобы определить, является ли вновь созданная и строку интернировано равны.</span><span class="sxs-lookup"><span data-stu-id="086c0-2284">The following example uses three strings that are equal in value to determine whether a newly created string and an interned string are equal.</span></span>  
  
 [!code-cpp[string.intern#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.intern/CPP/string_intern.cpp#1)]
 [!code-csharp[string.intern#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.intern/CS/string_intern.cs#1)]
 [!code-vb[string.intern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.intern/VB/string_intern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2285"><paramref name="str" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2285"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.String.IsInterned(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsInterned">
      <MemberSignature Language="C#" Value="public static string IsInterned (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IsInterned(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsInterned(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInterned (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IsInterned(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member IsInterned : string -&gt; string" Usage="System.string.IsInterned str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="086c0-2286">Строка для поиска в пуле интернирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-2286">The string to search for in the intern pool.</span></span></param>
        <summary><span data-ttu-id="086c0-2287">Извлекает ссылку на указанный объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2287">Retrieves a reference to a specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-2288">Ссылка на значение <paramref name="str" />, если оно находится в пуле интернирования среды CLR; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2288">A reference to <paramref name="str" /> if it is in the common language runtime intern pool; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2289">Среда CLR автоматически поддерживает таблицу, в пуле интернирования, который содержит один экземпляр каждого уникального строкового литерала константе, объявленной в программы, а также любой уникальный экземпляр называется <xref:System.String> программным способом добавить путем вызова <xref:System.String.Intern%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2289">The common language runtime automatically maintains a table, called the intern pool, which contains a single instance of each unique literal string constant declared in a program, as well as any unique instance of <xref:System.String> you add programmatically by calling the <xref:System.String.Intern%2A> method.</span></span>  
  
 <span data-ttu-id="086c0-2290">В пуле интернирования экономит пространство для хранения строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2290">The intern pool conserves string storage.</span></span> <span data-ttu-id="086c0-2291">Если вы назначаете символьная константа несколько переменных, каждой переменной присваивается ссылаются на той же константы в пуле интернирования вместо ссылки на несколько различных экземпляров <xref:System.String> , имеют одинаковые значения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2291">If you assign a literal string constant to several variables, each variable is set to reference the same constant in the intern pool instead of referencing several different instances of <xref:System.String> that have identical values.</span></span>  
  
 <span data-ttu-id="086c0-2292">Этот метод выполняет поиск `str` в пуле интернирования.</span><span class="sxs-lookup"><span data-stu-id="086c0-2292">This method looks up `str` in the intern pool.</span></span> <span data-ttu-id="086c0-2293">Если `str` уже интернировано, ссылку на этот экземпляр, возвращаемый; в противном случае — значение `null` возвращается.</span><span class="sxs-lookup"><span data-stu-id="086c0-2293">If `str` has already been interned, a reference to that instance is returned; otherwise, `null` is returned.</span></span>  
  
 <span data-ttu-id="086c0-2294">Этот метод, чтобы сравнить <xref:System.String.Intern%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2294">Compare this method to the <xref:System.String.Intern%2A> method.</span></span>  
  
 <span data-ttu-id="086c0-2295">Этот метод не возвращает логическое значение.</span><span class="sxs-lookup"><span data-stu-id="086c0-2295">This method does not return a Boolean value.</span></span> <span data-ttu-id="086c0-2296">Если вызвать метод, так как требуется логическое значение, указывающее, является ли интернировано определенной строки, можно использовать следующий код.</span><span class="sxs-lookup"><span data-stu-id="086c0-2296">If you call the method because you want a Boolean value that indicates whether a particular string is interned, you can use code such as the following.</span></span>  
  
 [!code-csharp[System.String.IsInterned#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isinterned/cs/isinternedex1.cs#1)]
 [!code-vb[System.String.IsInterned#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isinterned/vb/isinternedex1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2297">Начиная с .NET Framework версии 2.0, можно переопределить использование пуле интернирования при использовании [Ngen.exe (генератор образов в машинном)](~/docs/framework/tools/ngen-exe-native-image-generator.md) для установки сборки в кэш образов в машинном коде на локальном компьютере.</span><span class="sxs-lookup"><span data-stu-id="086c0-2297">Starting with the .NET Framework version 2.0, you can override the use of the intern pool when you use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to install an assembly to the native image cache on a local computer.</span></span> <span data-ttu-id="086c0-2298">Дополнительные сведения см. в разделе вопросы производительности в разделе "Примечания" <xref:System.String.Intern%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="086c0-2298">For more information, see Performance Considerations in the Remarks section for the <xref:System.String.Intern%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2299">В следующем примере показано, что компилятор автоматически интернируются строковых литералов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2299">The following example demonstrates that literal strings are interned automatically by the compiler.</span></span>  
  
 [!code-cpp[string.isinterned#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.isinterned/CPP/isin.cpp#1)]
 [!code-csharp[string.isinterned#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.isinterned/CS/isin.cs#1)]
 [!code-vb[string.isinterned#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.isinterned/VB/isin.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2300"><paramref name="str" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2300"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.String.Intern(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNormalized">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2301">Указывает, находится ли данная строка в определенной форме нормализации Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2301">Indicates whether this string is in a particular Unicode normalization form.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public bool IsNormalized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNormalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsNormalized" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNormalized () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNormalized();" />
      <MemberSignature Language="F#" Value="member this.IsNormalized : unit -&gt; bool" Usage="string.IsNormalized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-2302">Указывает, находится ли данная строка в форме нормализации Юникода C.</span><span class="sxs-lookup"><span data-stu-id="086c0-2302">Indicates whether this string is in Unicode normalization form C.</span></span></summary>
        <returns><span data-ttu-id="086c0-2303"><see langword="true" />, если данная строка находится в форме нормализации Юникода C; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2303"><see langword="true" /> if this string is in normalization form C; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2304">Некоторые символы Юникода, имеют несколько эквивалентных двоичных представлений, состоящий из объединения наборов и/или составные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2304">Some Unicode characters have multiple equivalent binary representations consisting of sets of combining and/or composite Unicode characters.</span></span> <span data-ttu-id="086c0-2305">Наличие нескольких представлений одного символа затрудняет поиск, сортировка, сопоставления и других операций.</span><span class="sxs-lookup"><span data-stu-id="086c0-2305">The existence of multiple representations for a single character complicates searching, sorting, matching, and other operations.</span></span>  
  
 <span data-ttu-id="086c0-2306">В стандарте Юникод определяет процесс, называемый нормализация, которая возвращает одно двоичное представление, при наличии нескольких эквивалентных представлений символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2306">The Unicode standard defines a process called normalization that returns one binary representation when given any of the equivalent binary representations of a character.</span></span> <span data-ttu-id="086c0-2307">Нормализация может выполняться с использованием нескольких алгоритмов, вызывается формы нормализации, которые следуют различным правилам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2307">Normalization can be performed with several algorithms, called normalization forms, that obey different rules.</span></span> <span data-ttu-id="086c0-2308">В настоящее время платформа .NET поддерживает формы нормализации C, D, KC и KD.</span><span class="sxs-lookup"><span data-stu-id="086c0-2308">.NET currently supports normalization forms C, D, KC, and KD.</span></span>  
  
 <span data-ttu-id="086c0-2309">Описание поддерживаемых формы нормализации Юникода, см. в разделе <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2309">For a description of supported Unicode normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2310">В следующем примере определяется, является ли строка успешно нормализуется в различные формы нормализации.</span><span class="sxs-lookup"><span data-stu-id="086c0-2310">The following example determines whether a string is successfully normalized to various normalization forms.</span></span>  
  
 [!code-cpp[string.normalize#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.normalize/CPP/norm.cpp#1)]
 [!code-csharp[string.normalize#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.normalize/CS/norm.cs#1)]
 [!code-vb[string.normalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.normalize/VB/norm.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2311">Текущий экземпляр содержит недопустимые символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2311">The current instance contains invalid Unicode characters.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2312"><see cref="Overload:System.String.IsNormalized" /> Возвращает метод <see langword="false" /> как только он встречает первый символ, не было нормализовано в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2312">The <see cref="Overload:System.String.IsNormalized" /> method returns <see langword="false" /> as soon as it encounters the first non-normalized character in a string.</span></span> <span data-ttu-id="086c0-2313">Таким образом, если строка содержит символы, не было нормализовано следуют недопустимые символы Юникода, <see cref="Overload:System.String.Normalize" /> метод вызывает исключение <see cref="T:System.ArgumentException" /> несмотря на то что <see cref="Overload:System.String.IsNormalized" /> возвращает <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2313">Therefore, if a string contains non-normalized characters followed by invalid Unicode characters, the <see cref="Overload:System.String.Normalize" /> method will throw an <see cref="T:System.ArgumentException" /> although <see cref="Overload:System.String.IsNormalized" /> returns <see langword="false" />.</span></span></para></block>
        <altmember cref="M:System.String.Normalize" />
      </Docs>
    </Member>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public bool IsNormalized (System.Text.NormalizationForm normalizationForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNormalized(valuetype System.Text.NormalizationForm normalizationForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsNormalized(System.Text.NormalizationForm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNormalized(System::Text::NormalizationForm normalizationForm);" />
      <MemberSignature Language="F#" Value="member this.IsNormalized : System.Text.NormalizationForm -&gt; bool" Usage="string.IsNormalized normalizationForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="normalizationForm"><span data-ttu-id="086c0-2314">Форма нормализации Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2314">A Unicode normalization form.</span></span></param>
        <summary><span data-ttu-id="086c0-2315">Указывает, находится ли данная строка в заданной форме нормализации Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2315">Indicates whether this string is in the specified Unicode normalization form.</span></span></summary>
        <returns><span data-ttu-id="086c0-2316"><see langword="true" />, если строка находится в форме нормализации, указанной в параметре <paramref name="normalizationForm" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2316"><see langword="true" /> if this string is in the normalization form specified by the <paramref name="normalizationForm" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2317">Некоторые символы Юникода, имеют несколько эквивалентных двоичных представлений, состоящий из объединения наборов и/или составные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2317">Some Unicode characters have multiple equivalent binary representations consisting of sets of combining and/or composite Unicode characters.</span></span> <span data-ttu-id="086c0-2318">Наличие нескольких представлений одного символа затрудняет поиск, сортировка, сопоставления и других операций.</span><span class="sxs-lookup"><span data-stu-id="086c0-2318">The existence of multiple representations for a single character complicates searching, sorting, matching, and other operations.</span></span>  
  
 <span data-ttu-id="086c0-2319">В стандарте Юникод определяет процесс, называемый нормализация, которая возвращает одно двоичное представление, при наличии нескольких эквивалентных представлений символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2319">The Unicode standard defines a process called normalization that returns one binary representation when given any of the equivalent binary representations of a character.</span></span> <span data-ttu-id="086c0-2320">Нормализация может выполняться с использованием нескольких алгоритмов, вызывается формы нормализации, которые следуют различным правилам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2320">Normalization can be performed with several algorithms, called normalization forms, that obey different rules.</span></span> <span data-ttu-id="086c0-2321">В настоящее время платформа .NET поддерживает формы нормализации C, D, KC и KD.</span><span class="sxs-lookup"><span data-stu-id="086c0-2321">.NET currently supports normalization forms C, D, KC, and KD.</span></span>  
  
 <span data-ttu-id="086c0-2322">Описание поддерживаемых формы нормализации Юникода, см. в разделе <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2322">For a description of supported Unicode normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2323">В следующем примере демонстрируется <xref:System.String.IsNormalized%2A> и <xref:System.String.Normalize%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="086c0-2323">The following example demonstrates the <xref:System.String.IsNormalized%2A> and <xref:System.String.Normalize%2A> methods.</span></span>  
  
 [!code-cpp[string.normalize#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.normalize/CPP/norm.cpp#1)]
 [!code-csharp[string.normalize#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.normalize/CS/norm.cs#1)]
 [!code-vb[string.normalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.normalize/VB/norm.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2324">Текущий экземпляр содержит недопустимые символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2324">The current instance contains invalid Unicode characters.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2325"><see cref="Overload:System.String.IsNormalized" /> Возвращает метод <see langword="false" /> как только он встречает первый символ, не было нормализовано в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2325">The <see cref="Overload:System.String.IsNormalized" /> method returns <see langword="false" /> as soon as it encounters the first non-normalized character in a string.</span></span> <span data-ttu-id="086c0-2326">Таким образом, если строка содержит символы, не было нормализовано следуют недопустимые символы Юникода, <see cref="Overload:System.String.Normalize" /> метод вызывает исключение <see cref="T:System.ArgumentException" /> несмотря на то что <see cref="Overload:System.String.IsNormalized" /> возвращает <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2326">Therefore, if a string contains non-normalized characters followed by invalid Unicode characters, the <see cref="Overload:System.String.Normalize" /> method will throw an <see cref="T:System.ArgumentException" /> although <see cref="Overload:System.String.IsNormalized" /> returns <see langword="false" />.</span></span></para></block>
        <altmember cref="M:System.String.Normalize" />
      </Docs>
    </Member>
    <Member MemberName="IsNullOrEmpty">
      <MemberSignature Language="C#" Value="public static bool IsNullOrEmpty (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNullOrEmpty(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsNullOrEmpty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNullOrEmpty (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNullOrEmpty(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsNullOrEmpty : string -&gt; bool" Usage="System.string.IsNullOrEmpty value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2327">Строка для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2327">The string to test.</span></span></param>
        <summary><span data-ttu-id="086c0-2328">Указывает, действительно ли указанная строка является строкой <see langword="null" /> или пустой строкой ("").</span><span class="sxs-lookup"><span data-stu-id="086c0-2328">Indicates whether the specified string is <see langword="null" /> or an empty string ("").</span></span></summary>
        <returns><span data-ttu-id="086c0-2329">Значение <see langword="true" />, если параметр <paramref name="value" /> равен <see langword="null" /> или пустой строке (""); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2329"><see langword="true" /> if the <paramref name="value" /> parameter is <see langword="null" /> or an empty string (""); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2330"><xref:System.String.IsNullOrEmpty%2A> — Это удобный метод, который позволяет одновременно тестировать ли <xref:System.String> — `null` или имеет значение <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2330"><xref:System.String.IsNullOrEmpty%2A> is a convenience method that enables you to simultaneously test whether a <xref:System.String> is `null` or its value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-2331">Это аналогично следующему коду:</span><span class="sxs-lookup"><span data-stu-id="086c0-2331">It is equivalent to the following code:</span></span>  
  
 [!code-cpp[System.String.IsNullOrEmpty#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.isnullorempty/cpp/isnullorempty1.cpp#1)]
 [!code-csharp[System.String.IsNullOrEmpty#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorempty/cs/isnullorempty1.cs#1)]
 [!code-vb[System.String.IsNullOrEmpty#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorempty/vb/isnullorempty1.vb#1)]  
  
 <span data-ttu-id="086c0-2332">Можно использовать <xref:System.String.IsNullOrWhiteSpace%2A> способ проверить, является ли строка `null`, его значение равно <xref:System.String.Empty?displayProperty=nameWithType>, или он содержит только пробелы.</span><span class="sxs-lookup"><span data-stu-id="086c0-2332">You can use the <xref:System.String.IsNullOrWhiteSpace%2A> method to test whether a string is `null`, its value is <xref:System.String.Empty?displayProperty=nameWithType>,  or it consists only of white-space characters.</span></span>  
  
## <a name="what-is-a-null-string"></a><span data-ttu-id="086c0-2333">Что такое строку null?</span><span class="sxs-lookup"><span data-stu-id="086c0-2333">What is a null string?</span></span>

<span data-ttu-id="086c0-2334">Строка, такая `null` если ей не было назначено значение (в C++ и Visual Basic) или если ей явно было назначено значение `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2334">A string is `null` if it has not been assigned a value (in C++ and Visual Basic) or if it has explicitly been assigned a value of `null`.</span></span> <span data-ttu-id="086c0-2335">Несмотря на то что [составное форматирование](~/docs/standard/base-types/composite-formatting.md) функции можно правильной обработки пустой строки, как показано в следующем примере, попытка вызовите один, если его члены создает <xref:System.NullReferenceException>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2335">Although the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature can gracefully handle a null string, as the following example shows, attempting to call one if its members throws a <xref:System.NullReferenceException>.</span></span>  
  
[!code-cpp[System.String.IsNullOrEmpty#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.isnullorempty/cpp/NullString1.cpp#2)]
[!code-csharp[System.String.IsNullOrEmpty#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorempty/cs/NullString1.cs#2)]
[!code-vb[System.String.IsNullOrEmpty#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorempty/vb/NullString1.vb#2)]  
  
## <a name="what-is-an-empty-string"></a><span data-ttu-id="086c0-2336">Что представляет собой пустую строку?</span><span class="sxs-lookup"><span data-stu-id="086c0-2336">What is an empty string?</span></span>  

<span data-ttu-id="086c0-2337">Строка пуста, если его явным образом присваивается пустая строка ("») или <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2337">A string is empty if it  is explicitly assigned an empty string ("") or <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-2338">Пустая строка имеет <xref:System.String.Length%2A> 0.</span><span class="sxs-lookup"><span data-stu-id="086c0-2338">An empty string has a <xref:System.String.Length%2A> of 0.</span></span>  <span data-ttu-id="086c0-2339">В следующем примере создается пустая строка и отображает его значение и его длины.</span><span class="sxs-lookup"><span data-stu-id="086c0-2339">The following example creates an empty string and displays its value and its length.</span></span>  
  
[!code-cpp[System.String.IsNullOrEmpty#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.isnullorempty/cpp/NullString1.cpp#3)]
[!code-csharp[System.String.IsNullOrEmpty#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorempty/cs/NullString1.cs#3)]
[!code-vb[System.String.IsNullOrEmpty#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorempty/vb/NullString1.vb#3)]  
  
## Examples  
 <span data-ttu-id="086c0-2340">В следующем примере рассматриваются три строки и определяет, каждая строка имеет значение, является пустой строкой или является `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2340">The following example examines three strings and determines whether each string has a value, is an empty string, or is `null`.</span></span>  
  
 [!code-cpp[String.IsNullOrEmpty#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.isNullOrEmpty/CPP/inoe.cpp#1)]
 [!code-csharp[String.IsNullOrEmpty#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.isNullOrEmpty/CS/inoe.cs#1)]
 [!code-vb[String.IsNullOrEmpty#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.isNullOrEmpty/VB/inoe.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.IsNullOrWhiteSpace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsNullOrWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsNullOrWhiteSpace (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNullOrWhiteSpace(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsNullOrWhiteSpace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNullOrWhiteSpace (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNullOrWhiteSpace(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsNullOrWhiteSpace : string -&gt; bool" Usage="System.string.IsNullOrWhiteSpace value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2341">Строка для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2341">The string to test.</span></span></param>
        <summary><span data-ttu-id="086c0-2342">Указывает, имеет ли указанная строка значение <see langword="null" />, является ли она пустой строкой или строкой, состоящей только из символов-разделителей.</span><span class="sxs-lookup"><span data-stu-id="086c0-2342">Indicates whether a specified string is <see langword="null" />, empty, or consists only of white-space characters.</span></span></summary>
        <returns><span data-ttu-id="086c0-2343">Значение <see langword="true" />, если параметр <paramref name="value" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />, либо если параметр <paramref name="value" /> содержит только символы-разделители.</span><span class="sxs-lookup"><span data-stu-id="086c0-2343"><see langword="true" /> if the <paramref name="value" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, or if <paramref name="value" /> consists exclusively of white-space characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2344"><xref:System.String.IsNullOrWhiteSpace%2A> — Это удобный метод, который похож на следующий код, за исключением того, что она предлагает более высокую производительность:</span><span class="sxs-lookup"><span data-stu-id="086c0-2344"><xref:System.String.IsNullOrWhiteSpace%2A> is a convenience method that is similar to the following  code, except that it offers superior performance:</span></span>  
  
 [!code-csharp[System.String.IsNullOrWhitespace#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorwhitespace/cs/isnullorwhitespace.cs#2)]
 [!code-vb[System.String.IsNullOrWhitespace#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorwhitespace/vb/isnullorwhitespace.vb#2)]  
  
 <span data-ttu-id="086c0-2345">Пробельные символы определены в стандарте Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2345">White-space characters are defined by the Unicode standard.</span></span> <span data-ttu-id="086c0-2346"><xref:System.String.IsNullOrWhiteSpace%2A> Метод интерпретирует любой символ, который возвращает значение `true` при его передаче <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> метод как символ пробела.</span><span class="sxs-lookup"><span data-stu-id="086c0-2346">The <xref:System.String.IsNullOrWhiteSpace%2A> method interprets any character that returns a value of `true` when it is passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method as a white-space character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2347">В следующем примере создается массив строк и затем передает каждый элемент массива в <xref:System.String.IsNullOrWhiteSpace%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2347">The following example creates a string array, and then passes each element of the array to the <xref:System.String.IsNullOrWhiteSpace%2A> method.</span></span>  
  
 [!code-csharp[System.String.IsNullOrWhiteSpace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorwhitespace/cs/isnullorwhitespace1.cs#1)]
 [!code-vb[System.String.IsNullOrWhiteSpace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorwhitespace/vb/isnullorwhitespace1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.IsNullOrEmpty(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2348">Сцепляет элементы указанного массива или элементы коллекции, помещая между ними заданный разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-2348">Concatenates the elements of a specified array or the members of a collection, using the specified separator between each element or member.</span></span></summary>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (char separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(char separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.Char,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As Char, ParamArray values As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(char separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : char * obj[] -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (char separator, params string[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(char separator, string[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.Char,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As Char, ParamArray value As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(char separator, ... cli::array &lt;System::String ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Join : char * string[] -&gt; string" Usage="System.string.Join (separator, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, System.Collections.Generic.IEnumerable&lt;string&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, class System.Collections.Generic.IEnumerable`1&lt;string&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, values As IEnumerable(Of String)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : string * seq&lt;string&gt; -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-2349">Строка для использования в качестве разделителя.<paramref name="separator" /></span><span class="sxs-lookup"><span data-stu-id="086c0-2349">The string to use as a separator.<paramref name="separator" /></span></span> <span data-ttu-id="086c0-2350">включается в возвращаемую строку, только если в <paramref name="values" /> более одного элемента.</span><span class="sxs-lookup"><span data-stu-id="086c0-2350">is included in the returned string only if <paramref name="values" /> has more than one element.</span></span></param>
        <param name="values"><span data-ttu-id="086c0-2351">Коллекция, содержащая сцепляемые строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2351">A collection that contains the strings to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-2352">Сцепляет элементы созданной коллекции <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.String" />, помещая между ними заданный разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-2352">Concatenates the members of a constructed <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of type <see cref="T:System.String" />, using the specified separator between each member.</span></span></summary>
        <returns><span data-ttu-id="086c0-2353">Строка, состоящая из элементов <paramref name="values" />, разделяемых строками <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2353">A string that consists of the members of <paramref name="values" /> delimited by the <paramref name="separator" /> string.</span></span> <span data-ttu-id="086c0-2354">Если <paramref name="values" /> не содержит членов, метод возвращает <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2354">If <paramref name="values" /> has no members, the method returns <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2355">Если `separator` — `null`, пустая строка (<xref:System.String.Empty?displayProperty=nameWithType>) вместо него используется.</span><span class="sxs-lookup"><span data-stu-id="086c0-2355">If `separator` is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="086c0-2356">Если любой член `values` является `null`, вместо него используется пустая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-2356">If any member of `values` is `null`, an empty string is used instead.</span></span>  
  
 <span data-ttu-id="086c0-2357"><xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> — Это удобный метод, который позволяет сцеплять каждого элемента в `IEnumerable(Of String)` коллекции без предварительного преобразования элементов в массив строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-2357"><xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> is a convenience method that lets you concatenate each element in an `IEnumerable(Of String)` collection without first converting the elements to a string array.</span></span> <span data-ttu-id="086c0-2358">Это особенно полезно, с помощью выражения запроса Language-Integrated Query (LINQ).</span><span class="sxs-lookup"><span data-stu-id="086c0-2358">It is particularly useful with Language-Integrated Query (LINQ) query expressions.</span></span> <span data-ttu-id="086c0-2359">В следующем примере передается `List(Of String)` , содержащий прописные или строчные буквы алфавита в лямбда-выражение, который выбирает букв, которые находятся равным или больше, чем буквы (который, в примере «M»).</span><span class="sxs-lookup"><span data-stu-id="086c0-2359">The following example passes a `List(Of String)` object that contains either the uppercase or lowercase letters of the alphabet to a lambda expression that selects letters that are equal to or greater than a particular letter (which, in the example, is "M").</span></span> <span data-ttu-id="086c0-2360">`IEnumerable(Of String)` Коллекцию, возвращаемую <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> методу передается <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> метод для отображения результата в виде одной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2360">The `IEnumerable(Of String)` collection returned by the <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> method is passed to the <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method to display the result as a single string.</span></span>  
  
 [!code-csharp[System.String.Join#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join4.cs#4)]
 [!code-vb[System.String.Join#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join4.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2361">Следующий пример использует алгоритм решета Эратосфена для вычисления простых чисел, которые меньше или равно 100.</span><span class="sxs-lookup"><span data-stu-id="086c0-2361">The following example uses the Sieve of Eratosthenes algorithm to calculate the prime numbers that are less than or equal to 100.</span></span> <span data-ttu-id="086c0-2362">Результат для <xref:System.Collections.Generic.List%601> объект типа <xref:System.String>, который затем передается <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2362">It assigns the result to a <xref:System.Collections.Generic.List%601> object of type <xref:System.String>, which it then passes to the <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method.</span></span>  
  
 [!code-csharp[System.String.Join#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join3.cs#3)]
 [!code-vb[System.String.Join#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2363"><paramref name="values" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2363"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, ParamArray values As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : string * obj[] -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-2364">Строка для использования в качестве разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-2364">The string to use as a separator.</span></span> <span data-ttu-id="086c0-2365"><paramref name="separator" /> включается в возвращаемую строку, только если в <paramref name="values" /> более одного элемента.</span><span class="sxs-lookup"><span data-stu-id="086c0-2365"><paramref name="separator" /> is included in the returned string only if <paramref name="values" /> has more than one element.</span></span></param>
        <param name="values"><span data-ttu-id="086c0-2366">Массив, содержащий элементы, которые требуется сцепить.</span><span class="sxs-lookup"><span data-stu-id="086c0-2366">An array that contains the elements to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-2367">Сцепляет элементы массива объектов, помещая между ними заданный разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-2367">Concatenates the elements of an object array, using the specified separator between each element.</span></span></summary>
        <returns><span data-ttu-id="086c0-2368">Строка, состоящая из элементов <paramref name="values" />, разделяемых строками <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2368">A string that consists of the elements of <paramref name="values" /> delimited by the <paramref name="separator" /> string.</span></span> <span data-ttu-id="086c0-2369">Если <paramref name="values" /> равен пустому массиву, метод возвращает значение <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2369">If <paramref name="values" /> is an empty array, the method returns <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2370">Если `separator` — `null` или, если какой-либо элемент `values` отличный первый элемент — `null`, пустая строка (<xref:System.String.Empty?displayProperty=nameWithType>) вместо него используется.</span><span class="sxs-lookup"><span data-stu-id="086c0-2370">If `separator` is `null` or if any element of `values` other than the first element is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="086c0-2371">См. в примечаниях раздела вызывающих объектов, если первый элемент `values` является `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2371">See the Notes for Callers section if the first element of `values` is `null`.</span></span>  
  
 <span data-ttu-id="086c0-2372"><xref:System.String.Join%28System.String%2CSystem.Object%5B%5D%29> — Это удобный метод, который позволяет сцеплять каждого элемента в массиве объектов без явного преобразования строки его элементов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2372"><xref:System.String.Join%28System.String%2CSystem.Object%5B%5D%29> is a convenience method that lets you concatenate each element in an object array without explicitly converting its elements to strings.</span></span> <span data-ttu-id="086c0-2373">Строковое представление каждого объекта в массиве является производным путем вызова этого объекта `ToString` метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2373">The string representation of each object in the array is derived by calling that object's `ToString` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2374">Следующий пример использует алгоритм решета Эратосфена для вычисления простых чисел, которые меньше или равно 100.</span><span class="sxs-lookup"><span data-stu-id="086c0-2374">The following example uses the Sieve of Eratosthenes algorithm to calculate the prime numbers that are less than or equal to 100.</span></span> <span data-ttu-id="086c0-2375">Присваивает результат целочисленный массив, который затем передается <xref:System.String.Join%28System.String%2CSystem.Object%5B%5D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2375">It assigns the result to a integer array, which it then passes to the <xref:System.String.Join%28System.String%2CSystem.Object%5B%5D%29> method.</span></span>  
  
 [!code-csharp[System.String.Join#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join1.cs#1)]
 [!code-vb[System.String.Join#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2376"><paramref name="values" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2376"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2377">Если первый элемент <paramref name="values" /> — <see langword="null" />, <see cref="M:System.String.Join(System.String,System.Object[])" /> метод не осуществляйте объединение элементов в <paramref name="values" /> , но вместо этого возвращает <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2377">If the first element of <paramref name="values" /> is <see langword="null" />, the <see cref="M:System.String.Join(System.String,System.Object[])" /> method does not concatenate the elements in <paramref name="values" /> but instead returns <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="086c0-2378">Доступны несколько решений этой проблемы.</span><span class="sxs-lookup"><span data-stu-id="086c0-2378">A number of workarounds for this issue are available.</span></span> <span data-ttu-id="086c0-2379">Проще всего, — присвоить значение <see cref="F:System.String.Empty" /> на первый элемент массива, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="086c0-2379">The easiest is to assign a value of <see cref="F:System.String.Empty" /> to the first element of the array, as the following example shows.</span></span>  
  
<span data-ttu-id="086c0-2380">[!code-csharp[System.String.Join#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/joinfix1.cs#6)] [!code-vb[System.String.Join#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/joinfix1.vb#6)]</span><span class="sxs-lookup"><span data-stu-id="086c0-2380">[!code-csharp[System.String.Join#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/joinfix1.cs#6)] [!code-vb[System.String.Join#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/joinfix1.vb#6)]</span></span></para></block>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, params string[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, string[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, ParamArray value As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, ... cli::array &lt;System::String ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Join : string * string[] -&gt; string" Usage="System.string.Join (separator, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="value" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-2381">Строка для использования в качестве разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-2381">The string to use as a separator.</span></span> <span data-ttu-id="086c0-2382"><paramref name="separator" /> включается в возвращаемую строку, только если в <paramref name="value" /> более одного элемента.</span><span class="sxs-lookup"><span data-stu-id="086c0-2382"><paramref name="separator" /> is included in the returned string only if <paramref name="value" /> has more than one element.</span></span></param>
        <param name="value"><span data-ttu-id="086c0-2383">Массив, содержащий элементы, которые требуется сцепить.</span><span class="sxs-lookup"><span data-stu-id="086c0-2383">An array that contains the elements to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-2384">Сцепляет все элементы массива строк, помещая между ними заданный разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-2384">Concatenates all the elements of a string array, using the specified separator between each element.</span></span></summary>
        <returns><span data-ttu-id="086c0-2385">Строка, состоящая из элементов <paramref name="value" />, разделяемых строками <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2385">A string that consists of the elements in <paramref name="value" /> delimited by the <paramref name="separator" /> string.</span></span> <span data-ttu-id="086c0-2386">Если <paramref name="value" /> равен пустому массиву, метод возвращает значение <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2386">If <paramref name="value" /> is an empty array, the method returns <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2387">Например если `separator` является «,» и элементы `value` : «apple», «orange», «виноград» и «pear», `Join(separator, value)` возвращает «apple, orange, виноград, груша».</span><span class="sxs-lookup"><span data-stu-id="086c0-2387">For example, if `separator` is ", " and the elements of `value` are "apple", "orange", "grape", and "pear", `Join(separator, value)` returns "apple, orange, grape, pear".</span></span>  
  
 <span data-ttu-id="086c0-2388">Если `separator` — `null`, пустая строка (<xref:System.String.Empty?displayProperty=nameWithType>) вместо него используется.</span><span class="sxs-lookup"><span data-stu-id="086c0-2388">If `separator` is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="086c0-2389">Если любой элемент в `value` является `null`, вместо него используется пустая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-2389">If any element in `value` is `null`, an empty string is used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2390">В следующем примере демонстрируется <xref:System.String.Join%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2390">The following example demonstrates the <xref:System.String.Join%2A> method.</span></span>  
  
 [!code-cpp[stringjoin#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringjoin/CPP/stringjoin.cpp#1)]
 [!code-csharp[stringjoin#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringjoin/CS/stringjoin.cs#1)]
 [!code-vb[stringjoin#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringjoin/VB/stringjoin.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2391"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2391"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.String.Concat(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (char separator, string[] value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(char separator, string[] value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.Char,System.String[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As Char, value As String(), startIndex As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(char separator, cli::array &lt;System::String ^&gt; ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member Join : char * string[] * int * int -&gt; string" Usage="System.string.Join (separator, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, string[] value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, string[] value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.String,System.String[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, value As String(), startIndex As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, cli::array &lt;System::String ^&gt; ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member Join : string * string[] * int * int -&gt; string" Usage="System.string.Join (separator, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="value" Type="System.String[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-2392">Строка для использования в качестве разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-2392">The string to use as a separator.</span></span> <span data-ttu-id="086c0-2393"><paramref name="separator" /> включается в возвращаемую строку, только если в <paramref name="value" /> более одного элемента.</span><span class="sxs-lookup"><span data-stu-id="086c0-2393"><paramref name="separator" /> is included in the returned string only if <paramref name="value" /> has more than one element.</span></span></param>
        <param name="value"><span data-ttu-id="086c0-2394">Массив, содержащий элементы, которые требуется сцепить.</span><span class="sxs-lookup"><span data-stu-id="086c0-2394">An array that contains the elements to concatenate.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2395">Первый используемый элемент массива <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2395">The first element in <paramref name="value" /> to use.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2396">Число используемых элементов массива <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2396">The number of elements of <paramref name="value" /> to use.</span></span></param>
        <summary><span data-ttu-id="086c0-2397">Сцепляет указанные элементы массива строк, помещая между ними заданный разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-2397">Concatenates the specified elements of a string array, using the specified separator between each element.</span></span></summary>
        <returns><span data-ttu-id="086c0-2398">Строка, состоящая из строк из параметра <paramref name="value" />, разделяемых строками <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2398">A string that consists of the strings in <paramref name="value" /> delimited by the <paramref name="separator" /> string.</span></span>  
  
<span data-ttu-id="086c0-2399">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2399">-or-</span></span> 
 <span data-ttu-id="086c0-2400"><see cref="F:System.String.Empty" />, если параметр <paramref name="count" /> равен нулю, параметр <paramref name="value" /> не содержит элементов или параметр <paramref name="separator" /> и все элементы параметра <paramref name="value" /> равны <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2400"><see cref="F:System.String.Empty" /> if <paramref name="count" /> is zero, <paramref name="value" /> has no elements, or <paramref name="separator" /> and all the elements of <paramref name="value" /> are <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2401">Например если `separator` является «,» и элементы `value` : «apple», «orange», «виноград» и «pear», `Join(separator, value, 1, 2)` возвращает «orange, виноград».</span><span class="sxs-lookup"><span data-stu-id="086c0-2401">For example, if `separator` is ", " and the elements of `value` are "apple", "orange", "grape", and "pear", `Join(separator, value, 1, 2)` returns "orange, grape".</span></span>  
  
 <span data-ttu-id="086c0-2402">Если `separator` — `null`, пустая строка (<xref:System.String.Empty?displayProperty=nameWithType>) вместо него используется.</span><span class="sxs-lookup"><span data-stu-id="086c0-2402">If `separator` is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="086c0-2403">Если любой элемент в `value` является `null`, вместо него используется пустая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-2403">If any element in `value` is `null`, an empty string is used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2404">Следующий пример Сцепляет два элемента массива названий фруктов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2404">The following example concatenates two elements from an array of names of fruit.</span></span>  
  
 [!code-cpp[string.join2#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.join2/CPP/join2.cpp#1)]
 [!code-csharp[string.join2#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.join2/CS/join2.cs#1)]
 [!code-vb[string.join2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.join2/VB/join2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2405"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2405"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2406">Значение параметра <paramref name="startIndex" /> или <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="086c0-2406"><paramref name="startIndex" /> or <paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="086c0-2407">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2407">-or-</span></span> 
 <span data-ttu-id="086c0-2408"><paramref name="startIndex" /> плюс <paramref name="count" /> больше, чем число элементов в <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2408"><paramref name="startIndex" /> plus <paramref name="count" /> is greater than the number of elements in <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="086c0-2409">Недостаточно памяти.</span><span class="sxs-lookup"><span data-stu-id="086c0-2409">Out of memory.</span></span></exception>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Join&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static string Join&lt;T&gt; (char separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join&lt;T&gt;(char separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join``1(System.Char,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join(Of T) (separator As Char, values As IEnumerable(Of T)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::String ^ Join(char separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : char * seq&lt;'T&gt; -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static string Join&lt;T&gt; (string separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join&lt;T&gt;(string separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join(Of T) (separator As String, values As IEnumerable(Of T)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::String ^ Join(System::String ^ separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : string * seq&lt;'T&gt; -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="086c0-2410">Тип элементов параметра <paramref name="values" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2410">The type of the members of <paramref name="values" />.</span></span></typeparam>
        <param name="separator"><span data-ttu-id="086c0-2411">Строка для использования в качестве разделителя.<paramref name="separator" /></span><span class="sxs-lookup"><span data-stu-id="086c0-2411">The string to use as a separator.<paramref name="separator" /></span></span> <span data-ttu-id="086c0-2412">включается в возвращаемую строку, только если в <paramref name="values" /> более одного элемента.</span><span class="sxs-lookup"><span data-stu-id="086c0-2412">is included in the returned string only if <paramref name="values" /> has more than one element.</span></span></param>
        <param name="values"><span data-ttu-id="086c0-2413">Коллекция, содержащая сцепляемые объекты.</span><span class="sxs-lookup"><span data-stu-id="086c0-2413">A collection that contains the objects to concatenate.</span></span></param>
        <summary><span data-ttu-id="086c0-2414">Сцепляет элементы созданной коллекции, помещая между ними заданный разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-2414">Concatenates the members of a collection, using the specified separator between each member.</span></span></summary>
        <returns><span data-ttu-id="086c0-2415">Строка, состоящая из элементов <paramref name="values" />, разделяемых строками <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2415">A string that consists of the members of <paramref name="values" /> delimited by the <paramref name="separator" /> string.</span></span> <span data-ttu-id="086c0-2416">Если <paramref name="values" /> не содержит членов, метод возвращает <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2416">If <paramref name="values" /> has no members, the method returns <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2417">Если `separator` — `null`, пустая строка (<xref:System.String.Empty?displayProperty=nameWithType>) вместо него используется.</span><span class="sxs-lookup"><span data-stu-id="086c0-2417">If `separator` is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="086c0-2418">Если любой член `values` является `null`, вместо него используется пустая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-2418">If any member of `values` is `null`, an empty string is used instead.</span></span>  
  
 <span data-ttu-id="086c0-2419"><xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> — Это удобный метод, который позволяет сцеплять каждым членом <xref:System.Collections.Generic.IEnumerable%601> коллекции без предварительного преобразования их в строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2419"><xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> is a convenience method that lets you concatenate each member of an <xref:System.Collections.Generic.IEnumerable%601> collection without first converting them to strings.</span></span> <span data-ttu-id="086c0-2420">Строковое представление каждого объекта в <xref:System.Collections.Generic.IEnumerable%601> коллекции извлекается путем вызова этого объекта `ToString` метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2420">The string representation of each object in the <xref:System.Collections.Generic.IEnumerable%601> collection is derived by calling that object's `ToString` method.</span></span>  
  
 <span data-ttu-id="086c0-2421">Этот метод является полезным для выражения запросов Language-Integrated Query (LINQ).</span><span class="sxs-lookup"><span data-stu-id="086c0-2421">This method is particular useful with Language-Integrated Query (LINQ) query expressions.</span></span> <span data-ttu-id="086c0-2422">Например, следующий код определяет очень простой `Animal` класс, содержащий имя животного и порядок, к которой он принадлежит.</span><span class="sxs-lookup"><span data-stu-id="086c0-2422">For example, the following code defines a very simple `Animal` class that contains the name of an animal and the order to which it belongs.</span></span> <span data-ttu-id="086c0-2423">Затем он определяет <xref:System.Collections.Generic.List%601> , содержащий ряд `Animal` объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2423">It then defines a <xref:System.Collections.Generic.List%601> object that contains a number of `Animal` objects.</span></span> <span data-ttu-id="086c0-2424"><xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> Метод расширения вызывается для извлечения `Animal` объектов, `Order` свойство имеет значение «Грызун».</span><span class="sxs-lookup"><span data-stu-id="086c0-2424">The <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> extension method is called to extract the `Animal` objects whose `Order` property equals "Rodent".</span></span> <span data-ttu-id="086c0-2425">Результат передается <xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2425">The result is passed to the <xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method.</span></span>  
  
 [!code-csharp[System.String.Join#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join5.cs#5)]
 [!code-vb[System.String.Join#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join5.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2426">Следующий пример использует алгоритм решета Эратосфена для вычисления простых чисел, которые меньше или равно 100.</span><span class="sxs-lookup"><span data-stu-id="086c0-2426">The following example uses the Sieve of Eratosthenes algorithm to calculate the prime numbers that are less than or equal to 100.</span></span> <span data-ttu-id="086c0-2427">Результат для <xref:System.Collections.Generic.List%601> объект целочисленного типа, который затем передается <xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2427">It assigns the result to a <xref:System.Collections.Generic.List%601> object of type integer, which it then passes to the <xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method.</span></span>  
  
 [!code-csharp[System.String.Join#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join2.cs#2)]
 [!code-vb[System.String.Join#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2428"><paramref name="values" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2428"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2429">Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода или строки в пределах данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2429">Reports the zero-based index position of the last occurrence of a specified Unicode character or string within this instance.</span></span> <span data-ttu-id="086c0-2430">Метод возвращает -1, если знак или строка не найдена в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2430">The method returns -1 if the character or string is not found in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char -&gt; int" Usage="string.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2431">Знак Юникода, который необходимо найти.</span><span class="sxs-lookup"><span data-stu-id="086c0-2431">The Unicode character to seek.</span></span></param>
        <summary><span data-ttu-id="086c0-2432">Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в пределах данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2432">Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.</span></span></summary>
        <returns><span data-ttu-id="086c0-2433">Отсчитываемое от нуля значение индекса параметра <paramref name="value" />, если этот знак найден; в противном случае — значение -1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2433">The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2434">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2434">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2435">То есть первый символ в строке с нулевого индекса, последней равен <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2435">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="086c0-2436">Этот метод начинает поиск с позиции последнего знака данного экземпляра и выполняется в обратном направлении до начала либо до `value` найден или проверит позицию первого символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2436">This method begins searching at the last character position of this instance and proceeds backward toward the beginning until either `value` is found or the first character position has been examined.</span></span> <span data-ttu-id="086c0-2437">При поиске учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2437">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="086c0-2438">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярные значения в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-2438">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="086c0-2439">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2439">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2440">В следующем примере определяется `ExtractFilename` метод, который использует <xref:System.String.LastIndexOf%28System.Char%29> метод для поиска последнего символом разделителя каталогов в строке и для извлечения имени файла строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2440">The following example defines an `ExtractFilename` method that uses the <xref:System.String.LastIndexOf%28System.Char%29> method to find the last directory separator character in a string and to extract the string's file name.</span></span> <span data-ttu-id="086c0-2441">Если файл существует, метод возвращает имя файла без пути.</span><span class="sxs-lookup"><span data-stu-id="086c0-2441">If the file exists, the method returns the file name without its path.</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/LastIndexOf_Example.cs#1)]
 [!code-vb[System.String.LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/LastIndexOf_Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string -&gt; int" Usage="string.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2442">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2442">The string to seek.</span></span></param>
        <summary><span data-ttu-id="086c0-2443">Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2443">Reports the zero-based index position of the last occurrence of a specified string within this instance.</span></span></summary>
        <returns><span data-ttu-id="086c0-2444">Положение в отсчитываемом от нуля индексе параметра <paramref name="value" />, если эта строка найдена, или значение -1, если она не найдена.</span><span class="sxs-lookup"><span data-stu-id="086c0-2444">The zero-based starting index position of <paramref name="value" /> if that string is found, or -1 if it is not.</span></span> <span data-ttu-id="086c0-2445">Если параметр <paramref name="value" /> равен <see cref="F:System.String.Empty" />, возвращаемым значением является последняя позиция в индексе данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2445">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the last index position in this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2446">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2446">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2447">То есть первый символ в строке с нулевого индекса, последней равен <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2447">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="086c0-2448">Поиск начинается с позиции последнего знака данного экземпляра и выполняется в обратном направлении до начала либо до `value` найден или проверит позицию первого символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2448">The search begins at the last character position of this instance and proceeds backward toward the beginning until either `value` is found or the first character position has been examined.</span></span>  
  
 <span data-ttu-id="086c0-2449">Этот метод выполняет поиск слова (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2449">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span>  
  
 <span data-ttu-id="086c0-2450">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2450">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2451">Если при поиске с учетом языка и региональных параметров параметр `value` содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2451">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2452">Если `value` состоит только из одного или нескольких символов можно игнорировать, <xref:System.String.LastIndexOf%28System.String%29> метод всегда возвращает <xref:System.String.Length%2A?displayProperty=nameWithType> -1, представляющее последнего значения индекса в текущем экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2452">If `value` consists only of one or more ignorable characters, the <xref:System.String.LastIndexOf%28System.String%29> method always returns <xref:System.String.Length%2A?displayProperty=nameWithType> - 1, which represents the last index position in the current instance.</span></span> <span data-ttu-id="086c0-2453">В следующем примере <xref:System.String.LastIndexOf%28System.String%29> метод используется для поиска подстроки три (мягкий перенос (U + 00AD), Мягкий перенос перед буквой «n» и мягкий перенос перед буквой «m») в двух строках.</span><span class="sxs-lookup"><span data-stu-id="086c0-2453">In the following example, the <xref:System.String.LastIndexOf%28System.String%29> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="086c0-2454">Только одна из строк содержит мягкий перенос.</span><span class="sxs-lookup"><span data-stu-id="086c0-2454">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="086c0-2455">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, в каждом из случаев, поскольку мягкий перенос является игнорируемым символом, результат аналогичен так, как если бы мягкий перенос не были включены в `value`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2455">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in `value`.</span></span> <span data-ttu-id="086c0-2456">При поиске мягкий перенос, метод возвращает 6 и 5.</span><span class="sxs-lookup"><span data-stu-id="086c0-2456">When searching for a soft hyphen only, the method returns 6 and 5.</span></span> <span data-ttu-id="086c0-2457">Эти значения соответствуют индекс последнего символа в две строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2457">These values correspond to the index of the last character in the two strings.</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof21.cs#21)]
 [!code-vb[System.String.LastIndexOf#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof21.vb#21)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2458">В следующем примере удаляется открывающих и закрывающих тегов HTML из строки, если они находятся в начале и конце строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2458">The following example removes opening and closing HTML tags from a string if the tags begin and end the string.</span></span> <span data-ttu-id="086c0-2459">Если строка заканчивается закрывающей скобкой символ (">»), в примере используется <xref:System.String.LastIndexOf%2A> метод необходимо найти начало закрывающего тега.</span><span class="sxs-lookup"><span data-stu-id="086c0-2459">If a string ends with a closing bracket character (">"), the example uses the <xref:System.String.LastIndexOf%2A> method to locate the start of the end tag.</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof_example2.cs#2)]
 [!code-vb[System.String.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof_example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2460"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2460"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2461">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методы сравнения строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-2461">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-2462">Чтобы найти последний индекс подстроки в пределах экземпляра строки, используя правила сравнения строк для текущего языка и региональных параметров, вызовите <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> перегрузку метода со значением <see cref="F:System.StringComparison.CurrentCulture" /> для его <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2462">To find the last index of a substring within a string instance by using the comparison rules of the current culture, call the <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char * int -&gt; int" Usage="string.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2463">Знак Юникода, который необходимо найти.</span><span class="sxs-lookup"><span data-stu-id="086c0-2463">The Unicode character to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2464">Начальное положение поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2464">The starting position of the search.</span></span> <span data-ttu-id="086c0-2465">Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2465">The search proceeds from <paramref name="startIndex" /> toward the beginning of this instance.</span></span></param>
        <summary><span data-ttu-id="086c0-2466">Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в пределах данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2466">Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.</span></span> <span data-ttu-id="086c0-2467">Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2467">The search starts at a specified character position and proceeds backward toward the beginning of the string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2468">Отсчитываемая от нуля позиция параметра <paramref name="value" /> в индексе, если этот символ найден, или значение -1, если он не найден или текущий экземпляр равен <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2468">The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2469">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2469">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2470">То есть первый символ в строке с нулевого индекса, последней равен <xref:System.String.Length%2A> -1. Этот метод начинает поиск `startIndex` позиции этого экземпляра и назад к началу текущего экземпляра, пока продолжается знака `value` найден или проверит позицию первого символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2470">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.This method begins searching at the `startIndex` character position of this instance and proceeds backward toward the beginning of the current instance until either `value` is found or the first character position has been examined.</span></span> <span data-ttu-id="086c0-2471">Например если `startIndex` — <xref:System.String.Length%2A> - 1, метод выполняет поиск каждого символа из последнего символа строки в начало.</span><span class="sxs-lookup"><span data-stu-id="086c0-2471">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches every character from the last character in the string to the beginning.</span></span> <span data-ttu-id="086c0-2472">При поиске учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2472">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="086c0-2473">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярные значения в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-2473">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="086c0-2474">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2474">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2475">Следующий пример производится поиск всех вхождений знака в строке от конца строки в начало строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2475">The following example finds the index of all occurrences of a character in a string, working from the end of the string to the start of the string.</span></span>  
  
 [!code-cpp[string.lastindexof1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.lastindexof1/CPP/lastixof1.cpp#1)]
 [!code-csharp[string.lastindexof1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.lastindexof1/CS/lastixof1.cs#1)]
 [!code-vb[string.lastindexof1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.lastindexof1/VB/lastixof1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2476">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> меньше нуля либо равно или превышает длину этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2476">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int -&gt; int" Usage="string.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2477">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2477">The string to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2478">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2478">The search starting position.</span></span> <span data-ttu-id="086c0-2479">Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2479">The search proceeds from <paramref name="startIndex" /> toward the beginning of this instance.</span></span></param>
        <summary><span data-ttu-id="086c0-2480">Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2480">Reports the zero-based index position of the last occurrence of a specified string within this instance.</span></span> <span data-ttu-id="086c0-2481">Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2481">The search starts at a specified character position and proceeds backward toward the beginning of the string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2482">Отсчитываемая от нуля начальная позиция индекса параметра <paramref name="value" />, если строка найдена; значение -1, если строка не найдена или значение текущего экземпляра равно <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2482">The zero-based starting index position of <paramref name="value" /> if that string is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="086c0-2483">Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является наименьшее значение из <paramref name="startIndex" /> и последнего значения индекса в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2483">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the smaller of <paramref name="startIndex" /> and the last index position in this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2484">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2484">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2485">То есть первый символ в строке с нулевого индекса, последней равен <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2485">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="086c0-2486">Поиск начинается с `startIndex` позиции этого экземпляра и назад к началу, пока продолжается знака `value` найден или проверит позицию первого символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2486">The search begins at the `startIndex` character position of this instance and proceeds backward toward the beginning until either `value` is found or the first character position has been examined.</span></span> <span data-ttu-id="086c0-2487">Например если `startIndex` — <xref:System.String.Length%2A> - 1, метод выполняет поиск каждого символа из последнего символа строки в начало.</span><span class="sxs-lookup"><span data-stu-id="086c0-2487">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches every character from the last character in the string to the beginning.</span></span>  
  
 <span data-ttu-id="086c0-2488">Этот метод выполняет поиск слова (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2488">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span>  
  
 <span data-ttu-id="086c0-2489">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2489">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2490">Если при поиске с учетом языка и региональных параметров параметр `value` содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2490">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2491">Если `value` состоит только из одного или нескольких символов можно игнорировать, <xref:System.String.LastIndexOf%28System.String%2CSystem.Int32%29> метод всегда возвращает `startIndex`, который является позицию символа, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2491">If `value` consists only of one or more ignorable characters, the <xref:System.String.LastIndexOf%28System.String%2CSystem.Int32%29> method always returns `startIndex`, which is the character position at which the search begins.</span></span> <span data-ttu-id="086c0-2492">В следующем примере <xref:System.String.LastIndexOf%28System.String%2CSystem.Int32%29> метод используется для поиска подстроки, включающий мягкий перенос (U + 00AD) и предшествует или включает последний «m» в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2492">In the following example, the <xref:System.String.LastIndexOf%28System.String%2CSystem.Int32%29> method is used to find a substring that includes a soft hyphen (U+00AD) and that precedes or includes the final "m" in a string.</span></span> <span data-ttu-id="086c0-2493">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, поскольку мягкий перенос в строке поиска учитывается, вызвав метод найти подстроку, состоящую из мягкий перенос и «m» возвращает позицию «m» в строке, в то время как вызов, чтобы найти substrin g, состоящий из мягкий перенос и «n» возвращает позицию «n».</span><span class="sxs-lookup"><span data-stu-id="086c0-2493">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, because the soft hyphen in the search string is ignored, calling the method to find a substring that consists of the soft hyphen and "m" returns the position of the "m" in the string, whereas calling it to find a substring that consists of the soft hyphen and "n" returns the position of the "n".</span></span> <span data-ttu-id="086c0-2494">Строка поиска должна содержать только мягкий перенос, метод возвращает индекс «m», который представляет значение `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2494">When the search string contains only the soft hyphen, the method returns the index of the "m", which represents the value of `startIndex`.</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof22.cs#22)]
 [!code-vb[System.String.LastIndexOf#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof22.vb#22)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2495">Следующий пример выполняет поиск всех вхождений строки в целевой строке в конце целевой строки до начала целевой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2495">The following example finds the index of all occurrences of a string in target string, working from the end of the target string to the start of the target string.</span></span>  
  
 [!code-cpp[string.lastindexof7#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOf7/CPP/lastixof7.cpp#1)]
 [!code-csharp[string.lastindexof7#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOf7/CS/lastixof7.cs#1)]
 [!code-vb[string.lastindexof7#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOf7/VB/lastixof7.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2496"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2496"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2497">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> меньше нуля или больше длины текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2497">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance.</span></span>  
  
<span data-ttu-id="086c0-2498">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2498">-or-</span></span> 
<span data-ttu-id="086c0-2499">Текущий экземпляр равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> меньше –1 или больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2499">The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2500">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методы сравнения строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-2500">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-2501">Чтобы найти индекс подстроки, предшествует определенной позиции, используя правила сравнения строк для текущего языка и региональных параметров, вызовите <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> перегрузку метода со значением <see cref="F:System.StringComparison.CurrentCulture" /> для его <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2501">To find the index of a substring that precedes a particular character position by using the comparison rules of the current culture, call the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * StringComparison -&gt; int" Usage="string.LastIndexOf (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2502">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2502">The string to seek.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-2503">Одно из значений перечисления, определяющее правила поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2503">One of the enumeration values that specifies the rules for the search.</span></span></param>
        <summary><span data-ttu-id="086c0-2504">Возвращает индекс с отсчетом от нуля последнего вхождения указанной строки в текущем объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2504">Reports the zero-based index of the last occurrence of a specified string within the current <see cref="T:System.String" /> object.</span></span> <span data-ttu-id="086c0-2505">Параметр определяет тип поиска заданной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2505">A parameter specifies the type of search to use for the specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2506">Начальное положение в отсчитываемом от нуля индексе параметра <paramref name="value" />, если эта строка найдена, или значение -1, если она не найдена.</span><span class="sxs-lookup"><span data-stu-id="086c0-2506">The zero-based starting index position of the <paramref name="value" /> parameter if that string is found, or -1 if it is not.</span></span> <span data-ttu-id="086c0-2507">Если параметр <paramref name="value" /> равен <see cref="F:System.String.Empty" />, возвращаемым значением является последняя позиция в индексе данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2507">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the last index position in this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2508">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2508">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2509">То есть первый символ в строке с нулевого индекса, последней равен <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2509">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="086c0-2510">`comparisonType` Параметр указывает искомый `value` параметра, используя текущие или инвариантные язык и региональные параметры, с помощью поиска с учетом или без учета регистра и с помощью word или порядковым номерам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2510">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
 <span data-ttu-id="086c0-2511">Поиск начинается с позиции последнего знака данного экземпляра и выполняется в обратном направлении до начала либо до `value` найден или проверит позицию первого символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2511">The search begins at the last character position of this instance and proceeds backward toward the beginning until either `value` is found or the first character position has been examined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2512">В следующем примере показано три перегрузки <xref:System.String.LastIndexOf%2A> метод, который поиска последнего вхождения строки внутри другой строки с использованием различных значений свойства <xref:System.StringComparison> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-2512">The following example demonstrates three overloads of the <xref:System.String.LastIndexOf%2A> method that find the last occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.LastIndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/cs/liocmp.cs#1)]
 [!code-vb[system.string.LastIndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/vb/liocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2513"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2513"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2514"><paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2514"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2515">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2515">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2516">Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.StringComparison.Ordinal" /> или <see cref="F:System.StringComparison.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2516">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2517">Если <paramref name="value" /> состоит только из одного или нескольких символов можно игнорировать, <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> метод всегда возвращает <see cref="P:System.String.Length" /> -1, представляющее последнего значения индекса в текущем экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2517">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> method always returns <see cref="P:System.String.Length" /> - 1, which represents the last index position in the current instance.</span></span>  
  
<span data-ttu-id="086c0-2518">В следующем примере <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> метод используется для поиска подстроки три (мягкий перенос (U + 00AD), Мягкий перенос перед буквой «n» и мягкий перенос перед буквой «m») в двух строках.</span><span class="sxs-lookup"><span data-stu-id="086c0-2518">In the following example, the <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="086c0-2519">Только одна из строк содержит мягкий перенос.</span><span class="sxs-lookup"><span data-stu-id="086c0-2519">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="086c0-2520">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, поскольку мягкий перенос является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает значение, оно возвратит, если мягкий перенос не были включены в строку поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2520">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="086c0-2521">Поиск по порядковым номерам, однако успешно находит мягкий перенос в одной строке и сообщает, что он отсутствует из второй строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2521">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
<span data-ttu-id="086c0-2522">[!code-csharp[System.String.LastIndexOf#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof26.cs#26)] [!code-vb[System.String.LastIndexOf#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof26.vb#26)]</span><span class="sxs-lookup"><span data-stu-id="086c0-2522">[!code-csharp[System.String.LastIndexOf#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof26.cs#26)] [!code-vb[System.String.LastIndexOf#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof26.vb#26)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char * int * int -&gt; int" Usage="string.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2523">Знак Юникода, который необходимо найти.</span><span class="sxs-lookup"><span data-stu-id="086c0-2523">The Unicode character to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2524">Начальное положение поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2524">The starting position of the search.</span></span> <span data-ttu-id="086c0-2525">Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2525">The search proceeds from <paramref name="startIndex" /> toward the beginning of this instance.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2526">Количество позиций знаков для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2526">The number of character positions to examine.</span></span></param>
        <summary><span data-ttu-id="086c0-2527">Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в подстроке в пределах данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2527">Reports the zero-based index position of the last occurrence of the specified Unicode character in a substring within this instance.</span></span> <span data-ttu-id="086c0-2528">Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2528">The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.</span></span></summary>
        <returns><span data-ttu-id="086c0-2529">Отсчитываемая от нуля позиция параметра <paramref name="value" /> в индексе, если этот символ найден, или значение -1, если он не найден или текущий экземпляр равен <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2529">The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2530">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2530">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2531">То есть первый символ в строке с нулевого индекса, последней равен <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2531">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="086c0-2532">Этот метод начинает поиск `startIndex` символ в позиции и переходит назад к началу этого экземпляра, пока `value` найден или `count` будет проверена.</span><span class="sxs-lookup"><span data-stu-id="086c0-2532">This method begins searching at the `startIndex` character position and proceeds backward toward the beginning of this instance until either `value` is found or `count` character positions have been examined.</span></span> <span data-ttu-id="086c0-2533">Например если `startIndex` — <xref:System.String.Length%2A> - 1, метод ищет в обратном направлении `count` символов из последнего символа в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2533">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches backward `count` characters from the last character in the string.</span></span> <span data-ttu-id="086c0-2534">При поиске учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2534">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="086c0-2535">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярное значение Юникод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2535">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar value are the same.</span></span> <span data-ttu-id="086c0-2536">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2536">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2537">Следующий пример производится поиск всех вхождений символа в подстроке от конца подстроки в начало подстроки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2537">The following example finds the index of all occurrences of a character in a substring, working from the end of the substring to the start of the substring.</span></span>  
  
 [!code-cpp[string.lastindexof2#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.lastindexof2/CPP/lastixof2.cpp#1)]
 [!code-csharp[string.lastindexof2#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.lastindexof2/CS/lastixof2.cs#1)]
 [!code-vb[string.lastindexof2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.lastindexof2/VB/lastixof2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2538">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> меньше нуля либо равно или превышает длину этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2538">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.</span></span>  
  
<span data-ttu-id="086c0-2539">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2539">-or-</span></span> 
<span data-ttu-id="086c0-2540">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> - <paramref name="count" /> + 1 является отрицательным числом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2540">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> - <paramref name="count" /> + 1 is less than zero.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int * int -&gt; int" Usage="string.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2541">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2541">The string to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2542">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2542">The search starting position.</span></span> <span data-ttu-id="086c0-2543">Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2543">The search proceeds from <paramref name="startIndex" /> toward the beginning of this instance.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2544">Количество позиций знаков для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2544">The number of character positions to examine.</span></span></param>
        <summary><span data-ttu-id="086c0-2545">Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2545">Reports the zero-based index position of the last occurrence of a specified string within this instance.</span></span> <span data-ttu-id="086c0-2546">Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2546">The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.</span></span></summary>
        <returns><span data-ttu-id="086c0-2547">Отсчитываемая от нуля начальная позиция индекса параметра <paramref name="value" />, если строка найдена; значение -1, если строка не найдена или значение текущего экземпляра равно <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2547">The zero-based starting index position of <paramref name="value" /> if that string is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="086c0-2548">Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является наименьшее значение из <paramref name="startIndex" /> и последнего значения индекса в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2548">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the smaller of <paramref name="startIndex" /> and the last index position in this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2549">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2549">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2550">То есть первый символ в строке с нулевого индекса, последней равен <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2550">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="086c0-2551">Поиск начинается с `startIndex` позиции этого экземпляра и назад к началу, пока продолжается знака `value` найден или `count` будет проверена.</span><span class="sxs-lookup"><span data-stu-id="086c0-2551">The search begins at the `startIndex` character position of this instance and proceeds backward toward the beginning until either `value` is found or `count` character positions have been examined.</span></span> <span data-ttu-id="086c0-2552">Например если `startIndex` — <xref:System.String.Length%2A> - 1, метод ищет в обратном направлении `count` символов из последнего символа в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2552">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches backward `count` characters from the last character in the string.</span></span>  
  
 <span data-ttu-id="086c0-2553">Этот метод выполняет поиск слова (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2553">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span>  
  
 <span data-ttu-id="086c0-2554">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2554">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2555">Если при поиске с учетом языка и региональных параметров параметр `value` содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2555">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2556">Если `value` состоит только из одного или нескольких символов можно игнорировать, <xref:System.String.LastIndexOf%2A> метод всегда возвращает `startIndex`, который является позицию символа, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2556">If `value` consists only of one or more ignorable characters, the <xref:System.String.LastIndexOf%2A> method always returns `startIndex`, which is the character position at which the search begins.</span></span> <span data-ttu-id="086c0-2557">В следующем примере <xref:System.String.LastIndexOf%2A> метод позволяет найти позицию мягкий перенос (U + 00AD) в двух символы перед последней «m» двух строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-2557">In the following example, the <xref:System.String.LastIndexOf%2A> method is used to find the position of a soft hyphen (U+00AD) in the two characters that precede the final "m" of two strings.</span></span> <span data-ttu-id="086c0-2558">Только одна из строк содержит требуемую подстроку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2558">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="086c0-2559">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, в обоих случаях, поскольку мягкий перенос является игнорируемым символом, метод возвращает индекс «m» в строке при выполнении учитывающего культуру сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2559">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2560">Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".</span><span class="sxs-lookup"><span data-stu-id="086c0-2560">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof23.cs#23)]
 [!code-vb[System.String.LastIndexOf#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof23.vb#23)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2561">Следующий пример выполняет поиск всех вхождений строки в подстроке от конца подстроки в начало подстроки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2561">The following example finds the index of all occurrences of a string in substring, working from the end of the substring to the start of the substring.</span></span>  
  
 [!code-cpp[string.lastindexof8#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOf8/CPP/lastixof8.cpp#1)]
 [!code-csharp[string.lastindexof8#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOf8/CS/lastixof8.cs#1)]
 [!code-vb[string.lastindexof8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOf8/VB/lastixof8.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2562"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2562"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2563"><paramref name="count" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-2563"><paramref name="count" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2564">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2564">-or-</span></span> 
<span data-ttu-id="086c0-2565">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> является отрицательным.</span><span class="sxs-lookup"><span data-stu-id="086c0-2565">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2566">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2566">-or-</span></span> 
<span data-ttu-id="086c0-2567">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> превышает длину этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2567">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.</span></span>  
  
<span data-ttu-id="086c0-2568">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2568">-or-</span></span> 
<span data-ttu-id="086c0-2569">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> - <paramref name="count" /> + 1 указывает позицию вне пределов данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2569">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> - <paramref name="count" />+ 1 specifies a position that is not within this instance.</span></span>  
  
<span data-ttu-id="086c0-2570">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2570">-or-</span></span> 
<span data-ttu-id="086c0-2571">Текущий экземпляр равен <see cref="F:System.String.Empty" />, а <paramref name="start" /> меньше -1 или больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2571">The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero.</span></span>  
  
<span data-ttu-id="086c0-2572">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2572">-or-</span></span> 
<span data-ttu-id="086c0-2573">Текущий экземпляр равен <see cref="F:System.String.Empty" />, а <paramref name="count" /> больше 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2573">The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2574">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методы сравнения строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-2574">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-2575">Чтобы выполнить эту операцию, используя правила сравнения строк для текущего языка и региональных параметров, вызовите <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> перегрузку метода со значением <see cref="F:System.StringComparison.CurrentCulture" /> для его <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2575">To perform this operation by using the comparison rules of the current culture, call the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int * StringComparison -&gt; int" Usage="string.LastIndexOf (value, startIndex, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2576">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2576">The string to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2577">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2577">The search starting position.</span></span> <span data-ttu-id="086c0-2578">Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2578">The search proceeds from <paramref name="startIndex" /> toward the beginning of this instance.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-2579">Одно из значений перечисления, определяющее правила поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2579">One of the enumeration values that specifies the rules for the search.</span></span></param>
        <summary><span data-ttu-id="086c0-2580">Возвращает индекс с отсчетом от нуля последнего вхождения указанной строки в текущем объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2580">Reports the zero-based index of the last occurrence of a specified string within the current <see cref="T:System.String" /> object.</span></span> <span data-ttu-id="086c0-2581">Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2581">The search starts at a specified character position and proceeds backward toward the beginning of the string.</span></span> <span data-ttu-id="086c0-2582">Параметр определяет тип сравнения для выполнения во время поиска заданной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2582">A parameter specifies the type of comparison to perform when searching for the specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2583">Отсчитываемая от нуля начальная позиция индекса параметра <paramref name="value" />, если эта строка найдена, или значение -1, если строка не найдена или текущий экземпляр равен <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2583">The zero-based starting index position of the <paramref name="value" /> parameter if that string is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="086c0-2584">Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является наименьшее значение из <paramref name="startIndex" /> и последнего значения индекса в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2584">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the smaller of <paramref name="startIndex" /> and the last index position in this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2585">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2585">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2586">То есть первый символ в строке с нулевого индекса, последней равен <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2586">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="086c0-2587">Поиск начинается с `startIndex` символ в позиции и переходит обратно, либо до `value` найден или проверит позицию первого символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2587">The search begins at the `startIndex` character position and proceeds backward until either `value` is found or the first character position has been examined.</span></span> <span data-ttu-id="086c0-2588">Например если `startIndex` — <xref:System.String.Length%2A> - 1, метод выполняет поиск каждого символа из последнего символа строки в начало.</span><span class="sxs-lookup"><span data-stu-id="086c0-2588">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches every character from the last character in the string to the beginning.</span></span>  
  
 <span data-ttu-id="086c0-2589">`comparisonType` Параметр указывает искомый `value` параметра, используя текущие или инвариантные язык и региональные параметры, с помощью поиска с учетом или без учета регистра и с помощью word или порядковым номерам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2589">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2590">В следующем примере показано три перегрузки <xref:System.String.LastIndexOf%2A> метод, который поиска последнего вхождения строки внутри другой строки с использованием различных значений свойства <xref:System.StringComparison> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-2590">The following example demonstrates three overloads of the <xref:System.String.LastIndexOf%2A> method that find the last occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.LastIndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/cs/liocmp.cs#1)]
 [!code-vb[system.string.LastIndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/vb/liocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2591"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2591"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2592">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> меньше нуля или больше длины текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2592">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance.</span></span>  
  
<span data-ttu-id="086c0-2593">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2593">-or-</span></span> 
<span data-ttu-id="086c0-2594">Текущий экземпляр равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> меньше -1 или больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2594">The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2595"><paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2595"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2596">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2596">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2597">Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="comparisonType" /> не имеет значение <see cref="F:System.StringComparison.Ordinal" /> или <see cref="F:System.StringComparison.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2597">In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2598">Если <paramref name="value" /> состоит только из одного или нескольких символов можно игнорировать, <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> метод всегда возвращает <paramref name="startIndex" />, который является позицию символа, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2598">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="086c0-2599">В следующем примере <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> метод позволяет найти позицию мягкий перенос (U + 00AD) следуют «m», начиная с последней «m» в двух строках.</span><span class="sxs-lookup"><span data-stu-id="086c0-2599">In the following example, the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m", starting with the final "m" in two strings.</span></span> <span data-ttu-id="086c0-2600">Только одна из строк содержит требуемую подстроку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2600">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="086c0-2601">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, в обоих случаях, поскольку мягкий перенос является игнорируемым символом, метод возвращает индекс «m» в строке при выполнении учитывающего культуру сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2601">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2602">Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".</span><span class="sxs-lookup"><span data-stu-id="086c0-2602">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="086c0-2603">Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2603">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
<span data-ttu-id="086c0-2604">[!code-csharp[System.String.LastIndexOf#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof25.cs#25)] [!code-vb[System.String.LastIndexOf#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof25.vb#25)]</span><span class="sxs-lookup"><span data-stu-id="086c0-2604">[!code-csharp[System.String.LastIndexOf#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof25.cs#25)] [!code-vb[System.String.LastIndexOf#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof25.vb#25)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex, int32 count, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer, count As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int * int * StringComparison -&gt; int" Usage="string.LastIndexOf (value, startIndex, count, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-2605">Строка для поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2605">The string to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2606">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2606">The search starting position.</span></span> <span data-ttu-id="086c0-2607">Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2607">The search proceeds from <paramref name="startIndex" /> toward the beginning of this instance.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2608">Количество позиций знаков для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2608">The number of character positions to examine.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-2609">Одно из значений перечисления, определяющее правила поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-2609">One of the enumeration values that specifies the rules for the search.</span></span></param>
        <summary><span data-ttu-id="086c0-2610">Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2610">Reports the zero-based index position of the last occurrence of a specified string within this instance.</span></span> <span data-ttu-id="086c0-2611">Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2611">The search starts at a specified character position and proceeds backward toward the beginning of the string for the specified number of character positions.</span></span> <span data-ttu-id="086c0-2612">Параметр определяет тип сравнения для выполнения во время поиска заданной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2612">A parameter specifies the type of comparison to perform when searching for the specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2613">Отсчитываемая от нуля начальная позиция индекса параметра <paramref name="value" />, если эта строка найдена, или значение -1, если строка не найдена или текущий экземпляр равен <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2613">The zero-based starting index position of the <paramref name="value" /> parameter if that string is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="086c0-2614">Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является наименьшее значение из <paramref name="startIndex" /> и последнего значения индекса в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2614">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the smaller of <paramref name="startIndex" /> and the last index position in this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2615">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2615">Index numbering starts from zero.</span></span> <span data-ttu-id="086c0-2616">То есть первый символ в строке с нулевого индекса, последней равен <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2616">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="086c0-2617">Поиск начинается с `startIndex` символ в позиции и переходит обратно, либо до `value` найден или `count` будет проверена.</span><span class="sxs-lookup"><span data-stu-id="086c0-2617">The search begins at the `startIndex` character position and proceeds backward until either `value` is found or `count` character positions have been examined.</span></span> <span data-ttu-id="086c0-2618">Например если `startIndex` — <xref:System.String.Length%2A> - 1, метод ищет в обратном направлении `count` символов из последнего символа в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2618">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches backward `count` characters from the last character in the string.</span></span>  
  
 <span data-ttu-id="086c0-2619">`comparisonType` Параметр указывает искомый `value` параметра, используя текущие или инвариантные язык и региональные параметры, с помощью поиска с учетом или без учета регистра и с помощью word или порядковым номерам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2619">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2620">В следующем примере показано три перегрузки <xref:System.String.LastIndexOf%2A> метод, который поиска последнего вхождения строки внутри другой строки с использованием различных значений свойства <xref:System.StringComparison> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-2620">The following example demonstrates three overloads of the <xref:System.String.LastIndexOf%2A> method that find the last occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.LastIndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/cs/liocmp.cs#1)]
 [!code-vb[system.string.LastIndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/vb/liocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2621"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2621"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2622"><paramref name="count" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-2622"><paramref name="count" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2623">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2623">-or-</span></span> 
<span data-ttu-id="086c0-2624">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> является отрицательным.</span><span class="sxs-lookup"><span data-stu-id="086c0-2624">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2625">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2625">-or-</span></span> 
<span data-ttu-id="086c0-2626">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> превышает длину этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2626">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.</span></span>  
  
<span data-ttu-id="086c0-2627">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2627">-or-</span></span> 
<span data-ttu-id="086c0-2628">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> – <paramref name="count" /> + 1 указывает позицию вне пределов данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2628">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> + 1 - <paramref name="count" /> specifies a position that is not within this instance.</span></span>  
  
<span data-ttu-id="086c0-2629">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2629">-or-</span></span> 
<span data-ttu-id="086c0-2630">Текущий экземпляр равен <see cref="F:System.String.Empty" />, а <paramref name="start" /> меньше -1 или больше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2630">The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero.</span></span>  
  
<span data-ttu-id="086c0-2631">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2631">-or-</span></span> 
<span data-ttu-id="086c0-2632">Текущий экземпляр равен <see cref="F:System.String.Empty" />, а <paramref name="count" /> больше 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-2632">The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2633"><paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2633"><paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2634">Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2634">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2635">Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="comparisonType" /> не имеет значение <see cref="F:System.StringComparison.Ordinal" /> или <see cref="F:System.StringComparison.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2635">In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="086c0-2636">Если <paramref name="value" /> состоит только из одного или нескольких символов можно игнорировать, <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> метод всегда возвращает <paramref name="startIndex" />, который является позицию символа, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2636">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
<span data-ttu-id="086c0-2637">В следующем примере <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> метод используется для поиска следуют «m» во всех позиций мягкий перенос (U + 00AD), но месте первого символа перед последней «m» в двух строках.</span><span class="sxs-lookup"><span data-stu-id="086c0-2637">In the following example, the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in all but the first character position before the final "m" in two strings.</span></span> <span data-ttu-id="086c0-2638">Только одна из строк содержит требуемую подстроку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2638">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="086c0-2639">Если пример выполняется [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] или более поздней версии, в обоих случаях, поскольку мягкий перенос является игнорируемым символом, метод возвращает индекс «m» в строке при выполнении учитывающего культуру сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2639">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2640">Когда он выполняет порядковое сравнение, однако она находит подстрока только в первой строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2640">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="086c0-2641">Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой «m», метод возвращает не индекс мягкого переноса, но вместо этого возвращает индекс «m», когда он выполняет сравнение с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2641">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="086c0-2642">Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2642">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
<span data-ttu-id="086c0-2643">[!code-csharp[System.String.LastIndexOf#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof24.cs#24)] [!code-vb[System.String.LastIndexOf#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof24.vb#24)]</span><span class="sxs-lookup"><span data-stu-id="086c0-2643">[!code-csharp[System.String.LastIndexOf#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof24.cs#24)] [!code-vb[System.String.LastIndexOf#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof24.vb#24)]</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOfAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2644">Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2644">Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.</span></span> <span data-ttu-id="086c0-2645">Метод возвращает -1, если знаки массива не найдены в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2645">The method returns -1 if the characters in the array are not found in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOfAny">
      <MemberSignature Language="C#" Value="public int LastIndexOfAny (char[] anyOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOfAny(char[] anyOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOfAny(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOfAny (anyOf As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOfAny(cli::array &lt;char&gt; ^ anyOf);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOfAny : char[] -&gt; int" Usage="string.LastIndexOfAny anyOf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="anyOf"><span data-ttu-id="086c0-2646">Массив знаков Юникода, содержащий один или несколько искомых знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2646">A Unicode character array containing one or more characters to seek.</span></span></param>
        <summary><span data-ttu-id="086c0-2647">Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2647">Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.</span></span></summary>
        <returns><span data-ttu-id="086c0-2648">Значение индекса последнего вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если ни один знак из <paramref name="anyOf" /> не был найден.</span><span class="sxs-lookup"><span data-stu-id="086c0-2648">The index position of the last occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2649">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2649">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="086c0-2650">Этот метод начинает поиск с позиции последнего знака данного экземпляра и выполняется в обратном направлении до начала пока в `anyOf` найден или проверит позицию первого символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2650">This method begins searching at the last character position of this instance and proceeds backward toward the beginning until either a character in `anyOf` is found or the first character position has been examined.</span></span> <span data-ttu-id="086c0-2651">При поиске учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2651">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="086c0-2652">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярные значения в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-2652">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="086c0-2653">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2653">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2654">В следующем примере вычисляется индекс последнего вхождения любого символа в строке «is» внутри другой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2654">The following example finds the index of the last occurrence of any character in the string "is" within another string.</span></span>  
  
 [!code-cpp[string.lastindexofany1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOfAny1/CPP/lastixany1.cpp#1)]
 [!code-csharp[string.lastindexofany1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOfAny1/CS/lastixany1.cs#1)]
 [!code-vb[string.lastindexofany1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOfAny1/VB/lastixany1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2655"><paramref name="anyOf" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2655"><paramref name="anyOf" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOfAny">
      <MemberSignature Language="C#" Value="public int LastIndexOfAny (char[] anyOf, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOfAny(char[] anyOf, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOfAny(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOfAny (anyOf As Char(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOfAny : char[] * int -&gt; int" Usage="string.LastIndexOfAny (anyOf, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf"><span data-ttu-id="086c0-2656">Массив знаков Юникода, содержащий один или несколько искомых знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2656">A Unicode character array containing one or more characters to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2657">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2657">The search starting position.</span></span> <span data-ttu-id="086c0-2658">Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2658">The search proceeds from <paramref name="startIndex" /> toward the beginning of this instance.</span></span></param>
        <summary><span data-ttu-id="086c0-2659">Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2659">Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.</span></span> <span data-ttu-id="086c0-2660">Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2660">The search starts at a specified character position and proceeds backward toward the beginning of the string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2661">Значение индекса последнего вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если ни один знак из <paramref name="anyOf" /> не был найден или текущий экземпляр равен <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2661">The index position of the last occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found or if the current instance equals <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2662">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2662">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="086c0-2663">Этот метод начинает поиск `startIndex` данный экземпляр и переход назад к началу, пока символ в позиции знака `anyOf` найден или проверит позицию первого символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2663">This method begins searching at the `startIndex` character position of this instance and proceeds backward toward the beginning until either a character in `anyOf` is found or the first character position has been examined.</span></span> <span data-ttu-id="086c0-2664">При поиске учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2664">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="086c0-2665">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярные значения в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-2665">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="086c0-2666">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2666">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2667">В следующем примере вычисляется индекс последнего вхождения любого символа в строке «is» в подстроке другой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2667">The following example finds the index of the last occurrence of any character in the string "is" within a substring of another string.</span></span>  
  
 [!code-cpp[string.lastindexofany2#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOfAny2/CPP/lastixany2.cpp#1)]
 [!code-csharp[string.lastindexofany2#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOfAny2/CS/lastixany2.cs#1)]
 [!code-vb[string.lastindexofany2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOfAny2/VB/lastixany2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2668"><paramref name="anyOf" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2668"><paramref name="anyOf" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2669">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> указывает позицию вне пределов данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2669">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> specifies a position that is not within this instance.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOfAny">
      <MemberSignature Language="C#" Value="public int LastIndexOfAny (char[] anyOf, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOfAny(char[] anyOf, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOfAny (anyOf As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOfAny : char[] * int * int -&gt; int" Usage="string.LastIndexOfAny (anyOf, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf"><span data-ttu-id="086c0-2670">Массив знаков Юникода, содержащий один или несколько искомых знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2670">A Unicode character array containing one or more characters to seek.</span></span></param>
        <param name="startIndex"><span data-ttu-id="086c0-2671">Позиция, с которой начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="086c0-2671">The search starting position.</span></span> <span data-ttu-id="086c0-2672">Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2672">The search proceeds from <paramref name="startIndex" /> toward the beginning of this instance.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2673">Количество позиций знаков для проверки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2673">The number of character positions to examine.</span></span></param>
        <summary><span data-ttu-id="086c0-2674">Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2674">Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.</span></span> <span data-ttu-id="086c0-2675">Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2675">The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.</span></span></summary>
        <returns><span data-ttu-id="086c0-2676">Значение индекса последнего вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если ни один знак из <paramref name="anyOf" /> не был найден или текущий экземпляр равен <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2676">The index position of the last occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found or if the current instance equals <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2677">Индексация начинается с нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2677">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="086c0-2678">Этот метод начинает поиск `startIndex` данный экземпляр и переход назад к началу, пока символ в позиции знака `anyOf` найден или `count` будет проверена.</span><span class="sxs-lookup"><span data-stu-id="086c0-2678">This method begins searching at the `startIndex` character position of this instance and proceeds backward toward the beginning until either a character in `anyOf` is found or `count` character positions have been examined.</span></span> <span data-ttu-id="086c0-2679">При поиске учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2679">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="086c0-2680">Этот метод выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают их скалярные значения в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-2680">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="086c0-2681">Для выполнения поиска с учетом языка и региональных параметров используйте <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> метод, где скалярное значение Юникод, представляющее составной знак, например лигатура «?» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения символа компонентов в Исправьте последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-2681">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2682">В следующем примере вычисляется индекс последнего знака строки «aid» в подстроке другой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2682">The following example finds the index of the last occurrence of any character in the string "aid" within a substring of another string.</span></span>  
  
 [!code-cpp[string.lastindexofany3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOfAny3/CPP/lastixany3.cpp#1)]
 [!code-csharp[string.lastindexofany3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOfAny3/CS/lastixany3.cs#1)]
 [!code-vb[string.lastindexofany3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOfAny3/VB/lastixany3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2683"><paramref name="anyOf" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2683"><paramref name="anyOf" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2684">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="count" /> или <paramref name="startIndex" /> является отрицательным числом.</span><span class="sxs-lookup"><span data-stu-id="086c0-2684">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="count" /> or <paramref name="startIndex" /> is negative.</span></span>  
  
<span data-ttu-id="086c0-2685">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2685">-or-</span></span> 
<span data-ttu-id="086c0-2686">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а разность <paramref name="startIndex" /> и <paramref name="count" /> + 1 меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2686">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> minus <paramref name="count" /> + 1 is less than zero.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.String.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.string.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="086c0-2687">Возвращает число знаков в текущем объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2687">Gets the number of characters in the current <see cref="T:System.String" /> object.</span></span></summary>
        <value><span data-ttu-id="086c0-2688">Количество знаков в текущей строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2688">The number of characters in the current string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2689"><xref:System.String.Length%2A> Свойство возвращает количество <xref:System.Char> объектов в данном экземпляре, не число символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2689">The <xref:System.String.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="086c0-2690">Причина в том, что символ Юникода могут быть представлены в более чем одной <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2690">The reason is that a Unicode character might be represented by more than one <xref:System.Char>.</span></span> <span data-ttu-id="086c0-2691">Используйте <xref:System.Globalization.StringInfo?displayProperty=nameWithType> класс для работы с каждым знаком Юникода вместо каждого <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2691">Use the <xref:System.Globalization.StringInfo?displayProperty=nameWithType> class to work with each Unicode character instead of each <xref:System.Char>.</span></span>  
  
 <span data-ttu-id="086c0-2692">В некоторых языках, таких как C и C++ символ null указывает на конец строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2692">In some languages, such as C and C++, a null character indicates the end of a string.</span></span> <span data-ttu-id="086c0-2693">В .NET можно внедрить нуль-символом в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2693">In .NET, a null character can be embedded in a string.</span></span> <span data-ttu-id="086c0-2694">Если строка содержит один или несколько символов null, они включаются в длину всего строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2694">When a string includes one or more null characters, they are included in the length of the total string.</span></span> <span data-ttu-id="086c0-2695">Например в следующей строке подстроки «abc» и «def» разделены символом null.</span><span class="sxs-lookup"><span data-stu-id="086c0-2695">For example, in the following string, the substrings "abc" and "def" are separated by a null character.</span></span> <span data-ttu-id="086c0-2696"><xref:System.String.Length%2A> Свойство возвращает 7, что означает, что он включает шесть букв, а также нуль-символ.</span><span class="sxs-lookup"><span data-stu-id="086c0-2696">The <xref:System.String.Length%2A> property returns 7, which indicates that it includes the six alphabetic characters as well as the null character.</span></span>  
  
 [!code-cpp[System.String.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/system.string.class.cpp#1)]
 [!code-csharp[System.String.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/System.String.Class.cs#1)]
 [!code-vb[System.String.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/System.String.Class.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2697">В следующем примере демонстрируется <xref:System.String.Length%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="086c0-2697">The following example demonstrates the <xref:System.String.Length%2A> property.</span></span>  
  
 [!code-cpp[string.length#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.length/CPP/length.cpp#1)]
 [!code-csharp[string.length#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.length/CS/length.cs#1)]
 [!code-vb[string.length#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.length/VB/length.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Normalize">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2698">Возвращает новую строку, двоичное представление которой находится в определенной нормализованной форме Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2698">Returns a new string whose binary representation is in a particular Unicode normalization form.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public string Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Normalize();" />
      <MemberSignature Language="F#" Value="member this.Normalize : unit -&gt; string" Usage="string.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-2699">Возвращает новую строку, текстовое значение которой совпадает с данной строкой, а двоичное представление находится в нормализованной форме C Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2699">Returns a new string whose textual value is the same as this string, but whose binary representation is in Unicode normalization form C.</span></span></summary>
        <returns><span data-ttu-id="086c0-2700">Новая нормализованная строка, текстовое значение которой совпадает с данной строкой, а двоичное представление находится в нормализованной форме C Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2700">A new, normalized string whose textual value is the same as this string, but whose binary representation is in normalization form C.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2701">Некоторые символы Юникода, имеют несколько эквивалентных двоичных представлений, состоящий из объединения наборов и/или составные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2701">Some Unicode characters have multiple equivalent binary representations consisting of sets of combining and/or composite Unicode characters.</span></span> <span data-ttu-id="086c0-2702">Например любой из следующих кодовых точек может представлять имя символа «ắ»:</span><span class="sxs-lookup"><span data-stu-id="086c0-2702">For example, any of the following code points can represent the letter "ắ":</span></span>  
  
-   <span data-ttu-id="086c0-2703">U+1EAF</span><span class="sxs-lookup"><span data-stu-id="086c0-2703">U+1EAF</span></span>  
  
-   <span data-ttu-id="086c0-2704">U+0103 U+0301</span><span class="sxs-lookup"><span data-stu-id="086c0-2704">U+0103 U+0301</span></span>  
  
-   <span data-ttu-id="086c0-2705">U+0061 U+0306 U+0301</span><span class="sxs-lookup"><span data-stu-id="086c0-2705">U+0061 U+0306 U+0301</span></span>  
  
 <span data-ttu-id="086c0-2706">Наличие нескольких представлений одного символа затрудняет поиск, сортировка, сопоставления и других операций.</span><span class="sxs-lookup"><span data-stu-id="086c0-2706">The existence of multiple representations for a single character complicates searching, sorting, matching, and other operations.</span></span>  
  
 <span data-ttu-id="086c0-2707">В стандарте Юникод определяет процесс, называемый нормализация, которая возвращает одно двоичное представление, при наличии нескольких эквивалентных представлений символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2707">The Unicode standard defines a process called normalization that returns one binary representation when given any of the equivalent binary representations of a character.</span></span> <span data-ttu-id="086c0-2708">Нормализация может выполняться с использованием нескольких алгоритмов, вызывается формы нормализации, которые следуют различным правилам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2708">Normalization can be performed with several algorithms, called normalization forms, that obey different rules.</span></span> <span data-ttu-id="086c0-2709">Платформа .NET поддерживает четырех форм (C, D, KC и KD), которые определены в стандарте Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2709">.NET supports the four normalization forms (C, D, KC, and KD) that are defined by the Unicode standard.</span></span> <span data-ttu-id="086c0-2710">Если две строки представлены в той же форме нормализации, их можно проверять с помощью порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-2710">When two strings are represented in the same normalization form, they can be compared by using ordinal comparison.</span></span>  
  
 <span data-ttu-id="086c0-2711">Для нормализации и сравнивают две строки, сделайте следующее:</span><span class="sxs-lookup"><span data-stu-id="086c0-2711">To normalize and compare two strings, do the following:</span></span>  
  
1.  <span data-ttu-id="086c0-2712">Получите строки для сравнения из источника входных данных, например файл или устройство ввода пользователя.</span><span class="sxs-lookup"><span data-stu-id="086c0-2712">Obtain the strings to be compared from an input source, such as a file or a user input device.</span></span>  
  
2.  <span data-ttu-id="086c0-2713">Вызовите <xref:System.String.Normalize> метод для строки следует нормализовать в нормализованной форме c Юникода</span><span class="sxs-lookup"><span data-stu-id="086c0-2713">Call the <xref:System.String.Normalize> method to normalize the strings to normalization form C.</span></span>  
  
3.  <span data-ttu-id="086c0-2714">Для сравнения двух строк, вызвать метод, поддерживающий сравнение строк по порядковому номеру, такие как <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> метод и укажите в качестве параметра <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> или <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> как <xref:System.StringComparison> аргумент.</span><span class="sxs-lookup"><span data-stu-id="086c0-2714">To compare two strings, call a method that supports ordinal string comparison, such as the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, and supply a value of <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> as the <xref:System.StringComparison> argument.</span></span> <span data-ttu-id="086c0-2715">Чтобы сортировать массив нормализованными строками, передайте `comparer` значение <xref:System.StringComparer.Ordinal%2A?displayProperty=nameWithType> или <xref:System.StringComparer.OrdinalIgnoreCase%2A?displayProperty=nameWithType> в соответствующую перегрузку <xref:System.Array.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2715">To sort an array of normalized strings, pass a `comparer` value of <xref:System.StringComparer.Ordinal%2A?displayProperty=nameWithType> or <xref:System.StringComparer.OrdinalIgnoreCase%2A?displayProperty=nameWithType> to an appropriate overload of <xref:System.Array.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
4.  <span data-ttu-id="086c0-2716">Выведите строки в сортировку на выводе на основе порядка, указанного на предыдущем шаге.</span><span class="sxs-lookup"><span data-stu-id="086c0-2716">Emit the strings in the sorted output based on the order indicated by the previous step.</span></span>  
  
 <span data-ttu-id="086c0-2717">Описание поддерживаемых формы нормализации Юникода, см. в разделе <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2717">For a description of supported Unicode normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2718">Следующий пример нормализация строкового типа к каждому из четырех форм нормализации, строки были нормализованы по форме нормализации, указанной, а затем список кодовых точек в нормализованную строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2718">The following example normalizes a string to each of four normalization forms, confirms the string was normalized to the specified normalization form, then lists the code points in the normalized string.</span></span>  
  
 [!code-cpp[string.normalize#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.normalize/CPP/norm.cpp#1)]
 [!code-csharp[string.normalize#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.normalize/CS/norm.cs#1)]
 [!code-vb[string.normalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.normalize/VB/norm.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2719">Текущий экземпляр содержит недопустимые символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2719">The current instance contains invalid Unicode characters.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2720"><see cref="Overload:System.String.IsNormalized" /> Возвращает метод <see langword="false" /> как только он встречает первый символ, не было нормализовано в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2720">The <see cref="Overload:System.String.IsNormalized" /> method returns <see langword="false" /> as soon as it encounters the first non-normalized character in a string.</span></span> <span data-ttu-id="086c0-2721">Таким образом, если строка содержит символы, не было нормализовано следуют недопустимые символы Юникода, <see cref="Overload:System.String.Normalize" /> метод вызывает исключение <see cref="T:System.ArgumentException" /> несмотря на то что <see cref="Overload:System.String.IsNormalized" /> возвращает <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2721">Therefore, if a string contains non-normalized characters followed by invalid Unicode characters, the <see cref="Overload:System.String.Normalize" /> method will throw an <see cref="T:System.ArgumentException" /> although <see cref="Overload:System.String.IsNormalized" /> returns <see langword="false" />.</span></span></para></block>
        <altmember cref="M:System.String.IsNormalized" />
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public string Normalize (System.Text.NormalizationForm normalizationForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Normalize(valuetype System.Text.NormalizationForm normalizationForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Normalize(System.Text.NormalizationForm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Normalize(System::Text::NormalizationForm normalizationForm);" />
      <MemberSignature Language="F#" Value="member this.Normalize : System.Text.NormalizationForm -&gt; string" Usage="string.Normalize normalizationForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="normalizationForm"><span data-ttu-id="086c0-2722">Форма нормализации Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2722">A Unicode normalization form.</span></span></param>
        <summary><span data-ttu-id="086c0-2723">Возвращает новую строку, текстовое значение которой совпадает с данной строкой, а двоичное представление находится в заданной нормализованной форме Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2723">Returns a new string whose textual value is the same as this string, but whose binary representation is in the specified Unicode normalization form.</span></span></summary>
        <returns><span data-ttu-id="086c0-2724">Новая строка, текстовое значение которой совпадает с данной строкой, а двоичное представление находится в форме нормализации, заданной в параметре <paramref name="normalizationForm" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2724">A new string whose textual value is the same as this string, but whose binary representation is in the normalization form specified by the <paramref name="normalizationForm" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2725">Некоторые символы Юникода, имеют несколько эквивалентных двоичных представлений, состоящий из объединения наборов и/или составные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2725">Some Unicode characters have multiple equivalent binary representations consisting of sets of combining and/or composite Unicode characters.</span></span> <span data-ttu-id="086c0-2726">Наличие нескольких представлений одного символа затрудняет поиск, сортировка, сопоставления и других операций.</span><span class="sxs-lookup"><span data-stu-id="086c0-2726">The existence of multiple representations for a single character complicates searching, sorting, matching, and other operations.</span></span>  
  
 <span data-ttu-id="086c0-2727">В стандарте Юникод определяет процесс, называемый нормализация, которая возвращает одно двоичное представление, при наличии нескольких эквивалентных представлений символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2727">The Unicode standard defines a process called normalization that returns one binary representation when given any of the equivalent binary representations of a character.</span></span> <span data-ttu-id="086c0-2728">Нормализация может выполняться с использованием нескольких алгоритмов, вызывается формы нормализации, которые следуют различным правилам.</span><span class="sxs-lookup"><span data-stu-id="086c0-2728">Normalization can be performed with several algorithms, called normalization forms, that obey different rules.</span></span> <span data-ttu-id="086c0-2729">Платформа .NET поддерживает четырех форм (C, D, KC и KD), которые определены в стандарте Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2729">.NET supports the four normalization forms (C, D, KC, and KD) that are defined by the Unicode standard.</span></span> <span data-ttu-id="086c0-2730">Если две строки представлены в той же форме нормализации, их можно проверять с помощью порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-2730">When two strings are represented in the same normalization form, they can be compared by using ordinal comparison.</span></span>  
  
 <span data-ttu-id="086c0-2731">Для нормализации и сравнивают две строки, сделайте следующее:</span><span class="sxs-lookup"><span data-stu-id="086c0-2731">To normalize and compare two strings, do the following:</span></span>  
  
1.  <span data-ttu-id="086c0-2732">Получите строки для сравнения из источника входных данных, например файл или устройство ввода пользователя.</span><span class="sxs-lookup"><span data-stu-id="086c0-2732">Obtain the strings to be compared from an input source, such as a file or a user input device.</span></span>  
  
2.  <span data-ttu-id="086c0-2733">Вызовите <xref:System.String.Normalize%28System.Text.NormalizationForm%29> метод для нормализации строк в указанной форму.</span><span class="sxs-lookup"><span data-stu-id="086c0-2733">Call the <xref:System.String.Normalize%28System.Text.NormalizationForm%29> method to normalize the strings to a specified normalization form.</span></span>  
  
3.  <span data-ttu-id="086c0-2734">Для сравнения двух строк, вызвать метод, поддерживающий сравнение строк по порядковому номеру, такие как <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> метод и укажите в качестве параметра <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> или <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> как <xref:System.StringComparison> аргумент.</span><span class="sxs-lookup"><span data-stu-id="086c0-2734">To compare two strings, call a method that supports ordinal string comparison, such as the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, and supply a value of <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> as the <xref:System.StringComparison> argument.</span></span> <span data-ttu-id="086c0-2735">Чтобы сортировать массив нормализованными строками, передайте `comparer` значение <xref:System.StringComparer.Ordinal%2A?displayProperty=nameWithType> или <xref:System.StringComparer.OrdinalIgnoreCase%2A?displayProperty=nameWithType> в соответствующую перегрузку <xref:System.Array.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2735">To sort an array of normalized strings, pass a `comparer` value of <xref:System.StringComparer.Ordinal%2A?displayProperty=nameWithType> or <xref:System.StringComparer.OrdinalIgnoreCase%2A?displayProperty=nameWithType> to an appropriate overload of <xref:System.Array.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
4.  <span data-ttu-id="086c0-2736">Выведите строки в сортировку на выводе на основе порядка, указанного на предыдущем шаге.</span><span class="sxs-lookup"><span data-stu-id="086c0-2736">Emit the strings in the sorted output based on the order indicated by the previous step.</span></span>  
  
 <span data-ttu-id="086c0-2737">Описание поддерживаемых формы нормализации Юникода, см. в разделе <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2737">For a description of supported Unicode normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2738">Следующий пример нормализация строкового типа к каждому из четырех форм нормализации, строки были нормализованы по форме нормализации, указанной, а затем список кодовых точек в нормализованную строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2738">The following example normalizes a string to each of four normalization forms, confirms the string was normalized to the specified normalization form, then lists the code points in the normalized string.</span></span>  
  
 [!code-cpp[string.normalize#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.normalize/CPP/norm.cpp#1)]
 [!code-csharp[string.normalize#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.normalize/CS/norm.cs#1)]
 [!code-vb[string.normalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.normalize/VB/norm.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2739">Текущий экземпляр содержит недопустимые символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2739">The current instance contains invalid Unicode characters.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2740"><see cref="Overload:System.String.IsNormalized" /> Возвращает метод <see langword="false" /> как только он встречает первый символ, не было нормализовано в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2740">The <see cref="Overload:System.String.IsNormalized" /> method returns <see langword="false" /> as soon as it encounters the first non-normalized character in a string.</span></span> <span data-ttu-id="086c0-2741">Таким образом, если строка содержит символы, не было нормализовано следуют недопустимые символы Юникода, <see cref="Overload:System.String.Normalize" /> метод может генерировать <see cref="T:System.ArgumentException" /> несмотря на то что <see cref="Overload:System.String.IsNormalized" /> возвращает <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2741">Therefore, if a string contains non-normalized characters followed by invalid Unicode characters, the <see cref="Overload:System.String.Normalize" /> method may throw an <see cref="T:System.ArgumentException" /> although <see cref="Overload:System.String.IsNormalized" /> returns <see langword="false" />.</span></span></para></block>
        <altmember cref="M:System.String.IsNormalized" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (string a, string b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(string a, string b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.op_Equality(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As String, b As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::String ^ a, System::String ^ b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : string * string -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.String" />
        <Parameter Name="b" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="086c0-2742">Первая сравниваемая строка или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2742">The first string to compare, or <see langword="null" />.</span></span></param>
        <param name="b"><span data-ttu-id="086c0-2743">Вторая сравниваемая строка или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2743">The second string to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="086c0-2744">Определяет, равны ли значения двух указанных строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-2744">Determines whether two specified strings have the same value.</span></span></summary>
        <returns><span data-ttu-id="086c0-2745">Значение <see langword="true" />, если значение параметра <paramref name="a" /> совпадает со значением <paramref name="b" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2745"><see langword="true" /> if the value of <paramref name="a" /> is the same as the value of <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2746"><xref:System.String.op_Equality%2A> Метод определяет операцию от оператора равенства для <xref:System.String> класса.</span><span class="sxs-lookup"><span data-stu-id="086c0-2746">The <xref:System.String.op_Equality%2A> method defines the operation of the equality operator for the <xref:System.String> class.</span></span> <span data-ttu-id="086c0-2747">Он позволяет коду, как показано в разделе "Пример".</span><span class="sxs-lookup"><span data-stu-id="086c0-2747">It enables code such as that shown in the Example section.</span></span> <span data-ttu-id="086c0-2748">Оператор, в свою очередь, вызывает статический <xref:System.String.Equals%28System.String%2CSystem.String%29> метод, который выполняет порядковое сравнение (с учетом регистра и без учета языка и региональных параметров).</span><span class="sxs-lookup"><span data-stu-id="086c0-2748">The operator, in turn, calls the static <xref:System.String.Equals%28System.String%2CSystem.String%29> method, which performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2749">Компилятор Visual Basic не разрешает оператора равенства как вызов <xref:System.String.op_Equality%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2749">The Visual Basic compiler does not resolve the equality operator as a call to the <xref:System.String.op_Equality%2A> method.</span></span> <span data-ttu-id="086c0-2750">Вместо этого оператор равенства создает оболочку для вызова <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2750">Instead, the equality operator wraps a call to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2751">Ниже приведен пример оператора равенства.</span><span class="sxs-lookup"><span data-stu-id="086c0-2751">The following example demonstrates the equality operator.</span></span>  
  
 [!code-cpp[system.string.equality#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Equality/CPP/equalityop.cpp#1)]
 [!code-csharp[system.string.equality#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Equality/CS/equalityop.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlySpan&lt;char&gt; (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlySpan`1&lt;char&gt; op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.op_Implicit(System.String)~System.ReadOnlySpan{System.Char}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlySpan&lt;char&gt;(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.string.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (string a, string b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(string a, string b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.op_Inequality(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As String, b As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::String ^ a, System::String ^ b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : string * string -&gt; bool" Usage="System.string.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.String" />
        <Parameter Name="b" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="086c0-2752">Первая сравниваемая строка или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2752">The first string to compare, or <see langword="null" />.</span></span></param>
        <param name="b"><span data-ttu-id="086c0-2753">Вторая сравниваемая строка или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2753">The second string to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="086c0-2754">Определяет, различаются ли значения двух указанных строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-2754">Determines whether two specified strings have different values.</span></span></summary>
        <returns><span data-ttu-id="086c0-2755">Значение <see langword="true" />, если значение <paramref name="a" /> отличается от значения <paramref name="b" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2755"><see langword="true" /> if the value of <paramref name="a" /> is different from the value of <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2756"><xref:System.String.op_Inequality%2A> Метод определяет операцию неравенства для <xref:System.String> класса.</span><span class="sxs-lookup"><span data-stu-id="086c0-2756">The <xref:System.String.op_Inequality%2A> method defines the operation of the inequality operator for the <xref:System.String> class.</span></span>   <span data-ttu-id="086c0-2757">Он позволяет коду, подобном показанному в подразделе «примеры».</span><span class="sxs-lookup"><span data-stu-id="086c0-2757">It enables code such as that shown in the Examples section.</span></span>  
  
 <span data-ttu-id="086c0-2758"><xref:System.String.op_Inequality%2A> Оператор, в свою очередь, вызывает статический <xref:System.String.Equals%28System.String%2CSystem.String%29> метод, который выполняет порядковое сравнение (с учетом регистра и без учета языка и региональных параметров).</span><span class="sxs-lookup"><span data-stu-id="086c0-2758">The <xref:System.String.op_Inequality%2A> operator in turn calls the static <xref:System.String.Equals%28System.String%2CSystem.String%29> method, which  performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2759">Компилятор Visual Basic не разрешить оператор неравенства, как вызов <xref:System.String.op_Inequality%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2759">The Visual Basic compiler does not resolve the inequality operator as a call to the <xref:System.String.op_Inequality%2A> method.</span></span> <span data-ttu-id="086c0-2760">Вместо этого оператор неравенства создает оболочку для вызова <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2760">Instead, the inequality operator wraps a call to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2761">Ниже приведен пример оператора неравенства.</span><span class="sxs-lookup"><span data-stu-id="086c0-2761">The following example demonstrates the inequality operator.</span></span>  
  
 [!code-cpp[system.string.inequality#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Inequality/CPP/inequalityop.cpp#1)]
 [!code-csharp[system.string.inequality#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Inequality/CS/inequalityop.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PadLeft">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2762">Возвращает новую строку указанной длины, в которой начало текущей строки заполняется пробелами или указанным знаком Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2762">Returns a new string of a specified length in which the beginning of the current string is padded with spaces or with a specified Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PadLeft">
      <MemberSignature Language="C#" Value="public string PadLeft (int totalWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadLeft(int32 totalWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.PadLeft(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadLeft (totalWidth As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadLeft(int totalWidth);" />
      <MemberSignature Language="F#" Value="member this.PadLeft : int -&gt; string" Usage="string.PadLeft totalWidth" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="totalWidth"><span data-ttu-id="086c0-2763">Количество знаков в полученной строке, равное числу исходных знаков плюс некоторое количество добавленных для заполнения знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2763">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</span></span></param>
        <summary><span data-ttu-id="086c0-2764">Возвращает новую строку, в которой знаки данного экземпляра выровнены по правому краю путем добавления слева символов-разделителей до указанной общей длины.</span><span class="sxs-lookup"><span data-stu-id="086c0-2764">Returns a new string that right-aligns the characters in this instance by padding them with spaces on the left, for a specified total length.</span></span></summary>
        <returns><span data-ttu-id="086c0-2765">Новая строка, эквивалентная данному экземпляру, но с выравниванием по правому краю и с добавленными слева пробелами, необходимыми для достижения длины <paramref name="totalWidth" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2765">A new string that is equivalent to this instance, but right-aligned and padded on the left with as many spaces as needed to create a length of <paramref name="totalWidth" />.</span></span> <span data-ttu-id="086c0-2766">Однако если значение параметра <paramref name="totalWidth" /> меньше длины данного экземпляра, метод возвращает ссылку на имеющийся экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2766">However, if <paramref name="totalWidth" /> is less than the length of this instance, the method returns a reference to the existing instance.</span></span> <span data-ttu-id="086c0-2767">Если значение параметра <paramref name="totalWidth" /> равно длине данного экземпляра, метод возвращает новую строку, идентичную данному экземпляру.</span><span class="sxs-lookup"><span data-stu-id="086c0-2767">If <paramref name="totalWidth" /> is equal to the length of this instance, the method returns a new string that is identical to this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2768">Пробел в Юникоде определен как шестнадцатеричное 0x0020.</span><span class="sxs-lookup"><span data-stu-id="086c0-2768">A Unicode space is defined as hexadecimal 0x0020.</span></span>  
  
 <span data-ttu-id="086c0-2769"><xref:System.String.PadLeft%28System.Int32%29> Метод дополняет начало возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2769">The <xref:System.String.PadLeft%28System.Int32%29> method pads the beginning of the returned string.</span></span> <span data-ttu-id="086c0-2770">Это означает, что при использовании с языками справа налево, он дополняет правой части строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2770">This means that, when used with right-to-left languages, it pads the right portion of the string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2771">Если <xref:System.String.PadLeft%2A> метод дополняет текущий экземпляр с символы-разделители, этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2771">If the <xref:System.String.PadLeft%2A> method pads the current instance with white-space characters, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-2772">Вместо этого возвращается новая строка, дополняется начальные пробелы, чтобы общая длина строки составляет `totalWidth` символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2772">Instead, it returns a new string that is padded with leading white space so that its total length is `totalWidth` characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2773">В следующем примере демонстрируется <xref:System.String.PadLeft%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2773">The following example demonstrates the <xref:System.String.PadLeft%2A> method.</span></span>  
  
 [!code-cpp[Classic String.PadLeft Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic String.PadLeft Example/CPP/source.cpp#1)]
 [!code-csharp[Classic String.PadLeft Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.PadLeft Example/CS/source.cs#1)]
 [!code-vb[Classic String.PadLeft Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.PadLeft Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2774">Значение параметра <paramref name="totalWidth" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2774"><paramref name="totalWidth" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.PadRight(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="PadLeft">
      <MemberSignature Language="C#" Value="public string PadLeft (int totalWidth, char paddingChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadLeft(int32 totalWidth, char paddingChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.PadLeft(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadLeft (totalWidth As Integer, paddingChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadLeft(int totalWidth, char paddingChar);" />
      <MemberSignature Language="F#" Value="member this.PadLeft : int * char -&gt; string" Usage="string.PadLeft (totalWidth, paddingChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
        <Parameter Name="paddingChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="totalWidth"><span data-ttu-id="086c0-2775">Количество знаков в полученной строке, равное числу исходных знаков плюс некоторое количество добавленных для заполнения знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2775">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</span></span></param>
        <param name="paddingChar"><span data-ttu-id="086c0-2776">Добавляемый в качестве заполнителя знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2776">A Unicode padding character.</span></span></param>
        <summary><span data-ttu-id="086c0-2777">Возвращает новую строку, в которой знаки данного экземпляра выровнены по правому краю путем добавления слева пробелов или указанного знака Юникода до указанной общей длины.</span><span class="sxs-lookup"><span data-stu-id="086c0-2777">Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total length.</span></span></summary>
        <returns><span data-ttu-id="086c0-2778">Новая строка, эквивалентная данному экземпляру, но с выравниванием по правому краю и с добавленными слева знаками <paramref name="paddingChar" />, необходимыми для достижения длины <paramref name="totalWidth" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2778">A new string that is equivalent to this instance, but right-aligned and padded on the left with as many <paramref name="paddingChar" /> characters as needed to create a length of <paramref name="totalWidth" />.</span></span> <span data-ttu-id="086c0-2779">Однако если значение параметра <paramref name="totalWidth" /> меньше длины данного экземпляра, метод возвращает ссылку на имеющийся экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2779">However, if <paramref name="totalWidth" /> is less than the length of this instance, the method returns a reference to the existing instance.</span></span> <span data-ttu-id="086c0-2780">Если значение параметра <paramref name="totalWidth" /> равно длине данного экземпляра, метод возвращает новую строку, идентичную данному экземпляру.</span><span class="sxs-lookup"><span data-stu-id="086c0-2780">If <paramref name="totalWidth" /> is equal to the length of this instance, the method returns a new string that is identical to this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2781"><xref:System.String.PadLeft%28System.Int32%2CSystem.Char%29> Метод дополняет начало возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2781">The <xref:System.String.PadLeft%28System.Int32%2CSystem.Char%29> method pads the beginning of the returned string.</span></span> <span data-ttu-id="086c0-2782">Это означает, что при использовании с языками справа налево, он дополняет правой части строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2782">This means that, when used with right-to-left languages, it pads the right portion of the string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2783">Если <xref:System.String.PadLeft%2A> метод дополняет текущий экземпляр с символы-разделители, этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2783">If the <xref:System.String.PadLeft%2A> method pads the current instance with white-space characters, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-2784">Вместо этого возвращается новая строка, дополняется стоящими в начале `paddingChar` символами, чтобы общая длина строки составляет `totalWidth` символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2784">Instead, it returns a new string that is padded with leading `paddingChar` characters so that its total length is `totalWidth` characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2785">В следующем примере демонстрируется <xref:System.String.PadLeft%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2785">The following example demonstrates the <xref:System.String.PadLeft%2A> method.</span></span>  
  
 [!code-cpp[Classic String.PadLeft1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic String.PadLeft1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic String.PadLeft1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.PadLeft1 Example/CS/source.cs#1)]
 [!code-vb[Classic String.PadLeft1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.PadLeft1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2786">Значение параметра <paramref name="totalWidth" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2786"><paramref name="totalWidth" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.PadRight(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PadRight">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2787">Возвращает новую строку указанной длины, в которой конец текущей строки заполняется символами-разделителями или указанным знаком Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2787">Returns a new string of a specified length in which the end of the current string is padded with spaces or with a specified Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PadRight">
      <MemberSignature Language="C#" Value="public string PadRight (int totalWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadRight(int32 totalWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.PadRight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadRight (totalWidth As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadRight(int totalWidth);" />
      <MemberSignature Language="F#" Value="member this.PadRight : int -&gt; string" Usage="string.PadRight totalWidth" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="totalWidth"><span data-ttu-id="086c0-2788">Количество знаков в полученной строке, равное числу исходных знаков плюс некоторое количество добавленных для заполнения знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2788">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</span></span></param>
        <summary><span data-ttu-id="086c0-2789">Возвращает новую строку, в которой знаки данной строки выровнены по левому краю путем добавления справа пробелов до указанной общей длины.</span><span class="sxs-lookup"><span data-stu-id="086c0-2789">Returns a new string that left-aligns the characters in this string by padding them with spaces on the right, for a specified total length.</span></span></summary>
        <returns><span data-ttu-id="086c0-2790">Новая строка, эквивалентная данному экземпляру, но с выравниванием по левому краю и с добавленными справа пробелами, необходимыми для достижения длины <paramref name="totalWidth" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2790">A new string that is equivalent to this instance, but left-aligned and padded on the right with as many spaces as needed to create a length of <paramref name="totalWidth" />.</span></span> <span data-ttu-id="086c0-2791">Однако если значение параметра <paramref name="totalWidth" /> меньше длины данного экземпляра, метод возвращает ссылку на имеющийся экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2791">However, if <paramref name="totalWidth" /> is less than the length of this instance, the method returns a reference to the existing instance.</span></span> <span data-ttu-id="086c0-2792">Если значение параметра <paramref name="totalWidth" /> равно длине данного экземпляра, метод возвращает новую строку, идентичную данному экземпляру.</span><span class="sxs-lookup"><span data-stu-id="086c0-2792">If <paramref name="totalWidth" /> is equal to the length of this instance, the method returns a new string that is identical to this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2793">Пробел в Юникоде определен как шестнадцатеричное 0x0020.</span><span class="sxs-lookup"><span data-stu-id="086c0-2793">A Unicode space is defined as hexadecimal 0x0020.</span></span>  
  
 <span data-ttu-id="086c0-2794"><xref:System.String.PadRight%28System.Int32%29> Метод дополняет конец возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2794">The <xref:System.String.PadRight%28System.Int32%29> method pads the end of the returned string.</span></span> <span data-ttu-id="086c0-2795">Это означает, что при использовании с языками справа налево, строка дополняется пробелами левой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2795">This means that, when used with right-to-left languages, it pads the left portion of the string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2796">Если <xref:System.String.PadRight%2A> метод дополняет текущий экземпляр с символы-разделители, этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2796">If the <xref:System.String.PadRight%2A> method pads the current instance with white-space characters, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-2797">Вместо этого возвращается новая строка, дополняется конечными пробелами, таким образом, общая длина `totalWidth` символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2797">Instead, it returns a new string that is padded with trailing white space so that its total length is `totalWidth` characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2798">В следующем примере демонстрируется <xref:System.String.PadRight%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2798">The following example demonstrates the <xref:System.String.PadRight%2A> method.</span></span>  
  
 [!code-cpp[Classic String.PadRight Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic String.PadRight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic String.PadRight Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.PadRight Example/cs/source.cs#1)]
 [!code-vb[Classic String.PadRight Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.PadRight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2799">Значение параметра <paramref name="totalWidth" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2799"><paramref name="totalWidth" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.PadLeft(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="PadRight">
      <MemberSignature Language="C#" Value="public string PadRight (int totalWidth, char paddingChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadRight(int32 totalWidth, char paddingChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.PadRight(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadRight (totalWidth As Integer, paddingChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadRight(int totalWidth, char paddingChar);" />
      <MemberSignature Language="F#" Value="member this.PadRight : int * char -&gt; string" Usage="string.PadRight (totalWidth, paddingChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
        <Parameter Name="paddingChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="totalWidth"><span data-ttu-id="086c0-2800">Количество знаков в полученной строке, равное числу исходных знаков плюс некоторое количество добавленных для заполнения знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2800">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</span></span></param>
        <param name="paddingChar"><span data-ttu-id="086c0-2801">Добавляемый в качестве заполнителя знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2801">A Unicode padding character.</span></span></param>
        <summary><span data-ttu-id="086c0-2802">Возвращает новую строку, в которой знаки данной строки выровнены по левому краю путем добавления справа пробелов или указанного знака Юникода до указанной общей длины.</span><span class="sxs-lookup"><span data-stu-id="086c0-2802">Returns a new string that left-aligns the characters in this string by padding them on the right with a specified Unicode character, for a specified total length.</span></span></summary>
        <returns><span data-ttu-id="086c0-2803">Новая строка, эквивалентная данному экземпляру, но с выравниванием по левому краю и с добавленными справа знаками <paramref name="paddingChar" />, необходимыми для достижения длины <paramref name="totalWidth" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2803">A new string that is equivalent to this instance, but left-aligned and padded on the right with as many <paramref name="paddingChar" /> characters as needed to create a length of <paramref name="totalWidth" />.</span></span> <span data-ttu-id="086c0-2804">Однако если значение параметра <paramref name="totalWidth" /> меньше длины данного экземпляра, метод возвращает ссылку на имеющийся экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2804">However, if <paramref name="totalWidth" /> is less than the length of this instance, the method returns a reference to the existing instance.</span></span> <span data-ttu-id="086c0-2805">Если значение параметра <paramref name="totalWidth" /> равно длине данного экземпляра, метод возвращает новую строку, идентичную данному экземпляру.</span><span class="sxs-lookup"><span data-stu-id="086c0-2805">If <paramref name="totalWidth" /> is equal to the length of this instance, the method returns a new string that is identical to this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2806"><xref:System.String.PadRight%28System.Int32%2CSystem.Char%29> Метод дополняет конец возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2806">The <xref:System.String.PadRight%28System.Int32%2CSystem.Char%29> method pads the end of the returned string.</span></span> <span data-ttu-id="086c0-2807">Это означает, что при использовании с языками справа налево, строка дополняется пробелами левой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2807">This means that, when used with right-to-left languages, it pads the left portion of the string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2808">Если <xref:System.String.PadRight%2A> метод дополняет текущий экземпляр с символы-разделители, этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2808">If the <xref:System.String.PadRight%2A> method pads the current instance with white-space characters, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-2809">Вместо этого возвращается новая строка, дополняется конечными `paddingChar` символами, чтобы общая длина строки составляет `totalWidth` символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2809">Instead, it returns a new string that is padded with trailing `paddingChar` characters so that its total length is `totalWidth` characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2810">В следующем примере демонстрируется <xref:System.String.PadRight%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2810">The following example demonstrates the <xref:System.String.PadRight%2A> method.</span></span>  
  
 [!code-cpp[Classic String.PadRight1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic String.PadRight1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic String.PadRight1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.PadRight1 Example/cs/source.cs#1)]
 [!code-vb[Classic String.PadRight1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.PadRight1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2811">Значение параметра <paramref name="totalWidth" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2811"><paramref name="totalWidth" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.PadLeft(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2812">Возвращает новую строку, в которой удалено указанное число знаков текущей строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2812">Returns a new string in which a specified number of characters from the current string are deleted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public string Remove (int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Remove(int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (startIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Remove(int startIndex);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; string" Usage="string.Remove startIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="086c0-2813">Отсчитываемая от нуля позиция, с которой начинается удаление знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2813">The zero-based position to begin deleting characters.</span></span></param>
        <summary><span data-ttu-id="086c0-2814">Возвращает новую строку, в которой были удалены все символы, начиная с указанной позиции и до конца в текущем экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-2814">Returns a new string in which all the characters in the current instance, beginning at a specified position and continuing through the last position, have been deleted.</span></span></summary>
        <returns><span data-ttu-id="086c0-2815">Новая строка, эквивалентная данной строке за минусом удаленных знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2815">A new string that is equivalent to this string except for the removed characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2816">В [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], строки отсчитываются от нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2816">In the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], strings are zero-based.</span></span> <span data-ttu-id="086c0-2817">Значение `startIndex` параметра варьируются от 0 до 1 или меньше длины экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2817">The value of the `startIndex` parameter can range from zero to one less than the length of the string instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2818">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2818">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-2819">Вместо этого возвращается новая строка в какие все символы с позиции `startIndex` в конец исходной строки будут удалены.</span><span class="sxs-lookup"><span data-stu-id="086c0-2819">Instead, it returns a new string in which all characters from position `startIndex` to the end of the original string have been removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2820">В следующем примере демонстрируется <xref:System.String.Remove%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2820">The following example demonstrates the <xref:System.String.Remove%2A> method.</span></span> <span data-ttu-id="086c0-2821">Так далее до конца удаляет весь текст, начиная с заданного индекса и до конца строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2821">The next-to-last case removes all text starting from the specified index through the end of the string.</span></span> <span data-ttu-id="086c0-2822">В последнем случае удаляются трех символов, начиная с указанного индекса.</span><span class="sxs-lookup"><span data-stu-id="086c0-2822">The last case removes three characters starting from the specified index.</span></span>  
  
 [!code-cpp[string.remove#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.remove/CPP/r.cpp#1)]
 [!code-csharp[string.remove#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.remove/CS/r.cs#1)]
 [!code-vb[string.remove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.remove/VB/r.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2823">Значение параметра <paramref name="startIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2823"><paramref name="startIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="086c0-2824">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2824">-or-</span></span> 
 <span data-ttu-id="086c0-2825"><paramref name="startIndex" /> указывает положение, которое находится за пределами этой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2825"><paramref name="startIndex" /> specifies a position that is not within this string.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public string Remove (int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Remove(int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Remove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (startIndex As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Remove(int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Remove : int * int -&gt; string" Usage="string.Remove (startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="086c0-2826">Отсчитываемая от нуля позиция, с которой начинается удаление знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2826">The zero-based position to begin deleting characters.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2827">Число символов для удаления.</span><span class="sxs-lookup"><span data-stu-id="086c0-2827">The number of characters to delete.</span></span></param>
        <summary><span data-ttu-id="086c0-2828">Возвращает новую строку, в которой было удалено указанное число символов в указанной позиции.</span><span class="sxs-lookup"><span data-stu-id="086c0-2828">Returns a new string in which a specified number of characters in the current instance beginning at a specified position have been deleted.</span></span></summary>
        <returns><span data-ttu-id="086c0-2829">Новая строка, эквивалентная данному экземпляру за минусом удаленных знаков.</span><span class="sxs-lookup"><span data-stu-id="086c0-2829">A new string that is equivalent to this instance except for the removed characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2830">В [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], строки отсчитываются от нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2830">In the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], strings are zero-based.</span></span> <span data-ttu-id="086c0-2831">Значение `startIndex` параметра варьируются от 0 до 1 или меньше длины экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2831">The value of the `startIndex` parameter can range from zero to one less than the length of the string instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2832">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2832">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-2833">Вместо этого он возвращает новую строку, в котором определяется количество символов `count` параметра были удалены.</span><span class="sxs-lookup"><span data-stu-id="086c0-2833">Instead, it returns a new string in which the number of characters specified by the `count` parameter have been removed.</span></span> <span data-ttu-id="086c0-2834">Символы удаляются в позиции, заданной параметром `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2834">The characters are removed at the position specified by `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2835">Ниже приведен пример, как можно удалить отчество из полного имени.</span><span class="sxs-lookup"><span data-stu-id="086c0-2835">The following example demonstrates how you can remove the middle name from a complete name.</span></span>  
  
 [!code-cpp[stringremove#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringremove/CPP/stringremove.cpp#1)]
 [!code-csharp[stringremove#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringremove/CS/stringremove.cs#1)]
 [!code-vb[stringremove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringremove/VB/stringremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-2836">Значение параметра <paramref name="startIndex" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-2836">Either <paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="086c0-2837">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-2837">-or-</span></span> 
 <span data-ttu-id="086c0-2838"><paramref name="startIndex" /> плюс <paramref name="count" /> указывает позицию за пределами этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2838"><paramref name="startIndex" /> plus <paramref name="count" /> specify a position outside this instance.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2839">Возвращает новую строку, в которой все вхождения заданного знака Юникода или <see cref="T:System.String" /> в текущей строке заменены другим заданным знаком Юникода или <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2839">Returns a new string in which all occurrences of a specified Unicode character or <see cref="T:System.String" /> in the current string are replaced with another specified Unicode character or <see cref="T:System.String" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (char oldChar, char newChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(char oldChar, char newChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Replace(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldChar As Char, newChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(char oldChar, char newChar);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * char -&gt; string" Usage="string.Replace (oldChar, newChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChar" Type="System.Char" />
        <Parameter Name="newChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="oldChar"><span data-ttu-id="086c0-2840">Заменяемый знак Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2840">The Unicode character to be replaced.</span></span></param>
        <param name="newChar"><span data-ttu-id="086c0-2841">Знак Юникода для замены всех обнаруженных вхождений <paramref name="oldChar" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2841">The Unicode character to replace all occurrences of <paramref name="oldChar" />.</span></span></param>
        <summary><span data-ttu-id="086c0-2842">Возвращает новую строку, в которой все вхождения заданного знака Юникода в текущем экземпляре заменены другим заданным знаком Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2842">Returns a new string in which all occurrences of a specified Unicode character in this instance are replaced with another specified Unicode character.</span></span></summary>
        <returns><span data-ttu-id="086c0-2843">Строка, эквивалентная данному экземпляру, но с тем отличием, что все вхождения <paramref name="oldChar" /> заменены на <paramref name="newChar" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2843">A string that is equivalent to this instance except that all instances of <paramref name="oldChar" /> are replaced with <paramref name="newChar" />.</span></span> <span data-ttu-id="086c0-2844">Если <paramref name="oldChar" /> не обнаружен в текущем экземпляре метод возвращает текущий экземпляр без изменений.</span><span class="sxs-lookup"><span data-stu-id="086c0-2844">If <paramref name="oldChar" /> is not found in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2845">Этот метод выполняет поиск по порядковым номерам (с учетом регистра и без учета языка и региональных параметров) для поиска `oldChar`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2845">This method performs an ordinal (case-sensitive and culture-insensitive) search to find `oldChar`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2846">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2846">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-2847">Вместо этого он возвращает новую строку, в которой все вхождения `oldChar` заменяются `newChar`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2847">Instead, it returns a new string in which all occurrences of `oldChar` are replaced by `newChar`.</span></span>  
  
 <span data-ttu-id="086c0-2848">Так как этот метод возвращает измененной строки, вы можете объединить в цепочку последовательные вызовы <xref:System.String.Replace%2A> метод для выполнения нескольких замены исходной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2848">Because this method returns the modified string, you can chain together successive calls to the <xref:System.String.Replace%2A> method to perform multiple replacements on the original string.</span></span> <span data-ttu-id="086c0-2849">Вызовы методов выполняются слева направо.</span><span class="sxs-lookup"><span data-stu-id="086c0-2849">Method calls are executed from left to right.</span></span> <span data-ttu-id="086c0-2850">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="086c0-2850">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.String.Replace#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.replace/cs/replace2.cs#2)]
 [!code-vb[System.String.Replace#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.replace/vb/replace2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2851">В следующем примере создается список значений с разделителями-запятыми, путем замены пробелов между рядами чисел запятыми.</span><span class="sxs-lookup"><span data-stu-id="086c0-2851">The following example creates a comma separated value list by substituting commas for the blanks between a series of numbers.</span></span>  
  
 [!code-cpp[string.replace1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.replace1/CPP/string.replace1.cpp#1)]
 [!code-csharp[string.replace1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.replace1/CS/string.replace1.cs#1)]
 [!code-vb[string.replace1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.replace1/VB/string.replace1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string oldValue, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string oldValue, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ oldValue, System::String ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; string" Usage="string.Replace (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldValue"><span data-ttu-id="086c0-2852">Строка, которую требуется заменить.</span><span class="sxs-lookup"><span data-stu-id="086c0-2852">The string to be replaced.</span></span></param>
        <param name="newValue"><span data-ttu-id="086c0-2853">Строка для замены всех вхождений <paramref name="oldValue" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2853">The string to replace all occurrences of <paramref name="oldValue" />.</span></span></param>
        <summary><span data-ttu-id="086c0-2854">Возвращает новую строку, в которой все вхождения заданной строки в текущем экземпляре заменены другой заданной строкой.</span><span class="sxs-lookup"><span data-stu-id="086c0-2854">Returns a new string in which all occurrences of a specified string in the current instance are replaced with another specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-2855">Строка, эквивалентная текущей строке, но с тем отличием, что все вхождения <paramref name="oldValue" /> заменены на <paramref name="newValue" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2855">A string that is equivalent to the current string except that all instances of <paramref name="oldValue" /> are replaced with <paramref name="newValue" />.</span></span> <span data-ttu-id="086c0-2856">Если <paramref name="oldValue" /> не обнаружен в текущем экземпляре метод возвращает текущий экземпляр без изменений.</span><span class="sxs-lookup"><span data-stu-id="086c0-2856">If <paramref name="oldValue" /> is not found in the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2857">Если `newValue` — `null`, все вхождения `oldValue` удаляются.</span><span class="sxs-lookup"><span data-stu-id="086c0-2857">If `newValue` is `null`, all occurrences of `oldValue` are removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-2858">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2858">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-2859">Вместо этого он возвращает новую строку, в которой все вхождения `oldValue` заменяются `newValue`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2859">Instead, it returns a new string in which all occurrences of `oldValue` are replaced by `newValue`.</span></span>  
  
 <span data-ttu-id="086c0-2860">Этот метод выполняет поиск по порядковым номерам (с учетом регистра и без учета языка и региональных параметров) для поиска `oldValue`.</span><span class="sxs-lookup"><span data-stu-id="086c0-2860">This method performs an ordinal (case-sensitive and culture-insensitive) search to find `oldValue`.</span></span>  
  
 <span data-ttu-id="086c0-2861">Так как этот метод возвращает измененной строки, вы можете объединить в цепочку последовательные вызовы <xref:System.String.Replace%2A> метод для выполнения нескольких замены исходной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2861">Because this method returns the modified string, you can chain together successive calls to the <xref:System.String.Replace%2A> method to perform multiple replacements on the original string.</span></span> <span data-ttu-id="086c0-2862">Вызовы методов выполняются слева направо.</span><span class="sxs-lookup"><span data-stu-id="086c0-2862">Method calls are executed from left to right.</span></span> <span data-ttu-id="086c0-2863">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="086c0-2863">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.String.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.replace/cs/replace1.cs#1)]
 [!code-vb[System.String.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.replace/vb/replace1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="086c0-2864">В следующем примере показано, как можно использовать <xref:System.String.Replace%2A> способ исправления орфографических ошибок.</span><span class="sxs-lookup"><span data-stu-id="086c0-2864">The following example demonstrates how you can use the <xref:System.String.Replace%2A> method to correct a spelling error.</span></span>  
  
 [!code-cpp[stringreplace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringreplace/CPP/stringreplace.cpp#1)]
 [!code-csharp[stringreplace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringreplace/CS/stringreplace.cs#1)]
 [!code-vb[stringreplace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringreplace/VB/stringreplace.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-2865"><paramref name="oldValue" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2865"><paramref name="oldValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-2866"><paramref name="oldValue" /> является пустой строкой ("").</span><span class="sxs-lookup"><span data-stu-id="086c0-2866"><paramref name="oldValue" /> is the empty string ("").</span></span></exception>
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string oldValue, string newValue, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string oldValue, string newValue, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Replace(System.String,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String, comparisonType As StringComparison) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ oldValue, System::String ^ newValue, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * StringComparison -&gt; string" Usage="string.Replace (oldValue, newValue, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="newValue" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string oldValue, string newValue, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string oldValue, string newValue, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String, ignoreCase As Boolean, culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ oldValue, System::String ^ newValue, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * bool * System.Globalization.CultureInfo -&gt; string" Usage="string.Replace (oldValue, newValue, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="newValue" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Split">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-2867">Возвращает строковый массив, содержащий подстроки данного экземпляра, разделенные элементами заданной строки или массива знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2867">Returns a string array that contains the substrings in this instance that are delimited by elements of a specified string or Unicode character array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2868"><xref:System.String.Split%2A> используется для разбиения на подстроки в строку с разделителями.</span><span class="sxs-lookup"><span data-stu-id="086c0-2868"><xref:System.String.Split%2A> is used to break a delimited string into substrings.</span></span> <span data-ttu-id="086c0-2869">Массив символов можно использовать для указания ноль, один или несколько символы-разделители ( <xref:System.String.Split%28System.Char%5B%5D%29> метод), или массив символов можно использовать для указания ноль, один или несколько разделителей строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-2869">You can use either a character array to specify zero, one, or multiple delimiting characters (the <xref:System.String.Split%28System.Char%5B%5D%29> method), or you can use a character array to specify zero, one, or multiple delimiting strings.</span></span> <span data-ttu-id="086c0-2870">Перегруженные версии <xref:System.String.Split%2A> метод позволяют ограничить количество подстрок, возвращаемый методом ( <xref:System.String.Split%28System.Char%5B%5D%2CSystem.Int32%29> метод), чтобы определить, включаются ли пустые строки в возвращаемых подстрок ( <xref:System.String.Split%28System.Char%5B%5D%2CSystem.StringSplitOptions%29> и <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29> методов, или для другого ( <xref:System.String.Split%28System.Char%5B%5D%2CSystem.Int32%2CSystem.StringSplitOptions%29> и <xref:System.String.Split%28System.String%5B%5D%2CSystem.Int32%2CSystem.StringSplitOptions%29> методов).</span><span class="sxs-lookup"><span data-stu-id="086c0-2870">Overloads of the <xref:System.String.Split%2A> method allow you to limit the number of substrings returned by the method (the <xref:System.String.Split%28System.Char%5B%5D%2CSystem.Int32%29> method), to determine whether empty strings are included in the returned substrings (the <xref:System.String.Split%28System.Char%5B%5D%2CSystem.StringSplitOptions%29> and <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29> methods, or to do both (the <xref:System.String.Split%28System.Char%5B%5D%2CSystem.Int32%2CSystem.StringSplitOptions%29> and <xref:System.String.Split%28System.String%5B%5D%2CSystem.Int32%2CSystem.StringSplitOptions%29> methods).</span></span>  

[!INCLUDE[interactive-note](~/includes/csharp-interactive-note.md)]

### <a name="alternatives-to-stringsplit"></a><span data-ttu-id="086c0-2871">Альтернативы String.Split</span><span class="sxs-lookup"><span data-stu-id="086c0-2871">Alternatives to String.Split</span></span>

 <span data-ttu-id="086c0-2872"><xref:System.String.Split%2A> Метод не всегда является лучшим способом разбиение подстроки в строку с разделителями.</span><span class="sxs-lookup"><span data-stu-id="086c0-2872">The <xref:System.String.Split%2A> method is not always the best way to break a delimited string into substrings.</span></span> <span data-ttu-id="086c0-2873">Если вы не хотите извлечь все подстрок строку с разделителями или если требуется синтаксический анализ строки на основе шаблона, а не набор символов-разделителей, рассмотрим следующие варианты.</span><span class="sxs-lookup"><span data-stu-id="086c0-2873">If you don't want to extract all of the substrings of a delimited string, or if you want to parse a string based on a pattern instead of a set of delimiter characters, consider the following alternatives.</span></span>  
  
### <a name="regular-expressions"></a><span data-ttu-id="086c0-2874">Регулярные выражения</span><span class="sxs-lookup"><span data-stu-id="086c0-2874">Regular expressions</span></span>  
 <span data-ttu-id="086c0-2875">Если строки соответствуют фиксированный шаблон, можно использовать регулярное выражение для извлечения и обработки их элементов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2875">If your strings conform to a fixed pattern, you can use a regular expression to extract and handle their elements.</span></span> <span data-ttu-id="086c0-2876">Например, если строки имеют вид "*номер* *операнд* *номер*" можно использовать [регулярное выражение](~/docs/standard/base-types/regular-expressions.md) для извлечения и обработки элементы строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2876">For example, if strings take the form "*number* *operand* *number*" you can use a [regular expression](~/docs/standard/base-types/regular-expressions.md) to extract and handle the string's elements.</span></span> <span data-ttu-id="086c0-2877">Ниже приведен пример:</span><span class="sxs-lookup"><span data-stu-id="086c0-2877">Here's an example:</span></span>  
  
 [!code-csharp-interactive[System.String.Split#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt1.cs#8)]
 [!code-vb[System.String.Split#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt1.vb#8)]  
  
 <span data-ttu-id="086c0-2878">Шаблон регулярного выражения `(\d+)\s+([-+*/])\s+(\d+)` определяется следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-2878">The regular expression pattern `(\d+)\s+([-+*/])\s+(\d+)` is defined like this:</span></span>  
  
|<span data-ttu-id="086c0-2879">Шаблон</span><span class="sxs-lookup"><span data-stu-id="086c0-2879">Pattern</span></span>|<span data-ttu-id="086c0-2880">Описание</span><span class="sxs-lookup"><span data-stu-id="086c0-2880">Description</span></span>|  
|-------------|-----------------|  
|`(\d+)`|<span data-ttu-id="086c0-2881">Совпадение с одной или несколькими десятичными цифрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-2881">Match one or more decimal digits.</span></span> <span data-ttu-id="086c0-2882">Это первая группа записи.</span><span class="sxs-lookup"><span data-stu-id="086c0-2882">This is the first capturing group.</span></span>|  
|`\s+`|<span data-ttu-id="086c0-2883">Совпадение один или несколько символов пробела.</span><span class="sxs-lookup"><span data-stu-id="086c0-2883">Match one or more white-space characters.</span></span>|  
|`([-+*/])`|<span data-ttu-id="086c0-2884">Соответствует знаку арифметический оператор (+, -, \*, или /).</span><span class="sxs-lookup"><span data-stu-id="086c0-2884">Match an arithmetic operator sign (+, -, \*, or /).</span></span> <span data-ttu-id="086c0-2885">Это вторая группа записи.</span><span class="sxs-lookup"><span data-stu-id="086c0-2885">This is the second capturing group.</span></span>|  
|`\s+`|<span data-ttu-id="086c0-2886">Совпадение один или несколько символов пробела.</span><span class="sxs-lookup"><span data-stu-id="086c0-2886">Match one or more white-space characters.</span></span>|  
|`(\d+)`|<span data-ttu-id="086c0-2887">Совпадение с одной или несколькими десятичными цифрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-2887">Match one or more decimal digits.</span></span> <span data-ttu-id="086c0-2888">Это третья группа записи.</span><span class="sxs-lookup"><span data-stu-id="086c0-2888">This is the third capturing group.</span></span>|  
  
 <span data-ttu-id="086c0-2889">Можно также использовать регулярное выражение извлечения подстрок из строки на основе шаблона, а не фиксированный набор символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2889">You can also use a regular expression to extract substrings from a string based on a pattern rather than a fixed set of characters.</span></span> <span data-ttu-id="086c0-2890">Это распространенный сценарий, когда происходит одно из этих условий:</span><span class="sxs-lookup"><span data-stu-id="086c0-2890">This is a common scenario when either of these conditions occurs:</span></span>  
  
-   <span data-ttu-id="086c0-2891">Один или несколько символов-разделителей не всегда использовать в качестве разделителя в <xref:System.String> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2891">One or more of the delimiter characters does not always serve as a delimiter in the <xref:System.String> instance.</span></span>  
  
-   <span data-ttu-id="086c0-2892">Порядок и число символов-разделителей, переменной или неизвестен.</span><span class="sxs-lookup"><span data-stu-id="086c0-2892">The sequence and number of delimiter characters is variable or unknown.</span></span>  
  
 <span data-ttu-id="086c0-2893">Например <xref:System.String.Split%2A> метод не может использоваться для разбиения следующие строки, так как число `\n` (в C#) или `vbCrLf` (в Visual Basic), символы — переменная, и они не всегда выступают в качестве разделителей.</span><span class="sxs-lookup"><span data-stu-id="086c0-2893">For example, the <xref:System.String.Split%2A> method cannot be used to split the following string, because the number of `\n` (in C#) or `vbCrLf` (in Visual Basic) characters is variable, and they don't always serve as delimiters.</span></span>  
  
```text
[This is captured\ntext.]\n\n[\n[This is more captured text.]\n]  
\n[Some more captured text:\n   Option1\n   Option2][Terse text.]  
```  
  
 <span data-ttu-id="086c0-2894">Регулярное выражение можно разделить эту строку легко, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="086c0-2894">A regular expression can split this string easily, as the following example shows.</span></span>  
  
 [!code-csharp-interactive[System.String.Split#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt2.cs#9)]
 [!code-vb[System.String.Split#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt2.vb#9)]  
  
 <span data-ttu-id="086c0-2895">Шаблон регулярного выражения `\[([^\[\]]+)\]` определяется следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-2895">The regular expression pattern `\[([^\[\]]+)\]` is defined like this:</span></span>  
  
|<span data-ttu-id="086c0-2896">Шаблон</span><span class="sxs-lookup"><span data-stu-id="086c0-2896">Pattern</span></span>|<span data-ttu-id="086c0-2897">Описание</span><span class="sxs-lookup"><span data-stu-id="086c0-2897">Description</span></span>|  
|-------------|-----------------|  
|`\[`|<span data-ttu-id="086c0-2898">Соответствует открывающую квадратную скобку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2898">Match an opening bracket.</span></span>|  
|`([^\[\]]+)`|<span data-ttu-id="086c0-2899">Соответствует любому символу, не является открывающей или закрывающей квадратной скобки один или несколько раз.</span><span class="sxs-lookup"><span data-stu-id="086c0-2899">Match any character that is not an opening or a closing bracket one or more times.</span></span> <span data-ttu-id="086c0-2900">Это первая группа записи.</span><span class="sxs-lookup"><span data-stu-id="086c0-2900">This is the first capturing group.</span></span>|  
|`\]`|<span data-ttu-id="086c0-2901">Соответствует закрывающая скобка.</span><span class="sxs-lookup"><span data-stu-id="086c0-2901">Match a closing bracket.</span></span>|  
  
 <span data-ttu-id="086c0-2902"><xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> Метод почти идентичен методу <xref:System.String.Split%2A?displayProperty=nameWithType>, за исключением того, что он разбивает строку, шаблон регулярного выражения вместо основных кодировки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2902">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> method is almost identical to <xref:System.String.Split%2A?displayProperty=nameWithType>, except that it splits a string based on a regular expression pattern instead of a fixed character set.</span></span> <span data-ttu-id="086c0-2903">Например, в следующем примере используется <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> метод для разбиения строки, содержащий подстроки, разделяемых строками различных комбинаций дефисы и другие символы.</span><span class="sxs-lookup"><span data-stu-id="086c0-2903">For example, the following example uses the <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> method to split a string that contains substrings delimited by various combinations of hyphens and other characters.</span></span>  
  
 [!code-csharp-interactive[System.String.Split#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt3.cs#10)]
 [!code-vb[System.String.Split#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt3.vb#10)]  
  
 <span data-ttu-id="086c0-2904">Шаблон регулярного выражения `\s-\s?[+*]?\s?-\s` определяется следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-2904">The regular expression pattern `\s-\s?[+*]?\s?-\s` is defined like this:</span></span>  
  
|<span data-ttu-id="086c0-2905">Шаблон</span><span class="sxs-lookup"><span data-stu-id="086c0-2905">Pattern</span></span>|<span data-ttu-id="086c0-2906">Описание</span><span class="sxs-lookup"><span data-stu-id="086c0-2906">Description</span></span>|  
|-------------|-----------------|  
|`\s-`|<span data-ttu-id="086c0-2907">Соответствует символу пробела, следуют дефис.</span><span class="sxs-lookup"><span data-stu-id="086c0-2907">Match a white-space character followed by a hyphen.</span></span>|  
|`\s?`|<span data-ttu-id="086c0-2908">Совпадение с нулем или одним символом пробела.</span><span class="sxs-lookup"><span data-stu-id="086c0-2908">Match zero or one white-space character.</span></span>|  
|`[+*]?`|<span data-ttu-id="086c0-2909">Совпадение с нулем или одним вхождением либо + или \* символ.</span><span class="sxs-lookup"><span data-stu-id="086c0-2909">Match zero or one occurrence of either the + or \* character.</span></span>|  
|`\s?`|<span data-ttu-id="086c0-2910">Совпадение с нулем или одним символом пробела.</span><span class="sxs-lookup"><span data-stu-id="086c0-2910">Match zero or one white-space character.</span></span>|  
|`-\s`|<span data-ttu-id="086c0-2911">Выделение дефиса, за которым следует символ пробела.</span><span class="sxs-lookup"><span data-stu-id="086c0-2911">Match a hyphen followed by a white-space character.</span></span>|  
  
### <a name="search-methods-and-the-substring-method"></a><span data-ttu-id="086c0-2912">Методы поиска и метода Substring</span><span class="sxs-lookup"><span data-stu-id="086c0-2912">Search methods and the Substring method</span></span>  
 <span data-ttu-id="086c0-2913">Если вы не требуются все возможности подстроки в строке, вы можете работать с одним из используемые методы сравнения строк, которые возвращает индекс, с которого начинается соответствие.</span><span class="sxs-lookup"><span data-stu-id="086c0-2913">If you aren't interested in all of the substrings in a string, you might prefer to work with one of the string comparison methods that returns the index at which the match begins.</span></span> <span data-ttu-id="086c0-2914">Затем можно вызвать <xref:System.String.Substring%2A> метод для извлечения подстроки, которую вы хотите.</span><span class="sxs-lookup"><span data-stu-id="086c0-2914">You can then call the <xref:System.String.Substring%2A> method to extract the substring that you want.</span></span> <span data-ttu-id="086c0-2915">Ниже перечислены используемые методы сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="086c0-2915">The string comparison methods include:</span></span>  
  
-   <span data-ttu-id="086c0-2916"><xref:System.String.IndexOf%2A>, который возвращает отсчитываемый от нуля индекс первого вхождения символа или строки в экземпляре строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2916"><xref:System.String.IndexOf%2A>, which returns the zero-based index of the first occurrence of a character or string in a string instance.</span></span>  
  
-   <span data-ttu-id="086c0-2917"><xref:System.String.IndexOfAny%2A>, который возвращает отсчитываемый от нуля индекс в текущем экземпляре строки первого вхождения любого символа в массив символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2917"><xref:System.String.IndexOfAny%2A>, which returns the zero-based index in the current string instance of the first occurrence of any character in a character array.</span></span>  
  
-   <span data-ttu-id="086c0-2918"><xref:System.String.LastIndexOf%2A>, который возвращает отсчитываемый от нуля индекс последнего вхождения символа или строки в экземпляре строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2918"><xref:System.String.LastIndexOf%2A>, which returns the zero-based index of the last occurrence of a character or string in a string instance.</span></span>  
  
-   <span data-ttu-id="086c0-2919"><xref:System.String.LastIndexOfAny%2A>, который возвращает отсчитываемый от нуля индекс в текущем экземпляре строки от последнее вхождение любого символа, в массив символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2919"><xref:System.String.LastIndexOfAny%2A>, which returns a zero-based index in the current string instance of the last occurrence of any character in a character array.</span></span>  
  
 <span data-ttu-id="086c0-2920">В следующем примере используется <xref:System.String.IndexOf%2A> способ поиска периоды в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2920">The following example uses the <xref:System.String.IndexOf%2A> method to find the periods in a string.</span></span> <span data-ttu-id="086c0-2921">Затем он использует <xref:System.String.Substring%2A> метод для возврата полного предложения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2921">It then uses the <xref:System.String.Substring%2A> method to return full sentences.</span></span>  
  
 [!code-csharp-interactive[System.String.Split#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt4.cs#11)]
 [!code-vb[System.String.Split#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt4.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (params char[] separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (ParamArray separator As Char()) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(... cli::array &lt;char&gt; ^ separator);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] -&gt; string[]" Usage="string.Split separator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-2922">Массив символов, разделяющий подстроки в данной строке, пустой массив, не содержащий разделителей, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2922">A character array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="086c0-2923">Разбивает строку на подстроки в зависимости от символов в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-2923">Splits a string into substrings that are based on the characters in an array.</span></span></summary>
        <returns><span data-ttu-id="086c0-2924">Массив, элементы которого содержат подстроки из этого экземпляра, разделенные символами из <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2924">An array whose elements contain the substrings from this instance that are delimited by one or more characters in <paramref name="separator" />.</span></span> <span data-ttu-id="086c0-2925">Дополнительные сведения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="086c0-2925">For more information, see the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2926">Если строка отделена с набором известных символов, можно использовать <xref:System.String.Split%28System.Char%5B%5D%29> метод, чтобы отделить его на подстроки.</span><span class="sxs-lookup"><span data-stu-id="086c0-2926">When a string is delimited by a known set of characters, you can use the <xref:System.String.Split%28System.Char%5B%5D%29> method to separate it into substrings.</span></span>   
  
### <a name="return-value-details"></a><span data-ttu-id="086c0-2927">Сведения о возвращаемом значении</span><span class="sxs-lookup"><span data-stu-id="086c0-2927">Return value details</span></span>  
 <span data-ttu-id="086c0-2928">Символы-разделители не включаются в возвращаемый массив элементов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2928">Delimiter characters are not included in the elements of the returned array.</span></span> <span data-ttu-id="086c0-2929">Например, если массив разделителя включает символ «-» и «aa bb cc» имеет значение текущего экземпляра строки, метод возвращает массив, содержащий три элемента: «aa», «bb» и «cc».</span><span class="sxs-lookup"><span data-stu-id="086c0-2929">For example, if the separator array includes the character "-" and the value of the current string instance is "aa-bb-cc", the method returns an array that contains three elements: "aa", "bb", and "cc".</span></span>  
  
 <span data-ttu-id="086c0-2930">Если этот экземпляр не содержит символы, входящие в `separator`, возвращаемый массив состоит из одного элемента, содержащего данный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2930">If this instance does not contain any of the characters in `separator`, the returned array consists of a single element that contains this instance.</span></span>  
  
 <span data-ttu-id="086c0-2931">Каждый элемент `separator` определяет отдельный знак-разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-2931">Each element of `separator` defines a separate delimiter character.</span></span> <span data-ttu-id="086c0-2932">Если разделитель находится в начале или в конце этого экземпляра двумя разделителями являются смежными, соответствующий элемент в возвращенном массиве содержит <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2932">If two delimiters are adjacent, or a delimiter is found at the beginning or end of this instance, the corresponding element in the returned array contains <xref:System.String.Empty>.</span></span> <span data-ttu-id="086c0-2933">Далее приводятся некоторые примеры.</span><span class="sxs-lookup"><span data-stu-id="086c0-2933">Here are some examples:</span></span>  
  
|<span data-ttu-id="086c0-2934">Строковое значение</span><span class="sxs-lookup"><span data-stu-id="086c0-2934">String value</span></span>|<span data-ttu-id="086c0-2935">Separator</span><span class="sxs-lookup"><span data-stu-id="086c0-2935">Separator</span></span>|<span data-ttu-id="086c0-2936">Возвращаемый массив</span><span class="sxs-lookup"><span data-stu-id="086c0-2936">Returned array</span></span>|  
|------------------|---------------|--------------------|  
|<span data-ttu-id="086c0-2937">"42, 12, 19"</span><span class="sxs-lookup"><span data-stu-id="086c0-2937">"42, 12, 19"</span></span>|<span data-ttu-id="086c0-2938">New Char [] {',', ' '} (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-2938">new Char[] {',', ' '} (C#)</span></span><br /><br /> <span data-ttu-id="086c0-2939">Char() = {«,» c ««c}) (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-2939">Char() = {","c, " "c}) (Visual Basic)</span></span>|<span data-ttu-id="086c0-2940">{"42", "", "12", "", "19"}</span><span class="sxs-lookup"><span data-stu-id="086c0-2940">{"42", "", "12", "", "19"}</span></span>|  
|<span data-ttu-id="086c0-2941">"42..12..19"</span><span class="sxs-lookup"><span data-stu-id="086c0-2941">"42..12..19"</span></span>|<span data-ttu-id="086c0-2942">New Char [] {"."}</span><span class="sxs-lookup"><span data-stu-id="086c0-2942">new Char[] {'.'}</span></span> <span data-ttu-id="086c0-2943">(C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-2943">(C#)</span></span><br /><br /> <span data-ttu-id="086c0-2944">Char() = {».» c} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-2944">Char() = {"."c} (Visual Basic)</span></span>|<span data-ttu-id="086c0-2945">{"42", "", "12", "", "19"}</span><span class="sxs-lookup"><span data-stu-id="086c0-2945">{"42", "", "12", "", "19"}</span></span>|  
|<span data-ttu-id="086c0-2946">«Banana»</span><span class="sxs-lookup"><span data-stu-id="086c0-2946">"Banana"</span></span>|<span data-ttu-id="086c0-2947">New Char [] {"."}</span><span class="sxs-lookup"><span data-stu-id="086c0-2947">new Char[] {'.'}</span></span> <span data-ttu-id="086c0-2948">(C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-2948">(C#)</span></span><br /><br /> <span data-ttu-id="086c0-2949">Char() = {».» c} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-2949">Char() = {"."c} (Visual Basic)</span></span>|<span data-ttu-id="086c0-2950">{«Banana»}</span><span class="sxs-lookup"><span data-stu-id="086c0-2950">{"Banana"}</span></span>|  
|<span data-ttu-id="086c0-2951">«Darb\nSmarba» (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-2951">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="086c0-2952">«Darb» & vbLf & «Smarba» (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-2952">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="086c0-2953">New Char [] {} (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-2953">new Char[] {} (C#)</span></span><br /><br /> <span data-ttu-id="086c0-2954">Char() = {} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-2954">Char() = {} (Visual Basic)</span></span>|<span data-ttu-id="086c0-2955">{«Darb», «Smarba»}</span><span class="sxs-lookup"><span data-stu-id="086c0-2955">{"Darb", "Smarba"}</span></span>|  
|<span data-ttu-id="086c0-2956">«Darb\nSmarba» (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-2956">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="086c0-2957">«Darb» & vbLf & «Smarba» (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-2957">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="086c0-2958">null (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-2958">null (C#)</span></span><br /><br /> <span data-ttu-id="086c0-2959">Nothing (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-2959">Nothing (Visual Basic)</span></span>|<span data-ttu-id="086c0-2960">{«Darb», «Smarba»}</span><span class="sxs-lookup"><span data-stu-id="086c0-2960">{"Darb", "Smarba"}</span></span>|  
  
### <a name="the-separator-array"></a><span data-ttu-id="086c0-2961">Массив разделителя</span><span class="sxs-lookup"><span data-stu-id="086c0-2961">The separator array</span></span>  
 <span data-ttu-id="086c0-2962">Каждый элемент разделителя, который определяет отдельный разделитель, который состоит из одного символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-2962">Each element of separator defines a separate delimiter that consists of a single character.</span></span> <span data-ttu-id="086c0-2963">Если `separator` аргумент является `null` или не содержит знаков, метод рассматривает пробелы как разделители.</span><span class="sxs-lookup"><span data-stu-id="086c0-2963">If the `separator` argument is `null` or contains no characters, the method treats white-space characters as the delimiters.</span></span> <span data-ttu-id="086c0-2964">Символы-разделители определяются Unicode standard. они возвращают `true` если они передаются в <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2964">White-space characters are defined by the Unicode standard; they return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
### <a name="stringsplitchar-and-compiler-overload-resolution"></a><span data-ttu-id="086c0-2965">Разрешение перегрузки String.Split(Char[]) и компилятора</span><span class="sxs-lookup"><span data-stu-id="086c0-2965">String.Split(Char[]) and compiler overload resolution</span></span>  
 <span data-ttu-id="086c0-2966">Несмотря на то что один параметр для перегруженного <xref:System.String.Split%2A?displayProperty=nameWithType> является массив символов, его можно вызвать с помощью одного символа, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="086c0-2966">Although the single parameter for this overload of <xref:System.String.Split%2A?displayProperty=nameWithType> is a character array, you can call it with a single character, as the following example shows.</span></span>  
  
 [!code-csharp-interactive[System.String.Split#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/Split_CompilerResolution1.cs#12)]
 [!code-vb[System.String.Split#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/Split_CompilerResolution1.vb#12)]  
  
 <span data-ttu-id="086c0-2967">Так как `separator` параметр декорирован с <xref:System.ParamArrayAttribute> атрибут, компиляторы будет интерпретировать один символ как массив символов одного элемента.</span><span class="sxs-lookup"><span data-stu-id="086c0-2967">Because the `separator` parameter is decorated  with the <xref:System.ParamArrayAttribute> attribute, compilers will interpret a single character as a single-element character array.</span></span> <span data-ttu-id="086c0-2968">Это не так для других <xref:System.String.Split%2A?displayProperty=nameWithType> перегрузки, включающие `separator` параметр; необходимо явно передать эти перегрузки массив символов как `separator` аргумент.</span><span class="sxs-lookup"><span data-stu-id="086c0-2968">This is not the case for other <xref:System.String.Split%2A?displayProperty=nameWithType> overloads that include a `separator` parameter; you must explicitly pass these overloads a character array as the `separator` argument.</span></span>  
  
### <a name="comparison-details"></a><span data-ttu-id="086c0-2969">Сведения о сравнении</span><span class="sxs-lookup"><span data-stu-id="086c0-2969">Comparison details</span></span>  
 <span data-ttu-id="086c0-2970"><xref:System.String.Split%28System.Char%5B%5D%29> Метод извлекает подстроки данной строки, разделенные один или несколько символов в `separator` массиве и возвращает эти подстроки в виде элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-2970">The <xref:System.String.Split%28System.Char%5B%5D%29> method extracts the substrings in this string that are delimited by one or more of the characters in the `separator` array, and returns those substrings as elements of an array.</span></span>  
  
 <span data-ttu-id="086c0-2971"><xref:System.String.Split%28System.Char%5B%5D%29> Метод ищет разделители, выполняя сравнения, используя правила сортировки по порядковому номеру с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-2971">The <xref:System.String.Split%28System.Char%5B%5D%29> method looks for delimiters by performing comparisons using case-sensitive ordinal sort rules.</span></span> <span data-ttu-id="086c0-2972">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-2972">For more information about word, string, and ordinal sorts, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span>  
  
### <a name="performance-considerations"></a><span data-ttu-id="086c0-2973">Особенности производительности</span><span class="sxs-lookup"><span data-stu-id="086c0-2973">Performance Considerations</span></span>  
 <span data-ttu-id="086c0-2974"><xref:System.String.Split%2A> Методы выделить память для возвращаемого массива объекта и <xref:System.String> объекта для каждого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-2974">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="086c0-2975">Если приложению требуется оптимальной производительности или распределением памяти является критически важным в приложении, рассмотрите возможность использования <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2975">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method.</span></span> <span data-ttu-id="086c0-2976">У вас также есть возможность использовать <xref:System.String.Compare%2A> метод для поиска подстроки в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2976">You also have the option of using the <xref:System.String.Compare%2A> method to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="086c0-2977">Чтобы разбить строку на символ-разделитель, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод необходимо найти знаков-разделителей в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-2977">To split a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="086c0-2978">Чтобы разделить строку в строку разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод для обнаружения первого символа строки разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-2978">To split a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="086c0-2979">Затем с помощью <xref:System.String.Compare%2A> метод, чтобы определить, равны ли знаки после первого знака остальные символы строки-разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-2979">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="086c0-2980">Кроме того, если же набор символов используется для разделения строк в нескольких <xref:System.String.Split%2A> вызовы методов, рекомендуется создать один массив и ссылающихся на него в каждом вызове метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2980">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="086c0-2981">Это значительно снижает дополнительную нагрузку, каждый вызов метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2981">This significantly reduces the additional overhead of each method call.</span></span>  
  
## Examples  
 <span data-ttu-id="086c0-2982">Ниже приведен пример, как извлечь отдельные слова из блока текста, рассматривая пробелы и знаки пунктуации как разделители.</span><span class="sxs-lookup"><span data-stu-id="086c0-2982">The following example demonstrates how to extract individual words from a block of text by treating white space and punctuation marks as delimiters.</span></span> <span data-ttu-id="086c0-2983">Массив символов, передаваемый `separator` параметр <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> метод состоит из пробела и символа табуляции, а также некоторые распространенные символы пунктуации.</span><span class="sxs-lookup"><span data-stu-id="086c0-2983">The character array passed to the `separator` parameter of the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method consists of a space character and a tab character, together with some common punctuation symbols.</span></span>  
  
 [!code-csharp-interactive[System.String.Split#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split2.cs#2)]
 [!code-vb[System.String.Split#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-2984">В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, если <see cref="M:System.String.Split(System.Char[])" /> методу передается <paramref name="separator" /> то есть <see langword="null" /> или не содержит знаков, метод использует немного другой набор символов для разбиения строки чем <see cref="M:System.String.Trim(System.Char[])" /> выполняет метод, чтобы усекает строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-2984">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string.</span></span> <span data-ttu-id="086c0-2985">Начиная с .NET Framework 4, в обоих методах используется идентичный набор пробельные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-2985">Starting with the .NET Framework 4, both methods use an identical set of Unicode white-space characters.</span></span></para></block>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char separator, StringSplitOptions options = System.StringSplitOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char, Optional options As StringSplitOptions = System.StringSplitOptions.None) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : char * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.StringSplitOptions" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char[] separator, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char(), count As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;char&gt; ^ separator, int count);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] * int -&gt; string[]" Usage="string.Split (separator, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-2986">Массив символов, разделяющий подстроки в данной строке, пустой массив, не содержащий разделителей, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2986">A character array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-2987">Максимальное число возвращаемых подстрок.</span><span class="sxs-lookup"><span data-stu-id="086c0-2987">The maximum number of substrings to return.</span></span></param>
        <summary><span data-ttu-id="086c0-2988">Разбивает строку на максимальное число подстрок в зависимости от символов в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-2988">Splits a string into a maximum number of substrings based on the characters in an array.</span></span> <span data-ttu-id="086c0-2989">Можно также указать максимальное число возвращаемых подстрок.</span><span class="sxs-lookup"><span data-stu-id="086c0-2989">You also specify the maximum number of substrings to return.</span></span></summary>
        <returns><span data-ttu-id="086c0-2990">Массив, элементы которого содержат подстроки данного экземпляра, разделенные одним или более знаками из <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-2990">An array whose elements contain the substrings in this instance that are delimited by one or more characters in <paramref name="separator" />.</span></span> <span data-ttu-id="086c0-2991">Дополнительные сведения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="086c0-2991">For more information, see the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-2992">Символы-разделители не включаются в возвращаемый массив элементов.</span><span class="sxs-lookup"><span data-stu-id="086c0-2992">Delimiter characters are not included in the elements of the returned array.</span></span>  
  
 <span data-ttu-id="086c0-2993">Если этот экземпляр не содержит символы, входящие в `separator`, возвращаемый массив состоит из одного элемента, содержащего данный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-2993">If this instance does not contain any of the characters in `separator`, the returned array consists of a single element that contains this instance.</span></span> <span data-ttu-id="086c0-2994">Если `count` равно нулю, возвращается пустой массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-2994">If `count` is zero, an empty array is returned.</span></span>  
  
 <span data-ttu-id="086c0-2995">Если `separator` параметр `null` или не содержит символы, пробелы считаются разделителями.</span><span class="sxs-lookup"><span data-stu-id="086c0-2995">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="086c0-2996">Символы-разделители определяются Unicode standard и возврата `true` если они передаются в <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-2996">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="086c0-2997">Каждый элемент `separator` определяет отдельный знак-разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-2997">Each element of `separator` defines a separate delimiter character.</span></span> <span data-ttu-id="086c0-2998">Если разделитель находится в начале или в конце этого экземпляра двумя разделителями являются смежными, соответствующий элемент массива содержит <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="086c0-2998">If two delimiters are adjacent, or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="086c0-2999">При наличии более чем `count` подстроки данного экземпляра, первый `count` минус 1 подстрок возвращаются в первом `count` возвращается минус 1 элементах возвращаемого значения, а остальные символы в этом экземпляре за последние элемент возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="086c0-2999">If there are more than `count` substrings in this instance, the first `count` minus 1 substrings are returned in the first `count` minus 1 elements of the return value, and the remaining characters in this instance are returned in the last element of the return value.</span></span>  
  
 <span data-ttu-id="086c0-3000">Если `count` больше, чем число подстрок, возвращаются доступные подстрок и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="086c0-3000">If `count` is greater than the number of substrings, the available substrings are returned and no exception is thrown.</span></span>  
  
 <span data-ttu-id="086c0-3001">В следующей таблице приведены примеры.</span><span class="sxs-lookup"><span data-stu-id="086c0-3001">The following table provides examples.</span></span>  
  
|<span data-ttu-id="086c0-3002">Строковое значение</span><span class="sxs-lookup"><span data-stu-id="086c0-3002">String value</span></span>|<span data-ttu-id="086c0-3003">Separator</span><span class="sxs-lookup"><span data-stu-id="086c0-3003">Separator</span></span>|<span data-ttu-id="086c0-3004">Количество</span><span class="sxs-lookup"><span data-stu-id="086c0-3004">Count</span></span>|<span data-ttu-id="086c0-3005">Возвращаемый массив</span><span class="sxs-lookup"><span data-stu-id="086c0-3005">Returned array</span></span>|  
|------------------|---------------|-----------|--------------------|  
|<span data-ttu-id="086c0-3006">"42, 12, 19"</span><span class="sxs-lookup"><span data-stu-id="086c0-3006">"42, 12, 19"</span></span>|<span data-ttu-id="086c0-3007">New Char [] {',', ' '} (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3007">new Char[] {',', ' '} (C#)</span></span><br /><br /> <span data-ttu-id="086c0-3008">Char() = {«,» c ««c} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-3008">Char() = {","c, " "c} (Visual Basic)</span></span>|<span data-ttu-id="086c0-3009">2</span><span class="sxs-lookup"><span data-stu-id="086c0-3009">2</span></span>|<span data-ttu-id="086c0-3010">{"42", " 12, 19"}</span><span class="sxs-lookup"><span data-stu-id="086c0-3010">{"42", " 12, 19"}</span></span>|  
|<span data-ttu-id="086c0-3011">"42..12..19"</span><span class="sxs-lookup"><span data-stu-id="086c0-3011">"42..12..19"</span></span>|<span data-ttu-id="086c0-3012">New Char [] {"."}</span><span class="sxs-lookup"><span data-stu-id="086c0-3012">new Char[] {'.'}</span></span> <span data-ttu-id="086c0-3013">(C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3013">(C#)</span></span><br /><br /> <span data-ttu-id="086c0-3014">Char() = {».» c} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-3014">Char() = {"."c} (Visual Basic)</span></span>|<span data-ttu-id="086c0-3015">4</span><span class="sxs-lookup"><span data-stu-id="086c0-3015">4</span></span>|<span data-ttu-id="086c0-3016">{"42", "", "12", ".19"}</span><span class="sxs-lookup"><span data-stu-id="086c0-3016">{"42", "", "12", ".19"}</span></span>|  
|<span data-ttu-id="086c0-3017">«Banana»</span><span class="sxs-lookup"><span data-stu-id="086c0-3017">"Banana"</span></span>|<span data-ttu-id="086c0-3018">New Char [] {"."}</span><span class="sxs-lookup"><span data-stu-id="086c0-3018">new Char[] {'.'}</span></span> <span data-ttu-id="086c0-3019">(C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3019">(C#)</span></span><br /><br /> <span data-ttu-id="086c0-3020">Char() = {».» c} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-3020">Char() = {"."c} (Visual Basic)</span></span>|<span data-ttu-id="086c0-3021">2</span><span class="sxs-lookup"><span data-stu-id="086c0-3021">2</span></span>|<span data-ttu-id="086c0-3022">{«Banana»}</span><span class="sxs-lookup"><span data-stu-id="086c0-3022">{"Banana"}</span></span>|  
|<span data-ttu-id="086c0-3023">«Darb\nSmarba» (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3023">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="086c0-3024">«Darb» & vbLf & «Smarba» (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-3024">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="086c0-3025">New Char [] {} (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3025">new Char[] {} (C#)</span></span><br /><br /> <span data-ttu-id="086c0-3026">Char() = {} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-3026">Char() = {} (Visual Basic)</span></span>|<span data-ttu-id="086c0-3027">1</span><span class="sxs-lookup"><span data-stu-id="086c0-3027">1</span></span>|<span data-ttu-id="086c0-3028">{«Darb\nSmarba»} (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3028">{"Darb\nSmarba"} (C#)</span></span><br /><br /> <span data-ttu-id="086c0-3029">«Darb» & vbLf & «Smarba» (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-3029">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|  
|<span data-ttu-id="086c0-3030">«Darb\nSmarba» (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3030">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="086c0-3031">«Darb» & vbLf & «Smarba» (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-3031">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="086c0-3032">новый Char [] null (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3032">new Char[] null (C#)</span></span><br /><br /> <span data-ttu-id="086c0-3033">Char() = Nothing</span><span class="sxs-lookup"><span data-stu-id="086c0-3033">Char() = Nothing</span></span>|<span data-ttu-id="086c0-3034">2</span><span class="sxs-lookup"><span data-stu-id="086c0-3034">2</span></span>|<span data-ttu-id="086c0-3035">{«Darb», «Smarba»}</span><span class="sxs-lookup"><span data-stu-id="086c0-3035">{"Darb", "Smarba"}</span></span>|  
|<span data-ttu-id="086c0-3036">«Darb\nSmarba» (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3036">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="086c0-3037">«Darb» & vbLf & «Smarba» (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="086c0-3037">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="086c0-3038">новый Char [] null (C#)</span><span class="sxs-lookup"><span data-stu-id="086c0-3038">new Char[] null (C#)</span></span><br /><br /> <span data-ttu-id="086c0-3039">Char() = Nothing</span><span class="sxs-lookup"><span data-stu-id="086c0-3039">Char() = Nothing</span></span>|<span data-ttu-id="086c0-3040">100</span><span class="sxs-lookup"><span data-stu-id="086c0-3040">100</span></span>|<span data-ttu-id="086c0-3041">{«Darb», «Smarba»}</span><span class="sxs-lookup"><span data-stu-id="086c0-3041">{"Darb", "Smarba"}</span></span>|  
  
### <a name="performance-considerations"></a><span data-ttu-id="086c0-3042">Особенности производительности</span><span class="sxs-lookup"><span data-stu-id="086c0-3042">Performance Considerations</span></span>  
 <span data-ttu-id="086c0-3043"><xref:System.String.Split%2A> Методы выделить память для возвращаемого массива объекта и <xref:System.String> объекта для каждого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-3043">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="086c0-3044">Если приложению требуется оптимальной производительности или распределением памяти является критически важным в приложении, рассмотрите возможность использования <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод и при необходимости <xref:System.String.Compare%2A> метод для поиска подстроки в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3044">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="086c0-3045">Если вы разделяете строка с символа разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод необходимо найти знаков-разделителей в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3045">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="086c0-3046">Если вы разделяете строку в строку разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод для обнаружения первого символа строки разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3046">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="086c0-3047">Затем с помощью <xref:System.String.Compare%2A> метод, чтобы определить, равны ли знаки после первого знака остальные символы строки-разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3047">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="086c0-3048">Кроме того, если же набор символов используется для разделения строк в нескольких <xref:System.String.Split%2A> вызовы методов, рекомендуется создать один массив и ссылающихся на него в каждом вызове метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3048">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="086c0-3049">Это значительно снижает дополнительную нагрузку, каждый вызов метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3049">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3050">В следующем примере показано, как `count` влияет на число строк, возвращаемых <xref:System.String.Split%2A>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3050">The following example demonstrates how `count` affects the number of strings returned by <xref:System.String.Split%2A>.</span></span>  
  
 [!code-csharp-interactive[StringSplit2#10](~/samples/snippets/csharp/VS_Snippets_CLR/StringSplit2/CS/StringSplit10.cs#10)]
 [!code-vb[StringSplit2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringSplit2/VB/stringsplit10.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-3051"><paramref name="count" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-3051"><paramref name="count" /> is negative.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3052">В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, если <see cref="M:System.String.Split(System.Char[])" /> методу передается <paramref name="separator" /> то есть <see langword="null" /> или не содержит знаков, метод использует немного другой набор символов для разбиения строки чем <see cref="M:System.String.Trim(System.Char[])" /> выполняет метод, чтобы усекает строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3052">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string.</span></span> <span data-ttu-id="086c0-3053">Начиная с .NET Framework 4, в обоих методах используется идентичный набор пробельные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3053">Starting with the .NET Framework 4, both methods use an identical set of Unicode white-space characters.</span></span></para></block>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char[] separator, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char[],System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char(), options As StringSplitOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;char&gt; ^ separator, StringSplitOptions options);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.StringSplitOptions" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-3054">Массив символов, разделяющий подстроки в данной строке, пустой массив, не содержащий разделителей, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3054">A character array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span></span></param>
        <param name="options"><span data-ttu-id="086c0-3055"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, чтобы исключить пустые элементы из возвращаемого массива; или <see cref="F:System.StringSplitOptions.None" /> для включения пустых элементов в возвращаемый массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3055"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None" /> to include empty array elements in the array returned.</span></span></param>
        <summary><span data-ttu-id="086c0-3056">Разбивает строку на подстроки в зависимости от символов в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-3056">Splits a string into substrings based on the characters in an array.</span></span> <span data-ttu-id="086c0-3057">Можно указать, включают ли подстроки пустые элементы массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-3057">You can specify whether the substrings include empty array elements.</span></span></summary>
        <returns><span data-ttu-id="086c0-3058">Массив, элементы которого содержат подстроки данной строки, разделенные одним или более знаками из <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3058">An array whose elements contain the substrings in this string that are delimited by one or more characters in <paramref name="separator" />.</span></span> <span data-ttu-id="086c0-3059">Дополнительные сведения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="086c0-3059">For more information, see the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
### <a name="return-value-details"></a><span data-ttu-id="086c0-3060">Сведения о возвращаемом значении</span><span class="sxs-lookup"><span data-stu-id="086c0-3060">Return value details</span></span>  
 <span data-ttu-id="086c0-3061">Символы-разделители (символы в `separator` массива) не включаются в возвращаемый массив элементов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3061">Delimiter characters (the characters in the `separator` array) are not included in the elements of the returned array.</span></span> <span data-ttu-id="086c0-3062">Например если `separator` массив содержит символ «-» и «aa bb cc» имеет значение текущего экземпляра строки, метод возвращает массив, содержащий три элемента: «aa», «bb» и «cc».</span><span class="sxs-lookup"><span data-stu-id="086c0-3062">For example, if the `separator` array includes the character "-" and the value of the current string instance is "aa-bb-cc", the method returns an array that contains three elements: "aa", "bb", and "cc".</span></span>  
  
 <span data-ttu-id="086c0-3063">Если этот экземпляр не содержит символы, входящие в `separator`, возвращаемый массив состоит из одного элемента, содержащего данный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3063">If this instance does not contain any of the characters in `separator`, the returned array consists of a single element that contains this instance.</span></span>  
  
 <span data-ttu-id="086c0-3064">Если `options` параметр <xref:System.StringSplitOptions.RemoveEmptyEntries> и длину этого экземпляра равно нулю, метод возвращает пустой массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3064">If the `options` parameter is <xref:System.StringSplitOptions.RemoveEmptyEntries> and the length of this instance is zero, the method returns an empty array.</span></span>  
  
 <span data-ttu-id="086c0-3065">Каждый элемент `separator` определяет отдельный разделитель, который состоит из одного символа.</span><span class="sxs-lookup"><span data-stu-id="086c0-3065">Each element of `separator` defines a separate delimiter that consists of a single character.</span></span> <span data-ttu-id="086c0-3066">Если `options` аргумент <xref:System.StringSplitOptions.None>и двумя разделителями являются смежными или разделитель находится в начале или в конце данного экземпляра, соответствующий элемент массива содержит <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3066">If the `options` argument is <xref:System.StringSplitOptions.None>, and two delimiters are adjacent or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-3067">Например если `separator` входят два элемента, «-» и "\_«, значение экземпляра строки «-\_aa -\_«и значение `options` аргумент <xref:System.StringSplitOptions.None>, метод возвращает массив строк, содержащий следующие пять элементов:</span><span class="sxs-lookup"><span data-stu-id="086c0-3067">For example, if `separator` includes  two elements, "-" and "\_", the value of the string instance is "-\_aa-\_", and the value of   the `options` argument is <xref:System.StringSplitOptions.None>, the method returns a string array with the following five elements:</span></span>  
  
1.  <span data-ttu-id="086c0-3068"><xref:System.String.Empty?displayProperty=nameWithType>, который представляет пустую строку, которая предшествует «-» знак с индексом 0.</span><span class="sxs-lookup"><span data-stu-id="086c0-3068"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that precedes the "-" character at index 0.</span></span>  
  
2.  <span data-ttu-id="086c0-3069"><xref:System.String.Empty?displayProperty=nameWithType>, который представляет пустую строку между «-» знак с индексом 0 и символа «_» с индексом 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-3069"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string between the "-" character at index 0 and the "_" character at index 1.</span></span>  
  
3.  <span data-ttu-id="086c0-3070">«aa»,</span><span class="sxs-lookup"><span data-stu-id="086c0-3070">"aa",</span></span>  
  
4.  <span data-ttu-id="086c0-3071"><xref:System.String.Empty?displayProperty=nameWithType>, который представляет пустую строку, которая соответствует по индексу 4 символа «_».</span><span class="sxs-lookup"><span data-stu-id="086c0-3071"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that follows the "_" character at index 4.</span></span>  
  
5.  <span data-ttu-id="086c0-3072"><xref:System.String.Empty?displayProperty=nameWithType>, который представляет пустую строку, которая следует за «-» знак с индексом 5.</span><span class="sxs-lookup"><span data-stu-id="086c0-3072"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that follows the "-" character at index 5.</span></span>  
  
### <a name="the-separator-array"></a><span data-ttu-id="086c0-3073">Массив разделителя</span><span class="sxs-lookup"><span data-stu-id="086c0-3073">The separator array</span></span>  
 <span data-ttu-id="086c0-3074">Если `separator` параметр `null` или не содержит символы, пробелы считаются разделителями.</span><span class="sxs-lookup"><span data-stu-id="086c0-3074">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="086c0-3075">Символы-разделители определяются Unicode standard и возврата `true` если они передаются в <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3075">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="086c0-3076">Если `separator` параметр в вызове этой перегрузки метода является `null`, разрешение перегрузки компилятора оканчивается неудачей.</span><span class="sxs-lookup"><span data-stu-id="086c0-3076">If the `separator` parameter in the call to this method overload is `null`, compiler overload resolution fails.</span></span> <span data-ttu-id="086c0-3077">Чтобы однозначно идентифицировать вызываемому методу, код должен указать тип `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3077">To unambiguously identify the called method, your code must indicate the type of the `null`.</span></span> <span data-ttu-id="086c0-3078">В следующем примере показано несколько способов однозначно идентифицирует эту перегрузку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3078">The following example shows several ways to unambiguously identify this overload.</span></span>  
  
 [!code-csharp[System.String.Split#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split3.cs#5)]
 [!code-vb[System.String.Split#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split3.vb#5)]  
  
### <a name="comparison-details"></a><span data-ttu-id="086c0-3079">Сведения о сравнении</span><span class="sxs-lookup"><span data-stu-id="086c0-3079">Comparison details</span></span>  
 <span data-ttu-id="086c0-3080"><xref:System.String.Split%2A> Метод извлекает подстроки данной строки, разделенные один или несколько символов в `separator` параметра и возвращает эти подстроки в виде элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-3080">The <xref:System.String.Split%2A> method extracts the substrings in this string that are delimited by one or more of the characters in the `separator` parameter, and returns those substrings as elements of an array.</span></span>  
  
 <span data-ttu-id="086c0-3081"><xref:System.String.Split%2A> Метод ищет разделители, выполняя сравнения, используя правила сортировки по порядковому номеру с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3081">The <xref:System.String.Split%2A> method looks for delimiters by performing comparisons using case-sensitive ordinal sort rules.</span></span> <span data-ttu-id="086c0-3082">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-3082">For more information about word, string, and ordinal sorts, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span>  
  
### <a name="performance-considerations"></a><span data-ttu-id="086c0-3083">Особенности производительности</span><span class="sxs-lookup"><span data-stu-id="086c0-3083">Performance Considerations</span></span>  
 <span data-ttu-id="086c0-3084"><xref:System.String.Split%2A> Методы выделить память для возвращаемого массива объекта и <xref:System.String> объекта для каждого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-3084">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="086c0-3085">Если приложению требуется оптимальной производительности или распределением памяти является критически важным в приложении, рассмотрите возможность использования <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод и при необходимости <xref:System.String.Compare%2A> метод для поиска подстроки в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3085">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="086c0-3086">Если вы разделяете строка с символа разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод необходимо найти знаков-разделителей в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3086">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="086c0-3087">Если вы разделяете строку в строку разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод для обнаружения первого символа строки разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3087">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="086c0-3088">Затем с помощью <xref:System.String.Compare%2A> метод, чтобы определить, равны ли знаки после первого знака остальные символы строки-разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3088">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="086c0-3089">Кроме того, если же набор символов используется для разделения строк в нескольких <xref:System.String.Split%2A> вызовы методов, рекомендуется создать один массив и ссылающихся на него в каждом вызове метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3089">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="086c0-3090">Это значительно снижает дополнительную нагрузку, каждый вызов метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3090">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3091">В следующем примере используется <xref:System.StringSplitOptions> перечисления для включения или исключения подстрок, создаваемые <xref:System.String.Split%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3091">The following example uses the <xref:System.StringSplitOptions> enumeration to include or exclude substrings generated by the <xref:System.String.Split%2A> method.</span></span>  
  
 [!code-cpp[string.split3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.split3/CPP/omit.cpp#1)]
 [!code-csharp-interactive[string.split3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.split3/CS/omit.cs#1)]
 [!code-vb[string.split3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.split3/VB/omit.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-3092"><paramref name="options" /> не является одним из значений <see cref="T:System.StringSplitOptions" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3092"><paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3093">В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, если <see cref="M:System.String.Split(System.Char[])" /> методу передается <paramref name="separator" /> то есть <see langword="null" /> или не содержит знаков, метод использует немного другой набор символов для разбиения строки чем <see cref="M:System.String.Trim(System.Char[])" /> выполняет метод, чтобы усекает строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3093">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string.</span></span> <span data-ttu-id="086c0-3094">Начиная с .NET Framework 4, в обоих методах используется идентичный набор пробельные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3094">Starting with the .NET Framework 4, both methods use an identical set of Unicode white-space characters.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string separator, StringSplitOptions options = System.StringSplitOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.String,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String, Optional options As StringSplitOptions = System.StringSplitOptions.None) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : string * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.StringSplitOptions" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string[] separator, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string[] separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.String[],System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String(), options As StringSplitOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;System::String ^&gt; ^ separator, StringSplitOptions options);" />
      <MemberSignature Language="F#" Value="member this.Split : string[] * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.StringSplitOptions" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-3095">Массив строк, разделяющих подстроки в данной строке, пустой массив, не содержащий разделителей, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3095">A string array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span></span></param>
        <param name="options"><span data-ttu-id="086c0-3096"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, чтобы исключить пустые элементы из возвращаемого массива; или <see cref="F:System.StringSplitOptions.None" /> для включения пустых элементов в возвращаемый массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3096"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None" /> to include empty array elements in the array returned.</span></span></param>
        <summary><span data-ttu-id="086c0-3097">Разбивает строку на подстроки в зависимости от строк в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-3097">Splits a string into substrings based on the strings in an array.</span></span> <span data-ttu-id="086c0-3098">Можно указать, включают ли подстроки пустые элементы массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-3098">You can specify whether the substrings include empty array elements.</span></span></summary>
        <returns><span data-ttu-id="086c0-3099">Массив, элементы которого содержат подстроки данной строки, разделенные одной или более строками из <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3099">An array whose elements contain the substrings in this string that are delimited by one or more strings in <paramref name="separator" />.</span></span> <span data-ttu-id="086c0-3100">Дополнительные сведения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="086c0-3100">For more information, see the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3101">Если строка отделена с набором известных строк, можно использовать <xref:System.String.Split%2A> метод, чтобы отделить его на подстроки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3101">When a string is delimited by a known set of strings, you can use the <xref:System.String.Split%2A> method to separate it into substrings.</span></span>  
  
### <a name="return-value-details"></a><span data-ttu-id="086c0-3102">Сведения о возвращаемом значении</span><span class="sxs-lookup"><span data-stu-id="086c0-3102">Return value details</span></span>  
 <span data-ttu-id="086c0-3103">Строки-разделители не включаются в возвращаемый массив элементов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3103">Delimiter strings are not included in the elements of the returned array.</span></span> <span data-ttu-id="086c0-3104">Например если `separator` массив содержит строку «--» и «aa — копия bb» имеет значение текущего экземпляра строки, метод возвращает массив, содержащий три элемента: «aa», «bb» и «cc».</span><span class="sxs-lookup"><span data-stu-id="086c0-3104">For example, if the `separator` array includes the string "--" and the value of the current string instance is "aa--bb-cc", the method returns an array that contains three elements: "aa", "bb", and "cc".</span></span>  
  
 <span data-ttu-id="086c0-3105">Если этот экземпляр не содержит любой из строк в `separator`, возвращаемый массив состоит из одного элемента, содержащего данный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3105">If this instance does not contain any of the strings in `separator`, the returned array consists of a single element that contains this instance.</span></span>  
  
 <span data-ttu-id="086c0-3106">Если `options` параметр <xref:System.StringSplitOptions.RemoveEmptyEntries> и длину этого экземпляра равно нулю, метод возвращает пустой массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3106">If the `options` parameter is <xref:System.StringSplitOptions.RemoveEmptyEntries> and the length of this instance is zero, the method returns an empty array.</span></span>  
  
 <span data-ttu-id="086c0-3107">Каждый элемент `separator` определяет отдельный разделитель, который состоит из одного или нескольких символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3107">Each element of `separator` defines a separate delimiter that consists of one or more characters.</span></span> <span data-ttu-id="086c0-3108">Если `options` аргумент <xref:System.StringSplitOptions.None>и двумя разделителями являются смежными или разделитель находится в начале или в конце данного экземпляра, соответствующий элемент массива содержит <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3108">If the `options` argument is <xref:System.StringSplitOptions.None>, and two delimiters are adjacent or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-3109">Например если `separator` входят два элемента, «-» и "\_«, значение экземпляра строки «-\_aa -\_«и значение `options` аргумент <xref:System.StringSplitOptions.None>, метод возвращает массив строки с следующие пять элементов:</span><span class="sxs-lookup"><span data-stu-id="086c0-3109">For example, if `separator` includes  two elements, "-" and "\_", the value of the string instance is "-\_aa-\_", and the value of   the `options` argument is <xref:System.StringSplitOptions.None>, the method returns a sting array with the following five elements:</span></span>  
  
1.  <span data-ttu-id="086c0-3110"><xref:System.String.Empty?displayProperty=nameWithType>, который представляет пустую строку, которая предшествует «-» подстроку по индексу 0.</span><span class="sxs-lookup"><span data-stu-id="086c0-3110"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that precedes the "-" substring at index 0.</span></span>  
  
2.  <span data-ttu-id="086c0-3111"><xref:System.String.Empty?displayProperty=nameWithType>, который представляет пустую строку между «-» substring с индексом 0 и подстрока «_» с индексом 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-3111"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string between the "-" substring at index 0 and the "_" substring at index 1.</span></span>  
  
3.  <span data-ttu-id="086c0-3112">«aa»,</span><span class="sxs-lookup"><span data-stu-id="086c0-3112">"aa",</span></span>  
  
4.  <span data-ttu-id="086c0-3113"><xref:System.String.Empty?displayProperty=nameWithType>, который представляет пустую строку, которая следует за подстрокой «_» с индекса 4.</span><span class="sxs-lookup"><span data-stu-id="086c0-3113"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that follows the "_" substring at index 4.</span></span>  
  
5.  <span data-ttu-id="086c0-3114"><xref:System.String.Empty?displayProperty=nameWithType>, который представляет пустую строку, которая следует за «-» подстроку по индексу 5.</span><span class="sxs-lookup"><span data-stu-id="086c0-3114"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that follows the "-" substring at index 5.</span></span>  
  
### <a name="the-separator-array"></a><span data-ttu-id="086c0-3115">Массив разделителя</span><span class="sxs-lookup"><span data-stu-id="086c0-3115">The separator array</span></span>  
 <span data-ttu-id="086c0-3116">Если какие-либо элементы в `separator` состоит из нескольких символов всю подстроку считается разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-3116">If any of the elements in `separator` consists of multiple characters, the entire substring is considered a delimiter.</span></span> <span data-ttu-id="086c0-3117">Например, если один из элементов в `separator` «10», для разбиения строки «This10is10a10string.»</span><span class="sxs-lookup"><span data-stu-id="086c0-3117">For example, if one of the elements in `separator` is "10", attempting to split the string "This10is10a10string."</span></span> <span data-ttu-id="086c0-3118">Возвращает массив следующих четырех элементов: {«This», «is», «», «string».</span><span class="sxs-lookup"><span data-stu-id="086c0-3118">returns the following four-element array: { "This", "is", "a", "string."</span></span> <span data-ttu-id="086c0-3119">}.</span><span class="sxs-lookup"><span data-stu-id="086c0-3119">}.</span></span>  
  
 <span data-ttu-id="086c0-3120">Если `separator` параметр `null` или не содержит символы, пробелы считаются разделителями.</span><span class="sxs-lookup"><span data-stu-id="086c0-3120">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="086c0-3121">Символы-разделители определяются Unicode standard и возврата `true` если они передаются в <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3121">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="086c0-3122">Если `separator` параметр в вызове этой перегрузки метода является `null`, разрешение перегрузки компилятора оканчивается неудачей.</span><span class="sxs-lookup"><span data-stu-id="086c0-3122">If the `separator` parameter in the call to this method overload is `null`, compiler overload resolution fails.</span></span> <span data-ttu-id="086c0-3123">Чтобы однозначно идентифицировать вызываемому методу, код должен указать тип `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3123">To unambiguously identify the called method, your code must indicate the type of the `null`.</span></span> <span data-ttu-id="086c0-3124">В следующем примере показано несколько способов однозначно идентифицирует эту перегрузку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3124">The following example shows several ways to unambiguously identify this overload.</span></span>  
  
 [!code-csharp[System.String.Split#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split3.cs#6)]
 [!code-vb[System.String.Split#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split3.vb#6)]  
  
### <a name="comparison-details"></a><span data-ttu-id="086c0-3125">Сведения о сравнении</span><span class="sxs-lookup"><span data-stu-id="086c0-3125">Comparison details</span></span>  
 <span data-ttu-id="086c0-3126"><xref:System.String.Split%2A> Метод извлекает подстроки данной строки, разделенные один или несколько строк в `separator` параметра и возвращает эти подстроки в виде элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-3126">The <xref:System.String.Split%2A> method extracts the substrings in this string that are delimited by one or more of the strings in the `separator` parameter, and returns those substrings as elements of an array.</span></span>  
  
 <span data-ttu-id="086c0-3127"><xref:System.String.Split%2A> Метод ищет разделители, выполняя сравнения, используя правила сортировки по порядковому номеру с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3127">The <xref:System.String.Split%2A> method looks for delimiters by performing comparisons using case-sensitive ordinal sort rules.</span></span> <span data-ttu-id="086c0-3128">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-3128">For more information about word, string, and ordinal sorts, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span>  
  
 <span data-ttu-id="086c0-3129"><xref:System.String.Split%2A> Метод игнорирует любой элемент `separator` , значение которого равно `null` или является пустой строкой (»»).</span><span class="sxs-lookup"><span data-stu-id="086c0-3129">The <xref:System.String.Split%2A> method ignores any element of `separator` whose value is `null` or the empty string ("").</span></span>  
  
 <span data-ttu-id="086c0-3130">Чтобы избежать неоднозначных результаты при строки в `separator` имеют общие, символы <xref:System.String.Split%2A> операции переходит от начала к концу значения экземпляра и находит первый элемент в `separator` равный разделитель в экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3130">To avoid ambiguous results when strings in `separator` have characters in common, the <xref:System.String.Split%2A> operation proceeds from the beginning to the end of the value of the instance, and matches the first element in `separator` that is equal to a delimiter in the instance.</span></span> <span data-ttu-id="086c0-3131">Порядок обнаружения подстрок в экземпляре имеет приоритет над порядком элементов в `separator`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3131">The order in which substrings are encountered in the instance takes precedence over the order of elements in `separator`.</span></span>  
  
 <span data-ttu-id="086c0-3132">Например рассмотрим экземпляр, значение которого является «abcdef».</span><span class="sxs-lookup"><span data-stu-id="086c0-3132">For example, consider an instance whose value is "abcdef".</span></span> <span data-ttu-id="086c0-3133">Если первый элемент в `separator` «ef», а второй элемент — «bcde», и результат операции разделения, будет иметь строковый массив, содержащий два элемента, «a» и «f».</span><span class="sxs-lookup"><span data-stu-id="086c0-3133">If the first element in `separator` was "ef" and the second element was "bcde", the result of the split operation would be a string array that contains two elements, "a" and "f".</span></span> <span data-ttu-id="086c0-3134">Это обусловлено подстроки в экземпляре, «bcde», обнаружении и соответствующий элемент в `separator` прежде, чем подстрока «f» встречается.</span><span class="sxs-lookup"><span data-stu-id="086c0-3134">This is because the substring in the instance, "bcde", is encountered and matches an element in `separator` before the substring "f" is encountered.</span></span>  
  
 <span data-ttu-id="086c0-3135">Тем не менее если первый элемент `separator` «bcd», а второй элемент — «bc», и результат операции разделения, будет иметь строковый массив, содержащий два элемента, «a» и «ef».</span><span class="sxs-lookup"><span data-stu-id="086c0-3135">However, if the first element of `separator` was "bcd" and the second element was "bc", the result of the split operation would be a string array that contains two elements, "a" and "ef".</span></span> <span data-ttu-id="086c0-3136">Это обусловлено «bcd» является первым разделителем в `separator` , соответствует разделителю в экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3136">This is because "bcd" is the first delimiter in `separator` that matches a delimiter in the instance.</span></span> <span data-ttu-id="086c0-3137">Если порядок разделители была отменена, так что первый элемент «bc», а вторым — «bcd», результат будет иметь строковый массив, содержащий два элемента, «a» и «def».</span><span class="sxs-lookup"><span data-stu-id="086c0-3137">If the order of the separators was reversed so the first element was "bc" and the second element was "bcd", the result would be a string array that contains two elements,  "a" and "def".</span></span>  
  
### <a name="performance-considerations"></a><span data-ttu-id="086c0-3138">Особенности производительности</span><span class="sxs-lookup"><span data-stu-id="086c0-3138">Performance considerations</span></span>  
 <span data-ttu-id="086c0-3139"><xref:System.String.Split%2A> Методы выделить память для возвращаемого массива объекта и <xref:System.String> объекта для каждого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-3139">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="086c0-3140">Если приложению требуется оптимальной производительности или распределением памяти является критически важным в приложении, рассмотрите возможность использования <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод и при необходимости <xref:System.String.Compare%2A> метод для поиска подстроки в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3140">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="086c0-3141">Если вы разделяете строка с символа разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод необходимо найти знаков-разделителей в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3141">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="086c0-3142">Если вы разделяете строку в строку разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод для обнаружения первого символа строки разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3142">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="086c0-3143">Затем с помощью <xref:System.String.Compare%2A> метод, чтобы определить, равны ли знаки после первого знака остальные символы строки-разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3143">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="086c0-3144">Кроме того, если же набор символов используется для разделения строк в нескольких <xref:System.String.Split%2A> вызовы методов, рекомендуется создать один массив и ссылающихся на него в каждом вызове метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3144">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="086c0-3145">Это значительно снижает дополнительную нагрузку, каждый вызов метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3145">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3146">В следующем примере демонстрируется разница в массивы, возвращаемые вызовом строки <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29?displayProperty=nameWithType> метод с его `options` параметра равным <xref:System.StringSplitOptions.None?displayProperty=nameWithType> и <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3146">The following example illustrates the difference in the arrays returned by calling a string's <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29?displayProperty=nameWithType> method with its `options` parameter equal to <xref:System.StringSplitOptions.None?displayProperty=nameWithType> and <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp-interactive[System.String.Split#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/Split.cs#1)]
 [!code-vb[System.String.Split#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/Split.vb#1)]  
  
 <span data-ttu-id="086c0-3147">В следующем примере определяется массив разделители, включающих знаки пунктуации и пробелы.</span><span class="sxs-lookup"><span data-stu-id="086c0-3147">The following example defines an array of separators that include punctuation and white-space characters.</span></span> <span data-ttu-id="086c0-3148">Передача этого массива, а также значение <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType> для <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29> метод возвращает массив, состоящий из отдельные слова из строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3148">Passing this array along with a value of <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType> to the <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29> method returns an array that consists of the individual words from the string.</span></span>  
  
 [!code-csharp-interactive[System.String.Split#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split7.cs#7)]
 [!code-vb[System.String.Split#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split7.vb#7)]  
  
 <span data-ttu-id="086c0-3149">Обратите внимание, что метод вызывается с `options` аргумент значение <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3149">Note that the method is called with the `options` argument set to <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType>.</span></span> <span data-ttu-id="086c0-3150">Это предотвращает включая возвращаемый массив <xref:System.String.Empty?displayProperty=nameWithType> значения, представляющие пустые подстроки соответствия между пунктуации и пробелы.</span><span class="sxs-lookup"><span data-stu-id="086c0-3150">This prevents the returned array from including <xref:System.String.Empty?displayProperty=nameWithType> values that represent empty substring matches between punctuation marks and white-space characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-3151"><paramref name="options" /> не является одним из значений <see cref="T:System.StringSplitOptions" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3151"><paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3152">В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, если <see cref="M:System.String.Split(System.Char[])" /> методу передается <paramref name="separator" /> то есть <see langword="null" /> или не содержит знаков, метод использует немного другой набор символов для разбиения строки чем <see cref="M:System.String.Trim(System.Char[])" /> выполняет метод, чтобы усекает строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3152">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string.</span></span> <span data-ttu-id="086c0-3153">Начиная с .NET Framework 4, в обоих методах используется идентичный набор пробельные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3153">Starting with the .NET Framework 4, both methods use an identical set of Unicode white-space characters.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char separator, int count, StringSplitOptions options = System.StringSplitOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char,System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char, count As Integer, Optional options As StringSplitOptions = System.StringSplitOptions.None) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : char * int * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.StringSplitOptions" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="count">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char[] separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char(), count As Integer, options As StringSplitOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;char&gt; ^ separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] * int * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.StringSplitOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-3154">Массив символов, разделяющий подстроки в данной строке, пустой массив, не содержащий разделителей, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3154">A character array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-3155">Максимальное число возвращаемых подстрок.</span><span class="sxs-lookup"><span data-stu-id="086c0-3155">The maximum number of substrings to return.</span></span></param>
        <param name="options"><span data-ttu-id="086c0-3156"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, чтобы исключить пустые элементы из возвращаемого массива; или <see cref="F:System.StringSplitOptions.None" /> для включения пустых элементов в возвращаемый массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3156"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None" /> to include empty array elements in the array returned.</span></span></param>
        <summary><span data-ttu-id="086c0-3157">Разбивает строку на максимальное число подстрок в зависимости от символов в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-3157">Splits a string into a maximum number of substrings based on the characters in an array.</span></span></summary>
        <returns><span data-ttu-id="086c0-3158">Массив, элементы которого содержат подстроки данной строки, разделенные одним или более знаками из <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3158">An array whose elements contain the substrings in this string that are delimited by one or more characters in <paramref name="separator" />.</span></span> <span data-ttu-id="086c0-3159">Дополнительные сведения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="086c0-3159">For more information, see the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3160">Символы-разделители не включаются в возвращаемый массив элементов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3160">Delimiter characters are not included in the elements of the returned array.</span></span>  
  
 <span data-ttu-id="086c0-3161">Если этот экземпляр не содержит символы, входящие в `separator`, или `count` параметр имеет значение 1, возвращаемый массив состоит из одного элемента, содержащего данный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3161">If this instance does not contain any of the characters in `separator`, or the `count` parameter is 1, the returned array consists of a single element that contains this instance.</span></span> <span data-ttu-id="086c0-3162">Если `separator` параметр `null` или не содержит символы, пробелы считаются разделителями.</span><span class="sxs-lookup"><span data-stu-id="086c0-3162">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="086c0-3163">Символы-разделители определяются Unicode standard и возврата `true` если они передаются в <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3163">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="086c0-3164">Тем не менее если `separator` параметр в вызове этой перегрузки метода является `null`, разрешение перегрузки компилятора оканчивается неудачей.</span><span class="sxs-lookup"><span data-stu-id="086c0-3164">However, if the `separator` parameter in the call to this method overload is `null`, compiler overload resolution fails.</span></span> <span data-ttu-id="086c0-3165">Чтобы однозначно идентифицировать вызываемому методу, код необходимо указать тип значение null.</span><span class="sxs-lookup"><span data-stu-id="086c0-3165">To unambiguously identify the called method, your code must indicate the type of the null.</span></span> <span data-ttu-id="086c0-3166">В следующем примере показано несколько способов однозначно идентифицирует эту перегрузку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3166">The following example shows several ways to unambiguously identify this overload.</span></span>  
  
 [!code-csharp[System.String.Split#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split3.cs#3)]
 [!code-vb[System.String.Split#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split3.vb#3)]  
  
 <span data-ttu-id="086c0-3167">Если `count` равно нулю, или `options` параметр <xref:System.StringSplitOptions.RemoveEmptyEntries> и длину этого экземпляра равно нулю, возвращается пустой массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3167">If the `count` parameter is zero, or the `options` parameter is <xref:System.StringSplitOptions.RemoveEmptyEntries> and the length of this instance is zero, an empty array is returned.</span></span>  
  
 <span data-ttu-id="086c0-3168">Каждый элемент `separator` определяет отдельный знак-разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-3168">Each element of `separator` defines a separate delimiter character.</span></span> <span data-ttu-id="086c0-3169">Если `options` параметр <xref:System.StringSplitOptions.None>и двумя разделителями являются смежными или разделитель находится в начале или в конце данного экземпляра, соответствующий элемент массива содержит <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3169">If the `options` parameter is <xref:System.StringSplitOptions.None>, and two delimiters are adjacent or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="086c0-3170">При наличии более чем `count` подстроки данного экземпляра, первый `count` минус 1 подстрок возвращаются в первом `count` возвращается минус 1 элементах возвращаемого значения, а остальные символы в этом экземпляре за последние элемент возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="086c0-3170">If there are more than `count` substrings in this instance, the first `count` minus 1 substrings are returned in the first `count` minus 1 elements of the return value, and the remaining characters in this instance are returned in the last element of the return value.</span></span>  
  
 <span data-ttu-id="086c0-3171">Если `count` больше, чем число подстрок, возвращаются доступные подстрок и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="086c0-3171">If `count` is greater than the number of substrings, the available substrings are returned and no exception is thrown.</span></span>  
  
### <a name="performance-considerations"></a><span data-ttu-id="086c0-3172">Особенности производительности</span><span class="sxs-lookup"><span data-stu-id="086c0-3172">Performance Considerations</span></span>  
 <span data-ttu-id="086c0-3173"><xref:System.String.Split%2A> Методы выделить память для возвращаемого массива объекта и <xref:System.String> объекта для каждого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-3173">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="086c0-3174">Если приложению требуется оптимальной производительности или распределением памяти является критически важным в приложении, рассмотрите возможность использования <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод и при необходимости <xref:System.String.Compare%2A> метод для поиска подстроки в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3174">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="086c0-3175">Если вы разделяете строка с символа разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод необходимо найти знаков-разделителей в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3175">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="086c0-3176">Если вы разделяете строку в строку разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод для обнаружения первого символа строки разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3176">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="086c0-3177">Затем с помощью <xref:System.String.Compare%2A> метод, чтобы определить, равны ли знаки после первого знака остальные символы строки-разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3177">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="086c0-3178">Кроме того, если же набор символов используется для разделения строк в нескольких <xref:System.String.Split%2A> вызовы методов, рекомендуется создать один массив и ссылающихся на него в каждом вызове метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3178">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="086c0-3179">Это значительно снижает дополнительную нагрузку, каждый вызов метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3179">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3180">В следующем примере используется <xref:System.StringSplitOptions> перечисления для включения или исключения подстрок, создаваемые <xref:System.String.Split%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3180">The following example uses the <xref:System.StringSplitOptions> enumeration to include or exclude substrings generated by the <xref:System.String.Split%2A> method.</span></span>  
  
 [!code-cpp[string.split3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.split3/CPP/omit.cpp#1)]
 [!code-csharp-interactive[string.split3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.split3/CS/omit.cs#1)]
 [!code-vb[string.split3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.split3/VB/omit.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-3181"><paramref name="count" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-3181"><paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-3182"><paramref name="options" /> не является одним из значений <see cref="T:System.StringSplitOptions" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3182"><paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3183">В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, если <see cref="M:System.String.Split(System.Char[])" /> методу передается <paramref name="separator" /> то есть <see langword="null" /> или не содержит знаков, метод использует немного другой набор символов для разбиения строки чем <see cref="M:System.String.Trim(System.Char[])" /> выполняет метод, чтобы усекает строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3183">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string.</span></span> <span data-ttu-id="086c0-3184">Начиная с .NET Framework 4, в обоих методах используется идентичный набор пробельные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3184">Starting with the .NET Framework 4, both methods use an identical set of Unicode white-space characters.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string separator, int count, StringSplitOptions options = System.StringSplitOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.String,System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String, count As Integer, Optional options As StringSplitOptions = System.StringSplitOptions.None) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : string * int * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.StringSplitOptions" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="count">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string[] separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string[] separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.String[],System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String(), count As Integer, options As StringSplitOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;System::String ^&gt; ^ separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="F#" Value="member this.Split : string[] * int * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.StringSplitOptions" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="086c0-3185">Массив строк, разделяющих подстроки в данной строке, пустой массив, не содержащий разделителей, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3185">A string array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span></span></param>
        <param name="count"><span data-ttu-id="086c0-3186">Максимальное число возвращаемых подстрок.</span><span class="sxs-lookup"><span data-stu-id="086c0-3186">The maximum number of substrings to return.</span></span></param>
        <param name="options"><span data-ttu-id="086c0-3187"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, чтобы исключить пустые элементы из возвращаемого массива; или <see cref="F:System.StringSplitOptions.None" /> для включения пустых элементов в возвращаемый массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3187"><see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None" /> to include empty array elements in the array returned.</span></span></param>
        <summary><span data-ttu-id="086c0-3188">Разбивает строку на максимальное число подстрок в зависимости от строк в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-3188">Splits a string into a maximum number of substrings based on the strings in an array.</span></span> <span data-ttu-id="086c0-3189">Можно указать, включают ли подстроки пустые элементы массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-3189">You can specify whether the substrings include empty array elements.</span></span></summary>
        <returns><span data-ttu-id="086c0-3190">Массив, элементы которого содержат подстроки данной строки, разделенные одной или более строками из <paramref name="separator" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3190">An array whose elements contain the substrings in this string that are delimited by one or more strings in <paramref name="separator" />.</span></span> <span data-ttu-id="086c0-3191">Дополнительные сведения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="086c0-3191">For more information, see the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
### <a name="return-value-details"></a><span data-ttu-id="086c0-3192">Сведения о возвращаемом значении</span><span class="sxs-lookup"><span data-stu-id="086c0-3192">Return value details</span></span>  
 <span data-ttu-id="086c0-3193">Строки-разделители не включаются в возвращаемый массив элементов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3193">Delimiter strings are not included in the elements of the returned array.</span></span>  
  
 <span data-ttu-id="086c0-3194">Если этот экземпляр не содержит любой из строк в `separator`, или `count` параметр имеет значение 1, возвращаемый массив состоит из одного элемента, содержащего данный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3194">If this instance does not contain any of the strings in `separator`, or the `count` parameter is 1, the returned array consists of a single element that contains this instance.</span></span> <span data-ttu-id="086c0-3195">Если `separator` параметр `null` или не содержит символы, пробелы считаются разделителями.</span><span class="sxs-lookup"><span data-stu-id="086c0-3195">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="086c0-3196">Символы-разделители определяются Unicode standard и возврата `true` если они передаются в <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3196">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="086c0-3197">Тем не менее если `separator` параметр в вызове этой перегрузки метода является `null`, разрешение перегрузки компилятора оканчивается неудачей.</span><span class="sxs-lookup"><span data-stu-id="086c0-3197">However, if the `separator` parameter in the call to this method overload is `null`, compiler overload resolution fails.</span></span> <span data-ttu-id="086c0-3198">Чтобы однозначно идентифицировать вызываемому методу, код должен указать тип `null`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3198">To unambiguously identify the called method, your code must indicate the type of the `null`.</span></span> <span data-ttu-id="086c0-3199">В следующем примере показано несколько способов однозначно идентифицирует эту перегрузку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3199">The following example shows several ways to unambiguously identify this overload.</span></span>  
  
 [!code-csharp[System.String.Split#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split3.cs#4)]
 [!code-vb[System.String.Split#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split3.vb#4)]  
  
 <span data-ttu-id="086c0-3200">Если `count` равно нулю, или `options` параметр <xref:System.StringSplitOptions.RemoveEmptyEntries> и длину этого экземпляра равно нулю, возвращается пустой массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3200">If the `count` parameter is zero, or the `options` parameter is <xref:System.StringSplitOptions.RemoveEmptyEntries> and the length of this instance is zero, an empty array is returned.</span></span>  
  
 <span data-ttu-id="086c0-3201">Каждый элемент `separator` определяет отдельный разделитель, который состоит из одного или нескольких символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3201">Each element of `separator` defines a separate delimiter that consists of one or more characters.</span></span> <span data-ttu-id="086c0-3202">Если `options` параметр <xref:System.StringSplitOptions.None>и двумя разделителями являются смежными или разделитель находится в начале или в конце данного экземпляра, соответствующий элемент массива содержит <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3202">If the `options` parameter is <xref:System.StringSplitOptions.None>, and two delimiters are adjacent or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="086c0-3203">При наличии более чем `count` подстроки данного экземпляра, первый `count` минус 1 подстрок возвращаются в первом `count` возвращается минус 1 элементах возвращаемого значения, а остальные символы в этом экземпляре за последние элемент возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="086c0-3203">If there are more than `count` substrings in this instance, the first `count` minus 1 substrings are returned in the first `count` minus 1 elements of the return value, and the remaining characters in this instance are returned in the last element of the return value.</span></span>  
  
 <span data-ttu-id="086c0-3204">Если `count` больше, чем число подстрок, возвращаются доступные подстрок и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="086c0-3204">If `count` is greater than the number of substrings, the available substrings are returned and no exception is thrown.</span></span>  
  
### <a name="the-separator-array"></a><span data-ttu-id="086c0-3205">Массив разделителя</span><span class="sxs-lookup"><span data-stu-id="086c0-3205">The separator array</span></span>  
 <span data-ttu-id="086c0-3206">Если какие-либо элементы в `separator` состоит из нескольких символов всю подстроку считается разделитель.</span><span class="sxs-lookup"><span data-stu-id="086c0-3206">If any of the elements in `separator` consists of multiple characters, the entire substring is considered a delimiter.</span></span> <span data-ttu-id="086c0-3207">Например, если один из элементов в `separator` «10», для разбиения строки «This10is10a10string.»</span><span class="sxs-lookup"><span data-stu-id="086c0-3207">For example, if one of the elements in `separator` is "10", attempting to split the string "This10is10a10string."</span></span> <span data-ttu-id="086c0-3208">Возвращает исходный массив четырех элементов: {«This», «is», «», «string».</span><span class="sxs-lookup"><span data-stu-id="086c0-3208">returns this four-element array: { "This", "is", "a", "string."</span></span> <span data-ttu-id="086c0-3209">}.</span><span class="sxs-lookup"><span data-stu-id="086c0-3209">}.</span></span>  
  
### <a name="comparison-details"></a><span data-ttu-id="086c0-3210">Сведения о сравнении</span><span class="sxs-lookup"><span data-stu-id="086c0-3210">Comparison details</span></span>  
 <span data-ttu-id="086c0-3211"><xref:System.String.Split%2A> Метод извлекает подстроки данной строки, разделенные один или несколько строк в `separator` параметра и возвращает эти подстроки в виде элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-3211">The <xref:System.String.Split%2A> method extracts the substrings in this string that are delimited by one or more of the strings in the `separator` parameter, and returns those substrings as elements of an array.</span></span>  
  
 <span data-ttu-id="086c0-3212"><xref:System.String.Split%2A> Метод ищет разделители, выполняя сравнения, используя правила сортировки по порядковому номеру с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3212">The <xref:System.String.Split%2A> method looks for delimiters by performing comparisons using case-sensitive ordinal sort rules.</span></span> <span data-ttu-id="086c0-3213">Дополнительные сведения о word, строка и порядковым номерам, см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> перечисления.</span><span class="sxs-lookup"><span data-stu-id="086c0-3213">For more information about word, string, and ordinal sorts, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span>  
  
 <span data-ttu-id="086c0-3214"><xref:System.String.Split%2A> Метод игнорирует любой элемент `separator` , значение которого равно `null` или является пустой строкой (»»).</span><span class="sxs-lookup"><span data-stu-id="086c0-3214">The <xref:System.String.Split%2A> method ignores any element of `separator` whose value is `null` or the empty string ("").</span></span>  
  
 <span data-ttu-id="086c0-3215">Чтобы избежать неоднозначных результаты при строки в `separator` имеют общие, символы <xref:System.String.Split%2A> метод переходит от начала к концу значения экземпляра и находит первый элемент в `separator` равный разделитель в экземпляр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3215">To avoid ambiguous results when strings in `separator` have characters in common, the <xref:System.String.Split%2A> method proceeds from the beginning to the end of the value of the instance, and matches the first element in `separator` that is equal to a delimiter in the instance.</span></span> <span data-ttu-id="086c0-3216">Порядок обнаружения подстрок в экземпляре имеет приоритет над порядком элементов в `separator`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3216">The order in which substrings are encountered in the instance takes precedence over the order of elements in `separator`.</span></span>  
  
 <span data-ttu-id="086c0-3217">Например рассмотрим экземпляр, значение которого является «abcdef».</span><span class="sxs-lookup"><span data-stu-id="086c0-3217">For example, consider an instance whose value is "abcdef".</span></span> <span data-ttu-id="086c0-3218">Если первый элемент в `separator` «ef», а второй элемент — «bcde», и результат операции разделения будет иметь «a» и «f».</span><span class="sxs-lookup"><span data-stu-id="086c0-3218">If the first element in `separator` was "ef" and the second element was "bcde", the result of the split operation would be "a" and "f".</span></span> <span data-ttu-id="086c0-3219">Это обусловлено подстроки в экземпляре, «bcde», обнаружении и соответствующий элемент в `separator` прежде, чем подстрока «f» встречается.</span><span class="sxs-lookup"><span data-stu-id="086c0-3219">This is because the substring in the instance, "bcde", is encountered and matches an element in `separator` before the substring "f" is encountered.</span></span>  
  
 <span data-ttu-id="086c0-3220">Тем не менее если первый элемент `separator` «bcd», а второй элемент — «bc», и результат операции разделения будет иметь «a» и «ef».</span><span class="sxs-lookup"><span data-stu-id="086c0-3220">However, if the first element of `separator` was "bcd" and the second element was "bc", the result of the split operation would be "a" and "ef".</span></span> <span data-ttu-id="086c0-3221">Это обусловлено «bcd» является первым разделителем в `separator` , соответствует разделителю в экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3221">This is because "bcd" is the first delimiter in `separator` that matches a delimiter in the instance.</span></span> <span data-ttu-id="086c0-3222">Если порядок разделители была отменена, так что первый элемент «bc», а вторым — «bcd», результат будет иметь «a» и «def».</span><span class="sxs-lookup"><span data-stu-id="086c0-3222">If the order of the separators was reversed so the first element was "bc" and the second element was "bcd", the result would be "a" and "def".</span></span>  
  
### <a name="performance-considerations"></a><span data-ttu-id="086c0-3223">Особенности производительности</span><span class="sxs-lookup"><span data-stu-id="086c0-3223">Performance considerations</span></span>  
 <span data-ttu-id="086c0-3224"><xref:System.String.Split%2A> Методы выделить память для возвращаемого массива объекта и <xref:System.String> объекта для каждого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-3224">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="086c0-3225">Если приложению требуется оптимальной производительности или распределением памяти является критически важным в приложении, рассмотрите возможность использования <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод и при необходимости <xref:System.String.Compare%2A> метод для поиска подстроки в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3225">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="086c0-3226">Если вы разделяете строка с символа разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод необходимо найти знаков-разделителей в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3226">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="086c0-3227">Если вы разделяете строку в строку разделителя, используйте <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOfAny%2A> метод для обнаружения первого символа строки разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3227">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="086c0-3228">Затем с помощью <xref:System.String.Compare%2A> метод, чтобы определить, равны ли знаки после первого знака остальные символы строки-разделителя.</span><span class="sxs-lookup"><span data-stu-id="086c0-3228">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="086c0-3229">Кроме того, если же набор символов используется для разделения строк в нескольких <xref:System.String.Split%2A> вызовы методов, рекомендуется создать один массив и ссылающихся на него в каждом вызове метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3229">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="086c0-3230">Это значительно снижает дополнительную нагрузку, каждый вызов метода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3230">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3231">В следующем примере используется <xref:System.StringSplitOptions> перечисления для включения или исключения подстрок, создаваемые <xref:System.String.Split%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3231">The following example uses the <xref:System.StringSplitOptions> enumeration to include or exclude substrings generated by the <xref:System.String.Split%2A> method.</span></span>  
  
 [!code-cpp[string.split3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.split3/CPP/omit.cpp#1)]
 [!code-csharp-interactive[string.split3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.split3/CS/omit.cs#1)]
 [!code-vb[string.split3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.split3/VB/omit.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-3232"><paramref name="count" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="086c0-3232"><paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-3233"><paramref name="options" /> не является одним из значений <see cref="T:System.StringSplitOptions" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3233"><paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3234">В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, если <see cref="M:System.String.Split(System.Char[])" /> методу передается <paramref name="separator" /> то есть <see langword="null" /> или не содержит знаков, метод использует немного другой набор символов для разбиения строки чем <see cref="M:System.String.Trim(System.Char[])" /> выполняет метод, чтобы усекает строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3234">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string.</span></span> <span data-ttu-id="086c0-3235">Начиная с .NET Framework 4, в обоих методах используется идентичный набор пробельные символы Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3235">Starting with the .NET Framework 4, both methods use an identical set of Unicode white-space characters.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartsWith">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-3236">Определяет, совпадает ли начало данного экземпляра строки с указанной строкой.</span><span class="sxs-lookup"><span data-stu-id="086c0-3236">Determines whether the beginning of this string instance matches a specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.StartsWith(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(char value);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : char -&gt; bool" Usage="string.StartsWith value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.StartsWith(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string -&gt; bool" Usage="string.StartsWith value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-3237">Строка, подлежащая сравнению.</span><span class="sxs-lookup"><span data-stu-id="086c0-3237">The string to compare.</span></span></param>
        <summary><span data-ttu-id="086c0-3238">Определяет, совпадает ли начало данного экземпляра строки с указанной строкой.</span><span class="sxs-lookup"><span data-stu-id="086c0-3238">Determines whether the beginning of this string instance matches the specified string.</span></span></summary>
        <returns><span data-ttu-id="086c0-3239">Значение <see langword="true" />, если параметр <paramref name="value" /> соответствует началу данной строки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3239"><see langword="true" /> if <paramref name="value" /> matches the beginning of this string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3240">Этот метод сравнивает `value` подстрокой, расположенной в начало данного экземпляра, который имеет такую же длину, как `value`и возвращает значение, указывающее, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="086c0-3240">This method compares `value` to the substring at the beginning of this instance that is the same length as `value`, and returns an indication whether they are equal.</span></span> <span data-ttu-id="086c0-3241">Равными, `value` должна быть пустой строкой (<xref:System.String.Empty?displayProperty=nameWithType>), должен быть ссылкой на тот же экземпляр или должны соответствовать начало данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3241">To be equal, `value` must be an empty string (<xref:System.String.Empty?displayProperty=nameWithType>), must be a reference to this same instance, or must match the beginning of this instance.</span></span>  
  
 <span data-ttu-id="086c0-3242">Этот метод выполняет сравнение по словам (с учетом регистра и культуры) с использованием текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3242">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3243">В следующем примере определяется `StripStartTags` метод, который использует <xref:System.String.StartsWith%28System.String%29> способ удаления HTML открывающие теги в начале строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3243">The following example defines a `StripStartTags` method that uses the <xref:System.String.StartsWith%28System.String%29> method to remove HTML start tags from the beginning of a string.</span></span> <span data-ttu-id="086c0-3244">Обратите внимание, что `StripStartTags` метод вызывается рекурсивно для убедитесь, что удалены несколько открывающие теги HTML в начале строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3244">Note that the `StripStartTags` method is called recursively to ensure that multiple HTML start tags at the beginning of the line are removed.</span></span> <span data-ttu-id="086c0-3245">Пример не удаляет HTML-теги, внедренных в строку.</span><span class="sxs-lookup"><span data-stu-id="086c0-3245">The example does not remove HTML tags embedded in a string.</span></span>  
  
 [!code-cpp[stringstartswith#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringstartswith/CPP/stringstartswith.cpp#1)]
 [!code-csharp[stringstartswith#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringstartswith/CS/stringstartswith.cs#1)]
 [!code-vb[stringstartswith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringstartswith/VB/stringstartswith.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-3246"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3246"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3247">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методы сравнения строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-3247">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-3248">Чтобы определить, начинается ли строка определенной подстрокой, используя правила сравнения строк для текущего языка и региональных параметров, вызовите <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" /> перегрузку метода со значением <see cref="F:System.StringComparison.CurrentCulture" /> для его <paramref name="comparisonType" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3248">To determine whether a string begins with a particular substring by using the string comparison rules of the current culture, call the <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</span></span></para></block>
        <altmember cref="M:System.String.EndsWith(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.StartsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * StringComparison -&gt; bool" Usage="string.StartsWith (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-3249">Строка, подлежащая сравнению.</span><span class="sxs-lookup"><span data-stu-id="086c0-3249">The string to compare.</span></span></param>
        <param name="comparisonType"><span data-ttu-id="086c0-3250">Одно из значений перечисления, определяющее способ сравнения данной строки со значением <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3250">One of the enumeration values that determines how this string and <paramref name="value" /> are compared.</span></span></param>
        <summary><span data-ttu-id="086c0-3251">Определяет, совпадает ли начало этого экземпляра строки с заданной строкой при сравнении с учетом заданного параметра сравнения.</span><span class="sxs-lookup"><span data-stu-id="086c0-3251">Determines whether the beginning of this string instance matches the specified string when compared using the specified comparison option.</span></span></summary>
        <returns><span data-ttu-id="086c0-3252">Значение <see langword="true" />, если данный экземпляр начинается со значения <paramref name="value" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3252"><see langword="true" /> if this instance begins with <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3253"><xref:System.String.StartsWith%2A> Метод сравнивает `value` параметр подстрокой, расположенной в начало этой строки и возвращает значение, указывающее, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="086c0-3253">The <xref:System.String.StartsWith%2A> method compares the `value` parameter to the substring at the beginning of this string and returns a value that indicates whether they are equal.</span></span> <span data-ttu-id="086c0-3254">Равными, `value` должен быть ссылкой на ту же строку, должно быть пустой строкой ("»), или необходимо соответствует началу данной строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3254">To be equal, `value` must be a reference to this same string, must be the empty string (""), or must match the beginning of this string.</span></span> <span data-ttu-id="086c0-3255">Тип сравнения, выполняемые <xref:System.String.StartsWith%2A> метод зависит от значения `comparisonType` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3255">The type of comparison performed by the <xref:System.String.StartsWith%2A> method depends on the value of the `comparisonType` parameter.</span></span> <span data-ttu-id="086c0-3256">Сравнения можно использовать соглашения текущих региональных параметров (<xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType> и <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>) или инвариантного языка и региональных параметров (<xref:System.StringComparison.InvariantCulture?displayProperty=nameWithType> и <xref:System.StringComparison.InvariantCultureIgnoreCase?displayProperty=nameWithType>), или он может включать символ за символом сравнения кодовых позиций (<xref:System.StringComparison.Ordinal?displayProperty=nameWithType> или <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="086c0-3256">The comparison can use the conventions of the current culture (<xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType> and <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>) or the invariant culture (<xref:System.StringComparison.InvariantCulture?displayProperty=nameWithType> and <xref:System.StringComparison.InvariantCultureIgnoreCase?displayProperty=nameWithType>), or it can consist of a character-by-character comparison of code points (<xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>).</span></span> <span data-ttu-id="086c0-3257">Сравнение может выполняться с учетом регистра (<xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, <xref:System.StringComparison.InvariantCulture?displayProperty=nameWithType>, или <xref:System.StringComparison.Ordinal?displayProperty=nameWithType>), или он может не учитывать регистр (<xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>, <xref:System.StringComparison.InvariantCultureIgnoreCase?displayProperty=nameWithType>, <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="086c0-3257">The comparison can also be case-sensitive (<xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, <xref:System.StringComparison.InvariantCulture?displayProperty=nameWithType>, or <xref:System.StringComparison.Ordinal?displayProperty=nameWithType>), or it can ignore case (<xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>, <xref:System.StringComparison.InvariantCultureIgnoreCase?displayProperty=nameWithType>, <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3258">Следующий пример выполняет поиск строки «» в начале более длинной строки, которая начинается со слова «».</span><span class="sxs-lookup"><span data-stu-id="086c0-3258">The following example searches for the string "the" at the beginning of a longer string that begins with the word "The".</span></span> <span data-ttu-id="086c0-3259">Как видно в результатах показано в примере, вызов <xref:System.String.StartsWith%28System.String%2CSystem.StringComparison%29> метод, который выполняет сравнение без учета языка и региональных параметров, но с учетом регистра не соответствует строке, во время вызова, который выполняет сравнение языка и региональных параметров и case insensitive соответствует строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3259">As the output from the example shows, a call to the <xref:System.String.StartsWith%28System.String%2CSystem.StringComparison%29> method that performs a culture-insensitive but case-sensitive comparison fails to match the string, while a call that performs a culture- and case-insensitive comparison matches the string.</span></span>  
  
 [!code-cpp[System.String.StartsWith#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.startswith/cpp/StartsWith2.cpp#2)]
 [!code-csharp[System.String.StartsWith#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.startswith/cs/StartsWith2.cs#2)]
 [!code-vb[System.String.StartsWith#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.startswith/vb/StartsWith2.vb#2)]  
  
 <span data-ttu-id="086c0-3260">В следующем примере определяется, начинается ли строка определенной подстрокой.</span><span class="sxs-lookup"><span data-stu-id="086c0-3260">The following example determines whether a string starts with a particular substring.</span></span> <span data-ttu-id="086c0-3261">Он инициализирует двухмерный массив объектов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3261">It initializes a two-dimensional string array.</span></span> <span data-ttu-id="086c0-3262">Первого элемента во втором измерении содержит строку, а второй элемент строку для поиска в начале первой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3262">The first element in the second dimension contains a string, and the second element contains the string to search for at the start of the first string.</span></span> <span data-ttu-id="086c0-3263">Результаты зависят от выбора языка и региональных параметров, учитывается ли регистр и выполняется ли порядковое сравнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-3263">The results are affected by the choice of culture, whether case is ignored, and whether an ordinal comparison is performed.</span></span> <span data-ttu-id="086c0-3264">Обратите внимание, что если экземпляре строки содержит лигатур, сравнения с учетом языка и региональных параметров с помощью его последовательные символы успешно соответствовать.</span><span class="sxs-lookup"><span data-stu-id="086c0-3264">Note that when the string instance contains a ligature, culture-sensitive comparisons with its consecutive characters successfully match.</span></span>  
  
 [!code-cpp[System.String.StartsWith#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.startswith/cpp/startswith1.cpp#1)]
 [!code-csharp[System.String.StartsWith#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.startswith/cs/startswith1.cs#1)]
 [!code-vb[System.String.StartsWith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.startswith/vb/startswith1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-3265"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3265"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="086c0-3266"><paramref name="comparisonType" /> не является значением <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3266"><paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span></span></exception>
        <altmember cref="T:System.StringComparison" />
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string value, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string value, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As String, ignoreCase As Boolean, culture As CultureInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ value, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * bool * System.Globalization.CultureInfo -&gt; bool" Usage="string.StartsWith (value, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="086c0-3267">Строка, подлежащая сравнению.</span><span class="sxs-lookup"><span data-stu-id="086c0-3267">The string to compare.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="086c0-3268">Значение <see langword="true" />, чтобы не учитывать регистр при сравнении; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3268"><see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span></span></param>
        <param name="culture"><span data-ttu-id="086c0-3269">Связанные с языком и региональными параметрами сведения, определяющие, как выполняется сравнение этой строки и <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3269">Cultural information that determines how this string and <paramref name="value" /> are compared.</span></span> <span data-ttu-id="086c0-3270">Если значением параметра <paramref name="culture" /> является <see langword="null" />, используется текущий язык и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="086c0-3270">If <paramref name="culture" /> is <see langword="null" />, the current culture is used.</span></span></param>
        <summary><span data-ttu-id="086c0-3271">Определяет, совпадает ли начало экземпляра строки с заданной строкой при сравнении с учетом заданного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3271">Determines whether the beginning of this string instance matches the specified string when compared using the specified culture.</span></span></summary>
        <returns><span data-ttu-id="086c0-3272"><see langword="true" />, если параметр <paramref name="value" /> соответствует началу данной строки; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3272"><see langword="true" /> if the <paramref name="value" /> parameter matches the beginning of this string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3273">Этот метод сравнивает `value` параметр подстрокой, расположенной в начале данной строки, имеют одинаковую длину как `value`и возвращает значение, указывающее, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="086c0-3273">This method compares the `value` parameter to the substring at the beginning of this string that is the same length as `value`, and returns a value that indicates whether they are equal.</span></span> <span data-ttu-id="086c0-3274">Равными, `value` должна быть пустой строкой (<xref:System.String.Empty?displayProperty=nameWithType>), должен быть ссылкой на тот же экземпляр или должны соответствовать начало данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3274">To be equal, `value` must be an empty string (<xref:System.String.Empty?displayProperty=nameWithType>), must be a reference to this same instance, or must match the beginning of this instance.</span></span>  
  
 <span data-ttu-id="086c0-3275">Этот метод выполняет сравнение с помощью указанного регистра и языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3275">This method performs a comparison using the specified casing and culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3276">В следующем примере определяется, содержится ли строка в начале другой строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3276">The following example determines whether a string occurs at the beginning of another string.</span></span> <span data-ttu-id="086c0-3277"><xref:System.String.StartsWith%2A> Был вызван несколько раз, используя чувствительность к регистру, учет регистра и различных языков и региональных параметров, которые влияют на результаты поиска.</span><span class="sxs-lookup"><span data-stu-id="086c0-3277">The <xref:System.String.StartsWith%2A> method is called several times using case sensitivity, case insensitivity, and different cultures that influence the results of the search.</span></span>  
  
 [!code-csharp[system.string.StartsWithCI#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.StartsWithCI/cs/swci.cs#1)]
 [!code-vb[system.string.StartsWithCI#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.StartsWithCI/vb/swci.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-3278"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3278"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Substring">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-3279">Извлекает подстроку из данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3279">Retrieves a substring from this instance.</span></span>  
  
 <span data-ttu-id="086c0-3280">Этот член перегружен.</span><span class="sxs-lookup"><span data-stu-id="086c0-3280">This member is overloaded.</span></span> <span data-ttu-id="086c0-3281">Для получения полной информации о данном члене, включая синтаксис, использование и примеры, щелкните имя в списке перегрузок.</span><span class="sxs-lookup"><span data-stu-id="086c0-3281">For complete information about this member, including syntax, usage, and examples, click a name in the overload list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (Index startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(valuetype System.Index startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Substring(System.Index)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (startIndex As Index) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(Index startIndex);" />
      <MemberSignature Language="F#" Value="member this.Substring : Index -&gt; string" Usage="string.Substring startIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Index" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="startIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Substring(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (startIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int startIndex);" />
      <MemberSignature Language="F#" Value="member this.Substring : int -&gt; string" Usage="string.Substring startIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="086c0-3282">Отсчитываемая от нуля позиция первого знака подстроки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3282">The zero-based starting character position of a substring in this instance.</span></span></param>
        <summary><span data-ttu-id="086c0-3283">Извлекает подстроку из данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3283">Retrieves a substring from this instance.</span></span> <span data-ttu-id="086c0-3284">Подстрока начинается в указанном положении символов и продолжается до конца строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3284">The substring starts at a specified character position and continues to the end of the string.</span></span></summary>
        <returns><span data-ttu-id="086c0-3285">Строка, эквивалентная подстроке, которая начинается с <paramref name="startIndex" /> в данном экземпляре, или <see cref="F:System.String.Empty" />, если значение <paramref name="startIndex" /> равно длине данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3285">A string that is equivalent to the substring that begins at <paramref name="startIndex" /> in this instance, or <see cref="F:System.String.Empty" /> if <paramref name="startIndex" /> is equal to the length of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3286">Вы вызываете <xref:System.String.Substring%28System.Int32%29> метод для извлечения подстроки из строки, которая начинается с указанной позиции символа и заканчивается в конце строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3286">You call the <xref:System.String.Substring%28System.Int32%29> method to extract a substring from a string that begins at a specified character position and ends at the end of the string.</span></span> <span data-ttu-id="086c0-3287">Положение начального знака отсчитывается от нуля; Другими словами первый символ в строке находится по индексу 0, а не индекс 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-3287">The starting character position is a zero-based; in other words, the first character in the string is at index 0, not index 1.</span></span> <span data-ttu-id="086c0-3288">Чтобы извлечь подстроку, которая начинается с указанной позиции символа и заканчивается до конца строки, вызовите <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3288">To extract a substring that begins at a specified character position and ends before the end of the string, call the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3289">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3289">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3290">Вместо этого он возвращает новую строку, которая начинается с `startIndex` позиция в текущей строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3290">Instead, it returns a new string that begins at the `startIndex` position in the current string.</span></span>  
  
 <span data-ttu-id="086c0-3291">Чтобы извлечь подстроку, которая начинается с определенный символ или последовательность символов, вызвать метод, такой как <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOf%2A> для получения значения `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3291">To extract a substring that begins with a particular character or character sequence, call a method such as  <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOf%2A> to get the value of `startIndex`.</span></span> <span data-ttu-id="086c0-3292">Во втором примере показано это; он извлекает значение ключа, который начинается на одну позицию символа после символа «=».</span><span class="sxs-lookup"><span data-stu-id="086c0-3292">The second example illustrates this; it extracts a key value that begins one character position after the "=" character.</span></span>  
  
 <span data-ttu-id="086c0-3293">Если `startIndex` равен нулю, этот метод возвращает исходную строку без изменений.</span><span class="sxs-lookup"><span data-stu-id="086c0-3293">If `startIndex` is equal to zero, the method returns the original string unchanged.</span></span>  
   
  
## Examples  
 <span data-ttu-id="086c0-3294">В следующем примере выполняется получение подстроку из строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3294">The following example demonstrates obtaining a substring from a string.</span></span>  
  
 [!code-cpp[System.String.Substring#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.String.Substring/cpp/Substring10.cpp#10)]
 [!code-csharp[System.String.Substring#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring10.cs#10)]
 [!code-vb[System.String.Substring#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring10.vb#10)]  
  
 <span data-ttu-id="086c0-3295">В следующем примере используется <xref:System.String.Substring%2A> метод для разделения пар "ключ значение", которые разделены с помощью знака равенства («=») символ.</span><span class="sxs-lookup"><span data-stu-id="086c0-3295">The following example uses the <xref:System.String.Substring%2A> method to separate key/value pairs that are delimited by an equals ("=") character.</span></span>  
  
 [!code-csharp[System.String.Substring#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring1.cs#1)]
 [!code-vb[System.String.Substring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring1.vb#1)]  
  
 <span data-ttu-id="086c0-3296"><xref:System.String.IndexOf%2A> Метод используется для получения позиции знака равенства в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3296">The <xref:System.String.IndexOf%2A> method is used to get the position of the equals character in the string.</span></span> <span data-ttu-id="086c0-3297">Вызов <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> метод извлекает имя ключа, которое начинается с первого символа в строке и расширяет число символов, возвращаемых вызовом <xref:System.String.IndexOf%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3297">The call to the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method extracts the key name, which starts from the first character in the string and extends for the number of characters returned by the call to the <xref:System.String.IndexOf%2A> method.</span></span> <span data-ttu-id="086c0-3298">Вызов <xref:System.String.Substring%28System.Int32%29> метод затем извлекает значение, присваиваемое ключ.</span><span class="sxs-lookup"><span data-stu-id="086c0-3298">The call to the <xref:System.String.Substring%28System.Int32%29> method then extracts the value assigned to the key.</span></span> <span data-ttu-id="086c0-3299">Он начинается с символа позиции, следующей за знак равенства и расширяет его до конца строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3299">It starts at one character position beyond the equals character and extends to the end of the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-3300"><paramref name="startIndex" /> имеет значение меньше нуля или больше длины этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3300"><paramref name="startIndex" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (Range range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(valuetype System.Range range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Substring(System.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(Range range);" />
      <MemberSignature Language="F#" Value="member this.Substring : Range -&gt; string" Usage="string.Substring range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Range" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Substring(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="member this.Substring : int * int -&gt; string" Usage="string.Substring (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="086c0-3301">Отсчитываемая от нуля позиция первого знака подстроки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3301">The zero-based starting character position of a substring in this instance.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-3302">Число символов в подстроке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3302">The number of characters in the substring.</span></span></param>
        <summary><span data-ttu-id="086c0-3303">Извлекает подстроку из данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3303">Retrieves a substring from this instance.</span></span> <span data-ttu-id="086c0-3304">Подстрока начинается с указанной позиции знака и имеет указанную длину.</span><span class="sxs-lookup"><span data-stu-id="086c0-3304">The substring starts at a specified character position and has a specified length.</span></span></summary>
        <returns><span data-ttu-id="086c0-3305">Строка, эквивалентная подстроке длиной <paramref name="length" />, которая начинается с <paramref name="startIndex" /> в данном экземпляре, или <see cref="F:System.String.Empty" />, если значение <paramref name="startIndex" /> равно длине данного экземпляра, а значение <paramref name="length" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-3305">A string that is equivalent to the substring of length <paramref name="length" /> that begins at <paramref name="startIndex" /> in this instance, or <see cref="F:System.String.Empty" /> if <paramref name="startIndex" /> is equal to the length of this instance and <paramref name="length" /> is zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3306">Вы вызываете <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> метод для извлечения подстроки из строки, которая начинается с указанной позиции символа и заканчивается перед концом строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3306">You call the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method to extract a substring from a string that begins at a specified character position and ends before the end of the string.</span></span> <span data-ttu-id="086c0-3307">Положение начального знака отсчитывается от нуля; Другими словами первый символ в строке находится по индексу 0, а не индекс 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-3307">The starting character position is a zero-based; in other words, the first character in the string is at index 0, not index 1.</span></span> <span data-ttu-id="086c0-3308">Чтобы извлечь подстроку, которая начинается с указанной позиции символа и продолжается до конца строки, вызовите <xref:System.String.Substring%28System.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3308">To extract a substring that begins at a specified character position and continues to the end of the string, call the <xref:System.String.Substring%28System.Int32%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3309">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3309">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3310">Вместо этого возвращается новая строка с `length` символов начиная с `startIndex` позиция в текущей строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3310">Instead, it returns a new string with `length` characters starting from the `startIndex` position in the current string.</span></span>  
  
 <span data-ttu-id="086c0-3311">`length` Параметр представляет общее число символов, извлекаемых из текущего экземпляра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3311">The `length` parameter represents the total number of characters to extract from the current string instance.</span></span> <span data-ttu-id="086c0-3312">Сюда входят начальный символ найден по индексу `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3312">This includes the starting character found at index  `startIndex`.</span></span>  <span data-ttu-id="086c0-3313">Другими словами <xref:System.String.Substring%2A> метод пытается извлечь символы из индекса `startIndex` индекс `startIndex`  +  `length` - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-3313">In other words, the <xref:System.String.Substring%2A> method attempts to extract characters from index `startIndex` to index `startIndex` + `length` - 1.</span></span>  
  
 <span data-ttu-id="086c0-3314">Чтобы извлечь подстроку, которая начинается с определенный символ или последовательность символов, вызвать метод, такой как <xref:System.String.IndexOf%2A> или <xref:System.String.LastIndexOf%2A> для получения значения `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3314">To extract a substring that begins with a particular character or character sequence, call a method such as  <xref:System.String.IndexOf%2A> or <xref:System.String.LastIndexOf%2A> to get the value of `startIndex`.</span></span>  
  
 <span data-ttu-id="086c0-3315">Если подстрока, начиная с позиции `startIndex` в последовательность указанный символ можно вызвать метод такой как <xref:System.String.IndexOf%2A> или <xref:System.String.LastIndexOf%2A> необходимо получить индекс конечный символ или последовательность символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3315">If the substring extends from `startIndex` to a specified character sequence, you can call a method such as  <xref:System.String.IndexOf%2A> or <xref:System.String.LastIndexOf%2A> to get the index of the ending character or character sequence.</span></span>  <span data-ttu-id="086c0-3316">Можно затем преобразовать это значение индекса позиции в строке следующим образом:</span><span class="sxs-lookup"><span data-stu-id="086c0-3316">You can then convert that value to an index position in the string as follows:</span></span>  
  
-   <span data-ttu-id="086c0-3317">При поиске для один символ, который является для обозначения конца подстроки, `length` равняется `endIndex`  -  `startIndex` + 1, где `endIndex` является возвращаемым значением из <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOf%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3317">If you've searched for a single character that is to mark the end of the substring, the `length` parameter equals  `endIndex` - `startIndex` + 1, where `endIndex` is the return value of the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOf%2A> method.</span></span> <span data-ttu-id="086c0-3318">Следующий пример извлекает непрерывный блок «b» символов из строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3318">The following example extracts a continuous block of "b" characters from a string.</span></span>  
  
     [!code-csharp[System.String.Substring#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring2.cs#2)]
     [!code-vb[System.String.Substring#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring2.vb#2)]  
  
-   <span data-ttu-id="086c0-3319">При поиске для нескольких символов, которые являются для обозначения конца подстроки, `length` равняется `endIndex`  +  `endMatchLength`  -  `startIndex`, где `endIndex` является возвращаемым значением <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOf%2A> метод, и `endMatchLength` длина последовательности символов, отмечающий конец подстроки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3319">If you've searched for multiple characters that are to mark the end of the substring, the `length` parameter equals  `endIndex` + `endMatchLength` - `startIndex`, where `endIndex` is the return value of the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOf%2A> method, and `endMatchLength` is the length of the character sequence that marks the end of the substring.</span></span> <span data-ttu-id="086c0-3320">Следующий пример извлекает блок текста, который содержит XML `<definition>` элемент.</span><span class="sxs-lookup"><span data-stu-id="086c0-3320">The following example extracts a block of text that contains an XML `<definition>` element.</span></span>  
  
     [!code-csharp[System.String.Substring#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring3.cs#3)]
     [!code-vb[System.String.Substring#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring3.vb#3)]  
  
-   <span data-ttu-id="086c0-3321">Если символ или последовательность символов не включается в конце подстроки, `length` равняется `endIndex`  -  `startIndex`, где `endIndex` является возвращаемым значением из <xref:System.String.IndexOf%2A> или <xref:System.String.IndexOf%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3321">If the character or character sequence is not included in the end of the substring, the `length` parameter equals `endIndex` - `startIndex`, where `endIndex` is the return value of the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOf%2A> method.</span></span>  
  
 <span data-ttu-id="086c0-3322">Если `startIndex` равно нулю и equals, длина текущей строки, метод возвращает исходную строку без изменений.</span><span class="sxs-lookup"><span data-stu-id="086c0-3322">If `startIndex` is equal to zero and  equals the length of the current string, the method returns the original string unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3323">В следующем примере показан простой вызов <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> метод, который извлекает двух символов из строки, начиная с шестой позиции символа (то есть в индексе пять).</span><span class="sxs-lookup"><span data-stu-id="086c0-3323">The following example illustrates a simple call to the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method that extracts two characters from a string starting at the sixth character position (that is, at index five).</span></span>  
  
 [!code-csharp[System.String.Substring#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring4.cs#4)]
 [!code-vb[System.String.Substring#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring4.vb#4)]  
  
 <span data-ttu-id="086c0-3324">В следующем примере используется <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> метод в следующих трех случаях для изоляции подстроки в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3324">The following example uses the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method in the following three cases to isolate substrings within a string.</span></span> <span data-ttu-id="086c0-3325">В двух случаях подстроки используются при сравнении, а в третьем случае создается исключение, так как указаны недопустимые параметры.</span><span class="sxs-lookup"><span data-stu-id="086c0-3325">In two cases the substrings are used in comparisons, and in the third case an exception is thrown because invalid parameters are specified.</span></span>  
  
-   <span data-ttu-id="086c0-3326">Он извлекает один символ и третьей позиции в строке (с индексом 2) и сравнивает его с «c».</span><span class="sxs-lookup"><span data-stu-id="086c0-3326">It extracts the single character and the third position in the string (at index 2) and compares it with a "c".</span></span> <span data-ttu-id="086c0-3327">Это сравнение возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3327">This comparison returns `true`.</span></span>  
  
-   <span data-ttu-id="086c0-3328">Он извлекает нуль символов, начиная с четвертой позиции в строке (с индексом 3) и передает его <xref:System.String.IsNullOrEmpty%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3328">It extracts zero characters starting at the fourth position in the string (at index 3) and passes it to the <xref:System.String.IsNullOrEmpty%2A> method.</span></span> <span data-ttu-id="086c0-3329">Это значение true, так как вызов <xref:System.String.Substring%2A> возвращает метод <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3329">This returns true because the call to the <xref:System.String.Substring%2A> method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="086c0-3330">Предпринимается попытка извлечь один знак, начиная с четвертой позиции в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3330">It attempts to extract one character starting at the fourth position in the string.</span></span> <span data-ttu-id="086c0-3331">Поскольку в этой позиции символ отсутствует, вызов метода создает <xref:System.ArgumentOutOfRangeException> исключение.</span><span class="sxs-lookup"><span data-stu-id="086c0-3331">Because there is no character at that position, the method call throws an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
 [!code-csharp[Classic String.Substring1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.Substring1 Example/CS/source.cs#1)]
 [!code-vb[Classic String.Substring1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.Substring1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="086c0-3332">В следующем примере используется <xref:System.String.Substring%2A> метод для разделения пар "ключ значение", которые разделены с помощью знака равенства («=») символ.</span><span class="sxs-lookup"><span data-stu-id="086c0-3332">The following example uses the <xref:System.String.Substring%2A> method to separate key/value pairs that are delimited by an equals ("=") character.</span></span>  
  
 [!code-csharp[System.String.Substring#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring1.cs#1)]
 [!code-vb[System.String.Substring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring1.vb#1)]  
  
 <span data-ttu-id="086c0-3333"><xref:System.String.IndexOf%2A> Метод используется для получения позиции знака равенства в строке.</span><span class="sxs-lookup"><span data-stu-id="086c0-3333">The <xref:System.String.IndexOf%2A> method is used to get the position of the equals character in the string.</span></span> <span data-ttu-id="086c0-3334">Вызов <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> метод извлекает имя ключа, которое начинается с первого символа в строке и расширяет число символов, возвращаемых вызовом <xref:System.String.IndexOf%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3334">The call to the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method extracts the key name, which starts from the first character in the string and extends for the number of characters returned by the call to the <xref:System.String.IndexOf%2A> method.</span></span> <span data-ttu-id="086c0-3335">Вызов <xref:System.String.Substring%28System.Int32%29> метод затем извлекает значение, присваиваемое ключ.</span><span class="sxs-lookup"><span data-stu-id="086c0-3335">The call to the <xref:System.String.Substring%28System.Int32%29> method then extracts the value assigned to the key.</span></span> <span data-ttu-id="086c0-3336">Он начинается с символа позиции, следующей за знак равенства и расширяет его до конца строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3336">It starts at one character position beyond the equals character and extends to the end of the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-3337"><paramref name="startIndex" /> плюс <paramref name="length" /> указывает на позицию за пределами данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3337"><paramref name="startIndex" /> plus <paramref name="length" /> indicates a position not within this instance.</span></span>  
  
<span data-ttu-id="086c0-3338">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-3338">-or-</span></span> 
 <span data-ttu-id="086c0-3339">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-3339"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span></exception>
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator" ExplicitInterfaceMemberName="System.Collections.Generic.IEnumerable&lt;char&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;char&gt; IEnumerable&lt;char&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;char&gt; System.Collections.Generic.IEnumerable&lt;char&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#Collections#Generic#IEnumerable&lt;char&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Char) Implements IEnumerable(Of Char).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;char&gt; ^ System.Collections.Generic.IEnumerable&lt;char&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;char&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-3340">Возвращает перечислитель, выполняющий перебор элементов текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3340">Returns an enumerator that iterates through the current <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="086c0-3341">Строго типизированный перечислитель, который можно использовать для перебора элементов текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3341">A strongly-typed enumerator that can be used to iterate through the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3342">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3342">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3343">Он может использоваться только тогда, когда <xref:System.String> экземпляр приводится к <xref:System.Collections.Generic.IEnumerable%601> объект интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3343">It can be used only when the <xref:System.String> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface object.</span></span> <span data-ttu-id="086c0-3344">Дополнительные сведения см. в описании метода <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3344">For more information, see the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-3345">Возвращает перечислитель, выполняющий перебор элементов текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3345">Returns an enumerator that iterates through the current <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="086c0-3346">Перечислитель, который можно использовать для перебора элементов текущей строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3346">An enumerator that can be used to iterate through the current string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3347">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3347">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3348">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3348">It can be used only when the <xref:System.String> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="086c0-3349">Дополнительные сведения см. в описании метода <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3349">For more information, see the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3350">Этот параметр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="086c0-3350">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="086c0-3351">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3351">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3352"><see langword="true" />, если значение текущей строки равно <see cref="F:System.Boolean.TrueString" />; <see langword="false" />, если значение текущей строки равно <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3352"><see langword="true" /> if the value of the current string is <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if the value of the current string is <see cref="F:System.Boolean.FalseString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3353">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3353">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3354">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3354">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3355">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3355">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-3356">Значение текущей строки не равно <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3356">The value of the current string is not <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3357">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3357">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3358">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3358">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3359">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3359">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3360">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3360">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3361">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3361">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3362">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3362">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-3363">Значение текущего объекта <see cref="T:System.String" /> нельзя проанализировать.</span><span class="sxs-lookup"><span data-stu-id="086c0-3363">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="086c0-3364">Значение текущего объекта <see cref="T:System.String" /> представляет собой число больше <see cref="F:System.Byte.MaxValue" /> или меньше <see cref="F:System.Byte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3364">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3365">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3365">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3366">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3366">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3367">Знак с индексом 0 в текущем объекте <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3367">The character at index 0 in the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3368">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3368">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3369">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3369">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3370">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToChar%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3370">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3371">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3371">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3372">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToDateTime(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3372">For a description of this member, see <see cref="M:System.IConvertible.ToDateTime(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3373">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3373">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3374">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3374">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3375">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3375">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3376">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToDateTime%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3376">The recommended alternative is to call the <xref:System.Convert.ToDateTime%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3377">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3377">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3378">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3378">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3379">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3379">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3380">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3380">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3381">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3381">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3382">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToDecimal%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3382">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-3383">Значение текущего объекта <see cref="T:System.String" /> нельзя проанализировать.</span><span class="sxs-lookup"><span data-stu-id="086c0-3383">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="086c0-3384">Значение текущего объекта <see cref="T:System.String" /> представляет собой число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3384">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Decimal.MinValue" /> or than <see cref="F:System.Decimal.MaxValue" /> greater.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3385">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3385">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3386">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3386">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3387">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3387">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3388">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3388">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3389">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3389">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3390">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToDouble%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3390">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-3391">Значение текущего объекта <see cref="T:System.String" /> нельзя проанализировать.</span><span class="sxs-lookup"><span data-stu-id="086c0-3391">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="086c0-3392">Значение текущего объекта <see cref="T:System.String" /> представляет собой число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3392">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3393">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3393">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3394">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3394">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3395">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3395">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3396">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3396">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3397">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3397">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3398">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToInt16%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3398">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-3399">Значение текущего объекта <see cref="T:System.String" /> нельзя проанализировать.</span><span class="sxs-lookup"><span data-stu-id="086c0-3399">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="086c0-3400">Значение текущего объекта <see cref="T:System.String" /> представляет собой число больше <see cref="F:System.Int16.MaxValue" /> или меньше <see cref="F:System.Int16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3400">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3401">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3401">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3402">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3402">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3403">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3403">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3404">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3404">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3405">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3405">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3406">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToInt32%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3406">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3407">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3407">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3408">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3408">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3409">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3409">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3410">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3410">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3411">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3411">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3412">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToInt64%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3412">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3413">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3413">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3414">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3414">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3415">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3415">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3416">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3416">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3417">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3417">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3418">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToSByte%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3418">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-3419">Значение текущего объекта <see cref="T:System.String" /> нельзя проанализировать.</span><span class="sxs-lookup"><span data-stu-id="086c0-3419">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="086c0-3420">Значение текущего объекта <see cref="T:System.String" /> представляет собой число больше <see cref="F:System.SByte.MaxValue" /> или меньше <see cref="F:System.SByte.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3420">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3421">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3421">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3422">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3422">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3423">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3423">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3424">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3424">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3425">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3425">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3426">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToSingle%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3426">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="086c0-3427">Тип возвращаемого объекта.</span><span class="sxs-lookup"><span data-stu-id="086c0-3427">The type of the returned object.</span></span></param>
        <param name="provider"><span data-ttu-id="086c0-3428">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3428">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3429">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3429">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3430">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3430">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3431">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3431">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3432">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3432">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3433">Рекомендуемой альтернативой является вызов <xref:System.Convert.ChangeType%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3433">The recommended alternative is to call the <xref:System.Convert.ChangeType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-3434"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3434"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="086c0-3435">Значение текущего объекта <see cref="T:System.String" /> нельзя преобразовать в тип, заданный параметром <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3435">The value of the current <see cref="T:System.String" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3436">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3436">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3437">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3437">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3438">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3438">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3439">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3440">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3440">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3441">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToUInt16%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3441">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-3442">Значение текущего объекта <see cref="T:System.String" /> нельзя проанализировать.</span><span class="sxs-lookup"><span data-stu-id="086c0-3442">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="086c0-3443">Значение текущего объекта <see cref="T:System.String" /> представляет собой число больше <see cref="F:System.UInt16.MaxValue" /> или меньше <see cref="F:System.UInt16.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3443">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3444">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3444">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3445">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3445">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3446">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3446">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3447">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3447">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3448">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3448">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3449">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToUInt32%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3449">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="086c0-3450">Значение текущего объекта <see cref="T:System.String" /> нельзя проанализировать.</span><span class="sxs-lookup"><span data-stu-id="086c0-3450">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="086c0-3451">Значение текущего объекта <see cref="T:System.String" /> представляет собой число больше <see cref="F:System.UInt32.MaxValue" /> или меньше <see cref="F:System.UInt32.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3451">The value of the current <see cref="T:System.String" /> object is a number greater <see cref="F:System.UInt32.MaxValue" /> or less than <see cref="F:System.UInt32.MinValue" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3452">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3452">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3453">Описание этого члена см. в разделе <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3453">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="086c0-3454">Преобразованное значение текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3454">The converted value of the current <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3455">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3455">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="086c0-3456">Он может использоваться только при условии, что экземпляр класса <xref:System.String> приведен к типу интерфейса <xref:System.IConvertible>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3456">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="086c0-3457">Рекомендуемой альтернативой является вызов <xref:System.Convert.ToUInt64%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3457">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToCharArray">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-3458">Копирует знаки данного экземпляра в массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3458">Copies the characters in this instance to a Unicode character array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToCharArray">
      <MemberSignature Language="C#" Value="public char[] ToCharArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char[] ToCharArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToCharArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToCharArray () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;char&gt; ^ ToCharArray();" />
      <MemberSignature Language="F#" Value="member this.ToCharArray : unit -&gt; char[]" Usage="string.ToCharArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-3459">Копирует знаки данного экземпляра в массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3459">Copies the characters in this instance to a Unicode character array.</span></span></summary>
        <returns><span data-ttu-id="086c0-3460">Массив знаков Юникода, элементами которого являются отдельные знаки из данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3460">A Unicode character array whose elements are the individual characters of this instance.</span></span> <span data-ttu-id="086c0-3461">Если этот экземпляр является пустой строкой, то возвращаемый массив пуст и его длина равна нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-3461">If this instance is an empty string, the returned array is empty and has a zero length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3462">Этот метод копирует каждый символ (то есть каждый <xref:System.Char> объект) в виде строки в массив символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3462">This method copies each character (that is, each <xref:System.Char> object) in a string to a character array.</span></span> <span data-ttu-id="086c0-3463">Первый символ копируются, — с нулевым индексом массива возвращаемых знаков; последний скопированный знак является индексом <xref:System.Array.Length%2A?displayProperty=nameWithType> - 1.</span><span class="sxs-lookup"><span data-stu-id="086c0-3463">The first character copied is at index zero of the returned character array; the last character copied is at index <xref:System.Array.Length%2A?displayProperty=nameWithType> - 1.</span></span>  
  
 <span data-ttu-id="086c0-3464">Чтобы создать строку из символов в массиве символов, вызовите <xref:System.String.%23ctor%28System.Char%5B%5D%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="086c0-3464">To create a string from the characters in a character array, call the <xref:System.String.%23ctor%28System.Char%5B%5D%29> constructor.</span></span>  
  
 <span data-ttu-id="086c0-3465">Чтобы создать массив байтов, содержащий закодированные символы в строке, следует создать соответствующий <xref:System.Text.Encoding> и вызовите его <xref:System.Text.Encoding.GetBytes%28System.String%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3465">To create a byte array that contains the encoded characters in a string, instantiate the appropriate <xref:System.Text.Encoding> object and call its <xref:System.Text.Encoding.GetBytes%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="086c0-3466">Ниже приведены некоторые стандартные кодировки, доступные в .NET:</span><span class="sxs-lookup"><span data-stu-id="086c0-3466">Some of the standard encodings available in .NET include the following:</span></span>  
  
|<span data-ttu-id="086c0-3467">кодировка</span><span class="sxs-lookup"><span data-stu-id="086c0-3467">Encoding</span></span>|<span data-ttu-id="086c0-3468">Object</span><span class="sxs-lookup"><span data-stu-id="086c0-3468">Object</span></span>|  
|--------------|------------|  
|<span data-ttu-id="086c0-3469">ASCII</span><span class="sxs-lookup"><span data-stu-id="086c0-3469">ASCII</span></span>|<xref:System.Text.ASCIIEncoding>|  
|<span data-ttu-id="086c0-3470">UTF-7</span><span class="sxs-lookup"><span data-stu-id="086c0-3470">UTF-7</span></span>|<xref:System.Text.UTF7Encoding>|  
|<span data-ttu-id="086c0-3471">UTF-8</span><span class="sxs-lookup"><span data-stu-id="086c0-3471">UTF-8</span></span>|<xref:System.Text.UTF8Encoding>|  
|<span data-ttu-id="086c0-3472">UTF-16</span><span class="sxs-lookup"><span data-stu-id="086c0-3472">UTF-16</span></span>|<xref:System.Text.UnicodeEncoding>|  
|<span data-ttu-id="086c0-3473">UTF-32</span><span class="sxs-lookup"><span data-stu-id="086c0-3473">UTF-32</span></span>|<xref:System.Text.UTF32Encoding>|  
  
 <span data-ttu-id="086c0-3474">Дополнительные сведения см. в разделе [кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-3474">For more information, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3475">В следующем примере вызывается <xref:System.String.ToCharArray%2A> метод для извлечения символов в строке в массив символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3475">The following example calls the <xref:System.String.ToCharArray%2A> method to extract the characters in a string to a character array.</span></span> <span data-ttu-id="086c0-3476">Затем он отобразит исходную строку и элементы в массиве.</span><span class="sxs-lookup"><span data-stu-id="086c0-3476">It then displays the original string and the elements in the array.</span></span>  
  
 [!code-csharp[System.String.ToCharArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.tochararray/cs/ToCharArray1.cs#1)]
 [!code-vb[System.String.ToCharArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.tochararray/vb/ToCharArray1.vb#1)]  
  
 <span data-ttu-id="086c0-3477">В следующем примере определяется строка, содержащая символы, которые служат в качестве разделителей в строку с разделителями.</span><span class="sxs-lookup"><span data-stu-id="086c0-3477">The following example defines a string containing the characters that serve as delimiters in a delimited string.</span></span> <span data-ttu-id="086c0-3478">Затем он вызывает <xref:System.String.ToCharArray%2A> метод, чтобы создать массив символов, который может быть передан в <xref:System.String.Split%28System.Char%5B%5D%29> способ разделить строку с разделителями на его отдельные подстроки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3478">It then calls the <xref:System.String.ToCharArray%2A> method to create a character array that can be passed to the <xref:System.String.Split%28System.Char%5B%5D%29> method to separate the delimited string into its individual substrings.</span></span>  
  
 [!code-cpp[StringSplit2#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringSplit2/CPP/stringsplit2.cpp#1)] 
 [!code-csharp[StringSplit2#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringSplit2/CS/stringsplit2.cs#1)] 
 [!code-vb[StringSplit2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringSplit2/VB/stringsplit2.vb#1)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="ToCharArray">
      <MemberSignature Language="C#" Value="public char[] ToCharArray (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char[] ToCharArray(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToCharArray(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToCharArray (startIndex As Integer, length As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;char&gt; ^ ToCharArray(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="member this.ToCharArray : int * int -&gt; char[]" Usage="string.ToCharArray (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="086c0-3479">Начальная позиция подстроки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3479">The starting position of a substring in this instance.</span></span></param>
        <param name="length"><span data-ttu-id="086c0-3480">Длина подстроки в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3480">The length of the substring in this instance.</span></span></param>
        <summary><span data-ttu-id="086c0-3481">Копирует знаки из указанной подстроки данного экземпляра в массив знаков Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3481">Copies the characters in a specified substring in this instance to a Unicode character array.</span></span></summary>
        <returns><span data-ttu-id="086c0-3482">Массив знаков Юникода, элементами которого являются <paramref name="length" /> знаков данного экземпляра начиная с позиции <paramref name="startIndex" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3482">A Unicode character array whose elements are the <paramref name="length" /> number of characters in this instance starting from character position <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3483">Этот метод копирует знаки в часть строки в массив символов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3483">This method copies the characters in a portion of a string to a character array.</span></span> <span data-ttu-id="086c0-3484">Чтобы создать строку из диапазона символов из массива символов, вызовите <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="086c0-3484">To create a string from a range of characters in a character array, call the  <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="086c0-3485">`startIndex` Параметр отсчитывается от нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-3485">The `startIndex` parameter is zero-based.</span></span> <span data-ttu-id="086c0-3486">То есть индекс первого символа в экземпляре строки равен нулю.</span><span class="sxs-lookup"><span data-stu-id="086c0-3486">That is, the index of the first character in the string instance is zero.</span></span>  
  
 <span data-ttu-id="086c0-3487">Если `length` равно нулю, возвращаемый массив является пустым и имеет нулевую длину.</span><span class="sxs-lookup"><span data-stu-id="086c0-3487">If `length` is zero, the returned array is empty and has a zero length.</span></span> <span data-ttu-id="086c0-3488">Если этот экземпляр `null` или является пустой строкой ("»), возвращаемый массив является пустым и имеет нулевую длину.</span><span class="sxs-lookup"><span data-stu-id="086c0-3488">If this instance is `null` or an empty string (""), the returned array is empty and has a zero length.</span></span>  
  
 <span data-ttu-id="086c0-3489">Чтобы создать массив байтов, содержащий закодированные символы в часть строки, следует создать соответствующий <xref:System.Text.Encoding> и вызовите его <xref:System.Text.Encoding.GetBytes%28System.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Byte%5B%5D%2CSystem.Int32%29> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3489">To create a byte array that contains the encoded characters in a portion of a string, instantiate the appropriate <xref:System.Text.Encoding> object and call its <xref:System.Text.Encoding.GetBytes%28System.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Byte%5B%5D%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="086c0-3490">Ниже перечислены некоторые из стандартных кодировок в .NET.</span><span class="sxs-lookup"><span data-stu-id="086c0-3490">Some of the standard encodings available in .NET include:</span></span>  
  
|<span data-ttu-id="086c0-3491">кодировка</span><span class="sxs-lookup"><span data-stu-id="086c0-3491">Encoding</span></span>|<span data-ttu-id="086c0-3492">Object</span><span class="sxs-lookup"><span data-stu-id="086c0-3492">Object</span></span>|  
|--------------|------------|  
|<span data-ttu-id="086c0-3493">ASCII</span><span class="sxs-lookup"><span data-stu-id="086c0-3493">ASCII</span></span>|<xref:System.Text.ASCIIEncoding>|  
|<span data-ttu-id="086c0-3494">UTF-7</span><span class="sxs-lookup"><span data-stu-id="086c0-3494">UTF-7</span></span>|<xref:System.Text.UTF7Encoding>|  
|<span data-ttu-id="086c0-3495">UTF-8</span><span class="sxs-lookup"><span data-stu-id="086c0-3495">UTF-8</span></span>|<xref:System.Text.UTF8Encoding>|  
|<span data-ttu-id="086c0-3496">UTF-16</span><span class="sxs-lookup"><span data-stu-id="086c0-3496">UTF-16</span></span>|<xref:System.Text.UnicodeEncoding>|  
|<span data-ttu-id="086c0-3497">UTF-32</span><span class="sxs-lookup"><span data-stu-id="086c0-3497">UTF-32</span></span>|<xref:System.Text.UTF32Encoding>|  
  
 <span data-ttu-id="086c0-3498">Дополнительные сведения см. в разделе [кодировка символов в .NET](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-3498">For more information, see [Character Encoding in .NET](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3499">В следующем примере преобразует подстроку в строку в массив символов, а затем перечисляет и отображает элементы массива.</span><span class="sxs-lookup"><span data-stu-id="086c0-3499">The following example converts a substring within a string to an array of characters, then enumerates and displays the elements of the array.</span></span>  
  
 [!code-cpp[string.tochararray1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.ToCharArray1/CPP/tocharry1.cpp#1)]
 [!code-csharp[string.tochararray1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.ToCharArray1/CS/tocharry1.cs#1)]
 [!code-vb[string.tochararray1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.ToCharArray1/VB/tocharry1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="086c0-3500">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="086c0-3500"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span>  
  
<span data-ttu-id="086c0-3501">-или-</span><span class="sxs-lookup"><span data-stu-id="086c0-3501">-or-</span></span> 
 <span data-ttu-id="086c0-3502"><paramref name="startIndex" /> + <paramref name="length" /> больше длины этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3502"><paramref name="startIndex" /> plus <paramref name="length" /> is greater than the length of this instance.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-3503">Возвращает копию этой строки, переведенную в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3503">Returns a copy of this string converted to lowercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public string ToLower ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLower() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToLower" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLower () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLower();" />
      <MemberSignature Language="F#" Value="member this.ToLower : unit -&gt; string" Usage="string.ToLower " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-3504">Возвращает копию этой строки, переведенную в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3504">Returns a copy of this string converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="086c0-3505">Строка в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3505">A string in lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3506">Этот метод учитывает правила учета регистра текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3506">This method takes into account the casing rules of the current culture.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3507">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3507">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3508">Вместо этого он возвращает новую строку, в которой все символы в текущем экземпляре преобразуются в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3508">Instead, it returns a new string in which all characters in the current instance are converted to lowercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="086c0-3509">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="086c0-3509">Security Considerations</span></span>  
 <span data-ttu-id="086c0-3510">Операции смены регистра, полученный в результате вызова метода <xref:System.String.ToLower> метод учитывает соглашения о регистре текущих региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3510">The casing operation that results from calling the <xref:System.String.ToLower> method takes the casing conventions of the current culture into account.</span></span> <span data-ttu-id="086c0-3511">Если вам нужна версия верхний или нижний регистр идентификатора операционной системы, такие как имя файла с именем канала, или раздел реестра, используйте <xref:System.String.ToLowerInvariant%2A> или <xref:System.String.ToUpperInvariant%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="086c0-3511">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> methods.</span></span> <span data-ttu-id="086c0-3512">Это дает тот же результат, в каждый язык и региональные параметры (в отличие от <xref:System.String.ToLower> метод) и более эффективное выполнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-3512">This produces the same result in every culture (unlike the <xref:System.String.ToLower> method) and performs more efficiently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3513">В следующем примере преобразуется несколько строк со смешанным регистром в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3513">The following example converts several mixed case strings to lowercase.</span></span>  
  
 [!code-cpp[stringlowerupper#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringlowerupper/CPP/stringtolower.cpp#1)]
 [!code-csharp[stringlowerupper#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringlowerupper/CS/stringtolower.cs#1)]
 [!code-vb[stringlowerupper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringlowerupper/VB/stringtolower.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3514">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методов преобразования регистра строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-3514">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string casing methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-3515">Чтобы преобразовать символ в нижний регистр, используя соглашения о регистре текущих региональных параметров, вызовите <see cref="M:System.String.ToLower(System.Globalization.CultureInfo)" /> перегрузку метода со значением <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> для его <paramref name="culture" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3515">To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.String.ToLower(System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para></block>
        <altmember cref="M:System.String.ToLowerInvariant" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.String.ToUpperInvariant" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public string ToLower (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLower(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToLower(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLower (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLower(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.ToLower : System.Globalization.CultureInfo -&gt; string" Usage="string.ToLower culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="086c0-3516">Объект, задающий правила определения регистра для языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3516">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="086c0-3517">Возвращает копию этой строки, переведенную в нижний регистр, используя правила определения регистра заданного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3517">Returns a copy of this string converted to lowercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="086c0-3518">Эквивалент текущей строки в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3518">The lowercase equivalent of the current string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3519">Правила учета регистра, языка и региональных параметров, заданные `culture` параметр определить способ изменения регистра строки изменяется.</span><span class="sxs-lookup"><span data-stu-id="086c0-3519">The casing rules of the culture specified by the `culture` parameter determine the way the case of the string is changed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3520">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3520">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3521">Вместо этого он возвращает новую строку, в которой все символы в текущем экземпляре преобразуются в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3521">Instead, it returns a new string in which all characters in the current instance are converted to lowercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="086c0-3522">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="086c0-3522">Security Considerations</span></span>  
 <span data-ttu-id="086c0-3523">Если передать <xref:System.String.ToLower%28System.Globalization.CultureInfo%29> метод <xref:System.Globalization.CultureInfo> отличное от объекта <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>, операции смены регистра будет учтена правил, зависящих от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3523">If you pass the <xref:System.String.ToLower%28System.Globalization.CultureInfo%29> method a <xref:System.Globalization.CultureInfo> object other than <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>, the casing operation will take culture-specific rules into account.</span></span> <span data-ttu-id="086c0-3524">Если вам нужна версия верхний или нижний регистр идентификатора операционной системы, такие как имя файла с именем канала, или раздел реестра, используйте <xref:System.String.ToLowerInvariant%2A> или <xref:System.String.ToUpperInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3524">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="086c0-3525">Это дает тот же результат, в каждый язык и региональные параметры и выполняет более эффективно.</span><span class="sxs-lookup"><span data-stu-id="086c0-3525">This produces the same result in every culture and performs more efficiently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3526">В следующем примере две строки символов верхнего регистра в нижний регистр с использованием языков и региональных параметров Английский (США) и турецкий-Турция, а затем сравнивает строки в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3526">The following example converts two strings of uppercase characters to lowercase characters using the English-United States and Turkish-Turkey cultures, then compares the lowercase strings.</span></span> <span data-ttu-id="086c0-3527">Верхний регистр строки идентичны, за исключением того, что для каждого вхождения Юникода LATIN CAPITAL LETTER I в одной строке, вторая строка содержит LATIN CAPITAL LETTER I с ТОЧКОЙ выше.</span><span class="sxs-lookup"><span data-stu-id="086c0-3527">The uppercase strings are identical except that for each occurrence of the Unicode LATIN CAPITAL LETTER I in one string, the other string contains LATIN CAPITAL LETTER I WITH DOT ABOVE.</span></span>  
  
 [!code-cpp[string.tolower1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.tolower1/CPP/tolower.cpp#1)]
 [!code-csharp[string.tolower1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.tolower1/CS/tolower.cs#1)]
 [!code-vb[string.tolower1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.tolower1/VB/tolower.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-3528"><paramref name="culture" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3528"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.String.ToUpper" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public string ToLowerInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLowerInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToLowerInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLowerInvariant () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLowerInvariant();" />
      <MemberSignature Language="F#" Value="member this.ToLowerInvariant : unit -&gt; string" Usage="string.ToLowerInvariant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-3529">Возвращает копию этого объекта <see cref="T:System.String" />, переведенную в нижний регистр, используя правила учета регистра инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3529">Returns a copy of this <see cref="T:System.String" /> object converted to lowercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="086c0-3530">Эквивалент текущей строки в нижнем регистре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3530">The lowercase equivalent of the current string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3531">Инвариантный язык и региональные параметры представляет язык и региональные параметры без учета языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3531">The invariant culture represents a culture that is culture-insensitive.</span></span> <span data-ttu-id="086c0-3532">Он связан с английским языком, но не с конкретной страны или региона.</span><span class="sxs-lookup"><span data-stu-id="086c0-3532">It is associated with the English language but not with a specific country or region.</span></span> <span data-ttu-id="086c0-3533">Дополнительные сведения см. в описании свойства <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3533">For more information, see the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="086c0-3534">Если приложение зависит от регистра строки, изменяемого предсказуемым способом, не зависящим от текущего языка и региональных параметров, используйте <xref:System.String.ToLowerInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3534">If your application depends on the case of a string changing in a predictable way that is unaffected by the current culture, use the <xref:System.String.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="086c0-3535"><xref:System.String.ToLowerInvariant%2A> Метод эквивалентен `ToLower(CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3535">The <xref:System.String.ToLowerInvariant%2A> method is equivalent to `ToLower(CultureInfo.InvariantCulture)`.</span></span> <span data-ttu-id="086c0-3536">Метод рекомендуется в том случае, если коллекция строк должны отображаться в определенном порядке элемента управления пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3536">The method is recommended when a collection of strings must appear in a predictable order in a user interface control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3537">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3537">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3538">Вместо этого он возвращает новую строку, в которой все символы в текущем экземпляре преобразуются в нижний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3538">Instead, it returns a new string in which all characters in the current instance are converted to lowercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="086c0-3539">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="086c0-3539">Security Considerations</span></span>  
 <span data-ttu-id="086c0-3540">Если вам нужна версия верхний или нижний регистр идентификатора операционной системы, такие как имя файла с именем канала, или раздел реестра, используйте <xref:System.String.ToLowerInvariant%2A> или <xref:System.String.ToUpperInvariant%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="086c0-3540">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3541">В следующем примере определяется массив строк, содержащий одно слово на нескольких языках.</span><span class="sxs-lookup"><span data-stu-id="086c0-3541">The following example defines a string array that contains a single word in a number of languages.</span></span> <span data-ttu-id="086c0-3542"><xref:System.String.ToLowerInvariant%2A> Метод используется для заполнения элементов массива параллельные версии каждого слова без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3542">The <xref:System.String.ToLowerInvariant%2A> method is used to populate the elements of a parallel array with the case-insensitive version of each word.</span></span> <span data-ttu-id="086c0-3543"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> Метод используется для сортировки массива с учетом регистра, на основе порядка элементов в массиве нижний регистр, чтобы убедиться, что элементы отображаются в том же порядке, независимо от языка.</span><span class="sxs-lookup"><span data-stu-id="086c0-3543">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method is used to sort the case-sensitive array based on the order of elements in the lowercase array to ensure that elements appear in the same order regardless of language.</span></span>  
  
 [!code-csharp[System.String.ToLowerInvariant#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.tolowerinvariant/cs/tolowerinvariant.cs#1)]
 [!code-vb[System.String.ToLowerInvariant#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.tolowerinvariant/vb/tolowerinvariant.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpperInvariant" />
        <altmember cref="M:System.String.ToLower(System.Globalization.CultureInfo)" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-3544">Преобразует значение данного экземпляра в <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3544">Converts the value of this instance to a <see cref="T:System.String" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="string.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-3545">Возвращает этот экземпляр <see cref="T:System.String" />; реальное преобразование не осуществляется.</span><span class="sxs-lookup"><span data-stu-id="086c0-3545">Returns this instance of <see cref="T:System.String" />; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="086c0-3546">Текущая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-3546">The current string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3547">Так как этот метод просто возвращает текущую строку без изменений, нет необходимости вызывать его напрямую.</span><span class="sxs-lookup"><span data-stu-id="086c0-3547">Because this method simply returns the current string unchanged, there is no need to call it directly.</span></span> <span data-ttu-id="086c0-3548">Обычно она вызывается неявно в составного форматирования операции, как показано в примере.</span><span class="sxs-lookup"><span data-stu-id="086c0-3548">It is usually called implicitly in a composite formatting operation, as the example shows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3549">В следующем примере демонстрируется <xref:System.String.ToString%2A> метод. Обратите внимание, что пример не вызывает явно <xref:System.String.ToString%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3549">The following example demonstrates the <xref:System.String.ToString%2A> method.Note that the example does not explicitly call the <xref:System.String.ToString%2A> method.</span></span> <span data-ttu-id="086c0-3550">Вместо этого метод неявно вызывается [составное форматирование](~/docs/standard/base-types/composite-formatting.md) функции.</span><span class="sxs-lookup"><span data-stu-id="086c0-3550">Instead, the method is called implicitly by the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature.</span></span>  
  
 [!code-cpp[string.tostring#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.tostring/CPP/string.tostring.cpp#1)]
 [!code-csharp[string.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.tostring/CS/string.tostring.cs#1)]
 [!code-vb[string.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.tostring/VB/string.tostring.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Clone" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="string.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="086c0-3551">(Зарезервирован.) Объект, предоставляющий сведения о форматировании, связанные с определенным языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="086c0-3551">(Reserved) An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="086c0-3552">Возвращает этот экземпляр <see cref="T:System.String" />; реальное преобразование не осуществляется.</span><span class="sxs-lookup"><span data-stu-id="086c0-3552">Returns this instance of <see cref="T:System.String" />; no actual conversion is performed.</span></span></summary>
        <returns><span data-ttu-id="086c0-3553">Текущая строка.</span><span class="sxs-lookup"><span data-stu-id="086c0-3553">The current string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3554">`provider` зарезервирован и не участвует в настоящее время в данной операции.</span><span class="sxs-lookup"><span data-stu-id="086c0-3554">`provider` is reserved, and does not currently participate in this operation.</span></span>  
  
 <span data-ttu-id="086c0-3555">Так как этот метод просто возвращает текущую строку без изменений, нет необходимости вызывать его напрямую.</span><span class="sxs-lookup"><span data-stu-id="086c0-3555">Because this method simply returns the current string unchanged, there is no need to call it directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-3556">Возвращает копию этой строки, переведенную в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3556">Returns a copy of this string converted to uppercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public string ToUpper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToUpper() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToUpper" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUpper () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToUpper();" />
      <MemberSignature Language="F#" Value="member this.ToUpper : unit -&gt; string" Usage="string.ToUpper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-3557">Возвращает копию этой строки, переведенную в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3557">Returns a copy of this string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="086c0-3558">Эквивалент текущей строки в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3558">The uppercase equivalent of the current string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3559">Этот метод использует правила учета регистра текущего языка и региональных параметров для преобразования каждого символа в текущем экземпляре в его эквивалент в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3559">This method uses the casing rules of the current culture to convert each character in the current instance to its uppercase equivalent.</span></span> <span data-ttu-id="086c0-3560">Если символ не имеет эквивалента в верхнем регистре, он добавляется в возвращаемую строку без изменений.</span><span class="sxs-lookup"><span data-stu-id="086c0-3560">If a character does not have an uppercase equivalent, it is included unchanged in the returned string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3561">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3561">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3562">Вместо этого он возвращает новую строку, в которой все символы в текущем экземпляре преобразуются в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3562">Instead, it returns a new string in which all characters in the current instance are converted to uppercase.</span></span>  
  
 <span data-ttu-id="086c0-3563"><xref:System.String.ToUpper%2A> Метод часто используется для преобразования строки в верхний регистр, так что он может использоваться при сравнении без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3563">The <xref:System.String.ToUpper%2A> method is often used to convert a string to uppercase so that it can be used in a case-insensitive comparison.</span></span> <span data-ttu-id="086c0-3564">Чтобы выполнить сравнение без учета регистра рекомендуется вызывать метод сравнения строк, который имеет <xref:System.StringComparison> параметр, значение которого задано значение <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType> сравнение с учетом языка и региональных параметров, без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3564">A better method to perform case-insensitive comparison is to call a string comparison method that has a <xref:System.StringComparison> parameter whose value you set to <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType> for a culture-sensitive, case-insensitive comparison.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="086c0-3565">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="086c0-3565">Security Considerations</span></span>  
 <span data-ttu-id="086c0-3566">Операции смены регистра, полученный в результате вызова метода <xref:System.String.ToUpper> метод учитывает соглашения о регистре текущих региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3566">The casing operation that results from calling the <xref:System.String.ToUpper> method takes the casing conventions of the current culture into account.</span></span> <span data-ttu-id="086c0-3567">Если вам нужна версия верхний или нижний регистр идентификатора операционной системы, такие как имя файла с именем канала, или раздел реестра, используйте <xref:System.String.ToLowerInvariant%2A> или <xref:System.String.ToUpperInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3567">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="086c0-3568">Это дает тот же результат, в каждый язык и региональные параметры (в отличие от <xref:System.String.ToUpper> метод) и более эффективное выполнение.</span><span class="sxs-lookup"><span data-stu-id="086c0-3568">This produces the same result in every culture (unlike the <xref:System.String.ToUpper> method) and performs more efficiently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3569">В следующем примере вызывается <xref:System.String.ToUpper%2A> метод для преобразования ряда Односимвольная строк, содержащих каждый символ в наборы символов расширенного-A Basic Latin, дополнительная латиница-1 и латиницы.</span><span class="sxs-lookup"><span data-stu-id="086c0-3569">The following example calls the <xref:System.String.ToUpper%2A> method to convert a series of one-character strings that contain each character in the Basic Latin, Latin-1 Supplement, and Latin Extended-A character sets.</span></span> <span data-ttu-id="086c0-3570">Затем отображается каждая строка которого символов верхнего регистра отличается от его символ нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3570">It then displays each string whose uppercase character is different from its lowercase character.</span></span>  
  
 [!code-cpp[System.String.ToUpper#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.ToUpper/cpp/ToUpperEx.cpp#1)]
 [!code-csharp[System.String.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.ToUpper/cs/ToUpperEx.cs#1)]
 [!code-vb[System.String.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.ToUpper/vb/ToUpperEx.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3571">Как описано в [советы и рекомендации по использованию строк](~/docs/standard/base-types/best-practices-strings.md), рекомендуется избегать вызова методов преобразования регистра строк, которые заменяют значения по умолчанию и вместо этого вызывать методы, которые нужны параметры, чтобы указать явно.</span><span class="sxs-lookup"><span data-stu-id="086c0-3571">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string casing methods that substitute default values and instead call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="086c0-3572">Чтобы преобразовать строку в верхний регистр с помощью соглашения о регистре текущих региональных параметров, вызовите <see cref="M:System.String.ToUpper(System.Globalization.CultureInfo)" /> перегрузку метода со значением <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> для его <paramref name="culture" /> параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3572">To convert a string to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.String.ToUpper(System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para></block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.String.ToLowerInvariant" />
        <altmember cref="M:System.String.ToUpperInvariant" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public string ToUpper (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToUpper(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToUpper(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUpper (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToUpper(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.ToUpper : System.Globalization.CultureInfo -&gt; string" Usage="string.ToUpper culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="086c0-3573">Объект, задающий правила определения регистра для языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3573">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="086c0-3574">Возвращает копию этой строки, переведенную в верхний регистр, используя правила определения регистра заданного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3574">Returns a copy of this string converted to uppercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="086c0-3575">Эквивалент текущей строки в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3575">The uppercase equivalent of the current string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3576">Правила учета регистра, языка и региональных параметров, заданные `culture` параметр определить способ регистра строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3576">The casing rules of the culture specified by the `culture` parameter determine the way the case of a string is changed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3577">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3577">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3578">Вместо этого он возвращает новую строку, в которой все символы в текущем экземпляре преобразуются в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3578">Instead, it returns a new string in which all characters in the current instance are converted to uppercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="086c0-3579">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="086c0-3579">Security Considerations</span></span>  
 <span data-ttu-id="086c0-3580">Если передать <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29> метод <xref:System.Globalization.CultureInfo> отличное от объекта <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>, операции смены регистра будет учтена правил, зависящих от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3580">If you pass the <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29> method a <xref:System.Globalization.CultureInfo> object other than <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>, the casing operation will take culture-specific rules into account.</span></span> <span data-ttu-id="086c0-3581">Если вам нужна версия верхний или нижний регистр идентификатора операционной системы, такие как имя файла с именем канала, или раздел реестра, используйте <xref:System.String.ToLowerInvariant%2A> или <xref:System.String.ToUpperInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3581">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="086c0-3582">Это дает тот же результат, в каждый язык и региональные параметры и выполняет более эффективно.</span><span class="sxs-lookup"><span data-stu-id="086c0-3582">This produces the same result in every culture and performs more efficiently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3583">Следующий пример преобразует строку в символы нижнего регистра в символы верхнего регистра, с помощью языков и региональных параметров Английский (США) и турецкий-Турция две строки, а затем сравниваются строки в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3583">The following example converts a string of lowercase characters to two strings of uppercase characters using the English-United States and Turkish-Turkey cultures, then compares the uppercase strings.</span></span> <span data-ttu-id="086c0-3584">Верхний регистр строки идентичны, за исключением того, что для каждого вхождения Юникода LATIN CAPITAL LETTER I в одной строке, вторая строка содержит LATIN CAPITAL LETTER I с ТОЧКОЙ выше.</span><span class="sxs-lookup"><span data-stu-id="086c0-3584">The uppercase strings are identical except that for each occurrence of the Unicode LATIN CAPITAL LETTER I in one string, the other string contains LATIN CAPITAL LETTER I WITH DOT ABOVE.</span></span>  
  
 [!code-csharp[string.toupper1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.toupper1/CS/toupper.cs#1)]
 [!code-vb[string.toupper1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.toupper1/VB/toupper.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="086c0-3585"><paramref name="culture" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3585"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.String.ToLowerInvariant" />
        <altmember cref="M:System.String.ToUpperInvariant" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public string ToUpperInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToUpperInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToUpperInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUpperInvariant () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToUpperInvariant();" />
      <MemberSignature Language="F#" Value="member this.ToUpperInvariant : unit -&gt; string" Usage="string.ToUpperInvariant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-3586">Возвращает копию этого объекта <see cref="T:System.String" />, переведенную в верхний регистр, используя правила учета регистра инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3586">Returns a copy of this <see cref="T:System.String" /> object converted to uppercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="086c0-3587">Эквивалент текущей строки в верхнем регистре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3587">The uppercase equivalent of the current string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3588">Инвариантный язык и региональные параметры представляет язык и региональные параметры без учета языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="086c0-3588">The invariant culture represents a culture that is culture-insensitive.</span></span> <span data-ttu-id="086c0-3589">Он связан с английским языком, но не с конкретной страны или региона.</span><span class="sxs-lookup"><span data-stu-id="086c0-3589">It is associated with the English language but not with a specific country or region.</span></span> <span data-ttu-id="086c0-3590">Дополнительные сведения см. в описании свойства <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3590">For more information, see the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="086c0-3591">Если приложение зависит от регистра строки, изменяемого предсказуемым способом, не зависящим от текущего языка и региональных параметров, используйте <xref:System.String.ToUpperInvariant%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3591">If your application depends on the case of a string changing in a predictable way that is unaffected by the current culture, use the <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="086c0-3592"><xref:System.String.ToUpperInvariant%2A> Метод эквивалентен `ToUpper(CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3592">The <xref:System.String.ToUpperInvariant%2A> method is equivalent to `ToUpper(CultureInfo.InvariantCulture)`.</span></span> <span data-ttu-id="086c0-3593">Метод рекомендуется в том случае, если коллекция строк должны отображаться в определенном порядке элемента управления пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="086c0-3593">The method is recommended when a collection of strings must appear in a predictable order in a user interface control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3594">Этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3594">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3595">Вместо этого он возвращает новую строку, в которой все символы в текущем экземпляре преобразуются в верхний регистр.</span><span class="sxs-lookup"><span data-stu-id="086c0-3595">Instead, it returns a new string in which all characters in the current instance are converted to uppercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="086c0-3596">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="086c0-3596">Security Considerations</span></span>  
 <span data-ttu-id="086c0-3597">Если вам нужна версия верхний или нижний регистр идентификатора операционной системы, такие как имя файла с именем канала, или раздел реестра, используйте <xref:System.String.ToLowerInvariant%2A> или <xref:System.String.ToUpperInvariant%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="086c0-3597">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3598">В следующем примере определяется массив строк, содержащий одно слово на нескольких языках.</span><span class="sxs-lookup"><span data-stu-id="086c0-3598">The following example defines a string array that contains a single word in a number of languages.</span></span> <span data-ttu-id="086c0-3599"><xref:System.String.ToUpperInvariant%2A> Метод используется для заполнения элементов массива параллельные версии каждого слова без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3599">The <xref:System.String.ToUpperInvariant%2A> method is used to populate the elements of a parallel array with the case-insensitive version of each word.</span></span> <span data-ttu-id="086c0-3600"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> Метод используется для сортировки массива с учетом регистра, на основе порядка элементов в массиве верхний регистр, чтобы убедиться, что элементы отображаются в том же порядке, независимо от языка.</span><span class="sxs-lookup"><span data-stu-id="086c0-3600">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method is used to sort the case-sensitive array based on the order of elements in the uppercase array to ensure that elements appear in the same order regardless of language.</span></span>  
  
 [!code-csharp[System.String.ToUpperInvariant#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.toupperinvariant/cs/toupperinvariant.cs#1)]
 [!code-vb[System.String.ToUpperInvariant#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.toupperinvariant/vb/toupperinvariant.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLowerInvariant" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Trim">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086c0-3601">Возвращает новую строку, в которой удалены все начальные и конечные вхождения заданного набора знаков из текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3601">Returns a new string in which all leading and trailing occurrences of a set of specified characters from the current <see cref="T:System.String" /> object are removed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Trim() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Trim" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim();" />
      <MemberSignature Language="F#" Value="member this.Trim : unit -&gt; string" Usage="string.Trim " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086c0-3602">Удаляет все начальные и конечные символы-разделители из текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3602">Removes all leading and trailing white-space characters from the current <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="086c0-3603">Строка, оставшаяся после удаления всех знаков пробела из начала и конца текущей строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3603">The string that remains after all white-space characters are removed from the start and end of the current string.</span></span> <span data-ttu-id="086c0-3604">Если в текущем экземпляре невозможно усечь символы, метод возвращает текущий экземпляр без изменений.</span><span class="sxs-lookup"><span data-stu-id="086c0-3604">If no characters can be trimmed from the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3605"><xref:System.String.Trim%2A> Метод удаляет из текущей строки все начальные и конечные пробелы.</span><span class="sxs-lookup"><span data-stu-id="086c0-3605">The <xref:System.String.Trim%2A> method removes from the current string all leading and trailing white-space characters.</span></span> <span data-ttu-id="086c0-3606">Операции удаления каждого начальные и конечные прекращается, когда встречается символ без пробелов.</span><span class="sxs-lookup"><span data-stu-id="086c0-3606">Each leading and trailing trim operation stops when a non-white-space character is encountered.</span></span> <span data-ttu-id="086c0-3607">Например, если текущей строки «abc "xyz» <xref:System.String.Trim%2A> метод возвращает «abc xyz».</span><span class="sxs-lookup"><span data-stu-id="086c0-3607">For example, if the current string is "   abc   xyz   ", the <xref:System.String.Trim%2A> method returns "abc   xyz".</span></span> <span data-ttu-id="086c0-3608">Чтобы удалить символы пробелов между словами в строке, используйте [регулярных выражений .NET](~/docs/standard/base-types/regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="086c0-3608">To remove white-space characters between words in a string, use [.NET Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3609">Если <xref:System.String.Trim%2A> метод удаляет все символы из текущего экземпляра, этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3609">If the <xref:System.String.Trim%2A> method removes any characters from the current instance, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3610">Вместо этого он возвращает новую строку, в которой удалены все начальные и конечные символы пробелов, найдены в текущем экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3610">Instead, it returns a new string in which all leading and trailing white space characters found in the current instance are removed.</span></span>  
  
 <span data-ttu-id="086c0-3611">Если значение текущей строки равно <xref:System.String.Empty> или все символы в текущем экземпляре состоят из символов разделителей, метод возвращает <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3611">If the current string equals <xref:System.String.Empty> or all the characters in the current instance consist of white-space characters, the method returns <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="086c0-3612">Пробельные символы определены в стандарте Юникода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3612">White-space characters are defined by the Unicode standard.</span></span> <span data-ttu-id="086c0-3613"><xref:System.String.Trim> Метод удаляет все начальные и конечные символы, которые создают возвращаемое значение `true` когда они передаются в <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="086c0-3613">The <xref:System.String.Trim> method removes any leading and trailing characters that produce a return value of `true` when they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3614">В следующем примере используется <xref:System.String.Trim?displayProperty=nameWithType> метод для удаления лишних пробелов из строки, вводимые пользователем, перед их объединения.</span><span class="sxs-lookup"><span data-stu-id="086c0-3614">The following example uses the <xref:System.String.Trim?displayProperty=nameWithType> method to remove any extra white space from strings entered by the user before concatenating them.</span></span>  
  
 [!code-cpp[System.String.Trim#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Trim/cpp/trim2.cpp#2)]
 [!code-csharp[System.String.Trim#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Trim/cs/Trim2.cs#2)]
 [!code-vb[System.String.Trim#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Trim/vb/Trim2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3615">[!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] И более ранних версиях Ведение внутреннего списка символы-разделители, этот метод удаляет.</span><span class="sxs-lookup"><span data-stu-id="086c0-3615">The [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions maintain an internal list of white-space characters that this method trims.</span></span> <span data-ttu-id="086c0-3616">Начиная с [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], метод удаляет все символы-разделители в Юникоде (то есть символы, создающие <see langword="true" /> вернуть значение, если они передаются в <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> метод).</span><span class="sxs-lookup"><span data-stu-id="086c0-3616">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the method trims all Unicode white-space characters (that is, characters that produce a <see langword="true" /> return value when they are passed to the <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> method).</span></span> <span data-ttu-id="086c0-3617">Из-за этого изменения <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] и более ранних версий удаляет два символа, ПРОСТРАНСТВО НУЛЕВОЙ ШИРИНЫ (U + 200B) и НУЛЕВОЙ ШИРИНЫ неразрывный пробел (U + FEFF), который <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]и более поздних версий не удалять.</span><span class="sxs-lookup"><span data-stu-id="086c0-3617">Because of this change, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions removes two characters, ZERO WIDTH SPACE (U+200B) and ZERO WIDTH NO-BREAK SPACE (U+FEFF), that the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]and later versions does not remove.</span></span> <span data-ttu-id="086c0-3618">Кроме того <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] и более ранних версий не усекает три пробельные символы Юникода: MONGOLIAN ГЛАСНЫЕ РАЗДЕЛИТЕЛЯ (U + 180E), УЗКИЙ неразрывный пробел (U + 202F) и средний МАТЕМАТИЧЕСКИЕ пробел (U + 205F).</span><span class="sxs-lookup"><span data-stu-id="086c0-3618">In addition, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions does not trim three Unicode white-space characters: MONGOLIAN VOWEL SEPARATOR (U+180E), NARROW NO-BREAK SPACE (U+202F), and MEDIUM MATHEMATICAL SPACE (U+205F).</span></span></para></block>
        <altmember cref="M:System.String.TrimEnd(System.Char[])" />
        <altmember cref="M:System.String.TrimStart(System.Char[])" />
        <altmember cref="M:System.Char.IsWhiteSpace(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim (char trimChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Trim(char trimChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Trim(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (trimChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim(char trimChar);" />
      <MemberSignature Language="F#" Value="member this.Trim : char -&gt; string" Usage="string.Trim trimChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChar" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="trimChar">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim (params char[] trimChars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Trim(char[] trimChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Trim(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (ParamArray trimChars As Char()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim(... cli::array &lt;char&gt; ^ trimChars);" />
      <MemberSignature Language="F#" Value="member this.Trim : char[] -&gt; string" Usage="string.Trim trimChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChars" Type="System.Char[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trimChars"><span data-ttu-id="086c0-3619">Массив удаляемых знаков Юникода или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3619">An array of Unicode characters to remove, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="086c0-3620">Удаляет все начальные и конечные вхождения набора знаков, заданного в виде массива, из текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3620">Removes all leading and trailing occurrences of a set of characters specified in an array from the current <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="086c0-3621">Строка, оставшаяся после удаления всех вхождений символов, заданных в параметре <paramref name="trimChars" />, из начала и конца текущей строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3621">The string that remains after all occurrences of the characters in the <paramref name="trimChars" /> parameter are removed from the start and end of the current string.</span></span> <span data-ttu-id="086c0-3622">Если значением параметра <paramref name="trimChars" /> является <see langword="null" /> или пустой массив, удаляются символы-разделители.</span><span class="sxs-lookup"><span data-stu-id="086c0-3622">If <paramref name="trimChars" /> is <see langword="null" /> or an empty array, white-space characters are removed instead.</span></span> <span data-ttu-id="086c0-3623">Если в текущем экземпляре невозможно усечь символы, метод возвращает текущий экземпляр без изменений.</span><span class="sxs-lookup"><span data-stu-id="086c0-3623">If no characters can be trimmed from the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3624"><xref:System.String.Trim%2A> Метод удаляет из текущей строки все начальные и конечные символы, которые находятся в `trimChars` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3624">The <xref:System.String.Trim%2A> method removes from the current string all leading and trailing characters that are in the `trimChars` parameter.</span></span> <span data-ttu-id="086c0-3625">Каждый начальные и конечные trim операция прекращается, когда символ, который не находится в `trimChars` встречается.</span><span class="sxs-lookup"><span data-stu-id="086c0-3625">Each leading and trailing trim operation stops when a character that is not in `trimChars` is encountered.</span></span> <span data-ttu-id="086c0-3626">Например, если текущая строка является «123abc456xyz789» и `trimChars` состоит из цифр от «1» до «9», <xref:System.String.Trim%2A> метод возвращает «abc456xyz».</span><span class="sxs-lookup"><span data-stu-id="086c0-3626">For example, if the current string is "123abc456xyz789" and `trimChars` contains the digits from "1" through "9", the <xref:System.String.Trim%2A> method returns "abc456xyz".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3627">Если <xref:System.String.Trim%2A> метод удаляет все символы из текущего экземпляра, этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3627">If the <xref:System.String.Trim%2A> method removes any characters from the current instance, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3628">Вместо этого он возвращает новую строку, в которой все начальные и конечные `trimChars` символов, найденных в текущем экземпляре будут удалены.</span><span class="sxs-lookup"><span data-stu-id="086c0-3628">Instead, it returns a new string in which all leading and trailing `trimChars` characters found in the current instance are removed.</span></span>  
  
 <span data-ttu-id="086c0-3629">Если значение текущей строки равно <xref:System.String.Empty> или все символы в текущем экземпляре состоят из символов в `trimChars` массива, метод возвращает <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="086c0-3629">If the current string equals <xref:System.String.Empty> or all the characters in the current instance consist of characters in the `trimChars` array, the method returns <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="086c0-3630">Если `trimChars` — `null` или пустой массив, этот метод удаляет все начальные и конечные символы, возникающих при возврате метода `true` когда они передаются в <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> метода,</span><span class="sxs-lookup"><span data-stu-id="086c0-3630">If `trimChars` is `null` or an empty array, this method removes any leading or trailing characters that result in the method returning `true` when they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method,</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3631">В следующем примере используется <xref:System.String.Trim%28System.Char%5B%5D%29?displayProperty=nameWithType> способ удаления пробел, символ звездочки (\*) и апостроф (') символов из строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3631">The following example uses the <xref:System.String.Trim%28System.Char%5B%5D%29?displayProperty=nameWithType> method to remove space, asterisk (\*), and apostrophe (') characters from a string.</span></span>  
  
 [!code-cpp[System.String.Trim#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Trim/cpp/trim1.cpp#1)]
 [!code-csharp[System.String.Trim#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Trim/cs/Trim1.cs#1)]
 [!code-vb[System.String.Trim#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Trim/vb/Trim1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3632">[!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] И более ранние версии поддерживают внутренний список символов пробела, этот метод удаляет Если <paramref name="trimChars" /> является <see langword="null" /> или пустой массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3632">The [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions maintains an internal list of white-space characters that this method trims if <paramref name="trimChars" /> is <see langword="null" /> or an empty array.</span></span> <span data-ttu-id="086c0-3633">Начиная с [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], если <paramref name="trimChars" /> — <see langword="null" /> или пустой массив, метод удаляет все символы-разделители в Юникоде (то есть символы, создающие <see langword="true" /> вернуть значение, если они передаются в <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> метод).</span><span class="sxs-lookup"><span data-stu-id="086c0-3633">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], if <paramref name="trimChars" /> is <see langword="null" /> or an empty array, the method trims all Unicode white-space characters (that is, characters that produce a <see langword="true" /> return value when they are passed to the <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> method).</span></span> <span data-ttu-id="086c0-3634">Из-за этого изменения <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] и более ранних версий удаляет два символа, ПРОСТРАНСТВО НУЛЕВОЙ ШИРИНЫ (U + 200B) и НУЛЕВОЙ ШИРИНЫ неразрывный пробел (U + FEFF), который <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]и более поздних версий не удалять.</span><span class="sxs-lookup"><span data-stu-id="086c0-3634">Because of this change, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions removes two characters, ZERO WIDTH SPACE (U+200B) and ZERO WIDTH NO-BREAK SPACE (U+FEFF), that the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]and later versions does not remove.</span></span> <span data-ttu-id="086c0-3635">Кроме того <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] и более ранних версий не усекает три пробельные символы Юникода: MONGOLIAN ГЛАСНЫЕ РАЗДЕЛИТЕЛЯ (U + 180E), УЗКИЙ неразрывный пробел (U + 202F) и средний МАТЕМАТИЧЕСКИЕ пробел (U + 205F).</span><span class="sxs-lookup"><span data-stu-id="086c0-3635">In addition, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions does not trim three Unicode white-space characters: MONGOLIAN VOWEL SEPARATOR (U+180E), NARROW NO-BREAK SPACE (U+202F), and MEDIUM MATHEMATICAL SPACE (U+205F).</span></span></para></block>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.TrimEnd(System.Char[])" />
        <altmember cref="M:System.String.TrimStart(System.Char[])" />
        <altmember cref="M:System.Char.IsWhiteSpace(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public string TrimEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimEnd();" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : unit -&gt; string" Usage="string.TrimEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public string TrimEnd (char trimChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimEnd(char trimChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimEnd(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd (trimChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimEnd(char trimChar);" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : char -&gt; string" Usage="string.TrimEnd trimChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChar" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="trimChar">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public string TrimEnd (params char[] trimChars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimEnd(char[] trimChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimEnd(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd (ParamArray trimChars As Char()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimEnd(... cli::array &lt;char&gt; ^ trimChars);" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : char[] -&gt; string" Usage="string.TrimEnd trimChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChars" Type="System.Char[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trimChars"><span data-ttu-id="086c0-3636">Массив удаляемых знаков Юникода или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3636">An array of Unicode characters to remove, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="086c0-3637">Удаляет все конечные вхождения набора знаков, заданного в виде массива, из текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3637">Removes all trailing occurrences of a set of characters specified in an array from the current <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="086c0-3638">Строка, оставшаяся после удаления всех вхождений символов, заданных в параметре <paramref name="trimChars" />, из конца текущей строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3638">The string that remains after all occurrences of the characters in the <paramref name="trimChars" /> parameter are removed from the end of the current string.</span></span> <span data-ttu-id="086c0-3639">Если значением параметра <paramref name="trimChars" /> является <see langword="null" /> или пустой массив, удаляются символы-разделители в Юникоде.</span><span class="sxs-lookup"><span data-stu-id="086c0-3639">If <paramref name="trimChars" /> is <see langword="null" /> or an empty array, Unicode white-space characters are removed instead.</span></span> <span data-ttu-id="086c0-3640">Если в текущем экземпляре невозможно усечь символы, метод возвращает текущий экземпляр без изменений.</span><span class="sxs-lookup"><span data-stu-id="086c0-3640">If no characters can be trimmed from the current instance, the method returns the current instance unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3641"><xref:System.String.TrimEnd%2A> Метод удаляет из текущей строки все конечные символы, которые находятся в `trimChars` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3641">The <xref:System.String.TrimEnd%2A> method removes from the current string all trailing characters that are in the `trimChars` parameter.</span></span> <span data-ttu-id="086c0-3642">Выполнение операции сокращения прекращается после первого символа, не находящегося в `trimChars` обнаруживается в конце строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3642">The trim operation stops when the first character that is not in `trimChars` is encountered at the end of the string.</span></span> <span data-ttu-id="086c0-3643">Например, если текущая строка является «123abc456xyz789» и `trimChars` состоит из цифр от «1» до «9», <xref:System.String.TrimEnd%2A> метод возвращает «123abc456xyz».</span><span class="sxs-lookup"><span data-stu-id="086c0-3643">For example, if the current string is "123abc456xyz789" and `trimChars` contains the digits from "1" through "9", the <xref:System.String.TrimEnd%2A> method returns "123abc456xyz".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3644">Если <xref:System.String.TrimEnd%2A> метод удаляет все символы из текущего экземпляра, этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3644">If the <xref:System.String.TrimEnd%2A> method removes any characters from the current instance, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3645">Вместо этого он возвращает новую строку в какой всех конечных символов, найденных в `trimChars` удаляются из текущей строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3645">Instead, it returns a new string in which all trailing characters found in `trimChars` are removed from the current string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3646">В следующем примере показано, как можно использовать <xref:System.String.TrimEnd%28System.Char%5B%5D%29> метод для обрезки пробелы или знаки препинания в конце строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3646">The following example demonstrates how you can use the <xref:System.String.TrimEnd%28System.Char%5B%5D%29> method to trim white space or punctuation marks from the end of a string.</span></span>  
  
 [!code-csharp[System.String.TrimEnd#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.TrimEnd/cs/sample2.cs#2)]
 [!code-vb[System.String.TrimEnd#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.TrimEnd/vb/Sample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3647">[!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] И более ранние версии поддерживают внутренний список символов пробела, этот метод удаляет Если <paramref name="trimChars" /> является <see langword="null" /> или пустой массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3647">The [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions maintains an internal list of white-space characters that this method trims if <paramref name="trimChars" /> is <see langword="null" /> or an empty array.</span></span> <span data-ttu-id="086c0-3648">Начиная с [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], если <paramref name="trimChars" /> — <see langword="null" /> или пустой массив, метод удаляет все символы-разделители в Юникоде (то есть символы, создающие <see langword="true" /> вернуть значение, если они передаются в <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> метод).</span><span class="sxs-lookup"><span data-stu-id="086c0-3648">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], if <paramref name="trimChars" /> is <see langword="null" /> or an empty array, the method trims all Unicode white-space characters (that is, characters that produce a <see langword="true" /> return value when they are passed to the <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> method).</span></span> <span data-ttu-id="086c0-3649">Из-за этого изменения <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] и более ранних версий удаляет два символа, ПРОСТРАНСТВО НУЛЕВОЙ ШИРИНЫ (U + 200B) и НУЛЕВОЙ ШИРИНЫ неразрывный пробел (U + FEFF), который <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] и более поздних версий не удалять.</span><span class="sxs-lookup"><span data-stu-id="086c0-3649">Because of this change, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions removes two characters, ZERO WIDTH SPACE (U+200B) and ZERO WIDTH NO-BREAK SPACE (U+FEFF), that the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later versions does not remove.</span></span> <span data-ttu-id="086c0-3650">Кроме того <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] и более ранних версий не усекает три пробельные символы Юникода: MONGOLIAN ГЛАСНЫЕ РАЗДЕЛИТЕЛЯ (U + 180E), УЗКИЙ неразрывный пробел (U + 202F) и средний МАТЕМАТИЧЕСКИЕ пробел (U + 205F).</span><span class="sxs-lookup"><span data-stu-id="086c0-3650">In addition, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions does not trim three Unicode white-space characters: MONGOLIAN VOWEL SEPARATOR (U+180E), NARROW NO-BREAK SPACE (U+202F), and MEDIUM MATHEMATICAL SPACE (U+205F).</span></span></para></block>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
        <altmember cref="M:System.String.TrimStart(System.Char[])" />
        <altmember cref="M:System.Char.IsWhiteSpace(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public string TrimStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimStart" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimStart();" />
      <MemberSignature Language="F#" Value="member this.TrimStart : unit -&gt; string" Usage="string.TrimStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public string TrimStart (char trimChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimStart(char trimChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimStart(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart (trimChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimStart(char trimChar);" />
      <MemberSignature Language="F#" Value="member this.TrimStart : char -&gt; string" Usage="string.TrimStart trimChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChar" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="trimChar">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public string TrimStart (params char[] trimChars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimStart(char[] trimChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimStart(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart (ParamArray trimChars As Char()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimStart(... cli::array &lt;char&gt; ^ trimChars);" />
      <MemberSignature Language="F#" Value="member this.TrimStart : char[] -&gt; string" Usage="string.TrimStart trimChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChars" Type="System.Char[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trimChars"><span data-ttu-id="086c0-3651">Массив удаляемых знаков Юникода или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3651">An array of Unicode characters to remove, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="086c0-3652">Удаляет все начальные вхождения набора знаков, заданного в виде массива, из текущего объекта <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="086c0-3652">Removes all leading occurrences of a set of characters specified in an array from the current <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="086c0-3653">Строка, оставшаяся после удаления всех вхождений символов, заданных в параметре <paramref name="trimChars" />, из начала текущей строки.</span><span class="sxs-lookup"><span data-stu-id="086c0-3653">The string that remains after all occurrences of characters in the <paramref name="trimChars" /> parameter are removed from the start of the current string.</span></span> <span data-ttu-id="086c0-3654">Если значением параметра <paramref name="trimChars" /> является <see langword="null" /> или пустой массив, удаляются символы-разделители.</span><span class="sxs-lookup"><span data-stu-id="086c0-3654">If <paramref name="trimChars" /> is <see langword="null" /> or an empty array, white-space characters are removed instead.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086c0-3655"><xref:System.String.TrimStart%2A> Метод удаляет из текущей строки все начальные символы, которые находятся в `trimChars` параметра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3655">The <xref:System.String.TrimStart%2A> method removes from the current string all leading characters that are in the `trimChars` parameter.</span></span> <span data-ttu-id="086c0-3656">Операции удаления прекращается, когда символ, который не находится в `trimChars` встречается.</span><span class="sxs-lookup"><span data-stu-id="086c0-3656">The trim operation stops when a character that is not in `trimChars` is encountered.</span></span> <span data-ttu-id="086c0-3657">Например, если текущая строка является «123abc456xyz789» и `trimChars` состоит из цифр от «1» до «9», <xref:System.String.TrimStart%2A> метод возвращает «abc456xyz789».</span><span class="sxs-lookup"><span data-stu-id="086c0-3657">For example, if the current string is "123abc456xyz789" and `trimChars` contains the digits from "1" through "9", the <xref:System.String.TrimStart%2A> method returns "abc456xyz789".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="086c0-3658">Если <xref:System.String.TrimStart%2A> метод удаляет все символы из текущего экземпляра, этот метод не изменяет значение текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="086c0-3658">If the <xref:System.String.TrimStart%2A> method removes any characters from the current instance, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="086c0-3659">Вместо этого он возвращает новую строку, в которой удалены все начальные символы пробелов, найдены в текущем экземпляре.</span><span class="sxs-lookup"><span data-stu-id="086c0-3659">Instead, it returns a new string in which all leading white space characters found in the current instance are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="086c0-3660">В следующем примере демонстрируется базовая функциональность <xref:System.String.TrimStart%2A> метод:</span><span class="sxs-lookup"><span data-stu-id="086c0-3660">The following example demonstrates the basic functionality of the <xref:System.String.TrimStart%2A> method:</span></span>

 [!code-csharp[System.String.TrimStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.TrimStart/cs/sample.cs#1)]
 [!code-vb[System.String.TrimStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.TrimStart/vb/sample.vb#1)]

 <span data-ttu-id="086c0-3661">В следующем примере используется <xref:System.String.TrimStart%2A> метод для обрезки, пробелы и символы комментария из строк исходного кода.</span><span class="sxs-lookup"><span data-stu-id="086c0-3661">The following example uses the <xref:System.String.TrimStart%2A> method to trim white space and comment characters from lines of source code.</span></span> <span data-ttu-id="086c0-3662">`StripComments` Метод создает оболочку для вызова <xref:System.String.TrimStart%2A> и передает его в массив символов, содержит пробел и знак комментария, который является апостроф (') в Visual Basic и косая черта (/) в C#.</span><span class="sxs-lookup"><span data-stu-id="086c0-3662">The `StripComments` method wraps a call to <xref:System.String.TrimStart%2A> and passes it a character array that contains a space and the comment character, which is an apostrophe ( ' ) in Visual Basic and a slash ( / ) in C#.</span></span> <span data-ttu-id="086c0-3663"><xref:System.String.TrimStart%2A> Также осуществляется вызов метода для удаления начальных пробелов при оценке, является ли строка комментария.</span><span class="sxs-lookup"><span data-stu-id="086c0-3663">The <xref:System.String.TrimStart%2A> method is also called to remove leading white space when evaluating whether a string is a comment.</span></span>  
  
 [!code-csharp[System.String.TrimStart#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.TrimStart/cs/sample.cs#2)]
 [!code-vb[System.String.TrimStart#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.TrimStart/vb/sample.vb#2)]  
  
 <span data-ttu-id="086c0-3664">В следующем примере показан вызов метода `StripComments`.</span><span class="sxs-lookup"><span data-stu-id="086c0-3664">The following example then illustrates a call to the `StripComments` method.</span></span>  
  
 [!code-csharp[System.String.TrimStart#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.TrimStart/cs/sample.cs#3)]
 [!code-vb[System.String.TrimStart#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.TrimStart/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="086c0-3665">[!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] И более ранние версии поддерживают внутренний список символов пробела, этот метод удаляет Если <paramref name="trimChars" /> является <see langword="null" /> или пустой массив.</span><span class="sxs-lookup"><span data-stu-id="086c0-3665">The [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions maintains an internal list of white-space characters that this method trims if <paramref name="trimChars" /> is <see langword="null" /> or an empty array.</span></span> <span data-ttu-id="086c0-3666">Начиная с [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], если <paramref name="trimChars" /> — <see langword="null" /> или пустой массив, метод удаляет все символы-разделители в Юникоде (то есть символы, создающие <see langword="true" /> вернуть значение, если они передаются в <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> метод).</span><span class="sxs-lookup"><span data-stu-id="086c0-3666">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], if <paramref name="trimChars" /> is <see langword="null" /> or an empty array, the method trims all Unicode white-space characters (that is, characters that produce a <see langword="true" /> return value when they are passed to the <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> method).</span></span> <span data-ttu-id="086c0-3667">Из-за этого изменения <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] и более ранних версий удаляет два символа, ПРОСТРАНСТВО НУЛЕВОЙ ШИРИНЫ (U + 200B) и НУЛЕВОЙ ШИРИНЫ неразрывный пробел (U + FEFF), который <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] и более поздних версий не удалять.</span><span class="sxs-lookup"><span data-stu-id="086c0-3667">Because of this change, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions removes two characters, ZERO WIDTH SPACE (U+200B) and ZERO WIDTH NO-BREAK SPACE (U+FEFF), that the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later versions does not remove.</span></span> <span data-ttu-id="086c0-3668">Кроме того <see cref="M:System.String.Trim" /> метод в [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] и более ранних версий не усекает три пробельные символы Юникода: MONGOLIAN ГЛАСНЫЕ РАЗДЕЛИТЕЛЯ (U + 180E), УЗКИЙ неразрывный пробел (U + 202F) и средний МАТЕМАТИЧЕСКИЕ пробел (U + 205F).</span><span class="sxs-lookup"><span data-stu-id="086c0-3668">In addition, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions does not trim three Unicode white-space characters: MONGOLIAN VOWEL SEPARATOR (U+180E), NARROW NO-BREAK SPACE (U+202F), and MEDIUM MATHEMATICAL SPACE (U+205F).</span></span></para></block>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
        <altmember cref="M:System.String.TrimEnd(System.Char[])" />
        <altmember cref="M:System.Char.IsWhiteSpace(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>