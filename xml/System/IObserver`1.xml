<Type Name="IObserver&lt;T&gt;" FullName="System.IObserver&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ca9b792aac63db0a6049b5c039f3559c547183d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172795" /></Metadata><TypeSignature Language="C#" Value="public interface IObserver&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObserver`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObserver`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObserver(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObserver" />
  <TypeSignature Language="F#" Value="type IObserver&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Объект, предоставляющий сведения об уведомлениях.</typeparam>
    <summary>Предоставляет механизм для получения push-уведомлений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Интерфейсы <xref:System.IObserver%601> и <xref:System.IObservable%601> предоставляют обобщенный механизм для уведомлений на основе принудительной отправки, который также называется шаблоном разработки наблюдателя. Интерфейс <xref:System.IObservable%601> представляет класс, который отправляет уведомления (поставщик); интерфейс <xref:System.IObserver%601> представляет класс, который получает их (наблюдатель). `T` представляет класс, предоставляющий сведения об уведомлении.  
  
 Реализация <xref:System.IObserver%601> упорядочивает получение уведомлений от поставщика (реализация <xref:System.IObservable%601>), передавая экземпляр самого себя в метод <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> поставщика. Этот метод возвращает объект <xref:System.IDisposable>, который можно использовать для отмены подписки наблюдателя до того, как поставщик завершит отправку уведомлений.  
  
 Интерфейс <xref:System.IObserver%601> определяет следующие три метода, которые должен реализовать наблюдатель:  
  
-   Метод <xref:System.IObserver%601.OnNext%2A>, который обычно вызывается поставщиком для предоставления наблюдателю новых данных или сведений о состоянии.  
  
-   Метод <xref:System.IObserver%601.OnError%2A>, который обычно вызывается поставщиком для указания на недоступность, недоступность или повреждение данных, а также на то, что поставщик столкнулся с некоторыми другими условиями возникновения ошибки.  
  
-   Метод <xref:System.IObserver%601.OnCompleted%2A>, который обычно вызывается поставщиком, чтобы указать, что он закончил отправку уведомлений наблюдателям.  
  
   
  
## Examples  
 В следующем примере показан шаблон разработки наблюдателя. Он определяет класс `Location`, содержащий сведения широты и долготы.  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 Класс `LocationReporter` предоставляет реализацию <xref:System.IObserver%601>. Он отображает сведения о текущем расположении в консоли. Его конструктор включает параметр `name`, который позволяет экземпляру `LocationReporter` идентифицировать себя в выходном виде строки. Он также включает метод `Subscribe`, который заключает в оболочку вызов метода <xref:System.IObservable%601.Subscribe%2A> поставщика. Это позволяет методу назначить возвращаемую <xref:System.IDisposable> ссылку на закрытую переменную. Класс `LocationReporter` также включает метод `Unsubscribe`, который вызывает метод <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> объекта, возвращаемого методом <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>. В следующем коде определяется класс `LocationReporter`.  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 Класс `LocationTracker` предоставляет реализацию <xref:System.IObservable%601>. Его методу `TrackLocation` передается объект `Location`, допускающий значение null, который содержит данные широты и долготы. Если `Location` значение не `null`, метод `TrackLocation` вызывает метод <xref:System.IObserver%601.OnNext%2A> каждого наблюдателя.  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 Если `Location` значение равно `null`, то метод `TrackLocation` создает объект `LocationNotFoundException`, который показан в следующем примере. Затем он вызывает метод <xref:System.IObserver%601.OnError%2A> каждого наблюдателя и передает ему объект `LocationNotFoundException`. Обратите внимание, что `LocationNotFoundException` является производным от <xref:System.Exception> но не добавляет новые члены.  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 Наблюдатели регистрируются для получения уведомлений из объекта `TrackLocation` путем вызова его метода <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>, который назначает ссылку на объект наблюдателя закрытому универсальному объекту <xref:System.Collections.Generic.List%601>. Метод возвращает объект `Unsubscriber`, который является реализацией <xref:System.IDisposable>, которая позволяет наблюдателям прекращать получать уведомления. Класс `LocationTracker` также включает метод `EndTransmission`. Если данные о расположении недоступны, метод вызывает метод <xref:System.IObserver%601.OnCompleted%2A> каждого наблюдателя, а затем очищает внутренний список наблюдателей.  
  
 Затем следующий код создает экземпляр поставщика и наблюдателя.  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObservable`1" />
  </Docs>
  <Members>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public void OnCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : unit -&gt; unit" Usage="iObserver.OnCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Уведомляет наблюдателя о том, что поставщик завершил отправку push-уведомлений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове реализации <xref:System.IObserver%601.OnCompleted%2A> наблюдателя метод <xref:System.IObserver%601.OnCompleted%2A> может вызвать метод <xref:System.IDisposable.Dispose%2A> объекта <xref:System.IDisposable>, который был возвращен наблюдателю при вызове метода <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере показана реализация метода <xref:System.IObserver%601.OnCompleted%2A> в приложении отслеживания широты и долготы. Метод просто сообщает о том, что дополнительные данные недоступны, и вызывает реализацию <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> поставщика. Полный пример см. в разделе "пример" <xref:System.IObserver%601> разделе.  
  
 [!code-csharp[System.IObserver.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#11)]
 [!code-vb[System.IObserver.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnError (error As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnError(Exception ^ error);" />
      <MemberSignature Language="F#" Value="abstract member OnError : Exception -&gt; unit" Usage="iObserver.OnError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="error">Объект, который предоставляет дополнительную информацию об ошибке.</param>
        <summary>Уведомляет наблюдателя о том, что у поставщика возникла ошибка.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Хотя `error` является объектом, производным от <xref:System.Exception?displayProperty=nameWithType>, он не обязательно представляет исключение, выдаваемое поставщиком. Оно также может представлять собой обычную или ожидаемую ошибку, например данные, отсутствующие или недоступные. Метод <xref:System.IObserver%601.OnError%2A> должен рассматриваться как информационный, и поставщик не должен ждать, пока наблюдатель не предоставит обработку ошибок.  
  
   
  
## Examples  
 В следующем примере показана реализация метода <xref:System.IObserver%601.OnError%2A> в приложении отслеживания широты и долготы. Метод просто сообщает, что данные в данный момент недоступны; Он не использует объект <xref:System.Exception>, переданный в него в качестве параметра. Полный пример см. в разделе "пример" <xref:System.IObserver%601> разделе.  
  
 [!code-csharp[System.IObserver.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#10)]
 [!code-vb[System.IObserver.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c834760f-ddd4-417f-abb7-a059679d5b8c">Рекомендации по шаблону разработки Observer</related>
      </Docs>
    </Member>
    <Member MemberName="OnNext">
      <MemberSignature Language="C#" Value="public void OnNext (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNext(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnNext(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnNext (value As T)" />
      <MemberSignature Language="F#" Value="abstract member OnNext : 'T -&gt; unit" Usage="iObserver.OnNext value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Текущие сведения об уведомлениях.</param>
        <summary>Предоставляет наблюдателю новые данные.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После того как наблюдатель вызывал метод <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> поставщика, поставщик вызывает метод <xref:System.IObserver%601.OnNext%2A> наблюдателя для предоставления уведомлений.  
  
   
  
## Examples  
 В следующем примере показана реализация метода <xref:System.IObserver%601.OnNext%2A> в приложении отслеживания широты и долготы. Полный пример см. в разделе "пример" <xref:System.IObserver%601> разделе.  
  
 [!code-csharp[System.IObserver.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#12)]
 [!code-vb[System.IObserver.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
