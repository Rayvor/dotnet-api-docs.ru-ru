<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bce716cd0c3354619ffbdd10290d061e39634ace" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69405933" /></Metadata><TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <TypeSignature Language="F#" Value="type IObservable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Объект, предоставляющий сведения об уведомлениях.</typeparam>
    <summary>Определяет поставщика принудительно отправляемых уведомлений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Интерфейсы <xref:System.IObserver%601> и<xref:System.IObservable%601> предоставляют обобщенный механизм для уведомлений на основе принудительной отправки, который также называется шаблоном разработки наблюдателя. Интерфейс представляет класс, отправляющий уведомления (поставщик) <xref:System.IObserver%601> ; интерфейс представляет класс, который их получает (наблюдатель). <xref:System.IObservable%601> `T`представляет класс, предоставляющий сведения об уведомлении. В некоторых уведомлениях на основе Push- <xref:System.IObserver%601> уведомлений реализация `T` и может представлять один и тот же тип.  
  
 Поставщик должен реализовывать единственный метод, <xref:System.IObservable%601.Subscribe%2A>который указывает, что наблюдатель хочет получать уведомления на основе push-уведомлений. Вызывающие объекты метода передают экземпляр наблюдателя. Метод возвращает <xref:System.IDisposable> реализацию, которая позволяет наблюдателям отменять уведомления в любое время, прежде чем поставщик остановил их отправку.  
  
 В любой момент времени у данного поставщика может быть ноль, один или несколько наблюдателей. Поставщик отвечает за хранение ссылок на наблюдатели и обеспечение их допустимости перед отправкой уведомлений. <xref:System.IObservable%601> Интерфейс не делает никаких предположений относительно количества наблюдателей или порядка, в котором отправляются уведомления.  
  
 Поставщик отправляет наблюдателю следующие три типа уведомлений, вызывая <xref:System.IObserver%601> методы:  
  
-   Текущие данные. Поставщик может вызвать <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> метод для передачи наблюдателю `T` объекта с текущими данными, измененными данными или свежими данными.  
  
-   Условие ошибки. Поставщик может вызвать <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> метод, чтобы уведомить наблюдателя о том, что возникла ошибка.  
  
-   Нет дополнительных данных. Поставщик может вызвать <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> метод, чтобы уведомить наблюдателя о завершении отправки уведомлений.  
  
   
  
## Examples  
 В следующем примере показан шаблон разработки наблюдателя. Он определяет `Location` класс, содержащий сведения широты и долготы.  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 `LocationTracker` Класс<xref:System.IObservable%601> предоставляет реализацию. Его `TrackLocation` методу передается `Location` объект, допускающий значение null, который содержит данные широты и долготы. Если значение не `null` `TrackLocation` равно<xref:System.IObserver%601.OnNext%2A> , метод вызывает метод каждого наблюдателя. `Location`  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 Если значение равно `null` `LocationUnknownException` , `TrackLocation` метод создает экземпляр объекта, который показан в следующем примере. `Location` Затем он вызывает <xref:System.IObserver%601.OnError%2A> метод каждого наблюдателя и передает `LocationUnknownException` ему объект. Обратите `LocationUnknownException` внимание, что <xref:System.Exception>является производным от, но не добавляет новые члены.  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 Наблюдатели регистрируются для получения уведомлений `TrackLocation` от объекта путем вызова <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> его метода, который назначает ссылку на объект наблюдателя закрытому универсальному <xref:System.Collections.Generic.List%601> объекту. Метод возвращает `Unsubscriber` объект, который <xref:System.IDisposable> является реализацией, которая позволяет наблюдателям прекращать получать уведомления. `LocationTracker` Класс также`EndTransmission` включает метод. Если данные о расположении недоступны, метод вызывает <xref:System.IObserver%601.OnCompleted%2A> метод каждого наблюдателя, а затем очищает внутренний список наблюдателей.  
  
 В этом примере `LocationReporter` класс <xref:System.IObserver%601> предоставляет реализацию. Он отображает сведения о текущем расположении в консоли. Его конструктор включает `name` параметр, который `LocationReporter` позволяет экземпляру идентифицировать себя в выходном виде строки. Он также включает `Subscribe` метод, который заключает в оболочку вызов <xref:System.IObservable%601.Subscribe%2A> метода поставщика. Это позволяет методу назначить возвращенную <xref:System.IDisposable> ссылку на закрытую переменную. Класс также `Unsubscribe` включает <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> метод,которыйвызываетметодобъекта,возвращаемогометодом.<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> `LocationReporter` В следующем коде определяется `LocationReporter` класс.  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 Затем следующий код создает экземпляр поставщика и наблюдателя.  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/3680171f-f522-453c-aa4a-54f755a78f88">Шаблон разработки наблюдателя</related>
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;'T&gt; -&gt; IDisposable" Usage="iObservable.Subscribe observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer">Объект, который должен получать уведомления.</param>
        <summary>Уведомляет поставщика о том, что наблюдатель должен получать уведомления.</summary>
        <returns>Ссылка на интерфейс, которая позволяет наблюдателям прекратить получение уведомлений до того, как поставщик закончила отправлять их.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObservable%601.Subscribe%2A> Метод должен быть вызван для регистрации наблюдателя для уведомлений на основе принудительной отправки. Типичная реализация <xref:System.IObservable%601.Subscribe%2A> метода делает следующее:  
  
-   Он сохраняет ссылку на наблюдателя в объекте коллекции, например <xref:System.Collections.Generic.List%601> в объекте.  
  
-   Он возвращает ссылку на <xref:System.IDisposable> интерфейс. Это позволяет наблюдателям отменять подписывание (то есть прекращать получение уведомлений) до того, как поставщик завершит отправку сообщений и <xref:System.IObserver%601.OnCompleted%2A> выпустил метод подписчика.  
  
 В любой момент времени конкретный экземпляр <xref:System.IObservable%601> реализации отвечает за обработку всех подписок и уведомление всех подписчиков. Если в документации по конкретной <xref:System.IObservable%601> реализации не указано иное, наблюдатели не должны ничего предполагать <xref:System.IObservable%601> о реализации, например о порядке уведомлений, получаемых несколькими наблюдателями.  
  
   
  
## Examples  
 В следующем примере показан <xref:System.IObservable%601.Subscribe%2A> метод для приложения, которое сообщает сведения о широте и долготе. Он определяет <xref:System.Collections.Generic.IList%601> объект коллекции, в котором хранятся ссылки на все наблюдатели. Он также возвращает закрытый класс с именем `Unsubscriber` , который <xref:System.IDisposable> реализует интерфейс и позволяет подписчикам перестают получать уведомления о событиях.  Полный пример см. в разделе <xref:System.IObservable%601> "пример" статьи.  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>
