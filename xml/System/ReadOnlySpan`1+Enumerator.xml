<Type Name="ReadOnlySpan&lt;T&gt;+Enumerator" FullName="System.ReadOnlySpan&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4fb5970a2200de77b4ecebaf6f82ef841d4c6aa" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73384015" /></Metadata><TypeSignature Language="C#" Value="public struct ReadOnlySpan&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ReadOnlySpan`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ReadOnlySpan`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlySpan(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class ReadOnlySpan&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type ReadOnlySpan&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1a178-101">Предоставляет перечислитель для элементов <see cref="T:System.ReadOnlySpan`1" />.</span><span class="sxs-lookup"><span data-stu-id="1a178-101">Provides an enumerator for the elements of a <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1a178-102">C# [](~/docs/csharp/language-reference/keywords/foreach-in.md) ForEach C# языка и [для каждого... Следующая](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) конструкция в Visual Basic скрывает сложность перечислителей.</span><span class="sxs-lookup"><span data-stu-id="1a178-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="1a178-103">Вместо того, чтобы напрямую манипулировать перечислителем, рекомендуется использовать `foreach` или `For Each...Next`.</span><span class="sxs-lookup"><span data-stu-id="1a178-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="1a178-104">Изначально перечислитель располагается перед первым элементом в <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="1a178-104">Initially, the enumerator is positioned before the first element in the <xref:System.ReadOnlySpan`1>.</span></span> <span data-ttu-id="1a178-105">В этой позиции значение свойства <xref:System.ReadOnlySpan`1.Enumerator.Current> не определено.</span><span class="sxs-lookup"><span data-stu-id="1a178-105">At this position, <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="1a178-106">Необходимо вызвать <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу в <xref:System.ReadOnlySpan`1> перед чтением значения <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span><span class="sxs-lookup"><span data-stu-id="1a178-106">You must call <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.ReadOnlySpan`1> before reading the value of <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span></span>

<span data-ttu-id="1a178-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> возвращает то же значение, пока не будет вызвано <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a178-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="1a178-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> задает <xref:System.ReadOnlySpan`1.Enumerator.Current> следующий элемент в <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="1a178-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> sets <xref:System.ReadOnlySpan`1.Enumerator.Current> to the next item in the <xref:System.ReadOnlySpan`1>.</span></span>

<span data-ttu-id="1a178-109">Если <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> передает конец <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="1a178-109">If <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> passes the end of the <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="1a178-110">Когда перечислитель находится в этом состоянии, последующие вызовы <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> также возвращают `false` и <xref:System.ReadOnlySpan`1.Enumerator.Current> не определены.</span><span class="sxs-lookup"><span data-stu-id="1a178-110">When the enumerator is at this state, subsequent calls to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> also return `false` and <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="1a178-111">Невозможно снова задать <xref:System.ReadOnlySpan`1.Enumerator.Current> для первого элемента в <xref:System.ReadOnlySpan`1>; Вместо этого необходимо создать новый экземпляр перечислителя.</span><span class="sxs-lookup"><span data-stu-id="1a178-111">You cannot set <xref:System.ReadOnlySpan`1.Enumerator.Current> to the first item in the <xref:System.ReadOnlySpan`1> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="1a178-112">Несмотря на то, что <xref:System.ReadOnlySpan`1> выделяется в стеке, базовые данные, на которые указывает <xref:System.ReadOnlySpan`1>, могут не быть.</span><span class="sxs-lookup"><span data-stu-id="1a178-112">Though the <xref:System.ReadOnlySpan`1> is allocated on the stack, the underlying data on which the <xref:System.ReadOnlySpan`1> points to, may not be.</span></span> <span data-ttu-id="1a178-113">Таким образом, перечисление <xref:System.ReadOnlySpan`1> не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="1a178-113">Therefore, enumerating through a <xref:System.ReadOnlySpan`1> is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="1a178-114">Чтобы обеспечить потокобезопасность во время перечисления, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="1a178-114">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span>

<span data-ttu-id="1a178-115">В отличие от других структур перечислителя в .NET, <xref:System.ReadOnlySpan`1.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="1a178-115">Unlike some other enumerator structures in .NET, the <xref:System.ReadOnlySpan`1.Enumerator>:</span></span>

- <span data-ttu-id="1a178-116">Не реализует интерфейс <xref:System.Collections.IEnumerator> или <xref:System.Collections.Generic.IEnumerator`1>.</span><span class="sxs-lookup"><span data-stu-id="1a178-116">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator`1> interface.</span></span> <span data-ttu-id="1a178-117">Это обусловлено тем, что <xref:System.ReadOnlySpan`1.Enumerator> является [структурой ссылок](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) и не может быть упакована.</span><span class="sxs-lookup"><span data-stu-id="1a178-117">This is because <xref:System.ReadOnlySpan`1.Enumerator> is a [ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) and cannot be boxed.</span></span>

- <span data-ttu-id="1a178-118">Не включает метод `Reset`, который может установить исходное расположение перечислителя перед первым элементом в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="1a178-118">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="1a178-119">(Метод <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> должен быть реализован как часть интерфейса, но большинство методов реализации либо создают исключение, либо не предоставляют реализацию.)</span><span class="sxs-lookup"><span data-stu-id="1a178-119">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span>

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T&amp; ^ Current { T&amp; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : 'T" Usage="System.ReadOnlySpan&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a178-120">Возвращает ссылку на элемент в текущей позиции перечислителя.</span><span class="sxs-lookup"><span data-stu-id="1a178-120">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="1a178-121">Элемент коллекции <see cref="T:System.ReadOnlySpan`1" />, находящийся в текущей позиции перечислителя.</span><span class="sxs-lookup"><span data-stu-id="1a178-121">The element in the <see cref="T:System.ReadOnlySpan`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1a178-122">`Current` не определена при выполнении любого из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="1a178-122">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="1a178-123">Сразу после создания перечислителя перечислитель располагается перед первым элементом в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="1a178-123">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="1a178-124">чтобы переместить перечислитель к первому элементу диапазона перед считыванием значения `Current`, необходимо вызвать <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*>.</span><span class="sxs-lookup"><span data-stu-id="1a178-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="1a178-125">Последний вызов <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> вернул `false`, который указывает конец диапазона.</span><span class="sxs-lookup"><span data-stu-id="1a178-125">The last call to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="1a178-126">`Current` возвращает то же значение, пока не будет вызвано <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*>.</span><span class="sxs-lookup"><span data-stu-id="1a178-126">`Current` returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> is called.</span></span> <span data-ttu-id="1a178-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> задает `Current` следующий элемент в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="1a178-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> sets `Current` to the next item in the span.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a178-128">Перемещает перечислитель к следующему элементу <see cref="T:System.ReadOnlySpan`1" />.</span><span class="sxs-lookup"><span data-stu-id="1a178-128">Advances the enumerator to the next item of the <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
        <returns><span data-ttu-id="1a178-129"><see langword="true" />, если перечислитель успешно перемещен к следующему элементу; <see langword="false" />, если пройден конец диапазона.</span><span class="sxs-lookup"><span data-stu-id="1a178-129"><see langword="true" /> if the enumerator successfully advanced to the next item; <see langword="false" /> if the end of the span has been passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1a178-130">После создания перечислителя он располагается перед первым элементом в диапазоне, а первый вызов метода `MoveNext` перемещает перечислитель к первому элементу в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="1a178-130">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="1a178-131">Если `MoveNext` передает конец диапазона, `MoveNext` возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="1a178-131">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="1a178-132">Когда перечислитель находится в этом состоянии, последующие вызовы `MoveNext` также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="1a178-132">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
