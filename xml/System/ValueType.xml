<Type Name="ValueType" FullName="System.ValueType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef54065645b4e3acf79121680d7e82bb4b2b12f4" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75037998" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ValueType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ValueType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueType abstract" />
  <TypeSignature Language="F#" Value="type ValueType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d15ea-101">Предоставляет базовый класс для типов значений.</span><span class="sxs-lookup"><span data-stu-id="d15ea-101">Provides the base class for value types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d15ea-102"><xref:System.ValueType> переопределяет виртуальные методы из <xref:System.Object> с более подходящими реализациями для типов значений.</span><span class="sxs-lookup"><span data-stu-id="d15ea-102"><xref:System.ValueType> overrides the virtual methods from <xref:System.Object> with more appropriate implementations for value types.</span></span> <span data-ttu-id="d15ea-103">См. также <xref:System.Enum>, которые наследуют от <xref:System.ValueType>.</span><span class="sxs-lookup"><span data-stu-id="d15ea-103">See also <xref:System.Enum>, which inherits from <xref:System.ValueType>.</span></span>  
  
 <span data-ttu-id="d15ea-104">Типы данных делятся на типы значений и ссылочные типы.</span><span class="sxs-lookup"><span data-stu-id="d15ea-104">Data types are separated into value types and reference types.</span></span> <span data-ttu-id="d15ea-105">Типы значений могут выделяться стеками или выделяться встроенными в структуре.</span><span class="sxs-lookup"><span data-stu-id="d15ea-105">Value types are either stack-allocated or allocated inline in a structure.</span></span> <span data-ttu-id="d15ea-106">Ссылочные типы выделяются в куче.</span><span class="sxs-lookup"><span data-stu-id="d15ea-106">Reference types are heap-allocated.</span></span> <span data-ttu-id="d15ea-107">Типы ссылок и значений являются производными от конечного базового класса <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="d15ea-107">Both reference and value types are derived from the ultimate base class <xref:System.Object>.</span></span> <span data-ttu-id="d15ea-108">В случаях, когда необходимо, чтобы тип значения наглядел как объект, оболочка, которая делает тип значения похожим на ссылочный объект, выделяется в куче, а значение типа значения копируется в него.</span><span class="sxs-lookup"><span data-stu-id="d15ea-108">In cases where it is necessary for a value type to behave like an object, a wrapper that makes the value type look like a reference object is allocated on the heap, and the value type's value is copied into it.</span></span> <span data-ttu-id="d15ea-109">Оболочка помечена так, что система знает, что она содержит тип значения.</span><span class="sxs-lookup"><span data-stu-id="d15ea-109">The wrapper is marked so the system knows that it contains a value type.</span></span> <span data-ttu-id="d15ea-110">Этот процесс называется упаковкой-преобразованием, а обратный процесс называется распаковкой.</span><span class="sxs-lookup"><span data-stu-id="d15ea-110">This process is known as boxing, and the reverse process is known as unboxing.</span></span> <span data-ttu-id="d15ea-111">Упаковка и распаковка позволяют обрабатывать любой тип как объект.</span><span class="sxs-lookup"><span data-stu-id="d15ea-111">Boxing and unboxing allow any type to be treated as an object.</span></span>  
  
 <span data-ttu-id="d15ea-112">Хотя <xref:System.ValueType> является неявным базовым классом для типов значений, нельзя создать класс, наследующий от <xref:System.ValueType> напрямую.</span><span class="sxs-lookup"><span data-stu-id="d15ea-112">Although <xref:System.ValueType> is the implicit base class for value types, you cannot create a class that inherits from <xref:System.ValueType> directly.</span></span> <span data-ttu-id="d15ea-113">Вместо этого отдельные компиляторы предоставляют ключевое слово языка или конструкцию (например, C# `struct` в и `Structure`...`End Structure`</span><span class="sxs-lookup"><span data-stu-id="d15ea-113">Instead, individual compilers provide a language keyword or construct (such as `struct` in C# and `Structure`…`End Structure`</span></span> <span data-ttu-id="d15ea-114">в Visual Basic) для поддержки создания типов значений.</span><span class="sxs-lookup"><span data-stu-id="d15ea-114">in Visual Basic) to support the creation of value types.</span></span>  
  
 <span data-ttu-id="d15ea-115">Помимо обслуживания в качестве базового класса для типов значений в .NET Framework, структура <xref:System.ValueType> обычно не используется непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="d15ea-115">Aside from serving as the base class for value types in the .NET Framework, the <xref:System.ValueType> structure is generally not used directly in code.</span></span> <span data-ttu-id="d15ea-116">Однако его можно использовать в качестве параметра в вызовах метода, чтобы ограничить возможные аргументы для типов значений, а не для всех объектов, или разрешить методу обрабатывать несколько различных типов значений.</span><span class="sxs-lookup"><span data-stu-id="d15ea-116">However, it can be used as a parameter in method calls to restrict possible arguments to value types instead of all objects, or to permit a method to handle a number of different value types.</span></span> <span data-ttu-id="d15ea-117">В следующем примере показано, как <xref:System.ValueType> предотвращает передачу ссылочных типов в методы.</span><span class="sxs-lookup"><span data-stu-id="d15ea-117">The following example illustrates how <xref:System.ValueType> prevents reference types from being passed to methods.</span></span> <span data-ttu-id="d15ea-118">Он определяет класс с именем `Utility`, содержащий четыре метода: `IsNumeric`, который указывает, является ли его аргумент числом. `IsInteger`, который указывает, является ли его аргумент целым числом; `IsFloat`, который указывает, является ли его аргумент числом с плавающей запятой; и `Compare`, указывающие связь между двумя числовыми значениями.</span><span class="sxs-lookup"><span data-stu-id="d15ea-118">It defines a class named `Utility` that contains four methods: `IsNumeric`, which indicates whether its argument is a number; `IsInteger`, which indicates whether its argument is an integer; `IsFloat`, which indicates whether its argument is a floating-point number; and `Compare`, which indicates the relationship between two numeric values.</span></span> <span data-ttu-id="d15ea-119">В каждом случае параметры метода имеют тип <xref:System.ValueType>, а ссылочные типы не передаются методам.</span><span class="sxs-lookup"><span data-stu-id="d15ea-119">In each case, the method parameters are of type <xref:System.ValueType>, and reference types are prevented from being passed to the methods.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#1)]
 [!code-vb[System.ValueType.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#1)]  
  
 <span data-ttu-id="d15ea-120">В следующем примере показаны вызовы методов класса `Utility`.</span><span class="sxs-lookup"><span data-stu-id="d15ea-120">The following example illustrates calls to the methods of the `Utility` class.</span></span>  
  
 [!code-csharp[System.ValueType.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.valuetype.structure/cs/example1.cs#2)]
 [!code-vb[System.ValueType.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.valuetype.structure/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Enum" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d15ea-121">Инициализирует новый экземпляр класса <see cref="T:System.ValueType" />.</span><span class="sxs-lookup"><span data-stu-id="d15ea-121">Initializes a new instance of the <see cref="T:System.ValueType" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d15ea-122">Объект для сравнения с текущим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="d15ea-122">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="d15ea-123">Указывает, равен ли этот экземпляр заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="d15ea-123">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="d15ea-124">Значение <see langword="true" />, если <paramref name="obj" /> и данный экземпляр относятся к одному типу и представляют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d15ea-124"><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d15ea-125">Метод <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> переопределяет <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> и предоставляет реализацию равенства значений по умолчанию для всех типов значений в .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="d15ea-125">The <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> and provides the default implementation of value equality for all value types in the .NET Framework.</span></span>  
  
 <span data-ttu-id="d15ea-126">Реализация по умолчанию вызывает <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> для каждого поля текущего экземпляра и `obj` и возвращает `true`, если все поля равны.</span><span class="sxs-lookup"><span data-stu-id="d15ea-126">The default implementation calls <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> on each field of the current instance and `obj` and returns `true` if all fields are equal.</span></span>
  
> [!TIP]
>  <span data-ttu-id="d15ea-127">В частности, если тип значения содержит поля, которые являются ссылочными типами, следует переопределить метод <xref:System.ValueType.Equals%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="d15ea-127">Particularly if your value type contains fields that are reference types, you should override the <xref:System.ValueType.Equals%28System.Object%29> method.</span></span> <span data-ttu-id="d15ea-128">Это может повысить производительность и позволить более точно представить значение равенства для типа.</span><span class="sxs-lookup"><span data-stu-id="d15ea-128">This can improve performance and enable you to more closely represent the meaning of equality for the type.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="d15ea-129">Примечания для [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="d15ea-129">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="d15ea-130">При вызове метода <xref:System.ValueType.Equals%2A> для структуры [!INCLUDE[wrt](~/includes/wrt-md.md)] он предоставляет поведение по умолчанию для типов значений, которые не переопределяют <xref:System.ValueType.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="d15ea-130">When you call the <xref:System.ValueType.Equals%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.Equals%2A>.</span></span> <span data-ttu-id="d15ea-131">Это является частью поддержки, предоставляемой .NET Framework для [!INCLUDE[wrt](~/includes/wrt-md.md)] (см. раздел [поддержка .NET Framework для приложений Магазина Windows и среда выполнения Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="d15ea-131">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)] <span data-ttu-id="d15ea-132">структуры не могут переопределять <xref:System.ValueType.Equals%2A>, даже если они написаны с помощью C# или Visual Basic, так как они не могут иметь методы.</span><span class="sxs-lookup"><span data-stu-id="d15ea-132">structures can't override <xref:System.ValueType.Equals%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="d15ea-133">(Кроме того, структуры в самом [!INCLUDE[wrt](~/includes/wrt-md.md)] не наследуют <xref:System.ValueType>.) Однако они имеют методы <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>и <xref:System.ValueType.GetHashCode%2A>, когда они используются в коде C# или Visual Basic, а .NET Framework предоставляет поведение по умолчанию для этих методов.</span><span class="sxs-lookup"><span data-stu-id="d15ea-133">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d15ea-134">В следующем примере показано, как метод <xref:System.ValueType.Equals%2A> может быть переопределен производным типом значения.</span><span class="sxs-lookup"><span data-stu-id="d15ea-134">The following example demonstrates how the <xref:System.ValueType.Equals%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d15ea-135">Возвращает хэш-код данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d15ea-135">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="d15ea-136">32-разрядное целое число со знаком, являющееся хэш-кодом для данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d15ea-136">A 32-bit signed integer that is the hash code for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d15ea-137">Метод <xref:System.ValueType.GetHashCode%2A> применяется к типам, производным от <xref:System.ValueType>.</span><span class="sxs-lookup"><span data-stu-id="d15ea-137">The <xref:System.ValueType.GetHashCode%2A> method applies to types derived from <xref:System.ValueType>.</span></span> <span data-ttu-id="d15ea-138">Для вычисления возвращаемого значения используется одно или несколько полей производного типа.</span><span class="sxs-lookup"><span data-stu-id="d15ea-138">One or more fields of the derived type is used to calculate the return value.</span></span> <span data-ttu-id="d15ea-139">Если вызвать метод `GetHashCode` производного типа, то возвращаемое значение скорее всего не будет подходящим для использования в качестве ключа в хэш-таблице.</span><span class="sxs-lookup"><span data-stu-id="d15ea-139">If you call the derived type's `GetHashCode` method, the return value is not likely to be suitable for use as a key in a hash table.</span></span> <span data-ttu-id="d15ea-140">Кроме того, если значение одного или нескольких из этих полей изменяется, возвращаемое значение может стать непригодным для использования в качестве ключа в хэш-таблице.</span><span class="sxs-lookup"><span data-stu-id="d15ea-140">Additionally, if the value of one or more of those fields changes, the return value might become unsuitable for use as a key in a hash table.</span></span> <span data-ttu-id="d15ea-141">В любом случае рекомендуется написать собственную реализацию метода <xref:System.ValueType.GetHashCode%2A>, который более точно представляет концепцию хэш-кода для типа.</span><span class="sxs-lookup"><span data-stu-id="d15ea-141">In either case, consider writing your own implementation of the <xref:System.ValueType.GetHashCode%2A> method that more closely represents the concept of a hash code for the type.</span></span>  
  
 <span data-ttu-id="d15ea-142">Дополнительные сведения см. в разделах <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> и <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d15ea-142">For more information, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>, and <xref:System.Collections.Hashtable?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-includewrtincludeswrt-mdmd"></a><span data-ttu-id="d15ea-143">Примечания для [!INCLUDE[wrt](~/includes/wrt-md.md)]</span><span class="sxs-lookup"><span data-stu-id="d15ea-143">Notes for the [!INCLUDE[wrt](~/includes/wrt-md.md)]</span></span>  
 <span data-ttu-id="d15ea-144">При вызове метода <xref:System.ValueType.GetHashCode%2A> для структуры [!INCLUDE[wrt](~/includes/wrt-md.md)] он предоставляет поведение по умолчанию для типов значений, которые не переопределяют <xref:System.ValueType.GetHashCode%2A>.</span><span class="sxs-lookup"><span data-stu-id="d15ea-144">When you call the <xref:System.ValueType.GetHashCode%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.GetHashCode%2A>.</span></span> <span data-ttu-id="d15ea-145">Это является частью поддержки, предоставляемой .NET Framework для [!INCLUDE[wrt](~/includes/wrt-md.md)] (см. раздел [поддержка .NET Framework для приложений Магазина Windows и среда выполнения Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="d15ea-145">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)] <span data-ttu-id="d15ea-146">структуры не могут переопределять <xref:System.ValueType.GetHashCode%2A>, даже если они написаны с помощью C# или Visual Basic, так как они не могут иметь методы.</span><span class="sxs-lookup"><span data-stu-id="d15ea-146">structures can't override <xref:System.ValueType.GetHashCode%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="d15ea-147">(Кроме того, структуры в самом [!INCLUDE[wrt](~/includes/wrt-md.md)] не наследуют <xref:System.ValueType>.) Однако они имеют методы <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>и <xref:System.ValueType.GetHashCode%2A>, когда они используются в коде C# или Visual Basic, а .NET Framework предоставляет поведение по умолчанию для этих методов.</span><span class="sxs-lookup"><span data-stu-id="d15ea-147">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d15ea-148">В следующем примере показано, как метод <xref:System.ValueType.GetHashCode%2A> может быть переопределен производным типом значения.</span><span class="sxs-lookup"><span data-stu-id="d15ea-148">The following example demonstrates how the <xref:System.ValueType.GetHashCode%2A> method can be overridden by a derived value type.</span></span>  
  
 [!code-cpp[ValueType.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/ValueType.Equals Example/CPP/source.cpp#1)]
 [!code-csharp[ValueType.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/ValueType.Equals Example/CS/source.cs#1)]
 [!code-vb[ValueType.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ValueType.Equals Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="valueType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d15ea-149">Возвращает полное имя типа этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d15ea-149">Returns the fully qualified type name of this instance.</span></span></summary>
        <returns><span data-ttu-id="d15ea-150">Полное имя типа.</span><span class="sxs-lookup"><span data-stu-id="d15ea-150">The fully qualified type name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d15ea-151">Метод <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> переопределяет метод <xref:System.Object.ToString%2A?displayProperty=nameWithType> и предоставляет реализацию метода `ToString` по умолчанию для типов значений.</span><span class="sxs-lookup"><span data-stu-id="d15ea-151">The <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method and provides the default implementation of the `ToString` method for value types.</span></span> <span data-ttu-id="d15ea-152">(Типы значений — это типы, определяемые ключевым словом C#`struct` в, а также конструкцией `Structure`...`End Structure` в Visual Basic.) Функционально, однако, реализация аналогична реализации <xref:System.Object.ToString%2A?displayProperty=nameWithType>: метод возвращает полное имя типа.</span><span class="sxs-lookup"><span data-stu-id="d15ea-152">(Value types are types defined by the `struct` keyword in C#, and by the `Structure`...`End Structure` construct in Visual Basic.) Functionally, however, the implementation is that same as that of <xref:System.Object.ToString%2A?displayProperty=nameWithType>: the method returns the fully qualified type name.</span></span>  
  
 <span data-ttu-id="d15ea-153">Типы значений, определяемые ключевым словом `struct` C# в и `Structure`...`End Structure` конструкции в Visual Basic, как правило, переопределяют метод <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>, чтобы обеспечить более осмысленное строковое представление типа значения.</span><span class="sxs-lookup"><span data-stu-id="d15ea-153">Value types defined by the `struct` keyword in C# and the `Structure`...`End Structure` construct in Visual Basic typically override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method to provide a more meaningful string representation of the value type.</span></span> <span data-ttu-id="d15ea-154">В следующем примере демонстрируется это различие.</span><span class="sxs-lookup"><span data-stu-id="d15ea-154">The following example illustrates the difference.</span></span> <span data-ttu-id="d15ea-155">Он определяет два типа значений: `EmployeeA` и `EmployeeB`, создает экземпляр каждого и вызывает его метод `ToString`.</span><span class="sxs-lookup"><span data-stu-id="d15ea-155">It defines two value types, `EmployeeA` and `EmployeeB`, creates an instance of each, and calls its `ToString` method.</span></span> <span data-ttu-id="d15ea-156">Поскольку структура `EmployeeA` не переопределяет метод <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>, он отображает только полное имя типа.</span><span class="sxs-lookup"><span data-stu-id="d15ea-156">Because the `EmployeeA` structure does not override the <xref:System.ValueType.ToString%2A?displayProperty=nameWithType> method, it displays only the fully qualified type name.</span></span> <span data-ttu-id="d15ea-157">С другой стороны, метод `EmployeeB.ToString` предоставляет осмысленные сведения об объекте.</span><span class="sxs-lookup"><span data-stu-id="d15ea-157">The `EmployeeB.ToString` method, on the other hand, provides meaningful information about the object.</span></span>  
  
 [!code-csharp[System.ValueType.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ValueType.ToString/cs/ToString2.cs#1)]
 [!code-vb[System.ValueType.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ValueType.ToString/vb/ToString2.vb#1)]  
  
 <span data-ttu-id="d15ea-158">Обратите внимание, что, хотя типы перечисления также являются типами значений, они являются производными от класса <xref:System.Enum>, который переопределяет <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d15ea-158">Note that, although enumeration types are also value types, they derive from the <xref:System.Enum> class, which overrides  <xref:System.ValueType.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-for-the-windows-runtime"></a><span data-ttu-id="d15ea-159">Примечания для среда выполнения Windows</span><span class="sxs-lookup"><span data-stu-id="d15ea-159">Notes for the Windows Runtime</span></span>  
 <span data-ttu-id="d15ea-160">При вызове метода <xref:System.ValueType.ToString%2A> для структуры [!INCLUDE[wrt](~/includes/wrt-md.md)] он предоставляет поведение по умолчанию для типов значений, которые не переопределяют <xref:System.ValueType.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="d15ea-160">When you call the <xref:System.ValueType.ToString%2A> method on a [!INCLUDE[wrt](~/includes/wrt-md.md)] structure, it provides the default behavior for value types that don't override <xref:System.ValueType.ToString%2A>.</span></span> <span data-ttu-id="d15ea-161">Это является частью поддержки, предоставляемой .NET Framework для [!INCLUDE[wrt](~/includes/wrt-md.md)] (см. раздел [поддержка .NET Framework для приложений Магазина Windows и среда выполнения Windows](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span><span class="sxs-lookup"><span data-stu-id="d15ea-161">This is part of the support that the .NET Framework provides for the [!INCLUDE[wrt](~/includes/wrt-md.md)] (see [.NET Framework Support for Windows Store Apps and Windows Runtime](~/docs/standard/cross-platform/support-for-windows-store-apps-and-windows-runtime.md)).</span></span> [!INCLUDE[wrt](~/includes/wrt-md.md)] <span data-ttu-id="d15ea-162">структуры не могут переопределять <xref:System.ValueType.ToString%2A>, даже если они написаны с помощью C# или Visual Basic, так как они не могут иметь методы.</span><span class="sxs-lookup"><span data-stu-id="d15ea-162">structures can't override <xref:System.ValueType.ToString%2A>, even if they're written with C# or Visual Basic, because they can't have methods.</span></span> <span data-ttu-id="d15ea-163">(Кроме того, структуры в самом [!INCLUDE[wrt](~/includes/wrt-md.md)] не наследуют <xref:System.ValueType>.) Однако они имеют методы <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>и <xref:System.ValueType.GetHashCode%2A>, когда они используются в коде C# или Visual Basic, а .NET Framework предоставляет поведение по умолчанию для этих методов.</span><span class="sxs-lookup"><span data-stu-id="d15ea-163">(In addition, structures in the [!INCLUDE[wrt](~/includes/wrt-md.md)] itself don't inherit <xref:System.ValueType>.) However, they appear to have <xref:System.ValueType.ToString%2A>, <xref:System.ValueType.Equals%2A>, and <xref:System.ValueType.GetHashCode%2A> methods when you use them in your C# or Visual Basic code, and the .NET Framework provides the default behavior for these methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
