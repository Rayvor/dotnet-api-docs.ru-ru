<Type Name="InvalidOperationException" FullName="System.InvalidOperationException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="810fe50283e801c3e7dde603475dc30ccd6ad1c8" /><Meta Name="ms.sourcegitcommit" Value="7845f124909a0999a19cc65f40feab5e75cd9b8d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65064621" /></Metadata><TypeSignature Language="C#" Value="public class InvalidOperationException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InvalidOperationException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.InvalidOperationException" />
  <TypeSignature Language="VB.NET" Value="Public Class InvalidOperationException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvalidOperationException : SystemException" />
  <TypeSignature Language="F#" Value="type InvalidOperationException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0c0d5-101">Исключение, которое выдается при вызове метода, недопустимого для текущего состояния объекта.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-101">The exception that is thrown when a method call is invalid for the object's current state.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0d5-102"><xref:System.InvalidOperationException>используется в случаях, когда сбой вызова метода вызван по причинам, отличным от недопустимых аргументов.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-102"><xref:System.InvalidOperationException> is used in cases when the failure to invoke a method is caused by reasons other than invalid arguments.</span></span> <span data-ttu-id="0c0d5-103">Как правило, он вызывается, когда состояние объекта не поддерживает вызов метода.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-103">Typically, it is thrown when the state of an object cannot support the method call.</span></span> <span data-ttu-id="0c0d5-104">Например, <xref:System.InvalidOperationException> исключение вызывается такими методами, как:</span><span class="sxs-lookup"><span data-stu-id="0c0d5-104">For example, an <xref:System.InvalidOperationException> exception is thrown by methods such as:</span></span>  
  
-   <span data-ttu-id="0c0d5-105"><xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType>значение, если объекты коллекции изменяются после создания перечислителя.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-105"><xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> if objects of a collection are modified after the enumerator is created.</span></span> <span data-ttu-id="0c0d5-106">Дополнительные сведения см. [в разделе изменение коллекции во время итерации](#Iterating).</span><span class="sxs-lookup"><span data-stu-id="0c0d5-106">For more information, see [Changing a collection while iterating it](#Iterating).</span></span>  
  
-   <span data-ttu-id="0c0d5-107"><xref:System.Resources.ResourceSet.GetString%2A?displayProperty=nameWithType>значение, если набор ресурсов закрывается до вызова метода.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-107"><xref:System.Resources.ResourceSet.GetString%2A?displayProperty=nameWithType> if the resource set is closed before the method call is made.</span></span>  
  
-   <span data-ttu-id="0c0d5-108"><xref:System.Xml.Linq.XContainer.Add%2A?displayProperty=nameWithType>, если добавляемый объект или объекты приведут к неправильному структурированному XML-документу.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-108"><xref:System.Xml.Linq.XContainer.Add%2A?displayProperty=nameWithType>, if the object or objects to be added would result in an incorrectly structured XML document.</span></span>  
  
-   <span data-ttu-id="0c0d5-109">Метод, который пытается управлять пользовательским интерфейсом из потока, который не является основным потоком или потоком пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-109">A method that attempts to manipulate the UI from a thread that is not the main or UI thread.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0c0d5-110">Поскольку исключение может быть создано в самых разных обстоятельствах, важно прочитать сообщение об исключении, возвращаемое <xref:System.Exception.Message%2A> свойством. <xref:System.InvalidOperationException></span><span class="sxs-lookup"><span data-stu-id="0c0d5-110">Because the <xref:System.InvalidOperationException> exception can be thrown in a wide variety of circumstances, it is important to read the exception message returned by the <xref:System.Exception.Message%2A> property.</span></span>  
  
 <span data-ttu-id="0c0d5-111">Содержание</span><span class="sxs-lookup"><span data-stu-id="0c0d5-111">In this section:</span></span>  
  
 <span data-ttu-id="0c0d5-112">[Некоторые распространенные причины исключений InvalidOperationException](#Causes) </span><span class="sxs-lookup"><span data-stu-id="0c0d5-112">[Some common causes of InvalidOperationException exceptions](#Causes) </span></span>  
 [<span data-ttu-id="0c0d5-113">Обновление потока пользовательского интерфейса из потока, не относящегося к пользовательскому интерфейсу</span><span class="sxs-lookup"><span data-stu-id="0c0d5-113">Updating a UI thread from a non-UI thread</span></span>](#UI)  
 [<span data-ttu-id="0c0d5-114">Изменение коллекции во время ее итерации</span><span class="sxs-lookup"><span data-stu-id="0c0d5-114">Changing a collection while iterating it</span></span>](#Iterating)  
 [<span data-ttu-id="0c0d5-115">Сортировка массива или коллекции, объекты которой невозможно сравнить</span><span class="sxs-lookup"><span data-stu-id="0c0d5-115">Sorting an array or collection whose objects cannot be compared</span></span>](#Sorting)  
 <span data-ttu-id="0c0d5-116">[Приведение значения&lt;NULL&gt; T, равного null, к базовому типу](#Nullable) </span><span class="sxs-lookup"><span data-stu-id="0c0d5-116">[Casting a Nullable&lt;T&gt; that is null to its underlying type](#Nullable) </span></span>  
 [<span data-ttu-id="0c0d5-117">Вызов метода System. LINQ. Enumerable для пустой коллекции</span><span class="sxs-lookup"><span data-stu-id="0c0d5-117">Calling a System.Linq.Enumerable method on an empty collection</span></span>](#Empty)  
 [<span data-ttu-id="0c0d5-118">Вызов Enumerable. Single или Enumerable. SingleOrDefault для последовательности без одного элемента</span><span class="sxs-lookup"><span data-stu-id="0c0d5-118">Calling Enumerable.Single or Enumerable.SingleOrDefault on a sequence without one element</span></span>](#Single)  
 [<span data-ttu-id="0c0d5-119">Динамическое обращение к полю домена между приложениями</span><span class="sxs-lookup"><span data-stu-id="0c0d5-119">Dynamic cross-application domain field access</span></span>](#Emit)  
[<span data-ttu-id="0c0d5-120">Создание исключения InvalidOperationException</span><span class="sxs-lookup"><span data-stu-id="0c0d5-120">Throwing an InvalidOperationException exception</span></span>](#Throwing)  
[<span data-ttu-id="0c0d5-121">Прочие сведения</span><span class="sxs-lookup"><span data-stu-id="0c0d5-121">Miscellaneous information</span></span>](#Misc)  
  
<a name="Causes"></a>   
## <a name="some-common-causes-of-invalidoperationexception-exceptions"></a><span data-ttu-id="0c0d5-122">Некоторые распространенные причины исключений InvalidOperationException</span><span class="sxs-lookup"><span data-stu-id="0c0d5-122">Some common causes of InvalidOperationException exceptions</span></span>  
 <span data-ttu-id="0c0d5-123">В следующих разделах показано, как часто возникают ситуации, в <xref:System.InvalidOperationException> которых исключение возникает в приложении.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-123">The following sections show how some common cases in which in <xref:System.InvalidOperationException> exception is thrown in an app.</span></span> <span data-ttu-id="0c0d5-124">Способ решения проблемы зависит от конкретной ситуации.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-124">How you handle the issue depends on the specific situation.</span></span> <span data-ttu-id="0c0d5-125">Однако чаще всего исключение возникает из ошибки разработчика, и это <xref:System.InvalidOperationException> исключение можно ожидать и избежать.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-125">Most commonly, however, the exception results from developer error, and the <xref:System.InvalidOperationException> exception can be anticipated and avoided.</span></span>  
  
<a name="UI"></a>   
### <a name="updating-a-ui-thread-from-a-non-ui-thread"></a><span data-ttu-id="0c0d5-126">Обновление потока пользовательского интерфейса из потока, не относящегося к пользовательскому интерфейсу</span><span class="sxs-lookup"><span data-stu-id="0c0d5-126">Updating a UI thread from a non-UI thread</span></span>  
 <span data-ttu-id="0c0d5-127">Часто рабочие потоки используются для выполнения некоторой фоновой работы, включающей сбор данных, отображаемых в пользовательском интерфейсе приложения.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-127">Often, worker threads are used to perform some background work that involves gathering data to be displayed in an application's user interface.</span></span> <span data-ttu-id="0c0d5-128">Несмотря.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-128">However.</span></span> <span data-ttu-id="0c0d5-129">Большинство платформ приложений графического пользовательского интерфейса (графический интерфейс пользователя) для .NET Framework, таких как Windows Forms и Windows Presentation Foundation (WPF), позволяют получать доступ к объектам графического пользовательского интерфейса только из потока, который создает пользовательский интерфейс и управляет им (основным потоком или потоком пользовательского интерфейса).</span><span class="sxs-lookup"><span data-stu-id="0c0d5-129">most GUI (graphical user interface) application frameworks for the .NET Framework, such as Windows Forms and Windows Presentation Foundation (WPF),  let you access GUI objects only from the thread that creates and manages the UI (the Main or UI thread).</span></span> <span data-ttu-id="0c0d5-130"><xref:System.InvalidOperationException> Исключение возникает при попытке доступа к элементу пользовательского интерфейса из потока, отличного от потока пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-130">An <xref:System.InvalidOperationException> is thrown when you try to access a UI element from a thread other than the UI thread.</span></span>  <span data-ttu-id="0c0d5-131">Текст сообщения об исключении показан в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-131">The text of the exception message is shown in the following table.</span></span>  
  
|<span data-ttu-id="0c0d5-132">Тип приложения</span><span class="sxs-lookup"><span data-stu-id="0c0d5-132">Application Type</span></span>|<span data-ttu-id="0c0d5-133">Сообщение</span><span class="sxs-lookup"><span data-stu-id="0c0d5-133">Message</span></span>|  
|----------------------|-------------|  
|<span data-ttu-id="0c0d5-134">Приложение WPF</span><span class="sxs-lookup"><span data-stu-id="0c0d5-134">WPF app</span></span>|<span data-ttu-id="0c0d5-135">**Вызывающий поток не может получить доступ к этому объекту, так как он принадлежит другому потоку.**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-135">**The calling thread cannot access this object because a different thread owns it.**</span></span>|  
|<span data-ttu-id="0c0d5-136">Приложение UWP</span><span class="sxs-lookup"><span data-stu-id="0c0d5-136">UWP app</span></span>|<span data-ttu-id="0c0d5-137">**Приложение называется интерфейсом, который был маршалирован для другого потока.**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-137">**The application called an interface that was marshaled for a different thread.**</span></span>|  
|<span data-ttu-id="0c0d5-138">Приложение Windows Forms</span><span class="sxs-lookup"><span data-stu-id="0c0d5-138">Windows Forms app</span></span>|<span data-ttu-id="0c0d5-139">**Недопустимая операция между потоками: Доступ к элементу "TextBox1" осуществляется из потока, отличного от потока, в котором он был создан.**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-139">**Cross-thread operation not valid: Control 'TextBox1' accessed from a thread other than the thread it was created on.**</span></span>|  
  
 <span data-ttu-id="0c0d5-140">Платформы пользовательского интерфейса для .NET Framework реализуют шаблон *Dispatcher* , который включает метод для проверки того, выполняется ли вызов элемента пользовательского интерфейса в ПОТОКЕ пользовательского интерфейса, а также другие методы для планирования вызова в ПОТОКЕ пользовательского интерфейса:</span><span class="sxs-lookup"><span data-stu-id="0c0d5-140">UI frameworks for the .NET Framework implement a *dispatcher* pattern that includes a method to check whether a call to a member of a UI element is being executed on the UI thread, and other methods to schedule the call on the UI thread:</span></span>  
  
-   <span data-ttu-id="0c0d5-141">В приложениях WPF вызовите <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A?displayProperty=nameWithType> метод, чтобы определить, выполняется ли метод в потоке без пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-141">In WPF apps, call the <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A?displayProperty=nameWithType> method to determine if a method is running on a non-UI thread.</span></span> <span data-ttu-id="0c0d5-142">Он возвращает `true` значение, если метод работает в потоке пользовательского интерфейса `false` и в противном случае.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-142">It returns `true` if the method is running on the UI thread and `false` otherwise.</span></span> <span data-ttu-id="0c0d5-143">Вызовите одну из перегрузок <xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=nameWithType> метода, чтобы запланировать вызов в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-143">Call one of the overloads of the <xref:System.Windows.Threading.Dispatcher.Invoke%2A?displayProperty=nameWithType> method to schedule the call on the UI thread.</span></span>  
  
-   <span data-ttu-id="0c0d5-144">В приложениях UWP вызовите метод [CoreDispatcher. хассреадакцесс](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.hasthreadaccess.aspx) , чтобы определить, выполняется ли метод в потоке без пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-144">In UWP apps, call the [CoreDispatcher.HasThreadAccess](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.hasthreadaccess.aspx) method to determine if a method is running on a non-UI thread.</span></span> <span data-ttu-id="0c0d5-145">Вызовите метод [CoreDispatcher. RunAsync](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.runasync.aspx) для выполнения делегата, который обновляет поток пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-145">Call the  [CoreDispatcher.RunAsync](https://msdn.microsoft.com/library/windows/apps/windows.ui.core.coredispatcher.runasync.aspx) method to execute a delegate that updates the UI thread.</span></span> <span data-ttu-id="0c0d5-146">Используйте команду</span><span class="sxs-lookup"><span data-stu-id="0c0d5-146">Use the</span></span>  
  
-   <span data-ttu-id="0c0d5-147">В Windows Forms приложениях используйте <xref:System.Windows.Forms.Control.InvokeRequired%2A?displayProperty=nameWithType> свойство, чтобы определить, выполняется ли метод в потоке без пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-147">In Windows Forms apps, use the <xref:System.Windows.Forms.Control.InvokeRequired%2A?displayProperty=nameWithType> property to determine if a method is running on a non-UI thread.</span></span> <span data-ttu-id="0c0d5-148">Вызовите одну из перегрузок <xref:System.Windows.Forms.Control.Invoke%2A?displayProperty=nameWithType> метода, чтобы выполнить делегат, который обновляет поток пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-148">Call one of the overloads of the <xref:System.Windows.Forms.Control.Invoke%2A?displayProperty=nameWithType> method to execute a delegate that updates the UI thread.</span></span>  
  
 <span data-ttu-id="0c0d5-149">В следующих примерах показано <xref:System.InvalidOperationException> исключение, возникающее при попытке обновить элемент пользовательского интерфейса из потока, отличного от создавшего его потока.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-149">The following examples illustrate the <xref:System.InvalidOperationException> exception that is thrown when you attempt to update a UI element from a thread other than the thread that created it.</span></span>  <span data-ttu-id="0c0d5-150">Для каждого примера необходимо создать два элемента управления:</span><span class="sxs-lookup"><span data-stu-id="0c0d5-150">Each example requires that you create two controls:</span></span>  
  
-   <span data-ttu-id="0c0d5-151">Элемент управления "текстовое поле `textBox1`" с именем.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-151">A text box control named `textBox1`.</span></span>  <span data-ttu-id="0c0d5-152">В Windows Forms приложении следует задать для <xref:System.Windows.Forms.TextBox.Multiline%2A> `true`его свойства значение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-152">In a Windows Forms app, you should set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
-   <span data-ttu-id="0c0d5-153">Элемент управления Button с `threadExampleBtn`именем.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-153">A button  control named `threadExampleBtn`.</span></span> <span data-ttu-id="0c0d5-154">В примере показан обработчик `ThreadsExampleBtn_Click`для `Click` события кнопки.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-154">The example provides a handler, `ThreadsExampleBtn_Click`, for the button's `Click` event.</span></span>  
  
 <span data-ttu-id="0c0d5-155">В каждом случае `threadExampleBtn_Click` обработчик событий `DoSomeWork` вызывает метод дважды.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-155">In each case, the `threadExampleBtn_Click` event handler calls the `DoSomeWork` method twice.</span></span> <span data-ttu-id="0c0d5-156">Первый вызов выполняется синхронно и завершился.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-156">The first call runs synchronously and succeeds.</span></span> <span data-ttu-id="0c0d5-157">Но второй вызов, поскольку он выполняется асинхронно в потоке пула потоков, пытается обновить пользовательский интерфейс из потока, не относящегося к пользовательскому интерфейсу.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-157">But the second call, because it runs asynchronously on a thread pool thread, attempts to update the UI from a non-UI thread.</span></span> <span data-ttu-id="0c0d5-158">Это приводит к <xref:System.InvalidOperationException> исключению.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-158">This results in a <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="0c0d5-159">Приложения WPF и UWP</span><span class="sxs-lookup"><span data-stu-id="0c0d5-159">WPF and UWP apps</span></span>  
 [!code-csharp[System.InvalidOperationException.Threading.WPF1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Invalidoperationexception.threading.wpf1/cs/MainWindow.xaml.cs#1)]
 [!code-vb[System.InvalidOperationException.Threading.WPF1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Invalidoperationexception.threading.wpf1/vb/MainWindow.xaml.vb#1)]  
  
 <span data-ttu-id="0c0d5-160">Следующая версия `DoSomeWork` метода устраняет исключение в приложении WPF.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-160">The following version of the `DoSomeWork` method eliminates the exception in a WPF app.</span></span>  
  
 [!code-csharp[System.InvalidOperationException.Threading.WPF2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Invalidoperationexception.threading.wpf2/cs/MainWindowDispatcher.xaml.cs#3)]
 [!code-vb[System.InvalidOperationException.Threading.WPF2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Invalidoperationexception.threading.wpf2/vb/MainWindowDispatcher.xaml.vb#3)]  
  
 <span data-ttu-id="0c0d5-161">Следующая версия `DoSomeWork` метода устраняет исключение в приложении UWP.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-161">The following version of the `DoSomeWork` method eliminates the exception in a UWP app.</span></span>  
  
 [!code-csharp[System.InvalidOperationException.Threading.UWP#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception.threading.uwp/cs/MainPage.xaml.cs#4)]
 [!code-vb[System.InvalidOperationException.Threading.UWP#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception.threading.uwp/vb/MainPage.xaml.vb#4)]  
  
 <span data-ttu-id="0c0d5-162">Приложения Windows Forms</span><span class="sxs-lookup"><span data-stu-id="0c0d5-162">Windows Forms apps</span></span>  
 [!code-csharp[System.InvalidOperationException.Threading.WF#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Invalidoperationexception.threading.wf/cs/Form1.cs#2)]
 [!code-vb[System.InvalidOperationException.Threading.WF#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Invalidoperationexception.threading.wf/vb/Form1.vb#2)]  
  
 <span data-ttu-id="0c0d5-163">Следующая версия `DoSomeWork` метода устраняет исключение в Windows Forms приложении.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-163">The following version of the `DoSomeWork` method eliminates the exception in a Windows Forms app.</span></span>  
  
 [!code-csharp[System.InvalidOperationException.Threading.WF2#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Invalidoperationexception.threading.wf2/cs/Form1.cs#5)]
 [!code-vb[System.InvalidOperationException.Threading.WF2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Invalidoperationexception.threading.wf2/vb/Form1.vb#5)]  
  
<a name="Iterating"></a>   
### <a name="changing-a-collection-while-iterating-it"></a><span data-ttu-id="0c0d5-164">Изменение коллекции во время ее итерации</span><span class="sxs-lookup"><span data-stu-id="0c0d5-164">Changing a collection while iterating it</span></span>  
 <span data-ttu-id="0c0d5-165">Инструкция в C# операторе `For Each` или в Visual Basic используется для итерации элементов коллекции и чтения или изменения отдельных элементов. `foreach`</span><span class="sxs-lookup"><span data-stu-id="0c0d5-165">The `foreach` statement in C# or `For Each` statement in Visual Basic is used to iterate the members of a collection and to read or modify its individual elements.</span></span> <span data-ttu-id="0c0d5-166">Однако его нельзя использовать для добавления или удаления элементов из коллекции.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-166">However, it can't be used to add or remove items from the collection.</span></span> <span data-ttu-id="0c0d5-167">При этом создается <xref:System.InvalidOperationException> исключение с сообщением, похожее на "**коллекция была изменена; Операция перечисления не может быть выполнена ".**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-167">Doing this throws an  <xref:System.InvalidOperationException> exception with a message that is similar to, "**Collection was modified; enumeration operation may not execute.**"</span></span>  
  
 <span data-ttu-id="0c0d5-168">В следующем примере выполняется итерация коллекции целых чисел, которая пытается добавить квадрат каждого целого числа в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-168">The following example iterates a collection of integers attempts to add the square of each integer to the collection.</span></span> <span data-ttu-id="0c0d5-169">В примере создается <xref:System.InvalidOperationException> исключение с первым вызовом <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> метода.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-169">The example throws an <xref:System.InvalidOperationException> with the first call to the <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Iterating1.cs#1)]
 [!code-vb[System.InvalidOperationException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Iterating1.vb#1)]  
  
 <span data-ttu-id="0c0d5-170">Исключение можно устранить одним из двух способов, в зависимости от логики приложения:</span><span class="sxs-lookup"><span data-stu-id="0c0d5-170">You can eliminate the exception in one of two ways, depending on your application logic:</span></span>  
  
-   <span data-ttu-id="0c0d5-171">Если во время итерации в коллекцию необходимо добавить элементы, можно выполнить итерацию по индексу, используя `for` инструкцию, `foreach` а `For Each`не или.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-171">If elements must be added to the collection while iterating it, you can iterate it by index using the `for` statement instead of `foreach` or `For Each`.</span></span> <span data-ttu-id="0c0d5-172">В следующем примере оператор for используется для добавления квадрата чисел из коллекции в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-172">The following example uses the for statement to add the square of numbers in the collection to the collection.</span></span>  
  
     [!code-csharp[System.InvalidOperationException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Iterating2.cs#2)]
     [!code-vb[System.InvalidOperationException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Iterating2.vb#2)]  
  
     <span data-ttu-id="0c0d5-173">Обратите внимание, что перед перебором коллекции необходимо установить число итераций с помощью счетчика внутри цикла, который выполнит цикл соответствующим образом, выполнив итерацию назад, от `Count` -1 до 0 или, как в примере, назначив номер элементов массива в переменную и его использование для установления верхней границы цикла.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-173">Note that you must establish the number of iterations before iterating the collection either by using a counter inside the loop that will exit the loop appropriately, by iterating backward, from `Count` - 1 to 0, or, as the example does, by assigning the number of elements in the array to a variable and using it to establish the upper bound of the loop.</span></span> <span data-ttu-id="0c0d5-174">В противном случае, если элемент добавляется в коллекцию при каждой итерации, будет получен бесконечный цикл.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-174">Otherwise, if an element is added to the collection on every iteration, an endless loop results.</span></span>  
  
-   <span data-ttu-id="0c0d5-175">Если нет необходимости добавлять элементы в коллекцию во время итерации, можно сохранить элементы, добавляемые во временную коллекцию, добавленную при итерации коллекции.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-175">If it is not necessary to add elements to the collection while iterating it, you can store the elements to be added in a temporary collection that you add when iterating the collection has finished.</span></span>  <span data-ttu-id="0c0d5-176">В следующем примере этот подход используется для добавления квадрата чисел из коллекции в временную коллекцию, а затем для объединения коллекций в один объект массива.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-176">The following example uses this approach to add the square of numbers in a collection to a temporary collection, and then to combine the collections into a single array object.</span></span>  
  
     [!code-csharp[System.InvalidOperationException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Iterating3.cs#3)]
     [!code-vb[System.InvalidOperationException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Iterating3.vb#3)]  
  
<a name="Sorting"></a>   
### <a name="sorting-an-array-or-collection-whose-objects-cannot-be-compared"></a><span data-ttu-id="0c0d5-177">Сортировка массива или коллекции, объекты которой невозможно сравнить</span><span class="sxs-lookup"><span data-stu-id="0c0d5-177">Sorting an array or collection whose objects cannot be compared</span></span>  
 <span data-ttu-id="0c0d5-178">Для методов сортировки общего назначения, таких <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> как метод <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> или метод, обычно требуется, чтобы хотя бы один из объектов был <xref:System.IComparable> отсортирован, реализуя интерфейс или.<xref:System.IComparable%601></span><span class="sxs-lookup"><span data-stu-id="0c0d5-178">General-purpose sorting methods, such as the <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> method or the <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> method, usually require that at least one of the objects to be sorted implement the <xref:System.IComparable%601> or the <xref:System.IComparable> interface.</span></span> <span data-ttu-id="0c0d5-179">В противном случае коллекция или массив не могут быть отсортированы, а метод создает <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-179">If not, the collection or array cannot be sorted, and the method throws an  <xref:System.InvalidOperationException> exception.</span></span> <span data-ttu-id="0c0d5-180">В следующем примере определяется `Person` класс, хранится два `Person` объекта в универсальном <xref:System.Collections.Generic.List%601> объекте и выполняется попытка их сортировки.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-180">The following example defines a `Person` class, stores two `Person` objects in a generic <xref:System.Collections.Generic.List%601> object, and attempts to sort them.</span></span> <span data-ttu-id="0c0d5-181">Как видно из выходных данных в примере, вызов <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> метода <xref:System.InvalidOperationException>создает исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-181">As the output from the example shows, the call to the <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/List_Sort1.cs#12)]
 [!code-vb[System.InvalidOperationException#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/List_Sort1.vb#12)]  
  
 <span data-ttu-id="0c0d5-182">Исключение можно устранить одним из трех способов:</span><span class="sxs-lookup"><span data-stu-id="0c0d5-182">You can eliminate the exception in any of three ways:</span></span>  
  
-   <span data-ttu-id="0c0d5-183">Если тип, который вы пытаетесь отсортировать, можно использовать (то есть если вы управляете его исходным кодом), его можно изменить, чтобы реализовать <xref:System.IComparable%601> <xref:System.IComparable> интерфейс или.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-183">If you can own the type that you are trying to sort (that is, if you control its source code), you can modify it to implement the <xref:System.IComparable%601> or the <xref:System.IComparable> interface.</span></span> <span data-ttu-id="0c0d5-184">Для этого необходимо реализовать <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> <xref:System.IComparable.CompareTo%2A> метод или.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-184">This requires that you implement either the <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> or the <xref:System.IComparable.CompareTo%2A> method.</span></span> <span data-ttu-id="0c0d5-185">Добавление реализации интерфейса в существующий тип не является критическим изменением.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-185">Adding an interface implementation to an existing type is not a breaking change.</span></span>  
  
     <span data-ttu-id="0c0d5-186">В следующем примере этот подход используется для предоставления <xref:System.IComparable%601> реализации `Person` класса.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-186">The following example uses this approach to provide an <xref:System.IComparable%601> implementation  for the `Person` class.</span></span> <span data-ttu-id="0c0d5-187">По-прежнему можно вызвать общий метод сортировки коллекции или массива и, как показано в выходных данных примера, коллекция сортируется успешно.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-187">You can still call the collection or array's general sorting method and, as the output from the example shows, the collection sorts successfully.</span></span>  
  
     [!code-csharp[System.InvalidOperationException#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/List_Sort2.cs#13)]
     [!code-vb[System.InvalidOperationException#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/List_Sort2.vb#13)]  
  
-   <span data-ttu-id="0c0d5-188">Если не удается изменить исходный код для типа, который вы пытаетесь отсортировать, можно определить специализированный класс сортировки, реализующий <xref:System.Collections.Generic.IComparer%601> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-188">If you cannot modify the source code for the type you are trying to sort, you can define a special-purpose sorting class that implements the <xref:System.Collections.Generic.IComparer%601> interface.</span></span>  <span data-ttu-id="0c0d5-189">Можно вызвать перегрузку `Sort` метода, который <xref:System.Collections.Generic.IComparer%601> включает параметр.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-189">You can call an overload of the `Sort` method that includes an  <xref:System.Collections.Generic.IComparer%601> parameter.</span></span> <span data-ttu-id="0c0d5-190">Этот подход особенно удобен, если требуется разработать специализированный класс сортировки, который может сортировать объекты на основе нескольких критериев.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-190">This approach is especially useful if you want to develop a specialized sorting class that can sort objects based on multiple criteria.</span></span>  
  
     <span data-ttu-id="0c0d5-191">В следующем примере используется подход путем разработки пользовательского `PersonComparer` класса, который используется для сортировки `Person` коллекций.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-191">The following example uses the approach by developing a custom `PersonComparer` class that is used to sort `Person` collections.</span></span>  <span data-ttu-id="0c0d5-192">Затем он передает экземпляр этого класса в <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-192">It then passes an instance of this class to the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType> method.</span></span>  
  
     [!code-csharp[System.InvalidOperationException#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/List_Sort3.cs#14)]
     [!code-vb[System.InvalidOperationException#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/List_Sort3.vb#14)]  
  
-   <span data-ttu-id="0c0d5-193">Если не удается изменить исходный код для типа, который вы пытаетесь отсортировать, можно создать <xref:System.Comparison%601> делегат для выполнения сортировки.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-193">If you cannot modify the source code for the type you are trying to sort, you can create a  <xref:System.Comparison%601> delegate to perform the sorting.</span></span> <span data-ttu-id="0c0d5-194">Сигнатура делегата —</span><span class="sxs-lookup"><span data-stu-id="0c0d5-194">The delegate signature is</span></span>  
  
    ```vb  
    Function Comparison(Of T)(x As T, y As T) As Integer  
    ```  
  
    ```csharp  
    int Comparison<T>(T x, T y)  
    ```  
  
     <span data-ttu-id="0c0d5-195">В следующем примере используется подход путем определения `PersonComparison` метода, который <xref:System.Comparison%601> соответствует сигнатуре делегата.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-195">The following example uses the approach by defining a  `PersonComparison` method that matches the  <xref:System.Comparison%601> delegate signature.</span></span>  <span data-ttu-id="0c0d5-196">Затем он передает этот делегат <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29?displayProperty=nameWithType> методу.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-196">It then passes this delegate to the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29?displayProperty=nameWithType> method.</span></span>  
  
     [!code-csharp[System.InvalidOperationException#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/List_Sort4.cs#15)]
     [!code-vb[System.InvalidOperationException#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/List_Sort4.vb#15)]  
  
<a name="Nullable"></a>   
### <a name="casting-a-nullablet-that-is-null-to-its-underlying-type"></a><span data-ttu-id="0c0d5-197">Приведение значения\<NULL T >, равного null, соответствующему типу</span><span class="sxs-lookup"><span data-stu-id="0c0d5-197">Casting a Nullable\<T> that is null to its underlying type</span></span>  
 <span data-ttu-id="0c0d5-198">Попытка приведения <xref:System.Nullable%601> значения `null` к базовому типу вызывает <xref:System.InvalidOperationException> исключение и отображает сообщение об ошибке "объект, допускающий значение null,**должен иметь значение.**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-198">Attempting to cast a <xref:System.Nullable%601> value that is `null` to its underlying type throws an <xref:System.InvalidOperationException> exception  and displays the error message, "**Nullable object must have a value.**</span></span>  
  
 <span data-ttu-id="0c0d5-199">В следующем примере создается <xref:System.InvalidOperationException> исключение при попытке выполнить итерацию массива, `Nullable(Of Integer)` содержащего значение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-199">The following example throws an <xref:System.InvalidOperationException> exception  when it attempts to iterate an array that includes a `Nullable(Of Integer)` value.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Nullable1.cs#4)]
 [!code-vb[System.InvalidOperationException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Nullable1.vb#4)]  
  
 <span data-ttu-id="0c0d5-200">Чтобы предотвратить исключение, сделайте следующее:</span><span class="sxs-lookup"><span data-stu-id="0c0d5-200">To prevent the exception:</span></span>  
  
-   <span data-ttu-id="0c0d5-201">Используйте свойство, чтобы выбрать только те элементы, которые не `null`являются. <xref:System.Nullable%601.HasValue%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0c0d5-201">Use the <xref:System.Nullable%601.HasValue%2A?displayProperty=nameWithType> property to select only those elements that are not `null`.</span></span>  
  
-   <span data-ttu-id="0c0d5-202">Вызовите одну из <xref:System.Nullable%601.GetValueOrDefault%2A?displayProperty=nameWithType> перегрузок, чтобы предоставить значение по умолчанию `null` для значения.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-202">Call one of the <xref:System.Nullable%601.GetValueOrDefault%2A?displayProperty=nameWithType> overloads to provide a default value for a `null` value.</span></span>  
  
 <span data-ttu-id="0c0d5-203">В следующем примере оба варианта позволяют избежать <xref:System.InvalidOperationException> исключения.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-203">The following example does both to avoid the  <xref:System.InvalidOperationException> exception.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Nullable2.cs#5)]
 [!code-vb[System.InvalidOperationException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Nullable2.vb#5)]  
  
<a name="Empty"></a>   
### <a name="calling-a-systemlinqenumerable-method-on-an-empty-collection"></a><span data-ttu-id="0c0d5-204">Вызов метода System. LINQ. Enumerable для пустой коллекции</span><span class="sxs-lookup"><span data-stu-id="0c0d5-204">Calling a System.Linq.Enumerable method on an empty collection</span></span>  
 <span data-ttu-id="0c0d5-205"><xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=nameWithType>Методы, <xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType>, ,,<xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType>,, и<xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType>выполняют операциинадпоследовательностьюи<xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> возвращают один результат. <xref:System.Linq.Enumerable.Min%2A?displayProperty=nameWithType> <xref:System.Linq.Enumerable.Max%2A?displayProperty=nameWithType> <xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0c0d5-205">The <xref:System.Linq.Enumerable.Aggregate%2A?displayProperty=nameWithType>, <xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType>, <xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType>, <xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType>, <xref:System.Linq.Enumerable.Max%2A?displayProperty=nameWithType>, <xref:System.Linq.Enumerable.Min%2A?displayProperty=nameWithType>,  <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType>, and <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> methods perform operations on a sequence and return a single result.</span></span>   <span data-ttu-id="0c0d5-206">Некоторые перегрузки этих методов вызывают <xref:System.InvalidOperationException> исключение, если последовательность пуста, а другие перегрузки возвращают. `null`</span><span class="sxs-lookup"><span data-stu-id="0c0d5-206">Some overloads of these methods throw an <xref:System.InvalidOperationException> exception when the sequence is empty, while other overloads return `null`.</span></span> <span data-ttu-id="0c0d5-207">Метод также вызывает исключение, <xref:System.InvalidOperationException> если последовательность содержит более одного элемента. <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0c0d5-207">The <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> method also throws an <xref:System.InvalidOperationException> exception when the sequence contains more than one element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c0d5-208">Большинство методов, которые вызывают <xref:System.InvalidOperationException> исключение, являются перегрузками.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-208">Most of the methods that throw an <xref:System.InvalidOperationException> exception are overloads.</span></span> <span data-ttu-id="0c0d5-209">Убедитесь, что вы понимаете поведение выбранной перегрузки.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-209">Be sure that you understand the behavior of the overload that you choose.</span></span>  
  
 <span data-ttu-id="0c0d5-210">В следующей таблице перечислены сообщения об исключениях из <xref:System.InvalidOperationException> объектов исключений, создаваемых вызовами <xref:System.Linq.Enumerable?displayProperty=nameWithType> некоторых методов.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-210">The following table lists the exception messages from the <xref:System.InvalidOperationException> exception objects thrown by calls to some <xref:System.Linq.Enumerable?displayProperty=nameWithType> methods.</span></span>  
  
|<span data-ttu-id="0c0d5-211">Метод</span><span class="sxs-lookup"><span data-stu-id="0c0d5-211">Method</span></span>|<span data-ttu-id="0c0d5-212">Сообщение</span><span class="sxs-lookup"><span data-stu-id="0c0d5-212">Message</span></span>|  
|------------|-------------|  
|`Aggregate` <br /> `Average` <br /> `Last` <br /> `Max` <br /> `Min`|<span data-ttu-id="0c0d5-213">**Последовательность не содержит элементов**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-213">**Sequence contains no elements**</span></span>|  
|`First`|<span data-ttu-id="0c0d5-214">**Sequence не содержит соответствующего элемента**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-214">**Sequence contains no matching element**</span></span>|  
|`Single` <br /> `SingleOrDefault`|<span data-ttu-id="0c0d5-215">**Последовательность содержит более одного соответствующего элемента**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-215">**Sequence contains more than one matching element**</span></span>|  
  
 <span data-ttu-id="0c0d5-216">Способ исключения или обойти исключение зависит от допущений приложения и от конкретного метода, который вы вызываете.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-216">How you eliminate or handle the exception depends on your application's assumptions and on the particular method you call.</span></span>  
  
-   <span data-ttu-id="0c0d5-217">При намеренном вызове одного из этих методов без проверки пустой последовательности предполагается, что последовательность не пуста и что пустая последовательность является непредвиденным событием.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-217">When you deliberately call one of these methods without checking for an empty sequence, you are assuming that the sequence is not empty, and that an empty sequence is an unexpected occurrence.</span></span> <span data-ttu-id="0c0d5-218">В этом случае подходит перехват или повторный вызов исключения.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-218">In this case, catching or rethrowing the exception is appropriate .</span></span>  
  
-   <span data-ttu-id="0c0d5-219">Если ошибка проверки пустой последовательности была непреднамеренной, можно вызвать одну из <xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType> перегрузок перегрузки, чтобы определить, содержит ли последовательность какие-либо элементы.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-219">If your failure to check for an empty sequence was inadvertent, you can  call one of the overloads of the <xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType> overload to determine whether a sequence contains any elements.</span></span>  
  
    > [!TIP]
    >  <span data-ttu-id="0c0d5-220"><xref:System.Linq.Enumerable.Any%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType> Вызов метода до создания последовательности может повысить производительность, если обрабатываемые данные могут содержать большое количество элементов или операция, создающая последовательность, является дорогостоящей.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-220">Calling the <xref:System.Linq.Enumerable.Any%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType> method before generating a sequence can improve performance if the data to be processed might contain a large number of elements or if operation that generates the sequence is expensive.</span></span>  
  
-   <span data-ttu-id="0c0d5-221">Если вы вызвали метод <xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType>, <xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType>например, или <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType>, <xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType>можно заменить альтернативный метод, например, <xref:System.Linq.Enumerable.LastOrDefault%2A?displayProperty=nameWithType>или <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType>, который возвращает значение по умолчанию вместо элемента последовательности.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-221">If you've called a method such as <xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType>, <xref:System.Linq.Enumerable.Last%2A?displayProperty=nameWithType>, or <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType>, you can substitute an alternate method, such as <xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType>, <xref:System.Linq.Enumerable.LastOrDefault%2A?displayProperty=nameWithType>, or  <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType>, that returns a default value instead of a member of the sequence.</span></span>  
  
 <span data-ttu-id="0c0d5-222">В примерах содержатся дополнительные сведения.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-222">The examples provide additional detail.</span></span>  
  
 <span data-ttu-id="0c0d5-223">В следующем примере <xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType> метод используется для вычисления среднего значения последовательности, значение которой больше 4.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-223">The following example uses the <xref:System.Linq.Enumerable.Average%2A?displayProperty=nameWithType> method to compute the average of a sequence whose values are greater than 4.</span></span> <span data-ttu-id="0c0d5-224">Поскольку значения из исходного массива не превышают 4, в последовательность не включаются значения, а метод создает <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-224">Since no values from the original array exceed 4, no values are included in the sequence, and the method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Enumerable1.cs#6)]
 [!code-vb[System.InvalidOperationException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Enumerable1.vb#6)]  
  
 <span data-ttu-id="0c0d5-225">Исключение можно устранить, вызвав <xref:System.Linq.Enumerable.Any%2A> метод, чтобы определить, содержит ли последовательность какие бы то ни было элементы перед вызовом метода, обрабатывающего последовательность, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-225">The exception can be eliminated by calling the <xref:System.Linq.Enumerable.Any%2A> method to determine whether the sequence contains any elements before calling the method that processes the sequence, as the following example shows.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Enumerable2.cs#7)]
 [!code-vb[System.InvalidOperationException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Enumerable2.vb#7)]  
  
 <span data-ttu-id="0c0d5-226"><xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType> Метод возвращает первый элемент последовательности или первый элемент последовательности, удовлетворяющий заданному условию.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-226">The <xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType> method returns the first item in a sequence or the first element in a sequence that satisfies a specified condition.</span></span> <span data-ttu-id="0c0d5-227">Если последовательность пуста и поэтому не имеет первого элемента, то создается <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-227">If the sequence is empty and therefore does not have a first element, it throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="0c0d5-228">В следующем примере <xref:System.Linq.Enumerable.First%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType> метод <xref:System.InvalidOperationException> создает исключение, так как массив дбкуериресултс не содержит элемент больше 4.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-228">In the following example, the <xref:System.Linq.Enumerable.First%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType> method throws an <xref:System.InvalidOperationException> exception because the dbQueryResults array doesn't contain an element greater than 4.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Enumerable3.cs#8)]
 [!code-vb[System.InvalidOperationException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Enumerable3.vb#8)]  
  
 <span data-ttu-id="0c0d5-229">Вы можете вызвать <xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType> метод <xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType> вместо того, чтобы возвращать указанное или значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-229">You can call the <xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType> method instead of <xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType> to return a specified or default value.</span></span> <span data-ttu-id="0c0d5-230">Если метод не находит первый элемент в последовательности, он возвращает значение по умолчанию для этого типа данных.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-230">If the method does not find a first element in the sequence, it returns  the default value for that data type.</span></span>  <span data-ttu-id="0c0d5-231">Значение по умолчанию `null` — для ссылочного типа, ноль для типа данных numeric и <xref:System.DateTime.MinValue?displayProperty=nameWithType> для <xref:System.DateTime> типа.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-231">The default value is `null` for a reference type, zero for a numeric data type, and <xref:System.DateTime.MinValue?displayProperty=nameWithType> for the <xref:System.DateTime> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c0d5-232">Анализ значения, возвращаемого <xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType> методом, часто осложняется тем, что значение по умолчанию типа может быть допустимым значением в последовательности.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-232">Interpreting the value returned by the <xref:System.Linq.Enumerable.FirstOrDefault%2A?displayProperty=nameWithType> method is often complicated by the fact that the default value of the type can be a valid value in the sequence.</span></span> <span data-ttu-id="0c0d5-233">В этом случае вы вызываете <xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType> метод, чтобы определить, содержит ли последовательность допустимые члены перед <xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-233">In this case, you an call the <xref:System.Linq.Enumerable.Any%2A?displayProperty=nameWithType> method to determine whether the sequence has valid members before calling the <xref:System.Linq.Enumerable.First%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0c0d5-234">В следующем примере вызывается <xref:System.Linq.Enumerable.FirstOrDefault%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType> метод для предотвращения исключения <xref:System.InvalidOperationException> , вызываемого в предыдущем примере.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-234">The following example calls the  <xref:System.Linq.Enumerable.FirstOrDefault%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2CSystem.Boolean%7D%29?displayProperty=nameWithType> method to prevent the <xref:System.InvalidOperationException> exception thrown in the previous example.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Enumerable4.cs#9)]
 [!code-vb[System.InvalidOperationException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Enumerable4.vb#9)]  
  
<a name="Single"></a>   
### <a name="calling-enumerablesingle-or-enumerablesingleordefault-on-a-sequence-without-one-element"></a><span data-ttu-id="0c0d5-235">Вызов Enumerable. Single или Enumerable. SingleOrDefault для последовательности без одного элемента</span><span class="sxs-lookup"><span data-stu-id="0c0d5-235">Calling Enumerable.Single or Enumerable.SingleOrDefault on a sequence without one element</span></span>  
 <span data-ttu-id="0c0d5-236"><xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType> Метод возвращает единственный элемент последовательности или единственный элемент последовательности, соответствующий заданному условию.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-236">The <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType> method returns the only element of a sequence, or the only element of a sequence that meets a specified condition.</span></span>    <span data-ttu-id="0c0d5-237">Если в последовательности нет элементов или имеется более одного элемента, метод создает <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-237">If there are no elements in the sequence, or if there is more than one element , the method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="0c0d5-238"><xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> Метод можно использовать для возврата значения по умолчанию вместо создания исключения, если последовательность не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-238">You can use the <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> method to return a default value instead of throwing an exception when the sequence contains no elements.</span></span> <span data-ttu-id="0c0d5-239">Однако метод все равно вызывает исключение, если последовательность содержит более одного элемента. <xref:System.InvalidOperationException> <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0c0d5-239">However, the <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> method still throws an <xref:System.InvalidOperationException> exception  when the sequence contains more than one element.</span></span>  
  
 <span data-ttu-id="0c0d5-240">В следующей таблице перечислены сообщения об исключениях из <xref:System.InvalidOperationException> объектов исключений, создаваемых вызовами <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType> методов <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> и.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-240">The following table lists the exception messages from the <xref:System.InvalidOperationException> exception objects thrown by calls to the <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType> and <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> methods.</span></span>  
  
|<span data-ttu-id="0c0d5-241">Метод</span><span class="sxs-lookup"><span data-stu-id="0c0d5-241">Method</span></span>|<span data-ttu-id="0c0d5-242">Сообщение</span><span class="sxs-lookup"><span data-stu-id="0c0d5-242">Message</span></span>|  
|------------|-------------|  
|`Single`|<span data-ttu-id="0c0d5-243">**Sequence не содержит соответствующего элемента**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-243">**Sequence contains no matching element**</span></span>|  
|`Single` <br /> `SingleOrDefault`|<span data-ttu-id="0c0d5-244">**Последовательность содержит более одного соответствующего элемента**</span><span class="sxs-lookup"><span data-stu-id="0c0d5-244">**Sequence contains more than one matching element**</span></span>|  
  
 <span data-ttu-id="0c0d5-245">В следующем примере вызов <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType> метода <xref:System.InvalidOperationException> вызывает исключение, так как последовательность не содержит элемент больше 4.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-245">In the following example, the call to the <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType> method throws an <xref:System.InvalidOperationException> exception because the sequence doesn't have an element greater than 4.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Enumerable5.cs#10)]
 [!code-vb[System.InvalidOperationException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Enumerable5.vb#10)]  
  
 <span data-ttu-id="0c0d5-246">В следующем примере предпринимается попытка предотвратить исключение, <xref:System.InvalidOperationException> возникающее, если последовательность пуста, вместо этого <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-246">The following example attempts to prevent the <xref:System.InvalidOperationException> exception thrown when a sequence is empty by instead calling the <xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0c0d5-247">Однако, поскольку эта последовательность возвращает несколько элементов, значение которых больше 2, оно также вызывает <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-247">However, because this sequence returns multiple elements whose value is greater than 2, it also throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 [!code-csharp[System.InvalidOperationException#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.invalidoperationexception/cs/Enumerable6.cs#11)]
 [!code-vb[System.InvalidOperationException#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.invalidoperationexception/vb/Enumerable6.vb#11)]  
  
 <span data-ttu-id="0c0d5-248">При вызове <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType> метода предполагается, что либо последовательность, либо последовательность, отвечающая указанным критериям, содержат только один элемент.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-248">Calling the <xref:System.Linq.Enumerable.Single%2A?displayProperty=nameWithType> method assumes that either a sequence or the sequence that meets specified criteria contains only one element.</span></span>  <span data-ttu-id="0c0d5-249"><xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType>Предполагается, что последовательность имеет ноль или один результат, но больше нет.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-249"><xref:System.Linq.Enumerable.SingleOrDefault%2A?displayProperty=nameWithType> assumes a sequence with zero or one result, but no more.</span></span> <span data-ttu-id="0c0d5-250">Если это предположение является предопределенной на вашей части и эти условия не выполняются, то подходящее исключение или перехват полученного результата <xref:System.InvalidOperationException> .</span><span class="sxs-lookup"><span data-stu-id="0c0d5-250">If this assumption is a deliberate one on your part and these conditions are not met, rethrowing or catching the resulting <xref:System.InvalidOperationException> is appropriate.</span></span> <span data-ttu-id="0c0d5-251">В противном случае или, если предполагается, что при некоторой частоте возникнут недопустимые условия, <xref:System.Linq.Enumerable> следует рассмотреть возможность использования <xref:System.Linq.Enumerable.FirstOrDefault%2A> другого <xref:System.Linq.Enumerable.Where%2A>метода, например или.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-251">Otherwise, or if you expect that invalid conditions will occur with some frequency, you should consider using some other <xref:System.Linq.Enumerable> method, such as <xref:System.Linq.Enumerable.FirstOrDefault%2A> or <xref:System.Linq.Enumerable.Where%2A>.</span></span>  
  
<a name="Emit"></a>   
### <a name="dynamic-cross-application-domain-field-access"></a><span data-ttu-id="0c0d5-252">Динамическое обращение к полю домена между приложениями</span><span class="sxs-lookup"><span data-stu-id="0c0d5-252">Dynamic cross-application domain field access</span></span>  
 <span data-ttu-id="0c0d5-253">Инструкция MSIL выдает исключение, <xref:System.InvalidOperationException> если объект, содержащий поле, адрес которого вы пытаетесь извлечь, не находится в домене приложения, в котором выполняется код. <xref:System.Reflection.Emit.OpCodes.Ldflda?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0c0d5-253">The <xref:System.Reflection.Emit.OpCodes.Ldflda?displayProperty=nameWithType> Microsoft intermediate language (MSIL) instruction throws an <xref:System.InvalidOperationException> exception if the object containing the field whose address you are trying to retrieve is not within the application domain in which your code is executing.</span></span> <span data-ttu-id="0c0d5-254">Доступ к адресу поля возможен только из домена приложения, в котором оно находится.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-254">The address of a field can only be accessed from the application domain in which it resides.</span></span>  
  
<a name="Throwing"></a>   
## <a name="throwing-an-invalidoperationexception-exception"></a><span data-ttu-id="0c0d5-255">Создание исключения InvalidOperationException</span><span class="sxs-lookup"><span data-stu-id="0c0d5-255">Throwing an InvalidOperationException exception</span></span>  
 <span data-ttu-id="0c0d5-256"><xref:System.InvalidOperationException> Исключение следует вызывать только в том случае, если состояние объекта по какой-либо причине не поддерживает определенный вызов метода.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-256">You should throw an <xref:System.InvalidOperationException> exception only when the state of your object for some reason does not support a particular method call.</span></span> <span data-ttu-id="0c0d5-257">Это значит, что вызов метода допустим в некоторых обстоятельствах или контекстах, но является недопустимым в других.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-257">That is, the method call is valid in some circumstances or contexts, but is invalid in others.</span></span>  
  
 <span data-ttu-id="0c0d5-258">Если ошибка вызова метода вызвана недопустимыми аргументами, то <xref:System.ArgumentException> вместо этого следует вызывать исключение или один <xref:System.ArgumentNullException> из <xref:System.ArgumentOutOfRangeException>его производных классов.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-258">If the method invocation failure is due to invalid arguments, then <xref:System.ArgumentException> or one of its derived classes, <xref:System.ArgumentNullException> or <xref:System.ArgumentOutOfRangeException>, should be thrown instead.</span></span>  
  
<a name="Misc"></a>   
## <a name="miscellaneous-information"></a><span data-ttu-id="0c0d5-259">Прочие сведения</span><span class="sxs-lookup"><span data-stu-id="0c0d5-259">Miscellaneous information</span></span>  
 <span data-ttu-id="0c0d5-260"><xref:System.InvalidOperationException>использует HRESULT COR_E_INVALIDOPERATION, имеющий значение 0x80131509.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-260"><xref:System.InvalidOperationException> uses the HRESULT COR_E_INVALIDOPERATION, which has the value 0x80131509.</span></span>  
  
 <span data-ttu-id="0c0d5-261">Список начальных значений свойств для экземпляра <xref:System.InvalidOperationException>, см. в разделе <xref:System.InvalidOperationException.%23ctor%2A> конструкторы.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-261">For a list of initial property values for an instance of <xref:System.InvalidOperationException>, see the <xref:System.InvalidOperationException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Resources.ResourceSet" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="0c0d5-262">Обработка и создание исключений</span><span class="sxs-lookup"><span data-stu-id="0c0d5-262">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c0d5-263">Инициализирует новый экземпляр класса <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-263">Initializes a new instance of the <see cref="T:System.InvalidOperationException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidOperationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidOperationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidOperationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c0d5-264">Инициализирует новый экземпляр класса <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-264">Initializes a new instance of the <see cref="T:System.InvalidOperationException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0d5-265">Этот конструктор инициализирует <xref:System.Exception.Message%2A> свойство нового экземпляра, сопоставляя с ним системное сообщение, описывающее ошибку, например "не удается выполнить запрошенную операцию".</span><span class="sxs-lookup"><span data-stu-id="0c0d5-265">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "The requested operation cannot be performed."</span></span> <span data-ttu-id="0c0d5-266">Это сообщение учитывает текущую культуру системы.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-266">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="0c0d5-267">В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-267">The following table shows the initial property values for an instance of <xref:System.InvalidOperationException>.</span></span>  
  
|<span data-ttu-id="0c0d5-268">Свойство.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-268">Property</span></span>|<span data-ttu-id="0c0d5-269">Значение</span><span class="sxs-lookup"><span data-stu-id="0c0d5-269">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0c0d5-270">Пустая ссылка (`Nothing` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="0c0d5-270">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0c0d5-271">Строка локализованного сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-271">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidOperationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidOperationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidOperationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new InvalidOperationException : string -&gt; InvalidOperationException" Usage="new System.InvalidOperationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0c0d5-272">Сообщение, описывающее ошибку.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-272">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="0c0d5-273">Инициализирует новый экземпляр класса <see cref="T:System.InvalidOperationException" /> с указанным сообщением об ошибке.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-273">Initializes a new instance of the <see cref="T:System.InvalidOperationException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0d5-274">Этот конструктор инициализирует <xref:System.Exception.Message%2A?displayProperty=nameWithType> свойство нового исключения `message` с помощью параметра.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-274">This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=nameWithType> property of the new exception using the `message` parameter.</span></span> <span data-ttu-id="0c0d5-275">Содержимое параметра `message` должно быть понятным пользователю.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-275">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="0c0d5-276">Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-276">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="0c0d5-277">В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-277">The following table shows the initial property values for an instance of <xref:System.InvalidOperationException>.</span></span>  
  
|<span data-ttu-id="0c0d5-278">Свойство.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-278">Property</span></span>|<span data-ttu-id="0c0d5-279">Значение</span><span class="sxs-lookup"><span data-stu-id="0c0d5-279">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0c0d5-280">Пустая ссылка (`Nothing` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="0c0d5-280">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0c0d5-281">Строка сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-281">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InvalidOperationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InvalidOperationException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new InvalidOperationException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; InvalidOperationException" Usage="new System.InvalidOperationException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0c0d5-282">Объект, содержащий сериализованные данные объекта.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-282">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="0c0d5-283">Контекстные сведения об источнике или назначении.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-283">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="0c0d5-284">Инициализирует новый экземпляр класса <see cref="T:System.InvalidOperationException" /> с сериализованными данными.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-284">Initializes a new instance of the <see cref="T:System.InvalidOperationException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0d5-285">Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-285">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="0c0d5-286">Дополнительные сведения см. в разделе [сериализация XML и SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="0c0d5-286">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="0c0d5-287">Сериализация XML и SOAP</span><span class="sxs-lookup"><span data-stu-id="0c0d5-287">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidOperationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InvalidOperationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidOperationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new InvalidOperationException : string * Exception -&gt; InvalidOperationException" Usage="new System.InvalidOperationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0c0d5-288">Сообщение об ошибке, указывающее причину создания исключения.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-288">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="0c0d5-289">Исключение, которое вызвало текущее исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-289">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="0c0d5-290">Если параметр <paramref name="innerException" /> не является указателем null (<see langword="Nothing" /> в Visual Basic), то текущее исключение создается в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-290">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="0c0d5-291">Инициализирует новый экземпляр класса <see cref="T:System.InvalidOperationException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-291">Initializes a new instance of the <see cref="T:System.InvalidOperationException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0d5-292">Исключение, созданное как прямой результат предыдущего исключения, должно содержать в свойстве <xref:System.Exception.InnerException%2A> ссылку на предыдущее исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-292">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="0c0d5-293">Свойство <xref:System.Exception.InnerException%2A> возвращает то же значение, которое передается конструктору, или пустую ссылку (`Nothing` в Visual Basic), если свойство <xref:System.Exception.InnerException%2A> не предоставляет конструктору значение внутреннего исключения.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-293">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="0c0d5-294">В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-294">The following table shows the initial property values for an instance of <xref:System.InvalidOperationException>.</span></span>  
  
|<span data-ttu-id="0c0d5-295">Свойство.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-295">Property</span></span>|<span data-ttu-id="0c0d5-296">Значение</span><span class="sxs-lookup"><span data-stu-id="0c0d5-296">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0c0d5-297">Ссылка на внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-297">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0c0d5-298">Строка сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="0c0d5-298">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="0c0d5-299">Обработка и создание исключений</span><span class="sxs-lookup"><span data-stu-id="0c0d5-299">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>