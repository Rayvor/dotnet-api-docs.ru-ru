<Type Name="StringComparer" FullName="System.StringComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a27c594d86132dd766c6dd16188a394cd7741589" /><Meta Name="ms.sourcegitcommit" Value="81ab118287bf69d10df7204c332592eac20b1b60" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/11/2019" /><Meta Name="ms.locfileid" Value="75003654" /></Metadata><TypeSignature Language="C#" Value="public abstract class StringComparer : System.Collections.Generic.IComparer&lt;string&gt;, System.Collections.Generic.IEqualityComparer&lt;string&gt;, System.Collections.IComparer, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit StringComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;string&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;string&gt;, class System.Collections.IComparer, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.StringComparer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StringComparer&#xA;Implements IComparer, IComparer(Of String), IEqualityComparer, IEqualityComparer(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringComparer abstract : System::Collections::Generic::IComparer&lt;System::String ^&gt;, System::Collections::Generic::IEqualityComparer&lt;System::String ^&gt;, System::Collections::IComparer, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type StringComparer = class&#xA;    interface IComparer&#xA;    interface IEqualityComparer&#xA;    interface IComparer&lt;string&gt;&#xA;    interface IEqualityComparer&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9e6fe-101">Представляет операции сравнения строк, в которых используются правила сравнения с учетом регистра, языка и региональных параметров или правил сравнения по порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-101">Represents a string comparison operation that uses specific case and culture-based or ordinal comparison rules.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-102">Объект, производный от <xref:System.StringComparer> класса воплощены, основанного на строках сравнения, равенства и хэш-кода, учитывающего как регистр, так и параметры, зависящие от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-102">An object derived from the <xref:System.StringComparer> class embodies string-based comparison, equality, and hash code operations that take into account both case and culture-specific comparison rules.</span></span> <span data-ttu-id="9e6fe-103">Можно использовать класс <xref:System.StringComparer>, чтобы создать сравнение с конкретным типом для сортировки элементов в универсальной коллекции.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-103">You can use the <xref:System.StringComparer> class to create a type-specific comparison to sort the elements in a generic collection.</span></span> <span data-ttu-id="9e6fe-104">Классы, такие как <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>и <xref:System.Collections.Generic.SortedList%602>, используют класс <xref:System.StringComparer> для целей сортировки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-104">Classes such as <xref:System.Collections.Hashtable>, <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.SortedList>, and <xref:System.Collections.Generic.SortedList%602> use the <xref:System.StringComparer> class for sorting purposes.</span></span>  
  
 <span data-ttu-id="9e6fe-105">Операция сравнения, представленная классом <xref:System.StringComparer>, определяется как с учетом регистра, так и без учета регистра, а также с помощью правил сравнения по словам (с учетом языка и региональных параметров) или по порядковому номеру (без учета языка и региональных параметров).</span><span class="sxs-lookup"><span data-stu-id="9e6fe-105">A comparison operation that is represented by the <xref:System.StringComparer> class is defined to be either case-sensitive or case-insensitive, and use either word (culture-sensitive) or ordinal (culture-insensitive) comparison rules.</span></span> <span data-ttu-id="9e6fe-106">Дополнительные сведения о правилах сравнения Word и Ordinal см. в разделе <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-106">For more information about word and ordinal comparison rules, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  

> [!NOTE]
> <span data-ttu-id="9e6fe-107">Можно скачать [таблицы коэффициентов сортировки](https://www.microsoft.com/download/details.aspx?id=10921) — набор текстовых файлов, которые содержат сведения о весовых коэффициентах символов, используемых в операциях сортировки и сравнения для операционных систем Windows, а также последнюю версию [таблицы параметров сортировки по умолчанию для элементов Юникод](https://www.unicode.org/Public/UCA/latest/allkeys.txt) — таблицу весовых коэффициентов сортировки для Linux и macOS.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-107">You can download the [Sorting Weight Tables](https://www.microsoft.com/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, and the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the latest version of the sort weight table for Linux and macOS.</span></span> <span data-ttu-id="9e6fe-108">Конкретная версия таблицы коэффициентов сортировки в Linux и macOS зависит от установленной в системе версии библиотек [International Components for Unicode](http://site.icu-project.org/) (ICU).</span><span class="sxs-lookup"><span data-stu-id="9e6fe-108">The specific version of the sort weight table on Linux and macOS depends on the version of the [International Components for Unicode](http://site.icu-project.org/) libraries installed on the system.</span></span> <span data-ttu-id="9e6fe-109">Сведения о версиях ICU и реализуемых в них версиях Юникода см. на странице [Downloading ICU](http://site.icu-project.org/download) (Скачивание ICU).</span><span class="sxs-lookup"><span data-stu-id="9e6fe-109">For information on ICU versions and the Unicode versions that they implement, see [Downloading ICU](http://site.icu-project.org/download).</span></span>

## <a name="implemented-properties"></a><span data-ttu-id="9e6fe-110">Реализованные свойства</span><span class="sxs-lookup"><span data-stu-id="9e6fe-110">Implemented properties</span></span>  

<span data-ttu-id="9e6fe-111">Вы можете запутаться, как использовать свойства класса <xref:System.StringComparer>, так как это противоречит несоответствиям.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-111">You might be confused about how to use the <xref:System.StringComparer> class properties because of a seeming contradiction.</span></span> <span data-ttu-id="9e6fe-112">Класс <xref:System.StringComparer> объявлен `abstract` (`MustInherit` в Visual Basic), что означает, что его члены можно вызывать только для объекта класса, производного от класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-112">The <xref:System.StringComparer> class is declared `abstract` (`MustInherit` in Visual Basic), which means its members can be invoked only on an object of a class derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="9e6fe-113">Противоречие заключается в том, что каждое свойство <xref:System.StringComparer> класса объявлено `static` (`Shared` в Visual Basic), что означает, что свойство можно вызвать без предварительного создания производного класса.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-113">The contradiction is that each property of the <xref:System.StringComparer> class is declared `static` (`Shared` in Visual Basic), which means the property can be invoked without first creating a derived class.</span></span>  
  
 <span data-ttu-id="9e6fe-114">Можно вызвать свойство <xref:System.StringComparer> напрямую, так как каждое свойство фактически возвращает экземпляр анонимного класса, производного от класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-114">You can call a <xref:System.StringComparer> property directly because each property actually returns an instance of an anonymous class that is derived from the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="9e6fe-115">Следовательно, типом каждого значения свойства является <xref:System.StringComparer>, который является базовым классом анонимного класса, а не типом самого анонимного класса.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-115">Consequently, the type of each property value is <xref:System.StringComparer>, which is the base class of the anonymous class, not the type of the anonymous class itself.</span></span> <span data-ttu-id="9e6fe-116">Каждое свойство класса <xref:System.StringComparer> возвращает объект <xref:System.StringComparer>, поддерживающий предварительно определенные правила использования и сравнения.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-116">Each <xref:System.StringComparer> class property returns a <xref:System.StringComparer> object that supports predefined case and comparison rules.</span></span>  
  
## Examples  

<span data-ttu-id="9e6fe-117">В следующем примере демонстрируются свойства и метод <xref:System.StringComparer.Create%2A> класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-117">The following example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="9e6fe-118">В примере показано, как различные объекты <xref:System.StringComparer> сортируют три версии Латинской буквы I.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-118">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.String" />
    <altmember cref="T:System.Globalization.CompareOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StringComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StringComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9e6fe-119">Инициализирует новый экземпляр класса <see cref="T:System.StringComparer" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-119">Initializes a new instance of the <see cref="T:System.StringComparer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e6fe-120">Сравнивает два объекта или две строки и возвращает сведения об их относительном порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-120">Compares two objects or strings and returns an indication of their relative sort order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As Object, y As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9e6fe-121">Объект, сравниваемый с <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-121">An object to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="9e6fe-122">Объект, сравниваемый с <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-122">An object to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="9e6fe-123">При переопределении в производном классе сравнивает два объекта и возвращает сведения об их относительном порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-123">When overridden in a derived class, compares two objects and returns an indication of their relative sort order.</span></span></summary>
        <returns><span data-ttu-id="9e6fe-124">Знаковое целое число, которое определяет относительные значения параметров <paramref name="x" /> и <paramref name="y" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-124">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="9e6fe-125">Значение</span><span class="sxs-lookup"><span data-stu-id="9e6fe-125">Value</span></span> 
 </term><description> <span data-ttu-id="9e6fe-126">Значение</span><span class="sxs-lookup"><span data-stu-id="9e6fe-126">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="9e6fe-127">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="9e6fe-127">Less than zero</span></span> 
 </term><description><span data-ttu-id="9e6fe-128"><paramref name="x" /> предшествует <paramref name="y" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-128"><paramref name="x" /> precedes  <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="9e6fe-129">- или -</span><span class="sxs-lookup"><span data-stu-id="9e6fe-129">-or-</span></span> 
 <span data-ttu-id="9e6fe-130"><paramref name="x" /> имеет значение <see langword="null" />, а <paramref name="y" /> не имеет значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-130"><paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9e6fe-131">Нуль</span><span class="sxs-lookup"><span data-stu-id="9e6fe-131">Zero</span></span> 
 </term><description><span data-ttu-id="9e6fe-132"><paramref name="x" /> равно <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-132"><paramref name="x" /> is equal to <paramref name="y" />.</span></span>  
  
<span data-ttu-id="9e6fe-133">- или -</span><span class="sxs-lookup"><span data-stu-id="9e6fe-133">-or-</span></span> 
 <span data-ttu-id="9e6fe-134">Оба параметра <paramref name="x" /> и <paramref name="y" /> имеют значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-134"><paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9e6fe-135">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="9e6fe-135">Greater than zero</span></span> 
 </term><description><span data-ttu-id="9e6fe-136"><paramref name="x" /> следует за <paramref name="y" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-136"><paramref name="x" /> follows <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="9e6fe-137">- или -</span><span class="sxs-lookup"><span data-stu-id="9e6fe-137">-or-</span></span> 
 <span data-ttu-id="9e6fe-138"><paramref name="y" /> имеет значение <see langword="null" />, а <paramref name="x" /> не имеет значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-138"><paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-139">Метод <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> немного более эффективен, чем метод <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>, поскольку для сравнения не требуется преобразование аргументов `x` и `y`.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-139">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e6fe-140">Ни параметр <paramref name="x" />, ни параметр <paramref name="y" /> не являются объектами <see cref="T:System.String" /> и ни один из этих параметров, <paramref name="x" /> и <paramref name="y" />, не реализует экземпляр <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-140">Neither <paramref name="x" /> nor <paramref name="y" /> is a <see cref="T:System.String" /> object, and neither <paramref name="x" /> nor <paramref name="y" /> implements the <see cref="T:System.IComparable" /> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As String, y As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int" Usage="stringComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9e6fe-141">Строка, сравниваемая с параметром <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-141">A string to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="9e6fe-142">Строка, сравниваемая с параметром <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-142">A string to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="9e6fe-143">При переопределении в производном классе сравнивает две строки и возвращает сведения об их относительном порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-143">When overridden in a derived class, compares two strings and returns an indication of their relative sort order.</span></span></summary>
        <returns><span data-ttu-id="9e6fe-144">Знаковое целое число, которое определяет относительные значения параметров <paramref name="x" /> и <paramref name="y" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-144">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="9e6fe-145">Значение</span><span class="sxs-lookup"><span data-stu-id="9e6fe-145">Value</span></span> 
 </term><description> <span data-ttu-id="9e6fe-146">Значение</span><span class="sxs-lookup"><span data-stu-id="9e6fe-146">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="9e6fe-147">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="9e6fe-147">Less than zero</span></span> 
 </term><description><span data-ttu-id="9e6fe-148"><paramref name="x" /> предшествует <paramref name="y" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-148"><paramref name="x" /> precedes <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="9e6fe-149">- или -</span><span class="sxs-lookup"><span data-stu-id="9e6fe-149">-or-</span></span> 
 <span data-ttu-id="9e6fe-150"><paramref name="x" /> имеет значение <see langword="null" />, а <paramref name="y" /> не имеет значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-150"><paramref name="x" /> is <see langword="null" /> and <paramref name="y" /> is not <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9e6fe-151">Нуль</span><span class="sxs-lookup"><span data-stu-id="9e6fe-151">Zero</span></span> 
 </term><description><span data-ttu-id="9e6fe-152"><paramref name="x" /> равно <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-152"><paramref name="x" /> is equal to <paramref name="y" />.</span></span>  
  
<span data-ttu-id="9e6fe-153">- или -</span><span class="sxs-lookup"><span data-stu-id="9e6fe-153">-or-</span></span> 
 <span data-ttu-id="9e6fe-154">Оба параметра <paramref name="x" /> и <paramref name="y" /> имеют значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-154"><paramref name="x" /> and <paramref name="y" /> are both <see langword="null" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9e6fe-155">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="9e6fe-155">Greater than zero</span></span> 
 </term><description><span data-ttu-id="9e6fe-156"><paramref name="x" /> следует за <paramref name="y" /> в порядке сортировки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-156"><paramref name="x" /> follows <paramref name="y" /> in the sort order.</span></span>  
  
<span data-ttu-id="9e6fe-157">- или -</span><span class="sxs-lookup"><span data-stu-id="9e6fe-157">-or-</span></span> 
 <span data-ttu-id="9e6fe-158"><paramref name="y" /> имеет значение <see langword="null" />, а <paramref name="x" /> не имеет значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-158"><paramref name="y" /> is <see langword="null" /> and <paramref name="x" /> is not <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-159">Метод <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> немного более эффективен, чем метод <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>, поскольку для сравнения не требуется преобразование аргументов `x` и `y`.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-159">The <xref:System.StringComparer.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method is slightly more efficient than the <xref:System.StringComparer.Compare%28System.Object%2CSystem.Object%29?displayProperty=nameWithType> method because no conversion of the `x` and `y` arguments is needed to perform the comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, ignoreCase As Boolean) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * bool -&gt; StringComparer" Usage="System.StringComparer.Create (culture, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="9e6fe-160">Язык и региональные параметры, лингвистические правила которых используются для сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-160">A culture whose linguistic rules are used to perform a string comparison.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="9e6fe-161">Значение <see langword="true" />, чтобы в операциях сравнения регистр не учитывался; значение <see langword="false" /> для учета регистра в операциях сравнения.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-161"><see langword="true" /> to specify that comparison operations be case-insensitive; <see langword="false" /> to specify that comparison operations be case-sensitive.</span></span></param>
        <summary><span data-ttu-id="9e6fe-162">Создает объект <see cref="T:System.StringComparer" /> и сравнивает строки в соответствии с правилами заданного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-162">Creates a <see cref="T:System.StringComparer" /> object that compares strings according to the rules of a specified culture.</span></span></summary>
        <returns><span data-ttu-id="9e6fe-163">Новый объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк в соответствии с правилами сравнения, используемыми параметром <paramref name="culture" />, и правилом учета регистра параметра <paramref name="ignoreCase" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-163">A new <see cref="T:System.StringComparer" /> object that performs string comparisons according to the comparison rules used by the <paramref name="culture" /> parameter and the case rule specified by the <paramref name="ignoreCase" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9e6fe-164">В следующем примере кода демонстрируются свойства и метод <xref:System.StringComparer.Create%2A> класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-164">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="9e6fe-165">В примере показано, как различные объекты <xref:System.StringComparer> сортируют три версии Латинской буквы I.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-165">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e6fe-166">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-166"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static StringComparer Create (System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer Create(class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (culture As CultureInfo, options As CompareOptions) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ Create(System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Create : System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; StringComparer" Usage="System.StringComparer.Create (culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="9e6fe-167">Язык и региональные параметры, лингвистические правила которых используются для сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-167">A culture whose linguistic rules are used to perform a string comparison.</span></span></param>
        <param name="options"><span data-ttu-id="9e6fe-168">Поразрядное сочетание значений <see cref="T:System.Globalization.CompareOptions" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-168">A bitwise combination of the <see cref="T:System.Globalization.CompareOptions" /> values.</span></span></param>
        <summary><span data-ttu-id="9e6fe-169">Создает объект <see cref="T:System.StringComparer" />, который сравнивает строки в соответствии с правилами заданного языка и региональных параметров и параметрами строки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-169">Creates a <see cref="T:System.StringComparer" /> object that compares strings according to the rules of a specified culture and string options.</span></span></summary>
        <returns><span data-ttu-id="9e6fe-170">Новый объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк в соответствии с правилами сравнения, используемыми параметром <paramref name="culture" />, и указанными <paramref name="options" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-170">A new <see cref="T:System.StringComparer" /> object that performs string comparisons according to the comparison rules used by the <paramref name="culture" /> parameter and the specified <paramref name="options" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e6fe-171">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-171"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e6fe-172"><paramref name="options" /> имеет недопустимые флаги.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-172"><paramref name="options" /> has invalid flags.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : StringComparer" Usage="System.StringComparer.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e6fe-173">Получает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк с учетом регистра, используя правила сравнения строк по словам для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-173">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the current culture.</span></span></summary>
        <value><span data-ttu-id="9e6fe-174">Новый объект <see cref="T:System.StringComparer" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-174">A new <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-175"><xref:System.StringComparer>, возвращаемое свойством <xref:System.StringComparer.CurrentCulture%2A>, можно использовать, если строки лингвистически важны.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-175">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCulture%2A> property can be used when strings are linguistically relevant.</span></span> <span data-ttu-id="9e6fe-176">Например, если пользователю выводятся строки или строки являются результатом взаимодействия с пользователем, то для упорядочивания строковых данных следует использовать сравнение строк с учетом языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-176">For example, if strings are displayed to the user, or if strings are the result of user interaction, culture-sensitive string comparison should be used to order the string data.</span></span>  
  
 <span data-ttu-id="9e6fe-177">Текущий язык и региональные параметры — это <xref:System.Globalization.CultureInfo> объект, связанный с текущим потоком.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-177">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread.</span></span>  
  
 <span data-ttu-id="9e6fe-178">Свойство <xref:System.StringComparer.CurrentCulture%2A> фактически возвращает экземпляр анонимного класса, производного от класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-178">The <xref:System.StringComparer.CurrentCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="9e6fe-179">Каждый вызов свойства <xref:System.StringComparer.CurrentCulture%2A> `get` метод доступа возвращает новый объект <xref:System.StringComparer>, как показано в следующем коде.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-179">Each call to the <xref:System.StringComparer.CurrentCulture%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#1)]
 [!code-vb[System.StringComparer.CurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#1)]  
  
 <span data-ttu-id="9e6fe-180">Чтобы повысить производительность, можно сохранить <xref:System.StringComparer> объект в локальной переменной, а не получить значение свойства <xref:System.StringComparer.CurrentCulture%2A> несколько раз.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-180">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCulture%2A> property multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e6fe-181">В следующем примере кода демонстрируются свойства и метод <xref:System.StringComparer.Create%2A> класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-181">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="9e6fe-182">В примере показано, как различные объекты <xref:System.StringComparer> сортируют три версии Латинской буквы I.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-182">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="9e6fe-183">Рекомендации по использованию строк в .NET</span><span class="sxs-lookup"><span data-stu-id="9e6fe-183">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer CurrentCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer CurrentCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ CurrentCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCultureIgnoreCase : StringComparer" Usage="System.StringComparer.CurrentCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e6fe-184">Получает объект <see cref="T:System.StringComparer" />, выполняющий сравнения строк без учета регистра, используя правила сравнения строк по словам для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-184">Gets a <see cref="T:System.StringComparer" /> object that performs case-insensitive string comparisons using the word comparison rules of the current culture.</span></span></summary>
        <value><span data-ttu-id="9e6fe-185">Новый объект для сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-185">A new object for string comparison.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-186">Текущий язык и региональные параметры — это <xref:System.Globalization.CultureInfo> объект, связанный с текущим потоком; Он возвращается свойством <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-186">The current culture is the <xref:System.Globalization.CultureInfo> object associated with the current thread; it is returned by the <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType> property.</span></span>
  
 <span data-ttu-id="9e6fe-187"><xref:System.StringComparer>, возвращаемое свойством <xref:System.StringComparer.CurrentCultureIgnoreCase%2A>, можно использовать, если строки лингвистически важны, но их регистр не имеет.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-187">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property can be used when strings are linguistically relevant but their case is not.</span></span> <span data-ttu-id="9e6fe-188">Например, если пользователю выводятся строки, но регистр не важен, сравнение строк с учетом языка и региональных параметров, без учета регистра, должно быть использовано для упорядочения строковых данных.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-188">For example, if strings are displayed to the user but case is unimportant, culture-sensitive, case-insensitive string comparison should be used to order the string data.</span></span>  

[!INCLUDE[platform-note](~/includes/c-and-posix-cultures.md)]  

 <span data-ttu-id="9e6fe-189">Свойство <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> фактически возвращает экземпляр анонимного класса, производного от класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-189">The <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 <span data-ttu-id="9e6fe-190">Каждый вызов свойства <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> `get` метод доступа возвращает новый объект <xref:System.StringComparer>, как показано в следующем коде.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-190">Each call to the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property `get` accessor returns a new <xref:System.StringComparer> object, as the following code shows.</span></span>  
  
 [!code-csharp[System.StringComparer.CurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/cs/CompareObjects.cs#2)]
 [!code-vb[System.StringComparer.CurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer.CurrentCulture/vb/CompareObjects.vb#2)]  
  
 <span data-ttu-id="9e6fe-191">Чтобы повысить производительность, можно сохранить <xref:System.StringComparer> объект в локальной переменной, а не получить значение свойства <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> несколько раз.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-191">To improve performance, you can store the <xref:System.StringComparer> object in a local variable rather than retrieve the value of the <xref:System.StringComparer.CurrentCultureIgnoreCase%2A> property multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="9e6fe-192">Рекомендации по использованию строк в .NET</span><span class="sxs-lookup"><span data-stu-id="9e6fe-192">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e6fe-193">При переопределении в производном классе позволяет определить, равны ли два объекта или две строки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-193">When overridden in a derived class, indicates whether two objects or strings are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(object x, object y) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As Object, y As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ x, System::Object ^ y);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.Equals : obj * obj -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object x, object y) cil managed" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Object ^ x, System::Object ^ y);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9e6fe-194">Объект, сравниваемый с <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-194">An object to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="9e6fe-195">Объект, сравниваемый с <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-195">An object to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="9e6fe-196">При переопределении в производном классе позволяет определить, равны ли два объекта.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-196">When overridden in a derived class, indicates whether two objects are equal.</span></span></summary>
        <returns><span data-ttu-id="9e6fe-197">Значение <see langword="true" />, если параметры <paramref name="x" /> и <paramref name="y" /> указывают на один и тот же объект или если параметры <paramref name="x" /> и <paramref name="y" /> относятся к одному и тому же типу объектов и эти объекты равны, или же если оба параметра <paramref name="x" /> и <paramref name="y" /> равны <see langword="null" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-197"><see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are both the same type of object and those objects are equal, or both <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-198">Так как среда выполнения не требуется для распаковки `x` или `y` если они являются типами значений или пытаются попытаться привести `x` или `y` к строкам, если они являются ссылочными типами, метод <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> может быть немного более эффективным, чем метод <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-198">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (string x, string y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string x, string y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.Equals(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As String, y As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(System::String ^ x, System::String ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * string -&gt; bool" Usage="stringComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
        <Parameter Name="y" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9e6fe-199">Строка, сравниваемая с параметром <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-199">A string to compare to <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="9e6fe-200">Строка, сравниваемая с параметром <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-200">A string to compare to <paramref name="x" />.</span></span></param>
        <summary><span data-ttu-id="9e6fe-201">При переопределении в производном классе позволяет определить, равны ли две строки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-201">When overridden in a derived class, indicates whether two strings are equal.</span></span></summary>
        <returns><span data-ttu-id="9e6fe-202">Значение <see langword="true" />, если параметры <paramref name="x" /> и <paramref name="y" /> указывают не один и тот же объект или если параметры <paramref name="x" /> и <paramref name="y" /> равны, или же если параметры <paramref name="x" /> и <paramref name="y" /> равны <see langword="null" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-202"><see langword="true" /> if <paramref name="x" /> and <paramref name="y" /> refer to the same object, or <paramref name="x" /> and <paramref name="y" /> are equal, or <paramref name="x" /> and <paramref name="y" /> are <see langword="null" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-203">Так как среда выполнения не требуется для распаковки `x` или `y` если они являются типами значений или пытаются попытаться привести `x` или `y` к строкам, если они являются ссылочными типами, метод <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> может быть немного более эффективным, чем метод <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-203">Because the runtime does not have to unbox `x` or `y` if they are value types or attempt to downcast `x` or `y` to strings if they are reference types, the <xref:System.StringComparer.Equals%28System.String%2CSystem.String%29> method may be slightly more efficient than the <xref:System.StringComparer.Equals%28System.Object%2CSystem.Object%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromComparison">
      <MemberSignature Language="C#" Value="public static StringComparer FromComparison (StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.StringComparer FromComparison(valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.FromComparison(System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromComparison (comparisonType As StringComparison) As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static StringComparer ^ FromComparison(StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member FromComparison : StringComparison -&gt; StringComparer" Usage="System.StringComparer.FromComparison comparisonType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonType" Type="System.StringComparison" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="comparisonType"><span data-ttu-id="9e6fe-204">Экземпляр функции сравнения строк для преобразования.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-204">A string comparer instance to convert.</span></span></param>
        <summary><span data-ttu-id="9e6fe-205">Преобразует указанный экземпляр <see cref="T:System.StringComparison" /> в экземпляр <see cref="T:System.StringComparer" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-205">Converts the specified <see cref="T:System.StringComparison" /> instance to a <see cref="T:System.StringComparer" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9e6fe-206">Экземпляр <see cref="T:System.StringComparer" />, представляющий эквивалентное значение указанного экземпляра <see cref="T:System.StringComparison" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-206">A <see cref="T:System.StringComparer" /> instance representing the equivalent value of the specified <see cref="T:System.StringComparison" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e6fe-207">Указанное сравнение строк не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-207">The specified string comparison is not supported.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9e6fe-208">При переопределении в производном классе получает хэш-код для текущего объекта <see cref="T:System.StringComparer" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-208">When overridden in a derived class, gets the hash code for the current <see cref="T:System.StringComparer" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHashCode(object obj) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Object ^ obj);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : obj -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Object ^ obj);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9e6fe-209">Объект.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-209">An object.</span></span></param>
        <summary><span data-ttu-id="9e6fe-210">При переопределении в производном классе возвращает хэш-код для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-210">When overridden in a derived class, gets the hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="9e6fe-211">32-разрядный хэш-код, вычисленный на основе значения параметра <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-211">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-212">Метод <xref:System.StringComparer.GetHashCode%28System.String%29> более эффективен, чем метод <xref:System.StringComparer.GetHashCode%2A>, так как для выполнения операции не требуется распаковка параметра `obj`.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-212">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%2A> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="9e6fe-213">Метод <xref:System.StringComparer.GetHashCode%28System.Object%29> выделяет объем памяти, пропорциональный размеру `obj` для вычисления хэш-кода `obj`.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-213">The <xref:System.StringComparer.GetHashCode%28System.Object%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="9e6fe-214">В случае с большими строками попытка получить хэш-код может вызвать исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-214">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="9e6fe-215">Вместо этого можно использовать альтернативный алгоритм, который выделяет фиксированный объем памяти при вычислении хэш-кодов.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-215">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="9e6fe-216">Чтобы использовать этот алгоритм, добавьте элемент [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) в раздел [\<Runtime >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-216">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e6fe-217">Недостаточно памяти для выделения буфера, который необходим для вычисления хэш-кода.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-217">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e6fe-218">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-218"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (string obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.GetHashCode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(System::String ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string -&gt; int" Usage="stringComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9e6fe-219">Строка.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-219">A string.</span></span></param>
        <summary><span data-ttu-id="9e6fe-220">При переопределении в производном классе возвращает хэш-код указанной строки.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-220">When overridden in a derived class, gets the hash code for the specified string.</span></span></summary>
        <returns><span data-ttu-id="9e6fe-221">32-разрядный хэш-код, вычисленный на основе значения параметра <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-221">A 32-bit signed hash code calculated from the value of the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-222">Метод <xref:System.StringComparer.GetHashCode%28System.String%29> более эффективен, чем метод <xref:System.StringComparer.GetHashCode%28System.Object%29>, так как для выполнения операции не требуется распаковка параметра `obj`.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-222">The <xref:System.StringComparer.GetHashCode%28System.String%29> method is more efficient than the <xref:System.StringComparer.GetHashCode%28System.Object%29> method because the `obj` parameter does not have to be unboxed to perform the operation.</span></span>  
  
 <span data-ttu-id="9e6fe-223">Метод <xref:System.StringComparer.GetHashCode%28System.String%29> выделяет объем памяти, пропорциональный размеру `obj` для вычисления хэш-кода `obj`.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-223">The <xref:System.StringComparer.GetHashCode%28System.String%29> method allocates an amount of memory that is proportional to the size of `obj` to calculate the hash code of `obj`.</span></span> <span data-ttu-id="9e6fe-224">В случае с большими строками попытка получить хэш-код может вызвать исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-224">In the case of large strings, trying to retrieve the hash code can throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="9e6fe-225">Вместо этого можно использовать альтернативный алгоритм, который выделяет фиксированный объем памяти при вычислении хэш-кодов.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-225">Instead, you can use an alternate algorithm that allocates a fixed amount of memory when calculating hash codes.</span></span> <span data-ttu-id="9e6fe-226">Чтобы использовать этот алгоритм, добавьте элемент [< NetFx45_CultureAwareComparerGetHashCode_LongStrings >](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) в раздел [\<Runtime >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) файла конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-226">To use this algorithm, add the [<NetFx45_CultureAwareComparerGetHashCode_LongStrings>](~/docs/framework/configure-apps/file-schema/runtime/netfx45-cultureawarecomparergethashcode-longstrings-element.md) element to the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of your application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9e6fe-227">Недостаточно памяти для выделения буфера, который необходим для вычисления хэш-кода.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-227">Not enough memory is available to allocate the buffer that is required to compute the hash code.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9e6fe-228">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-228"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCulture { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : StringComparer" Usage="System.StringComparer.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e6fe-229">Возвращает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк с учетом регистра, используя правила сравнения строк по словам для инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-229">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive string comparison using the word comparison rules of the invariant culture.</span></span></summary>
        <value><span data-ttu-id="9e6fe-230">Новый объект <see cref="T:System.StringComparer" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-230">A new <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-231"><xref:System.StringComparer>, возвращаемое свойством <xref:System.StringComparer.InvariantCulture%2A>, сравнивает строки лингвистическо соответствующим образом, но не подходит для вывода в какой-либо конкретной культуре.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-231">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCulture%2A> property compares strings in a linguistically relevant manner, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="9e6fe-232">Его основное приложение заключается в упорядочении строк способом, который будет одинаковым в разных культурах.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-232">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="9e6fe-233">Инвариантный язык и региональные параметры — это <xref:System.Globalization.CultureInfo> объект, возвращаемый свойством <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-233">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="9e6fe-234">Свойство <xref:System.StringComparer.InvariantCulture%2A> фактически возвращает экземпляр анонимного класса, производного от класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-234">The <xref:System.StringComparer.InvariantCulture%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e6fe-235">В следующем примере кода демонстрируются свойства и метод <xref:System.StringComparer.Create%2A> класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-235">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="9e6fe-236">В примере показано, как различные объекты <xref:System.StringComparer> сортируют три версии Латинской буквы I.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-236">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="9e6fe-237">Рекомендации по использованию строк в .NET</span><span class="sxs-lookup"><span data-stu-id="9e6fe-237">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvariantCultureIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer InvariantCultureIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer InvariantCultureIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCultureIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ InvariantCultureIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCultureIgnoreCase : StringComparer" Usage="System.StringComparer.InvariantCultureIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e6fe-238">Возвращает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк без учета регистра, используя правила сравнения строк по словам для инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-238">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive string comparison using the word comparison rules of the invariant culture.</span></span></summary>
        <value><span data-ttu-id="9e6fe-239">Новый объект <see cref="T:System.StringComparer" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-239">A new <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-240"><xref:System.StringComparer>, возвращаемое свойством <xref:System.StringComparer.InvariantCultureIgnoreCase%2A>, сравнивает строки в лингвистическо значимом способе, который игнорирует регистр, но не подходит для вывода в какой-либо конкретной культуре.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-240">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property compares strings in a linguistically relevant manner that ignores case, but it is not suitable for display in any particular culture.</span></span> <span data-ttu-id="9e6fe-241">Его основное приложение заключается в упорядочении строк способом, который будет одинаковым в разных культурах.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-241">Its major application is to order strings in a way that will be identical across cultures.</span></span>  
  
 <span data-ttu-id="9e6fe-242">Инвариантный язык и региональные параметры — это <xref:System.Globalization.CultureInfo> объект, возвращаемый свойством <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-242">The invariant culture is the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="9e6fe-243">Свойство <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> фактически возвращает экземпляр анонимного класса, производного от класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-243">The <xref:System.StringComparer.InvariantCultureIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="9e6fe-244">Рекомендации по использованию строк в .NET</span><span class="sxs-lookup"><span data-stu-id="9e6fe-244">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public static StringComparer Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Ordinal As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ Ordinal { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : StringComparer" Usage="System.StringComparer.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e6fe-245">Возвращает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк по порядковому номеру с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-245">Gets a <see cref="T:System.StringComparer" /> object that performs a case-sensitive ordinal string comparison.</span></span></summary>
        <value><span data-ttu-id="9e6fe-246">Объект <see cref="T:System.StringComparer" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-246">A <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-247"><xref:System.StringComparer>, возвращаемое свойством <xref:System.StringComparer.Ordinal%2A>, выполняет простое сравнение байтов, которое не зависит от языка.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-247">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.Ordinal%2A> property performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="9e6fe-248">Это наиболее уместно при сравнении строк, созданных программно, или при сравнении ресурсов с учетом регистра, например паролей.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-248">This is most appropriate when comparing strings that are generated programmatically or when comparing case-sensitive resources such as passwords.</span></span>  
  
 <span data-ttu-id="9e6fe-249">Свойство <xref:System.StringComparer.Ordinal%2A> фактически возвращает экземпляр анонимного класса, производного от класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-249">The <xref:System.StringComparer.Ordinal%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e6fe-250">В следующем примере кода демонстрируются свойства и метод <xref:System.StringComparer.Create%2A> класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-250">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="9e6fe-251">В примере показано, как различные объекты <xref:System.StringComparer> сортируют три версии Латинской буквы I.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-251">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="9e6fe-252">Рекомендации по использованию строк в .NET</span><span class="sxs-lookup"><span data-stu-id="9e6fe-252">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrdinalIgnoreCase">
      <MemberSignature Language="C#" Value="public static StringComparer OrdinalIgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.StringComparer OrdinalIgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.StringComparer.OrdinalIgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OrdinalIgnoreCase As StringComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property StringComparer ^ OrdinalIgnoreCase { StringComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrdinalIgnoreCase : StringComparer" Usage="System.StringComparer.OrdinalIgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9e6fe-253">Возвращает объект <see cref="T:System.StringComparer" />, выполняющий сравнение строк по порядковому номеру без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-253">Gets a <see cref="T:System.StringComparer" /> object that performs a case-insensitive ordinal string comparison.</span></span></summary>
        <value><span data-ttu-id="9e6fe-254">Объект <see cref="T:System.StringComparer" />.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-254">A <see cref="T:System.StringComparer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e6fe-255"><xref:System.StringComparer>, возвращаемое свойством <xref:System.StringComparer.OrdinalIgnoreCase%2A>, обрабатывает символы в строках для сравнения, как если бы они были преобразованы в верхний регистр с использованием соглашений инвариантного языка и региональных параметров, а затем выполняет простое однобайтовое сравнение, независимое от языка.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-255">The <xref:System.StringComparer> returned by the <xref:System.StringComparer.OrdinalIgnoreCase%2A> property treats the characters in the strings to compare as if they were converted to uppercase using the conventions of the invariant culture, and then performs a simple byte comparison that is independent of language.</span></span> <span data-ttu-id="9e6fe-256">Это наиболее уместно при сравнении строк, созданных программно, или при сравнении ресурсов без учета регистра, таких как пути и имена файлов.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-256">This is most appropriate when comparing strings that are generated programmatically or when comparing case-insensitive resources such as paths and filenames.</span></span>  
  
 <span data-ttu-id="9e6fe-257">Свойство <xref:System.StringComparer.OrdinalIgnoreCase%2A> фактически возвращает экземпляр анонимного класса, производного от класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-257">The <xref:System.StringComparer.OrdinalIgnoreCase%2A> property actually returns an instance of an anonymous class derived from the <xref:System.StringComparer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e6fe-258">В следующем примере кода демонстрируются свойства и метод <xref:System.StringComparer.Create%2A> класса <xref:System.StringComparer>.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-258">The following code example demonstrates the properties and the <xref:System.StringComparer.Create%2A> method of the <xref:System.StringComparer> class.</span></span> <span data-ttu-id="9e6fe-259">В примере показано, как различные объекты <xref:System.StringComparer> сортируют три версии Латинской буквы I.</span><span class="sxs-lookup"><span data-stu-id="9e6fe-259">The example illustrates how different <xref:System.StringComparer> objects sort three versions of the Latin letter I.</span></span>  
  
 [!code-cpp[System.StringComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.StringComparer/cpp/omni.cpp#1)]
 [!code-csharp[System.StringComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.StringComparer/cs/omni.cs#1)]
 [!code-vb[System.StringComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.StringComparer/vb/omni.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/best-practices-strings.md"><span data-ttu-id="9e6fe-260">Рекомендации по использованию строк в .NET</span><span class="sxs-lookup"><span data-stu-id="9e6fe-260">Best Practices for Using Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1" />
        <Parameter Name="y" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StringComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
