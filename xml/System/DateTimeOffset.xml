<Type Name="DateTimeOffset" FullName="System.DateTimeOffset">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a46ec7b40fa37bf3284716b81b91167081d06951" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996344" /></Metadata><TypeSignature Language="C#" Value="public struct DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeOffset extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IEquatable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTimeOffset" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTimeOffset&#xA;Implements IComparable, IComparable(Of DateTimeOffset), IDeserializationCallback, IEquatable(Of DateTimeOffset), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DateTimeOffset = struct&#xA;    interface IFormattable&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет момент времени, который обычно выражается в виде даты и времени суток, относительно времени в формате UTC.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset> Структура включает <xref:System.DateTime> значение, вместе с <xref:System.DateTimeOffset.Offset%2A> свойство, которое определяет разницу между текущим <xref:System.DateTimeOffset> экземпляра даты и времени по Гринвичу (UTC). Так как она точно определяет значение даты и времени относительно UTC, <xref:System.DateTimeOffset> структуры не включает `Kind` члена, как <xref:System.DateTime> структуры. Он представляет даты и времени со значениями в формате UTC, в диапазоне от 12:00:00 (полночь), 1 января 0001 года (нашей эры), 11:59:59 вечера, 31 декабря 9999 года нашей эры. (C.E.).  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 Компонент времени <xref:System.DateTimeOffset> значение измеряется в единицах 100-наносекундных тактов вызывается и определенной даты — количество тактов с 00:00 1 января 0001 года нашей эры. (C.E.) в <xref:System.Globalization.GregorianCalendar> календаря. Объект <xref:System.DateTimeOffset> всегда выражается в контексте явно или календарь по умолчанию. Тактов, которое относится к leap секунд не включаются в общее число тактов.  
  
 Несмотря на то что <xref:System.DateTimeOffset> значение включает смещение, не структуру данных, полностью поддерживающих часовые пояса. Несмотря на то одной из характеристик часового пояса смещения от UTC, он позволяет однозначно определить часовой пояс. Не только в разных часовых поясов используют то же смещение относительно времени UTC, но смещение из одного часового пояса изменяется, если он обнаруживает ситуации летнего времени. Это означает, что как только <xref:System.DateTimeOffset> значение часовым поясом, могут не быть однозначно связаны обратно в его исходный часовой пояс.  
  
 Так как <xref:System.DateTimeOffset> — это структура <xref:System.DateTimeOffset> объект, который был объявлен, но не инициализирован содержит значения по умолчанию для каждого из полей его участников. Это означает, что его <xref:System.DateTimeOffset.DateTime%2A> свойству <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> и его <xref:System.DateTimeOffset.Offset%2A> свойству <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.  
  
 Вы можете создать новую <xref:System.DateTimeOffset> значение путем вызова перегрузок конструктора, которые похожи на перегруженных конструкторов для <xref:System.DateTime> структуры. Также можно создать новый <xref:System.DateTimeOffset> значение, назначив ей <xref:System.DateTime> значение. Это неявное преобразование; он не требуется оператор приведения (в C#) или вызова метода преобразования (в Visual Basic). Также можно инициализировать <xref:System.DateTimeOffset> значение из строкового представления даты и времени путем вызова ряд статическую строку, синтаксический анализ методы, которые включают <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, и <xref:System.DateTimeOffset.TryParseExact%2A>.  
  
 Члены <xref:System.DateTimeOffset> структура предоставляют функциональные возможности в следующих областях:  
  
-   Арифметике дат и времени.  
  
     Можно добавить или вычесть дат или временных интервалов от конкретного <xref:System.DateTimeOffset> значение. Арифметические операции с <xref:System.DateTimeOffset> значения, в отличие от с <xref:System.DateTime> компенсировать различия смещение по времени значения, при возврате результата. Например, в следующем коде используется <xref:System.DateTime> переменные для вычитания текущего местного времени от текущего времени UTC. В этом коде используется <xref:System.DateTimeOffset> переменные для выполнения одной операции. Вычитание с <xref:System.DateTime> значения Возвращает разность местного часового пояса от времени UTC, при вычитании с <xref:System.DateTimeOffset> значения возвращает <xref:System.TimeSpan.Zero?displayProperty=nameWithType>.  
  
     [!code-csharp[System.DateTimeOffset.Type#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Type/cs/Type.cs#1)]
     [!code-vb[System.DateTimeOffset.Type#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Type/vb/Type.vb#1)]  
  
-   Операции преобразования типов.  
  
     Вы можете преобразовать <xref:System.DateTimeOffset> значения <xref:System.DateTimeOffset.DateTime%2A> значения и наоборот.  
  
-   Время обработки и извлечения операции.  
  
     Вы можете извлекать даты или времени <xref:System.DateTimeOffset> значение. Также можно получить значение конкретного <xref:System.DateTimeOffset> компонент, например год или месяц.  

   > [!NOTE]
   >  Если вы работаете со значением тактов, что вы хотите преобразовать в другой интервал времени, например минут или секунд, следует использовать <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, или <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> константу, чтобы выполнить преобразование. Например, добавить время в секундах, представленные на указанное число тактов к <xref:System.DateTimeOffset.Second%2A> компонент <xref:System.DateTimeOffset> значение, можно использовать выражение `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  
  

-   Преобразование даты и времени.  
  
     Вы можете преобразовать любой <xref:System.DateTimeOffset> значение в другой <xref:System.DateTimeOffset> значение, представляющее тот же момент времени в другом часовом поясе. Тем не менее, правила коррекции часовых поясов применяются только в случае использования <xref:System.DateTimeOffset.ToLocalTime%2A> метод, который преобразует <xref:System.DateTimeOffset> значение даты и времени в часового пояса локальной системы.  
  
-   Сравнение дат и времени.  
  
     Можно определить ли какая-либо определенной <xref:System.DateTimeOffset> значение предшествует, совпадает или расположен позже, чем другой <xref:System.DateTimeOffset> значение. Перед сравнением, все значения преобразуются в формат UTC.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/datetime/choosing-between-datetime.md">Выбор между типами DateTime, DateTimeOffset, TimeSpan и TimeZoneInfo</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">Пример. Служебная программа форматирования .NET Framework 4</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : DateTime -&gt; DateTimeOffset" Usage="new System.DateTimeOffset dateTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime">Дата и время.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного значения <see cref="T:System.DateTime" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор поведение зависит от значения <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство `dateTime` параметр:  
  
-   Если значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> — <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, <xref:System.DateTimeOffset.DateTime%2A> свойства нового экземпляра задана равной `dateTime`и <xref:System.DateTimeOffset.Offset%2A> задано равным <xref:System.TimeSpan.Zero>.  
  
-   Если значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> — <xref:System.DateTimeKind.Local?displayProperty=nameWithType> или <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, <xref:System.DateTimeOffset.DateTime%2A> свойства нового экземпляра задана равной `dateTime`и <xref:System.DateTimeOffset.Offset%2A> свойство имеет значение равное смещению текущего часового пояса локальной системы.  
  
   
  
## Examples  
 В следующем примере показано как значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство `dateTime` параметр влияет на значение даты и времени, который возвращается этим конструктором.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#1)]
 [!code-vb[System.DateTimeOffset.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время в формате UTC, которые получаются в результате применения смещения, более раннего чем <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Дата и время в формате UTC, которые получаются в результате применения смещения, более позднего чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : DateTime * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (dateTime, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dateTime">Дата и время.</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного значения <see cref="T:System.DateTime" /> и смещения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор поведение отчасти зависит от значения <xref:System.DateTime.Kind%2A> свойство `dateTime` параметр:  
  
-   Если значение <xref:System.DateTime.Kind%2A> — <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, значение `offset` параметр должен быть 0 или <xref:System.ArgumentException> возникает исключение.  
  
-   Если значение <xref:System.DateTime.Kind%2A> — <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, значение `offset` параметр должен быть равным смещению местного часового пояса от времени в формате UTC для данной конкретной даты или <xref:System.ArgumentException> возникает исключение.  
  
-   Если значение <xref:System.DateTime.Kind%2A> — <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, `offset` параметр может иметь любое допустимое значение.  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.DateTimeOffset> объект с даты и времени смещение местного часового пояса, при этом часовом поясе не известны заранее.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#3)]
 [!code-vb[System.DateTimeOffset.Constructors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Utc" />, а <paramref name="offset" /> не равно нулю.  
  
-или- 
 <paramref name="dateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Local" />, а <paramref name="offset" /> не равно смещению местного часового пояса в системе.  
  
-или- 
 <paramref name="offset" /> не указано в целых минутах.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> меньше –14 часов или больше 14 часов.  
  
-или- 
 Значение <see cref="P:System.DateTimeOffset.UtcDateTime" /> меньше <see cref="F:System.DateTimeOffset.MinValue" /> или больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (long ticks, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(long ticks, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int64 * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (ticks, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ticks">Дата и время, представленные в виде числа 100-наносекундных интервалов, прошедших с 00:00 1 января 0001 г.</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного количества тактов и смещения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, которая пытается вызвать <xref:System.DateTimeOffset.%23ctor%2A> конструктора для создания <xref:System.DateTimeOffset> значений с местное время и смещение Кроме что местного времени зоны создает исключение <xref:System.ArgumentException>. Можно использовать эту перегрузку <xref:System.DateTimeOffset> конструктор, чтобы обойти это ограничение. В следующем примере используется количество тактов в местное время для создания экземпляра <xref:System.DateTimeOffset> значение, смещение которого не обязательно для местного времени:  
  
 [!code-csharp[System.DateTimeOffset.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#4)]
 [!code-vb[System.DateTimeOffset.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#4)]  
  
   
  
## Examples  
 В следующем примере инициализируется <xref:System.DateTimeOffset> объекта с помощью количество тактов в произвольной дате (в данном случае 16 июля 2007 г. в 13:32) со смещением-5.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#2)]
 [!code-vb[System.DateTimeOffset.Constructors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> не указано в целых минутах.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Свойство <see cref="P:System.DateTimeOffset.UtcDateTime" /> является более ранним чем <see cref="F:System.DateTimeOffset.MinValue" />, или более поздним чем <see cref="F:System.DateTimeOffset.MaxValue" />.  
  
-или- 
 Значение <paramref name="ticks" /> меньше <see langword="DateTimeOffset.MinValue.Ticks" /> или больше <see langword="DateTimeOffset.MaxValue.Ticks" />.  
  
-или- 
 <paramref name="Offset" /> меньше -14 часов или больше 14 часов.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Год (от 1 до 9999).</param>
        <param name="month">Месяц (от 1 до 12).</param>
        <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
        <param name="hour">Часы (от 0 до 23).</param>
        <param name="minute">Минуты (от 0 до 59).</param>
        <param name="second">Секунды (от 0 до 59).</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя указанный год, месяц, день, час, минуту, секунду и смещение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор интерпретирует `year`, `month`, и `day` как год, месяц и день по григорианскому календарю. Для создания экземпляра <xref:System.DateTimeOffset> значение, используя год, месяц и день в календаре на другой, вызов <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> конструктор.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.DateTimeOffset> объекта с помощью <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> перегрузку конструктора.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#5)]
 [!code-vb[System.DateTimeOffset.Constructors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="year" /> меньше единицы или больше 9999.  
  
-или- 
 Значение <paramref name="month" /> меньше единицы или больше 12.  
  
-или- 
 Значение параметра <paramref name="day" /> меньше единицы или больше чем число дней в параметре <paramref name="month" />.  
  
-или- 
 Параметр <paramref name="hour" /> меньше нуля или больше 23.  
  
-или- 
 Параметр <paramref name="minute" /> меньше 0 или больше 59.  
  
-или- 
 Параметр <paramref name="second" /> меньше 0 или больше 59.  
  
-или- 
 Значение параметра <paramref name="offset" /> меньше –14 часов или больше 14 часов.  
  
-или- 
Свойство <see cref="P:System.DateTimeOffset.UtcDateTime" /> является более ранним чем <see cref="F:System.DateTimeOffset.MinValue" />, или более поздним чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * int * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, millisecond, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Год (от 1 до 9999).</param>
        <param name="month">Месяц (от 1 до 12).</param>
        <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
        <param name="hour">Часы (от 0 до 23).</param>
        <param name="minute">Минуты (от 0 до 59).</param>
        <param name="second">Секунды (от 0 до 59).</param>
        <param name="millisecond">Миллисекунды (от 0 до 999).</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя указанные год, месяц, день, час, минуту, секунду, миллисекунду и смещение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор интерпретирует `year`, `month`, и `day` как год, месяц и день по григорианскому календарю. Для создания экземпляра <xref:System.DateTimeOffset> значение, используя год, месяц и день в календаре на другой, вызов <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> конструктор.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.DateTimeOffset> объекта с помощью <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> перегрузку конструктора.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#7)]
 [!code-vb[System.DateTimeOffset.Constructors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="year" /> меньше единицы или больше 9999.  
  
-или- 
 Значение <paramref name="month" /> меньше единицы или больше 12.  
  
-или- 
 Значение параметра <paramref name="day" /> меньше единицы или больше чем число дней в параметре <paramref name="month" />.  
  
-или- 
 Параметр <paramref name="hour" /> меньше нуля или больше 23.  
  
-или- 
 Параметр <paramref name="minute" /> меньше 0 или больше 59.  
  
-или- 
 Параметр <paramref name="second" /> меньше 0 или больше 59.  
  
-или- 
 Параметр <paramref name="millisecond" /> имеет значение меньше 0 или больше 999.  
  
-или- 
 Параметр <paramref name="offset" /> меньше –14 или больше 14.  
  
-или- 
Свойство <see cref="P:System.DateTimeOffset.UtcDateTime" /> является более ранним чем <see cref="F:System.DateTimeOffset.MinValue" />, или более поздним чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * int * System.Globalization.Calendar * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, millisecond, calendar, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.TimeSpan" Index="8" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year">Год.</param>
        <param name="month">Месяц (от 1 до 12).</param>
        <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
        <param name="hour">Часы (от 0 до 23).</param>
        <param name="minute">Минуты (от 0 до 59).</param>
        <param name="second">Секунды (от 0 до 59).</param>
        <param name="millisecond">Миллисекунды (от 0 до 999).</param>
        <param name="calendar">Календарь, используемый для анализа параметров <paramref name="year" />, <paramref name="month" /> и <paramref name="day" />.</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя указанные год, месяц, день, час, минуту, секунду, миллисекунду и смещение для заданного календаря.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `year`, `month`, `day`, `hour`, `minute`, `second`, И `millisecond` все параметры отражают значения, выраженное в календаре, определенном по `calendar` параметр. Исключение возникает в том случае, если эти значения даты и времени, которые невозможно выразить с помощью данного календаря.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]   

## Examples  
 В следующем примере используется экземплярами <xref:System.Globalization.HebrewCalendar> класс и <xref:System.Globalization.HijriCalendar> класса для создания экземпляра <xref:System.DateTimeOffset> значение. Дата отображается в консоли с использованием соответствующих календарей и григорианского календаря.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#8)]
 [!code-vb[System.DateTimeOffset.Constructors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="calendar" /> не может иметь значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="year" /> меньше заданного для параметра <paramref name="calendar" /> значения <see langword="MinSupportedDateTime.Year" /> или больше чем <see langword="MaxSupportedDateTime.Year" />.  
  
-или- 
 Значение параметра <paramref name="month" /> меньше или больше чем число месяцев, заданное в параметре <paramref name="year" /> параметра <paramref name="calendar" />.  
  
-или- 
 Значение параметра <paramref name="day" /> меньше единицы или больше чем число дней в параметре <paramref name="month" />.  
  
-или- 
 Параметр <paramref name="hour" /> меньше нуля или больше 23.  
  
-или- 
 Параметр <paramref name="minute" /> меньше 0 или больше 59.  
  
-или- 
 Параметр <paramref name="second" /> меньше 0 или больше 59.  
  
-или- 
 Параметр <paramref name="millisecond" /> имеет значение меньше 0 или больше 999.  
  
-или- 
 Значение параметра <paramref name="offset" /> меньше –14 часов или больше 14 часов.  
  
-или- 
Параметры <paramref name="year" />, <paramref name="month" /> и <paramref name="day" /> не удается представить как значения типа даты и времени.  
  
-или- 
Свойство <see cref="P:System.DateTimeOffset.UtcDateTime" /> является более ранним чем <see cref="F:System.DateTimeOffset.MinValue" />, или более поздним чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTimeOffset Add (TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Add(valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Add(System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Add(TimeSpan timeSpan);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.Add timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeSpan">Объект <see cref="T:System.TimeSpan" />, представляющий положительный или отрицательный интервал времени.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, добавляющий указанный интервал времени к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и интервала времени, представленного параметром <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.DateTimeOffset.Add%2A> метод, чтобы добавить более одного вида интервал времени (дни, часы, минуты, секунды или миллисекунды) в рамках одной операции. Этот метод поведение идентично поведению оператора сложения. <xref:System.DateTimeOffset> Структура также поддерживает добавление специализированные методы (такие как <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, и <xref:System.DateTimeOffset.AddMinutes%2A>) для каждого интервала времени.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `timeSpan` даты и времени.  
  
 <xref:System.DateTimeOffset.Add%2A> Метод не влияет на значение текущего <xref:System.DateTimeOffset> объекта <xref:System.DateTimeOffset.Offset%2A> свойство.  
  
 Так как <xref:System.DateTimeOffset> объект не представляет дату и время в конкретного часового пояса, <xref:System.DateTimeOffset.Add%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 Если `timeSpan` параметр `null`, этот метод возвращает значение исходного объекта <xref:System.DateTimeOffset> объекта без изменений.  
  
   
  
## Examples  
 В следующем примере создается массив <xref:System.TimeSpan> объекты, представляющие время перелета между назначения. <xref:System.DateTimeOffset.Add%2A> Добавляет эти попыток <xref:System.DateTimeOffset> , представляющий время при первоначальной взлете рейсов. Результат соответствует запланированному времени прибытия в пункт назначения.  
  
 [!code-csharp[System.DateTimeOffset.Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#1)]
 [!code-vb[System.DateTimeOffset.Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddDays (double days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddDays(float64 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (days As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddDays(double days);" />
      <MemberSignature Language="F#" Value="member this.AddDays : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddDays days" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="days">Число полных и неполных дней. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное количество полных и неполных дней к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим <see cref="T:System.DateTimeOffset" /> объект и число дней, представленного параметром <paramref name="days" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть параметра `days` параметр является дробная часть суток. Например 4.5 соответствует 4 дней, 12 часов, 0 минут, 0 секунд, 0 миллисекунд. `days` Значения округляются до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `days` даты и времени.  
  
 Так как <xref:System.DateTimeOffset> объект не представляет дату и время в конкретного часового пояса, <xref:System.DateTimeOffset.AddDays%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 Преобразование интервалы времени суток, менее чем за небольшую может приводить к потере точности. Если это создает проблему, можно использовать <xref:System.DateTimeOffset.Add%2A> метод, который позволяет указать более одного вида интервал времени в одном методе и избавляет от необходимости преобразовывать интервалы времени в дробной части дня.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.AddDays%2A> метод, чтобы получить список дат, которые попадают в понедельник, начале в рабочие дни в марте 2008 г.  
  
 [!code-csharp[System.DateTimeOffset.Methods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#2)]
 [!code-vb[System.DateTimeOffset.Methods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddHours (double hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddHours(float64 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (hours As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddHours(double hours);" />
      <MemberSignature Language="F#" Value="member this.AddHours : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddHours hours" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hours" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="hours">Число полных и неполных часов. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, добавляющий заданное количество полных и неполных часов к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества часов, представленного параметром <paramref name="hours" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть параметра `hours` параметр является дробной части часа. Например 4.5 соответствует 4 часа, 30 минут, 0 секунд, 0 миллисекунд. `hours` Значения округляются до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `hours` даты и времени.  
  
 Так как <xref:System.DateTimeOffset> объект не представляет дату и время в конкретного часового пояса, <xref:System.DateTimeOffset.AddHours%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 Преобразование интервалов времени для менее чем за час небольшую может приводить к потере точности. (Например, — одна минута 0,01666 часа.) Если это создает проблему, можно использовать <xref:System.DateTimeOffset.Add%2A> метод, который позволяет указать более одного вида интервал времени в одном методе и избавляет от необходимости преобразовывать интервалы времени в дробной части часа.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.AddHours%2A> метод, чтобы получить список значения времени начала работы сдвигает для неделю и в офисе, который имеет две смены составляет восемь часов в день.  
  
 [!code-csharp[System.DateTimeOffset.Methods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#3)]
 [!code-vb[System.DateTimeOffset.Methods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMilliseconds (double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMilliseconds(float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (milliseconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMilliseconds(double milliseconds);" />
      <MemberSignature Language="F#" Value="member this.AddMilliseconds : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMilliseconds milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="milliseconds">Число полных и неполных миллисекунд. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное число миллисекунд к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества полных миллисекунд, представленных параметром <paramref name="milliseconds" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть параметра `milliseconds` параметр является дробная часть параметра миллисекунды. Например 4.5 соответствует 4 миллисекундам и 5000 тактов, где 1 миллисекунда равна 10 000 тактов. Тем не менее `milliseconds` округляется до ближайшей миллисекунды; все значения, большим или равным.5 округляются.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `milliseconds` даты и времени.  
  
 Так как <xref:System.DateTimeOffset> объект не представляет дату и время в конкретного часового пояса, <xref:System.DateTimeOffset.AddMilliseconds%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMinutes (double minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMinutes(float64 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (minutes As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMinutes(double minutes);" />
      <MemberSignature Language="F#" Value="member this.AddMinutes : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMinutes minutes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minutes" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="minutes">Число полных и неполных минут. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное количество полных и неполных минут к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества минут, представленного параметром <paramref name="minutes" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть параметра `minutes` параметр является дробной части минуты. Например 4.5 соответствует 4 минут, 30 секунд, 0 миллисекунд. `minutes` Значения округляются до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `minutes` даты и времени.  
  
 Так как <xref:System.DateTimeOffset> объект не представляет дату и время в конкретного часового пояса, <xref:System.DateTimeOffset.AddMinutes%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 Преобразование интервалов времени для менее чем за минуту небольшую может приводить к потере точности. (Например, одну секунду — 0,01666 минуты). Если это создает проблему, можно использовать <xref:System.DateTimeOffset.Add%2A> метод, который позволяет указать более одного вида интервал времени в одном методе и избавляет от необходимости преобразовывать интервалы времени в дробные части минуты.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMonths(int months);" />
      <MemberSignature Language="F#" Value="member this.AddMonths : int -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMonths months" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months">Число полных месяцев. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, добавляющий заданное число месяцев к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим <see cref="T:System.DateTimeOffset" /> объект и число месяцев, представленного <paramref name="months" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от большинства других методов, которые добавляют одну единицу временного интервала (например, минуты или дни) в значение даты и времени <xref:System.DateTimeOffset.AddMonths%2A> не позволяют добавлять дробную часть месяца. Чтобы добавить время, которое состоит из другие единицы измерения времени, в дополнение к месяцев <xref:System.DateTimeOffset> , используйте <xref:System.DateTimeOffset.Add%2A> метод.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `months` даты и времени.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.AddMonths%2A> метод для отображения даты начала каждого квартала 2007 г.  
  
 [!code-csharp[System.DateTimeOffset.Methods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#4)]
 [!code-vb[System.DateTimeOffset.Methods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddSeconds (double seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddSeconds(float64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (seconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddSeconds(double seconds);" />
      <MemberSignature Language="F#" Value="member this.AddSeconds : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="seconds">Число полных и неполных секунд. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное количество полных и неполных секунд к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества секунд, представленного параметром <paramref name="seconds" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть параметра `seconds` параметр является дробной части секунды. В следующей таблице показаны значения дробных частей секунды.  
  
|Второе значение|Эквивалент|  
|------------------|----------------|  
|0,1 секунды|100 миллисекунд|  
|.01 секунду|10 миллисекунд|  
|.001 секунду|1 миллисекунда|  
  
 `seconds` Значения округляются до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `minutes` даты и времени.  
  
 Так как <xref:System.DateTimeOffset> объект не представляет дату и время в конкретного часового пояса, <xref:System.DateTimeOffset.AddSeconds%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddTicks (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddTicks(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (ticks As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddTicks(long ticks);" />
      <MemberSignature Language="F#" Value="member this.AddTicks : int64 -&gt; DateTimeOffset" Usage="dateTimeOffset.AddTicks ticks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks">Число 100-наносекундных тактов. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное число тактов к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества тактов, представленного параметром <paramref name="ticks" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Такт представляет 100 наносекунд или одной десятимиллионной секунды. Поскольку — это интервал времени, очень небольшой и точным, все большей единицы измерения времени можно быть выражен как количество тактов, без потери точности.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `minutes` даты и времени.  
  
 Ниже перечислены количество тактов в интервале времени.  
  
|Интервал времени|Число тактов|  
|-------------------|---------------------|  
|Second|10,000,000|  
|Minute|600,000,000|  
|Hour|36,000,000,000|  
|Day|864,000,000,000|  
|Неделя|6,048,000,000,000|  
|Месяц.|Зависит от количества дней в месяце.|  
|Не високосный год|315,360,000,000,000|  
|Високосный год|316,224,000,000,000|  
  
 Так как <xref:System.DateTimeOffset> объект не представляет дату и время в конкретного часового пояса, <xref:System.DateTimeOffset.AddTicks%2A> метод не учитывает правила коррекции для определенного часового пояса, при выполнении арифметических операций.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddYears (int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddYears(int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (years As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddYears(int years);" />
      <MemberSignature Language="F#" Value="member this.AddYears : int -&gt; DateTimeOffset" Usage="dateTimeOffset.AddYears years" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="years">Число лет. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное число лет к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим <see cref="T:System.DateTimeOffset" /> объекта и количества лет, представленного параметром <paramref name="years" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от большинства других методов, которые добавляют одну единицу временного интервала (например, минуты или дни) в значение даты и времени <xref:System.DateTimeOffset.AddYears%2A> не позволяют добавлять дробную часть года. Чтобы добавить время, которое состоит из другие единицы измерения времени, в дополнение к лет <xref:System.DateTimeOffset> , используйте <xref:System.DateTimeOffset.Add%2A> метод.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `months` даты и времени.  
  
   
  
## Examples  
 В Соединенных Штатах водительских не может быть выдано лицам младше 16 лет. Следующий пример отображает последней возможной даты, на котором необходимо рождения человека, для законных основаниях водительские.  
  
 [!code-csharp[System.DateTimeOffset.Methods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#6)]
 [!code-vb[System.DateTimeOffset.Methods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (first As DateTimeOffset, second As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="F#" Value="static member Compare : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.DateTimeOffset.Compare (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first">Первый из сравниваемых объектов.</param>
        <param name="second">Второй из сравниваемых объектов.</param>
        <summary>Сравнивает два <see cref="T:System.DateTimeOffset" /> объектов и указывает, является ли первый раньше второго, равным значению второго или более поздней версии, чем второй.</summary>
        <returns>Целое число со знаком, указывающее ли значение <paramref name="first" /> параметр раньше, позже, или то же время, что значение <paramref name="second" /> параметра, как показано в следующей таблице.  
  
 <list type="table"><listheader><term> Возвращаемое значение 
 </term><description> Значение 
 </description></listheader><item><term> Меньше нуля 
 </term><description>Момент, указанный в параметре <paramref name="first" />, наступает раньше, чем момент, указанный в параметре <paramref name="second" />.  
  
 </description></item><item><term> Нуль 
 </term><description><paramref name="first" /> равно <paramref name="second" />.  
  
 </description></item><item><term> Больше нуля 
 </term><description>Момент, указанный в параметре <paramref name="first" />, наступает позже, чем момент, указанный в параметре <paramref name="second" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При выполнении сравнения, метод преобразует оба `first` и `second` параметров в формате UTC (UTC) перед проведением сравнения. Метод эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#1)]
 [!code-vb[System.DateTimeOffset.Syntax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#1)]  
  
 Другими словами <xref:System.DateTimeOffset.Compare%2A> метод определяет, является ли два <xref:System.DateTimeOffset> объекты представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения.  
  
   
  
## Examples  
 В следующем примере показано вызовы <xref:System.DateTimeOffset.Compare%2A> метод для сравнения <xref:System.DateTimeOffset> объектов.  
  
 [!code-csharp[System.DateTimeOffset.Methods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods2.cs#7)]
 [!code-vb[System.DateTimeOffset.Methods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : DateTimeOffset -&gt; int&#xA;override this.CompareTo : DateTimeOffset -&gt; int" Usage="dateTimeOffset.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Объект, сравниваемый с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Сравнивает текущий <see cref="T:System.DateTimeOffset" /> с указанным объектом <see cref="T:System.DateTimeOffset" /> и указывает, является ли текущий объект более ранней, чем же, как или более поздней версии, чем второй <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <returns>Целое число со знаком, показывающее связь между текущим <see cref="T:System.DateTimeOffset" /> объекта и <paramref name="other" />, как показано в следующей таблице.  
  
 <list type="table"><listheader><term> Возвращаемое значение 
 </term><description> Описание 
 </description></listheader><item><term> Меньше нуля 
 </term><description> Текущий <see cref="T:System.DateTimeOffset" /> объекта более ранняя, чем <paramref name="other" />.  
  
 </description></item><item><term> Нуль 
 </term><description> Текущий <see cref="T:System.DateTimeOffset" /> объекта совпадает со значением <paramref name="other" />.  
  
 </description></item><item><term> Больше нуля.  
  
 </term><description> Текущий <see cref="T:System.DateTimeOffset" /> объект является более поздней, чем <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод сравнивает <xref:System.DateTimeOffset> объекты, сравнивая их <xref:System.DateTimeOffset.UtcDateTime%2A> значения; то есть определяет ли два объекта представления одного момента времени и указывает, является ли текущий объект раньше, позже или же, как `other`параметра.  
  
   
  
## Examples  
 В следующем примере показано вызовы <xref:System.DateTimeOffset.CompareTo%2A> метод для сравнения <xref:System.DateTimeOffset> объектов.  
  
 [!code-csharp[System.DateTimeOffset.Methods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods3.cs#8)]
 [!code-vb[System.DateTimeOffset.Methods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods3.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime" Usage="System.DateTimeOffset.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.DateTime" /> значение, представляющее компонент даты текущего <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Объект <see cref="T:System.DateTime" /> значение, представляющее компонент даты текущего <see cref="T:System.DateTimeOffset" /> объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство удаляет любой значительную часть компонента времени из <xref:System.DateTimeOffset> и возвращает только значимый компонент даты. Например если <xref:System.DateTimeOffset> объекта имеет значение даты и времени «1/12/07 16:01:00 + 7:30», это свойство возвращает <xref:System.DateTime> значение «1/12/07 12:00:00 AM». <xref:System.DateTime> Затем можно отобразить с помощью любого из описателей стандартного или настраиваемого формата, которые отображают только даты. (См. разделе "Пример" пример).  
  
 Значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойства возвращаемого <xref:System.DateTime> всегда <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Он не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Для отображения даты без его компонент времени, можно также использовать «D» или «d» описателях; Иллюстрация см. в разделе в подразделе "Пример".  
  
   
  
## Examples  
 В следующем примере извлекается значение <xref:System.DateTimeOffset.Date%2A> свойства для определенной даты. Затем это значение отображается в консоли с использованием некоторых описателей стандартных и настраиваемых формата только дата.  
  
 [!code-csharp[System.DateTimeOffset.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#1)]
 [!code-vb[System.DateTimeOffset.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартного формата даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Собственные строки формата DateTime</related>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.DateTimeOffset.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.DateTime" />, представляющее дату и время текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Дата и время текущего объекта <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.DateTime%2A> Свойство не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Это свойство возвращает значение даты и времени компонент <xref:System.DateTimeOffset> объект, который может быть полезным для выполнения <xref:System.DateTimeOffset> для <xref:System.DateTime> преобразования. Например если <xref:System.DateTimeOffset> объект имеет значение даты и времени «1/12/07 16:01:00 + 7:30», свойство возвращает «1/12/07 16:01:00».  
  
 Значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойства возвращаемого <xref:System.DateTime> объект <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Следующий пример иллюстрирует использование <xref:System.DateTimeOffset.DateTime%2A> свойства для преобразования времени, возвращаемых <xref:System.DateTimeOffset.Now%2A> и <xref:System.DateTimeOffset.UtcNow%2A> свойства <xref:System.DateTime> значения.  
  
 [!code-csharp[System.DateTimeOffset.Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#2)]
 [!code-vb[System.DateTimeOffset.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.LocalDateTime" />
        <related type="Article" href="~/docs/standard/datetime/converting-between-datetime-and-offset.md">Взаимное преобразование структур DateTime и DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Day : int" Usage="System.DateTimeOffset.Day" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает день месяца, представленный текущим <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Компонент дня текущего <see cref="T:System.DateTimeOffset" /> объекта, выраженный как значение от 1 до 31.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Day%2A> Свойство не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента дня объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с помощью описателей настраиваемого формата «d» или «dd».  
  
   
  
## Examples  
 В следующем примере отображается компонент дня <xref:System.DateTimeOffset> объекта тремя разными способами:  
  
-   Извлекая значение <xref:System.DateTimeOffset.Day%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «d».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «dd».  
  
 [!code-csharp[System.DateTimeOffset.Properties#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#10)]
 [!code-vb[System.DateTimeOffset.Properties#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfWeek : DayOfWeek" Usage="System.DateTimeOffset.DayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает день недели, представленный текущим <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Одно из значений перечисления, определяющее день недели текущего <see cref="T:System.DateTimeOffset" /> объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение константы в <xref:System.DayOfWeek> перечисления в диапазоне от <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> для <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>. Если приведенное к целочисленному типу, его значение в диапазоне от нуля (означающее <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) до 6 (что означает <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).  
  
 Название дня недели для определенной даты также можно отобразить с помощью описатель формата «D» или описатель настраиваемого формата «dddd». Пример:  
  
 [!code-csharp[System.DateTimeOffset.Properties#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#4)]
 [!code-vb[System.DateTimeOffset.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#4)]  
  
 Обратите внимание, что строка, возвращаемая вызовом `ToString` метод <xref:System.DayOfWeek> член перечисления, который возвращается этим свойством не локализован. Чтобы извлечь строка, содержащая название дня недели для текущих или заданных региональных параметров, вызовите <xref:System.DateTimeOffset.ToString%2A> метод с помощью описателя настраиваемого формата «dddd». Например, следующий код отображает название дня недели для даты с помощью `fr-fr` языка и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.Properties#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#5)]
 [!code-vb[System.DateTimeOffset.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#5)]  
  
   
  
## Examples  
 Следующий пример отображает название дня недели первого дня каждого месяца 2008 года.  
  
 [!code-csharp[System.DateTimeOffset.Properties#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#3)]
 [!code-vb[System.DateTimeOffset.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfYear : int" Usage="System.DateTimeOffset.DayOfYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает день года, представленный текущим <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>День года текущего <see cref="T:System.DateTimeOffset" /> объекта, выраженный как значение от 1 до 366.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, является ли два <see cref="T:System.DateTimeOffset" /> объекты равны, или <see cref="T:System.DateTimeOffset" /> объект равен указанному объекту.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="override this.Equals : DateTimeOffset -&gt; bool" Usage="dateTimeOffset.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Определяет, является ли текущего <see cref="T:System.DateTimeOffset" /> объект представляет ту же точку во времени, что и указанный <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <returns><see langword="true" /> Если оба <see cref="T:System.DateTimeOffset" /> объекты имеют одинаковые <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед проведением сравнения, этот метод преобразует значения <xref:System.DateTimeOffset> объектов в формате UTC в формате UTC. Метод эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#2)]
 [!code-vb[System.DateTimeOffset.Syntax#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#2)]  
  
 Другими словами <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> метод определяет, является ли два <xref:System.DateTimeOffset> объекты представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения. Чтобы определить, является ли два <xref:System.DateTimeOffset> объекты представляют то же время и имеют одинаковое значение смещения, используйте <xref:System.DateTimeOffset.EqualsExact%2A> метод.  
  
 Объект <xref:System.DateTimeOffset> объект, который не является `null` считается более поздней версии (или выше), чем `null`.  
  
 Эта перегрузка <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> реализует метод <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> метод. Он обеспечивает немного лучшую производительность, чем <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> перегружать, так как `other` параметр не нужно быть преобразован из объекта.  
  
   
  
## Examples  
 В следующем примере показано вызовы <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> тестируемого метода <xref:System.DateTimeOffset> объектов на равенство с текущим <xref:System.DateTimeOffset> объекта.  
  
 [!code-csharp[System.DateTimeOffset.Methods#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#9)]
 [!code-vb[System.DateTimeOffset.Methods#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dateTimeOffset.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, сравниваемый с текущим <see cref="T:System.DateTimeOffset" /> объекта.</param>
        <summary>Определяет, является ли <see cref="T:System.DateTimeOffset" /> объект представляет ту же точку во времени, что и указанный объект.</summary>
        <returns><see langword="true" /> Если <paramref name="obj" /> параметр <see cref="T:System.DateTimeOffset" /> объекта и представляет тот же момент времени, что и текущий <see cref="T:System.DateTimeOffset" /> объекта; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед проведением сравнения, этот метод преобразует значения файла текущего <xref:System.DateTimeOffset> объекта и `obj` параметра в формате UTC в формате UTC. Метод эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#3)]
 [!code-vb[System.DateTimeOffset.Syntax#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#3)]  
  
 Другими словами <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> метод определяет ли текущий <xref:System.DateTimeOffset> объекта и указанного объекта представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения. Чтобы определить, является ли два <xref:System.DateTimeOffset> объекты представляют то же время и имеют одинаковое значение смещения, используйте <xref:System.DateTimeOffset.EqualsExact%2A> метод.  
  
 Если `obj` — `null`, или если тип времени выполнения `obj` не <xref:System.DateTimeOffset>, метод возвращает `false`.  
  
   
  
## Examples  
 Следующий пример показывает ли текущий <xref:System.DateTimeOffset> объект равен некоторые другие <xref:System.DateTimeOffset> объектов, а также с ссылкой на null, а также <xref:System.DateTime> объекта.  
  
 [!code-csharp[System.DateTimeOffset.Methods#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#10)]
 [!code-vb[System.DateTimeOffset.Methods#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (first As DateTimeOffset, second As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="F#" Value="static member Equals : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.Equals (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first">Первый из сравниваемых объектов.</param>
        <param name="second">Второй из сравниваемых объектов.</param>
        <summary>Определяет, являются ли два заданных <see cref="T:System.DateTimeOffset" /> объекты представляют тот же момент времени.</summary>
        <returns><see langword="true" /> Если два <see cref="T:System.DateTimeOffset" /> объекты имеют одинаковые <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед проведением сравнения, этот метод преобразует оба <xref:System.DateTimeOffset> объектов в формате UTC в формате UTC. Метод эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 Другими словами <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> метод определяет, является ли два <xref:System.DateTimeOffset> объекты представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения. Чтобы определить, является ли два <xref:System.DateTimeOffset> объекты представляют то же время и имеют одинаковое значение смещения, используйте <xref:System.DateTimeOffset.EqualsExact%2A> метод.  
  
   
  
## Examples  
 В следующем примере показано вызовы <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> метод для проверки различных пар <xref:System.DateTimeOffset> объектов на предмет равенства.  
  
 [!code-csharp[System.DateTimeOffset.Methods#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#11)]
 [!code-vb[System.DateTimeOffset.Methods#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="EqualsExact">
      <MemberSignature Language="C#" Value="public bool EqualsExact (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EqualsExact(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsExact (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EqualsExact(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="member this.EqualsExact : DateTimeOffset -&gt; bool" Usage="dateTimeOffset.EqualsExact other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Объект, сравниваемый с текущим <see cref="T:System.DateTimeOffset" /> объекта.</param>
        <summary>Определяет ли текущий <see cref="T:System.DateTimeOffset" /> представляет то же время и имеет же смещения указанного <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <returns><see langword="true" /> Если текущий <see cref="T:System.DateTimeOffset" /> объекта и <paramref name="other" /> имеет же значения даты и времени и <see cref="P:System.DateTimeOffset.Offset" /> значение; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Так как разных часовых поясов, совместно используют одно смещение, возвращаемое значение `true` не гарантирует, что текущий и `other` объекта представляют время, в том же часовом поясе.  
  
 В отличие от <xref:System.DateTimeOffset.EqualsExact%2A> метод, перегрузки <xref:System.DateTimeOffset.Equals%2A> метод определять только ли два <xref:System.DateTimeOffset> значения представления одного момента времени. Они не указывают, что два значения имеют ту же дату и время, а также то же смещение.  
  
   
  
## Examples  
 Следующий пример иллюстрирует использование <xref:System.DateTimeOffset.EqualsExact%2A> способ сравнить аналогичные <xref:System.DateTimeOffset> объектов.  
  
 [!code-csharp[System.DateTimeOffset.Methods#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#12)]
 [!code-vb[System.DateTimeOffset.Methods#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromFileTime(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTime : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromFileTime fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime">Время файла Windows, выраженное в тактах.</param>
        <summary>Преобразует заданное время файла Windows в его эквивалент по местному времени.</summary>
        <returns>Объект, представляющий дату и время <paramref name="fileTime" /> со смещением, равным смещению местного времени.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время файла Windows — это 64-разрядное значение, представляющее количество 100-наносекундных интервалов, прошедших с 00:00 1 января 1601 года н. э. (C.E.) Скоординированного времени (UTC). Windows использует время файла для записи, когда приложение создает, обращается к или записывает в файл.  
  
 Время файла Windows доступен напрямую через интерфейс Windows API, вызвав `GetFileTime` функции, которая возвращает `FILETIME` структуры. Единственным параметром этой функции является дескриптором файла, файл времени, сведения о которой требуется получить. Дескриптор файла получается путем вызова `CreateFile` функции. `FILETIME` Структуры `dwHighDateTime` член содержит четыре старшие байты времени файла и его `dwLowDateTime` член содержит четыре байта низкого порядка. В следующем примере показано, как извлечь значения время файла Windows и преобразовать их <xref:System.DateTimeOffset> значения.  
  
 Временной характеристики файла Windows также могут создаваться из <xref:System.DateTime> значения путем вызова <xref:System.DateTime.ToFileTime%2A?displayProperty=nameWithType> и <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=nameWithType> методов и из <xref:System.DateTimeOffset> значения путем вызова <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=nameWithType> метод.  
  
   
  
## Examples  
 В следующем примере Windows API для получения значения времени файлов Windows для исполняемого файла WordPad.  
  
 [!code-csharp[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/cs/FileTime.cs#1)]
 [!code-vb[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/vb/FileTime.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="filetime" /> меньше нуля.  
  
-или- 
 Значение <paramref name="filetime" /> больше значения <see langword="DateTimeOffset.MaxValue.Ticks" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeMilliseconds (long milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeMilliseconds(int64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeMilliseconds (milliseconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeMilliseconds(long milliseconds);" />
      <MemberSignature Language="F#" Value="static member FromUnixTimeMilliseconds : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromUnixTimeMilliseconds milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="milliseconds">Время Unix, выраженное как количество миллисекунд, истекших с 1970-01-01T00:00:00Z (1 января 1970 года, 00:00 UTC). Для времени Unix до этой даты значение отрицательное.</param>
        <summary>Преобразует время в формате Unix, выраженное как количество миллисекунд, истекших с 1970-01-01T00:00:00Z, в значение <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение даты и времени, представляющее тот же момент, что и время в формате Unix.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Offset%2A> Значение свойства, возвращаемого <xref:System.DateTimeOffset> экземпляр является <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, который представляет в формате UTC. Преобразовать во время в конкретного часового пояса путем вызова <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="milliseconds" /> меньше –62 135 596 800 000.  
  
-или- 
 Значение <paramref name="milliseconds" /> больше 253 402 300 799 999.</exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeSeconds (long seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeSeconds(int64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeSeconds (seconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeSeconds(long seconds);" />
      <MemberSignature Language="F#" Value="static member FromUnixTimeSeconds : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromUnixTimeSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="seconds">Время Unix, выраженное как количество секунд, истекших с 1970-01-01T00:00:00Z (1 января 1970 года, 00:00 UTC). Для времени Unix до этой даты значение отрицательное.</param>
        <summary>Преобразует время в формате Unix, выраженное как количество секунд, истекших с 1970-01-01T00:00:00Z, в значение <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение даты и времени, представляющее тот же момент, что и время в формате Unix.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Offset%2A> Значение свойства, возвращаемого <xref:System.DateTimeOffset> экземпляр является <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, который представляет в формате UTC. Преобразовать во время в конкретного часового пояса путем вызова <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="seconds" /> меньше –62 135 596 800.  
  
-или- 
 Значение <paramref name="seconds" /> больше 253 402 300 799.</exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dateTimeOffset.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hour : int" Usage="System.DateTimeOffset.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает часовой компонент времени, представленных текущим <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Часовой компонент текущего <see cref="T:System.DateTimeOffset" /> объекта. В этом свойстве используются 24-часовые часы; значение может меняться в диапазоне от 0 до 23.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Hour%2A> Свойство не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонент часа объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с «H», или описателей настраиваемого формата «HH».  
  
   
  
## Examples  
 В следующем примере отображаются в часах из <xref:System.DateTimeOffset> объекта тремя разными способами:  
  
-   Извлекая значение <xref:System.DateTimeOffset.Hour%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «H».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> описатель формата «HH» метод.  
  
 [!code-csharp[System.DateTimeOffset.Properties#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#6)]
 [!code-vb[System.DateTimeOffset.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalDateTime">
      <MemberSignature Language="C#" Value="public DateTime LocalDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LocalDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.LocalDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LocalDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalDateTime : DateTime" Usage="System.DateTimeOffset.LocalDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.DateTime" /> значение, представляющее локальные дату и время текущего <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Локальные дата и время текущего <see cref="T:System.DateTimeOffset" /> объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При необходимости <xref:System.DateTimeOffset.LocalDateTime%2A> свойство преобразует текущий <xref:System.DateTimeOffset> объекта даты и времени в дату и время локальной системы. Преобразование является из двух этапов:  
  
1.  Свойство преобразует текущий <xref:System.DateTimeOffset> объекта время по Гринвичу (UTC).  
  
2.  Затем оно преобразует UTC в местное время.  
  
 Имеется недопустимое и неоднозначные времена сопоставляются стандартное время местного часового пояса. (Однако преобразования можно создать аномалии: Если <xref:System.DateTimeOffset> отражает значение, которое является производным от локального компьютера, неоднозначные дату и время, значение можно преобразовать в формат UTC, а затем обратно в местное время, которое отличается от исходного.)  Свойство применяется все правила коррекции в местный часовой пояс, при выполнении этого преобразования.  
  
 Это свойство возвращает значение даты и времени компонент <xref:System.DateTimeOffset> объект, который может быть полезным для <xref:System.DateTimeOffset> для <xref:System.DateTime> преобразования. А также выполнять какие-либо необходимое время преобразования, это свойство отличается от <xref:System.DateTimeOffset.DateTime%2A> свойство, задав значение <xref:System.DateTime.Kind%2A> свойства возвращаемого <xref:System.DateTime> объект <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере показано несколько преобразований <xref:System.DateTimeOffset> значения в местное время в США. США. Обратите внимание, что последние три раза являются неоднозначными; свойство отображает все из них одной даты и времени в стандартном тихоокеанском часовом поясе.  
  
 [!code-csharp[System.DateTimeOffset.Properties#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#7)]
 [!code-vb[System.DateTimeOffset.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : DateTimeOffset" Usage="System.DateTimeOffset.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет наибольшее возможное значение типа <see cref="T:System.DateTimeOffset" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этой константы — 23:59:59: 00 + 00:00 12/31/9999.  
  
 <xref:System.DateTimeOffset.MaxValue> Свойство используется для определения ли новое значение <xref:System.DateTimeOffset> объекта или <xref:System.DateTimeOffset> значение, возвращаемое при выполнении арифметических операций совпадает как или более ранней, чем это максимальное значение диапазона. Если это не так, метод вызывает <xref:System.ArgumentOutOfRangeException>. Любой <xref:System.DateTimeOffset> значение преобразуется в формате UTC (UTC), прежде чем метод сравнивает его с <xref:System.DateTimeOffset.MaxValue>.  Это означает, что <xref:System.DateTimeOffset> значение даты и времени которого приближается максимальный диапазон, но смещение которого является отрицательным, может вызвать исключение. Например, значение 12/31/9999 11:00 PM -02:00 выходит за пределы диапазона, так как он составляет один час позже <xref:System.DateTimeOffset.MaxValue> после преобразования в формат UTC.  
  
 Некоторые календари, например <xref:System.Globalization.UmAlQuraCalendar>, поддерживает диапазон верхний даты, более ранняя, чем <xref:System.DateTime.MaxValue>. В этих случаях пытается получить доступ к <xref:System.DateTime.MaxValue> в присваивания значений переменным или форматирования и синтаксического анализа операции можно вызвать <xref:System.ArgumentOutOfRangeException>. Вместо извлечения значение <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, можно получить значение указанного языка и региональных параметров последнее значение даты из <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=nameWithType> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="F:System.DateTime.MaxValue" /> находится вне диапазона из текущей или заданной календарь культуры по умолчанию.</exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Millisecond : int" Usage="System.DateTimeOffset.Millisecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент миллисекунд времени, представленных текущим <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Компонент миллисекунд текущего <see cref="T:System.DateTimeOffset" /> объекта, выраженное как целое число от 0 до 999.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонент миллисекунд объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с помощью описателя настраиваемого формата «fff».  
  
 Если вы полагаетесь на свойства, такие как <xref:System.DateTimeOffset.Now%2A> или <xref:System.DateTimeOffset.UtcNow%2A> точно отслеживать число миллисекунд, точность компонента миллисекунд зависит от разрешения системных часов. В Windows NT 3.5 и более поздней версии и версии операционной системы Windows Vista разрешение часов является приблизительно соответствует 10 – 15 миллисекундам.  
  
   
  
## Examples  
 В следующем примере отображается количество миллисекунд <xref:System.DateTimeOffset> объекта с помощью описателя настраиваемого формата, а также путем прямого доступа к <xref:System.DateTimeOffset.Millisecond%2A> свойство.  
  
 [!code-csharp[System.DateTimeOffset.Properties#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#12)]
 [!code-vb[System.DateTimeOffset.Properties#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minute : int" Usage="System.DateTimeOffset.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент минут времени, представленных текущим <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Компонент минут текущего <see cref="T:System.DateTimeOffset" /> объекта, выраженное как целое число от 0 до 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Minute%2A> Свойство не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонент минут объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с описателей настраиваемого формата «mm» или «m».  
  
   
  
## Examples  
 В следующем примере отображается компонент минуты <xref:System.DateTimeOffset> объекта тремя разными способами:  
  
-   Извлекая значение <xref:System.DateTimeOffset.Minute%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «m».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «mm».  
  
 [!code-csharp[System.DateTimeOffset.Properties#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#8)]
 [!code-vb[System.DateTimeOffset.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : DateTimeOffset" Usage="System.DateTimeOffset.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет наиболее раннее из возможных <see cref="T:System.DateTimeOffset" /> значение. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этой константы — 1/1/0001 12:00:00 AM + 00:00.  
  
 <xref:System.DateTimeOffset.MinValue> Свойство используется для определения ли новое значение <xref:System.DateTimeOffset> объекта или <xref:System.DateTimeOffset> значение, возвращаемое при выполнении арифметических операций совпадает раньше это минимальное значение диапазона. Если это не так, метод вызывает <xref:System.ArgumentOutOfRangeException>. Любой <xref:System.DateTimeOffset> значение преобразуется в формате UTC в формате UTC, до выполнения метода сравнения с <xref:System.DateTimeOffset.MinValue>.  Это означает, что <xref:System.DateTimeOffset> значение даты и времени которого приближается то минимальный диапазон, но смещение которого является положительным, может вызвать исключение. Например, значение 1/1/0001 01:00:00: 00 + 02:00 выходит за пределы диапазона, так как он составляет один час раньше <xref:System.DateTimeOffset.MinValue> после преобразования в формат UTC.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Month : int" Usage="System.DateTimeOffset.Month" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент месяца даты, представленный текущим <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Компонент месяца текущего <see cref="T:System.DateTimeOffset" /> объекта, выраженное как целое число от 1 до 12.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Month%2A> Свойство не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента месяца объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с помощью описателей настраиваемого формата «M» или «MM».  
  
   
  
## Examples  
 В следующем примере отображается компонент месяца <xref:System.DateTimeOffset> значение тремя разными способами:  
  
-   Извлекая значение <xref:System.DateTimeOffset.Month%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «M».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «MM».  
  
 [!code-csharp[System.DateTimeOffset.Properties#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#9)]
 [!code-vb[System.DateTimeOffset.Properties#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset Now { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTimeOffset" Usage="System.DateTimeOffset.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.DateTimeOffset" />, для которого в качестве значения установлены текущие дата и время на текущем компьютере, а в качестве смещения — смещение местного времени от времени в формате UTC.</summary>
        <value>Объект <see cref="T:System.DateTimeOffset" />, дата и время которого соответствуют текущему местному времени, а смещение равно смещению местного часового пояса от времени в формате UTC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Точность компонент миллисекунд текущего местного времени зависит от разрешения системных часов. В Windows NT 3.5 и более поздней версии и версии операционной системы Windows Vista разрешение часов является приблизительно соответствует 10 – 15 миллисекундам.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.Now%2A> свойство для получения текущей даты и времени и отображает его с помощью каждого из [стандартных форматов даты и времени строки](~/docs/standard/base-types/standard-date-and-time-format-strings.md) поддерживаемых <xref:System.DateTimeOffset> типа.  
  
 [!code-csharp[System.DateTimeOffset.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.now/cs/now1.cs#1)]
 [!code-vb[System.DateTimeOffset.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.now/vb/now1.vb#1)]  
  
 В следующем примере используется <xref:System.DateTimeOffset.Now%2A> и <xref:System.DateTimeOffset.Millisecond%2A> свойства, чтобы определить разрешения системных часов. Он отображает время только после изменения значение компонента миллисекунд.  
  
 [!code-csharp[System.DateTimeOffset.Properties#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#11)]
 [!code-vb[System.DateTimeOffset.Properties#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public TimeSpan Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Offset" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Offset { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : TimeSpan" Usage="System.DateTimeOffset.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает смещение по времени от времени в формате UTC.</summary>
        <value>Разница между текущим <see cref="T:System.DateTimeOffset" /> значение времени и времени (UTC) объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.TimeSpan.Hours%2A> свойства возвращаемого <xref:System.TimeSpan> объекта могут варьироваться от-14 часов до 14 часов.  
  
 Значение <xref:System.DateTimeOffset.Offset%2A> свойство является точным, с точностью до минуты.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.Offset%2A> свойство для отображения местного времени различие в формате UTC (UTC).  
  
 [!code-csharp[System.DateTimeOffset.Properties#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#13)]
 [!code-vb[System.DateTimeOffset.Properties#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator + (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Addition(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator +(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset + timeSpan" FrameworkAlternate="netframework-2.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator + (DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Addition(valuetype System.DateTimeOffset dateTimeTz, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator +(DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeTz + timeSpan" FrameworkAlternate="netframework-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" FrameworkAlternate="netframework-2.0;dotnet-uwp-10.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dateTimeTz" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset">Объект, к которому необходимо добавить интервал времени.</param>
        <param name="dateTimeTz">Объект, к которому необходимо добавить интервал времени.</param>
        <param name="timeSpan">Добавляемый интервал времени.</param>
        <summary>Добавляет указанный интервал времени в объект <see cref="T:System.DateTimeOffset" />, имеющий заданную дату и время, и образует объект <see cref="T:System.DateTimeOffset" /> с новыми значениями даты и времени.</summary>
        <returns>Объект, значение которого является суммой значений <paramref name="dateTimeTz" /> и <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Addition%2A> Метод определяет операцию сложения для <xref:System.DateTimeOffset> значения. В результате следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#1)]
 [!code-vb[System.DateTimeOffset.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#1)]  
  
 Языки, которые не поддерживают пользовательские операторы и перегрузка операторов можно вызвать <xref:System.DateTimeOffset.Add%2A> метод вместо этого.  
  
 Эквивалентный метод для этого оператора является <xref:System.DateTimeOffset.Add%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, являются ли два заданных <see cref="T:System.DateTimeOffset" /> объекты представляют тот же момент времени.</summary>
        <returns><see langword="true" /> Если оба <see cref="T:System.DateTimeOffset" /> объекты имеют одинаковые <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Equality%2A> Метод определяет операцию от оператора равенства для <xref:System.DateTimeOffset> объектов. В результате следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#2)]
 [!code-vb[System.DateTimeOffset.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#2)]  
  
 Перед вычислением `left` и `right` операндов на предмет равенства, оператор преобразует оба значения в формате UTC в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 Другими словами <xref:System.DateTimeOffset.op_Equality%2A> метод определяет, является ли два <xref:System.DateTimeOffset> объекты представления одного момента времени. Сравнивает непосредственно ни даты и время, ни смещения. Чтобы определить, является ли два <xref:System.DateTimeOffset> объекты представляют то же время и имеют одинаковое значение смещения, используйте <xref:System.DateTimeOffset.EqualsExact%2A> метод.  
  
 Имеет эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, является ли значение одного заданного <see cref="T:System.DateTimeOffset" /> объекта больше (или меньше) значение другого указанного <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <returns><see langword="true" /> Если <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение <paramref name="left" /> позже <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение <paramref name="right" />; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_GreaterThan%2A> Метод определяет операцию больше оператора для <xref:System.DateTimeOffset> объектов. В результате следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#3)]
 [!code-vb[System.DateTimeOffset.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#3)]  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо этого. Они также могут вызывать <xref:System.DateTimeOffset.op_GreaterThan%2A> метод напрямую, как показано следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#4)]  
  
 Перед вычислением `left` и `right` операндов, оператор преобразует оба значения в формате UTC в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#5)]
 [!code-vb[System.DateTimeOffset.Syntax#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#5)]  
  
 Имеет эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, является ли значение одного заданного <see cref="T:System.DateTimeOffset" /> объекта больше или равно значению другого указанного <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <returns><see langword="true" /> Если <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение <paramref name="left" /> соответствует же или более поздней, чем <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение <paramref name="right" />; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_GreaterThan%2A> Метод определяет операцию больше или равно-оператор для <xref:System.DateTimeOffset> объектов. В результате следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#5)]
 [!code-vb[System.DateTimeOffset.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#5)]  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо этого. В некоторых языках можно также вызвать <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> метод напрямую, как показано следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#6)]  
  
 Перед вычислением `left` и `right` операндов, оператор преобразует оба значения в формате UTC в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#6)]
 [!code-vb[System.DateTimeOffset.Syntax#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#6)]  
  
 Имеет эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Implicit(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator DateTimeOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : DateTime -&gt; DateTimeOffset" Usage="System.DateTimeOffset.op_Implicit dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime">Преобразуемый объект.</param>
        <summary>Определяет неявное преобразование из <see cref="T:System.DateTime" /> объект <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <returns>Преобразованный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Implicit%2A> Метод, который позволяет компилятору автоматически преобразовать <xref:System.DateTime> объект <xref:System.DateTimeOffset> объект без оператора явного приведения (в C#) или вызов функции преобразования (в Visual Basic). Он определяет расширяющее преобразование, которое не привести к потере данных и не выдает <xref:System.OverflowException>. <xref:System.DateTimeOffset.op_Implicit%2A> Метод выполняет код, приведенному ниже:  
  
 [!code-csharp[System.DateTimeOffset.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#7)]
 [!code-vb[System.DateTimeOffset.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#7)]  
  
 Этот метод эквивалентен <xref:System.DateTimeOffset.%23ctor%2A> конструктор. Смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство `dateTime` параметр:  
  
-   Если значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, дату и время <xref:System.DateTimeOffset> объект приравнивается к `dateTime`и его <xref:System.DateTimeOffset.Offset%2A> задано равным 0.  
  
-   Если значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойство <xref:System.DateTimeKind.Local?displayProperty=nameWithType> или <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, дату и время <xref:System.DateTimeOffset> объект приравнивается к `dateTime`и его <xref:System.DateTimeOffset.Offset%2A> свойство имеет значение равное смещению текущего часового пояса локальной системы.  
  
 Имеет эквивалентный метод для этого оператора <xref:System.DateTimeOffset.%23ctor%28System.DateTime%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время в формате UTC, которые получаются в результате применения смещения, более раннего чем <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Дата и время в формате UTC, которые получаются в результате применения смещения, более позднего чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, являются ли два заданных <see cref="T:System.DateTimeOffset" /> объекты ссылаются на разные моменты времени.</summary>
        <returns><see langword="true" /> Если <paramref name="left" /> и <paramref name="right" /> не имеют одинаковые <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Inequality%2A> Метод определяет операцию неравенства для <xref:System.DateTimeOffset> объектов. Всегда возвращает противоположный результат из <xref:System.DateTimeOffset.op_Equality%2A>. <xref:System.DateTimeOffset.op_Inequality%2A> Метод включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#8)]
 [!code-vb[System.DateTimeOffset.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#8)]  
  
 Перед вычислением `left` и `right` операндов на предмет равенства, оператор преобразует оба значения в формате UTC в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 Другими словами <xref:System.DateTimeOffset.op_Inequality%2A> метод определяет, является ли два <xref:System.DateTimeOffset> объекты представляют разные моменты времени. Сравнивает непосредственно ни даты и время, ни смещения.  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо этого. Кроме того, в некоторых языках можно также вызвать <xref:System.DateTimeOffset.op_Inequality%2A> метод напрямую, как показано следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#9)]  
  
 Имеет эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, является ли значение одного заданного <see cref="T:System.DateTimeOffset" /> объекта указан менее секунды <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <returns><see langword="true" /> Если <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение <paramref name="left" /> более ранняя, чем <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение <paramref name="right" />; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_LessThan%2A> Метод определяет операцию "меньше" оператор для <xref:System.DateTimeOffset> объектов. В результате следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#10)]
 [!code-vb[System.DateTimeOffset.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#10)]  
  
 Перед вычислением `left` и `right` операндов, оператор преобразует оба операнда в формате UTC в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#8)]
 [!code-vb[System.DateTimeOffset.Syntax#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#8)]  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо этого. Кроме того, в некоторых языках можно также вызвать <xref:System.DateTimeOffset.op_LessThan%2A> метод напрямую, как показано следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#11)]  
  
 Имеет эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, является ли значение одного заданного <see cref="T:System.DateTimeOffset" /> объекта указан менее секунды <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <returns><see langword="true" /> Если <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение <paramref name="left" /> более ранняя, чем <see cref="P:System.DateTimeOffset.UtcDateTime" /> значение <paramref name="right" />; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> Метод определяет операцию меньше или равно оператору для <xref:System.DateTimeOffset> объектов. В результате следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#12)]
 [!code-vb[System.DateTimeOffset.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#12)]  
  
 Языки, которые не поддерживают пользовательские операторы можно вызвать <xref:System.DateTimeOffset.Compare%2A> метод вместо этого. В некоторых языках можно также вызвать <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> метод напрямую, как показано следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#13)]  
  
 Перед вычислением `left` и `right` операндов, оператор преобразует оба значения в формате UTC в формате UTC. Операция не эквивалентно следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#9)]
 [!code-vb[System.DateTimeOffset.Syntax#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#9)]  
  
 Имеет эквивалентный метод для этого оператора <xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вычитает указанный <see cref="T:System.DateTimeOffset" /> или <see cref="T:System.TimeSpan" /> объекта из <see cref="T:System.DateTimeOffset" /> объекта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As DateTimeOffset, right As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * DateTimeOffset -&gt; TimeSpan" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Уменьшаемое.</param>
        <param name="right">Вычитаемое.</param>
        <summary>Вычитает объект <see cref="T:System.DateTimeOffset" /> из другого объекта и выдает интервал времени.</summary>
        <returns>Объект, представляющий разность между <paramref name="left" /> и <paramref name="right" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Subtraction%2A> Метод определяет операцию вычитания для <xref:System.DateTimeOffset> объектов. В результате следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#14)]
 [!code-vb[System.DateTimeOffset.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#14)]  
  
 Языки, которые не поддерживают пользовательские операторы и перегрузка операторов можно вызвать <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> метод вместо этого.  
  
 Эквивалентный метод для этого оператора является <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator - (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Subtraction(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator -(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset - timeSpan" FrameworkAlternate="netframework-2.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator - (DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Subtraction(valuetype System.DateTimeOffset dateTimeTz, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator -(DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeTz - timeSpan" FrameworkAlternate="netframework-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)" FrameworkAlternate="netframework-2.0;dotnet-uwp-10.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dateTimeTz" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset">Объект даты и времени, из которого вычитается интервал.</param>
        <param name="dateTimeTz">Объект даты и времени, из которого вычитается интервал.</param>
        <param name="timeSpan">Вычитаемый интервал времени.</param>
        <summary>Вычитает заданный временной интервал из указанной даты и времени и выдает новую дату и время.</summary>
        <returns>Объект, равный значению <paramref name="dateTimeOffset" /> за вычетом значения <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.op_Subtraction%2A> Метод определяет операцию вычитания для <xref:System.DateTimeOffset> объектов. В результате следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#15)]
 [!code-vb[System.DateTimeOffset.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#15)]  
  
 Языки, которые не поддерживают пользовательские операторы и перегрузка операторов можно вызвать <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> метод вместо этого.  
  
 Эквивалентный метод для этого оператора является <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" /> или больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <summary>Преобразует заданное строковое представление даты, времени и смещения в его эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Parse%28System.String%29> анализирует строку с тремя элементами, которые могут присутствовать в любом порядке и разделяются пробелами. Эти три элемента являются, как показано в следующей таблице.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Смещение >|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов не является обязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует, значение по умолчанию значение — текущий день. Если \<время > отсутствует, значение по умолчанию значение равно 12:00:00 AM. Если \<даты > уже установлен, но его компонент года содержит только две цифры, он преобразуется в год в текущего календаря текущего языка и региональных параметров на основе значения из <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойство. Если \<смещение > отсутствует, значение по умолчанию значение — это смещение местного часового пояса. \<Смещение > может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > необходимо включить символ знака.  
  
 `input` Строка анализируется с использованием сведений о форматировании в <xref:System.Globalization.DateTimeFormatInfo> , инициализируемый для текущего языка и региональных параметров. Чтобы проанализировать строку, содержащую назначенный форматирования, не обязательно соответствуют форматирование текущего языка и региональных параметров, используйте <xref:System.DateTimeOffset.ParseExact%2A> метод и указания спецификатора формата.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.Parse%28System.String%29> метода для синтаксического анализа несколько строк даты и времени. Пример содержит выходные данные от 22 марта 2007 г., в системе, языка и региональных параметров используется en-us.  
  
 [!code-csharp[System.DateTimeOffset.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#1)]
 [!code-vb[System.DateTimeOffset.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
-или- 
 <paramref name="input" /> содержит строковое представление смещения без даты или времени.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании значения <paramref name="input" />, связанные с языком и региональными параметрами.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значением параметра <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод анализирует строку с тремя элементами, которые могут присутствовать в любом порядке и разделяются пробелами. В следующей таблице показаны эти три элемента.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Смещение >|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов не является обязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует, значение по умолчанию значение — текущий день. Если \<даты > уже установлен, но его компонент года содержит только две цифры, он преобразуется в год в `provider` текущем календаре параметра на основе значения из <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойство. Если \<время > отсутствует, значение по умолчанию значение равно 12:00:00 AM. Если \<смещение > отсутствует, значение по умолчанию значение — это смещение местного часового пояса. \<Смещение > может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > необходимо включить символ знака.  
  
 Формат этих трех элементов определяется `formatProvider` параметр, который может быть одним из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, форматирование которого используется в `input` параметра. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет, используемое в форматирование `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 Положительный или отрицательный знак, используемый в \<смещение > должен быть либо + или -. Он не определен <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> или <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> свойства <xref:System.Globalization.NumberFormatInfo> объект `formatProvider` параметра.  
  
   
  
## Examples  
 В следующем примере анализируется даты и времени строки, которые отформатированы для региональных параметров fr-fr и отображает их с помощью локальной системы по умолчанию en-us языка и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#2)]
 [!code-vb[System.DateTimeOffset.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
-или- 
 <paramref name="input" /> содержит строковое представление смещения без даты или времени.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char), Optional formatProvider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании значения <paramref name="input" />, связанные с языком и региональными параметрами.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанную информацию о форматировании, связанную с языком и региональными параметрами, а также заданный стиль форматирования.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод анализирует строку с тремя элементами, которые могут присутствовать в любом порядке и разделяются пробелами. В следующей таблице показаны эти три элемента.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Смещение >|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов не является обязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует, значение по умолчанию значение — текущий день. Если \<даты > уже установлен, но его компонент года содержит только две цифры, он преобразуется в год в `provider` текущем календаре параметра на основе значения из <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойство. Если \<время > отсутствует, значение по умолчанию значение равно 12:00:00 AM. Если \<смещение > отсутствует, значение по умолчанию значение — это смещение местного часового пояса или <xref:System.TimeSpan.Zero?displayProperty=nameWithType> Если <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> или <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> значение указывается в `styles` параметра. Если \<смещение > присутствует, он может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > необходимо включить символ знака.  
  
 Формат этих трех элементов определяется `formatProvider` параметр, который может быть одним из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, форматирование которого используется в `input` параметра. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет, используемое в форматирование `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Каждый элемент также может заключаться в начальные или конечные пробелы и \<Дата > и \<время > элементов может содержать внутренние пробелы (например, 6:   00:00). Только \<смещение > компонент не может содержать внутренние пробелы.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 Положительный или отрицательный знак, используемый в \<смещение > должен быть либо + или -. Он не определен <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> или <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> свойства <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый `formatProvider` параметра.  
  
 В следующей таблице показаны члены <xref:System.Globalization.DateTimeStyles?displayProperty=nameWithType> перечисления, которые поддерживаются.  
  
|Член DateTimeStyles|Описание|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ строки, представленной `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно анализа строки и затем вызвать метод <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Несмотря на то что допустимым, это значение игнорируется. Внутренние пробелы допустимо использовать в \<Дата > и \<время > элементы.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Несмотря на то что допустимым, это значение игнорируется. Перед каждого компонента в анализируемой строке разрешены начальные пробелы.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Несмотря на то что допустимым, это значение игнорируется. Перед каждого компонента в анализируемой строке разрешены конечные пробелы.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Это поведение установлено по умолчанию. Он не может быть переопределен, указав более строгие <xref:System.Globalization.DateTimeStyles> значение перечисления, например <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Указывает, что если `input` отсутствует параметр \<смещение > элемент, должно быть указано смещение местного часового пояса. Это поведение по умолчанию <xref:System.DateTimeOffset.Parse%2A> метод.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Указывает, что если `input` отсутствует параметр \<смещение > элемент, должно быть указано смещение UTC (00:00).|  
|<xref:System.Globalization.DateTimeStyles.None>|Несмотря на то что допустимым, это значение игнорируется и не оказывает влияния.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Так как <xref:System.DateTimeOffset> структуры не включает `Kind` , это значение не оказывает никакого влияния.|  
  
 Только <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> значение не поддерживается. <xref:System.ArgumentException> Возникает, если это значение включено в `styles` параметра.  
  
   
  
## Examples  
 В следующем примере показан эффект перехода <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>, и <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> значения `styles` параметр <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> метод.  
  
 [!code-csharp[System.DateTimeOffset.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#3)]
 [!code-vb[System.DateTimeOffset.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
  
-или- 
 <paramref name="styles" /> не является допустимым значением <see cref="T:System.Globalization.DateTimeStyles" />.  
  
-или- 
 <paramref name="styles" /> содержит неподдерживаемое значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
-или- 
 Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
-или- 
 <paramref name="input" /> содержит строковое представление смещения без даты или времени.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий ожидаемый формат <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" /> и <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> Метод анализирует строковым представлением даты, который должен быть в формате, заданном параметром `format` параметр. Он также требует, \<даты >, \<время >, и \<смещение > элементы строкового представления даты и времени отображаются в порядке, указанном `format`. Если `input` строка не соответствует это `format` параметр, метод вызывает <xref:System.FormatException>.  Напротив <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод анализирует строковым представлением даты в любом из форматов, распознаваемым поставщиком формата <xref:System.Globalization.DateTimeFormatInfo> объекта. <xref:System.DateTimeOffset.Parse%2A> также позволяет \<даты >, \<время >, и \<смещение > элементы строкового представления даты и времени в любом порядке.  
  
 `format` Параметр является строкой, содержащей один стандартный описатель формата, либо один или несколько описателей настраиваемого формата, которые определяют требуемый формат параметра `input` параметр. Дополнительные сведения о допустимых кодах форматирования, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` включает в себя `z`, `zz`, или `zzz` описателей настраиваемого формата, чтобы указать, что смещение должны присутствовать в `input`, этому смещению должен включать знак плюс или минус. Если знак отсутствует, метод вызывает <xref:System.FormatException>.  
  
 Если `format` требует `input` содержать дату, но не время, полученный в результате <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если `format` требует `input` содержал время без даты, полученный в результате <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если `format` не требует `input` содержать смещение, полученный в результате <xref:System.DateTimeOffset> объекту присваивается смещение часового пояса локальной системы.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра, как точный формат из `input` Если `format` представляет собой строку описатель стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основании которого `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращенный его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод с стандартные и настраиваемые описатели формата и инвариантный язык и региональные параметры для анализа нескольких строк даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#1)]  

В следующем примере анализируется массив строк, которые должны соответствовать [ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier). Как видно в результатах показано в примере строки с начальные или конечные пробелы не смогут успешно проходят синтаксический анализ, как строки с элементы даты и времени, которые выходят за пределы диапазона.

[!code-csharp[Parsing an ISO 8601 string](~/samples/snippets/csharp/api/system/datetimeoffset/parseexact/parseexact-iso8601.cs)]
[!code-vb[Parsing an ISO 8601 string](~/samples/snippets/visualbasic/api/system/datetimeoffset/parseexact/parseexact-iso8601.vb)]


 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.  
  
-или- 
 Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> является пустой строкой ("").  
  
-или- 
 <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
-или- 
 Параметр <paramref name="format" /> равен пустой строке.  
  
-или- 
Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
        <block subset="none" type="usage"><para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.ParseExact" /> вызывает метод <see cref="T:System.FormatException" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, обозначение AM/PM игнорируется.</para></block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Диапазон символов, отображающий дату и время.</param>
        <param name="format">Диапазон символов, содержащий спецификатор формата, который задает ожидаемый формат параметра <paramref name="input" />.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <summary>Преобразует диапазон символов, отображающий дату и время, в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат отображения даты и времени должен полностью соответствовать заданному формату.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Этот метод выполняет синтаксический анализ диапазона символ, который представляет дату, который должен быть в формате, заданном параметром `format` параметр. Он также требует, \<даты >, \<время >, и \<смещение > элементы строкового представления даты и времени отображаются в порядке, указанном `format`. Если `input` не соответствует `format` шаблон, метод вызывает <xref:System.FormatException>.  Напротив <xref:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> метод анализирует строковым представлением даты в любом из форматов, распознаваемым поставщиком формата <xref:System.Globalization.DateTimeFormatInfo> объекта. <xref:System.DateTimeOffset.Parse%2A> также позволяет \<даты >, \<время >, и \<смещение > элементы строкового представления даты и времени в любом порядке.  
  
 `format` Параметр является диапазон символов, содержащей один или несколько описателей настраиваемого формата, которые определяют требуемый формат параметра либо описатель стандартного формата одиночные `input` параметра. Дополнительные сведения о допустимых кодах форматирования, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` включает в себя `z`, `zz`, или `zzz` описателей настраиваемого формата, чтобы указать, что смещение должны присутствовать в `input`, этому смещению должен включать знак плюс или минус. Если знак отсутствует, метод вызывает <xref:System.FormatException>.  
  
 Если `format` требует `input` содержать дату, но не время, полученный в результате <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если `format` требует `input` содержал время без даты, полученный в результате <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если `format` не требует `input` содержать смещение, полученный в результате <xref:System.DateTimeOffset> объекту присваивается смещение часового пояса локальной системы.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра, как точный формат из `input` Если `format` — это описатель стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основании которого `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращенный его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
-или-  
Параметр <paramref name="styles" /> содержит неподдерживаемое значение.  
-или-  
Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> — это пустой диапазон символов.  
 -или- Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
 -или- Параметр<paramref name="format" /> — это пустой диапазон символов.  
 -или-  
 Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Диапазон символов, содержащий дату и время, которые нужно преобразовать.</param>
        <param name="formats">Массив спецификаторов формата, в котором заданы требуемые форматы <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <summary>Преобразует диапазон символов, содержащий строковое представление даты и времени, в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданные форматы, сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат представления даты и времени должен полностью соответствовать одному из заданных форматов.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formats" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
Этот метод анализирует диапазон символов, представляющая дату, которая не соответствует ни одному из шаблонов, назначенных `formats` параметра. Если `input` не соответствует ни одному из этих шаблонов все варианты, определяется `styles` параметр, метод вызывает <xref:System.FormatException>. Помимо сравнение `input` для нескольких шаблонов форматирования, этот перегруженный метод ведет себя идентично <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> метод.  
  
 `formats` Параметр является массивом строк, элементы которого содержат один стандартный описатель формата или один или несколько описателей настраиваемого формата, которые определяют возможные шаблон `input` параметра. При вызове метода `input` должен соответствовать одному из этих шаблонов. Дополнительные сведения о допустимых кодах форматирования, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если совпадающего элемента в `formats` включает в себя `z`, `zz`, или `zzz` описателей настраиваемого формата, чтобы указать, что смещение должны присутствовать в `input`, этому смещению должен включать знак плюс или минус. Если знак отсутствует, метод вызывает <xref:System.FormatException>.  
  
> [!IMPORTANT]
>  С помощью `formats` параметр этой перегрузки, чтобы указать несколько форматов может помочь снизить разочарование, многие пользователи сталкиваются при вводе значения даты и времени. В частности возможность задать несколько шаблонов ввода позволяет приложению обрабатывать представления даты и времени, которые могут присутствовать или отсутствовать начальных нулей в месяцы, дни, часы, минуты и секунды.
  
 Если совпадающего элемента в `formats` требует `input` содержать дату, но не время, полученный в результате <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если совпадающего элемента в `formats` требует `input` содержал время без даты, полученный в результате <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если совпадающего элемента в `formats` не требует `input` содержать смещение, смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeLocal>, присваивается смещение местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение времени в формате UTC, или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещение местного часового пояса.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. То же самое касается точный формат `input`, если соответствующий элемент из `formats` представляет собой строку описатель стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основании которого `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешен ли пустое пространство во входной строке, указывает, а также порядок синтаксического анализа строк без явной компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены последствия каждого поддерживаемого члена.  
  
|Член`DateTimeStyles` |Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно анализа строки и последующего вызова <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если совпадающего элемента в `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение локального часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если совпадающего элемента в `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для включения внутренние пробелы, не предусмотренные `format`. Лишние пробелы могут располагаться между компоненты даты и времени, а также внутри отдельных компонентов (за исключением смещение) и учитывается при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать пробелы, не предусмотренные `formats`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные `formats`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы не задал `formats`. Все дополнительные символы-разделители не указан в сопоставляемый элемент `formats` при синтаксическом анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не допускается в `input`. Пробелы должны располагаться в точности совпадают с указанными в конкретный элемент `formats` для успешного сопоставления. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не влияет, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
-или- Параметр <paramref name="styles" /> содержит неподдерживаемое значение.  
-или-  
Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> — это пустой диапазон символов.  
-или- Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
-или-  
В <paramref name="formats" /> нет элементов, содержащих допустимые спецификаторы формата.  
-или-  
Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий ожидаемый формат <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> Метод анализирует строковым представлением даты, который должен быть в формате, заданном параметром `format` параметр. Он также требует, \<даты >, \<время >, и \<смещение > элементы строкового представления даты и времени отображаются в порядке, указанном `format`. Если `input` строка не соответствует шаблону `format` параметр с любыми изменениями, определяется `styles` параметр, метод вызывает <xref:System.FormatException>.  Напротив <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод анализирует строковым представлением даты в любом из форматов, распознаваемым поставщиком формата <xref:System.Globalization.DateTimeFormatInfo> объекта. <xref:System.DateTimeOffset.Parse%2A> также позволяет \<даты >, \<время >, и \<смещение > элементы строкового представления даты и времени в любом порядке.  
  
 `format` Параметр является строкой, содержащей один стандартный описатель формата, либо один или несколько описателей настраиваемого формата, которые определяют требуемый шаблон для `input` параметра. Дополнительные сведения о допустимых кодах форматирования, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` включает в себя `z`, `zz`, или `zzz` описателей настраиваемого формата, чтобы указать, что смещение должны присутствовать в `input`, этому смещению должен включать знак плюс или минус. Если знак отсутствует, метод вызывает <xref:System.FormatException>.  
  
 Если `format` требует `input` содержать дату, но не время, полученный в результате <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если `format` требует `input` содержал время без даты, полученный в результате <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если `format` не требует `input` содержать смещение, смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeLocal>, присваивается смещение местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение времени в формате UTC, или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещение местного часового пояса.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. То же самое касается точный формат `input`, если `format` представляет собой строку описатель стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основании которого `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешено ли пустое пространство во входной строке, указывает, а также порядок синтаксического анализа строк без явной компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены последствия каждого поддерживаемого члена.  
  
|Член`DateTimeStyles` |Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно анализа строки и последующего вызова <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение локального часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для включения внутренние пробелы, не предусмотренные `format`. Лишние пробелы могут располагаться между компоненты даты и времени, а также внутри отдельных компонентов и учитывается при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать пробелы, не предусмотренные `format`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные `format`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы не задал `format`. Все дополнительные символы-разделители не указан в `format` при синтаксическом анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не допускается в `input`. Пробелы должны располагаться в точности так, как указано в `format`. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не влияет, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод стандартные и настраиваемые описатели формата, инвариантные язык и региональные параметры и различных <xref:System.Globalization.DateTimeStyles> значения для анализа нескольких строк даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#2)]  

В следующем примере используется широкий набор <xref:System.Globalization.DateTimeStyles> значения для синтаксического анализа массив строк, которые должны соответствовать [ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier). Как видно из примера, строки, которые находятся в правильный формат происходит сбой анализа, если:

- они содержат пустое пространство и соответствующий <xref:System.Globalization.DateTimeStyles> флаг (такие как <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> не был задан в вызове метода.

- они содержат элементы даты и времени, которые выходят за пределы диапазона.

Строки, которые не указывают смещения от UTC, предполагается наличие смещение местного часового пояса (в данном случае -07:00) Если <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> флаг передается в вызове метода. В этом случае они считаются всеобщее скоординированное время.

[!code-csharp[Parsing ISO 8601 strings](~/samples/snippets/csharp/api/system/datetimeoffset/parseexact/parseexact-iso8601-2.cs)]
[!code-vb[Parsing ISO 8601 strings](~/samples/snippets/visualbasic/api/system/datetimeoffset/parseexact/parseexact-iso8601-2.vb)]


 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
  
-или- 
Параметр <paramref name="styles" /> содержит неподдерживаемое значение.  
  
-или- 
Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.  
  
-или- 
 Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> является пустой строкой ("").  
  
-или- 
 <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
-или- 
 Параметр <paramref name="format" /> равен пустой строке.  
  
-или- 
Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
        <block subset="none" type="usage"><para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.ParseExact" /> вызывает метод <see cref="T:System.FormatException" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, обозначение AM/PM игнорируется.</para></block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formats">Массив спецификаторов формата, в котором заданы требуемые форматы <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданные форматы, сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formats" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> Метод анализирует строковым представлением даты, которая не соответствует ни одному из шаблонов, назначенных `formats` параметра. Если `input` строка не соответствует ни одному из этих шаблонов все варианты, определяется `styles` параметр, метод вызывает <xref:System.FormatException>. Помимо сравнение `input` для нескольких шаблонов форматирования, этот перегруженный метод ведет себя идентично <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод.  
  
 `formats` Параметр является массивом строк, элементы которого содержат один стандартный описатель формата или один или несколько описателей настраиваемого формата, которые определяют возможные шаблон `input` параметра. При вызове метода `input` должен соответствовать одному из этих шаблонов. Дополнительные сведения о допустимых кодах форматирования, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если совпадающего элемента в `formats` включает в себя `z`, `zz`, или `zzz` описателей настраиваемого формата, чтобы указать, что смещение должны присутствовать в `input`, этому смещению должен включать знак плюс или минус. Если знак отсутствует, метод вызывает <xref:System.FormatException>.  
  
> [!IMPORTANT]
>  С помощью `formats` параметр этой перегрузки, чтобы указать несколько форматов может помочь снизить разочарование, многие пользователи сталкиваются при вводе значения даты и времени. В частности возможность задать несколько шаблонов ввода позволяет приложению обрабатывать представления даты и времени, которые могут присутствовать или отсутствовать начальных нулей в месяцы, дни, часы, минуты и секунды. Пример иллюстрирует это.  
  
 Если совпадающего элемента в `formats` требует `input` содержать дату, но не время, полученный в результате <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если совпадающего элемента в `formats` требует `input` содержал время без даты, полученный в результате <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если совпадающего элемента в `formats` не требует `input` содержать смещение, смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeLocal>, присваивается смещение местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение времени в формате UTC, или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещение местного часового пояса.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. То же самое касается точный формат `input`, если соответствующий элемент из `formats` представляет собой строку описатель стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основании которого `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешен ли пустое пространство во входной строке, указывает, а также порядок синтаксического анализа строк без явной компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены последствия каждого поддерживаемого члена.  
  
|Член`DateTimeStyles` |Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно анализа строки и последующего вызова <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если совпадающего элемента в `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение локального часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если совпадающего элемента в `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для включения внутренние пробелы, не предусмотренные `format`. Лишние пробелы могут располагаться между компоненты даты и времени, а также внутри отдельных компонентов (за исключением смещение) и учитывается при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать пробелы, не предусмотренные `formats`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные `formats`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы не задал `formats`. Все дополнительные символы-разделители не указан в сопоставляемый элемент `formats` при синтаксическом анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не допускается в `input`. Пробелы должны располагаться в точности совпадают с указанными в конкретный элемент `formats` для успешного сопоставления. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не влияет, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
   
  
## Examples  
 Следующий пример определяет несколько форматы входных данных для строковое представление даты и времени и значение смещения, а затем передает строку, которая вводится пользователем, чтобы <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#3)]
 [!code-vb[System.DateTimeOffset.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
  
-или- 
 <paramref name="styles" /> содержит неподдерживаемое значение.  
  
-или- 
Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> является пустой строкой ("").  
  
-или- 
 <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
-или- 
В <paramref name="formats" /> нет элементов, содержащих допустимые спецификаторы формата.  
  
-или- 
Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
        <block subset="none" type="usage"><para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.ParseExact" /> вызывает метод <see cref="T:System.FormatException" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, обозначение AM/PM игнорируется.</para></block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Second : int" Usage="System.DateTimeOffset.Second" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент секунд по показаниям часов, представленный текущим <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Компонент секунд по <see cref="T:System.DateTimeOffset" /> объекта, выраженный в виде целочисленного значения в диапазоне от 0 до 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Second%2A> Свойство не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> второй компонент объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с «s», то есть описателей настраиваемого формата «ss».  
  
   
  
## Examples  
 В следующем примере отображаются второй компонент <xref:System.DateTimeOffset> объекта тремя разными способами:  
  
-   Извлекая значение <xref:System.DateTimeOffset.Second%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «s».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> описатель формата «ss» метод.  
  
 [!code-csharp[System.DateTimeOffset.Properties#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#14)]
 [!code-vb[System.DateTimeOffset.Properties#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вычитает указанное время или длительность из текущего <see cref="T:System.DateTimeOffset" /> объекта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : DateTimeOffset -&gt; TimeSpan" Usage="dateTimeOffset.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">Объект, представляющий вычитаемое значение.</param>
        <summary>Вычитает значение <see cref="T:System.DateTimeOffset" />, представляющее определенную дату и время, из текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Объект, задающий интервал между двумя объектами <see cref="T:System.DateTimeOffset" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод преобразует оба <xref:System.DateTimeOffset> объектов в формате UTC в формате UTC перед вычислением интервала времени, разделяющий их. При этом удаляются все влияние на сравнение различных значений смещения относительно времени UTC.  
  
> [!NOTE]
>  Для языков, которые поддерживают пользовательские операторы можно также выполнить вычитание даты и времени с помощью оператора вычитания. Дополнительные сведения см. в разделе <xref:System.DateTimeOffset.op_Subtraction%2A> метод.  
  
 Так как ни одна из текущего <xref:System.DateTimeOffset> объект ни `value` параметр представляет дату и время в конкретного часового пояса, <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> метод не учитывает правила коррекции для определенного часового пояса, при его Вычитает значения даты и времени.  
  
   
  
## Examples  
 В следующем примере показано вычитания, использующий <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> метод.  
  
 [!code-csharp[System.DateTimeOffset.Methods#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#13)]
 [!code-vb[System.DateTimeOffset.Methods#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTimeOffset Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Subtract(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">Вычитаемый интервал времени.</param>
        <summary>Вычитает указанный интервал времени из текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Объект, значение которого равно дате и времени, представленным текущим объектом <see cref="T:System.DateTimeOffset" />, за вычетом интервала времени, представленного параметром <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.DateTimeOffset.Subtract%2A> метод для вычитания более чем одного вида интервал времени (дни, часы, минуты, секунды или миллисекунды) в рамках одной операции. Его поведение идентично поведению <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> метод, который определяет оператор вычитания. <xref:System.DateTimeOffset> Структура также поддерживает добавление специализированные методы (такие как <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, и <xref:System.DateTimeOffset.AddMinutes%2A>), которые позволяют вычитания, назначив отрицательное значение к параметру метода.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объекта. Не изменяет значение текущего объекта, добавив `timeSpan` даты и времени.  
  
 <xref:System.DateTimeOffset.Subtract%2A> Метод не влияет на значение <xref:System.DateTimeOffset> объекта <xref:System.DateTimeOffset.Offset%2A> свойство. Возвращенный <xref:System.DateTimeOffset> объект имеет то же смещение исходного объекта.  
  
 Так как текущий <xref:System.DateTimeOffset> объект не представляет дату и время в конкретного часового пояса, <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29> метод не учитывает правила коррекции для определенного часового пояса, при выполнении операции вычитания.  
  
   
  
## Examples  
 В следующем примере показано вычитания, использующий <xref:System.DateTimeOffset.Subtract%2A> метод.  
  
 [!code-csharp[System.DateTimeOffset.Methods#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#14)]
 [!code-vb[System.DateTimeOffset.Methods#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Сравнивает значение текущего <see cref="T:System.DateTimeOffset" /> объект с другим объектом того же типа.</summary>
        <returns>32-разрядное знаковое целое число, указывающее, является ли текущий <see cref="T:System.DateTimeOffset" /> объект меньше, равно или больше, чем <paramref name="obj" />. Возвращаемые значения метода интерпретируются следующим образом: 
 <list type="table"><listheader><term> Возвращаемое значение 
 </term><description> Описание 
 </description></listheader><item><term> Меньше нуля 
 </term><description> Текущий <see cref="T:System.DateTimeOffset" /> объект меньше (раньше) <paramref name="obj" />.  
  
 </description></item><item><term> Нуль 
 </term><description> Текущий <see cref="T:System.DateTimeOffset" /> (на одну точку во времени как) равен объект <paramref name="obj" />.  
  
 </description></item><item><term> Больше нуля 
 </term><description> Текущий <see cref="T:System.DateTimeOffset" /> объект больше, чем (позже) <paramref name="obj" />.  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sender">Объект, который инициализирует обратный вызов. Данная функциональная возможность для этого параметра в настоящее время не реализуется.</param>
        <summary>Выполняется после завершения десериализации объекта.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">Объект, который требуется заполнить данными.</param>
        <param name="context">Конечный объект для этой сериализации (см. раздел, посвященный <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Заполняет <see cref="T:System.Runtime.Serialization.SerializationInfo" /> объект с данными, необходимыми для сериализации текущего <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требует полного доверия для непосредственного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.DateTimeOffset.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество тактов, представляющее дату и время текущего <see cref="T:System.DateTimeOffset" /> объект во времени.</summary>
        <value>Количество тактов в <see cref="T:System.DateTimeOffset" /> времени объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Ticks%2A> Свойство не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Значение <xref:System.DateTimeOffset.Ticks%2A> свойство представляет количество 100-наносекундных интервалов, прошедших с 12:00:00 1 января 0001 года (значение <xref:System.DateTimeOffset.MinValue>). Он не включает тактов, можно добиться путем корректировочных секунд. Наносекунда равна одной миллиардной доли секунды; Существуют десять миллионов тактов в секунду. Значение <xref:System.DateTimeOffset.Ticks%2A> свойство в диапазоне от `DateTimeOffset.MinValue.Ticks` для `DateTimeOffset.MaxValue.Ticks`.  
  
 Можно назначить число тактов к <xref:System.DateTimeOffset> объекта с помощью <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> перегрузку конструктора.  
  
   
  
## Examples  
 В следующем примере инициализируется <xref:System.DateTimeOffset> объекта путем определения приблизительного количества тактов в дате 1 июля 2008 1:23:07. Затем он отобразит, дату и количество тактов, представленного параметром этой даты в консоль.  
  
 [!code-csharp[System.DateTimeOffset.Properties#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#15)]
 [!code-vb[System.DateTimeOffset.Properties#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcDateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : TimeSpan" Usage="System.DateTimeOffset.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает время суток для текущего <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Время, истекшее с полуночи на текущую дату.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.TimeOfDay%2A> Свойство не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 <xref:System.DateTimeOffset.TimeOfDay%2A> Свойство возвращает компонент времени <xref:System.DateTimeOffset> объекта в виде <xref:System.TimeSpan> объекта. Это эквивалентно <xref:System.DateTime.TimeOfDay%2A?displayProperty=nameWithType> свойство.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.TimeOfDay%2A> свойство извлечения времени и отображать его на консоль.  
  
 [!code-csharp[System.DateTimeOffset.Properties#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#16)]
 [!code-vb[System.DateTimeOffset.Properties#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberSignature Language="F#" Value="member this.ToFileTime : unit -&gt; int64" Usage="dateTimeOffset.ToFileTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> во временную характеристику файла Windows.</summary>
        <returns>Значение текущего <see cref="T:System.DateTimeOffset" /> объекта, как время файла Windows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время файла Windows — это 64-разрядное значение, представляющее количество 100-наносекундных интервалов, прошедших с 00:00 1 января 1601 года н. э. (C.E.) Скоординированного времени (UTC). Windows использует время файла для записи, когда приложение создает, обращается к или записывает в файл.  
  
 <xref:System.DateTimeOffset.ToFileTime%2A> Метод преобразует текущий <xref:System.DateTimeOffset> даты и времени в формате UTC, перед выполнением преобразования объекта. Другими словами, вызов <xref:System.DateTimeOffset.ToFileTime%2A> метод эквивалентен следующий вызов метода:  
  
```csharp
this.ToUtcDateTime().ToFileTime();  
```  
  
```vb  
Me.ToUtcDateTime().ToFileTime()  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Получившееся время файла будет представлять дату и время до полуночи 1 января 1601 года нашей эры Скоординированного времени (UTC).</exception>
        <altmember cref="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToLocalTime();" />
      <MemberSignature Language="F#" Value="member this.ToLocalTime : unit -&gt; DateTimeOffset" Usage="dateTimeOffset.ToLocalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует текущий <see cref="T:System.DateTimeOffset" /> объект <see cref="T:System.DateTimeOffset" /> , представляющий местное время.</summary>
        <returns>Объект, представляющий дату и время текущего <see cref="T:System.DateTimeOffset" /> объекта, преобразованные в местное время.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При выполнении преобразования в местное время, метод сначала преобразует текущий <xref:System.DateTimeOffset> объекта даты и времени в формате UTC в формате UTC путем вычитания смещение от времени. Затем преобразуется Дата и время UTC в местное время, добавив сдвиг местного часового пояса. В этом случае он учитывает все правила коррекции для местного часового пояса.  
  
 Значение текущего <xref:System.DateTimeOffset> объект и значение <xref:System.DateTimeOffset> объект, возвращенный вызовом метода представляют тот же момент времени. То есть если оба передаются <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> метода, метод возвращает `true`.  
  
 Если преобразование приводит к время, которое находится за пределами диапазона <xref:System.DateTimeOffset> типа, <xref:System.DateTimeOffset.ToLocalTime%2A> возвращает <xref:System.DateTimeOffset> , содержащий дату и время задать либо <xref:System.DateTimeOffset.MaxValue> или <xref:System.DateTimeOffset.MinValue> и смещением, равным смещению местного часового пояса.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ToLocalTime%2A> метод для преобразования <xref:System.DateTimeOffset> значение в местное время в стандартном тихоокеанском часовом поясе. Здесь также показано метода поддержка правила коррекции местного часового пояса.  
  
 [!code-csharp[System.DateTimeOffset.Methods#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#15)]
 [!code-vb[System.DateTimeOffset.Methods#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToOffset">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToOffset (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToOffset(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOffset (offset As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToOffset(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.ToOffset : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.ToOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Смещение, которое необходимо преобразовать <see cref="T:System.DateTimeOffset" /> значение.</param>
        <summary>Преобразует значение текущего <see cref="T:System.DateTimeOffset" /> объекта даты и времени, указанного в значении смещения.</summary>
        <returns>Объект, равный исходному <see cref="T:System.DateTimeOffset" /> объект (то есть их <see cref="M:System.DateTimeOffset.ToUniversalTime" /> методы возвращают один и тот же момент времени) которого, однако <see cref="P:System.DateTimeOffset.Offset" /> свойству <paramref name="offset" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.ToOffset%2A> Метод является альтернативой вызову <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> метод. Его можно использовать для выполнения простых преобразований из одного часового пояса в другой, если известны смещения часового пояса от времени в формате UTC. Тем не менее поскольку ни одна из исходного <xref:System.DateTimeOffset> объект, ни новой <xref:System.DateTimeOffset> объект, возвращенный вызовом метода однозначно связаны с определенного часового пояса, метод не выполняет правила коррекции часовых поясов при преобразовании.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.DateTimeOffset.ToOffset%2A> метод для преобразования <xref:System.DateTimeOffset> объект <xref:System.DateTimeOffset> объект с другой смещение.  
  
 [!code-csharp[System.DateTimeOffset.ToOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/cs/ToOffset.cs#1)]
 [!code-vb[System.DateTimeOffset.ToOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/vb/ToOffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Полученный в результате <see cref="T:System.DateTimeOffset" /> объект имеет <see cref="P:System.DateTimeOffset.DateTime" /> значение более ранней, чем <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Полученный в результате <see cref="T:System.DateTimeOffset" /> объект имеет <see cref="P:System.DateTimeOffset.DateTime" /> значение позже <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> — меньше – 14 часов.  
  
-или- 
 <paramref name="offset" /> больше 14 часов.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление.</summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dateTimeOffset.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление.</summary>
        <returns>Строковое представление <see cref="T:System.DateTimeOffset" /> объект, который включает смещение, добавленное в конце строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение этого метода идентична <xref:System.DateTime.ToString?displayProperty=nameWithType> за тем исключением, что он содержит пробел, следуют смещение, добавленное в конце строки. Другими словами, он форматирует выходные данные с помощью шаблона короткого формата даты, длинный шаблон времени и `zzz` строке настраиваемого формата, при этом каждый элемент отделяется от предыдущего элемента пробелом. Например если <xref:System.DateTime.ToString?displayProperty=nameWithType> возвращает значение 1/12/2008 6:15:50 PM, <xref:System.DateTimeOffset.ToString> возвращает значение 1/12/2008 6:15:50 PM -08:00 в течение времени, которое составляет восемь часов за временем по Гринвичу (UTC).  
  
 Этот метод использует сведения о форматировании, производным от текущего языка и региональных параметров. Дополнительные сведения см. в разделе <xref:System.Globalization.CultureInfo.CurrentCulture%2A>. Другие перегрузки <xref:System.DateTimeOffset.ToString%2A> метод дают возможность задать язык и региональные параметры, форматирование которого для использования, а также определять выходные данные шаблона <xref:System.DateTimeOffset> значение.  
  
   
  
## Examples  
 В следующем примере показано вызовы <xref:System.DateTimeOffset.ToString> метод и отображение его выходных данных в системе, в которой текущий язык — en-us.  
  
 [!code-csharp[System.DateTimeOffset.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#1)]
 [!code-vb[System.DateTimeOffset.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, принятым для текущего языка и региональных параметров.</exception>
        <block subset="none" type="usage"><para><see cref="M:System.DateTimeOffset.ToString" /> Метод возвращает строковое представление даты и времени в календаре, текущего языка и региональных параметров. Если значение текущего <see cref="T:System.DateTimeOffset" /> экземпляра более ранняя, чем <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или более поздней версии, чем <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод вызывает <see cref="T:System.ArgumentOutOfRangeException" />. Ниже приведен пример. Он выполняет попытку отформатировать дату, которая находится вне диапазона от <see cref="T:System.Globalization.HijriCalendar" /> класса, если текущий язык — арабский (Сирия).  
  
[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception2.vb#2)]</para></block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="dateTimeOffset.ToString formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
        <summary>Преобразует значение текущего <see cref="T:System.DateTimeOffset" /> объекта в эквивалентное ему строковое представление с использованием указанного языка и региональных параметров сведения об особенностях форматирования.</summary>
        <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметром <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение этого метода имеется у его эквивалент перегрузка <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> за тем исключением, что он содержит пробел, следуют смещение, добавленное в конце строки. Другими словами, он форматирует выходные данные с помощью шаблона короткого формата даты, длинный шаблон времени и `zzz` строке настраиваемого формата, при этом каждый элемент отделяется от предыдущего элемента пробелом.  
  
 Формат этих трех элементов определяется `formatProvider` параметра. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, соглашения о форматировании которых применяются к возвращаемой строки. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет, форматированием возвращаемой строки.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatProvider` — `null`, <xref:System.Globalization.DateTimeFormatInfo> используется объект, связанный с текущего языка и региональных параметров (см. в разделе <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).  
  
   
  
## Examples  
 В следующем примере отображается <xref:System.DateTimeOffset> с помощью <xref:System.Globalization.CultureInfo> объекты, представляющие инвариантного языка и региональных параметров, а также четыре других языков и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#2)]
 [!code-vb[System.DateTimeOffset.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, используемым в <paramref name="formatProvider" />.</exception>
        <block subset="none" type="usage"><para><see cref="M:System.DateTimeOffset.ToString(System.IFormatProvider)" /> Метод возвращает строковое представление даты и времени в календаре, языка и региональных параметров, представленных <paramref name="formatProvider" /> параметра. Его календарь определяется <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> свойство. Если значение текущего <see cref="T:System.DateTimeOffset" /> экземпляра более ранняя, чем <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или более поздней версии, чем <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод вызывает <see cref="T:System.ArgumentOutOfRangeException" />. Ниже приведен пример. Он выполняет попытку отформатировать дату, которая находится вне диапазона от <see cref="T:System.Globalization.JapaneseCalendar" /> класса.  
  
[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception1.vb#1)]</para></block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="dateTimeOffset.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Строка формата.</param>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием заданного формата.</summary>
        <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметром <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `format` Параметр должен содержать либо символ описателя формата (см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) или настраиваемый шаблон формата (см. в разделе [пользовательские строки даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md) ), определяющий формат возвращаемой строки. Если `format` является null или пустую строку ("»), <xref:System.DateTimeOffset> значение — это выходные данные в формате по умолчанию.  
  
 В следующей таблице показаны принцип действия определенных описателей формата при использовании с <xref:System.DateTimeOffset>, который отличается от их поведения при использовании с <xref:System.DateTime>.  
  
|Существующий описатель формата|Новое поведение|  
|-------------------------------|------------------|  
|"K"|Предназначен для обратного преобразования даты и времени. С помощью <xref:System.DateTimeOffset>, сопоставляется «zzz» (смещение всегда отображается с часы и минуты). Обратите внимание, что «K» описатель настраиваемого формата; он не может быть один символ в `format`.|  
|"U"|Не поддерживается.|  
|"r"|Преобразует <xref:System.DateTimeOffset> объект в формате UTC в формате UTC и выводит его с помощью строки настраиваемого формата `ddd, dd MMM yyyy HH:mm:ss GMT`.|  
|"u"|Преобразует <xref:System.DateTimeOffset> объект в формат UTC и выводит его в формате `yyyy-MM-dd HH:mm:ssZ`.|  
  
 Оставшиеся стандартного и описателей формата времени работают так же, с помощью <xref:System.DateTimeOffset.ToString%28System.String%29> метод как и с <xref:System.DateTime.ToString%2A> метод.  
  
 Этот метод использует сведения о форматировании, производным от текущего языка и региональных параметров. Дополнительные сведения см. в разделе <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.  
  
   
  
## Examples  
 В следующем примере отображается <xref:System.DateTimeOffset> на консоль с помощью каждого из стандартных даты и времени описателей формата. Выходные данные форматируются с помощью en-us языка и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#3)]
 [!code-vb[System.DateTimeOffset.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Длина <paramref name="format" /> равна 1, и он не является одним из стандартных символов описателя формата, определенных для <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
-или- 
 <paramref name="format" /> не содержит допустимого шаблона пользовательского формата.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, принятым для текущего языка и региональных параметров.</exception>
        <block subset="none" type="usage"><para><see cref="M:System.DateTimeOffset.ToString(System.String)" /> Метод возвращает строковое представление даты и времени в календаре, текущего языка и региональных параметров. Если значение текущего <see cref="T:System.DateTimeOffset" /> экземпляра более ранняя, чем <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или более поздней версии, чем <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод вызывает <see cref="T:System.ArgumentOutOfRangeException" />. Ниже приведен пример. Он выполняет попытку отформатировать дату, которая находится вне диапазона от <see cref="T:System.Globalization.HebrewCalendar" /> класса, если текущий язык — иврит (Израиль).  
  
[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception3.vb#3)]</para></block>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="dateTimeOffset.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">Строка формата.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях формата для данного языка и региональных параметров.</summary>
        <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `format` Параметр должен содержать либо символ описателя формата (см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) или настраиваемый шаблон формата (см. в разделе [пользовательские строки даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md) ). Если `format` является null или пустую строку ("»), <xref:System.DateTimeOffset> объект — это выходные данные в формате по умолчанию.  
  
 В следующей таблице показаны принцип действия определенных описателей формата при использовании с <xref:System.DateTimeOffset>, который отличается от их поведения при использовании с <xref:System.DateTime>.  
  
|Существующий описатель формата|Новое поведение|  
|-------------------------------|------------------|  
|"K"|Предназначен для обратного преобразования даты и времени. С помощью <xref:System.DateTimeOffset>, сопоставляется «zzz» (смещение всегда отображается с часы и минуты). Обратите внимание, что «K» описатель настраиваемого формата; он не может быть один символ в `format`.|  
|"U"|Не поддерживается.|  
|"r"|Преобразует <xref:System.DateTimeOffset> объект в формате UTC в формате UTC и выводит его с помощью строки настраиваемого формата `ddd, dd MMM yyyy HH:mm:ss GMT`.|  
|"u"|Преобразует <xref:System.DateTimeOffset> значение в формате UTC и выводит его в формате `yyyy-MM-dd HH:mm:ssZ`.|  
  
 Оставшиеся стандартного и описателей формата времени работают так же, с помощью <xref:System.DateTimeOffset.ToString%28System.String%29> метод как и с <xref:System.DateTime.ToString%2A> метод.  
  
 Шаблон, который соответствует описатели стандартного формата, а также символы и имена компонентов даты и времени, определяется `formatProvider` параметра. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, форматирование которого используется в `input`. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет, используемое в форматирование `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatProvider` — `null`, <xref:System.Globalization.DateTimeFormatInfo> используется объект, связанный с текущего языка и региональных параметров (см. в разделе <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ToString%28System.String%2CSystem.IFormatProvider%29> метод для отображения <xref:System.DateTimeOffset> используя строку пользовательского формата для нескольких языков и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#4)]
 [!code-vb[System.DateTimeOffset.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Длина <paramref name="format" /> равна 1, и он не является одним из стандартных символов описателя формата, определенных для <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
-или- 
 <paramref name="format" /> не содержит допустимого шаблона пользовательского формата.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, используемым в <paramref name="formatProvider" />.</exception>
        <block subset="none" type="usage"><para><see cref="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" /> Метод возвращает строковое представление даты и времени в календарь, используемый <paramref name="formatProvider" /> параметра. Его календарь определяется <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> свойство. Если значение текущего <see cref="T:System.DateTimeOffset" /> экземпляра более ранняя, чем <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или более поздней версии, чем <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод вызывает <see cref="T:System.ArgumentOutOfRangeException" />. Ниже приведен пример. Он выполняет попытку отформатировать дату, которая находится вне диапазона от <see cref="T:System.Globalization.UmAlQuraCalendar" /> класса.  
  
[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception4.vb#4)]</para></block>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">Пример. Служебная программа форматирования .NET Framework 4</related>
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToUniversalTime();" />
      <MemberSignature Language="F#" Value="member this.ToUniversalTime : unit -&gt; DateTimeOffset" Usage="dateTimeOffset.ToUniversalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует текущий <see cref="T:System.DateTimeOffset" /> объект <see cref="T:System.DateTimeOffset" /> значение, представляющее время (UTC).</summary>
        <returns>Объект, представляющий дату и время текущего <see cref="T:System.DateTimeOffset" /> преобразовать объект в формате UTC в формате UTC.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает <xref:System.DateTimeOffset> которого <xref:System.DateTimeOffset.Offset%2A> свойство имеет значение ноль.  
  
 Значение текущего <xref:System.DateTimeOffset> объект и значение <xref:System.DateTimeOffset> объект, возвращенный вызовом метода представляют тот же момент времени. То есть если оба передаются <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> метода, метод возвращает `true`.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.ToUniversalTime%2A> метод для преобразования местного времени и нескольких других случаях по Гринвичу (UTC).  
  
 [!code-csharp[System.DateTimeOffset.Methods#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#16)]
 [!code-vb[System.DateTimeOffset.Methods#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToLocalTime" />
        <altmember cref="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeMilliseconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeMilliseconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeMilliseconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeMilliseconds();" />
      <MemberSignature Language="F#" Value="member this.ToUnixTimeMilliseconds : unit -&gt; int64" Usage="dateTimeOffset.ToUnixTimeMilliseconds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает количество миллисекунд, истекших с 1970-01-01T00:00:00.000Z.</summary>
        <returns>Количество миллисекунд, истекших с 1970-01-01T00:00:00.000Z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время UNIX, представляет собой число секунд, истекших с 1970-01-01T00:00:00Z (1 января 1970, в 12:00 по Гринвичу). Он учитывает корректировочных секунд. Этот метод возвращает число миллисекунд времени Unix.  
  
 Этот метод сначала преобразует текущий экземпляр в формат UTC перед возвращением число миллисекунд в его время Unix. Для значений даты и времени меньше 1970-01-01T00:00:00Z, этот метод возвращает отрицательное значение.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeSeconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeSeconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeSeconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeSeconds();" />
      <MemberSignature Language="F#" Value="member this.ToUnixTimeSeconds : unit -&gt; int64" Usage="dateTimeOffset.ToUnixTimeSeconds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает количество секунд, истекших с 1970-01-01T00:00:00Z.</summary>
        <returns>Количество секунд, истекших с 1970-01-01T00:00:00Z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время UNIX, представляет собой число секунд, истекших с 1970-01-01T00:00:00Z (1 января 1970, в 12:00 по Гринвичу). Он учитывает корректировочных секунд.  
  
 Этот метод сначала преобразует текущий экземпляр в формат UTC перед возвращением его время Unix. Для значений даты и времени меньше 1970-01-01T00:00:00Z, этот метод возвращает отрицательное значение.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.ToUnixTimeSeconds%2A> метод для возврата времени Unix значений, равных, незадолго до и через некоторое время после 1970-01-01T00:00:00Z.  
  
 [!code-csharp[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/cs/tounixtimeseconds1.cs#1)]
 [!code-vb[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/vb/tounixtimeseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional formatProvider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="dateTimeOffset.TryFormat (destination, charsWritten, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его <see cref="T:System.DateTimeOffset" /> эквивалент.</summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="input" /> равно <see langword="null" /> или в нем не содержится допустимое строковое представление даты и времени. Этот параметр передается неинициализированным.</param>
        <summary>Предпринимает попытку преобразования указанного строкового представления даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" /> и возвращает значение, позволяющее определить успешность преобразования.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> метод аналогичен <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=nameWithType> за тем исключением, что он не создания исключения, если преобразование завершается неудачей. Он анализирует строку с тремя элементами, которые могут присутствовать в любом порядке и разделяются пробелами. В следующей таблице показаны эти три элемента.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Смещение >|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов не является обязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует, значение по умолчанию значение — текущий день. Если \<даты > уже установлен, но его компонент года содержит только две цифры, он преобразуется в год в текущего календаря текущего языка и региональных параметров на основе значения из <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойство. Если \<время > отсутствует, значение по умолчанию значение равно 12:00:00 AM. Если \<смещение > отсутствует, значение по умолчанию значение — это смещение местного часового пояса. Если \<смещение > присутствует, он может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > необходимо включить символ знака или этот метод возвращает `false`.  
  
 `input` Строка анализируется с использованием сведений о форматировании в <xref:System.Globalization.DateTimeFormatInfo> объект инициализирован для текущего языка и региональных параметров. Чтобы проанализировать строку, содержащую назначенный форматирования, не обязательно соответствуют, текущего языка и региональных параметров, используйте <xref:System.DateTimeOffset.TryParseExact%2A> метод и указания спецификатора формата.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> метода для синтаксического анализа несколько строк в различных форматах даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">Пример. Служебная программа форматирования .NET Framework 4</related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <param name="result">После возврата из этого метода содержит значение <see cref="T:System.DateTimeOffset" />, эквивалентное дате и времени, заданным в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="input" /> равно <see langword="null" /> или в нем не содержится допустимое строковое представление даты и времени. Этот параметр передается неинициализированным.</param>
        <summary>Предпринимает попытку преобразования указанного строкового представления даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" /> и возвращает значение, позволяющее определить успешность преобразования.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод аналогичен <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> за тем исключением, что он не создания исключения, если преобразование завершается неудачей. Метод анализирует строку с тремя элементами, которые могут присутствовать в любом порядке и разделяются пробелами. В следующей таблице показаны эти три элемента.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|«1:02:03 PM»|  
|\<Смещение >|"-7:30"|  
  
 Несмотря на то, что каждый из этих элементов не является обязательным, \<смещение > не может отображаться самостоятельно. Необходимо указать вместе с либо \<даты > или \<время >. Если \<даты > отсутствует, значение по умолчанию значение — текущий день. Если \<даты > уже установлен, но его компонент года содержит только две цифры, он преобразуется в год в `provider` текущем календаре параметра на основе значения из <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойство. Если \<время > отсутствует, значение по умолчанию значение равно 12:00:00 AM. Если \<смещение > отсутствует, значение по умолчанию значение — это смещение местного часового пояса или <xref:System.TimeSpan.Zero> Если <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> или <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> значение указывается в `styles`. Если \<смещение > присутствует, он может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > необходимо включить символ знака или этот метод возвращает `false`.  
  
 `input` Синтаксический анализ строки с помощью конкретного языка и региональных параметров информации форматирования в <xref:System.Globalization.DateTimeFormatInfo> объекта, заданного параметром `formatProvider` параметр. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры, форматирование которого используется в `input`. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет формат, который используется в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Кроме того, каждый элемент могут быть отделены начальные или конечные пробелы и \<Дата > и \<время > компонентов может содержать внутренние пробелы (например, 6:   00:00). Только \<смещение > компонент не может содержать внутренние пробелы.  
  
 Если `provider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 Положительный или отрицательный знак, используемый в \<смещение > должен быть либо + или -. Он не определен <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> или <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> свойства <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый `formatprovider` параметра <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство.  
  
 Следующие члены класса <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются:  
  
|Член DateTimeStyles|Комментарии|  
|---------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ строки, представленной `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно анализа строки и последующего вызова возвращаемый объект <xref:System.DateTimeOffset.ToUniversalTime> метод.|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Несмотря на то что допустимым, это значение игнорируется. Внутренние пробелы допускается в \<Дата > и \<время > компонентов.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Несмотря на то что допустимым, это значение игнорируется. Начальный пробел разрешено любому компоненту анализируемой строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Несмотря на то что допустимым, это значение игнорируется. Перед каждого компонента в анализируемой строке разрешен конечные пробелы.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Это поведение установлено по умолчанию. Он не может быть переопределен, указав более строгие <xref:System.Globalization.DateTimeStyles> значение перечисления, например <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Указывает, что если `input` отсутствует параметр \<смещение > элемент, должно быть указано смещение местного часового пояса. Это поведение по умолчанию <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Указывает, что если `input` отсутствует параметр \<смещение > элемент, должно быть указано смещение UTC (00:00).|  
|<xref:System.Globalization.DateTimeStyles.None>|Несмотря на то что допустимым, это значение игнорируется и не оказывает влияния.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Так как <xref:System.DateTimeOffset> структуры не включает `Kind` , это значение не оказывает никакого влияния.|  
  
 Только <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> значение не поддерживается. <xref:System.ArgumentException> Возникает, если это значение включено в `styles` параметра.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод с разнообразными <xref:System.Globalization.DateTimeStyles> значения для анализа некоторых строк в различных форматах даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
-или- 
 Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
  
-или- 
 Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Диапазон символов, содержащий представление даты и времени, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий требуемый формат <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование не будет выполнено, если</param>
        <summary>Преобразует представление даты и времени в диапазоне символов в его эквивалент <see cref="System.DateTimeOffset" />, используя заданный формат, сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат отображения даты и времени должен полностью соответствовать заданному формату.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Эта перегрузка может как <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> метода, за исключением того, что этот метод не вызывает исключение при сбое преобразования. Он анализирует представление даты и времени, которое должно точно соответствовать шаблону, указанному `format` параметра. Если `input` не соответствуют этому шаблону, с некоторыми возможными вариациями в пустое пространство, определяемое `styles` сбое операции синтаксического анализа параметра, а метод возвращает `false`.  
  
`format` Параметр является диапазон символов, содержащей один стандартный описатель формата, либо один или несколько описателей настраиваемого формата, которые определяют требуемый шаблон для `input`. Дополнительные сведения о допустимых кодах форматирования, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` включает в себя `z`, `zz`, или `zzz` описателей настраиваемого формата, чтобы указать, что смещение должны присутствовать в `input`, этому смещению должен включать знак плюс или минус. Если знак отсутствует, операция анализа завершается неудачей и метод возвращает `false`.  
  
Если `format` требует `input` содержать дату, но не время, полученный в результате <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если `format` требует `input` содержал время без даты, полученный в результате <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если `format` не требует `input` содержать смещение, смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeLocal>, присваивается смещение местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение времени в формате UTC, или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещение местного часового пояса.  
  
Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. То же самое верно для точного шаблона параметра `input` Если `format` представляет собой строку описатель стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основании которого `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и стандартные форматы разрешена в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешено ли пустое пространство во входной строке, указывает, а также порядок синтаксического анализа строк без явной компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены последствия каждого поддерживаемого члена.  
  
|Член`DateTimeStyles` |Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно синтаксический анализ представление даты и времени и последующего вызова <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение локального часового пояса. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для включения внутренние пробелы, не указан формат. Лишние пробелы могут располагаться между компоненты даты и времени, а также внутри отдельных компонентов, отличный от смещения и учитывается при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать пробелы, не предусмотренные `format`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные `format`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы не задал `format`. Все дополнительные символы-разделители не указан в `format` при синтаксическом анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не допускается в `input`. Пробелы должны располагаться в точности так, как указано в `format`. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не оказывает влияния, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
-или- Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
-или- Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
Этот метод анализирует строковым представлением даты, которая не соответствует ни одному из шаблонов, назначенных `formats` массива. Если `input` не соответствует ни одному из этих шаблонов с любыми изменениями, определяется `styles` сбое операции синтаксического анализа параметра, а метод возвращает `false`. Помимо сравнение `input` на несколько строк, содержащих описателей формата, этот перегруженный метод ведет себя идентично <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> метод.  
  
 `formats` Параметр является массивом строк, элементы которого содержат один стандартный описатель формата или один или несколько описателей настраиваемого формата, которые определяют возможные шаблон `input`. Дополнительные сведения о допустимых кодах форматирования, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если совпадающего элемента в `formats` включает в себя `z`, `zz`, или `zzz` описателей настраиваемого формата, чтобы указать, что смещение должны присутствовать в `input`, этому смещению должен включать знак плюс или минус. Если знак отсутствует, операция анализа завершается неудачей и метод возвращает `false`.  
  
> [!IMPORTANT]
>  С помощью `formats` параметр этой перегрузки, чтобы указать несколько форматов может помочь снизить разочарование, многие пользователи сталкиваются при вводе значения даты и времени. В частности возможность задать несколько шаблонов ввода позволяет приложению обрабатывать представления даты и времени, которые могут присутствовать или отсутствовать начальных нулей в месяцы, дни, часы, минуты и секунды. Пример иллюстрирует это.  
  
 Если совпадающего элемента в `formats` требует `input` содержать дату, но не время, полученный в результате <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если совпадающего элемента в `formats` требует, что входные данные содержат время, но не дату, полученный в результате <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если совпадающего элемента в `formats` не требует `input` содержать смещение, смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>, присваивается смещение местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>, смещение времени в формате UTC, или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещение местного часового пояса.  
  
 Определенная дата и время символы, используемые в `input` определяются `formatProvider` параметра. То же самое верно для точного шаблона параметра `input` Если соответствующий элемент из `formats` представляет собой строку описатель стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основании которого `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешен ли пустое пространство во входной строке, указывает, а также порядок синтаксического анализа строк без явной компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены последствия каждого поддерживаемого члена.  
  
|Член`DateTimeStyles` |Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно анализа строки и последующего вызова <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если совпадающего элемента в `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение локального часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если совпадающего элемента в `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для включения внутренние пробелы, не предусмотренные элементами в `formats`. Лишние пробелы могут располагаться между компоненты даты и времени, а также внутри отдельных компонентов (за исключением смещение) и учитывается при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` для включения начальные пробелы, не предусмотренные элементами в `formats`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные элементами в `formats`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы, не заданные элементы в `formats`. Все дополнительные символы-разделители не указан в сопоставляемый элемент `formats` при синтаксическом анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не допускается в `input`. Пробелы должны располагаться в точности совпадают с указанными в соответствующем элементе в `formats` для успешного сопоставления. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не влияет, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
-или- Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
-или- Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий требуемый формат <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое показывает разрешенный формат ввода. Обычно указывается значение <see langword="None" />.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачно, если параметр <paramref name="input" /> имеет значение <see langword="null" /> или не содержит допустимое строчное представление даты и времени в требуемом формате, заданном параметрами <paramref name="format" /> и <c>provider</c>. Этот параметр передается неинициализированным.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод аналогичен <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метода, за исключением того, что этот метод не вызывает исключение при сбое преобразования. Он анализирует строковое представление даты и времени, которое должно точно соответствовать шаблону, указанному `format` параметра. Если `input` строки не соответствуют этому шаблону, с некоторыми возможными вариациями в пустое пространство, определяемое `styles` сбое операции синтаксического анализа параметра, а метод возвращает `false`.  
  
 `format` Параметр является строкой, содержащей один стандартный описатель формата, либо один или несколько описателей настраиваемого формата, которые определяют требуемый шаблон для `input`. Дополнительные сведения о допустимых кодах форматирования, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` включает в себя `z`, `zz`, или `zzz` описателей настраиваемого формата, чтобы указать, что смещение должны присутствовать в `input`, этому смещению должен включать знак плюс или минус. Если знак отсутствует, операция анализа завершается неудачей и метод возвращает `false`.  
  
 Если `format` требует `input` содержать дату, но не время, полученный в результате <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если `format` требует `input` содержал время без даты, полученный в результате <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если `format` не требует `input` содержать смещение, смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeLocal>, присваивается смещение местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение времени в формате UTC, или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещение местного часового пояса.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. То же самое верно для точного шаблона параметра `input` Если `format` представляет собой строку описатель стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основании которого `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и стандартные форматы разрешена в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешено ли пустое пространство во входной строке, указывает, а также порядок синтаксического анализа строк без явной компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены последствия каждого поддерживаемого члена.  
  
|Член`DateTimeStyles` |Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно анализа строки и последующего вызова <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение локального часового пояса. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если `format` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для включения внутренние пробелы, не указан формат. Лишние пробелы могут располагаться между компоненты даты и времени, а также внутри отдельных компонентов, отличный от смещения и учитывается при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать пробелы, не предусмотренные `format`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные `format`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы не задал `format`. Все дополнительные символы-разделители не указан в `format` при синтаксическом анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не допускается в `input`. Пробелы должны располагаться в точности так, как указано в `format`. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не оказывает влияния, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
## Examples 

 В следующем примере используется <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод стандартные и настраиваемые описатели формата, инвариантные язык и региональные параметры и различных <xref:System.Globalization.DateTimeStyles> значения для анализа нескольких строк даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#1)]  

В следующем примере используется широкий набор <xref:System.Globalization.DateTimeStyles> значения для синтаксического анализа массив строк, которые должны соответствовать [ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier). Как видно из примера, строки, которые находятся в правильный формат происходит сбой анализа, если:

- они содержат пустое пространство и соответствующий <xref:System.Globalization.DateTimeStyles> флаг (такие как <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> не был задан в вызове метода.

- они содержат элементы даты и времени, которые выходят за пределы диапазона.

Строки, которые не указывают смещения от UTC, предполагается наличие смещение местного часового пояса (в данном случае -07:00, что отражает смещение пояса Тихоокеанское летнее время) Если <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> флаг передается в вызове метода. В этом случае они считаются всеобщее скоординированное время.

[!code-csharp[Parsing ISO 8601 strings](~/samples/snippets/csharp/api/system/datetimeoffset/tryparseexact/tryparseexacto8601-2.cs)]
[!code-vb[Parsing ISO 8601 strings](~/samples/snippets/visualbasic/api/system/datetimeoffset/tryparseexact/tryparseexacto8601-2.vb)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
-или- 
 Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
  
-или- 
 Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
        <block subset="none" type="usage"><para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.TryParseExact" /> возвращает <see langword="false" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, обозначение AM/PM игнорируется.</para></block>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formats">Массив, в котором задаются ожидаемые форматы <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое показывает разрешенный формат ввода. Обычно указывается значение <see langword="None" />.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачно, если параметр <paramref name="format" /> не содержит допустимое строчное представление даты и времени или же даты и времени в требуемом формате, заданном параметром <paramref name="formats" />, или если параметр <see langword="null" /> имеет значение <paramref name="input" />. Этот параметр передается неинициализированным.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный массив форматов, указанные сведения о форматировании, связанные с языком и региональными параметрами, и стиль форматирования. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> Метод анализирует строковым представлением даты, которая не соответствует ни одному из шаблонов, назначенных `formats` массива. Если `input` строка не соответствует ни одному из этих шаблонов с любыми изменениями, определяется `styles` сбое операции синтаксического анализа параметра, а метод возвращает `false`. Помимо сравнение `input` на несколько строк, содержащих описателей формата, этот перегруженный метод ведет себя идентично <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод.  
  
 `formats` Параметр является массивом строк, элементы которого содержат один стандартный описатель формата или один или несколько описателей настраиваемого формата, которые определяют возможные шаблон `input`. Дополнительные сведения о допустимых кодах форматирования, см. в разделе [Standard Date и Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [Custom Date и Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если совпадающего элемента в `formats` включает в себя `z`, `zz`, или `zzz` описателей настраиваемого формата, чтобы указать, что смещение должны присутствовать в `input`, этому смещению должен включать знак плюс или минус. Если знак отсутствует, операция анализа завершается неудачей и метод возвращает `false`.  
  
> [!IMPORTANT]
>  С помощью `formats` параметр этой перегрузки, чтобы указать несколько форматов может помочь снизить разочарование, многие пользователи сталкиваются при вводе значения даты и времени. В частности возможность задать несколько шаблонов ввода позволяет приложению обрабатывать представления даты и времени, которые могут присутствовать или отсутствовать начальных нулей в месяцы, дни, часы, минуты и секунды. Пример иллюстрирует это.  
  
 Если совпадающего элемента в `formats` требует `input` содержать дату, но не время, полученный в результате <xref:System.DateTimeOffset> объекту присваивается время, соответствующее полуночи (0: 00:00). Если совпадающего элемента в `formats` требует, что входные данные содержат время, но не дату, полученный в результате <xref:System.DateTimeOffset> объекту присваивается текущая дата в локальной системе. Если совпадающего элемента в `formats` не требует `input` содержать смещение, смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeLocal>, присваивается смещение местного часового пояса <xref:System.DateTimeOffset> объекта. Если `styles` включает в себя <xref:System.Globalization.DateTimeStyles.AssumeUniversal>, смещение времени в формате UTC, или + 00:00, назначается <xref:System.DateTimeOffset> объекта. Если значение не указано, используется смещение местного часового пояса.  
  
 Определенная дата и время символы и строки, используемые в `input` определяются `formatProvider` параметра. То же самое верно для точного шаблона параметра `input` Если соответствующий элемент из `formats` представляет собой строку описатель стандартного формата. `formatProvider` Параметр может иметь одно из следующих:  
  
-   Объект <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры на основании которого `input` интерпретируется. <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство определяет символы и форматирование в `input`.  
  
-   Объект <xref:System.Globalization.DateTimeFormatInfo> объект, который определяет формат данных даты и времени.  
  
 Если `formatprovider` — `null`, <xref:System.Globalization.CultureInfo> используется объект, соответствующий текущего языка и региональных параметров.  
  
 `styles` Параметр определяет, разрешен ли пустое пространство во входной строке, указывает, а также порядок синтаксического анализа строк без явной компонент смещения. Все члены <xref:System.Globalization.DateTimeStyles> перечисления поддерживаются за исключением <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>. В следующей таблице перечислены последствия каждого поддерживаемого члена.  
  
|Член`DateTimeStyles` |Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ `input` и, если необходимо, преобразует его в формат UTC. Это эквивалентно анализа строки и последующего вызова <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метод возвращаемого <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если совпадающего элемента в `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение локального часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если совпадающего элемента в `formats` не требует `input` содержалось значение смещения, возвращенный <xref:System.DateTimeOffset> объекту присваивается смещение UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` для включения внутренние пробелы, не предусмотренные элементами в `formats`. Лишние пробелы могут располагаться между компоненты даты и времени, а также внутри отдельных компонентов (за исключением смещение) и учитывается при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` для включения начальные пробелы, не предусмотренные элементами в `formats`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не предусмотренные элементами в `formats`. Они игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` содержать начальные, конечные и внутренние пробелы, не заданные элементы в `formats`. Все дополнительные символы-разделители не указан в сопоставляемый элемент `formats` при синтаксическом анализе строки игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что дополнительные пробелы не допускается в `input`. Пробелы должны располагаться в точности совпадают с указанными в соответствующем элементе в `formats` для успешного сопоставления. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не влияет, так как <xref:System.DateTimeOffset> структуры не включает `Kind` свойство.|  
  
   
  
## Examples  
 Следующий пример определяет несколько форматы входных данных для строковое представление даты и времени и значение смещения, а затем передает строку, которая вводится пользователем, чтобы <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод.  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
-или- 
 Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
  
-или- 
 Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
        <block subset="none" type="usage"><para>В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <see cref="Overload:System.DateTimeOffset.TryParseExact" /> возвращает <see langword="false" /> Если анализируемая строка содержит компонент часов и обозначение AM/PM, которых нет в соглашении. В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, обозначение AM/PM игнорируется.</para></block>
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset UnixEpoch;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnixEpoch : DateTimeOffset" Usage="System.DateTimeOffset.UnixEpoch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcDateTime">
      <MemberSignature Language="C#" Value="public DateTime UtcDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcDateTime : DateTime" Usage="System.DateTimeOffset.UtcDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.DateTime" /> значение, представляющее время в формате UTC дату и время текущего <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Время в формате UTC дату и время текущего <see cref="T:System.DateTimeOffset" /> объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.UtcDateTime%2A> Свойство выполняет два преобразования:  
  
-   Он преобразует дату и время текущего <xref:System.DateTimeOffset> объект в формате UTC в формате UTC. Преобразование выполняется путем вычитания значения <xref:System.DateTimeOffset.Offset%2A> свойства из дату и время текущего <xref:System.DateTimeOffset> объекта.  
  
-   Она преобразует <xref:System.DateTimeOffset> значение <xref:System.DateTime> значение.  
  
 <xref:System.DateTime.Kind%2A> Свойства возвращаемого <xref:System.DateTimeOffset.DateTime%2A> имеет значение <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.  
  
 Получение значения <xref:System.DateTimeOffset.UtcDateTime%2A> свойство эквивалентно вызову текущего <xref:System.DateTimeOffset> объекта `ToUniversalTime.DateTime` свойства, за исключением случаев, <xref:System.DateTime.Kind%2A> последнее свойство <xref:System.DateTime> значение <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере показано, как использование <xref:System.DateTimeOffset.UtcDateTime%2A> свойство для отображения <xref:System.DateTimeOffset> значение и его соответствующее время в формате UTC.  
  
 [!code-csharp[System.DateTimeOffset.Properties#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#17)]
 [!code-vb[System.DateTimeOffset.Properties#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTimeOffset UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset UtcNow { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcNow : DateTimeOffset" Usage="System.DateTimeOffset.UtcNow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.DateTimeOffset" /> даты и времени которого установлены текущие время и дату в формате UTC (UTC), а смещение которого равно <see cref="F:System.TimeSpan.Zero" />.</summary>
        <value>Объект, Дата и время которого является текущий формате UTC (UTC), а смещение которого равно <see cref="F:System.TimeSpan.Zero" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.UtcNow%2A> Вычисление свойства текущему всеобщее скоординированное время (UTC) на основе времени часов локальной системы и смещения часового пояса локальной системы.  
  
 Компонент миллисекунд текущего времени UTC точность зависит от разрешения системных часов. В Windows NT 3.5 и более поздней версии и версии операционной системы Windows Vista разрешение часов является приблизительно соответствует 10 – 15 миллисекундам.  
  
   
  
## Examples  
 Следующий пример иллюстрирует связь между временем в формате UTC и местным временем.  
  
 [!code-csharp[System.DateTimeOffset.Properties#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#18)]
 [!code-vb[System.DateTimeOffset.Properties#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
      </Docs>
    </Member>
    <Member MemberName="UtcTicks">
      <MemberSignature Language="C#" Value="public long UtcTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UtcTicks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UtcTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcTicks : int64" Usage="System.DateTimeOffset.UtcTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество тактов, представляющее дату и время текущего <see cref="T:System.DateTimeOffset" /> объект в формате UTC (UTC).</summary>
        <value>Количество тактов в <see cref="T:System.DateTimeOffset" /> объект в формате UTC (UTC).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.DateTimeOffset.UtcTicks%2A> свойство представляет количество 100-наносекундных интервалов, прошедших с 12:00:00 1 января 0001 года (значение <xref:System.DateTimeOffset.MinValue>). Он не включает тактов, можно добиться путем корректировочных секунд. Наносекунда равна одной миллиардной доли секунды; Существуют десять миллионов тактов в секунду. Значение <xref:System.DateTimeOffset.UtcTicks%2A> свойство в диапазоне от `DateTimeOffset.MinValue.Ticks` для `DateTimeOffset.MaxValue.Ticks`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Year : int" Usage="System.DateTimeOffset.Year" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент года даты, представленный текущим <see cref="T:System.DateTimeOffset" /> объекта.</summary>
        <value>Компонент года текущего <see cref="T:System.DateTimeOffset" /> объекта, выраженный в виде целочисленного значения в диапазоне от 0 до 9999.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Year%2A> Свойство не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> годе объекта путем вызова <xref:System.DateTimeOffset.ToString%2A> метод с помощью описателей настраиваемого формата «y», «yy» или «yyyy».  
  
   
  
## Examples  
 В следующем примере отображается компонент года <xref:System.DateTimeOffset> значение четырьмя способами:  
  
-   Извлекая значение <xref:System.DateTimeOffset.Year%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «y».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «yy».  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метод с помощью описателя формата «yyyy».  
  
 [!code-csharp[System.DateTimeOffset.Properties#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#19)]
 [!code-vb[System.DateTimeOffset.Properties#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>