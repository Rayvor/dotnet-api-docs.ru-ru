<Type Name="DateTimeOffset" FullName="System.DateTimeOffset">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9aa7801ce8ad6e5b2d14fd61231d52311cd0b3a3" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70372408" /></Metadata><TypeSignature Language="C#" Value="public struct DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeOffset extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IEquatable`1&lt;valuetype System.DateTimeOffset&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTimeOffset" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTimeOffset&#xA;Implements IComparable, IComparable(Of DateTimeOffset), IDeserializationCallback, IEquatable(Of DateTimeOffset), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DateTimeOffset = struct&#xA;    interface IFormattable&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTimeOffset&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет момент времени, который обычно выражается в виде даты и времени суток, относительно времени в формате UTC.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Структура включает <xref:System.DateTimeOffset> значение вместе со свойством, которое определяет разницу между датой и временем текущего экземпляра и временем в формате UTC. <xref:System.DateTimeOffset.Offset%2A> <xref:System.DateTimeOffset> <xref:System.DateTime> Поскольку он точно определяет дату и время относительно времени в формате UTC, <xref:System.DateTimeOffset> структура не `Kind` включает член, как это <xref:System.DateTime> делает структура. Он представляет значения даты и времени со значениями, в которых диапазоны UTC — от 12:00:00 полночи 1 января 0001 г. Анно Домини (общая эра), 11:59:59 P.M., 31 декабря 9999 г. н. э. (C.E.).  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 Компонент времени в <xref:System.DateTimeOffset> значении измеряется в 100-наносекундных единицах, именуемых тактами, а конкретная дата — число тактов с 12:00 полуночи, 1 января 0001 г. эры <xref:System.Globalization.GregorianCalendar> в календаре. <xref:System.DateTimeOffset> Значение всегда выражается в контексте явного или стандартного календаря. Такты, которые могут быть назначены високосным секундам, не включаются в общее число тактов.  
  
 <xref:System.DateTimeOffset> Хотя значение включает смещение, это не полностью структура данных, учитывающая часовой пояс. Хотя смещение от времени в формате UTC является одной из характеристик часового пояса, оно не однозначно определяет часовой пояс. Не только несколько часовых поясов имеют одинаковое смещение относительно времени в формате UTC, но смещение одного часового пояса меняется, если оно обнаруживает переход на летнее время. Это означает, что, как только <xref:System.DateTimeOffset> значение будет связано с часовым поясом, оно больше не сможет однозначно связать его с исходным часовым поясом.  
  
 Поскольку <xref:System.DateTimeOffset> является структурой <xref:System.DateTimeOffset> , объект, который был объявлен, но не инициализирован в противном случае, содержит значения по умолчанию для каждого из полей элементов. Это означает, что <xref:System.DateTimeOffset.DateTime%2A> свойство имеет <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> значение, а <xref:System.TimeSpan.Zero?displayProperty=nameWithType>его <xref:System.DateTimeOffset.Offset%2A> свойство имеет значение.  
  
 Можно создать новое <xref:System.DateTimeOffset> значение, вызвав любую из перегрузок своего конструктора, которые похожи на перегруженные конструкторы <xref:System.DateTime> для структуры. Можно также создать новое <xref:System.DateTimeOffset> значение, назначив <xref:System.DateTime> ему значение. Это неявное преобразование; Он не требует оператора приведения (in C#) или вызова метода преобразования (в Visual Basic). <xref:System.DateTimeOffset> Можно также инициализировать значение из строкового представления даты и времени, вызвав несколько методов синтаксического анализа статических строк, которые включают <xref:System.DateTimeOffset.ParseExact%2A> <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.TryParse%2A>, и <xref:System.DateTimeOffset.TryParseExact%2A>.  
  
 Члены <xref:System.DateTimeOffset> структуры предоставляют функциональные возможности в следующих областях:  
  
-   Арифметические операции с датами и временем.  
  
     Можно добавлять или вычитать либо даты, либо интервалы времени из <xref:System.DateTimeOffset> определенного значения. Арифметические операции <xref:System.DateTimeOffset> со значениями, в отличие от <xref:System.DateTime> значений, заменяют различия в смещениях времени при возврате результата. Например, в следующем коде переменные используются <xref:System.DateTime> для вычитания текущего местного времени из текущего времени в формате UTC. Затем в коде используются <xref:System.DateTimeOffset> переменные для выполнения одной операции. Вычитание со <xref:System.DateTime> значениями возвращает разность местного часового пояса от времени в формате UTC, в то время <xref:System.DateTimeOffset> как вычитание с возвращаемыми <xref:System.TimeSpan.Zero?displayProperty=nameWithType>значениями.  
  
     [!code-csharp[System.DateTimeOffset.Type#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Type/cs/Type.cs#1)]
     [!code-vb[System.DateTimeOffset.Type#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Type/vb/Type.vb#1)]  
  
-   Операции преобразования типов.  
  
     Можно преобразовать <xref:System.DateTimeOffset> значения в <xref:System.DateTime> значения и наоборот.  
  
-   Операции обработки и извлечения времени.  
  
     Можно извлечь дату или время для <xref:System.DateTimeOffset> значения. Можно также получить значение определенного <xref:System.DateTimeOffset> компонента, например его год или месяц.  

   > [!NOTE]
   >  При работе со значением тактов, которое необходимо преобразовать в какой-либо другой интервал времени, например в минуты или <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>секунды, следует использовать константу <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType> <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>,, или <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> , чтобы выполнить преобразование. Например, чтобы добавить число секунд, представленное указанным числом тактов, в <xref:System.DateTimeOffset.Second%2A> компонент <xref:System.DateTimeOffset> значения, можно использовать выражение `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  
  

-   Преобразование даты и времени.  
  
     Любое <xref:System.DateTimeOffset> значение можно преобразовать в другое <xref:System.DateTimeOffset> значение, представляющее тот же момент времени в другом часовом поясе. Однако правила коррекции часового пояса применяются только в случае <xref:System.DateTimeOffset.ToLocalTime%2A> метода, который <xref:System.DateTimeOffset> преобразует значение в дату и время в локальной системной зоне.  
  
-   Сравнение даты и времени.  
  
     Можно определить, является ли какое <xref:System.DateTimeOffset> -либо конкретное значение более ранним, чем другое <xref:System.DateTimeOffset> значение, или более поздним. Перед выполнением сравнения все значения преобразуются в формат UTC.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/datetime/choosing-between-datetime.md">Выбор между типами DateTime, DateTimeOffset, TimeSpan и TimeZoneInfo</related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/">Пример: служебная программа форматирования .NET CoreC#WinForms ()</related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/">Пример: служебная программа форматирования для .NET Core WinForms (Visual Basic)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : DateTime -&gt; DateTimeOffset" Usage="new System.DateTimeOffset dateTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime">Дата и время.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного значения <see cref="T:System.DateTime" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поведение этого конструктора зависит от значения <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойства `dateTime` параметра:  
  
-   Если <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> значение <xref:System.TimeSpan.Zero>равно <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, `dateTime` свойствонового<xref:System.DateTimeOffset.Offset%2A> экземпляра устанавливается равным, а свойство устанавливается равным. <xref:System.DateTimeOffset.DateTime%2A>  
  
-   Если <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> значение <xref:System.DateTimeOffset.Offset%2A> `dateTime`равно <xref:System.DateTimeKind.Local?displayProperty=nameWithType> или<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> ,<xref:System.DateTimeOffset.DateTime%2A> свойство нового экземпляра устанавливается равным, а свойство устанавливается равным смещению текущего часового пояса локальной системы.  
  
   
  
## Examples  
 В следующем примере показано, как значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойства `dateTime` параметра влияет на значение даты и времени, возвращаемое этим конструктором.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#1)]
 [!code-vb[System.DateTimeOffset.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время в формате UTC, которые получаются в результате применения смещения, более раннего чем <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Дата и время в формате UTC, которые получаются в результате применения смещения, более позднего чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (DateTime dateTime, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime dateTime, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(DateTime dateTime, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : DateTime * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (dateTime, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dateTime">Дата и время.</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного значения <see cref="T:System.DateTime" /> и смещения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поведение этого конструктора частично зависит от значения <xref:System.DateTime.Kind%2A> свойства `dateTime` параметра:  
  
-   Если значение <xref:System.DateTime.Kind%2A> равно <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> ,то<xref:System.ArgumentException> значение параметра должно быть равно 0 или выдано исключение. `offset`  
  
-   Если значение <xref:System.DateTime.Kind%2A> равно <xref:System.DateTimeKind.Local?displayProperty=nameWithType> ,то<xref:System.ArgumentException> значение параметра должно быть равно смещению местного часового пояса относительно времени в формате UTC для этой конкретной даты или если выдается исключение. `offset`  
  
-   Если значение <xref:System.DateTime.Kind%2A> равно <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, `offset` параметр может иметь любое допустимое значение.  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.DateTimeOffset> объект с датой и временем и смещением местного часового пояса, если этот часовой пояс не известен заранее.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#3)]
 [!code-vb[System.DateTimeOffset.Constructors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Utc" />, а <paramref name="offset" /> не равно нулю.  
  
- или - 
 <paramref name="dateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Local" />, а <paramref name="offset" /> не равно смещению местного часового пояса в системе.  
  
- или - 
 <paramref name="offset" /> не следует указывать в целых минутах.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> меньше -14 часов или больше 14 часов.  
  
-или- 
 Значение <see cref="P:System.DateTimeOffset.UtcDateTime" /> меньше <see cref="F:System.DateTimeOffset.MinValue" /> или больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (long ticks, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(long ticks, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int64 * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (ticks, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ticks">Дата и время, представленные в виде числа 100-наносекундных интервалов, прошедших с 00:00 1 января 0001 г.</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного количества тактов и смещения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно при попытке вызова <xref:System.DateTimeOffset.%23ctor%2A> конструктора для создания экземпляра <xref:System.DateTimeOffset> значения с местным временем и смещения, отличного от того, что задано в <xref:System.ArgumentException>местном часовом поясе, возникает исключение. Эту перегрузку <xref:System.DateTimeOffset> конструктора можно использовать для обхода этого ограничения. В следующем примере число тактов в местном времени используется для создания экземпляра <xref:System.DateTimeOffset> значения, смещение которого не обязательно представляется по местному времени:  
  
 [!code-csharp[System.DateTimeOffset.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#4)]
 [!code-vb[System.DateTimeOffset.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#4)]  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset> объект инициализируется с использованием числа тактов в произвольной дате (в данном случае 16 июля 2007, в 1:32 PM) со смещением-5.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#2)]
 [!code-vb[System.DateTimeOffset.Constructors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> не указано в целых минутах.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Свойство <see cref="P:System.DateTimeOffset.UtcDateTime" /> является более ранним чем <see cref="F:System.DateTimeOffset.MinValue" />, или более поздним чем <see cref="F:System.DateTimeOffset.MaxValue" />.  
  
-или- 
 Значение <paramref name="ticks" /> меньше <see langword="DateTimeOffset.MinValue.Ticks" /> или больше <see langword="DateTimeOffset.MaxValue.Ticks" />.  
  
-или- 
 <paramref name="Offset" /> меньше -14 часов или больше 14 часов.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Год (от 1 до 9999).</param>
        <param name="month">Месяц (от 1 до 12).</param>
        <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
        <param name="hour">Часы (от 0 до 23).</param>
        <param name="minute">Минуты (от 0 до 59).</param>
        <param name="second">Секунды (от 0 до 59).</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя указанный год, месяц, день, час, минуту, секунду и смещение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор интерпретирует `year`, `month`, и `day` как год, месяц и день григорианского календаря. Чтобы создать экземпляр <xref:System.DateTimeOffset> значения, используя год, месяц и день в другом календаре, <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> вызовите конструктор.  
  
   
  
## Examples  
 В следующем примере создается экземпляр <xref:System.DateTimeOffset> объекта с <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> помощью перегрузки конструктора.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#5)]
 [!code-vb[System.DateTimeOffset.Constructors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="year" /> меньше единицы или больше 9999.  
  
- или - 
 Значение <paramref name="month" /> меньше единицы или больше 12.  
  
-или- 
 Значение параметра <paramref name="day" /> меньше единицы или больше чем число дней в параметре <paramref name="month" />.  
  
- или - 
 Значение параметра <paramref name="hour" /> меньше нуля или больше 23.  
  
-или- 
 Параметр <paramref name="minute" /> меньше 0 или больше 59.  
  
- или - 
 Параметр <paramref name="second" /> меньше 0 или больше 59.  
  
- или - 
 Значение параметра <paramref name="offset" /> меньше –14 часов или больше 14 часов.  
  
-или- 
Свойство <see cref="P:System.DateTimeOffset.UtcDateTime" /> является более ранним чем <see cref="F:System.DateTimeOffset.MinValue" />, или более поздним чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * int * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, millisecond, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="year">Год (от 1 до 9999).</param>
        <param name="month">Месяц (от 1 до 12).</param>
        <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
        <param name="hour">Часы (от 0 до 23).</param>
        <param name="minute">Минуты (от 0 до 59).</param>
        <param name="second">Секунды (от 0 до 59).</param>
        <param name="millisecond">Миллисекунды (от 0 до 999).</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя указанные год, месяц, день, час, минуту, секунду, миллисекунду и смещение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор интерпретирует `year`, `month`, и `day` как год, месяц и день григорианского календаря. Чтобы создать экземпляр <xref:System.DateTimeOffset> значения, используя год, месяц и день в другом календаре, <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> вызовите конструктор.  
  
   
  
## Examples  
 В следующем примере создается экземпляр <xref:System.DateTimeOffset> объекта с <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.TimeSpan%29?displayProperty=nameWithType> помощью перегрузки конструктора.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#7)]
 [!code-vb[System.DateTimeOffset.Constructors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="year" /> меньше единицы или больше 9999.  
  
- или - 
 Значение <paramref name="month" /> меньше единицы или больше 12.  
  
- или - 
 Значение параметра <paramref name="day" /> меньше единицы или больше чем число дней в параметре <paramref name="month" />.  
  
- или - 
 Значение параметра <paramref name="hour" /> меньше нуля или больше 23.  
  
- или - 
 Параметр <paramref name="minute" /> меньше 0 или больше 59.  
  
- или - 
 Параметр <paramref name="second" /> меньше 0 или больше 59.  
  
- или - 
 Параметр<paramref name="millisecond" /> имеет значение меньше 0 или больше 999.  
  
- или - 
 Параметр <paramref name="offset" /> меньше –14 или больше 14.  
  
- или - 
Свойство <see cref="P:System.DateTimeOffset.UtcDateTime" /> является более ранним чем <see cref="F:System.DateTimeOffset.MinValue" />, или более поздним чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, TimeSpan offset);" />
      <MemberSignature Language="F#" Value="new DateTimeOffset : int * int * int * int * int * int * int * System.Globalization.Calendar * TimeSpan -&gt; DateTimeOffset" Usage="new System.DateTimeOffset (year, month, day, hour, minute, second, millisecond, calendar, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.TimeSpan" Index="8" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year">Год.</param>
        <param name="month">Месяц (от 1 до 12).</param>
        <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
        <param name="hour">Часы (от 0 до 23).</param>
        <param name="minute">Минуты (от 0 до 59).</param>
        <param name="second">Секунды (от 0 до 59).</param>
        <param name="millisecond">Миллисекунды (от 0 до 999).</param>
        <param name="calendar">Календарь, используемый для анализа параметров <paramref name="year" />, <paramref name="month" /> и <paramref name="day" />.</param>
        <param name="offset">Смещение по времени от времени в формате UTC.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя указанные год, месяц, день, час, минуту, секунду, миллисекунду и смещение для заданного календаря.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `month` Параметры`day`,, ,,`millisecond` , и отражать значения, выраженные в календаре, заданном параметром.`calendar` `second` `minute` `hour` `year` Исключение возникает, если эти значения формируют дату и время, которые не могут быть выражены с помощью этого календаря.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]   

## Examples  
 В следующем примере для создания экземпляра <xref:System.Globalization.HebrewCalendar> <xref:System.DateTimeOffset> значения используются экземпляры класса <xref:System.Globalization.HijriCalendar> и класса. Затем эта дата отображается в консоли с помощью соответствующих календарей и григорианского календаря.  
  
 [!code-csharp[System.DateTimeOffset.Constructors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/cs/Constructors.cs#8)]
 [!code-vb[System.DateTimeOffset.Constructors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Constructors/vb/Constructors.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="calendar" /> не может иметь значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="year" /> меньше заданного для параметра <paramref name="calendar" /> значения <see langword="MinSupportedDateTime.Year" /> или больше чем <see langword="MaxSupportedDateTime.Year" />.  
  
-или- 
 Значение параметра <paramref name="month" /> меньше или больше чем число месяцев, заданное в параметре <paramref name="year" /> параметра <paramref name="calendar" />.  
  
- или - 
 Значение параметра <paramref name="day" /> меньше единицы или больше чем число дней в параметре <paramref name="month" />.  
  
-или- 
 Значение параметра <paramref name="hour" /> меньше нуля или больше 23.  
  
- или - 
 Параметр <paramref name="minute" /> меньше 0 или больше 59.  
  
-или- 
 Параметр <paramref name="second" /> меньше 0 или больше 59.  
  
- или - 
 Параметр<paramref name="millisecond" /> имеет значение меньше 0 или больше 999.  
  
- или - 
 Значение параметра <paramref name="offset" /> меньше –14 часов или больше 14 часов.  
  
- или - 
Параметры <paramref name="year" />, <paramref name="month" /> и <paramref name="day" /> не удается представить как значения типа даты и времени.  
  
- или - 
Свойство <see cref="P:System.DateTimeOffset.UtcDateTime" /> является более ранним чем <see cref="F:System.DateTimeOffset.MinValue" />, или более поздним чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/instantiating-a-datetimeoffset-object.md">Создание экземпляра объекта DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTimeOffset Add (TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Add(valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Add(System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Add(TimeSpan timeSpan);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.Add timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeSpan">Объект <see cref="T:System.TimeSpan" />, представляющий положительный или отрицательный интервал времени.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, добавляющий указанный интервал времени к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и интервала времени, представленного параметром <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Add%2A> Метод можно использовать для добавления нескольких видов интервала времени (дней, часов, минут, секунд или миллисекунд) в одной операции. Поведение этого метода идентично оператору сложения. Структура также поддерживает специализированные методы сложения ( <xref:System.DateTimeOffset.AddDays%2A>например, <xref:System.DateTimeOffset.AddHours%2A>, и <xref:System.DateTimeOffset.AddMinutes%2A>) для каждого интервала времени. <xref:System.DateTimeOffset>  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `timeSpan` к его дате и времени.  
  
 Метод не влияет на значение <xref:System.DateTimeOffset.Offset%2A> свойства текущего <xref:System.DateTimeOffset> объекта. <xref:System.DateTimeOffset.Add%2A>  
  
 Поскольку объект не представляет дату и время в определенном часовом поясе <xref:System.DateTimeOffset.Add%2A> , метод не учитывает правила коррекции определенного часового пояса при выполнении арифметических операций с датами и временем. <xref:System.DateTimeOffset>  
  
 Если параметр равен `null`, этот метод возвращает значение исходного <xref:System.DateTimeOffset> объекта без изменений. `timeSpan`  
  
   
  
## Examples  
 В следующем примере создается массив <xref:System.TimeSpan> объектов, представляющих время рейса между назначениями. Затем метод добавляет эти значения времени <xref:System.DateTimeOffset> к объекту, представляющему начальное такеофф время рейса. <xref:System.DateTimeOffset.Add%2A> Результат отражает запланированное время прибытия в каждом назначении.  
  
 [!code-csharp[System.DateTimeOffset.Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#1)]
 [!code-vb[System.DateTimeOffset.Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddDays (double days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddDays(float64 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (days As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddDays(double days);" />
      <MemberSignature Language="F#" Value="member this.AddDays : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddDays days" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="days">Число полных и неполных дней. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное количество полных и неполных дней к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества дней, представленного параметром <paramref name="days" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `days` параметра представляет собой дробную часть дня. Например, 4,5 эквивалентно 4 дням, 12 часам, 0 минутам, 0 секундам, 0 миллисекундам. `days` Параметр округляется до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `days` к его дате и времени.  
  
 Поскольку объект не представляет дату и время в определенном часовом поясе <xref:System.DateTimeOffset.AddDays%2A> , метод не учитывает правила коррекции определенного часового пояса при выполнении арифметических операций с датами и временем. <xref:System.DateTimeOffset>  
  
 Преобразование интервалов времени меньше суток в дробную часть может привести к утрате точности. Если это проблематично, можно использовать <xref:System.DateTimeOffset.Add%2A> метод, который позволяет указать более одного типа интервала времени в вызове одного метода и устраняет необходимость преобразования интервалов времени в дробные части дня.  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset.AddDays%2A> метод используется для перечисления дат, относящихся к понедельнику, начала рабочей недели в марте 2008.  
  
 [!code-csharp[System.DateTimeOffset.Methods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#2)]
 [!code-vb[System.DateTimeOffset.Methods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddHours (double hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddHours(float64 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (hours As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddHours(double hours);" />
      <MemberSignature Language="F#" Value="member this.AddHours : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddHours hours" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hours" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="hours">Число полных и неполных часов. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, добавляющий заданное количество полных и неполных часов к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества часов, представленного параметром <paramref name="hours" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `hours` параметра представляет собой дробную часть часа. Например, 4,5 эквивалентно 4 часам, 30 минутам, 0 секундам, 0 миллисекундам. `hours` Параметр округляется до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `hours` к его дате и времени.  
  
 Поскольку объект не представляет дату и время в определенном часовом поясе <xref:System.DateTimeOffset.AddHours%2A> , метод не учитывает правила коррекции определенного часового пояса при выполнении арифметических операций с датами и временем. <xref:System.DateTimeOffset>  
  
 Преобразование интервалов времени меньше часа в дробную часть может привести к утрате точности. (Например, одна минута составляет 0,01666 часа.) Если это проблематично, можно использовать <xref:System.DateTimeOffset.Add%2A> метод, который позволяет указать более одного типа интервала времени в вызове одного метода и устраняет необходимость преобразования временных интервалов в дробные части часа.  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset.AddHours%2A> метод используется для перечисления времени начала рабочих смен для определенной недели в офисе с 2 8-часовыми сдвигами в день.  
  
 [!code-csharp[System.DateTimeOffset.Methods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#3)]
 [!code-vb[System.DateTimeOffset.Methods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMilliseconds (double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMilliseconds(float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (milliseconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMilliseconds(double milliseconds);" />
      <MemberSignature Language="F#" Value="member this.AddMilliseconds : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMilliseconds milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="milliseconds">Число полных и неполных миллисекунд. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное число миллисекунд к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества полных миллисекунд, представленных параметром <paramref name="milliseconds" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `milliseconds` параметра представляет собой дробную часть миллисекунды. Например, 4,5 является эквивалентом 4 миллисекунд и 5000 тактов, где одна миллисекунда равна 10 000 тактов. `milliseconds` Однако округляется до ближайшей миллисекунды; все значения 0,5 и выше округляются вверх.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `milliseconds` к его дате и времени.  
  
 Поскольку объект не представляет дату и время в определенном часовом поясе <xref:System.DateTimeOffset.AddMilliseconds%2A> , метод не учитывает правила коррекции определенного часового пояса при выполнении арифметических операций с датами и временем. <xref:System.DateTimeOffset>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMinutes (double minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMinutes(float64 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (minutes As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMinutes(double minutes);" />
      <MemberSignature Language="F#" Value="member this.AddMinutes : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMinutes minutes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minutes" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="minutes">Число полных и неполных минут. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное количество полных и неполных минут к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества минут, представленного параметром <paramref name="minutes" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `minutes` параметра представляет собой дробную часть минуты. Например, 4,5 соответствует 4 минутам, 30 секундам, 0 миллисекундам. `minutes` Параметр округляется до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `minutes` к его дате и времени.  
  
 Поскольку объект не представляет дату и время в определенном часовом поясе <xref:System.DateTimeOffset.AddMinutes%2A> , метод не учитывает правила коррекции определенного часового пояса при выполнении арифметических операций с датами и временем. <xref:System.DateTimeOffset>  
  
 Преобразование интервалов времени меньше минуты в дробную часть может привести к утрате точности. (Например, одна секунда — 0,01666 минут.) Если это проблематично, можно использовать <xref:System.DateTimeOffset.Add%2A> метод, который позволяет указать более одного типа интервала времени в вызове одного метода и устраняет необходимость преобразования интервалов времени в дробные части минуты.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddMonths(int months);" />
      <MemberSignature Language="F#" Value="member this.AddMonths : int -&gt; DateTimeOffset" Usage="dateTimeOffset.AddMonths months" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months">Число полных месяцев. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, добавляющий заданное число месяцев к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества месяцев, представленных параметром <paramref name="months" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от большинства других методов, которые добавляют одну единицу интервала времени (например, минуты или дни) к значению даты и <xref:System.DateTimeOffset.AddMonths%2A> времени, не позволяет добавлять дробные части месяца. Чтобы добавить время, состоящее из других единиц времени, в дополнение к месяцам <xref:System.DateTimeOffset> для объекта, <xref:System.DateTimeOffset.Add%2A> используйте метод.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `months` к его дате и времени.  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset.AddMonths%2A> метод используется для вывода даты начала каждого квартала года 2007.  
  
 [!code-csharp[System.DateTimeOffset.Methods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#4)]
 [!code-vb[System.DateTimeOffset.Methods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddSeconds (double seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddSeconds(float64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (seconds As Double) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddSeconds(double seconds);" />
      <MemberSignature Language="F#" Value="member this.AddSeconds : double -&gt; DateTimeOffset" Usage="dateTimeOffset.AddSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="seconds">Число полных и неполных секунд. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное количество полных и неполных секунд к значению данного экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества секунд, представленного параметром <paramref name="seconds" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дробная часть `seconds` параметра представляет собой дробную часть секунды. Значение дробных частей секунды показано в следующей таблице.  
  
|Второе значение|Эквивалент|  
|------------------|----------------|  
|.1 секунда|100 мс|  
|.01 секунд|10 миллисекунд|  
|.001 секунды|1 мс|  
  
 `seconds` Параметр округляется до ближайшей миллисекунды.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `minutes` к его дате и времени.  
  
 Поскольку объект не представляет дату и время в определенном часовом поясе <xref:System.DateTimeOffset.AddSeconds%2A> , метод не учитывает правила коррекции определенного часового пояса при выполнении арифметических операций с датами и временем. <xref:System.DateTimeOffset>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddTicks (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddTicks(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (ticks As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddTicks(long ticks);" />
      <MemberSignature Language="F#" Value="member this.AddTicks : int64 -&gt; DateTimeOffset" Usage="dateTimeOffset.AddTicks ticks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks">Число 100-наносекундных тактов. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное число тактов к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества тактов, представленного параметром <paramref name="ticks" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Квант представляет 100 наносекунд или одну десятку миллионов секунд. Поскольку такт — это очень маленький и точный интервал времени, любая более крупная единица времени может быть выражена в виде числа тактов без потери точности.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `minutes` к его дате и времени.  
  
 В следующей таблице перечислены числа тактов за определенный интервал времени.  
  
|Интервал времени|Число тактов|  
|-------------------|---------------------|  
|Second|10,000,000|  
|Minute|600,000,000|  
|Hour|36,000,000,000|  
|Day|864,000,000,000|  
|Неделя|6,048,000,000,000|  
|Месяц.|Зависит от количества дней в месяце.|  
|Невисокосный год|315,360,000,000,000|  
|Високосный год|316,224,000,000,000|  
  
 Поскольку объект не представляет дату и время в определенном часовом поясе <xref:System.DateTimeOffset.AddTicks%2A> , метод не учитывает правила коррекции определенного часового пояса при выполнении арифметических операций с датами и временем. <xref:System.DateTimeOffset>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTimeOffset AddYears (int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset AddYears(int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (years As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset AddYears(int years);" />
      <MemberSignature Language="F#" Value="member this.AddYears : int -&gt; DateTimeOffset" Usage="dateTimeOffset.AddYears years" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="years">Число лет. Это число может быть положительным или отрицательным.</param>
        <summary>Возвращает новый объект <see cref="T:System.DateTimeOffset" />, прибавляющий заданное число лет к значению этого экземпляра.</summary>
        <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества лет, представленного параметром <paramref name="years" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от большинства других методов, добавляющих одну единицу интервала времени (например, минуты или дни) к значению даты и времени <xref:System.DateTimeOffset.AddYears%2A> , не позволяет добавлять дробные части года. Чтобы добавить время, состоящее из других единиц времени, в дополнение к годам для <xref:System.DateTimeOffset> объекта, <xref:System.DateTimeOffset.Add%2A> используйте метод.  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `months` к его дате и времени.  
  
   
  
## Examples  
 В США лицензии драйвера не могут выдаваться пользователям в течение 16 лет. В следующем примере отображается последняя возможная дата, на которую должно быть выпущено лицо, чтобы законным образом выдавалась лицензия на драйвер.  
  
 [!code-csharp[System.DateTimeOffset.Methods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#6)]
 [!code-vb[System.DateTimeOffset.Methods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (first As DateTimeOffset, second As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="F#" Value="static member Compare : DateTimeOffset * DateTimeOffset -&gt; int" Usage="System.DateTimeOffset.Compare (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first">Первый из сравниваемых объектов.</param>
        <param name="second">Второй из сравниваемых объектов.</param>
        <summary>Сравнивает два объекта <see cref="T:System.DateTimeOffset" />, и указывает, как соотносятся между собой указанные в них моменты времени: первый раньше второго, первый и второй равны, или же первый позже второго.</summary>
        <returns>Знаковое целое число, позволяющее определить, наступает ли момент, указанный в параметре <paramref name="first" />, раньше или одновременно с моментом, указанным в параметре <paramref name="second" />, как показано в следующей таблице.  
  
 <list type="table"><listheader><term> Возвращаемое значение 
 </term><description> Значение 
 </description></listheader><item><term> Меньше нуля 
 </term><description>Момент, указанный в параметре <paramref name="first" />, наступает раньше, чем момент, указанный в параметре <paramref name="second" />.  
  
 </description></item><item><term> Нуль 
 </term><description><paramref name="first" /> равно <paramref name="second" />.  
  
 </description></item><item><term> Больше нуля 
 </term><description>Момент, указанный в параметре <paramref name="first" />, наступает позже, чем момент, указанный в параметре <paramref name="second" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При выполнении сравнения метод преобразует `first` `second` и параметры и в время в формате UTC перед выполнением сравнения. Метод эквивалентен следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#1)]
 [!code-vb[System.DateTimeOffset.Syntax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#1)]  
  
 Иными словами, <xref:System.DateTimeOffset.Compare%2A> метод определяет, представляют ли два <xref:System.DateTimeOffset> объекта один момент времени. Он непосредственно сравнивает не только даты и время, ни смещения.  
  
   
  
## Examples  
 В следующем примере показаны вызовы <xref:System.DateTimeOffset.Compare%2A> метода для сравнения <xref:System.DateTimeOffset> объектов.  
  
 [!code-csharp[System.DateTimeOffset.Methods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods2.cs#7)]
 [!code-vb[System.DateTimeOffset.Methods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As DateTimeOffset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : DateTimeOffset -&gt; int&#xA;override this.CompareTo : DateTimeOffset -&gt; int" Usage="dateTimeOffset.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Объект, сравниваемый с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Сравнивает текущий объект <see cref="T:System.DateTimeOffset" /> с заданным объектом <see cref="T:System.DateTimeOffset" /> и указывает, когда наступает момент, заданный в первом объекте: раньше, позже или одновременно с моментом, указанным во втором объекте <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Целое число со знаком, позволяющее определить, как соотносятся между собой текущий объект <see cref="T:System.DateTimeOffset" /> и параметр <paramref name="other" />. Возможные соотношения показаны в следующей таблице.  
  
 <list type="table"><listheader><term> Возвращаемое значение 
 </term><description> Описание 
 </description></listheader><item><term> Меньше нуля 
 </term><description> Момент времени в объекте <see cref="T:System.DateTimeOffset" /> наступает раньше момента времени в параметре <paramref name="other" />.  
  
 </description></item><item><term> Нуль 
 </term><description> Моменты времени в текущем объекте <see cref="T:System.DateTimeOffset" /> и параметре <paramref name="other" /> совпадают.  
  
 </description></item><item><term> Больше нуля.  
  
 </term><description> Момент времени в текущем объекте <see cref="T:System.DateTimeOffset" /> наступает позже момента времени в параметре <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод сравнивает <xref:System.DateTimeOffset> объекты, сравнивая их <xref:System.DateTimeOffset.UtcDateTime%2A> значения, то есть определяет, представляют ли два объекта один момент времени, и указывает, является ли текущий объект более ранним, чем, более поздним или равным значению элемента `other`параметр.  
  
   
  
## Examples  
 В следующем примере показаны вызовы <xref:System.DateTimeOffset.CompareTo%2A> метода для сравнения <xref:System.DateTimeOffset> объектов.  
  
 [!code-csharp[System.DateTimeOffset.Methods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods3.cs#8)]
 [!code-vb[System.DateTimeOffset.Methods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods3.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime" Usage="System.DateTimeOffset.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.DateTime" />, представляющее компонент даты в текущем объекте <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Значение <see cref="T:System.DateTime" />, представляющее компонент даты в текущем объекте <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство удаляет значительную часть компонента времени из <xref:System.DateTimeOffset> объекта и возвращает только значимый компонент даты. Например, если <xref:System.DateTimeOffset> объект имеет значение даты и времени, равное "1/12/07 4:01pm + 7:30", свойство <xref:System.DateTime> возвращает значение "1/12/07 12:00:00 AM". Затем <xref:System.DateTime> значение можно отобразить с помощью любого стандартного или настраиваемого описателя формата, отображающего только даты. (Иллюстрация см. в разделе "пример".)  
  
 Значение <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойства возвращенного <xref:System.DateTime> объекта всегда <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>равно. На это не влияет значение <xref:System.DateTimeOffset.Offset%2A> свойства.  
  
 Чтобы отобразить дату без ее компонента времени, можно также использовать спецификаторы формата D или d. иллюстрации см. в разделе "пример".  
  
   
  
## Examples  
 В следующем примере извлекается значение <xref:System.DateTimeOffset.Date%2A> свойства для определенной даты. Затем это значение отображается в консоли с помощью некоторых стандартных и настраиваемых описателей формата "только дата".  
  
 [!code-csharp[System.DateTimeOffset.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#1)]
 [!code-vb[System.DateTimeOffset.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартного формата DateTime</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемого формата даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.DateTimeOffset.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.DateTime" />, представляющее дату и время текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Дата и время текущего объекта <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.DateTime%2A> Значение<xref:System.DateTimeOffset.Offset%2A> свойства не зависит от свойства.  
  
 Это свойство возвращает и дату, и компонент <xref:System.DateTimeOffset> времени объекта, что делает его полезным для <xref:System.DateTime> выполнения <xref:System.DateTimeOffset> преобразования. Например, если <xref:System.DateTimeOffset> объект имеет значение даты и времени, равное "1/12/07 4:01pm + 7:30", свойство возвращает дату "1/12/07 4:01pm".  
  
 <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> Свойство возвращаемого <xref:System.DateTime> объекта имеет <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>значение.  
  
   
  
## Examples  
 В <xref:System.DateTimeOffset.DateTime%2A> следующем примере показано использование свойства для преобразования времени, возвращаемого <xref:System.DateTimeOffset.Now%2A> свойствами и <xref:System.DateTimeOffset.UtcNow%2A> , в <xref:System.DateTime> значения.  
  
 [!code-csharp[System.DateTimeOffset.Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#2)]
 [!code-vb[System.DateTimeOffset.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.LocalDateTime" />
        <related type="Article" href="~/docs/standard/datetime/converting-between-datetime-and-offset.md">Взаимное преобразование структур DateTime и DateTimeOffset</related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Day : int" Usage="System.DateTimeOffset.Day" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает день месяца, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент дня текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде значения в диапазоне от 1 до 31.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Day%2A> Значение<xref:System.DateTimeOffset.Offset%2A> свойства не зависит от свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента дня объекта, <xref:System.DateTimeOffset.ToString%2A> вызвав метод с описателем настраиваемого формата "d" или "DD".  
  
   
  
## Examples  
 В следующем примере компонент <xref:System.DateTimeOffset> дня объекта выводится тремя разными способами:  
  
-   Путем извлечения значения <xref:System.DateTimeOffset.Day%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "d".  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "DD".  
  
 [!code-csharp[System.DateTimeOffset.Properties#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#10)]
 [!code-vb[System.DateTimeOffset.Properties#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfWeek : DayOfWeek" Usage="System.DateTimeOffset.DayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает день недели, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Одно из значений перечисления, определяющее день недели текущего объекта <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значения констант в <xref:System.DayOfWeek> диапазонах перечисления от <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> до <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>. Если приведение к целому числу, его значение лежит в диапазоне от <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>нуля (что означает) до <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>шести (что означает).  
  
 Можно также отобразить название дня недели для определенной даты с помощью описателя формата "D" или описателя настраиваемого формата "dddd". Например:  
  
 [!code-csharp[System.DateTimeOffset.Properties#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#4)]
 [!code-vb[System.DateTimeOffset.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#4)]  
  
 Обратите внимание, что строка, возвращаемая путем `ToString` вызова <xref:System.DayOfWeek> метода члена перечисления, возвращаемого этим свойством, не локализована. Чтобы извлечь строку, содержащую название дня недели текущего языка и региональных параметров или определенного языка и региональных параметров, вызовите <xref:System.DateTimeOffset.ToString%2A> метод с помощью настраиваемого описателя формата "dddd". Например, следующий код отображает название дня недели для даты с помощью `fr-fr` языка и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.Properties#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#5)]
 [!code-vb[System.DateTimeOffset.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#5)]  
  
   
  
## Examples  
 В следующем примере выводится название дня недели первого дня каждого месяца в году 2008.  
  
 [!code-csharp[System.DateTimeOffset.Properties#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#3)]
 [!code-vb[System.DateTimeOffset.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfYear : int" Usage="System.DateTimeOffset.DayOfYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает день года, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент года текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде значения в диапазоне от 1 до 366.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, равны ли два объекта <see cref="T:System.DateTimeOffset" /> или равен ли объект <see cref="T:System.DateTimeOffset" /> заданному объекту.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="override this.Equals : DateTimeOffset -&gt; bool" Usage="dateTimeOffset.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Определяет, представляет ли текущий объект <see cref="T:System.DateTimeOffset" /> тот же момент времени, что и заданный объект <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение <see langword="true" />, если объекты <see cref="T:System.DateTimeOffset" /> имеют одинаковые значения <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед выполнением сравнения этот метод преобразует значения обоих <xref:System.DateTimeOffset> объектов в время в формате UTC. Метод эквивалентен следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#2)]
 [!code-vb[System.DateTimeOffset.Syntax#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#2)]  
  
 Иными словами, <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> метод определяет, представляют ли два <xref:System.DateTimeOffset> объекта один момент времени. Он непосредственно сравнивает не только даты и время, ни смещения. Чтобы определить, представляют <xref:System.DateTimeOffset> ли два объекта одно и то же время и имеют одинаковое значение смещения <xref:System.DateTimeOffset.EqualsExact%2A> , используйте метод.  
  
 Объект, который не `null` считается более поздним (или большим), чем тот, который является `null`. <xref:System.DateTimeOffset>  
  
 Эта перегрузка <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> метода <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> реализует метод. Он обеспечивает немного более высокую производительность, <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> чем перегрузка, `other` поскольку параметр не нужно преобразовывать из объекта.  
  
   
  
## Examples  
 В следующем примере показано обращение к <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%29> методу для проверки <xref:System.DateTimeOffset> объектов на равенство с текущим <xref:System.DateTimeOffset> объектом.  
  
 [!code-csharp[System.DateTimeOffset.Methods#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#9)]
 [!code-vb[System.DateTimeOffset.Methods#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dateTimeOffset.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Определяет, представляет ли объект <see cref="T:System.DateTimeOffset" /> тот же момент времени, что и заданный объект.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="obj" /> является объектом <see cref="T:System.DateTimeOffset" /> и представляет тот же момент времени, что и текущий объект <see cref="T:System.DateTimeOffset" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед выполнением сравнения этот метод преобразует значения текущего <xref:System.DateTimeOffset> объекта `obj` и параметра в время в формате UTC. Метод эквивалентен следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#3)]
 [!code-vb[System.DateTimeOffset.Syntax#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#3)]  
  
 Иными словами, <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=nameWithType> метод определяет, представляет ли текущий <xref:System.DateTimeOffset> объект и указанный объект один момент времени. Он непосредственно сравнивает не только даты и время, ни смещения. Чтобы определить, представляют <xref:System.DateTimeOffset> ли два объекта одно и то же время и имеют одинаковое значение смещения <xref:System.DateTimeOffset.EqualsExact%2A> , используйте метод.  
  
 Если `obj` имеет `null`значение или если тип времени `obj` выполнения не <xref:System.DateTimeOffset>равен, метод возвращает `false`значение.  
  
   
  
## Examples  
 В следующем примере показано, равен ли <xref:System.DateTimeOffset> текущий объект нескольким другим <xref:System.DateTimeOffset> объектам, а также к пустой ссылке и <xref:System.DateTime> объекту.  
  
 [!code-csharp[System.DateTimeOffset.Methods#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#10)]
 [!code-vb[System.DateTimeOffset.Methods#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTimeOffset first, valuetype System.DateTimeOffset second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (first As DateTimeOffset, second As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTimeOffset first, DateTimeOffset second);" />
      <MemberSignature Language="F#" Value="static member Equals : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.Equals (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.DateTimeOffset" />
        <Parameter Name="second" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="first">Первый из сравниваемых объектов.</param>
        <param name="second">Второй из сравниваемых объектов.</param>
        <summary>Определяет, представляют ли два заданных объекта <see cref="T:System.DateTimeOffset" /> один и тот же момент времени.</summary>
        <returns>Значение <see langword="true" />, если два объекта <see cref="T:System.DateTimeOffset" /> имеют одинаковые значения <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед выполнением сравнения этот метод преобразует оба <xref:System.DateTimeOffset> объекта в время в формате UTC. Метод эквивалентен следующему:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 Иными словами, <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> метод определяет, представляют ли два <xref:System.DateTimeOffset> объекта один момент времени. Он непосредственно сравнивает не только даты и время, ни смещения. Чтобы определить, представляют <xref:System.DateTimeOffset> ли два объекта одно и то же время и имеют одинаковое значение смещения <xref:System.DateTimeOffset.EqualsExact%2A> , используйте метод.  
  
   
  
## Examples  
 В следующем примере показаны вызовы <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29> метода для проверки различных <xref:System.DateTimeOffset> пар объектов на равенство.  
  
 [!code-csharp[System.DateTimeOffset.Methods#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#11)]
 [!code-vb[System.DateTimeOffset.Methods#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      </Docs>
    </Member>
    <Member MemberName="EqualsExact">
      <MemberSignature Language="C#" Value="public bool EqualsExact (DateTimeOffset other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EqualsExact(valuetype System.DateTimeOffset other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualsExact (other As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EqualsExact(DateTimeOffset other);" />
      <MemberSignature Language="F#" Value="member this.EqualsExact : DateTimeOffset -&gt; bool" Usage="dateTimeOffset.EqualsExact other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Определяет, представляет ли текущий объект <see cref="T:System.DateTimeOffset" /> тот же момент времени, что и заданный объект <see cref="T:System.DateTimeOffset" /> и совпадают ли их смещения.</summary>
        <returns>Значение <see langword="true" />, если текущий объект <see cref="T:System.DateTimeOffset" /> и параметр <paramref name="other" /> имеет одинаковые дату, время и значения <see cref="P:System.DateTimeOffset.Offset" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку несколько часовых поясов совместно используют одно смещение, возвращаемое значение `true` не гарантирует, что текущий `other` и объект представляет время в одном часовом поясе.  
  
 В отличие <xref:System.DateTimeOffset.EqualsExact%2A> от метода, перегрузки <xref:System.DateTimeOffset.Equals%2A> метода определяют только то, что два <xref:System.DateTimeOffset> значения представляют один момент времени. Они не указывают на то, что у двух значений одинаковые Дата и время, а также одно и то же смещение.  
  
   
  
## Examples  
 В следующем примере показано использование <xref:System.DateTimeOffset.EqualsExact%2A> метода для сравнения схожих <xref:System.DateTimeOffset> объектов.  
  
 [!code-csharp[System.DateTimeOffset.Methods#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#12)]
 [!code-vb[System.DateTimeOffset.Methods#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromFileTime(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTime : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromFileTime fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime">Время файла Windows, выраженное в тактах.</param>
        <summary>Преобразует заданное время файла Windows в его эквивалент по местному времени.</summary>
        <returns>Объект, представляющий дату и время <paramref name="fileTime" /> со смещением, равным смещению местного времени.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время файла Windows — это 64-разрядное значение, представляющее количество интервалов 100-наносекундных, истекших с 12:00 полуночи, 1 января 1601 г. ЭРЫ Время в формате UTC. Windows использует время файла для записи, когда приложение создает, обращается к файлу или выполняет запись в него.  
  
 Доступ к файлу Windows можно получить непосредственно через API Windows, вызвав `GetFileTime` функцию, которая `FILETIME` возвращает структуру. Параметр одной функции — это маркер файла, сведения о времени которого необходимо получить. Для получения маркера файла вызывается `CreateFile` функция. Элемент структуры содержит четыре старших байта времени файла, а его `dwLowDateTime` элемент содержит четыре байта нижнего порядка. `FILETIME` `dwHighDateTime` В следующем примере показано, как получить значения времени файла Windows и преобразовать их в <xref:System.DateTimeOffset> значения.  
  
 Значения времени файла Windows также могут быть созданы из <xref:System.DateTime> значений путем <xref:System.DateTime.ToFileTime%2A?displayProperty=nameWithType> вызова <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=nameWithType> методов и <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=nameWithType> и из <xref:System.DateTimeOffset> значений путем вызова метода.  
  
   
  
## Examples  
 В следующем примере используется API Windows для получения времени файлов Windows для исполняемого файла WordPad.  
  
 [!code-csharp[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/cs/FileTime.cs#1)]
 [!code-vb[System.DateTimeOffset.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.FromFileTime/vb/FileTime.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="filetime" /> меньше нуля.  
  
-или- 
 Значение <paramref name="filetime" /> больше значения <see langword="DateTimeOffset.MaxValue.Ticks" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeMilliseconds (long milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeMilliseconds(int64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeMilliseconds (milliseconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeMilliseconds(long milliseconds);" />
      <MemberSignature Language="F#" Value="static member FromUnixTimeMilliseconds : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromUnixTimeMilliseconds milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="milliseconds">Время Unix, выраженное как количество миллисекунд, истекших с 1970-01-01T00:00:00Z (1 января 1970 года, 00:00 UTC). Для времени Unix до этой даты значение отрицательное.</param>
        <summary>Преобразует время в формате Unix, выраженное как количество миллисекунд, истекших с 1970-01-01T00:00:00Z, в значение <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение даты и времени, представляющее тот же момент, что и время в формате Unix.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства возвращаемого <xref:System.DateTimeOffset> экземпляра — <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, которое представляет время в формате UTC. <xref:System.DateTimeOffset.Offset%2A> Его можно преобразовать во время в определенном часовом поясе, вызвав <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="milliseconds" /> меньше –62 135 596 800 000.  
  
-или- 
 Значение <paramref name="milliseconds" /> больше 253 402 300 799 999.</exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="FromUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public static DateTimeOffset FromUnixTimeSeconds (long seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset FromUnixTimeSeconds(int64 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUnixTimeSeconds (seconds As Long) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset FromUnixTimeSeconds(long seconds);" />
      <MemberSignature Language="F#" Value="static member FromUnixTimeSeconds : int64 -&gt; DateTimeOffset" Usage="System.DateTimeOffset.FromUnixTimeSeconds seconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="seconds">Время Unix, выраженное как количество секунд, истекших с 1970-01-01T00:00:00Z (1 января 1970 года, 00:00 UTC). Для времени Unix до этой даты значение отрицательное.</param>
        <summary>Преобразует время в формате Unix, выраженное как количество секунд, истекших с 1970-01-01T00:00:00Z, в значение <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение даты и времени, представляющее тот же момент, что и время в формате Unix.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства возвращаемого <xref:System.DateTimeOffset> экземпляра — <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, которое представляет время в формате UTC. <xref:System.DateTimeOffset.Offset%2A> Его можно преобразовать во время в определенном часовом поясе, вызвав <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="seconds" /> меньше –62 135 596 800.  
  
- или - 
 Значение <paramref name="seconds" /> больше 253 402 300 799.</exception>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dateTimeOffset.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hour : int" Usage="System.DateTimeOffset.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает часовой компонент, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Часовой компонент текущего объекта <see cref="T:System.DateTimeOffset" />. В этом свойстве используются 24-часовые часы; значение может меняться в диапазоне от 0 до 23.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Hour%2A> Значение<xref:System.DateTimeOffset.Offset%2A> свойства не зависит от свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента часа объекта, <xref:System.DateTimeOffset.ToString%2A> вызвав метод с описателем настраиваемого формата "H" или "HH".  
  
   
  
## Examples  
 В следующем примере компонент <xref:System.DateTimeOffset> часа выводится тремя разными способами:  
  
-   Путем извлечения значения <xref:System.DateTimeOffset.Hour%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "H".  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "HH".  
  
 [!code-csharp[System.DateTimeOffset.Properties#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#6)]
 [!code-vb[System.DateTimeOffset.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalDateTime">
      <MemberSignature Language="C#" Value="public DateTime LocalDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LocalDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.LocalDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LocalDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalDateTime : DateTime" Usage="System.DateTimeOffset.LocalDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.DateTime" />, представляющее местную дату и время в текущем объекте <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Локальные дата и время текущего объекта <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При необходимости <xref:System.DateTimeOffset.LocalDateTime%2A> свойство преобразует дату и время текущего <xref:System.DateTimeOffset> объекта в дату и время локальной системы. Преобразование состоит из двух этапов:  
  
1.  Свойство преобразует время текущего <xref:System.DateTimeOffset> объекта в время в формате UTC.  
  
2.  Затем свойство преобразует UTC в местное время.  
  
 Недопустимые значения времени и неоднозначные времена сопоставлены со стандартным временем локальной зоны. (Однако преобразование может создать аномалию: Если <xref:System.DateTimeOffset> значение, полученное от локального компьютера, отражает неоднозначную дату и время, это значение можно преобразовать в формат UTC, а затем вернуться к местному времени, отличающимся от исходного времени.)  При выполнении этого преобразования свойство применяет любые правила коррекции в местном часовом поясе.  
  
 Это свойство возвращает и дату, и компонент <xref:System.DateTimeOffset> времени объекта, что делает его полезным <xref:System.DateTime> для <xref:System.DateTimeOffset> преобразования. Помимо выполнения любого необходимого преобразования времени, <xref:System.DateTimeOffset.DateTime%2A> это свойство отличается от свойства путем присвоения <xref:System.DateTime.Kind%2A> свойству возвращаемого <xref:System.DateTime> объекта <xref:System.DateTimeKind.Local?displayProperty=nameWithType>значения.  
  
   
  
## Examples  
 В следующем примере показано несколько преобразований <xref:System.DateTimeOffset> значений в местное время в США. США. Обратите внимание, что последние три раза являются неоднозначными; Свойство сопоставляет все эти данные с одной датой и временем в стандартном тихоокеанском часовом поясе.  
  
 [!code-csharp[System.DateTimeOffset.Properties#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#7)]
 [!code-vb[System.DateTimeOffset.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : DateTimeOffset" Usage="System.DateTimeOffset.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет максимально допустимое значение типа <see cref="T:System.DateTimeOffset" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этой константы равно 12/31/9999 11:59:59 PM + 00:00.  
  
 Свойство используется для определения того, что значение нового <xref:System.DateTimeOffset> объекта или <xref:System.DateTimeOffset> значение, возвращаемое арифметической операцией, совпадает с максимальным значением диапазона или ранее. <xref:System.DateTimeOffset.MaxValue> Если это не так, метод создает исключение <xref:System.ArgumentOutOfRangeException>. Любое <xref:System.DateTimeOffset> значение преобразуется в время в формате UTC перед тем, как метод сравнивает его с <xref:System.DateTimeOffset.MaxValue>.  Это означает, что <xref:System.DateTimeOffset> значение, Дата и время которого близки к максимальному диапазону, но смещение является отрицательным, может вызвать исключение. Например, значение 12/31/9999 11:00 pm-02:00 выходит за пределы диапазона, так как оно составляет один час позже <xref:System.DateTimeOffset.MaxValue> , чем время его преобразования в формат UTC.  
  
 Некоторые календари, например <xref:System.Globalization.UmAlQuraCalendar>, поддерживают верхний диапазон дат, более ранний, чем. <xref:System.DateTime.MaxValue> В таких случаях попытка доступа <xref:System.DateTime.MaxValue> в операциях назначения переменных или форматирования и синтаксического анализа может <xref:System.ArgumentOutOfRangeException>вызвать исключение. Вместо получения значения <xref:System.DateTime.MaxValue?displayProperty=nameWithType>можно получить значение последней допустимой даты указанного языка и региональных параметров <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=nameWithType> из свойства.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="F:System.DateTime.MaxValue" /> находится вне диапазона текущего или заданного по умолчанию календаря культуры.</exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Millisecond : int" Usage="System.DateTimeOffset.Millisecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает временной компонент миллисекунд, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент миллисекунд текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целого числа в диапазоне от 0 до 999.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента миллисекунд объекта, <xref:System.DateTimeOffset.ToString%2A> вызвав метод с описателем настраиваемого формата "fff".  
  
 Если вы используете такие свойства, как <xref:System.DateTimeOffset.Now%2A> или <xref:System.DateTimeOffset.UtcNow%2A> , для точного учета количества затраченных миллисекунд, точность компонента миллисекунд времени зависит от разрешения системных часов. В операционных системах Windows NT 3,5 и более поздних версий и Windows Vista разрешение часов составляет примерно 10-15 миллисекунд.  
  
   
  
## Examples  
 В следующем примере показано количество миллисекунд <xref:System.DateTimeOffset> объекта с помощью настраиваемого описателя формата и прямого <xref:System.DateTimeOffset.Millisecond%2A> доступа к свойству.  
  
 [!code-csharp[System.DateTimeOffset.Properties#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#12)]
 [!code-vb[System.DateTimeOffset.Properties#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minute : int" Usage="System.DateTimeOffset.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент минут, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент минут текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целого числа в диапазоне от 0 до 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Minute%2A> Значение<xref:System.DateTimeOffset.Offset%2A> свойства не зависит от свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента минут объекта, <xref:System.DateTimeOffset.ToString%2A> вызвав метод с описателем настраиваемого формата "m" или "mm".  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.DateTimeOffset> отобразить компонент минут объекта тремя разными способами:  
  
-   Путем извлечения значения <xref:System.DateTimeOffset.Minute%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "m".  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "mm".  
  
 [!code-csharp[System.DateTimeOffset.Properties#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#8)]
 [!code-vb[System.DateTimeOffset.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : DateTimeOffset" Usage="System.DateTimeOffset.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет наиболее раннее из возможных значений <see cref="T:System.DateTimeOffset" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этой константы равно 1/1/0001 12:00:00 AM + 00:00.  
  
 Свойство используется для определения того, что значение нового <xref:System.DateTimeOffset> объекта или <xref:System.DateTimeOffset> значение, возвращаемое арифметической операцией, совпадает с минимальным значением диапазона или более поздним. <xref:System.DateTimeOffset.MinValue> Если это не так, метод создает исключение <xref:System.ArgumentOutOfRangeException>. Любое <xref:System.DateTimeOffset> значение преобразуется в время в формате UTC до того, как метод выполняет сравнение с <xref:System.DateTimeOffset.MinValue>.  Это означает, что <xref:System.DateTimeOffset> значение, Дата и время которого близки к минимальному диапазону, но смещение является положительным, может вызвать исключение. Например, значение 1/1/0001 1:00:00 am + 02:00 выходит за пределы диапазона, так как это один час раньше, <xref:System.DateTimeOffset.MinValue> чем при преобразовании в формат UTC.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Month : int" Usage="System.DateTimeOffset.Month" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент месяца даты, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент месяца текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целого числа в диапазоне от 1 до 12.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Month%2A> Значение<xref:System.DateTimeOffset.Offset%2A> свойства не зависит от свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента месяца объекта, <xref:System.DateTimeOffset.ToString%2A> вызвав метод с описателем настраиваемого формата "M" или "mm".  
  
   
  
## Examples  
 В следующем примере компонент <xref:System.DateTimeOffset> месяца значения выводится тремя разными способами:  
  
-   Путем извлечения значения <xref:System.DateTimeOffset.Month%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "M".  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "mm".  
  
 [!code-csharp[System.DateTimeOffset.Properties#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#9)]
 [!code-vb[System.DateTimeOffset.Properties#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset Now { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTimeOffset" Usage="System.DateTimeOffset.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.DateTimeOffset" />, для которого в качестве значения установлены текущие дата и время на текущем компьютере, а в качестве смещения — смещение местного времени от времени в формате UTC.</summary>
        <value>Объект <see cref="T:System.DateTimeOffset" />, дата и время которого соответствуют текущему местному времени, а смещение равно смещению местного часового пояса от времени в формате UTC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Точность компонента миллисекунд текущего местного времени зависит от разрешения системных часов. В операционных системах Windows NT 3,5 и более поздних версий и Windows Vista разрешение часов составляет примерно 10-15 миллисекунд.  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset.Now%2A> свойство используется для получения текущей даты и времени и отображает ее с помощью каждой из [стандартных строк формата даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) , поддерживаемых <xref:System.DateTimeOffset> типом.  
  
 [!code-csharp[System.DateTimeOffset.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.now/cs/now1.cs#1)]
 [!code-vb[System.DateTimeOffset.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.now/vb/now1.vb#1)]  
  
 В следующем примере используются <xref:System.DateTimeOffset.Now%2A> свойства и <xref:System.DateTimeOffset.Millisecond%2A> для определения разрешения системных часов. Время отображается только в том случае, если значение компонента миллисекунд изменилось.  
  
 [!code-csharp[System.DateTimeOffset.Properties#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#11)]
 [!code-vb[System.DateTimeOffset.Properties#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public TimeSpan Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Offset" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Offset { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : TimeSpan" Usage="System.DateTimeOffset.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает смещение по времени от времени в формате UTC.</summary>
        <value>Разность между значением времени текущего объекта <see cref="T:System.DateTimeOffset" /> и временем в формате UTC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.TimeSpan.Hours%2A> свойства возвращаемого <xref:System.TimeSpan> объекта может находиться в диапазоне от-14 часов до 14 часов.  
  
 Значение <xref:System.DateTimeOffset.Offset%2A> свойства точно равно минуте.  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset.Offset%2A> свойство используется для вывода разницы местного времени от времени в формате UTC.  
  
 [!code-csharp[System.DateTimeOffset.Properties#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#13)]
 [!code-vb[System.DateTimeOffset.Properties#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator + (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Addition(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator +(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset + timeSpan" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator + (DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Addition(valuetype System.DateTimeOffset dateTimeTz, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator +(DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeTz + timeSpan" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dateTimeTz" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset">Объект, к которому необходимо добавить интервал времени.</param>
        <param name="dateTimeTz">Объект, к которому необходимо добавить интервал времени.</param>
        <param name="timeSpan">Добавляемый интервал времени.</param>
        <summary>Добавляет указанный интервал времени в объект <see cref="T:System.DateTimeOffset" />, имеющий заданную дату и время, и образует объект <see cref="T:System.DateTimeOffset" /> с новыми значениями даты и времени.</summary>
        <returns>Объект, значение которого является суммой значений <paramref name="dateTimeTz" /> и <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод определяет операцию сложения <xref:System.DateTimeOffset>значений. <xref:System.DateTimeOffset.op_Addition%2A> Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#1)]
 [!code-vb[System.DateTimeOffset.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#1)]  
  
 Языки, которые не поддерживают настраиваемые операторы и перегрузку операторов, могут вызывать <xref:System.DateTimeOffset.Add%2A> метод.  
  
 Эквивалентным методом для этого оператора является <xref:System.DateTimeOffset.Add%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, представляют ли два заданных объекта <see cref="T:System.DateTimeOffset" /> один и тот же момент времени.</summary>
        <returns>Значение <see langword="true" />, если объекты <see cref="T:System.DateTimeOffset" /> имеют одинаковые значения <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод определяет операцию оператора равенства для <xref:System.DateTimeOffset> объектов. <xref:System.DateTimeOffset.op_Equality%2A> Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#2)]
 [!code-vb[System.DateTimeOffset.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#2)]  
  
 Перед вычислением `left` операндов и `right` для равенства оператор преобразует оба значения в формат UTC. Операция эквивалентна следующей:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 Иными словами, <xref:System.DateTimeOffset.op_Equality%2A> метод определяет, представляют ли два <xref:System.DateTimeOffset> объекта один момент времени. Он непосредственно сравнивает не только даты и время, ни смещения. Чтобы определить, представляют <xref:System.DateTimeOffset> ли два объекта одно и то же время и имеют одинаковое значение смещения <xref:System.DateTimeOffset.EqualsExact%2A> , используйте метод.  
  
 Эквивалентным методом для этого оператора является<xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, больше ли (или меньше) значение одного указанного объекта <see cref="T:System.DateTimeOffset" /> значения другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение <see langword="true" /> если момент времени в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> наступает позже, чем момент в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод определяет операцию оператора "больше чем" для <xref:System.DateTimeOffset> объектов. <xref:System.DateTimeOffset.op_GreaterThan%2A> Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#3)]
 [!code-vb[System.DateTimeOffset.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#3)]  
  
 Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.DateTimeOffset.Compare%2A> метод. Они также могут вызывать <xref:System.DateTimeOffset.op_GreaterThan%2A> метод напрямую, как показано в следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#4)]  
  
 Перед вычислением `left` операндов и `right` оператор преобразует оба значения в время в формате UTC. Операция эквивалентна следующей:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#5)]
 [!code-vb[System.DateTimeOffset.Syntax#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#5)]  
  
 Эквивалентным методом для этого оператора является<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, действительно ли значение одного указанного объекта <see cref="T:System.DateTimeOffset" /> больше или равно значению другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns><see langword="true" /> если значение <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> соответствует тому же или более позднему моменту времени, чем момент, заданный значением <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод определяет операцию оператора "больше или равно" для <xref:System.DateTimeOffset> объектов. <xref:System.DateTimeOffset.op_GreaterThan%2A> Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#5)]
 [!code-vb[System.DateTimeOffset.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#5)]  
  
 Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.DateTimeOffset.Compare%2A> метод. Некоторые языки также могут вызывать <xref:System.DateTimeOffset.op_GreaterThanOrEqual%2A> метод напрямую, как показано в следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#6)]  
  
 Перед вычислением `left` операндов и `right` оператор преобразует оба значения в время в формате UTC. Операция эквивалентна следующей:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#6)]
 [!code-vb[System.DateTimeOffset.Syntax#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#6)]  
  
 Эквивалентным методом для этого оператора является<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator DateTimeOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Implicit(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator DateTimeOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : DateTime -&gt; DateTimeOffset" Usage="System.DateTimeOffset.op_Implicit dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime">Преобразуемый объект.</param>
        <summary>Определяется неявное преобразование объекта <see cref="T:System.DateTime" /> в объект <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Преобразованный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод позволяет компилятору автоматически <xref:System.DateTime> преобразовывать объект в <xref:System.DateTimeOffset> объект без явного оператора приведения (in C#) или вызова функции преобразования (в Visual Basic). <xref:System.DateTimeOffset.op_Implicit%2A> Он определяет расширяющее преобразование, которое не влечет за собой <xref:System.OverflowException>потери данных и не создает исключение. <xref:System.DateTimeOffset.op_Implicit%2A> Метод делает код следующим:  
  
 [!code-csharp[System.DateTimeOffset.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#7)]
 [!code-vb[System.DateTimeOffset.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#7)]  
  
 Этот метод эквивалентен <xref:System.DateTimeOffset.%23ctor%2A> конструктору. Смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> свойства `dateTime` параметра:  
  
-   <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> Если значение <xref:System.DateTimeOffset.Offset%2A> свойства равно <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, то <xref:System.DateTimeOffset> Дата и время объекта задаются равными `dateTime`, а его свойство устанавливается равным 0.  
  
-   Если <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> значение <xref:System.DateTimeOffset.Offset%2A> свойства <xref:System.DateTimeKind.Local?displayProperty=nameWithType> равно или <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, Дата <xref:System.DateTimeOffset> и`dateTime`время объекта задаются равными, а его свойство устанавливается равным смещению текущего часового пояса локальной системы.  
  
 Эквивалентным методом для этого оператора является<xref:System.DateTimeOffset.%23ctor%28System.DateTime%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время в формате UTC, которые получаются в результате применения смещения, более раннего чем <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Дата и время в формате UTC, которые получаются в результате применения смещения, более позднего чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, указывают ли два заданных объекта <see cref="T:System.DateTimeOffset" /> на разные моменты времени.</summary>
        <returns>Значение <see langword="true" /> если параметры <paramref name="left" /> и <paramref name="right" /> обладают разными значениями свойства <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод определяет операцию оператора неравенства для <xref:System.DateTimeOffset> объектов. <xref:System.DateTimeOffset.op_Inequality%2A> Он всегда возвращает результат, противоположный <xref:System.DateTimeOffset.op_Equality%2A>значению. <xref:System.DateTimeOffset.op_Inequality%2A> Метод включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#8)]
 [!code-vb[System.DateTimeOffset.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#8)]  
  
 Перед вычислением `left` операндов и `right` для равенства оператор преобразует оба значения в формат UTC. Операция эквивалентна следующей:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#4)]
 [!code-vb[System.DateTimeOffset.Syntax#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#4)]  
  
 Иными словами, <xref:System.DateTimeOffset.op_Inequality%2A> метод определяет, представляют ли два <xref:System.DateTimeOffset> объекта разные моменты времени. Он непосредственно сравнивает не только даты и время, ни смещения.  
  
 Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.DateTimeOffset.Compare%2A> метод. Кроме того, некоторые языки также могут вызывать <xref:System.DateTimeOffset.op_Inequality%2A> метод напрямую, как показано в следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#9)]  
  
 Эквивалентным методом для этого оператора является<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, меньше ли значение одного указанного объекта <see cref="T:System.DateTimeOffset" />, чем значение другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение <see langword="true" /> если момент времени в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> наступает раньше, чем момент в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод определяет операцию оператора "меньше" для <xref:System.DateTimeOffset> объектов. <xref:System.DateTimeOffset.op_LessThan%2A> Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#10)]
 [!code-vb[System.DateTimeOffset.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#10)]  
  
 Перед вычислением `left` операндов и `right` оператор преобразует оба операнда в время в формате UTC. Операция эквивалентна следующей:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#8)]
 [!code-vb[System.DateTimeOffset.Syntax#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#8)]  
  
 Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.DateTimeOffset.Compare%2A> метод. Кроме того, некоторые языки также могут вызывать <xref:System.DateTimeOffset.op_LessThan%2A> метод напрямую, как показано в следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#11)]  
  
 Эквивалентным методом для этого оператора является<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As DateTimeOffset, right As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : DateTimeOffset * DateTimeOffset -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Первый из сравниваемых объектов.</param>
        <param name="right">Второй из сравниваемых объектов.</param>
        <summary>Определяет, меньше ли значение одного указанного объекта <see cref="T:System.DateTimeOffset" />, чем значение другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение <see langword="true" /> если момент времени в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> наступает раньше, чем момент в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод определяет операцию оператора "меньше или равно" для <xref:System.DateTimeOffset> объектов. <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#12)]
 [!code-vb[System.DateTimeOffset.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#12)]  
  
 Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.DateTimeOffset.Compare%2A> метод. Некоторые языки также могут вызывать <xref:System.DateTimeOffset.op_LessThanOrEqual%2A> метод напрямую, как показано в следующем примере.  
  
 [!code-vb[System.DateTimeOffset.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#13)]  
  
 Перед вычислением `left` операндов и `right` оператор преобразует оба значения в время в формате UTC. Операция эквивалентна следующей:  
  
 [!code-csharp[System.DateTimeOffset.Syntax#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/cs/Syntax.cs#9)]
 [!code-vb[System.DateTimeOffset.Syntax#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Syntax/vb/Syntax.vb#9)]  
  
 Эквивалентным методом для этого оператора является<xref:System.DateTimeOffset.Compare%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вычитает указанный объект <see cref="T:System.DateTimeOffset" /> или <see cref="T:System.TimeSpan" /> из объекта <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTimeOffset left, valuetype System.DateTimeOffset right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As DateTimeOffset, right As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTimeOffset left, DateTimeOffset right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * DateTimeOffset -&gt; TimeSpan" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.DateTimeOffset" />
        <Parameter Name="right" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="left">Уменьшаемое.</param>
        <param name="right">Вычитаемое.</param>
        <summary>Вычитает объект <see cref="T:System.DateTimeOffset" /> из другого объекта и выдает интервал времени.</summary>
        <returns>Объект, представляющий разность между <paramref name="left" /> и <paramref name="right" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод определяет операцию вычитания для <xref:System.DateTimeOffset> объектов. <xref:System.DateTimeOffset.op_Subtraction%2A> Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#14)]
 [!code-vb[System.DateTimeOffset.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#14)]  
  
 Языки, которые не поддерживают настраиваемые операторы и перегрузку операторов, могут вызывать <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> метод.  
  
 Эквивалентным методом для этого оператора является <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator - (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Subtraction(valuetype System.DateTimeOffset dateTimeOffset, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator -(DateTimeOffset dateTimeOffset, TimeSpan timeSpan);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset - timeSpan" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static DateTimeOffset operator - (DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Subtraction(valuetype System.DateTimeOffset dateTimeTz, valuetype System.TimeSpan timeSpan) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset operator -(DateTimeOffset dateTimeTz, TimeSpan timeSpan);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTimeOffset * TimeSpan -&gt; DateTimeOffset" Usage="dateTimeTz - timeSpan" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dateTimeTz" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset">Объект даты и времени, из которого вычитается интервал.</param>
        <param name="dateTimeTz">Объект даты и времени, из которого вычитается интервал.</param>
        <param name="timeSpan">Вычитаемый интервал времени.</param>
        <summary>Вычитает заданный временной интервал из указанной даты и времени и выдает новую дату и время.</summary>
        <returns>Объект, равный значению <paramref name="dateTimeOffset" /> за вычетом значения <paramref name="timeSpan" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод определяет операцию вычитания для <xref:System.DateTimeOffset> объектов. <xref:System.DateTimeOffset.op_Subtraction%2A> Он включает следующий код:  
  
 [!code-csharp[System.DateTimeOffset.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/cs/Operators.cs#15)]
 [!code-vb[System.DateTimeOffset.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Operators/vb/Operators.vb#15)]  
  
 Языки, которые не поддерживают настраиваемые операторы и перегрузку операторов, могут вызывать <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> метод.  
  
 Эквивалентным методом для этого оператора является <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>.]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" /> или больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <altmember cref="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <summary>Преобразует заданное строковое представление даты, времени и смещения в его эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Parse%28System.String%29>анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделяются пробелом. Эти три элемента показаны в следующей таблице.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|"1:02:03 PM"|  
|\<Смещение >|"-7:30"|  
  
 Хотя каждый из этих элементов является необязательным \<, смещение > не может отображаться самим собой. Она должна быть указана вместе с \<> даты или \<> времени. Если \<Дата > отсутствует, ее значение по умолчанию — текущий день. Если \<> времени отсутствует, его значение по умолчанию — 12:00:00 AM. Если \<функция Date > указана, но ее компонент year состоит только из двух цифр, он преобразуется в год текущего календаря языка и региональных параметров в соответствии со значением <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойства. Если \<свойство offset > отсутствует, его значение по умолчанию — смещение местного часового пояса. \<Смещение > может представлять отрицательное или положительное смещение от всеобщего скоординированного времени (UTC). В любом случае \<смещение > должно включать символ знака.  
  
 Строка анализируется с помощью сведений о форматировании <xref:System.Globalization.DateTimeFormatInfo> в объекте, инициализированном для текущего языка и региональных параметров. `input` Чтобы выполнить синтаксический анализ строки, содержащей назначенное форматирование, которое не обязательно соответствует формату текущего языка и региональных параметров <xref:System.DateTimeOffset.ParseExact%2A> , используйте метод и укажите описатель формата.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.Parse%28System.String%29> метод для анализа нескольких строк даты и времени. Пример включает выходные данные из 22 марта 2007 в системе, чья культура — en-US.  
  
 [!code-csharp[System.DateTimeOffset.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#1)]
 [!code-vb[System.DateTimeOffset.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> — <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
-или- 
 <paramref name="input" /> содержит строковое представление смещения без даты или времени.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании значения <paramref name="input" />, связанные с языком и региональными параметрами.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значением параметра <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделяются пробелом. Эти три элемента показаны в следующей таблице.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|"1:02:03 PM"|  
|\<Смещение >|"-7:30"|  
  
 Хотя каждый из этих элементов является необязательным \<, смещение > не может отображаться самим собой. Она должна быть указана вместе с \<> даты или \<> времени. Если \<Дата > отсутствует, ее значение по умолчанию — текущий день. Если \<Дата > указана, но ее компонент year состоит только из двух цифр, он преобразуется в год `provider` в текущем календаре параметра в зависимости от значения <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойства. Если \<> времени отсутствует, его значение по умолчанию — 12:00:00 AM. Если \<свойство offset > отсутствует, его значение по умолчанию — смещение местного часового пояса. \<Смещение > может представлять отрицательное или положительное смещение от всеобщего скоординированного времени (UTC). В любом случае \<смещение > должно включать символ знака.  
  
 Формат этих трех элементов определяется `formatProvider` параметром, который может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, форматирование которых используется `input` в параметре. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет форматирование, используемое в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 Положительный или отрицательный знак, используемый \<в смещении > должен быть либо +, либо-. Он не определяется <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> свойствами <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> <xref:System.Globalization.NumberFormatInfo> или объекта`formatProvider` параметра.  
  
   
  
## Examples  
 В следующем примере выполняется синтаксический анализ строк даты и времени, отформатированных для языка и региональных параметров fr-FR, и отображаются их с использованием языка и региональных параметров по умолчанию en-US в локальной системе.  
  
 [!code-csharp[System.DateTimeOffset.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#2)]
 [!code-vb[System.DateTimeOffset.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
-или- 
 <paramref name="input" /> содержит строковое представление смещения без даты или времени.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char), Optional formatProvider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTimeOffset Parse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset Parse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset Parse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.Parse (input, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании значения <paramref name="input" />, связанные с языком и региональными параметрами.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанную информацию о форматировании, связанную с языком и региональными параметрами, а также заданный стиль форматирования.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделяются пробелом. Эти три элемента показаны в следующей таблице.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|"1:02:03 PM"|  
|\<Смещение >|"-7:30"|  
  
 Хотя каждый из этих элементов является необязательным \<, смещение > не может отображаться самим собой. Она должна быть указана вместе с \<> даты или \<> времени. Если \<Дата > отсутствует, ее значение по умолчанию — текущий день. Если \<Дата > указана, но ее компонент year состоит только из двух цифр, он преобразуется в год `provider` в текущем календаре параметра в зависимости от значения <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойства. Если \<> времени отсутствует, его значение по умолчанию — 12:00:00 AM. Если \<смещение > отсутствует, его значение по умолчанию — смещение местного часового пояса или <xref:System.TimeSpan.Zero?displayProperty=nameWithType> значение или <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> , <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> если указано в `styles` параметре. Если \<значение offset > имеется, оно может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > должно включать символ знака.  
  
 Формат этих трех элементов определяется `formatProvider` параметром, который может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, форматирование которых используется `input` в параметре. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет форматирование, используемое в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Каждый элемент также может быть заключен в начальные или конечные пробелы, а \<Дата > и \<время > могут включать в себя внутренние пробелы (например, 6).   00:00). Только компонент \<смещения > не может включать внутренние пробелы.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 Положительный или отрицательный знак, используемый \<в смещении > должен быть либо +, либо-. Он не определяется <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> свойствами <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> <xref:System.Globalization.NumberFormatInfo> или объекта, возвращаемого `formatProvider` параметром.  
  
 В следующей таблице приведены поддерживаемые элементы <xref:System.Globalization.DateTimeStyles?displayProperty=nameWithType> перечисления.  
  
|DateTimeStyles, элемент|Описание|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Анализирует строку, представленную `input` , и при необходимости преобразует ее в формат UTC. Он эквивалентен синтаксическому анализу строки и последующему <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> вызову метода возвращенного <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Несмотря на допустимость, это значение игнорируется. В \<элементах > даты > и \<времени разрешены внутренние пробелы.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Несмотря на допустимость, это значение игнорируется. Начальные пробелы допускаются перед каждым компонентом в проанализированной строке.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Несмотря на допустимость, это значение игнорируется. Конечные пробелы допускаются перед каждым компонентом в проанализированной строке.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Это поведение установлено по умолчанию. Его нельзя переопределить, указав более жесткое <xref:System.Globalization.DateTimeStyles> значение перечисления, <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>например.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Указывает, что если `input` параметр не имеет \<элемента offset >, необходимо указать смещение местного часового пояса. Это поведение <xref:System.DateTimeOffset.Parse%2A> метода по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Указывает, что если `input` параметр не имеет \<элемента offset >, необходимо указать смещение UTC (00:00).|  
|<xref:System.Globalization.DateTimeStyles.None>|Несмотря на допустимость, это значение игнорируется и не действует.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Поскольку структура не `Kind` включает свойство, это значение не действует. <xref:System.DateTimeOffset>|  
  
 <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> Только значение не поддерживается. Если это значение включено `styles` в параметр, создается исключение. <xref:System.ArgumentException>  
  
   
  
## Examples  
 В следующем <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>примере показан результат передачи значений, <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>и <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> в `styles` параметр <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> метода.  
  
 [!code-csharp[System.DateTimeOffset.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/cs/ParseExamples.cs#3)]
 [!code-vb[System.DateTimeOffset.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Parse/vb/ParseExamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
  
- или - 
 <paramref name="styles" /> не является допустимым значением <see cref="T:System.Globalization.DateTimeStyles" />.  
  
- или - 
 <paramref name="styles" /> содержит неподдерживаемое значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
- или - 
 Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
-или- 
 <paramref name="input" /> содержит строковое представление смещения без даты или времени.</exception>
        <altmember cref="Overload:System.DateTimeOffset.TryParse" />
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий ожидаемый формат <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" /> и <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод анализирует строковое представление даты, которое должно быть в формате, определенном `format` параметром. <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> Также требуется, \<чтобы дата >, \<время > и \<смещение > элементы строкового представления даты и времени отображались в порядке, указанном параметром `format`. Если строка не соответствует этому `format` параметру <xref:System.FormatException>, метод создает исключение. `input`  В отличие от этого <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> , метод анализирует строковое представление даты в одном из форматов, распознаваемых <xref:System.Globalization.DateTimeFormatInfo> объектом поставщика формата. <xref:System.DateTimeOffset.Parse%2A>также позволяет \<использовать > даты, \<> времени и \<смещения > элементы строкового представления даты и времени для появления в любом порядке.  
  
 Параметр представляет собой строку, содержащую либо один стандартный описатель формата, либо один или несколько настраиваемых описателей формата, которые определяют требуемый формат `input` параметра. `format` Дополнительные сведения о допустимых кодах форматирования см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` `zz` `zzz` содержит описатели настраиваемого формата `input`, или, чтобы указать, что смещение должно присутствовать в, это смещение должно включать знак отрицательного или положительного знака. `z` Если знак отсутствует, метод создает исключение <xref:System.FormatException>.  
  
 Если `format` требуется, `input` чтобы параметр содержал дату, но не время, полученному <xref:System.DateTimeOffset> объекту присваивается время полуночи (0:00:00). Если `format` требуется, `input` чтобы параметр содержал время, но не дату, полученному <xref:System.DateTimeOffset> объекту назначается текущая дата в локальной системе. Если `format` не требует, чтобы `input` параметр содержал смещение, полученному <xref:System.DateTimeOffset> объекту присваивается смещение часового пояса локальной системы.  
  
 Конкретные символы и строки даты и времени, используемые в `input` , определяются `formatProvider` параметром, как и точный формат `input` `format` строки описателя стандартного формата. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, основанные `input` на интерпретации. <xref:System.Globalization.CultureInfo> Объект, возвращаемый его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойством, определяет символы и форматирование `input`в. <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> метод со стандартными и настраиваемыми описателями формата, а также инвариантный язык и региональные параметры для анализа нескольких строк даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#1)]  

В следующем примере анализируется массив строк, которые должны соответствовать [стандарту ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier). Как видно из выходных данных в примере, строки с начальными или конечными пробелами не удается успешно проанализировать, как строки с элементами даты и времени, которые выходят за пределы диапазона.

[!code-csharp[Parsing an ISO 8601 string](~/samples/snippets/csharp/api/system/datetimeoffset/parseexact/parseexact-iso8601.cs)]
[!code-vb[Parsing an ISO 8601 string](~/samples/snippets/visualbasic/api/system/datetimeoffset/parseexact/parseexact-iso8601.vb)]


 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> — <see langword="null" />.  
  
- или - 
 Свойство <paramref name="format" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> является пустой строкой ("").  
  
- или - 
 <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
- или - 
 Параметр <paramref name="format" /> равен пустой строке.  
  
- или - 
Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
        <block subset="none" type="usage"><para>В метод создает исключение, <see cref="T:System.FormatException" /> если анализируемая строка содержит компонент часа и указатель AM/PM, который не является соглашением. <see cref="Overload:System.DateTimeOffset.ParseExact" /> [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] В и более ранних версиях указатель AM/PM игнорируется.</para></block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Диапазон символов, отображающий дату и время.</param>
        <param name="format">Диапазон символов, содержащий спецификатор формата, который задает ожидаемый формат параметра <paramref name="input" />.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <summary>Преобразует диапазон символов, отображающий дату и время, в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат отображения даты и времени должен полностью соответствовать заданному формату.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Этот метод анализирует диапазон символов, представляющий дату, которая должна быть в формате, определенном `format` параметром. Также требуется, \<чтобы дата >, \<время > и \<смещение > элементы строкового представления даты и времени отображались в порядке, указанном параметром `format`. Если `input` <xref:System.FormatException>не `format` соответствует шаблону, метод создает исключение.  В отличие от этого <xref:System.DateTimeOffset.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> , метод анализирует строковое представление даты в одном из форматов, распознаваемых <xref:System.Globalization.DateTimeFormatInfo> объектом поставщика формата. <xref:System.DateTimeOffset.Parse%2A>также позволяет \<использовать > даты, \<> времени и \<смещения > элементы строкового представления даты и времени для появления в любом порядке.  
  
 Параметр — это диапазон символов, который содержит либо описатель стандартного формата с одним символом, либо один или несколько настраиваемых описателей формата, которые определяют требуемый формат `input` параметра. `format` Дополнительные сведения о допустимых кодах форматирования см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` `zz` `zzz` содержит описатели настраиваемого формата `input`, или, чтобы указать, что смещение должно присутствовать в, это смещение должно включать знак отрицательного или положительного знака. `z` Если знак отсутствует, метод создает исключение <xref:System.FormatException>.  
  
 Если `format` требуется, `input` чтобы параметр содержал дату, но не время, полученному <xref:System.DateTimeOffset> объекту присваивается время полуночи (0:00:00). Если `format` требуется, `input` чтобы параметр содержал время, но не дату, полученному <xref:System.DateTimeOffset> объекту назначается текущая дата в локальной системе. Если `format` не требует, чтобы `input` параметр содержал смещение, полученному <xref:System.DateTimeOffset> объекту присваивается смещение часового пояса локальной системы.  
  
 Конкретные символы и строки даты и времени, используемые в `input` , определяются `formatProvider` параметром, как и точный формат `input` , если `format` является описателем стандартного формата. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, основанные `input` на интерпретации. <xref:System.Globalization.CultureInfo> Объект, возвращаемый его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойством, определяет символы и форматирование `input`в. <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
-или-  
Параметр <paramref name="styles" /> содержит неподдерживаемое значение.  
- или -  
Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> — это пустой диапазон символов.  
 -или- Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
 -или- Параметр<paramref name="format" /> — это пустой диапазон символов.  
 - или -  
 Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTimeOffset" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Диапазон символов, содержащий дату и время, которые нужно преобразовать.</param>
        <param name="formats">Массив спецификаторов формата, в котором заданы требуемые форматы <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <summary>Преобразует диапазон символов, содержащий строковое представление даты и времени, в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданные форматы, сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат представления даты и времени должен полностью соответствовать одному из заданных форматов.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formats" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
Этот метод анализирует диапазон символов, представляющий дату, соответствующую любому из шаблонов, назначенных `formats` параметру. Если `input` не соответствует ни одному из этих шаблонов с вариациями <xref:System.FormatException>, определенными `styles` параметром, метод создает исключение. Помимо сравнения `input` с несколькими шаблонами форматирования, эта перегрузка ведет себя идентично <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> методу.  
  
 Параметр — это строковый массив, элементы которого содержат либо один стандартный описатель формата, либо один или несколько описателей настраиваемого формата, определяющих возможный шаблон `input` параметра. `formats` При вызове `input` метода он должен соответствовать одному из этих шаблонов. Дополнительные сведения о допустимых кодах форматирования см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если сопоставляемый элемент в `formats` `z`включает описатели настраиваемого формата `zzz` , `zz`или, чтобы указать, что смещение должно присутствовать в `input`, это смещение должно включать знак отрицательного или положительного знака. Если знак отсутствует, метод создает исключение <xref:System.FormatException>.  
  
> [!IMPORTANT]
>  `formats` Использование параметра этой перегрузки для указания нескольких форматов помогает сократить число незавершенных пользователей при вводе даты и времени. В частности, возможность определения нескольких шаблонов ввода позволяет приложению работать с представлениями даты и времени, которые могут включать или не иметь начальных нулей в месяцах, днях, часах, минутах и секундах.
  
 Если сопоставляемый элемент в `formats` требует, `input` чтобы он содержал дату, но не время, полученному <xref:System.DateTimeOffset> объекту присваивается время полуночи (0:00:00). Если сопоставляемый элемент в `formats` требует, `input` чтобы он содержал время, но не дату, полученному <xref:System.DateTimeOffset> объекту назначается текущая дата в локальной системе. Если сопоставляемый элемент в `formats` не `input` требует наличия смещения, Смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeLocal>включен, то смещение местного часового <xref:System.DateTimeOffset> пояса назначается объекту. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeUniversal>включен, то для <xref:System.DateTimeOffset> объекта назначается значение времени в формате UTC или + 00:00. Если не указано ни одно из значений, используется смещение местного часового пояса.  
  
 Конкретные символы и строки даты и времени, используемые в `input` , определяются `formatProvider` параметром. То же самое справедливо для точного формата `input`, если соответствующий `formats` элемент является строкой описателя стандартного формата. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, основанные `input` на интерпретации. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет символы и форматирование в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 `styles` Параметр определяет, разрешено ли использование пробелов во входной строке, указывает способ синтаксического анализа строк без явных компонентов смещения и поддерживает преобразование в формате UTC в рамках операции анализа. Поддерживаются все члены <xref:System.Globalization.DateTimeStyles> перечисления, кроме. <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> В следующей таблице перечислены результаты каждого поддерживаемого элемента.  
  
|Член`DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ и, при необходимости, преобразует его в время в формате UTC. `input` Он эквивалентен анализу строки и последующему вызову <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метода возвращенного <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если сопоставленный элемент в `formats` не требует, чтобы `input` он содержал значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если сопоставленный элемент в `formats` не требует, чтобы `input` он содержал значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение в формате UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Разрешает `input` включение внутреннего пробела, не заданного параметром `format`. Дополнительные пробелы могут появляться между компонентами даты и времени и отдельными компонентами (за исключением смещения) и пропускаются при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать начальные пробелы, не `formats`указанные в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не указанные `formats`в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` включать начальные, конечные и внутренние пробелы, не указанные `formats`в. Все дополнительные символы пробела, не указанные в сопоставленном элементе `formats` , игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что в `input`не допускаются дополнительные пробелы. Пробелы должны указываться в точности так, как указано в `formats` определенном элементе, для совпадения. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не действует, <xref:System.DateTimeOffset> поскольку структура не `Kind` включает свойство.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
-или- Параметр <paramref name="styles" /> содержит неподдерживаемое значение.  
- или -  
Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> — это пустой диапазон символов.  
-или- Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
- или -  
В <paramref name="formats" /> нет элементов, содержащих допустимые спецификаторы формата.  
- или -  
Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий ожидаемый формат <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод анализирует строковое представление даты, которое должно быть в формате, определенном `format` параметром. <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> Также требуется, \<чтобы дата >, \<время > и \<смещение > элементы строкового представления даты и времени отображались в порядке, указанном параметром `format`. Если строка не соответствует шаблону `format` параметра с `styles` любыми вариациями, определенными параметром, метод создает исключение <xref:System.FormatException>. `input`  В отличие от этого <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> , метод анализирует строковое представление даты в одном из форматов, распознаваемых <xref:System.Globalization.DateTimeFormatInfo> объектом поставщика формата. <xref:System.DateTimeOffset.Parse%2A>также позволяет \<использовать > даты, \<> времени и \<смещения > элементы строкового представления даты и времени для появления в любом порядке.  
  
 Параметр представляет собой строку, которая содержит либо один стандартный описатель формата, либо один или несколько настраиваемых описателей формата, определяющих требуемый шаблон `input` параметра. `format` Дополнительные сведения о допустимых кодах форматирования см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` `zz` `zzz` содержит описатели настраиваемого формата `input`, или, чтобы указать, что смещение должно присутствовать в, это смещение должно включать знак отрицательного или положительного знака. `z` Если знак отсутствует, метод создает исключение <xref:System.FormatException>.  
  
 Если `format` требуется, `input` чтобы параметр содержал дату, но не время, полученному <xref:System.DateTimeOffset> объекту присваивается время полуночи (0:00:00). Если `format` требуется, `input` чтобы параметр содержал время, но не дату, полученному <xref:System.DateTimeOffset> объекту назначается текущая дата в локальной системе. Если `format` не требуется, `input` содержащую смещение, Смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeLocal>включен, то смещение местного часового <xref:System.DateTimeOffset> пояса назначается объекту. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeUniversal>включен, то для <xref:System.DateTimeOffset> объекта назначается значение времени в формате UTC или + 00:00. Если не указано ни одно из значений, используется смещение местного часового пояса.  
  
 Конкретные символы и строки даты и времени, используемые в `input` , определяются `formatProvider` параметром. То же самое справедливо для точного формата `input`, если `format` является строкой описателя стандартного формата. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, основанные `input` на интерпретации. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет символы и форматирование в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 `styles` Параметр определяет, разрешено ли использование пробелов во входной строке, указывает способ синтаксического анализа строк без явных компонентов смещения и поддерживает преобразование в формате UTC в рамках операции анализа. Поддерживаются все члены <xref:System.Globalization.DateTimeStyles> перечисления, кроме. <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> В следующей таблице перечислены результаты каждого поддерживаемого элемента.  
  
|Член`DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ и, при необходимости, преобразует его в время в формате UTC. `input` Он эквивалентен анализу строки и последующему вызову <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метода возвращенного <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если `format` не требуется, `input` содержащую значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если `format` не требуется, `input` содержащую значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение в формате UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Разрешает `input` включение внутреннего пробела, не заданного параметром `format`. Дополнительные пробелы могут отображаться между компонентами даты и времени и отдельными компонентами и пропускаются при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать начальные пробелы, не `format`указанные в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не указанные `format`в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` включать начальные, конечные и внутренние пробелы, не указанные `format`в. Все лишние пробелы, не указанные в `format` , игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что в `input`не допускаются дополнительные пробелы. Пробелы должны указываться в точности так `format`, как указано в. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не действует, <xref:System.DateTimeOffset> поскольку структура не `Kind` включает свойство.|  
  
   
  
## Examples  
 В следующем примере используется <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод со стандартными и настраиваемыми описателями формата, инвариантным языком и различными <xref:System.Globalization.DateTimeStyles> значениями для анализа нескольких строк даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#2)]  

В следующем примере используются различные <xref:System.Globalization.DateTimeStyles> значения для синтаксического анализа массива строк, которые должны соответствовать [стандарту ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier). Как видно из выходных данных примера, строки, находящиеся в правильном формате, не проходят синтаксический анализ, если:

- они содержат пробелы и соответствующий <xref:System.Globalization.DateTimeStyles> флаг (например, <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> не был предоставлен в вызове метода.

- они содержат элементы даты и времени, которые выходят за пределы допустимого диапазона.

Предполагается, что строки, для которых не задано смещение в формате UTC, имеют смещение местного часового пояса (в данном случае — 07:00) <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> , если только в вызове метода не указан флаг. В этом случае предполагается, что они имеют универсальное координированное время.

[!code-csharp[Parsing ISO 8601 strings](~/samples/snippets/csharp/api/system/datetimeoffset/parseexact/parseexact-iso8601-2.cs)]
[!code-vb[Parsing ISO 8601 strings](~/samples/snippets/visualbasic/api/system/datetimeoffset/parseexact/parseexact-iso8601-2.vb)]


 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
  
- или - 
Параметр <paramref name="styles" /> содержит неподдерживаемое значение.  
  
-или- 
Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> — <see langword="null" />.  
  
-или- 
 <paramref name="format" /> — <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> является пустой строкой ("").  
  
- или - 
 <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
- или - 
 Параметр <paramref name="format" /> равен пустой строке.  
  
-или- 
Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
        <block subset="none" type="usage"><para>В метод создает исключение, <see cref="T:System.FormatException" /> если анализируемая строка содержит компонент часа и указатель AM/PM, который не является соглашением. <see cref="Overload:System.DateTimeOffset.ParseExact" /> [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] В и более ранних версиях указатель AM/PM игнорируется.</para></block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTimeOffset" Usage="System.DateTimeOffset.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formats">Массив спецификаторов формата, в котором заданы требуемые форматы <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданные форматы, сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
        <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formats" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод анализирует строковое представление даты, соответствующее любому из шаблонов, назначенных `formats` параметру. <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> Если строка не соответствует ни одному из этих шаблонов с любыми вариациями <xref:System.FormatException>, определенными `styles` параметром, метод создает исключение. `input` Помимо сравнения `input` с несколькими шаблонами форматирования, эта перегрузка ведет себя идентично <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> методу.  
  
 Параметр — это строковый массив, элементы которого содержат либо один стандартный описатель формата, либо один или несколько описателей настраиваемого формата, определяющих возможный шаблон `input` параметра. `formats` При вызове `input` метода он должен соответствовать одному из этих шаблонов. Дополнительные сведения о допустимых кодах форматирования см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если сопоставляемый элемент в `formats` `z`включает описатели настраиваемого формата `zzz` , `zz`или, чтобы указать, что смещение должно присутствовать в `input`, это смещение должно включать знак отрицательного или положительного знака. Если знак отсутствует, метод создает исключение <xref:System.FormatException>.  
  
> [!IMPORTANT]
>  `formats` Использование параметра этой перегрузки для указания нескольких форматов помогает сократить число незавершенных пользователей при вводе даты и времени. В частности, возможность определения нескольких шаблонов ввода позволяет приложению работать с представлениями даты и времени, которые могут включать или не иметь начальных нулей в месяцах, днях, часах, минутах и секундах. В примере показана эта схема.  
  
 Если сопоставляемый элемент в `formats` требует, `input` чтобы он содержал дату, но не время, полученному <xref:System.DateTimeOffset> объекту присваивается время полуночи (0:00:00). Если сопоставляемый элемент в `formats` требует, `input` чтобы он содержал время, но не дату, полученному <xref:System.DateTimeOffset> объекту назначается текущая дата в локальной системе. Если сопоставляемый элемент в `formats` не `input` требует наличия смещения, Смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeLocal>включен, то смещение местного часового <xref:System.DateTimeOffset> пояса назначается объекту. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeUniversal>включен, то для <xref:System.DateTimeOffset> объекта назначается значение времени в формате UTC или + 00:00. Если не указано ни одно из значений, используется смещение местного часового пояса.  
  
 Конкретные символы и строки даты и времени, используемые в `input` , определяются `formatProvider` параметром. То же самое справедливо для точного формата `input`, если соответствующий `formats` элемент является строкой описателя стандартного формата. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, основанные `input` на интерпретации. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет символы и форматирование в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 `styles` Параметр определяет, разрешено ли использование пробелов во входной строке, указывает способ синтаксического анализа строк без явных компонентов смещения и поддерживает преобразование в формате UTC в рамках операции анализа. Поддерживаются все члены <xref:System.Globalization.DateTimeStyles> перечисления, кроме. <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> В следующей таблице перечислены результаты каждого поддерживаемого элемента.  
  
|Член`DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ и, при необходимости, преобразует его в время в формате UTC. `input` Он эквивалентен анализу строки и последующему вызову <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метода возвращенного <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если сопоставленный элемент в `formats` не требует, чтобы `input` он содержал значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если сопоставленный элемент в `formats` не требует, чтобы `input` он содержал значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение в формате UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Разрешает `input` включение внутреннего пробела, не заданного параметром `format`. Дополнительные пробелы могут появляться между компонентами даты и времени и отдельными компонентами (за исключением смещения) и пропускаются при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать начальные пробелы, не `formats`указанные в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не указанные `formats`в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` включать начальные, конечные и внутренние пробелы, не указанные `formats`в. Все дополнительные символы пробела, не указанные в сопоставленном элементе `formats` , игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что в `input`не допускаются дополнительные пробелы. Пробелы должны указываться в точности так, как указано в `formats` определенном элементе, для совпадения. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не действует, <xref:System.DateTimeOffset> поскольку структура не `Kind` включает свойство.|  
  
   
  
## Examples  
 В следующем примере определяется несколько входных форматов для строкового представления даты и времени и значения смещения, а затем в <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод передается строка, введенная пользователем.  
  
 [!code-csharp[System.DateTimeOffset.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/cs/ParseExact.cs#3)]
 [!code-vb[System.DateTimeOffset.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ParseExact/vb/ParseExact.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.  
  
-или- 
 <paramref name="styles" /> содержит неподдерживаемое значение.  
  
-или- 
Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, которые нельзя использовать вместе.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Параметр <paramref name="input" /> является пустой строкой ("").  
  
- или - 
 <paramref name="input" /> не содержит допустимое строковое представление даты и времени.  
  
- или - 
В <paramref name="formats" /> нет элементов, содержащих допустимые спецификаторы формата.  
  
- или - 
Компонент часов и обозначение AM/PM в <paramref name="input" /> не соответствуют друг другу.</exception>
        <block subset="none" type="usage"><para>В метод создает исключение, <see cref="T:System.FormatException" /> если анализируемая строка содержит компонент часа и указатель AM/PM, который не является соглашением. <see cref="Overload:System.DateTimeOffset.ParseExact" /> [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] В и более ранних версиях указатель AM/PM игнорируется.</para></block>
        <altmember cref="Overload:System.DateTimeOffset.TryParseExact" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Second : int" Usage="System.DateTimeOffset.Second" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент секунд по показаниям часов, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент секунд текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целочисленного значения в диапазоне от 0 до 59.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Second%2A> Значение<xref:System.DateTimeOffset.Offset%2A> свойства не зависит от свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> второго компонента объекта, <xref:System.DateTimeOffset.ToString%2A> вызвав метод с описателем настраиваемого формата "s" или "SS".  
  
   
  
## Examples  
 Следующий пример отображает второй компонент <xref:System.DateTimeOffset> объекта тремя различными способами:  
  
-   Путем извлечения значения <xref:System.DateTimeOffset.Second%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "s".  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата SS.  
  
 [!code-csharp[System.DateTimeOffset.Properties#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#14)]
 [!code-vb[System.DateTimeOffset.Properties#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вычитает указанное время или длительность из текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : DateTimeOffset -&gt; TimeSpan" Usage="dateTimeOffset.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">Объект, представляющий вычитаемое значение.</param>
        <summary>Вычитает значение <see cref="T:System.DateTimeOffset" />, представляющее определенную дату и время, из текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Объект, задающий интервал между двумя объектами <see cref="T:System.DateTimeOffset" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод преобразует оба <xref:System.DateTimeOffset> объекта в время в формате UTC, прежде чем рассчитать интервал времени, разделяющий их. При этом удаляется любое воздействие на сравнение с учетом различных смещений в формате UTC.  
  
> [!NOTE]
>  Для языков, поддерживающих пользовательские операторы, можно также выполнить вычитание даты и времени с помощью оператора вычитания. Дополнительные сведения см. в <xref:System.DateTimeOffset.op_Subtraction%2A> описании метода.  
  
 Поскольку ни текущий <xref:System.DateTimeOffset> объект, `value` ни параметр не представляют дату и время в <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> определенном часовом поясе, метод не учитывает правила коррекции определенного часового пояса при вычитании даты и времени.  
  
   
  
## Examples  
 В следующем примере показано вычитание, использующее <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29> метод.  
  
 [!code-csharp[System.DateTimeOffset.Methods#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#13)]
 [!code-vb[System.DateTimeOffset.Methods#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTimeOffset Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset Subtract(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">Вычитаемый интервал времени.</param>
        <summary>Вычитает указанный интервал времени из текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Объект, значение которого равно дате и времени, представленным текущим объектом <see cref="T:System.DateTimeOffset" />, за вычетом интервала времени, представленного параметром <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Subtract%2A> Метод можно использовать для вычитания более одного типа интервала времени (дней, часов, минут, секунд или миллисекунд) в одной операции. Его поведение идентично <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> методу, который определяет оператор вычитания. Структура также поддерживает специализированные методы сложения (такие как <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>и <xref:System.DateTimeOffset.AddMinutes%2A>), которые позволяют выполнять вычитание путем присвоения параметру метода отрицательного значения. <xref:System.DateTimeOffset>  
  
> [!NOTE]
>  Этот метод возвращает новый <xref:System.DateTimeOffset> объект. Он не изменяет значение текущего объекта, добавляя `timeSpan` к его дате и времени.  
  
 Метод не влияет на значение <xref:System.DateTimeOffset> <xref:System.DateTimeOffset.Offset%2A> свойства объекта. <xref:System.DateTimeOffset.Subtract%2A> Возвращаемый <xref:System.DateTimeOffset> объект имеет то же смещение, что и исходный объект.  
  
 Поскольку текущий <xref:System.DateTimeOffset> объект не представляет дату и время в определенном часовом поясе <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29> , метод не учитывает правила коррекции определенного часового пояса при выполнении вычитания.  
  
   
  
## Examples  
 В следующем примере показано вычитание, использующее <xref:System.DateTimeOffset.Subtract%2A> метод.  
  
 [!code-csharp[System.DateTimeOffset.Methods#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#14)]
 [!code-vb[System.DateTimeOffset.Methods#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Итоговое значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />.  
  
- или - 
Итоговое значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md">Выполнение арифметических операций с датами и временем</related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Сравнивает значение текущего объекта <see cref="T:System.DateTimeOffset" /> с другим объектом того же типа.</summary>
        <returns>32-разрядное целое число со знаком, позволяющее определить, больше, меньше или равно значение текущего объекта <see cref="T:System.DateTimeOffset" /> значению параметра <paramref name="obj" />. Возвращаемые значения метода интерпретируются следующим образом: 
 <list type="table"><listheader><term> Возвращаемое значение 
 </term><description> Описание 
 </description></listheader><item><term> Меньше нуля 
 </term><description> Текущий объект <see cref="T:System.DateTimeOffset" /> меньше параметра <paramref name="obj" /> (заданный в нем момент времени наступает раньше).  
  
 </description></item><item><term> Нуль 
 </term><description> Текущий объект <see cref="T:System.DateTimeOffset" /> равен параметру <paramref name="obj" /> (соответствует тому же моменту времени).  
  
 </description></item><item><term> Больше нуля 
 </term><description> Текущий объект <see cref="T:System.DateTimeOffset" /> больше параметра <paramref name="obj" /> (заданный в нем момент времени наступает позже).  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sender">Объект, который инициализирует обратный вызов. Данная функциональная возможность для этого параметра в настоящее время не реализуется.</param>
        <summary>Выполняется после завершения десериализации объекта.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">Объект, который требуется заполнить данными.</param>
        <param name="context">Конечный объект для этой сериализации (см. раздел, посвященный <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Передает объекту <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данные, необходимые для сериализации текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">требуется полное доверие для немедленного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.DateTimeOffset.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество тактов, представляющее местную дату и время в текущем объекте <see cref="T:System.DateTimeOffset" /> по показаниям часов.</summary>
        <value>Число тактов во времени объекта <see cref="T:System.DateTimeOffset" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Ticks%2A> Значение<xref:System.DateTimeOffset.Offset%2A> свойства не зависит от свойства.  
  
 Значение <xref:System.DateTimeOffset.Ticks%2A> свойства представляет число интервалов 100-наносекундных, истекших с 12:00:00 полуночи 1 января 0001 года ( <xref:System.DateTimeOffset.MinValue>значение). Он не включает такты, которые будут добавлены в високосные секунды. Наносекунд — один биллионс секунды; 10 000 000 тактов в секунду. Значение <xref:System.DateTimeOffset.Ticks%2A> свойства лежит в диапазоне от `DateTimeOffset.MinValue.Ticks` до `DateTimeOffset.MaxValue.Ticks`.  
  
 Можно назначить число тактов <xref:System.DateTimeOffset> объекту <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> с помощью перегрузки конструктора.  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset> объект инициализируется путем приближения к числу тактов на дату 1 июля 2008 1:23:07. Затем в консоль выводится дата и число тактов, представленные этой датой.  
  
 [!code-csharp[System.DateTimeOffset.Properties#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#15)]
 [!code-vb[System.DateTimeOffset.Properties#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcDateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : TimeSpan" Usage="System.DateTimeOffset.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает время суток текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Время, истекшее с полуночи на текущую дату.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.TimeOfDay%2A> Значение<xref:System.DateTimeOffset.Offset%2A> свойства не зависит от свойства.  
  
 Свойство возвращает компонент <xref:System.DateTimeOffset> времени объекта <xref:System.TimeSpan> в форме объекта. <xref:System.DateTimeOffset.TimeOfDay%2A> Он эквивалентен <xref:System.DateTime.TimeOfDay%2A?displayProperty=nameWithType> свойству.  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset.TimeOfDay%2A> свойство используется для извлечения времени и его вывода на консоль.  
  
 [!code-csharp[System.DateTimeOffset.Properties#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#16)]
 [!code-vb[System.DateTimeOffset.Properties#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberSignature Language="F#" Value="member this.ToFileTime : unit -&gt; int64" Usage="dateTimeOffset.ToFileTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> во временную характеристику файла Windows.</summary>
        <returns>Значение текущего объекта <see cref="T:System.DateTimeOffset" /> представленное в виде временной характеристики файла Windows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время файла Windows — это 64-разрядное значение, представляющее количество интервалов 100-наносекундных, истекших с 12:00 полуночи, 1 января 1601 г. ЭРЫ Время в формате UTC. Windows использует время файла для записи, когда приложение создает, обращается к файлу или выполняет запись в него.  
  
 Метод преобразует дату и время <xref:System.DateTimeOffset> текущего объекта в UTC перед выполнением преобразования. <xref:System.DateTimeOffset.ToFileTime%2A> Иными словами, вызов <xref:System.DateTimeOffset.ToFileTime%2A> метода эквивалентен следующему вызову метода:  
  
```csharp
this.ToUtcDateTime().ToFileTime();  
```  
  
```vb  
Me.ToUtcDateTime().ToFileTime()  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Результирующая временная характеристика будет представлять дату и время до полуночи 1 января, 1601 от Р. Х. в формате UTC.</exception>
        <altmember cref="M:System.DateTimeOffset.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToLocalTime();" />
      <MemberSignature Language="F#" Value="member this.ToLocalTime : unit -&gt; DateTimeOffset" Usage="dateTimeOffset.ToLocalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует текущий объект <see cref="T:System.DateTimeOffset" /> в объект <see cref="T:System.DateTimeOffset" />, представляющий местное время.</summary>
        <returns>Объект, который представляет дату и время текущего объекта <see cref="T:System.DateTimeOffset" />, преобразованные в местное время.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При преобразовании в местное время метод сначала преобразует дату и время текущего <xref:System.DateTimeOffset> объекта в время в формате UTC путем вычитания смещения с момента времени. Затем он преобразует дату и время в формате UTC в местное время, добавляя смещение местного часового пояса. При этом учитываются все правила коррекции для местного часового пояса.  
  
 Как значение текущего <xref:System.DateTimeOffset> объекта, так и значение <xref:System.DateTimeOffset> объекта, возвращаемого вызовом метода, представляют один и тот же момент времени. То есть, если оба <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> метода передаются в метод, метод возвратит `true`значение.  
  
 Если преобразование вызывает время, находящийся вне допустимого диапазона <xref:System.DateTimeOffset> типа <xref:System.DateTimeOffset.ToLocalTime%2A> , метод возвращает <xref:System.DateTimeOffset> объект с датой и временем, для <xref:System.DateTimeOffset.MaxValue> которых задано значение или <xref:System.DateTimeOffset.MinValue> , а для смещения задано смещение местного часового пояса.  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset.ToLocalTime%2A> метод используется для <xref:System.DateTimeOffset> преобразования значения в местное время в тихоокеанском стандартном часовом поясе. Также демонстрируется поддержка метода для правил коррекции местного часового пояса.  
  
 [!code-csharp[System.DateTimeOffset.Methods#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#15)]
 [!code-vb[System.DateTimeOffset.Methods#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToOffset">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToOffset (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToOffset(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOffset (offset As TimeSpan) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToOffset(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.ToOffset : TimeSpan -&gt; DateTimeOffset" Usage="dateTimeOffset.ToOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Смещение, в которое необходимо преобразовать значение <see cref="T:System.DateTimeOffset" />.</param>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в дату и время, указанные в значении смещения.</summary>
        <returns>Объект, равный исходному объекту <see cref="T:System.DateTimeOffset" /> (то есть, методы <see cref="M:System.DateTimeOffset.ToUniversalTime" /> этих объектов возвращают один и тот же момент времени), свойству <see cref="P:System.DateTimeOffset.Offset" /> которого, однако, присвоено значение <paramref name="offset" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод является альтернативой <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> вызову метода. <xref:System.DateTimeOffset.ToOffset%2A> Это может быть полезно для выполнения простых преобразований из одного часового пояса в другой, когда известны смещения часовых поясов из времени в формате UTC. Однако поскольку ни исходный <xref:System.DateTimeOffset> объект, ни новый <xref:System.DateTimeOffset> объект, возвращаемый вызовом метода, однозначно связаны с определенным часовым поясом, метод не применяет правила коррекции часовых поясов в преобразовании.  
  
   
  
## Examples  
 В следующем примере показано, <xref:System.DateTimeOffset.ToOffset%2A> как использовать метод для <xref:System.DateTimeOffset> преобразования объекта в <xref:System.DateTimeOffset> объект с другим смещением.  
  
 [!code-csharp[System.DateTimeOffset.ToOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/cs/ToOffset.cs#1)]
 [!code-vb[System.DateTimeOffset.ToOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToOffset/vb/ToOffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Результирующий объект <see cref="T:System.DateTimeOffset" /> имеет значение <see cref="P:System.DateTimeOffset.DateTime" />, соответствующее более раннему моменту времени, чем <see cref="F:System.DateTimeOffset.MinValue" />.  
  
-или- 
Результирующий объект <see cref="T:System.DateTimeOffset" /> имеет значение <see cref="P:System.DateTimeOffset.DateTime" />, соответствующее более позднему моменту времени, чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> меньше -14 часов.  
  
-или- 
 Значение параметра <paramref name="offset" /> больше 14 часов.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление.</summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dateTimeOffset.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление.</summary>
        <returns>Строковое представление объекта <see cref="T:System.DateTimeOffset" />, которое включает смещение, добавленное в конце строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение этого метода идентично <xref:System.DateTime.ToString?displayProperty=nameWithType> значению метода, за исключением того, что он включает пробел, за которым следует смещение, добавленное в конец строки. Иными словами, он форматирует выходные данные, используя короткий шаблон даты, длинный шаблон времени и `zzz` строку настраиваемого формата, с каждым элементом, отделенным от предыдущего элемента пробелом. Например, если <xref:System.DateTime.ToString?displayProperty=nameWithType> возвращает значение 1/12/2008 6:15:50 PM, <xref:System.DateTimeOffset.ToString> возвращает значение 1/12/2008 6:15:50 pm-08:00 в течение 8 часов после времени в формате UTC.  
  
 Этот метод использует сведения о форматировании, полученные из текущего языка и региональных параметров. Для получения дополнительной информации см. <xref:System.Globalization.CultureInfo.CurrentCulture%2A>. Другие перегрузки <xref:System.DateTimeOffset.ToString%2A> метода позволяют указать язык и региональные параметры, используемые при форматировании, а также определить шаблон <xref:System.DateTimeOffset> вывода значения.  
  
   
  
## Examples  
 В следующем примере показаны вызовы <xref:System.DateTimeOffset.ToString> метода и отображены выходные данные в системе, для которой текущий язык и региональные параметры — en-US.  
  
 [!code-csharp[System.DateTimeOffset.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#1)]
 [!code-vb[System.DateTimeOffset.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, принятым для текущего языка и региональных параметров.</exception>
        <block subset="none" type="usage"><para><see cref="M:System.DateTimeOffset.ToString" /> Метод возвращает строковое представление даты и времени в календаре, используемом текущим языком и региональными параметрами. Если значение текущего <see cref="T:System.DateTimeOffset" /> экземпляра <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> предшествует или позднее <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод создает <see cref="T:System.ArgumentOutOfRangeException" />исключение. Ниже приведен пример. Он пытается отформатировать дату, находящийся за пределами диапазона <see cref="T:System.Globalization.HijriCalendar" /> класса, если текущий язык и региональные параметры — арабский (Сирия).  
  
[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception2.vb#2)]</para></block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="dateTimeOffset.ToString formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
        <summary>Преобразует числовое значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
        <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметром <paramref name="formatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение этого метода идентично его перегруженной перегрузке <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метода, за исключением того, что он включает пробел, за которым следует смещение, добавленное в конце строки. Иными словами, он форматирует выходные данные, используя короткий шаблон даты, длинный шаблон времени и `zzz` строку настраиваемого формата, с каждым элементом, отделенным от предыдущего элемента пробелом.  
  
 Формат этих трех элементов определяется `formatProvider` параметром. `formatProvider` Параметр может быть одним из следующих:  
  
-   <xref:System.Globalization.CultureInfo> Объект, представляющий язык и региональные параметры, соглашения о форматировании которых применяются к возвращаемой строке. Объект, возвращаемый свойством, определяет форматирование возвращаемой строки. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatProvider` имеет `null`значение, <xref:System.Globalization.DateTimeFormatInfo> то используется объект, связанный с текущим языком и региональными параметрами (см. раздел <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).  
  
   
  
## Examples  
 В следующем примере показан <xref:System.DateTimeOffset> объект, использующий <xref:System.Globalization.CultureInfo> объекты, представляющие инвариантный язык и региональные параметры, а также четыре других языка и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#2)]
 [!code-vb[System.DateTimeOffset.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, используемым в <paramref name="formatProvider" />.</exception>
        <block subset="none" type="usage"><para>Метод возвращает строковое представление даты и времени в календаре, используемом культурой, представленной <paramref name="formatProvider" /> параметром. <see cref="M:System.DateTimeOffset.ToString(System.IFormatProvider)" /> Его календарь определяется <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> свойством. Если значение текущего <see cref="T:System.DateTimeOffset" /> экземпляра <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> предшествует или позднее <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод создает <see cref="T:System.ArgumentOutOfRangeException" />исключение. Ниже приведен пример. Он пытается отформатировать дату, которая находится за пределами диапазона <see cref="T:System.Globalization.JapaneseCalendar" /> класса.  
  
[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception1.vb#1)]</para></block>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="dateTimeOffset.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Строка формата.</param>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием заданного формата.</summary>
        <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметром <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр должен содержать один символ описателя формата (см. [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) или шаблон пользовательского формата (см. раздел [настраиваемые строки формата даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md)), определяющий формат возвращаемого объекта. `format` Строка. Если `format` параметр имеет значение null или является пустой строкой ("" <xref:System.DateTimeOffset> ), то значение выводится с использованием формата по умолчанию.  
  
 В следующей таблице показана Точная операция с определенными описателями формата при использовании <xref:System.DateTimeOffset>с, что отличается от их поведения при использовании <xref:System.DateTime>с.  
  
|Существующий описатель формата|Новое поведение|  
|-------------------------------|------------------|  
|"K"|Предназначен для приема данных на дату и время. С <xref:System.DateTimeOffset>, сопоставляется с "zzz" (смещение всегда отображается с часами и минутами). Обратите внимание, что "K" является настраиваемым описателем формата. Он не может использоваться в качестве отдельного символа `format`в.|  
|"U"|Не поддерживается.|  
|Cерверный|Преобразует объект в формат UTC и выводит его с помощью строки `ddd, dd MMM yyyy HH:mm:ss GMT`настраиваемого формата. <xref:System.DateTimeOffset>|  
|"u"|Преобразует объект в формат UTC и выводит его в формате `yyyy-MM-dd HH:mm:ssZ`. <xref:System.DateTimeOffset>|  
  
 Остальные описатели стандартного формата даты и времени ведут себя так же <xref:System.DateTimeOffset.ToString%28System.String%29> , как <xref:System.DateTime.ToString%2A> и метод.  
  
 Этот метод использует сведения о форматировании, полученные из текущего языка и региональных параметров. Для получения дополнительной информации см. <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.  
  
   
  
## Examples  
 В следующем примере в консоль <xref:System.DateTimeOffset> выводится объект, использующий каждый из описателей стандартного формата даты и времени. Выходные данные форматируются с использованием языка и региональных параметров en-US.  
  
 [!code-csharp[System.DateTimeOffset.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#3)]
 [!code-vb[System.DateTimeOffset.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Длина <paramref name="format" /> равна 1, и он не является одним из стандартных символов описателя формата, определенных для <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
-или- 
 Параметр <paramref name="format" /> не содержит допустимый пользовательский шаблон формата.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, принятым для текущего языка и региональных параметров.</exception>
        <block subset="none" type="usage"><para><see cref="M:System.DateTimeOffset.ToString(System.String)" /> Метод возвращает строковое представление даты и времени в календаре, используемом текущим языком и региональными параметрами. Если значение текущего <see cref="T:System.DateTimeOffset" /> экземпляра <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> предшествует или позднее <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод создает <see cref="T:System.ArgumentOutOfRangeException" />исключение. Ниже приведен пример. Он пытается отформатировать дату, находящееся за пределами диапазона <see cref="T:System.Globalization.HebrewCalendar" /> класса, если текущий язык и региональные параметры — иврит (Израиль).  
  
[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception3.vb#3)]</para></block>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="dateTimeOffset.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">Строка формата.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
        <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях формата для данного языка и региональных параметров.</summary>
        <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр должен содержать один символ описателя формата (см. [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) или шаблон пользовательского формата (см. раздел [настраиваемые строки формата даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md)). `format` Если `format` параметр имеет значение null или является пустой строкой ("" <xref:System.DateTimeOffset> ), то объект выводится с использованием формата по умолчанию.  
  
 В следующей таблице показана Точная операция с определенными описателями формата при использовании <xref:System.DateTimeOffset>с, что отличается от их поведения при использовании <xref:System.DateTime>с.  
  
|Существующий описатель формата|Новое поведение|  
|-------------------------------|------------------|  
|"K"|Предназначен для приема данных на дату и время. С <xref:System.DateTimeOffset>, сопоставляется с "zzz" (смещение всегда отображается с часами и минутами). Обратите внимание, что "K" является настраиваемым описателем формата. Он не может использоваться в качестве отдельного символа `format`в.|  
|"U"|Не поддерживается.|  
|Cерверный|Преобразует объект в формат UTC и выводит его с помощью строки `ddd, dd MMM yyyy HH:mm:ss GMT`настраиваемого формата. <xref:System.DateTimeOffset>|  
|"u"|Преобразует значение в UTC и выводит его в формате `yyyy-MM-dd HH:mm:ssZ`. <xref:System.DateTimeOffset>|  
  
 Остальные описатели стандартного формата даты и времени ведут себя так же <xref:System.DateTimeOffset.ToString%28System.String%29> , как <xref:System.DateTime.ToString%2A> и метод.  
  
 Шаблон, соответствующий описателем стандартного формата, а также символам и именам компонентов даты и времени, определяется `formatProvider` параметром. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, форматирование которых используется `input`в. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет форматирование, используемое в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatProvider` имеет `null`значение, <xref:System.Globalization.DateTimeFormatInfo> то используется объект, связанный с текущим языком и региональными параметрами (см. раздел <xref:System.Globalization.CultureInfo.CurrentCulture%2A>).  
  
   
  
## Examples  
 В следующем примере <xref:System.DateTimeOffset.ToString%28System.String%2CSystem.IFormatProvider%29> метод используется для <xref:System.DateTimeOffset> вывода объекта, использующего строку настраиваемого формата для нескольких различных языков и региональных параметров.  
  
 [!code-csharp[System.DateTimeOffset.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/cs/ToString.cs#4)]
 [!code-vb[System.DateTimeOffset.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Длина <paramref name="format" /> равна 1, и он не является одним из стандартных символов описателя формата, определенных для <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
-или- 
 <paramref name="format" /> не содержит допустимого шаблона пользовательского формата.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, используемым в <paramref name="formatProvider" />.</exception>
        <block subset="none" type="usage"><para>Метод возвращает строковое представление даты и времени в календаре, используемом <paramref name="formatProvider" /> параметром. <see cref="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)" /> Его календарь определяется <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> свойством. Если значение текущего <see cref="T:System.DateTimeOffset" /> экземпляра <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> предшествует или позднее <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, метод создает <see cref="T:System.ArgumentOutOfRangeException" />исключение. Ниже приведен пример. Он пытается отформатировать дату, которая находится за пределами диапазона <see cref="T:System.Globalization.UmAlQuraCalendar" /> класса.  
  
[!code-csharp[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/cs/datetimeoffset.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTimeOffset.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tostring.argumentoutofrangeexception/vb/datetimeoffset.tostring.argumentoutofrangeexception4.vb#4)]</para></block>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Строки стандартных форматов даты и времени</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Строки настраиваемых форматов даты и времени</related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/">Пример: служебная программа форматирования .NET CoreC#WinForms ()</related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/">Пример: служебная программа форматирования для .NET Core WinForms (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset ToUniversalTime();" />
      <MemberSignature Language="F#" Value="member this.ToUniversalTime : unit -&gt; DateTimeOffset" Usage="dateTimeOffset.ToUniversalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует текущий объект <see cref="T:System.DateTimeOffset" /> в значение <see cref="T:System.DateTimeOffset" />, представляющее время в формате UTC.</summary>
        <returns>Объект, представляющий дату и время текущего объекта <see cref="T:System.DateTimeOffset" />, преобразованную во время в формате UTC.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает <xref:System.DateTimeOffset> объект, свойство <xref:System.DateTimeOffset.Offset%2A> которого имеет значение 0.  
  
 Как значение текущего <xref:System.DateTimeOffset> объекта, так и значение <xref:System.DateTimeOffset> объекта, возвращаемого вызовом метода, представляют один и тот же момент времени. То есть, если оба <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> метода передаются в метод, метод возвратит `true`значение.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.ToUniversalTime%2A> метод для преобразования местного времени и нескольких других значений времени в формат UTC.  
  
 [!code-csharp[System.DateTimeOffset.Methods#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/cs/Methods.cs#16)]
 [!code-vb[System.DateTimeOffset.Methods#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Methods/vb/Methods.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToLocalTime" />
        <altmember cref="M:System.DateTimeOffset.ToOffset(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeMilliseconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeMilliseconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeMilliseconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeMilliseconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeMilliseconds();" />
      <MemberSignature Language="F#" Value="member this.ToUnixTimeMilliseconds : unit -&gt; int64" Usage="dateTimeOffset.ToUnixTimeMilliseconds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает количество миллисекунд, истекших с 1970-01-01T00:00:00.000Z.</summary>
        <returns>Количество миллисекунд, истекших с 1970-01-01T00:00:00.000Z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время UNIX представляет число секунд, истекших с 1970-01-01T00:00:00Z (1 января 1970 г., 12:00 AM UTC). Это не учитывает високосные секунды. Этот метод возвращает количество миллисекунд в времени Unix.  
  
 Этот метод сначала преобразует текущий экземпляр в формат UTC, прежде чем возвращать число миллисекунд в его времени Unix. Для значений даты и времени до 1970-01-01T00:00:00Z этот метод возвращает отрицательное значение.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeSeconds" />
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToUnixTimeSeconds">
      <MemberSignature Language="C#" Value="public long ToUnixTimeSeconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToUnixTimeSeconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.ToUnixTimeSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUnixTimeSeconds () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToUnixTimeSeconds();" />
      <MemberSignature Language="F#" Value="member this.ToUnixTimeSeconds : unit -&gt; int64" Usage="dateTimeOffset.ToUnixTimeSeconds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает количество секунд, истекших с 1970-01-01T00:00:00Z.</summary>
        <returns>Количество секунд, истекших с 1970-01-01T00:00:00Z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время UNIX представляет число секунд, истекших с 1970-01-01T00:00:00Z (1 января 1970 г., 12:00 AM UTC). Это не учитывает високосные секунды.  
  
 Этот метод сначала преобразует текущий экземпляр в формат UTC перед возвращением времени Unix. Для значений даты и времени до 1970-01-01T00:00:00Z этот метод возвращает отрицательное значение.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.ToUnixTimeSeconds%2A> метод для возврата времени Unix значений, которые равны, вскоре раньше и вскоре после 1970-01-01T00:00:00Z.  
  
 [!code-csharp[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/cs/tounixtimeseconds1.cs#1)]
 [!code-vb[System.DateTimeOffset.ToUnixTimeSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetimeoffset.tounixtimeseconds/vb/tounixtimeseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)" />
        <altmember cref="M:System.DateTimeOffset.ToUnixTimeMilliseconds" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional formatProvider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="dateTimeOffset.TryFormat (destination, charsWritten, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="input" /> равно <see langword="null" /> или в нем не содержится допустимое строковое представление даты и времени. Этот параметр передается неинициализированным.</param>
        <summary>Предпринимает попытку преобразования указанного строкового представления даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" /> и возвращает значение, позволяющее определить успешность преобразования.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> метода <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=nameWithType> аналогична методу, за исключением того, что он не создает исключение, если преобразование завершается неудачей. Он анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделяются пробелом. Эти три элемента показаны в следующей таблице.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|"1:02:03 PM"|  
|\<Смещение >|"-7:30"|  
  
 Хотя каждый из этих элементов является необязательным \<, смещение > не может отображаться самим собой. Она должна быть указана вместе с \<> даты или \<> времени. Если \<Дата > отсутствует, ее значение по умолчанию — текущий день. Если \<функция Date > указана, но ее компонент year состоит только из двух цифр, он преобразуется в год текущего календаря языка и региональных параметров в соответствии со значением <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойства. Если \<> времени отсутствует, его значение по умолчанию — 12:00:00 AM. Если \<свойство offset > отсутствует, его значение по умолчанию — смещение местного часового пояса. Если \<значение offset > имеется, оно может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > должно включать символ знака или метод возвращает `false`.  
  
 Строка анализируется с помощью сведений о форматировании <xref:System.Globalization.DateTimeFormatInfo> в объекте, инициализированном для текущего языка и региональных параметров. `input` Чтобы выполнить синтаксический анализ строки, содержащей назначенное форматирование, которое не обязательно соответствует текущему языку и региональным параметрам, используйте <xref:System.DateTimeOffset.TryParseExact%2A> метод и укажите описатель формата.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.DateTimeOffset%40%29> метод для синтаксического анализа нескольких строк с различными форматами даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/">Пример: служебная программа форматирования .NET CoreC#WinForms ()</related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/">Пример: служебная программа форматирования для .NET Core WinForms (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider * System.Globalization.DateTimeStyles * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.TryParse (input, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formatProvider">Объект, предоставляющий сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
        <param name="result">После возврата из этого метода содержит значение <see cref="T:System.DateTimeOffset" />, эквивалентное дате и времени, заданным в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="input" /> равно <see langword="null" /> или в нем не содержится допустимое строковое представление даты и времени. Этот параметр передается неинициализированным.</param>
        <summary>Предпринимает попытку преобразования указанного строкового представления даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" /> и возвращает значение, позволяющее определить успешность преобразования.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метода <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> аналогична методу, за исключением того, что он не создает исключение, если преобразование завершается неудачей. Метод анализирует строку с тремя элементами, которые могут отображаться в любом порядке и разделяются пробелом. Эти три элемента показаны в следующей таблице.  
  
|Элемент|Пример|  
|-------------|-------------|  
|\<Дата >|"2/10/2007"|  
|\<Время >|"1:02:03 PM"|  
|\<Смещение >|"-7:30"|  
  
 Хотя каждый из этих элементов является необязательным \<, смещение > не может отображаться самим собой. Она должна быть указана вместе с \<> даты или \<> времени. Если \<Дата > отсутствует, ее значение по умолчанию — текущий день. Если \<Дата > указана, но ее компонент year состоит только из двух цифр, он преобразуется в год `provider` в текущем календаре параметра в зависимости от значения <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> свойства. Если \<> времени отсутствует, его значение по умолчанию — 12:00:00 AM. Если \<свойство offset > отсутствует, его значение по умолчанию — смещение местного часового пояса или <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> <xref:System.TimeSpan.Zero> значение или <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> в `styles`. Если \<значение offset > имеется, оно может представлять отрицательное или положительное смещение от времени в формате UTC. В любом случае \<смещение > должно включать символ знака или метод возвращает `false`.  
  
 Строка анализируется с использованием сведений о форматировании, связанных с языком и региональными параметрами, <xref:System.Globalization.DateTimeFormatInfo> в `formatProvider` объекте, предоставленном параметром. `input` `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, форматирование которых используется `input`в. <xref:System.Globalization.CultureInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойством, определяет формат, используемый в `input`. <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Кроме того \<, каждый элемент может разделяться начальным или конечным пробелом, а дата > и \<время > компоненты могут включать в себя внутренние пробелы (например, 6).   00:00). Только компонент \<смещения > не может включать внутренние пробелы.  
  
 Если `provider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 Положительный или отрицательный знак, используемый \<в смещении > должен быть либо +, либо-. Он <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> не определяется <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойствами <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> или объекта, возвращаемого `formatprovider` свойством параметра. <xref:System.Globalization.NumberFormatInfo>  
  
 Поддерживаются следующие члены <xref:System.Globalization.DateTimeStyles> перечисления:  
  
|DateTimeStyles, элемент|Комментарии|  
|---------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Анализирует строку, представленную `input` , и при необходимости преобразует ее в формат UTC. Он эквивалентен синтаксическому анализу строки и последующему вызову <xref:System.DateTimeOffset.ToUniversalTime> метода возвращенного объекта.|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Несмотря на допустимость, это значение игнорируется. В \<> компонентов даты > и \<времени допускаются внутренние пробелы.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Несмотря на допустимость, это значение игнорируется. Начальные пробелы допускаются перед каждым компонентом в проанализированной строке.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Несмотря на допустимость, это значение игнорируется. Конечные пробелы допускаются перед каждым компонентом в проанализированной строке.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Это поведение установлено по умолчанию. Его нельзя переопределить, указав более жесткое <xref:System.Globalization.DateTimeStyles> значение перечисления, <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>например.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Указывает, что если `input` параметр не имеет \<элемента offset >, необходимо указать смещение местного часового пояса. Это поведение <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метода по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Указывает, что если `input` параметр не имеет \<элемента offset >, необходимо указать смещение UTC (00:00).|  
|<xref:System.Globalization.DateTimeStyles.None>|Несмотря на допустимость, это значение игнорируется и не действует.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Поскольку структура не `Kind` включает свойство, это значение не действует. <xref:System.DateTimeOffset>|  
  
 <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> Только значение не поддерживается. Если это значение включено `styles` в параметр, создается исключение. <xref:System.ArgumentException>  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.DateTimeOffset.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод с <xref:System.Globalization.DateTimeStyles> различными значениями для синтаксического анализа некоторых строк с различными форматами даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
- или - 
 Объект<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
  
- или - 
 Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
        <altmember cref="Overload:System.DateTimeOffset.Parse" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]        

         ]]></format>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Диапазон символов, содержащий представление даты и времени, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий требуемый формат <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование не будет выполнено, если</param>
        <summary>Преобразует представление даты и времени в диапазоне символов в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат отображения даты и времени должен полностью соответствовать заданному формату.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Эта перегрузка аналогична <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> методу, за исключением того, что этот метод не создает исключение, если преобразование завершается неудачей. Он анализирует представление даты и времени, которое должно точно соответствовать шаблону, заданному `format` параметром. Если `input` не соответствует этому шаблону, а некоторые возможные варианты в пробелах, определенных `styles` параметром, операция синтаксического анализа завершается ошибкой и метод `false`возвращает значение.  
  
Параметр — это диапазон символов, который содержит либо один стандартный описатель формата, либо один или несколько настраиваемых описателей формата, определяющих требуемый `input`шаблон. `format` Дополнительные сведения о допустимых кодах форматирования см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` `zz` `zzz` содержит описатели настраиваемого формата `input`, или, чтобы указать, что смещение должно присутствовать в, это смещение должно включать знак отрицательного или положительного знака. `z` Если знак отсутствует, операция синтаксического анализа завершается неудачей и метод `false`возвращает значение.  
  
Если `format` требуется, `input` чтобы параметр содержал дату, но не время, полученному <xref:System.DateTimeOffset> объекту присваивается время полуночи (0:00:00). Если `format` требуется, `input` чтобы параметр содержал время, но не дату, полученному <xref:System.DateTimeOffset> объекту назначается текущая дата в локальной системе. Если `format` не требуется, `input` содержащую смещение, Смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeLocal>включен, то смещение местного часового <xref:System.DateTimeOffset> пояса назначается объекту. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeUniversal>включен, то для <xref:System.DateTimeOffset> объекта назначается значение времени в формате UTC или + 00:00. Если не указано ни одно из значений, используется смещение местного часового пояса.  
  
Конкретные символы и строки даты и времени, используемые в `input` , определяются `formatProvider` параметром. Это справедливо и для точного шаблона `input` , если `format` является строкой описателя стандартного формата. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, основанные `input` на интерпретации. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет символы и стандартные форматы, разрешенные в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 `styles` Параметр определяет, разрешено ли использование пробелов во входной строке, указывает способ синтаксического анализа строк без явных компонентов смещения и поддерживает преобразование в формате UTC в рамках операции анализа. Поддерживаются все члены <xref:System.Globalization.DateTimeStyles> перечисления, кроме. <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> В следующей таблице перечислены результаты каждого поддерживаемого элемента.  
  
|Член`DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ и, при необходимости, преобразует его в время в формате UTC. `input` Он эквивалентен анализу представления даты и времени, а затем вызову <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метода возвращенного <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если `format` не требуется, `input` содержащую значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если `format` не требуется, `input` содержащую значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение в формате UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` включить внутреннее пустое пространство, не указанное в формате. Дополнительные пробелы могут отображаться между компонентами даты и времени и отдельными компонентами, отличными от смещения, и игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать начальные пробелы, не `format`указанные в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не указанные `format`в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` включать начальные, конечные и внутренние пробелы, не указанные `format`в. Все лишние пробелы, не указанные в `format` , игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что в `input`не допускаются дополнительные пробелы. Пробелы должны указываться в точности так `format`, как указано в. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не действует, поскольку <xref:System.DateTimeOffset> структура не `Kind` включает свойство.|  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
-или- Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
-или- Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
Этот метод анализирует строковое представление даты, совпадающей с любым из шаблонов, назначенных `formats` массиву. Если `input` не соответствует ни одному из этих шаблонов с вариациями, определенными `styles` параметром, операция синтаксического анализа завершается ошибкой и метод `false`возвращает значение. Помимо сравнения `input` с несколькими строками, содержащими описатели формата, эта перегрузка ведет себя идентично <xref:System.DateTimeOffset.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)?displayProperty=nameWithType> методу.  
  
 Параметр — это строковый массив, элементы которого содержат либо один стандартный описатель формата, либо один или несколько описателей настраиваемого формата, определяющих возможный `input`шаблон. `formats` Дополнительные сведения о допустимых кодах форматирования см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если сопоставляемый элемент в `formats` `z`включает описатели настраиваемого формата `zzz` , `zz`или, чтобы указать, что смещение должно присутствовать в `input`, это смещение должно включать знак отрицательного или положительного знака. Если знак отсутствует, операция синтаксического анализа завершается неудачей и `false`метод возвращает значение.  
  
> [!IMPORTANT]
>  `formats` Использование параметра этой перегрузки для указания нескольких форматов помогает сократить число незавершенных пользователей при вводе даты и времени. В частности, возможность определения нескольких шаблонов ввода позволяет приложению работать с представлениями даты и времени, которые могут включать или не иметь начальных нулей в месяцах, днях, часах, минутах и секундах. В примере показана эта схема.  
  
 Если сопоставляемый элемент в `formats` требует, `input` чтобы он содержал дату, но не время, полученному <xref:System.DateTimeOffset> объекту присваивается время полуночи (0:00:00). Если сопоставляемый элемент в `formats` требует, чтобы входные данные содержали время, но не <xref:System.DateTimeOffset> дату, полученному объекту присваивается текущая дата в локальной системе. Если сопоставляемый элемент в `formats` не `input` требует наличия смещения, Смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>включен, то смещение местного часового <xref:System.DateTimeOffset> пояса назначается объекту. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>включен, то для <xref:System.DateTimeOffset> объекта назначается значение времени в формате UTC или + 00:00. Если не указано ни одно из значений, используется смещение местного часового пояса.  
  
 Конкретные символы даты и времени, используемые в `input` , определяются `formatProvider` параметром. Это справедливо и для точного шаблона `input` , если соответствующий `formats` элемент является строкой описателя стандартного формата. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, основанные `input` на интерпретации. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет символы и форматирование в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 `styles` Параметр определяет, разрешено ли использование пробелов во входной строке, указывает способ синтаксического анализа строк без явных компонентов смещения и поддерживает преобразование в формате UTC в рамках операции анализа. Поддерживаются все члены <xref:System.Globalization.DateTimeStyles> перечисления, кроме. <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> В следующей таблице перечислены результаты каждого поддерживаемого элемента.  
  
|Член`DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ и, при необходимости, преобразует его в время в формате UTC. `input` Он эквивалентен анализу строки и последующему вызову <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метода возвращенного <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если сопоставленный элемент в `formats` не требует, чтобы `input` он содержал значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если сопоставленный элемент в `formats` не требует, чтобы `input` он содержал значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение в формате UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Допускает `input` включение внутреннего пробела, не указанного элементами в `formats`. Дополнительные пробелы могут появляться между компонентами даты и времени и отдельными компонентами (за исключением смещения) и пропускаются при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать начальные пробелы, не указанные элементами в `formats`. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не указанные элементами в `formats`. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` включать начальные, конечные и внутренние пробелы, не указанные элементами в `formats`. Все дополнительные символы пробела, не указанные в сопоставленном элементе `formats` , игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что в `input`не допускаются дополнительные пробелы. `formats` Для успешного сопоставления пробелы должны располагаться в точности так, как указано в определенном элементе. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не действует, <xref:System.DateTimeOffset> поскольку структура не `Kind` включает свойство.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
-или- Тип <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
-или- Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="format">Описатель формата, задающий требуемый формат <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое показывает разрешенный формат ввода. Обычно указывается значение <see langword="None" />.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачно, если параметр <paramref name="input" /> имеет значение <see langword="null" /> или не содержит допустимое строчное представление даты и времени в требуемом формате, заданном параметрами <paramref name="format" /> и <c>provider</c>. Этот параметр передается неинициализированным.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метода <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> аналогична методу, за исключением того, что этот метод не создает исключение, если преобразование завершается неудачей. Он анализирует строковое представление даты и времени, которое должно точно соответствовать шаблону, заданному `format` параметром. Если строка не соответствует этому шаблону с некоторыми возможными вариациями в пробелах, определенными `styles` параметром, операция синтаксического анализа завершается ошибкой и `false`метод возвращает значение. `input`  
  
 Параметр представляет собой строку, содержащую либо один стандартный описатель формата, либо один или несколько настраиваемых описателей формата, определяющих требуемый `input`шаблон. `format` Дополнительные сведения о допустимых кодах форматирования см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если `format` `zz` `zzz` содержит описатели настраиваемого формата `input`, или, чтобы указать, что смещение должно присутствовать в, это смещение должно включать знак отрицательного или положительного знака. `z` Если знак отсутствует, операция синтаксического анализа завершается неудачей и метод `false`возвращает значение.  
  
 Если `format` требуется, `input` чтобы параметр содержал дату, но не время, полученному <xref:System.DateTimeOffset> объекту присваивается время полуночи (0:00:00). Если `format` требуется, `input` чтобы параметр содержал время, но не дату, полученному <xref:System.DateTimeOffset> объекту назначается текущая дата в локальной системе. Если `format` не требуется, `input` содержащую смещение, Смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeLocal>включен, то смещение местного часового <xref:System.DateTimeOffset> пояса назначается объекту. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeUniversal>включен, то для <xref:System.DateTimeOffset> объекта назначается значение времени в формате UTC или + 00:00. Если не указано ни одно из значений, используется смещение местного часового пояса.  
  
 Конкретные символы и строки даты и времени, используемые в `input` , определяются `formatProvider` параметром. Это справедливо и для точного шаблона `input` , если `format` является строкой описателя стандартного формата. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, основанные `input` на интерпретации. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет символы и стандартные форматы, разрешенные в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 `styles` Параметр определяет, разрешено ли использование пробелов во входной строке, указывает способ синтаксического анализа строк без явных компонентов смещения и поддерживает преобразование в формате UTC в рамках операции анализа. Поддерживаются все члены <xref:System.Globalization.DateTimeStyles> перечисления, кроме. <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> В следующей таблице перечислены результаты каждого поддерживаемого элемента.  
  
|Член`DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ и, при необходимости, преобразует его в время в формате UTC. `input` Он эквивалентен анализу строки и последующему вызову <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метода возвращенного <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если `format` не требуется, `input` содержащую значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если `format` не требуется, `input` содержащую значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение в формате UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Позволяет `input` включить внутреннее пустое пространство, не указанное в формате. Дополнительные пробелы могут отображаться между компонентами даты и времени и отдельными компонентами, отличными от смещения, и игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать начальные пробелы, не `format`указанные в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не указанные `format`в параметре. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` включать начальные, конечные и внутренние пробелы, не указанные `format`в. Все лишние пробелы, не указанные в `format` , игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что в `input`не допускаются дополнительные пробелы. Пробелы должны указываться в точности так `format`, как указано в. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не действует, поскольку <xref:System.DateTimeOffset> структура не `Kind` включает свойство.|  
  
## Examples 

 В следующем примере используется <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод со стандартными и настраиваемыми описателями формата, инвариантным языком и различными <xref:System.Globalization.DateTimeStyles> значениями для анализа нескольких строк даты и времени.  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#1)]
 [!code-vb[System.DateTimeOffset.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#1)]  

В следующем примере используются различные <xref:System.Globalization.DateTimeStyles> значения для синтаксического анализа массива строк, которые должны соответствовать [стандарту ISO 8601](~/docs/standard/base-types/standard-date-and-time-format-strings.md#the-round-trip-o-o-format-specifier). Как видно из выходных данных примера, строки, находящиеся в правильном формате, не проходят синтаксический анализ, если:

- они содержат пробелы и соответствующий <xref:System.Globalization.DateTimeStyles> флаг (например, <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> не был предоставлен в вызове метода.

- они содержат элементы даты и времени, которые выходят за пределы допустимого диапазона.

Предполагается, что строки, не указывающие смещение в формате UTC, имеют смещение местного часового пояса (в данном случае-07:00, которое отражает смещение часового пояса по тихоокеанскому времени), если <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> только в вызове метода не указан флаг. В этом случае предполагается, что они имеют универсальное координированное время.

[!code-csharp[Parsing ISO 8601 strings](~/samples/snippets/csharp/api/system/datetimeoffset/tryparseexact/tryparseexacto8601-2.cs)]
[!code-vb[Parsing ISO 8601 strings](~/samples/snippets/visualbasic/api/system/datetimeoffset/tryparseexact/tryparseexacto8601-2.vb)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
-или- 
 Объект<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
  
-или- 
 Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
        <block subset="none" type="usage"><para>В метод <see cref="Overload:System.DateTimeOffset.TryParseExact" /> возвращает значение<see langword="false" /> , если анализируемая строка содержит компонент часа и указатель AM/PM, который не является [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]соглашением. [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] В и более ранних версиях указатель AM/PM игнорируется.</para></block>
        <altmember cref="Overload:System.DateTimeOffset.ParseExact" />
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTimeOffset&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTimeOffset % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles * DateTimeOffset -&gt; bool" Usage="System.DateTimeOffset.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
        <Parameter Name="result" Type="System.DateTimeOffset" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
        <param name="formats">Массив, в котором задаются ожидаемые форматы <paramref name="input" />.</param>
        <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
        <param name="styles">Побитовое сочетание значений перечисления, которое показывает разрешенный формат ввода. Обычно указывается значение <see langword="None" />.</param>
        <param name="result">После возврата из этого метода содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачно, если параметр <paramref name="format" /> не содержит допустимое строчное представление даты и времени или же даты и времени в требуемом формате, заданном параметром <paramref name="formats" />, или если параметр <see langword="null" /> имеет значение <paramref name="input" />. Этот параметр передается неинициализированным.</param>
        <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный массив форматов, указанные сведения о форматировании, связанные с языком и региональными параметрами, и стиль форматирования. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод анализирует строковое представление даты, совпадающей с любым из шаблонов, назначенных `formats` массиву. <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> Если строка не соответствует ни одному из этих шаблонов с вариациями, определенными `styles` параметром, операция синтаксического анализа завершается ошибкой и метод возвращает `false`значение. `input` Помимо сравнения `input` с несколькими строками, содержащими описатели формата, эта перегрузка ведет себя идентично <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> методу.  
  
 Параметр — это строковый массив, элементы которого содержат либо один стандартный описатель формата, либо один или несколько описателей настраиваемого формата, определяющих возможный `input`шаблон. `formats` Дополнительные сведения о допустимых кодах форматирования см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Если сопоставляемый элемент в `formats` `z`включает описатели настраиваемого формата `zzz` , `zz`или, чтобы указать, что смещение должно присутствовать в `input`, это смещение должно включать знак отрицательного или положительного знака. Если знак отсутствует, операция синтаксического анализа завершается неудачей и `false`метод возвращает значение.  
  
> [!IMPORTANT]
>  `formats` Использование параметра этой перегрузки для указания нескольких форматов помогает сократить число незавершенных пользователей при вводе даты и времени. В частности, возможность определения нескольких шаблонов ввода позволяет приложению работать с представлениями даты и времени, которые могут включать или не иметь начальных нулей в месяцах, днях, часах, минутах и секундах. В примере показана эта схема.  
  
 Если сопоставляемый элемент в `formats` требует, `input` чтобы он содержал дату, но не время, полученному <xref:System.DateTimeOffset> объекту присваивается время полуночи (0:00:00). Если сопоставляемый элемент в `formats` требует, чтобы входные данные содержали время, но не <xref:System.DateTimeOffset> дату, полученному объекту присваивается текущая дата в локальной системе. Если сопоставляемый элемент в `formats` не `input` требует наличия смещения, Смещение результирующего <xref:System.DateTimeOffset> объекта зависит от значения `styles` параметра. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeLocal>включен, то смещение местного часового <xref:System.DateTimeOffset> пояса назначается объекту. Если `styles` параметр <xref:System.Globalization.DateTimeStyles.AssumeUniversal>включен, то для <xref:System.DateTimeOffset> объекта назначается значение времени в формате UTC или + 00:00. Если не указано ни одно из значений, используется смещение местного часового пояса.  
  
 Конкретные символы и строки даты и времени, используемые в `input` , определяются `formatProvider` параметром. Это справедливо и для точного шаблона `input` , если соответствующий `formats` элемент является строкой описателя стандартного формата. `formatProvider` Параметр может быть одним из следующих:  
  
-   Объект, представляющий язык и региональные параметры, основанные `input` на интерпретации. <xref:System.Globalization.CultureInfo> Объект, возвращаемый свойством, определяет символы и форматирование в `input`. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> <xref:System.Globalization.DateTimeFormatInfo>  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Объект, определяющий формат данных даты и времени.  
  
 Если `formatprovider` параметр `null`имеет значение <xref:System.Globalization.CultureInfo> , то используется объект, соответствующий текущему языку и региональным параметрам.  
  
 `styles` Параметр определяет, разрешено ли использование пробелов во входной строке, указывает способ синтаксического анализа строк без явных компонентов смещения и поддерживает преобразование в формате UTC в рамках операции анализа. Поддерживаются все члены <xref:System.Globalization.DateTimeStyles> перечисления, кроме. <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> В следующей таблице перечислены результаты каждого поддерживаемого элемента.  
  
|Член`DateTimeStyles`|Поведение|  
|-----------------------------|--------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Выполняет синтаксический анализ и, при необходимости, преобразует его в время в формате UTC. `input` Он эквивалентен анализу строки и последующему вызову <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=nameWithType> метода возвращенного <xref:System.DateTimeOffset> объекта.|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Если сопоставленный элемент в `formats` не требует, чтобы `input` он содержал значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение местного часового пояса. Это значение по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Если сопоставленный элемент в `formats` не требует, чтобы `input` он содержал значение смещения, возвращаемому <xref:System.DateTimeOffset> объекту присваивается смещение в формате UTC (+ 00:00).|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Допускает `input` включение внутреннего пробела, не указанного элементами в `formats`. Дополнительные пробелы могут появляться между компонентами даты и времени и отдельными компонентами (за исключением смещения) и пропускаются при синтаксическом анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Позволяет `input` включать начальные пробелы, не указанные элементами в `formats`. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Позволяет `input` включать конечные пробелы, не указанные элементами в `formats`. При синтаксическом анализе строки они игнорируются.|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Позволяет `input` включать начальные, конечные и внутренние пробелы, не указанные элементами в `formats`. Все дополнительные символы пробела, не указанные в сопоставленном элементе `formats` , игнорируются при анализе строки.|  
|<xref:System.Globalization.DateTimeStyles.None>|Указывает, что в `input`не допускаются дополнительные пробелы. `formats` Для успешного сопоставления пробелы должны располагаться в точности так, как указано в определенном элементе. Это поведение установлено по умолчанию.|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|Не действует, <xref:System.DateTimeOffset> поскольку структура не `Kind` включает свойство.|  
  
   
  
## Examples  
 В следующем примере определяется несколько входных форматов для строкового представления даты и времени и значения смещения, а затем в <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29> метод передается строка, введенная пользователем.  
  
 [!code-csharp[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/cs/TryParseExact.cs#2)]
 [!code-vb[System.DateTimeOffset.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.TryParseExact/vb/TryParseExact.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> включает неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />.  
  
-или- 
 Объект<see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается.  
  
- или - 
 Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
        <block subset="none" type="usage"><para>В метод <see cref="Overload:System.DateTimeOffset.TryParseExact" /> возвращает значение<see langword="false" /> , если анализируемая строка содержит компонент часа и указатель AM/PM, который не является [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]соглашением. [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] В и более ранних версиях указатель AM/PM игнорируется.</para></block>
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTimeOffset.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset UnixEpoch;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnixEpoch : DateTimeOffset" Usage="System.DateTimeOffset.UnixEpoch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcDateTime">
      <MemberSignature Language="C#" Value="public DateTime UtcDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcDateTime" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcDateTime : DateTime" Usage="System.DateTimeOffset.UtcDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.DateTime" />, представляющее дату и время текущего объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</summary>
        <value>Дата и время текущего объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.UtcDateTime%2A> Свойство выполняет двойное преобразование:  
  
-   Он преобразует дату и время текущего <xref:System.DateTimeOffset> объекта в время в формате UTC. Преобразование выполняется путем вычитания значения <xref:System.DateTimeOffset.Offset%2A> свойства из даты и времени текущего <xref:System.DateTimeOffset> объекта.  
  
-   Он преобразует <xref:System.DateTimeOffset> значение <xref:System.DateTime> в значение.  
  
 Свойству возвращаемого <xref:System.DateTimeOffset.DateTime%2A> значения присваивается <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>значение. <xref:System.DateTime.Kind%2A>  
  
 Получение значения <xref:System.DateTimeOffset.UtcDateTime%2A> свойства эквивалентно вызову <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> <xref:System.DateTime.Kind%2A> `ToUniversalTime.DateTime` свойства текущего <xref:System.DateTimeOffset> объекта, за исключением того, что свойство второго <xref:System.DateTime> значения имеет значение.  
  
   
  
## Examples  
 В следующем примере показано использование <xref:System.DateTimeOffset.UtcDateTime%2A> свойства для <xref:System.DateTimeOffset> отображения значения и соответствующего времени в формате UTC.  
  
 [!code-csharp[System.DateTimeOffset.Properties#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#17)]
 [!code-vb[System.DateTimeOffset.Properties#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTimeOffset UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTimeOffset UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTimeOffset UtcNow { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcNow : DateTimeOffset" Usage="System.DateTimeOffset.UtcNow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.DateTimeOffset" />, в качестве даты и времени которого установлены текущие дата и время в формате UTC, а в качестве смещения — значение <see cref="F:System.TimeSpan.Zero" />.</summary>
        <value>Объект, дата и время которого совпадают с текущим временем в формате UTC, а смещение которого равно <see cref="F:System.TimeSpan.Zero" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.UtcNow%2A> Свойство вычисляет текущее универсальное координированное время (UTC) на основе часов локальной системы и смещение, определенное часовым поясом локальной системы.  
  
 Точность компонента миллисекунд текущего времени в формате UTC зависит от разрешения системных часов. В операционных системах Windows NT 3,5 и более поздних версий и Windows Vista разрешение часов составляет примерно 10-15 миллисекунд.  
  
   
  
## Examples  
 В следующем примере показана связь между временем в формате UTC и местным временем.  
  
 [!code-csharp[System.DateTimeOffset.Properties#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#18)]
 [!code-vb[System.DateTimeOffset.Properties#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
      </Docs>
    </Member>
    <Member MemberName="UtcTicks">
      <MemberSignature Language="C#" Value="public long UtcTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UtcTicks" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.UtcTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UtcTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcTicks : int64" Usage="System.DateTimeOffset.UtcTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество тактов, которое представляет дату и время текущего объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</summary>
        <value>Число тактов во времени объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.DateTimeOffset.UtcTicks%2A> свойства представляет число интервалов 100-наносекундных, истекших с 12:00:00 полуночи 1 января 0001 года ( <xref:System.DateTimeOffset.MinValue>значение). Он не включает такты, которые будут добавлены в високосные секунды. Наносекунд — один биллионс секунды; 10 000 000 тактов в секунду. Значение <xref:System.DateTimeOffset.UtcTicks%2A> свойства лежит в диапазоне от `DateTimeOffset.MinValue.Ticks` до `DateTimeOffset.MaxValue.Ticks`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTimeOffset.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Year : int" Usage="System.DateTimeOffset.Year" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает компонент года даты, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
        <value>Компонент года текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целочисленного значения в диапазоне от 0 до 9999.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTimeOffset.Year%2A> Значение<xref:System.DateTimeOffset.Offset%2A> свойства не зависит от свойства.  
  
 Можно также создать строковое представление <xref:System.DateTimeOffset> компонента года объекта, <xref:System.DateTimeOffset.ToString%2A> вызвав метод с описателем настраиваемого формата "y", "yy" или "yyyy".  
  
   
  
## Examples  
 В следующем примере компонент года для <xref:System.DateTimeOffset> значения выводится четырьмя разными способами:  
  
-   Путем извлечения значения <xref:System.DateTimeOffset.Year%2A> свойства.  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "y".  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "гг".  
  
-   Путем вызова <xref:System.DateTimeOffset.ToString%28System.String%29> метода с описателем формата "yyyy".  
  
 [!code-csharp[System.DateTimeOffset.Properties#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/cs/Properties.cs#19)]
 [!code-vb[System.DateTimeOffset.Properties#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTimeOffset.Properties/vb/Properties.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
