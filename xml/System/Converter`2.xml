<Type Name="Converter&lt;TInput,TOutput&gt;" FullName="System.Converter&lt;TInput,TOutput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c486d9a1d2afe59066e7eda99f6d4d931267f7b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70704519" /></Metadata><TypeSignature Language="C#" Value="public delegate TOutput Converter&lt;in TInput,out TOutput&gt;(TInput input);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Converter`2&lt;- TInput, + TOutput&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Converter`2" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Converter(Of In TInput, Out TOutput)(input As TInput) As TOutput " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TOutput&gt;&#xA;public delegate TOutput Converter(TInput input);" />
  <TypeSignature Language="F#" Value="type Converter&lt;'Input, 'Output&gt; = delegate of 'Input -&gt; 'Output" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TOutput">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="input" Type="TInput" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TOutput</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TInput"><span data-ttu-id="0b113-101">Тип преобразуемого объекта.</span><span class="sxs-lookup"><span data-stu-id="0b113-101">The type of object that is to be converted.</span></span></typeparam>
    <typeparam name="TOutput"><span data-ttu-id="0b113-102">Тип, к которому выполняется преобразование объекта.</span><span class="sxs-lookup"><span data-stu-id="0b113-102">The type the input object is to be converted to.</span></span></typeparam>
    <param name="input"><span data-ttu-id="0b113-103">Преобразуемый объект.</span><span class="sxs-lookup"><span data-stu-id="0b113-103">The object to convert.</span></span></param>
    <summary><span data-ttu-id="0b113-104">Представляет метод, преобразующий объект от одного типа к другому.</span><span class="sxs-lookup"><span data-stu-id="0b113-104">Represents a method that converts an object from one type to another type.</span></span></summary>
    <returns><span data-ttu-id="0b113-105"><typeparamref name="TOutput" />, представляющий преобразованный <typeparamref name="TInput" />.</span><span class="sxs-lookup"><span data-stu-id="0b113-105">The <typeparamref name="TOutput" /> that represents the converted <typeparamref name="TInput" />.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b113-106">Этот делегат используется <xref:System.Array.ConvertAll%2A> методом <xref:System.Array> <xref:System.Collections.Generic.List`1.ConvertAll*> класса <xref:System.Collections.Generic.List%601>  и методом класса для преобразования каждого элемента коллекции из одного типа в другой.</span><span class="sxs-lookup"><span data-stu-id="0b113-106">This delegate is used by the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class and the <xref:System.Collections.Generic.List`1.ConvertAll*> method of the <xref:System.Collections.Generic.List%601> class to convert each element of the collection from one type to another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b113-107">Этот раздел содержит два примера кода.</span><span class="sxs-lookup"><span data-stu-id="0b113-107">This section contains two code examples.</span></span> <span data-ttu-id="0b113-108">Первый <xref:System.Converter%602> демонстрирует делегат <xref:System.Array> <xref:System.Array.ConvertAll%2A> с помощью метода класса, <xref:System.Collections.Generic.List`1.ConvertAll*> а второй <xref:System.Collections.Generic.List%601> демонстрирует делегат с помощью метода универсального класса.</span><span class="sxs-lookup"><span data-stu-id="0b113-108">The first demonstrates the <xref:System.Converter%602> delegate with the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class, and the second demonstrates the delegate with the <xref:System.Collections.Generic.List`1.ConvertAll*> method of the <xref:System.Collections.Generic.List%601> generic class.</span></span>  
  
 <span data-ttu-id="0b113-109">Пример 1</span><span class="sxs-lookup"><span data-stu-id="0b113-109">Example 1</span></span>  
  
 <span data-ttu-id="0b113-110">В следующем примере кода определяется метод с именем `PointFToPoint` , который <xref:System.Drawing.PointF> преобразует структуру в <xref:System.Drawing.Point> структуру.</span><span class="sxs-lookup"><span data-stu-id="0b113-110">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="0b113-111">Затем <xref:System.Drawing.PointF> в примере создается массив структур, `Converter<PointF, Point>` создается делегат (`Converter(Of PointF, Point)` в Visual Basic), который представляет `PointFToPoint` метод, и передает делегат <xref:System.Array.ConvertAll%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="0b113-111">The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method.</span></span> <span data-ttu-id="0b113-112">Метод передает каждый элемент входного списка `PointFToPoint` в метод и помещает преобразованные элементы <xref:System.Drawing.Point> в новый список структур. <xref:System.Array.ConvertAll%2A></span><span class="sxs-lookup"><span data-stu-id="0b113-112">The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="0b113-113">Отобразятся оба списка.</span><span class="sxs-lookup"><span data-stu-id="0b113-113">Both lists are displayed.</span></span>  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 <span data-ttu-id="0b113-114">Пример 2</span><span class="sxs-lookup"><span data-stu-id="0b113-114">Example 2</span></span>  
  
 <span data-ttu-id="0b113-115">В следующем примере кода определяется метод с именем `PointFToPoint` , который <xref:System.Drawing.PointF> преобразует структуру в <xref:System.Drawing.Point> структуру.</span><span class="sxs-lookup"><span data-stu-id="0b113-115">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="0b113-116">Затем в <xref:System.Collections.Generic.List%601> примере создается <xref:System.Drawing.PointF> структура, создается `Converter\<PointF, Point>` `Converter(Of PointF, Point)` делегат ( <xref:System.Collections.Generic.List`1.ConvertAll*>  в Visual Basic), который представляет метод, и передает делегат в метод. `PointFToPoint`</span><span class="sxs-lookup"><span data-stu-id="0b113-116">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List`1.ConvertAll*> method.</span></span> <span data-ttu-id="0b113-117">Метод передает каждый элемент входного списка `PointFToPoint` в метод и помещает преобразованные элементы <xref:System.Drawing.Point> в новый список структур. <xref:System.Collections.Generic.List`1.ConvertAll*></span><span class="sxs-lookup"><span data-stu-id="0b113-117">The <xref:System.Collections.Generic.List`1.ConvertAll*> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="0b113-118">Отобразятся оба списка.</span><span class="sxs-lookup"><span data-stu-id="0b113-118">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
