<Type Name="Guid" FullName="System.Guid">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23aa3b7d84301c5a7c0649fc15834b8aa4550902" /><Meta Name="ms.sourcegitcommit" Value="2e48a9d60e44719c021ea403a45f4a08b7f88f08" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/14/2019" /><Meta Name="ms.locfileid" Value="74092893" /></Metadata><TypeSignature Language="C#" Value="public struct Guid : IComparable, IComparable&lt;Guid&gt;, IEquatable&lt;Guid&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Guid extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Guid&gt;, class System.IEquatable`1&lt;valuetype System.Guid&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Guid" />
  <TypeSignature Language="VB.NET" Value="Public Structure Guid&#xA;Implements IComparable, IComparable(Of Guid), IEquatable(Of Guid), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Guid : IComparable, IComparable&lt;Guid&gt;, IEquatable&lt;Guid&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type Guid = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Guid&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Guid&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет глобальный уникальный идентификатор (GUID).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GUID — это 128-разрядное целое число (16 байт), которое можно использовать на всех компьютерах и в сетях везде, где требуется уникальный идентификатор. Такой идентификатор имеет очень низкую вероятность дублирования.  
  
   
  
## Examples  
 В следующем примере класс <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> используется для назначения идентификатора GUID интерфейсу и определяемому пользователем классу. Он получает значение идентификатора GUID, вызывая метод <xref:System.Attribute.GetCustomAttribute%2A> и сравнивает его с двумя другими идентификаторами GUID, чтобы определить, равны ли они.  
  
 [!code-cpp[Guid#1](~/samples/snippets/cpp/VS_Snippets_CLR/Guid/CPP/Guids.cpp#1)]
 [!code-csharp[Guid#1](~/samples/snippets/csharp/VS_Snippets_CLR/Guid/CS/Guids.cs#1)]
 [!code-vb[Guid#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Guid/VB/Guids.vb#1)]  
  
 Обратите внимание, что атрибут <xref:System.Runtime.InteropServices.GuidAttribute> обычно используется в приложении для предоставления типа COM. При компиляции этого примера можно запустить [средство регистрации сборок (Regasm. exe)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md) для созданной сборки, чтобы создать файлы реестра (REG) и библиотеки типов (TLB). REG-файл можно использовать для регистрации компонентного класса в реестре, а файл. tlb может предоставлять метаданные для взаимодействия COM.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Guid (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (b As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="F#" Value="new Guid : byte[] -&gt; Guid" Usage="new System.Guid b" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b">Массив из 16 байтов содержит значения для инициализации GUID.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием указанного массива байтов.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="b" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Размер <paramref name="b" /> не равен 16 байтам.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Guid (ReadOnlySpan&lt;byte&gt; b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.#ctor(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (b As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid(ReadOnlySpan&lt;System::Byte&gt; b);" />
      <MemberSignature Language="F#" Value="new Guid : ReadOnlySpan&lt;byte&gt; -&gt; Guid" Usage="new System.Guid b" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="b" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="b">Доступный только для чтения диапазон, содержащий байты, представляющие GUID. Диапазон должен иметь длину ровно 16 байт.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием значения, представленного заданным диапазоном байтов только для чтения.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Диапазон должен иметь длину ровно 16 байт.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Guid (string g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (g As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid(System::String ^ g);" />
      <MemberSignature Language="F#" Value="new Guid : string -&gt; Guid" Usage="new System.Guid g" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="g" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="g">Строка, содержащая GUID в одном из указанных ниже форматов (здесь "d" обозначает шестнадцатеричную цифру, регистр которой игнорируется).  
  
 Непрерывная последовательность из 32 цифр:  
  
 dddddddddddddddddddddddddddddddd  
  
 - или -  
  
 Группы из 8, 4, 4, 4 и 12 цифр с дефисами между группами. GUID целиком может быть заключен в фигурные или круглые скобки:  
  
 dddddddd-dddd-dddd-dddd-dddddddddddd  
  
 - или -  
  
 {dddddddd-dddd-dddd-dddd-dddddddddddd}  
  
 - или -  
  
 (dddddddd-dddd-dddd-dddd-dddddddddddd)  
  
 - или -  
  
 Группы из 8, 4 и 4 цифр и подмножество восьми групп по 2 цифры; все группы снабжены префиксом "0x" или "0X" и разделены запятыми. Весь GUID, так же как и подмножество, заключается в фигурные скобки:  
  
 {0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}}  
  
 Все фигурные скобки, запятые и префиксы "0x" необходимы. Все внутренние пробелы игнорируются. Все нули в начале группы игнорируются.  
  
 Цифры, указанные в группе, определяют наибольшее количество значащих цифр в данной группе. Можно задавать цифры от 1 до количества, указанного для группы. Предполагается, что задаваемые цифры являются младшими цифрами группы.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием значения, представленного заданной строкой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Шестнадцатеричные цифры в параметре `g` могут быть прописными или строчными буквами. Например, следующие строки представляют один и тот же GUID:  
  
 "ca761232ed4211cebacd00aa0057b223"  
  
 "CA761232-ED42-11CE-BACD-00AA0057B223"  
  
 "{CA761232-ED42-11CE-BACD-00AA0057B223}"  
  
 "(CA761232-ED42-11CE-BACD-00AA0057B223)"  
  
 "{0xCA761232, 0xED42, 0x11CE, {0xBA, 0xCD, 0x00, 0xAA, 0x00, 0x57, 0xB2, 0x23}}"  
  
   
  
## Examples  
 В следующем примере каждая строка, указанная в разделе "Примечания", передается конструктору <xref:System.Guid.%23ctor%28System.String%29>.  
  
 [!code-csharp[System.Guid.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.ctor/cs/ctor1.cs#1)]
 [!code-vb[System.Guid.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.ctor/vb/ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="g" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Недопустимый формат <paramref name="g" />.</exception>
        <exception cref="T:System.OverflowException">Недопустимый формат <paramref name="g" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Guid (int a, short b, short c, byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 a, int16 b, int16 c, unsigned int8[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (a As Integer, b As Short, c As Short, d As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid(int a, short b, short c, cli::array &lt;System::Byte&gt; ^ d);" />
      <MemberSignature Language="F#" Value="new Guid : int * int16 * int16 * byte[] -&gt; Guid" Usage="new System.Guid (a, b, c, d)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int16" />
        <Parameter Name="c" Type="System.Int16" />
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="a">Первые 4 байта GUID.</param>
        <param name="b">Следующие 2 байта GUID.</param>
        <param name="c">Следующие 2 байта GUID.</param>
        <param name="d">Оставшиеся 8 байтов GUID.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием заданных целых чисел и массива байтов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 `Guid(1,2,3,new byte[]{0,1,2,3,4,5,6,7})` создает <xref:System.Guid>, соответствующий "00000001-0002-0003-0001-020304050607".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="d" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Размер <paramref name="d" /> не равен 8 байтам.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Guid (int a, short b, short c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 a, int16 b, int16 c, unsigned int8 d, unsigned int8 e, unsigned int8 f, unsigned int8 g, unsigned int8 h, unsigned int8 i, unsigned int8 j, unsigned int8 k) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (a As Integer, b As Short, c As Short, d As Byte, e As Byte, f As Byte, g As Byte, h As Byte, i As Byte, j As Byte, k As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid(int a, short b, short c, System::Byte d, System::Byte e, System::Byte f, System::Byte g, System::Byte h, System::Byte i, System::Byte j, System::Byte k);" />
      <MemberSignature Language="F#" Value="new Guid : int * int16 * int16 * byte * byte * byte * byte * byte * byte * byte * byte -&gt; Guid" Usage="new System.Guid (a, b, c, d, e, f, g, h, i, j, k)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int16" />
        <Parameter Name="c" Type="System.Int16" />
        <Parameter Name="d" Type="System.Byte" />
        <Parameter Name="e" Type="System.Byte" />
        <Parameter Name="f" Type="System.Byte" />
        <Parameter Name="g" Type="System.Byte" />
        <Parameter Name="h" Type="System.Byte" />
        <Parameter Name="i" Type="System.Byte" />
        <Parameter Name="j" Type="System.Byte" />
        <Parameter Name="k" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">Первые 4 байта GUID.</param>
        <param name="b">Следующие 2 байта GUID.</param>
        <param name="c">Следующие 2 байта GUID.</param>
        <param name="d">Следующий байт GUID.</param>
        <param name="e">Следующий байт GUID.</param>
        <param name="f">Следующий байт GUID.</param>
        <param name="g">Следующий байт GUID.</param>
        <param name="h">Следующий байт GUID.</param>
        <param name="i">Следующий байт GUID.</param>
        <param name="j">Следующий байт GUID.</param>
        <param name="k">Следующий байт GUID.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием заданных целых чисел и байтов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Указание отдельных байтов таким образом можно использовать для обхода ограничений порядка байтов (порядка байтов с обратным порядком байтов или с прямым порядком байт) на компьютерах определенных типов.  
  
   
  
## Examples  
 В следующем примере создается идентификатор GUID, строковое представление которого — "0000000A-000B-000c-0001-020304050607".  
  
 [!code-csharp[System.Guid.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.ctor/cs/ctor2.cs#2)]
 [!code-vb[System.Guid.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.ctor/vb/ctor2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Guid (uint a, ushort b, ushort c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 a, unsigned int16 b, unsigned int16 c, unsigned int8 d, unsigned int8 e, unsigned int8 f, unsigned int8 g, unsigned int8 h, unsigned int8 i, unsigned int8 j, unsigned int8 k) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (a As UInteger, b As UShort, c As UShort, d As Byte, e As Byte, f As Byte, g As Byte, h As Byte, i As Byte, j As Byte, k As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid(System::UInt32 a, System::UInt16 b, System::UInt16 c, System::Byte d, System::Byte e, System::Byte f, System::Byte g, System::Byte h, System::Byte i, System::Byte j, System::Byte k);" />
      <MemberSignature Language="F#" Value="new Guid : uint32 * uint16 * uint16 * byte * byte * byte * byte * byte * byte * byte * byte -&gt; Guid" Usage="new System.Guid (a, b, c, d, e, f, g, h, i, j, k)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="a" Type="System.UInt32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="b" Type="System.UInt16" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="c" Type="System.UInt16" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="d" Type="System.Byte" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="e" Type="System.Byte" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="f" Type="System.Byte" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="g" Type="System.Byte" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="h" Type="System.Byte" Index="7" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="i" Type="System.Byte" Index="8" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="j" Type="System.Byte" Index="9" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="k" Type="System.Byte" Index="10" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="a">Первые 4 байта GUID.</param>
        <param name="b">Следующие 2 байта GUID.</param>
        <param name="c">Следующие 2 байта GUID.</param>
        <param name="d">Следующий байт GUID.</param>
        <param name="e">Следующий байт GUID.</param>
        <param name="f">Следующий байт GUID.</param>
        <param name="g">Следующий байт GUID.</param>
        <param name="h">Следующий байт GUID.</param>
        <param name="i">Следующий байт GUID.</param>
        <param name="j">Следующий байт GUID.</param>
        <param name="k">Следующий байт GUID.</param>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием указанных целых чисел без знака и байтов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Указание байтов таким образом позволяет избежать порядок следования байтов проблем.  
  
   
  
## Examples  
 GUID (0xA, 0xB, 0xC, 0, 1, 2, 3, 4, 5, 6, 7) создает <xref:System.Guid>, соответствующий "0000000A-000B-000c-0001-020304050607".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сравнивает этот экземпляр с заданным объектом или объектом типа <see cref="T:System.Guid" /> и возвращает значение, указывающее, как соотносятся значения этих объектов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.CompareTo(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Guid) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Guid value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Guid -&gt; int&#xA;override this.CompareTo : Guid -&gt; int" Usage="guid.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Объект, сравниваемый с этим экземпляром.</param>
        <summary>Сравнивает этот экземпляр с заданным объектом <see cref="T:System.Guid" /> и возвращает значение, указывающее, как соотносятся значения этих объектов.</summary>
        <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />.  
  
 <list type="table"><listheader><term> Возвращаемое значение 
 </term><description> Описание 
 </description></listheader><item><term> Отрицательное целое число 
 </term><description> Этот экземпляр меньше параметра <paramref name="value" />.  
  
 </description></item><item><term> Нуль 
 </term><description> Этот экземпляр и параметр <paramref name="value" /> равны.  
  
 </description></item><item><term> Положительное целое число 
 </term><description> Этот экземпляр больше параметра <paramref name="value" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Guid.CompareTo%2A> сравнивает идентификаторы GUID, как если бы они были значениями, предоставленными конструктору <xref:System.Guid.%23ctor%28System.Int32%2CSystem.Int16%2CSystem.Int16%2CSystem.Byte%5B%5D%29>, следующим образом:  
  
-   Он сравнивает значения <xref:System.UInt32> и возвращает результат, если они не равны. Если они равны, выполняется следующее сравнение.  
  
-   Он сравнивает первые значения <xref:System.UInt16> и возвращает результат, если они не равны. Если они равны, выполняется следующее сравнение.  
  
-   Он сравнивает значения второго <xref:System.UInt16> и возвращает результат, если они не равны. Если они равны, выполняется следующее сравнение.  
  
-   Если выполняет побайтовое сравнение следующих восьми <xref:System.Byte> значений. При обнаружении первой неравной пары она возвращает результат. В противном случае он возвращает 0, чтобы указать, что значения двух <xref:System.Guid> равны.  
  
 Обратите внимание, что последние восемь байт отображаются в строковом представлении <xref:System.Guid> в обратном порядке, от младших до старших байт. Например, в строковом представлении значения <xref:System.Guid> "01e75c83-c6f5-4192-b57e-7427cec5560d" последние восемь байт — "b57e-7427cec5560d". Иными словами, последние восемь байтов сравниваются по побайтовой основе слева направо, начиная с 0xb5.  
  
 Если два идентификатора GUID имеют равные значения для компонента, метод сравнивает следующий компонент. При обнаружении компонента, значения которого не равны, возвращается результат.  
  
 Этот метод реализует интерфейс <xref:System.IComparable%601?displayProperty=nameWithType> и работает немного лучше, чем метод <xref:System.Guid.CompareTo%2A?displayProperty=nameWithType>, поскольку ему не нужно преобразовывать параметр `value` в значение <xref:System.Guid>.  
  
   
  
## Examples  
 В следующем примере вызывается метод <xref:System.Guid.CompareTo%28System.Guid%29> для сравнения значения GUID с двумя похожими значениями GUID.  
  
 [!code-csharp[System.Guid.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.compareto/cs/compareto2.cs#1)]
 [!code-vb[System.Guid.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.compareto/vb/compareto2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="guid.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">Объект для сравнения или значение <see langword="null" />.</param>
        <summary>Сравнивает этот экземпляр с заданным объектом и возвращает значение, указывающее, как соотносятся значения этих объектов.</summary>
        <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />.  
  
 <list type="table"><listheader><term> Возвращаемое значение 
 </term><description> Описание 
 </description></listheader><item><term> Отрицательное целое число 
 </term><description> Этот экземпляр меньше параметра <paramref name="value" />.  
  
 </description></item><item><term> Нуль 
 </term><description> Этот экземпляр и параметр <paramref name="value" /> равны.  
  
 </description></item><item><term> Положительное целое число 
 </term><description> Этот экземпляр больше параметра <paramref name="value" /> или параметр <paramref name="value" /> равен значению <see langword="null" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр `value` должен быть `null` или экземпляром <xref:System.Guid>; в противном случае создается исключение. Любой экземпляр <xref:System.Guid>, независимо от его значения, считается больше `null`.  
  
 Метод <xref:System.Guid.CompareTo%2A> сравнивает идентификаторы GUID, как если бы они были значениями, предоставленными конструктору <xref:System.Guid.%23ctor%2A>, следующим образом:  
  
-   Он сравнивает значения <xref:System.Int32> и возвращает результат, если они не равны. Если они равны, выполняется следующее сравнение.  
  
-   Он сравнивает первые значения <xref:System.Int16> и возвращает результат, если они не равны. Если они равны, выполняется следующее сравнение.  
  
-   Он сравнивает значения второго <xref:System.Int16> и возвращает результат, если они не равны. Если они равны, выполняется следующее сравнение.  
  
-   Если выполняет побайтовое сравнение следующих восьми <xref:System.Byte> значений. При обнаружении первой неравной пары она возвращает результат. В противном случае он возвращает 0, чтобы указать, что значения двух <xref:System.Guid> равны.  
  
 Если два идентификатора GUID имеют равные значения для компонента, метод сравнивает следующий компонент. При обнаружении компонента, значения которого не равны, возвращается результат.  
  
 Обратите внимание, что последние восемь байт отображаются в строковом представлении <xref:System.Guid> в обратном порядке, от младших до старших байт. Например, в строковом представлении значения <xref:System.Guid> "01e75c83-c6f5-4192-b57e-7427cec5560d" последние восемь байт — "b57e-7427cec5560d".  
  
   
  
## Examples  
 В следующем примере атрибут <xref:System.Runtime.InteropServices.GuidAttribute> используется для назначения GUID классу. Он получает значение этого идентификатора GUID путем вызова метода <xref:System.Attribute.GetCustomAttribute%2A?displayProperty=nameWithType> и передачи свойства <xref:System.Runtime.InteropServices.GuidAttribute.Value%2A> возвращенного <xref:System.Runtime.InteropServices.GuidAttribute> объекта в метод <xref:System.Guid.Parse%2A>. Затем он сравнивает этот GUID с массивом значений.  
  
 [!code-csharp[System.Guid.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.compareto/cs/compareto1.cs#2)]
 [!code-vb[System.Guid.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.compareto/vb/compareto1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> не является объектом <see cref="T:System.Guid" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly Guid Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid Empty" />
      <MemberSignature Language="DocId" Value="F:System.Guid.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As Guid " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Guid Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : Guid" Usage="System.Guid.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Доступный только для чтения экземпляр структуры <see cref="T:System.Guid" />, значение которой состоит только из нулей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GUID можно сравнить со значением поля <xref:System.Guid.Empty?displayProperty=nameWithType>, чтобы определить, не является ли идентификатор GUID ненулевым. В следующем примере оператор <xref:System.Guid.op_Equality%2A> используется для сравнения двух значений GUID с <xref:System.Guid.Empty?displayProperty=nameWithType>, чтобы определить, состоят ли они исключительно из нулей.  
  
 [!code-csharp[System.Guid.Empty#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.empty/cs/empty.cs#1)]
 [!code-vb[System.Guid.Empty#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.empty/vb/empty.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение, указывающее, представляют ли два экземпляра <see cref="T:System.Guid" /> одно и то же значение.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Guid g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Guid g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.Equals(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (g As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Guid g);" />
      <MemberSignature Language="F#" Value="override this.Equals : Guid -&gt; bool" Usage="guid.Equals g" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Guid" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="g">Объект, сравниваемый с этим экземпляром.</param>
        <summary>Возвращает значение, позволяющее определить, представляют ли этот экземпляр и заданный объект <see cref="T:System.Guid" /> одно и то же значение.</summary>
        <returns>Значение <see langword="true" />, если значение параметра <paramref name="g" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Два объекта <xref:System.Guid> равны, если они имеют одинаковые байтовые значения.  
  
 Этот метод работает немного лучше, чем метод <xref:System.Guid.Equals%2A>, так как он не обязательно должен содержать параметр `g`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Guid.Equals(System.Object)" />
        <altmember cref="Overload:System.Guid.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="guid.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Объект, сравниваемый с данным экземпляром.</param>
        <summary>Возвращает значение, показывающее, равен ли экземпляр указанному объекту.</summary>
        <returns><see langword="true" />, если параметр <paramref name="o" /> имеет тип <see cref="T:System.Guid" /> и содержит то же значение, что и данный экземпляр; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Два объекта <xref:System.Guid> равны, если они имеют одинаковые байтовые значения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="guid.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код данного экземпляра.</summary>
        <returns>Хэш-код данного экземпляра.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static Guid NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewGuid () As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid NewGuid();" />
      <MemberSignature Language="F#" Value="static member NewGuid : unit -&gt; Guid" Usage="System.Guid.NewGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" />.</summary>
        <returns>Новый объект GUID.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это удобный `static` метод, который можно вызвать для получения нового <xref:System.Guid>. Метод создает оболочку для вызова функции [CoCreateGuid](https://msdn.microsoft.com/library/windows/desktop/ms688568.aspx) Windows. Возвращаемое <xref:System.Guid> гарантированно не равно <xref:System.Guid.Empty?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода создаются и отображаются значения двух <xref:System.Guid> объектов.  
  
 [!code-csharp[system.guid.newguid#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.newguid/cs/ng.cs#1)]
 [!code-vb[system.guid.newguid#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.newguid/vb/ng.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Guid a, Guid b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Guid a, valuetype System.Guid b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.op_Equality(System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As Guid, b As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Guid a, Guid b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Guid * Guid -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Guid" />
        <Parameter Name="b" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="a">Первый из сравниваемых объектов.</param>
        <param name="b">Второй из сравниваемых объектов.</param>
        <summary>Указывает, равны ли значения двух указанных объектов <see cref="T:System.Guid" />.</summary>
        <returns>Значение <see langword="true" />, если <paramref name="a" /> и <paramref name="b" /> равны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Эквивалентным методом для этого оператора является <xref:System.Guid.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 В следующем примере оператор <xref:System.Guid.op_Equality%2A> используется для сравнения двух значений GUID с <xref:System.Guid.Empty?displayProperty=nameWithType>, чтобы определить, состоят ли они исключительно из нулей.  
  
 [!code-csharp[System.Guid.Empty#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.empty/cs/empty.cs#1)]
 [!code-vb[System.Guid.Empty#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.empty/vb/empty.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Guid a, Guid b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Guid a, valuetype System.Guid b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.op_Inequality(System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As Guid, b As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Guid a, Guid b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Guid * Guid -&gt; bool" Usage="System.Guid.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Guid" />
        <Parameter Name="b" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="a">Первый из сравниваемых объектов.</param>
        <param name="b">Второй из сравниваемых объектов.</param>
        <summary>Указывает, верно ли, что значения двух указанных объектов <see cref="T:System.Guid" /> не равны.</summary>
        <returns>Значение <see langword="true" />, если <paramref name="a" /> и <paramref name="b" /> не равны друг другу; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Эквивалентным методом для этого оператора является <xref:System.Guid.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Guid Parse (ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char)) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid Parse(ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; Guid" Usage="System.Guid.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Доступный только для чтения диапазон, содержащий байты, представляющие GUID.</param>
        <summary>Преобразует диапазон символов только для чтения, представляющий GUID, в эквивалентную структуру <see cref="T:System.Guid" />.</summary>
        <returns>Структура, содержащая анализируемое значение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Метод <xref:System.Guid.Parse%2A> удаляет все начальные или конечные символы пробела из `input` и преобразует оставшиеся символы в `input` в значение <xref:System.Guid>. Этот метод может преобразовать диапазон символов, представляющий любой из пяти форматов, созданных <xref:System.Guid.ToString%2A>ными методами, как показано в следующей таблице.

|Описатель|Описание|Формат|
|---------------|-----------------|------------|
|`N`|32 цифр|00000000000000000000000000000000|
|`D`|32 цифр, разделенных дефисами|00000000-0000-0000-0000-000000000000|
|`B`|32. цифры, разделенные дефисами, заключенные в фигурные скобки|{00000000-0000-0000-0000-000000000000}|
|`P`|32. цифры, разделенные дефисами, заключенные в круглые скобки|(00000000-0000-0000-0000-000000000000)|
|`X`|Четыре шестнадцатеричных значения, заключенные в фигурные скобки, где четвертое значение является подмножеством восьми шестнадцатеричных значений, которое также заключено в фигурные скобки|{0x00000000, символ 0x0000, символ 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}|

Метод создает исключение <xref:System.FormatException>, если не удается успешно проанализировать строку. Вот некоторые из причин, по которым это может произойти:

-   `input` содержит символы, которые не являются частью шестнадцатеричной кодировки.

-   `input` содержит слишком много или слишком мало цифр.

-   `input` содержит слишком много или слишком мало нецифровых символов, соответствующих определенному формату.

-   `input` не находится в одном из форматов, распознаваемых методом <xref:System.Guid.ToString%2A> и приведенных в предыдущей таблице.

Используйте метод <xref:System.Guid.TryParse%2A> для перехвата любых неудачных операций синтаксического анализа без необходимости обработки исключения.

        ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><paramref name="input" /> указан в нераспознаваемом формате.

- или -

После усечения длина диапазона символов только для чтения равна 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Guid Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Guid" Usage="System.Guid.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input">Преобразуемая строка.</param>
        <summary>Преобразовывает строковое представление объекта GUID в эквивалентную структуру <see cref="T:System.Guid" />.</summary>
        <returns>Структура, содержащая анализируемое значение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Guid.Parse%2A> удаляет все начальные или конечные пробелы из `input` и преобразует строковое представление GUID в значение <xref:System.Guid>. Этот метод может преобразовать строки в любом из пяти форматов, созданных методами <xref:System.Guid.ToString%28System.String%29> и <xref:System.Guid.ToString%28System.String%2CSystem.IFormatProvider%29>, как показано в следующей таблице.  
  
|Описатель|Описание|Формат|  
|---------------|-----------------|------------|  
|`N`|32 цифр|00000000000000000000000000000000|  
|`D`|32 цифр, разделенных дефисами|00000000-0000-0000-0000-000000000000|  
|`B`|32. цифры, разделенные дефисами, заключенные в фигурные скобки|{00000000-0000-0000-0000-000000000000}|  
|`P`|32. цифры, разделенные дефисами, заключенные в круглые скобки|(00000000-0000-0000-0000-000000000000)|  
|`X`|Четыре шестнадцатеричных значения, заключенные в фигурные скобки, где четвертое значение является подмножеством восьми шестнадцатеричных значений, которое также заключено в фигурные скобки|{0x00000000, символ 0x0000, символ 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}|  
  
 Метод создает исключение <xref:System.FormatException>, если не удается успешно проанализировать строку. Вот некоторые из причин, по которым это может произойти:  
  
-   `input` содержит символы, которые не являются частью шестнадцатеричной кодировки.  
  
-   `input` содержит слишком много или слишком мало цифр.  
  
-   `input` содержит слишком много или слишком мало нецифровых символов, соответствующих определенному формату.  
  
-   `input` не находится в одном из форматов, распознаваемых методом <xref:System.Guid.ToString%2A> и приведенных в предыдущей таблице.  
  
 Используйте метод <xref:System.Guid.TryParse%2A> для перехвата любых неудачных операций синтаксического анализа без необходимости обработки исключения.  
  
   
  
## Examples  
 В следующем примере создается новый идентификатор GUID, который преобразуется в три отдельных строковых представления путем вызова метода <xref:System.Guid.ToString%28System.String%29> с описателями формата "B", "D" и "X", а затем вызывается метод <xref:System.Guid.Parse%2A> для преобразования строк обратно в значения <xref:System.Guid>.  
  
 [!code-csharp[System.Guid.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.parse/cs/parseex1.cs#3)]
 [!code-vb[System.Guid.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.parse/vb/parseex1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> — <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="input" /> указан в нераспознаваемом формате.</exception>
        <altmember cref="M:System.Guid.TryParse(System.String,System.Guid@)" />
        <altmember cref="M:System.Guid.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static Guid ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char)) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid ParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format);" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; Guid" Usage="System.Guid.ParseExact (input, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Доступный только для чтения диапазон, содержащий символы, представляющие GUID для преобразования.</param>
        <param name="format">Доступный только для чтения диапазон символов, представляющих один из следующих описателей, указывающих точный формат, который используется при интерпретации <paramref name="input" />: "N", "D", "B", "P" или "X".</param>
        <summary>Преобразует диапазон символов, представляющих GUID, в эквивалентную структуру <see cref="T:System.Guid" />, при условии, что строка имеет указанный формат.</summary>
        <returns>Структура, содержащая анализируемое значение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Для метода <xref:System.Guid.ParseExact%2A> требуется, чтобы диапазон символов только для чтения был в точности в формате, указанном параметром `format`, после удаления начальных и конечных символов пробела. В следующей таблице показаны допустимые описатели формата для параметра `format`. "0" представляет цифру; дефисы ("-"), фигурные скобки ("{", "}") и круглые скобки ("(", ")") отображаются, как показано.

|Описатель|Формат параметра `input`|
|---------------|-------------------------------------|
|Нет|32 цифр:<br /><br /> 00000000000000000000000000000000|
|D|32 цифр, разделенных дефисами:<br /><br /> 00000000-0000-0000-0000-000000000000|
|С|32. цифры, разделенные дефисами, заключенные в фигурные скобки:<br /><br /> {00000000-0000-0000-0000-000000000000}|
|С|32. цифры, разделенные дефисами, заключенные в круглые скобки:<br /><br /> (00000000-0000-0000-0000-000000000000)|
|X|Четыре шестнадцатеричных значения, заключенные в фигурные скобки, где четвертый — подмножество из восьми шестнадцатеричных значений, которое также заключено в фигурные скобки:<br /><br /> {0x00000000, символ 0x0000, символ 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}|

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static Guid ParseExact (string input, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid ParseExact(string input, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.ParseExact(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid ParseExact(System::String ^ input, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string -&gt; Guid" Usage="System.Guid.ParseExact (input, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input">Время в формате GUID, которое требуется преобразовать.</param>
        <param name="format">Один из следующих описателей, указывающих точный формат, используемый при интерпретации параметра <paramref name="input" />: "N", "D", "B", "P" или "X".</param>
        <summary>Преобразует строковое представление GUID в эквивалентную структуру <see cref="T:System.Guid" />, при условии, что строка имеет указанный формат.</summary>
        <returns>Структура, содержащая анализируемое значение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Guid.ParseExact%2A> требует, чтобы строка для преобразования была в точности в формате, указанном параметром `format`, после удаления начальных и конечных символов пробела. В следующей таблице показаны допустимые описатели формата для параметра `format`. "0" представляет цифру; дефисы ("-"), фигурные скобки ("{", "}") и круглые скобки ("(", ")") отображаются, как показано.  
  
|Описатель|Формат параметра `input`|  
|---------------|-------------------------------------|  
|Нет|32 цифр:<br /><br /> 00000000000000000000000000000000|  
|D|32 цифр, разделенных дефисами:<br /><br /> 00000000-0000-0000-0000-000000000000|  
|С|32. цифры, разделенные дефисами, заключенные в фигурные скобки:<br /><br /> {00000000-0000-0000-0000-000000000000}|  
|С|32. цифры, разделенные дефисами, заключенные в круглые скобки:<br /><br /> (00000000-0000-0000-0000-000000000000)|  
|X|Четыре шестнадцатеричных значения, заключенные в фигурные скобки, где четвертый — подмножество из восьми шестнадцатеричных значений, которое также заключено в фигурные скобки:<br /><br /> {0x00000000, символ 0x0000, символ 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}|  
  
   
  
## Examples  
 В следующем примере вызывается метод <xref:System.Guid.ToString%28System.String%29> с каждым из поддерживаемых описателей формата для создания массива строк, представляющих один GUID. Затем они передаются методу <xref:System.Guid.ParseExact%2A>, который успешно анализирует только строку, которая соответствует описательу формата "B".  
  
 [!code-csharp[System.Guid.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.parse/cs/parseexactex1.cs#4)]
 [!code-vb[System.Guid.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.parse/vb/parseexactex1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="format" /> — <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Формат <paramref name="input" /> отличается от указанного в <paramref name="format" />.</exception>
        <altmember cref="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">Объект, сравниваемый с этим экземпляром.</param>
        <summary>Сравнивает этот экземпляр с заданным объектом <see cref="T:System.Guid" /> и возвращает значение, указывающее, как соотносятся значения этих объектов.</summary>
        <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />.
          <list type="table"><listheader><term>Возвращаемое значение</term><description>Описание</description></listheader><item><term>Отрицательное целое число</term><description>Этот экземпляр меньше параметра <paramref name="value" />.</description></item><item><term>Нуль</term><description>Этот экземпляр и параметр <paramref name="value" /> равны.</description></item><item><term>Положительное целое число</term><description>Этот экземпляр больше параметра <paramref name="value" />.</description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Этот член представляет собой явную реализацию члена интерфейса. Его можно использовать только при приведении экземпляра <xref:System.Guid" /> к интерфейсу <xref:System.IComparable>. 

Метод `CompareTo` сравнивает идентификаторы GUID, как если бы они были значениями, предоставленными конструктору <xref:System.Guid.%23ctor%28System.Int32%2CSystem.Int16%2CSystem.Int16%2CSystem.Byte%5B%5D%29>, следующим образом:

-   Он сравнивает значения <xref:System.UInt32> и возвращает результат, если они не равны. Если они равны, выполняется следующее сравнение.
-   Он сравнивает первые значения <xref:System.UInt16> и возвращает результат, если они не равны. Если они равны, выполняется следующее сравнение.
-   Он сравнивает значения второго <xref:System.UInt16> и возвращает результат, если они не равны. Если они равны, выполняется следующее сравнение.
-   Если выполняет побайтовое сравнение следующих восьми <xref:System.Byte> значений. При обнаружении первой неравной пары она возвращает результат. В противном случае он возвращает 0, чтобы указать, что значения двух <xref:System.Guid> равны.

Обратите внимание, что последние восемь байт отображаются в строковом представлении <xref:System.Guid> в обратном порядке, от младших до старших байт. Например, в строковом представлении значения <xref:System.Guid> "01e75c83-c6f5-4192-b57e-7427cec5560d" последние восемь байт — "b57e-7427cec5560d". Иными словами, последние восемь байтов сравниваются по побайтовой основе слева направо, начиная с 0xb5.

Если два идентификатора GUID имеют равные значения для компонента, метод сравнивает следующий компонент. При обнаружении компонента, значения которого не равны, возвращается результат.

Этот метод реализует интерфейс <xref:System.IComparable%601?displayProperty=nameWithType> и работает немного лучше, чем метод <xref:System.Guid.CompareTo%2A?displayProperty=nameWithType>, поскольку ему не нужно преобразовывать параметр `value` в значение <xref:System.Guid>.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="format">Единственный спецификатор формата, указывающий, как следует отформатировать значение объекта <see cref="T:System.Guid" />. Параметр <paramref name="format" /> может принимать значения N, D, B, P или X. Если параметр <paramref name="format" /> имеет значение NULL или равен пустой строке (""), используется значение "D".</param>
        <param name="provider">(Зарезервирован.) Объект, предоставляющий сведения о форматировании, связанные с определенным языком и региональными параметрами.</param>
        <summary>Возвращает строковое представление значения этого экземпляра в соответствии с заданным описателем формата и сведениями об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
        <returns>Значение данного объекта <see cref="T:System.Guid" />, представленное в виде последовательности шестнадцатеричных цифр в нижнем регистре в указанном формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Параметр `provider` зарезервирован для будущего использования и не участвует в выполнении этого метода. `null` можно передать в вызове метода.

В следующей таблице показаны допустимые описатели формата для параметра `format`. "0" представляет цифру; дефисы ("-"), фигурные скобки ("{", "}") и круглые скобки ("(", ")") отображаются, как показано.

|Описатель|Формат возвращаемого значения|
|---------------|----------------------------|
|`N`|32 цифр:<br /><br /> 00000000000000000000000000000000|
|`D`|32 цифр, разделенных дефисами:<br /><br /> 00000000-0000-0000-0000-000000000000|
|`B`|32. цифры, разделенные дефисами, заключенные в фигурные скобки:<br /><br /> {00000000-0000-0000-0000-000000000000}|
|`P`|32. цифры, разделенные дефисами, заключенные в круглые скобки:<br /><br /> (00000000-0000-0000-0000-000000000000)|
|`X`|Четыре шестнадцатеричных значения, заключенные в фигурные скобки, где четвертый — подмножество из восьми шестнадцатеричных значений, которое также заключено в фигурные скобки:<br /><br /> {0x00000000, символ 0x0000, символ 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}|

Шестнадцатеричные цифры от a до f являются строчными в возвращаемой строке. Чтобы преобразовать их в верхний регистр, вызовите метод <xref:System.String.ToUpper%2A?displayProperty=nameWithType> для возвращаемой строки.

Поскольку параметр `provider` игнорируется, его нельзя использовать для предоставления пользовательского решения форматирования. Чтобы представить <xref:System.Guid> значение в виде строки в формате, который не поддерживается строками стандартного формата GUID, вызовите метод <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> с объектом `provider`, который реализует интерфейсы <xref:System.ICustomFormatter> и <xref:System.IFormatProvider>. Дополнительные сведения см. в подразделе ["настраиваемое форматирование с помощью ICustomFormatter"](~/docs/standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) статьи [Типы форматирования](~/docs/standard/base-types/formatting-types.md) .

          ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Значение параметра <paramref name="format" /> не равно NULL, не является пустой строкой ("") или одним из следующих единичных описателей формата: "N", "D", "B", "P" или "X".</exception>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.ToByteArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToByteArray();" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : unit -&gt; byte[]" Usage="guid.ToByteArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает массив байтов из 16 элементов, содержащий значение данного экземпляра.</summary>
        <returns>Массив байтов из 16 элементов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать массив байтов, возвращаемый этим методом, для обработки <xref:System.Guid> значения путем вызова конструктора <xref:System.Guid.%23ctor%28System.Byte%5B%5D%29>.  
  
 Обратите внимание, что порядок байтов в возвращенном массиве байтов отличается от строкового представления значения <xref:System.Guid>. Порядок начальной группы из четырех байтов и следующих 2 2-байтовых групп изменяется на обратный, в то время как порядок последней 2-байтовой группы и закрываемая 6-байтовая группа одинаковы. Иллюстрация приведена в примере.  
  
   
  
## Examples  
 В следующем примере вызывается метод <xref:System.Guid.NewGuid%2A> для создания <xref:System.Guid>ого значения, а затем вызывается метод <xref:System.Guid.ToByteArray%2A>, который представляет значение <xref:System.Guid> в виде массива байтов. Затем оба значения отображаются в консоли. Наконец, создается экземпляр нового <xref:System.Guid> значения из массива байтов и вызывается его метод <xref:System.Guid.Equals%28System.Guid%29>, чтобы увидеть, что два <xref:System.Guid> значения идентичны.  
  
 [!code-csharp[System.Guid.ToByteArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.tobytearray/cs/tobytearray3.cs#1)]
 [!code-vb[System.Guid.ToByteArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.tobytearray/vb/tobytearray3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает строковое представление значения данного экземпляра структуры <see cref="T:System.Guid" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="guid.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строковое представление значения этого экземпляра в формате реестра.</summary>
        <returns>Значение этого <see cref="T:System.Guid" />, отформатированное с помощью описателя формата "D" следующим образом: 
 <c>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</c>  
  
где значение GUID представлено в виде последовательности шестнадцатеричных цифр в нижнем регистре, сгруппированных по 8, 4, 4, 4 и 12 цифр и разделенных дефисами. В данном случае возвращаемое значение таково: "382c74c3-721d-4f34-80e5-57657b6cbc27". Для преобразования шестнадцатеричных цифр из строчных f в прописные буквы вызовите метод <see cref="M:System.String.ToUpper" /> в возвращаемую строку.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет формат GUID по умолчанию, который достаточно для обычного использования. Однако другие версии этого метода, принимающие параметр `format`, предоставляют несколько общих вариантов форматирования.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="guid.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Единственный описатель формата, указывающий, как следует форматировать значение данного <see cref="T:System.Guid" />. Параметр <paramref name="format" /> может принимать значения N, D, B, P или X. Если параметр <paramref name="format" /> имеет значение <see langword="null" /> или равен пустой строке (""), используется значение D.</param>
        <summary>Возвращает строковое представление значения этого экземпляра <see cref="T:System.Guid" /> в соответствии с заданным описателем формата.</summary>
        <returns>Значение данного <see cref="T:System.Guid" />, представленное в виде последовательности шестнадцатеричных цифр в нижнем регистре в указанном формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны допустимые описатели формата для параметра `format`. "0" представляет цифру; дефисы ("-"), фигурные скобки ("{", "}") и круглые скобки ("(", ")") отображаются, как показано.  
  
|Описатель|Формат возвращаемого значения|  
|---------------|----------------------------|  
|`N`|32 цифр:<br /><br /> 00000000000000000000000000000000|  
|`D`|32 цифр, разделенных дефисами:<br /><br /> 00000000-0000-0000-0000-000000000000|  
|`B`|32. цифры, разделенные дефисами, заключенные в фигурные скобки:<br /><br /> {00000000-0000-0000-0000-000000000000}|  
|`P`|32. цифры, разделенные дефисами, заключенные в круглые скобки:<br /><br /> (00000000-0000-0000-0000-000000000000)|  
|`X`|Четыре шестнадцатеричных значения, заключенные в фигурные скобки, где четвертый — подмножество из восьми шестнадцатеричных значений, которое также заключено в фигурные скобки:<br /><br /> {0x00000000, символ 0x0000, символ 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}|  
  
 Шестнадцатеричные цифры от a до f являются строчными в возвращаемой строке. Чтобы преобразовать их в верхний регистр, вызовите метод <xref:System.String.ToUpper%2A?displayProperty=nameWithType> для возвращаемой строки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Значением <paramref name="format" /> не является <see langword="null" />, пустая строка (""), N, D, B, P или X.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="guid.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format">Единственный описатель формата, указывающий, как следует форматировать значение данного <see cref="T:System.Guid" />. Параметр <paramref name="format" /> может принимать значения N, D, B, P или X. Если параметр <paramref name="format" /> имеет значение <see langword="null" /> или равен пустой строке (""), используется значение D.</param>
        <param name="provider">(Зарезервирован.) Объект, предоставляющий сведения о форматировании, связанные с определенным языком и региональными параметрами.</param>
        <summary>Возвращает строковое представление значения этого экземпляра класса <see cref="T:System.Guid" /> в соответствии с заданным описателем формата и сведениями об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
        <returns>Значение данного <see cref="T:System.Guid" />, представленное в виде последовательности шестнадцатеричных цифр в нижнем регистре в указанном формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр `provider` зарезервирован для будущего использования и не участвует в выполнении этого метода. `null` можно передать в вызове метода.  
  
 В следующей таблице показаны допустимые описатели формата для параметра `format`. "0" представляет цифру; дефисы ("-"), фигурные скобки ("{", "}") и круглые скобки ("(", ")") отображаются, как показано.  
  
|Описатель|Формат возвращаемого значения|  
|---------------|----------------------------|  
|`N`|32 цифр:<br /><br /> 00000000000000000000000000000000|  
|`D`|32 цифр, разделенных дефисами:<br /><br /> 00000000-0000-0000-0000-000000000000|  
|`B`|32. цифры, разделенные дефисами, заключенные в фигурные скобки:<br /><br /> {00000000-0000-0000-0000-000000000000}|  
|`P`|32. цифры, разделенные дефисами, заключенные в круглые скобки:<br /><br /> (00000000-0000-0000-0000-000000000000)|  
|`X`|Четыре шестнадцатеричных значения, заключенные в фигурные скобки, где четвертый — подмножество из восьми шестнадцатеричных значений, которое также заключено в фигурные скобки:<br /><br /> {0x00000000, символ 0x0000, символ 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}|  
  
 Шестнадцатеричные цифры от a до f являются строчными в возвращаемой строке. Чтобы преобразовать их в верхний регистр, вызовите метод <xref:System.String.ToUpper%2A?displayProperty=nameWithType> для возвращаемой строки.  
  
 Поскольку параметр `provider` игнорируется, его нельзя использовать для предоставления пользовательского решения форматирования. Чтобы представить <xref:System.Guid> значение в виде строки в формате, который не поддерживается строками стандартного формата GUID, вызовите метод <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> с объектом `provider`, который реализует интерфейсы <xref:System.ICustomFormatter> и <xref:System.IFormatProvider>. Дополнительные сведения см. в подразделе "настраиваемое форматирование с помощью ICustomFormatter" статьи [Типы форматирования](~/docs/standard/base-types/formatting-types.md) .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Значением <paramref name="format" /> не является <see langword="null" />, пустая строка (""), N, D, B, P или X.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="guid.TryFormat (destination, charsWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">Этот метод возвращает GUID как диапазон символов.</param>
        <param name="charsWritten">Этот метод возвращает количество символов, записанных в диапазон.</param>
        <param name="format">Доступный только для чтения диапазон, содержащий символ, представляющий один из следующих описателей, указывающий точный формат, который используется при интерпретации <paramref name="input" />: "N", "D", "B", "P" или "X".</param>
        <summary>Пытается отформатировать текущий экземпляр GUID в указанный диапазон символов.</summary>
        <returns>Значение <see langword="true" />, если форматирование выполнено успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out Guid result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] valuetype System.Guid&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.TryParse(System.ReadOnlySpan{System.Char},System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] Guid % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * Guid -&gt; bool" Usage="System.Guid.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Guid" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Диапазон, содержащий символы, которые представляют идентификатор GUID для преобразования.</param>
        <param name="result">Экземпляр <see cref="T:System.Guid" />, который будет содержать значение после разбора. Если метод возвращает значение <see langword="true" />, то свойство <paramref name="result" /> содержит допустимое <see cref="T:System.Guid" />. Если метод возвращает <see langword="false" />, <paramref name="result" /> равен <see cref="F:System.Guid.Empty" />.</param>
        <summary>Преобразует указанный диапазон символов только для чтения, содержащий представление GUID, в эквивалентную структуру <see cref="T:System.Guid" />.</summary>
        <returns>Значение <see langword="true" />, если синтаксический анализ выполнен успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out Guid result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] valuetype System.Guid&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.TryParse(System.String,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] Guid % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * Guid -&gt; bool" Usage="System.Guid.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Guid" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input">Строка, содержащая идентификатор GUID для преобразования.</param>
        <param name="result">Экземпляр <see cref="T:System.Guid" />, который будет содержать значение после разбора. Если метод возвращает значение <see langword="true" />, то свойство <paramref name="result" /> содержит допустимое <see cref="T:System.Guid" />. Если метод возвращает <see langword="false" />, <paramref name="result" /> равен <see cref="F:System.Guid.Empty" />.</param>
        <summary>Преобразовывает строковое представление объекта GUID в эквивалентную структуру <see cref="T:System.Guid" />.</summary>
        <returns>Значение <see langword="true" />, если синтаксический анализ выполнен успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод похож на метод <xref:System.Guid.Parse%2A>, за исключением того, что вместо возврата проанализированного идентификатора GUID он возвращает значение, `false`, если `input` `null` или не имеет распознаваемый формат, и не создает исключение. Он усекает все начальные или конечные пробелы от `input` и преобразует строки в любом из пяти форматов, распознаваемых методами <xref:System.Guid.ToString%28System.String%29> и <xref:System.Guid.ToString%28System.String%2CSystem.IFormatProvider%29>, как показано в следующей таблице.  
  
|Описатель|Описание|Формат|  
|---------------|-----------------|------------|  
|`N`|32 цифр|00000000000000000000000000000000|  
|`D`|32 цифр, разделенных дефисами|00000000-0000-0000-0000-000000000000|  
|`B`|32. цифры, разделенные дефисами, заключенные в фигурные скобки|{00000000-0000-0000-0000-000000000000}|  
|`P`|32. цифры, разделенные дефисами, заключенные в круглые скобки|(00000000-0000-0000-0000-000000000000)|  
|`X`|Четыре шестнадцатеричных значения, заключенные в фигурные скобки, где четвертое значение является подмножеством восьми шестнадцатеричных значений, которое также заключено в фигурные скобки|{0x00000000, символ 0x0000, символ 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}|  
  
   
  
## Examples  
 В следующем примере создается новый идентификатор GUID, который преобразуется в три отдельных строковых представления путем вызова метода <xref:System.Guid.ToString%28System.String%29> с описателями формата "B", "D" и "X", а затем вызывается метод <xref:System.Guid.TryParse%2A> для преобразования строк обратно в значения <xref:System.Guid>.  
  
 [!code-csharp[System.Guid.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.parse/cs/tryparseex1.cs#2)]
 [!code-vb[System.Guid.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.parse/vb/tryparseex1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Guid.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, out Guid result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, [out] valuetype System.Guid&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), ByRef result As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, [Runtime::InteropServices::Out] Guid % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * Guid -&gt; bool" Usage="System.Guid.TryParseExact (input, format, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Guid" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">Доступный только для чтения диапазон, содержащий символы, представляющие GUID для преобразования.</param>
        <param name="format">Доступный только для чтения диапазон, содержащий символ, представляющий один из следующих описателей, указывающий точный формат, который используется при интерпретации <paramref name="input" />: "N", "D", "B", "P" или "X".</param>
        <param name="result">Структура, которая будет содержать значение после синтаксического анализа. Если метод возвращает значение <see langword="true" />, то свойство <paramref name="result" /> содержит допустимое <see cref="T:System.Guid" />. Если метод возвращает <see langword="false" />, <paramref name="result" /> равен <see cref="F:System.Guid.Empty" />.</param>
        <summary>Преобразует диапазон символов, представляющий GUID, в эквивалентную структуру <see cref="T:System.Guid" />, при условии, что строка имеет указанный формат.</summary>
        <returns>Значение <see langword="true" />, если синтаксический анализ выполнен успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, out Guid result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, [out] valuetype System.Guid&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, ByRef result As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, [Runtime::InteropServices::Out] Guid % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * Guid -&gt; bool" Usage="System.Guid.TryParseExact (input, format, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Guid" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input">Время в формате GUID, которое требуется преобразовать.</param>
        <param name="format">Один из следующих описателей, указывающих точный формат, используемый при интерпретации параметра <paramref name="input" />: "N", "D", "B", "P" или "X".</param>
        <param name="result">Структура, которая будет содержать значение после синтаксического анализа. Если метод возвращает значение <see langword="true" />, то свойство <paramref name="result" /> содержит допустимое <see cref="T:System.Guid" />. Если метод возвращает <see langword="false" />, <paramref name="result" /> равен <see cref="F:System.Guid.Empty" />.</param>
        <summary>Преобразует строковое представление GUID в эквивалентную структуру <see cref="T:System.Guid" />, при условии, что строка имеет указанный формат.</summary>
        <returns>Значение <see langword="true" />, если синтаксический анализ выполнен успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для этого метода требуется, чтобы строка была преобразована в формат, заданный параметром `format`, после удаления начальных и конечных символов пробела. Он возвращает `false`, если `input` `null` или не имеет формат, заданный в `format`, и не создает исключение.  
  
 В следующей таблице показаны допустимые описатели формата для параметра `format`. "0" представляет цифру; дефисы ("-"), фигурные скобки ("{", "}") и круглые скобки ("(", ")") отображаются, как показано.  
  
|Описатель|Формат параметра `input`|  
|---------------|-------------------------------------|  
|Нет|32 цифр:<br /><br /> 00000000000000000000000000000000|  
|D|32 цифр, разделенных дефисами:<br /><br /> 00000000-0000-0000-0000-000000000000|  
|С|32. цифры, разделенные дефисами, заключенные в фигурные скобки:<br /><br /> {00000000-0000-0000-0000-000000000000}|  
|С|32. цифры, разделенные дефисами, заключенные в круглые скобки:<br /><br /> (00000000-0000-0000-0000-000000000000)|  
|X|Четыре шестнадцатеричных значения, заключенные в фигурные скобки, где четвертый — подмножество из восьми шестнадцатеричных значений, которое также заключено в фигурные скобки:<br /><br /> {0x00000000, символ 0x0000, символ 0x0000, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}|  
  
   
  
## Examples  
 В следующем примере вызывается метод <xref:System.Guid.ToString%28System.String%29> с каждым из поддерживаемых описателей формата для создания массива строк, представляющих один GUID. Затем они передаются методу <xref:System.Guid.TryParseExact%2A>, который успешно анализирует строку, которая соответствует спецификатору формата "B".  
  
 [!code-csharp[System.Guid.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.guid.parse/cs/tryparseexactex1.cs#5)]
 [!code-vb[System.Guid.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.guid.parse/vb/tryparseexactex1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Guid.ParseExact(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public bool TryWriteBytes (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Guid.TryWriteBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryWriteBytes (destination As Span(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryWriteBytes(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.TryWriteBytes : Span&lt;byte&gt; -&gt; bool" Usage="guid.TryWriteBytes destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">Этот метод возвращает GUID как диапазон байтов.</param>
        <summary>Пытается записать текущий экземпляр GUID в диапазон байтов.</summary>
        <returns>Значение <see langword="true" />, если GUID успешно записан в указанный диапазон; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
