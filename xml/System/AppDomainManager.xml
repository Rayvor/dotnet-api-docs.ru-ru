<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3660a95f090568736272c604496a87dbf44df3dd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69439258" /></Metadata><TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет управляемый эквивалент неуправляемого основного приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Не используйте <xref:System.AppDomainManager> для настройки домена приложения в ASP.NET. В ASP.NET конфигурация должна обрабатываться узлом.  
  
 <xref:System.AppDomainManager> Реализация класса позволяет приложению размещения участвовать в создании новых доменов приложений. Чтобы заменить значение по <xref:System.AppDomainManager>умолчанию, укажите сборку и тип замены <xref:System.AppDomainManager> в [ \<](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) переменных среды APPDOMAIN_MANAGER_ASM и APPDOMAIN_MANAGER_TYPE или используйте аппдомаинманажерассембли > и аппдомаинманажертипе > элементы в файле конфигурации. [ \<](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) Сборка должна быть полностью доверенной и содержаться в глобальном кэше сборок или в каталоге запускаемого приложения. Имена типа и сборки должны быть полными в переменных среды. Например:  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  Если сборка, содержащая подкласс <xref:System.AppDomainManager> , зависит от сборок, помеченных атрибутом Conditional <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA), необходимо включить эти сборки в список <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> , передаваемый свойству элемента <xref:System.AppDomainSetup>используется для создания доменов приложений. В противном случае сборки, помеченные атрибутом APTCA Conditional, будут отключены.  
  
 <xref:System.AppDomainManager> Является управляемым эквивалентом неуправляемого узла. Объект участвует в создании новых доменов приложений в процессе и может настраивать новый <xref:System.AppDomain> перед выполнением другого управляемого кода. <xref:System.AppDomainManager> Также <xref:System.AppDomainManager> может предоставлять диспетчеры узлов, которые участвуют в других аспектах выполнения среды CLR. Например, <xref:System.AppDomainManager> может <xref:System.Security.HostSecurityManager> определить объект, который участвует в принятии решений о безопасности домена приложения.  
  
> [!NOTE]
>  Только предоставленные `FullTrust`сборки, такие как сборки в глобальном кэше сборок или определенные `fullTrustAssemblies` как в <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> методе, <xref:System.AppDomainManager.InitializeNewDomain%2A> можно загрузить в <xref:System.AppDomainManager.%23ctor%2A> конструктор и метод.  
  
> [!NOTE]
>  Этот класс содержит запрос компоновки и требование наследования на уровне класса. <xref:System.Security.SecurityException> Исключение возникает, если непосредственный вызывающий объект или производный класс не имеет разрешения инфраструктуры. Дополнительные сведения о требованиях безопасности см. в разделе [требования связывания](~/docs/framework/misc/link-demands.md) и [требования наследования](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).  
  
   
  
## Examples  
 В следующем примере показана очень простая реализация <xref:System.AppDomainManager>.  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException">У вызывающего объекта нет нужных разрешений. См. раздел "Требования".</exception>
    <permission cref="T:System.Security.SecurityCriticalAttribute">Требуется полное доверие для немедленного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для производных классов, чтобы подключить исполняемый код к инфраструктуре размещения среды CLR. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" />.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.AppDomainManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Только предоставленные `FullTrust`сборки, такие как сборки в глобальном кэше сборок или определенные `fullTrustAssemblies` как в <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> методе, <xref:System.AppDomainManager.InitializeNewDomain%2A> можно загрузить в <xref:System.AppDomainManager.%23ctor%2A> конструктор и метод.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требуется полное доверие для немедленного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает активатор, управляющий активацией предназначенных для домена надстроек и приложений на основе манифеста.</summary>
        <value>Активатор приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существует один назначенный экземпляр <xref:System.Runtime.Hosting.ApplicationActivator> класса в каждом <xref:System.AppDomain> , на который направляются все вызовы активации надстроек и на основе манифеста. Для текущего <xref:System.AppDomain> объекта может предоставляться собственный пользовательский <xref:System.Runtime.Hosting.ApplicationActivator>или экземпляр по умолчанию <xref:System.Runtime.Hosting.ApplicationActivator>. <xref:System.AppDomainManager>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state">Подкласс объекта <see cref="T:System.Security.SecurityState" />, который определяет операцию, для которой запрашивается состояние безопасности.</param>
        <summary>Показывает, разрешена ли заданная операция в домене приложения.</summary>
        <returns>Значение <see langword="true" />, если основное приложение разрешает выполнять операцию, заданную в параметре <paramref name="state" />, в домене приложения; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию этого метода возвращает `false`.  
  
 Этот метод вызывается при <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> вызове метода для увеличения квоты изолированного хранилища. Приложение, в котором размещена среда CLR, может переопределять <xref:System.AppDomainManager.CheckSecuritySettings%2A> метод для принятия решений <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> о политике на основе <xref:System.Security.SecurityState>объекта (наследуемого), а затем может разрешить или запретить увеличение. Например, узел может запросить у конечного пользователя утверждение или отклонение запроса на увеличение квоты. Реализация <xref:System.AppDomainManager.CheckSecuritySettings%2A> узла должна учитывать возможность атак типа "отказ в обслуживании". Например, он должен запрашивать у пользователя, только если метод вызывается из события, инициированного пользователем, например нажатием кнопки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Понятное имя домена.</param>
        <param name="securityInfo">Объект, в котором содержится свидетельство, сопоставленное посредством политики безопасности и задающее набор разрешений для вершины стека.</param>
        <param name="appDomainInfo">Объект, в котором содержатся сведения об инициализации домена приложения.</param>
        <summary>Возвращает новый или существующий домен приложения.</summary>
        <returns>Новый или существующий домен приложения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Понятное имя, заданное `friendlyName` параметром, может отображаться в пользовательском интерфейсе для указания домена. Дополнительные сведения см. в описании свойства <xref:System.AppDomain.FriendlyName%2A>.  
  
 Метод по <xref:System.AppDomainManager.CreateDomain%2A> умолчанию вызывает защищенный <xref:System.AppDomainManager.CreateDomainHelper%2A> метод для создания <xref:System.AppDomain>. Переопределение этого метода не требует вызова метода, <xref:System.AppDomainManager.CreateDomainHelper%2A> но может возвращать существующий домен.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.AppDomainManager" /> класса и <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> переопределении метода можно выполнять пользовательские действия <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> инициализации домена приложения перед вызовом метода или вообще не вызывать вспомогательный метод.  Например, можно изменить свидетельство, передаваемое как <paramref name="securityInfo" />, обновить поля связанного <see cref="T:System.AppDomainSetup" />или повторно использовать выходной домен.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">Понятное имя домена.</param>
        <param name="securityInfo">Объект, в котором содержится свидетельство, сопоставленное посредством политики безопасности и задающее набор разрешений для вершины стека.</param>
        <param name="appDomainInfo">Объект, в котором содержатся сведения об инициализации домена приложения.</param>
        <summary>Предоставляет вспомогательный метод для создания домена приложения.</summary>
        <returns>Только что созданный домен приложения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот защищенный вспомогательный метод обрабатывает создание нового домена приложения.  
  
 Это понятное имя, заданное `friendlyName` параметром, может отображаться в пользовательских интерфейсах для указания домена. Дополнительные сведения см. в описании свойства <xref:System.AppDomain.FriendlyName%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="friendlyName" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для управления свидетельством. Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает входную сборку для приложения.</summary>
        <value>Входная сборка для приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если приложение является активируемым манифестом, сборка записи определяется из манифеста приложения. Если приложение не активируется манифестом, то сборка входа — это процесс, исполняемый в домене приложения по умолчанию. В других доменах приложений входная сборка является первым исполняемым файлом, который выполнялся <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> методом.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает диспетчер контекста выполнения сайта, управляющий потоком контекста выполнения.</summary>
        <value>Диспетчер контекста выполнения основного приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет узлу предоставить объект <xref:System.Threading.HostExecutionContextManager> , который может участвовать в потоке контекста выполнения для асинхронных вызовов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает диспетчер безопасности сайта, который участвует в принятии решений относительно безопасности домена приложения.</summary>
        <value>Диспетчер безопасности основного приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет узлу предоставить, <xref:System.Security.HostSecurityManager> чтобы принять участие в принятии решений о безопасности для домена приложения.  
  
   
  
## Examples  
 В следующем примере показано переопределение <xref:System.AppDomainManager.HostSecurityManager%2A> свойства для пользовательского диспетчера домена приложения. Этот пример кода является частью большого примера, <xref:System.AppDomainManager> приведенного для класса.  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает флаги инициализации для диспетчеров пользовательских доменов приложений.</summary>
        <value>Побитовое сочетание значений перечисления, определяющее действие, которое необходимо выполнить для инициализации. Значение по умолчанию — <see cref="F:System.AppDomainManagerInitializationOptions.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo">Объект, в котором содержатся сведения об инициализации домена приложения.</param>
        <summary>Инициализирует новый домен приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Не используйте этот метод для инициализации домена приложения в ASP.NET. В ASP.NET конфигурация должна обрабатываться узлом. При использовании этого метода для инициализации домена приложения узел вызывается <xref:System.InvalidOperationException> при попытке инициализировать домен приложения. Сообщение об исключении указывает на то, что инициализация уже выполнена.  
  
 Этот метод вызывается сразу после конструктора. Реализация по <xref:System.AppDomainManager.InitializeNewDomain%2A> умолчанию не выполняет никаких действий.  Пользовательская реализация может настроить внутренние классы и делегаты, настроить интерфейс с неуправляемым интерфейсом узла или настроить обработчики событий для нового <xref:System.AppDomain>.  
  
 Кроме того, при активации надстройки пользовательская реализация может указать текущий <xref:System.AppDomain> в качестве целевого домена приложения.  
  
 Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], этот метод можно использовать для песочницы домена приложения по умолчанию при запуске приложения или для изменения "песочницы" нового домена приложения. Для этого <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> измените свойства и <xref:System.Security.Policy.ApplicationTrust> <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> для`appDomainInfo`объекта, присвоенного свойству, перед инициализацией домена приложения.  
  
> [!NOTE]
>  Только предоставленные `FullTrust`сборки, такие как сборки в глобальном кэше сборок или определенные `fullTrustAssemblies` как в <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> методе, <xref:System.AppDomainManager.InitializeNewDomain%2A> можно загрузить в <xref:System.AppDomainManager.%23ctor%2A> конструктор и метод.  
  
   
  
## Examples  
 В следующем примере показано переопределение <xref:System.AppDomainManager.InitializeNewDomain%2A> метода для пользовательского диспетчера домена приложения. Этот пример кода является частью большого примера, <xref:System.AppDomainManager> приведенного для класса.  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
