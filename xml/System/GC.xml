<Type Name="GC" FullName="System.GC">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fc737674a10c58010765ed07a8bd586f8b65367" /><Meta Name="ms.sourcegitcommit" Value="fbe36a3465a31f574ebd41192d31a74126cf757c" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/26/2019" /><Meta Name="ms.locfileid" Value="74546180" /></Metadata><TypeSignature Language="C#" Value="public static class GC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit GC extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.GC" />
  <TypeSignature Language="VB.NET" Value="Public Class GC" />
  <TypeSignature Language="C++ CLI" Value="public ref class GC abstract sealed" />
  <TypeSignature Language="F#" Value="type GC = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="14956-101">Управляет системным сборщиком мусора — службой, которая автоматически высвобождает неиспользуемую память.</span><span class="sxs-lookup"><span data-stu-id="14956-101">Controls the system garbage collector, a service that automatically reclaims unused memory.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-102">Сборщик мусора — это компонент среды CLR, управляющий выделением и освобождением управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-102">The garbage collector is a common language runtime component that controls the allocation and release of managed memory.</span></span> <span data-ttu-id="14956-103">Методы этого класса влияют на то, когда выполняется сборка мусора для объекта и освобождаются ресурсы, выделенные объектом.</span><span class="sxs-lookup"><span data-stu-id="14956-103">The methods in this class influence when garbage collection is performed on an object and when resources allocated by an object are released.</span></span> <span data-ttu-id="14956-104">Свойства в этом классе предоставляют сведения об общем объеме памяти, доступном в системе, а также о категории возраста или формировании памяти, выделенной для объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-104">Properties in this class provide information about the total amount of memory available in the system and the age category, or generation, of memory allocated to an object.</span></span>  
  
 <span data-ttu-id="14956-105">Сборщик мусора отслеживает и освобождает объекты, выделенные в управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-105">The garbage collector tracks and reclaims objects allocated in managed memory.</span></span> <span data-ttu-id="14956-106">Периодически сборщик мусора выполняет сборку мусора для освобождения памяти, выделенной для объектов, для которых нет допустимых ссылок.</span><span class="sxs-lookup"><span data-stu-id="14956-106">Periodically, the garbage collector performs garbage collection to reclaim memory allocated to objects for which there are no valid references.</span></span> <span data-ttu-id="14956-107">Сборка мусора происходит автоматически, если запрос памяти не может быть удовлетворен с помощью доступной свободной памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-107">Garbage collection happens automatically when a request for memory cannot be satisfied using available free memory.</span></span> <span data-ttu-id="14956-108">Кроме того, приложение может принудительно выполнить сборку мусора с помощью метода <xref:System.GC.Collect%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-108">Alternatively, an application can force garbage collection using the <xref:System.GC.Collect%2A> method.</span></span>  
  
 <span data-ttu-id="14956-109">Сборка мусора состоит из следующих шагов.</span><span class="sxs-lookup"><span data-stu-id="14956-109">Garbage collection consists of the following steps:</span></span>  
  
1.  <span data-ttu-id="14956-110">Сборщик мусора ищет управляемые объекты, на которые имеются ссылки в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="14956-110">The garbage collector searches for managed objects that are referenced in managed code.</span></span>  
  
2.  <span data-ttu-id="14956-111">Сборщик мусора пытается завершить объекты, на которые нет ссылок.</span><span class="sxs-lookup"><span data-stu-id="14956-111">The garbage collector tries to finalize objects that are not referenced.</span></span>  
  
3.  <span data-ttu-id="14956-112">Сборщик мусора освобождает объекты, на которые нет ссылок, и освобождает их память.</span><span class="sxs-lookup"><span data-stu-id="14956-112">The garbage collector frees objects that are not referenced and reclaims their memory.</span></span>  
  
 <span data-ttu-id="14956-113">Этот раздел включает следующие подразделы:</span><span class="sxs-lookup"><span data-stu-id="14956-113">This topic includes the following sections:</span></span>  
  
 <span data-ttu-id="14956-114">[Сборщик мусора и неуправляемые ресурсы](#unmanaged) </span><span class="sxs-lookup"><span data-stu-id="14956-114">[The garbage collector and unmanaged resources](#unmanaged) </span></span>  
 <span data-ttu-id="14956-115">[Устаревание и поколения объектов](#generations) </span><span class="sxs-lookup"><span data-stu-id="14956-115">[Object aging and generations](#generations) </span></span>  
 [<span data-ttu-id="14956-116">Запрещена сборка мусора</span><span class="sxs-lookup"><span data-stu-id="14956-116">Disallowing garbage collection</span></span>](#NoGCRegion)  
  
<a name="unmanaged"></a>   
## <a name="the-garbage-collector-and-unmanaged-resources"></a><span data-ttu-id="14956-117">Сборщик мусора и неуправляемые ресурсы</span><span class="sxs-lookup"><span data-stu-id="14956-117">The garbage collector and unmanaged resources</span></span>  
 <span data-ttu-id="14956-118">Во время сбора сборщик мусора не освобождает объект, если находит одну или несколько ссылок на объект в управляемом коде.</span><span class="sxs-lookup"><span data-stu-id="14956-118">During a collection, the garbage collector will not free an object if it finds one or more references to the object in managed code.</span></span> <span data-ttu-id="14956-119">Однако сборщик мусора не распознает ссылки на объект из неуправляемого кода и может освобождать объекты, которые используются исключительно в неуправляемом коде, если это явно не запрещено.</span><span class="sxs-lookup"><span data-stu-id="14956-119">However, the garbage collector does not recognize references to an object from unmanaged code, and might free objects that are being used exclusively in unmanaged code unless explicitly prevented from doing so.</span></span> <span data-ttu-id="14956-120">Метод <xref:System.GC.KeepAlive%2A> предоставляет механизм, который предотвращает сбор сборщиком мусора объектов, которые все еще используются в неуправляемом коде.</span><span class="sxs-lookup"><span data-stu-id="14956-120">The <xref:System.GC.KeepAlive%2A> method provides a mechanism that prevents the garbage collector from collecting objects that are still in use in unmanaged code.</span></span>  
  
 <span data-ttu-id="14956-121">Кроме управляемых выделений памяти, реализации сборщика мусора не поддерживают сведения о ресурсах, удерживаемых объектом, например дескрипторы файлов или подключения к базе данных.</span><span class="sxs-lookup"><span data-stu-id="14956-121">Aside from managed memory allocations, implementations of the garbage collector do not maintain information about resources held by an object, such as file handles or database connections.</span></span> <span data-ttu-id="14956-122">Если тип использует неуправляемые ресурсы, которые должны быть освобождены до освобождения экземпляров типа, тип может реализовать метод завершения.</span><span class="sxs-lookup"><span data-stu-id="14956-122">When a type uses unmanaged resources that must be released before instances of the type are reclaimed, the type can implement a finalizer.</span></span>  
  
 <span data-ttu-id="14956-123">В большинстве случаев методы завершения реализуются путем переопределения метода <xref:System.Object.Finalize%2A?displayProperty=nameWithType>; Однако типы, написанные C# в C++ или реализующие деструкторы, превращение компиляторов в переопределение <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="14956-123">In most cases, finalizers are implemented by overriding the <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method; however, types written in C# or C++ implement destructors, which compilers turn into an override of <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="14956-124">В большинстве случаев, если у объекта есть метод завершения, сборщик мусора вызывает его перед освобождением объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-124">In most cases, if an object has a finalizer, the garbage collector calls it prior to freeing the object.</span></span> <span data-ttu-id="14956-125">Однако сборщик мусора не требуется вызывать методы завершения во всех ситуациях. Например, метод <xref:System.GC.SuppressFinalize%2A> явно предотвращает вызов метода завершения объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-125">However, the garbage collector is not required to call finalizers in all situations; for example, the <xref:System.GC.SuppressFinalize%2A> method explicitly prevents an object's finalizer from being called.</span></span> <span data-ttu-id="14956-126">Кроме того, сборщик мусора не обязан использовать конкретный поток для завершения объектов или гарантировать, что методы завершения вызываются для объектов, ссылающихся друг на друга, но в других случаях доступны для сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-126">Also, the garbage collector is not required to use a specific thread to finalize objects, or guarantee the order in which finalizers are called for objects that reference each other but are otherwise available for garbage collection.</span></span>  
  
 <span data-ttu-id="14956-127">В сценариях, где ресурсы должны быть освобождены в определенное время, классы могут реализовывать интерфейс <xref:System.IDisposable>, который содержит метод <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>, выполняющий задачи управления ресурсами и очистки.</span><span class="sxs-lookup"><span data-stu-id="14956-127">In scenarios where resources must be released at a specific time, classes can implement the <xref:System.IDisposable> interface, which contains the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method that performs resource management and cleanup tasks.</span></span> <span data-ttu-id="14956-128">Классы, реализующие <xref:System.IDisposable.Dispose%2A>, должны указывать, как часть контракта своего класса, если и когда потребители класса вызывают метод для очистки объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-128">Classes that implement <xref:System.IDisposable.Dispose%2A> must specify, as part of their class contract, if and when class consumers call the method to clean up the object.</span></span> <span data-ttu-id="14956-129">Сборщик мусора по умолчанию не вызывает метод <xref:System.IDisposable.Dispose%2A>; Однако реализации метода <xref:System.IDisposable.Dispose%2A> могут вызывать методы в классе <xref:System.GC> для настройки поведения завершения сборщика мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-129">The garbage collector does not, by default, call the <xref:System.IDisposable.Dispose%2A> method; however, implementations of the <xref:System.IDisposable.Dispose%2A> method can call methods in the <xref:System.GC> class to customize the finalization behavior of the garbage collector.</span></span>  
  
 <span data-ttu-id="14956-130">Дополнительные сведения о финализации объектов и шаблоне удаления см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="14956-130">For more information on object finalization and the dispose pattern, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
<a name="generations"></a>   
## <a name="object-aging-and-generations"></a><span data-ttu-id="14956-131">Устаревание и поколения объектов</span><span class="sxs-lookup"><span data-stu-id="14956-131">Object aging and generations</span></span>  
 <span data-ttu-id="14956-132">Сборщик мусора в общеязыковой среде выполнения поддерживает устаревание объектов с помощью поколений.</span><span class="sxs-lookup"><span data-stu-id="14956-132">The garbage collector in the common language runtime supports object aging using generations.</span></span> <span data-ttu-id="14956-133">Поколение — это единица измерения относительного возраста объектов в памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-133">A generation is a unit of measure of the relative age of objects in memory.</span></span> <span data-ttu-id="14956-134">Номер поколения (или возраст) объекта указывает на поколение, которому принадлежит объект.</span><span class="sxs-lookup"><span data-stu-id="14956-134">The generation number, or age, of an object indicates the generation to which an object belongs.</span></span> <span data-ttu-id="14956-135">Недавно созданные объекты являются частью более новых поколений и имеют меньшие номера поколений, чем объекты, созданные ранее в жизненном цикле приложения.</span><span class="sxs-lookup"><span data-stu-id="14956-135">Objects created more recently are part of newer generations, and have lower generation numbers than objects created earlier in the application life cycle.</span></span> <span data-ttu-id="14956-136">Объекты в последнем поколении находятся в поколении 0.</span><span class="sxs-lookup"><span data-stu-id="14956-136">Objects in the most recent generation are in generation 0.</span></span> <span data-ttu-id="14956-137">Эта реализация сборщика мусора поддерживает три поколения объектов, поколения 0, 1 и 2.</span><span class="sxs-lookup"><span data-stu-id="14956-137">This implementation of the garbage collector supports three generations of objects, generations 0, 1, and 2.</span></span> <span data-ttu-id="14956-138">Можно получить значение свойства <xref:System.GC.MaxGeneration%2A>, чтобы определить максимальный номер поколения, поддерживаемый системой.</span><span class="sxs-lookup"><span data-stu-id="14956-138">You can retrieve the value of the <xref:System.GC.MaxGeneration%2A> property to determine the maximum generation number supported by the system.</span></span>  
  
 <span data-ttu-id="14956-139">Устаревание объектов позволяет приложениям нацелиться на сборку мусора в определенном наборе поколений, а не требовать от сборщика мусора оценивать все поколения.</span><span class="sxs-lookup"><span data-stu-id="14956-139">Object aging allows applications to target garbage collection at a specific set of generations rather than requiring the garbage collector to evaluate all generations.</span></span> <span data-ttu-id="14956-140">Перегрузки метода <xref:System.GC.Collect%2A>, которые включают параметр `generation`, позволяют указать самое старое поколение, которое должно быть собрано сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-140">Overloads of the <xref:System.GC.Collect%2A> method that include a `generation` parameter allow you to specify the oldest generation to be garbage collected.</span></span>  
  
<a name="NoGCRegion"></a>   
## <a name="disallowing-garbage-collection"></a><span data-ttu-id="14956-141">Запрещена сборка мусора</span><span class="sxs-lookup"><span data-stu-id="14956-141">Disallowing garbage collection</span></span>  
 <span data-ttu-id="14956-142">Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)]сборщик мусора поддерживает режим задержки без области GC, который можно использовать во время выполнения критических путей, в которых сбор мусора может негативно сказаться на производительности приложения.</span><span class="sxs-lookup"><span data-stu-id="14956-142">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the garbage collector supports a no GC region latency mode that can be used during the execution of critical paths in which garbage collection can adversely affect an app's performance.</span></span> <span data-ttu-id="14956-143">Режим задержки без области GC требует указать объем памяти, который может быть выделен без помех от сборщика мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-143">The no GC region latency mode requires that you specify an amount of memory that can be allocated without interference from the garbage collector.</span></span> <span data-ttu-id="14956-144">Если среда выполнения может выделить эту память, среда выполнения не будет выполнять сборку мусора во время выполнения кода критического пути.</span><span class="sxs-lookup"><span data-stu-id="14956-144">If the runtime can allocate that memory, the runtime will not perform a garbage collection while code in the critical path is executing.</span></span>  
  
 <span data-ttu-id="14956-145">Вы определяете начало критического пути к области без GC, вызывая одну из перегрузок <xref:System.GC.TryStartNoGCRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-145">You define the beginning of the critical path of the no GC region by calling one of the overloads of the <xref:System.GC.TryStartNoGCRegion%2A>.</span></span> <span data-ttu-id="14956-146">Чтобы указать конец критического пути, вызовите метод <xref:System.GC.EndNoGCRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-146">You specify the end of its critical path by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 <span data-ttu-id="14956-147">Нельзя вкладывать вызовы в метод <xref:System.GC.TryStartNoGCRegion%2A>, и следует вызывать метод <xref:System.GC.EndNoGCRegion%2A> только в том случае, если среда выполнения в настоящее время находится в режиме задержки в области GC.</span><span class="sxs-lookup"><span data-stu-id="14956-147">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="14956-148">Иными словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы завершаются неудачно), и не следует рассчитывать на то, что вызов <xref:System.GC.EndNoGCRegion%2A> завершится только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> выполнен.</span><span class="sxs-lookup"><span data-stu-id="14956-148">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-149">В следующем примере используется несколько методов GC для получения сведений о создании и памяти для блока неиспользуемых объектов и их вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="14956-149">The following example uses several GC methods to get generation and memory information about a block of unused objects and print it to the console.</span></span> <span data-ttu-id="14956-150">Затем будут собраны неиспользуемые объекты, а результирующие итоги памяти отобразятся.</span><span class="sxs-lookup"><span data-stu-id="14956-150">The unused objects are then collected, and the resulting memory totals are displayed.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.GCSettings" />
    <related type="Article" href="~/docs/standard/garbage-collection/index.md"><span data-ttu-id="14956-151">Сборка мусора</span><span class="sxs-lookup"><span data-stu-id="14956-151">Garbage Collection</span></span></related>
    <related type="Article" href="~/docs/standard/garbage-collection/fundamentals.md"><span data-ttu-id="14956-152">Основы сборки мусора</span><span class="sxs-lookup"><span data-stu-id="14956-152">Fundamentals of Garbage Collection</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddMemoryPressure">
      <MemberSignature Language="C#" Value="public static void AddMemoryPressure (long bytesAllocated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMemoryPressure(int64 bytesAllocated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.AddMemoryPressure(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMemoryPressure (bytesAllocated As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMemoryPressure(long bytesAllocated);" />
      <MemberSignature Language="F#" Value="static member AddMemoryPressure : int64 -&gt; unit" Usage="System.GC.AddMemoryPressure bytesAllocated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesAllocated" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytesAllocated"><span data-ttu-id="14956-153">Объем, на который увеличен объем выделенной неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-153">The incremental amount of unmanaged memory that has been allocated.</span></span></param>
        <summary><span data-ttu-id="14956-154">Информирует среду выполнения о выделении большого объема неуправляемой памяти, которую необходимо учесть при планировании сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-154">Informs the runtime of a large allocation of unmanaged memory that should be taken into account when scheduling garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-155">При определении расписания сборки мусора среда выполнения учитывает объем выделяемой управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-155">In determining when to schedule garbage collection, the runtime takes into account how much managed memory is allocated.</span></span> <span data-ttu-id="14956-156">Если небольшой управляемый объект выделяет большой объем неуправляемой памяти, среда выполнения учитывает только управляемую память и, таким же, недооценивает срочность планирования сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-156">If a small managed object allocates a large amount of unmanaged memory, the runtime takes into account only the managed memory, and thus underestimates the urgency of scheduling garbage collection.</span></span> <span data-ttu-id="14956-157">Метод <xref:System.GC.AddMemoryPressure%2A> информирует среду выполнения о дополнительной нехватке системной памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-157">The <xref:System.GC.AddMemoryPressure%2A> method informs the runtime of this additional pressure on system memory.</span></span>  
  
 <span data-ttu-id="14956-158">В простейшем шаблоне использования управляемый объект выделяет неуправляемую память в конструкторе и освобождает ее в методе `Dispose` или `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="14956-158">In the simplest usage pattern, a managed object allocates unmanaged memory in the constructor and releases it in the `Dispose` or `Finalize` method.</span></span> <span data-ttu-id="14956-159">Вызовите метод <xref:System.GC.AddMemoryPressure%2A> после выделения неуправляемой памяти и вызовите метод <xref:System.GC.RemoveMemoryPressure%2A> после его освобождения.</span><span class="sxs-lookup"><span data-stu-id="14956-159">Call the <xref:System.GC.AddMemoryPressure%2A> method after allocating the unmanaged memory, and call the <xref:System.GC.RemoveMemoryPressure%2A> method after releasing it.</span></span>  
  
 <span data-ttu-id="14956-160">В более сложных сценариях, где неуправляемое выделение памяти существенно меняется в течение времени существования управляемого объекта, можно вызвать методы <xref:System.GC.AddMemoryPressure%2A> и <xref:System.GC.RemoveMemoryPressure%2A>, чтобы передать эти добавочные изменения в среду выполнения.</span><span class="sxs-lookup"><span data-stu-id="14956-160">In more complicated scenarios, where the unmanaged memory allocation changes substantially during the lifetime of the managed object, you can call the <xref:System.GC.AddMemoryPressure%2A> and <xref:System.GC.RemoveMemoryPressure%2A> methods to communicate these incremental changes to the runtime.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="14956-161">Необходимо убедиться, что вы удалили только добавляемый уровень нагрузки.</span><span class="sxs-lookup"><span data-stu-id="14956-161">You must ensure that you remove exactly the amount of pressure you add.</span></span> <span data-ttu-id="14956-162">Если этого не сделать, это может негативно сказаться на производительности системы в приложениях, работающих в течение длительного периода времени.</span><span class="sxs-lookup"><span data-stu-id="14956-162">Failing to do so can adversely affect the performance of the system in applications that run for long periods of time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-163"><paramref name="bytesAllocated" /> меньше или равно 0.</span><span class="sxs-lookup"><span data-stu-id="14956-163"><paramref name="bytesAllocated" /> is less than or equal to 0.</span></span>  
  
<span data-ttu-id="14956-164">- или -</span><span class="sxs-lookup"><span data-stu-id="14956-164">-or-</span></span> 
<span data-ttu-id="14956-165">На 32-разрядном компьютере <paramref name="bytesAllocated" /> больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="14956-165">On a 32-bit computer, <paramref name="bytesAllocated" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="14956-166">для возможности вызова неуправляемого кода при управлении приоритетом сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-166">for the ability to call unmanaged code when manipulating garbage-collection priority.</span></span> <span data-ttu-id="14956-167">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="14956-167">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="14956-168">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-168">requires full trust for the immediate caller.</span></span> <span data-ttu-id="14956-169">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-169">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CancelFullGCNotification">
      <MemberSignature Language="C#" Value="public static void CancelFullGCNotification ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelFullGCNotification() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.CancelFullGCNotification" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CancelFullGCNotification ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CancelFullGCNotification();" />
      <MemberSignature Language="F#" Value="static member CancelFullGCNotification : unit -&gt; unit" Usage="System.GC.CancelFullGCNotification " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14956-170">Отменяет регистрацию уведомления о сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-170">Cancels the registration of a garbage collection notification.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-171">Этот метод отменяет уведомление о сборке мусора, зарегистрированное с помощью метода <xref:System.GC.RegisterForFullGCNotification%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-171">This method cancels a garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="14956-172">Не нужно вызывать этот метод перед изменением значений пороговых параметров при последующих вызовах метода <xref:System.GC.RegisterForFullGCNotification%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-172">You do not have to call this method before adjusting threshold parameter values in subsequent calls to the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-173">В следующем примере выполняется отмена регистрации сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-173">The following example cancels a garbage collection registration.</span></span> <span data-ttu-id="14956-174">Этот пример является частью большого примера, приведенного в разделе [уведомления о сборке мусора](~/docs/standard/garbage-collection/notifications.md) .</span><span class="sxs-lookup"><span data-stu-id="14956-174">This example is part of a larger example provided for the [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md) topic.</span></span>  
  
 [!code-cpp[GCNotification#7](~/samples/snippets/cpp/VS_Snippets_CLR/GCNotification/cpp/program.cpp#7)]
 [!code-csharp[GCNotification#7](~/samples/snippets/csharp/VS_Snippets_CLR/GCNotification/cs/Program.cs#7)]
 [!code-vb[GCNotification#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/GCNotification/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="14956-175">Этот член недоступен, если включена параллельная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-175">This member is not available when concurrent garbage collection is enabled.</span></span> <span data-ttu-id="14956-176">Сведения об отключении параллельной сборки мусора см. в статье, посвященной параметру среды выполнения [&lt;gcConcurrent&gt;](~/docs/framework/configure-apps/file-schema/runtime/gcconcurrent-element.md).</span><span class="sxs-lookup"><span data-stu-id="14956-176">See the [&lt;gcConcurrent&gt;](~/docs/framework/configure-apps/file-schema/runtime/gcconcurrent-element.md) runtime setting for information about how to disable concurrent garbage collection.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="14956-177">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="14956-177">for full trust for the immediate caller.</span></span> <span data-ttu-id="14956-178">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-178">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="14956-179">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-179">requires full trust for the immediate caller.</span></span> <span data-ttu-id="14956-180">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-180">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/garbage-collection/notifications.md"><span data-ttu-id="14956-181">Уведомления о сборке мусора</span><span class="sxs-lookup"><span data-stu-id="14956-181">Garbage Collection Notifications</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Collect">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14956-182">Принудительно начинает сборку мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-182">Forces garbage collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect();" />
      <MemberSignature Language="F#" Value="static member Collect : unit -&gt; unit" Usage="System.GC.Collect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14956-183">Принудительно запускает немедленную сборку мусора для всех поколений.</span><span class="sxs-lookup"><span data-stu-id="14956-183">Forces an immediate garbage collection of all generations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-184">Используйте этот метод, чтобы попытаться освободить всю память, которая недоступна.</span><span class="sxs-lookup"><span data-stu-id="14956-184">Use this method to try to reclaim all memory that is inaccessible.</span></span> <span data-ttu-id="14956-185">Она выполняет блокирование сборки мусора для всех поколений.</span><span class="sxs-lookup"><span data-stu-id="14956-185">It performs a blocking garbage collection of all generations.</span></span>  
  
 <span data-ttu-id="14956-186">Все объекты, независимо от того, как долго они находятся в памяти, считаются для коллекции. Однако объекты, на которые имеются ссылки в управляемом коде, не собираются.</span><span class="sxs-lookup"><span data-stu-id="14956-186">All objects, regardless of how long they have been in memory, are considered for collection; however, objects that are referenced in managed code are not collected.</span></span> <span data-ttu-id="14956-187">Используйте этот метод, чтобы заставить систему попытаться высвободить максимальный объем доступной памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-187">Use this method to force the system to try to reclaim the maximum amount of available memory.</span></span>  
  
 <span data-ttu-id="14956-188">Начиная с [!INCLUDE[net_v451](~/includes/net-v451-md.md)]можно сжать кучу больших объектов (LOH), установив для свойства <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> значение <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> перед вызовом метода <xref:System.GC.Collect%2A>, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="14956-188">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)], you can compact the large object heap (LOH) by setting the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> property to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> before calling the <xref:System.GC.Collect%2A> method, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.GCSettings#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.gcsettings/cs/lohcompactionmode1.cs#1)]
 [!code-vb[System.Runtime.GCSettings#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.gcsettings/vb/lohcompactionmode1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="14956-189">В следующем примере показано, как использовать метод <xref:System.GC.Collect%2A> для выполнения коллекции по всем поколениям памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-189">The following example demonstrates how to use the <xref:System.GC.Collect%2A> method to perform a collection on all generations of memory.</span></span> <span data-ttu-id="14956-190">Код создает несколько неиспользуемых объектов, а затем вызывает метод <xref:System.GC.Collect%2A> для их очистки из памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-190">The code generates a number of unused objects, and then calls the <xref:System.GC.Collect%2A> method to clean them from memory.</span></span>  
  
 [!code-cpp[System.GC.Collect Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.Collect Example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.Collect Example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.Collect Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/induced.md"><span data-ttu-id="14956-191">Индуцированные коллекции</span><span class="sxs-lookup"><span data-stu-id="14956-191">Induced Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect (int generation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect(int32 generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect (generation As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect(int generation);" />
      <MemberSignature Language="F#" Value="static member Collect : int -&gt; unit" Usage="System.GC.Collect generation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="generation"><span data-ttu-id="14956-192">Количество старших поколений, для которых следует выполнить сборку мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-192">The number of the oldest generation to be garbage collected.</span></span></param>
        <summary><span data-ttu-id="14956-193">Принудительно начинает немедленную сборку мусора, начиная с нулевого поколения и вплоть до указанного поколения.</span><span class="sxs-lookup"><span data-stu-id="14956-193">Forces an immediate garbage collection from generation 0 through a specified generation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-194">Используйте этот метод, чтобы попытаться освободить память, которая недоступна.</span><span class="sxs-lookup"><span data-stu-id="14956-194">Use this method to try to reclaim memory that is inaccessible.</span></span> <span data-ttu-id="14956-195">Однако использование этого метода не гарантирует высвобождения всей недоступной памяти в указанном поколении.</span><span class="sxs-lookup"><span data-stu-id="14956-195">However, using this method does not guarantee that all inaccessible memory in the specified generation is reclaimed.</span></span>  
  
 <span data-ttu-id="14956-196">Если реализуется устаревание объектов, сборщик мусора не выполняет сбор объектов с номером поколения, который выше указанного поколения.</span><span class="sxs-lookup"><span data-stu-id="14956-196">If object aging is implemented, the garbage collector does not collect objects with a generation number that is higher than the specified generation.</span></span> <span data-ttu-id="14956-197">Если устаревание объектов не реализовано, сборщик мусора рассматривает все объекты во время сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-197">If object aging is not implemented, the garbage collector considers all objects during the garbage collection.</span></span>  
  
 <span data-ttu-id="14956-198">Чтобы определить максимальное допустимое значение параметра `generation`, используйте свойство <xref:System.GC.MaxGeneration%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-198">Use the <xref:System.GC.MaxGeneration%2A> property to determine the maximum valid value of the `generation` parameter.</span></span>  
  
 <span data-ttu-id="14956-199">Чтобы сборщик мусора рассматривал все объекты независимо от их поколения, используйте версию этого метода, которая не принимает параметров.</span><span class="sxs-lookup"><span data-stu-id="14956-199">To have the garbage collector consider all objects regardless of their generation, use the version of this method that takes no parameters.</span></span> <span data-ttu-id="14956-200">Чтобы сборщик мусора высвободить объекты на основе параметра <xref:System.GCCollectionMode>, используйте перегрузку метода <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="14956-200">To have the garbage collector reclaim objects based on a <xref:System.GCCollectionMode> setting, use the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%29?displayProperty=nameWithType> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-201">В следующем примере показано, как использовать метод <xref:System.GC.Collect%2A> для выполнения сбора данных по отдельным слоям памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-201">The following example demonstrates how to use the <xref:System.GC.Collect%2A> method to perform a collection on individual layers of memory.</span></span> <span data-ttu-id="14956-202">Код создает несколько неиспользуемых объектов, а затем вызывает метод <xref:System.GC.Collect%2A> для их очистки из памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-202">The code generates a number of unused objects, and then calls the <xref:System.GC.Collect%2A> method to clean them from memory.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-203">Недопустимый параметр <paramref name="generation" />.</span><span class="sxs-lookup"><span data-stu-id="14956-203"><paramref name="generation" /> is not valid.</span></span></exception>
        <related type="Article" href="~/docs/standard/garbage-collection/induced.md"><span data-ttu-id="14956-204">Индуцированные коллекции</span><span class="sxs-lookup"><span data-stu-id="14956-204">Induced Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect (int generation, GCCollectionMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect(int32 generation, valuetype System.GCCollectionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect(System.Int32,System.GCCollectionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect (generation As Integer, mode As GCCollectionMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect(int generation, GCCollectionMode mode);" />
      <MemberSignature Language="F#" Value="static member Collect : int * GCCollectionMode -&gt; unit" Usage="System.GC.Collect (generation, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.GCCollectionMode" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generation"><span data-ttu-id="14956-205">Количество старших поколений, для которых следует выполнить сборку мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-205">The number of the oldest generation to be garbage collected.</span></span></param>
        <param name="mode"><span data-ttu-id="14956-206">Значение перечисления, указывающее, является ли сборка мусора принудительной (<see cref="F:System.GCCollectionMode.Default" /> или <see cref="F:System.GCCollectionMode.Forced" />) или оптимизированной (<see cref="F:System.GCCollectionMode.Optimized" />).</span><span class="sxs-lookup"><span data-stu-id="14956-206">An enumeration value that specifies whether the garbage collection is forced (<see cref="F:System.GCCollectionMode.Default" /> or <see cref="F:System.GCCollectionMode.Forced" />) or optimized (<see cref="F:System.GCCollectionMode.Optimized" />).</span></span></param>
        <summary><span data-ttu-id="14956-207">Принудительно запускает немедленную сборку мусора начиная с нулевого поколения и вплоть до указанного поколения в момент времени, заданный значением <see cref="T:System.GCCollectionMode" />.</span><span class="sxs-lookup"><span data-stu-id="14956-207">Forces a garbage collection from generation 0 through a specified generation, at a time specified by a <see cref="T:System.GCCollectionMode" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-208">Используйте параметр `mode`, чтобы указать, следует ли выполнять сборку мусора немедленно или только в том случае, если время является оптимальным для освобождения объектов.</span><span class="sxs-lookup"><span data-stu-id="14956-208">Use the `mode` parameter to specify whether garbage collection should occur immediately or only if the time is optimal to reclaim objects.</span></span> <span data-ttu-id="14956-209">Использование этого метода не гарантирует высвобождения всей недоступной памяти в указанном поколении.</span><span class="sxs-lookup"><span data-stu-id="14956-209">Using this method does not guarantee that all inaccessible memory in the specified generation is reclaimed.</span></span>  
  
 <span data-ttu-id="14956-210">Чтобы настроить агрессивность сборки мусора во время критических периодов в приложении, задайте свойство <xref:System.Runtime.GCSettings.LatencyMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-210">To adjust the intrusiveness of garbage collection during critical periods in your application, set the <xref:System.Runtime.GCSettings.LatencyMode%2A> property.</span></span>  
  
 <span data-ttu-id="14956-211">Сборщик мусора не выполняет сбор объектов с номером поколения выше, чем указано параметром `generation`.</span><span class="sxs-lookup"><span data-stu-id="14956-211">The garbage collector does not collect objects with a generation number higher than specified by the `generation` parameter.</span></span> <span data-ttu-id="14956-212">Чтобы определить максимальное допустимое значение `generation`, используйте свойство <xref:System.GC.MaxGeneration%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-212">Use the <xref:System.GC.MaxGeneration%2A> property to determine the maximum valid value of `generation`.</span></span>  
  
 <span data-ttu-id="14956-213">Чтобы сборщик мусора рассматривал все объекты независимо от их поколения, используйте версию этого метода, которая не принимает параметров.</span><span class="sxs-lookup"><span data-stu-id="14956-213">To have the garbage collector consider all objects regardless of their generation, use the version of this method that takes no parameters.</span></span>  
  
 <span data-ttu-id="14956-214">Чтобы сборщик мусора высвободить объекты вплоть до указанного поколения объектов, используйте перегрузку метода <xref:System.GC.Collect%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="14956-214">To have the garbage collector reclaim objects up to a specified generation of objects, use the <xref:System.GC.Collect%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="14956-215">При указании максимального поколения выполняется сбор всех объектов.</span><span class="sxs-lookup"><span data-stu-id="14956-215">When you specify the maximum generation, all objects are collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-216">В следующем примере выполняется принудительная сборка мусора для объектов поколения 2 с параметром <xref:System.GCCollectionMode.Optimized>.</span><span class="sxs-lookup"><span data-stu-id="14956-216">The following example forces a garbage collection for generation 2 objects with the <xref:System.GCCollectionMode.Optimized> setting.</span></span>  
  
 [!code-csharp[System.GC.GCCollectionMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.GCCollectionMode/cs/Program.cs#1)]
 [!code-vb[System.GC.GCCollectionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.GCCollectionMode/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-217">Недопустимый параметр <paramref name="generation" />.</span><span class="sxs-lookup"><span data-stu-id="14956-217"><paramref name="generation" /> is not valid.</span></span>  
  
<span data-ttu-id="14956-218">- или -</span><span class="sxs-lookup"><span data-stu-id="14956-218">-or-</span></span> 
 <span data-ttu-id="14956-219"><paramref name="mode" /> не является одним из значений <see cref="T:System.GCCollectionMode" />.</span><span class="sxs-lookup"><span data-stu-id="14956-219"><paramref name="mode" /> is not one of the <see cref="T:System.GCCollectionMode" /> values.</span></span></exception>
        <related type="Article" href="~/docs/standard/garbage-collection/induced.md"><span data-ttu-id="14956-220">Индуцированные коллекции</span><span class="sxs-lookup"><span data-stu-id="14956-220">Induced Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect (int generation, GCCollectionMode mode, bool blocking);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect(int32 generation, valuetype System.GCCollectionMode mode, bool blocking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect (generation As Integer, mode As GCCollectionMode, blocking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect(int generation, GCCollectionMode mode, bool blocking);" />
      <MemberSignature Language="F#" Value="static member Collect : int * GCCollectionMode * bool -&gt; unit" Usage="System.GC.Collect (generation, mode, blocking)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.GCCollectionMode" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="blocking" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generation"><span data-ttu-id="14956-221">Количество старших поколений, для которых следует выполнить сборку мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-221">The number of the oldest generation to be garbage collected.</span></span></param>
        <param name="mode"><span data-ttu-id="14956-222">Значение перечисления, указывающее, является ли сборка мусора принудительной (<see cref="F:System.GCCollectionMode.Default" /> или <see cref="F:System.GCCollectionMode.Forced" />) или оптимизированной (<see cref="F:System.GCCollectionMode.Optimized" />).</span><span class="sxs-lookup"><span data-stu-id="14956-222">An enumeration value that specifies whether the garbage collection is forced (<see cref="F:System.GCCollectionMode.Default" /> or <see cref="F:System.GCCollectionMode.Forced" />) or optimized (<see cref="F:System.GCCollectionMode.Optimized" />).</span></span></param>
        <param name="blocking"><span data-ttu-id="14956-223">Значение <see langword="true" /> для выполнения блокирующей сборки мусора; значение <see langword="false" /> для выполнения фоновой сборки мусора, где это возможно.</span><span class="sxs-lookup"><span data-stu-id="14956-223"><see langword="true" /> to perform a blocking garbage collection; <see langword="false" /> to perform a background garbage collection where possible.</span></span></param>
        <summary><span data-ttu-id="14956-224">Принудительная сборка мусора с поколения 0 до указанного поколения во время, указанное значением <see cref="T:System.GCCollectionMode" />, со значением, указывающим, должна ли сборка быть блокирующей.</span><span class="sxs-lookup"><span data-stu-id="14956-224">Forces a garbage collection from generation 0 through a specified generation, at a time specified by a <see cref="T:System.GCCollectionMode" /> value, with a value specifying whether the collection should be blocking.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-225">В следующей таблице приведены сведения о взаимодействии параметров `mode` и `blocking`.</span><span class="sxs-lookup"><span data-stu-id="14956-225">The following table summarizes the interaction of the `mode` and `blocking` parameters:</span></span>  
  
|`mode`|<span data-ttu-id="14956-226">`blocking` равно `true`</span><span class="sxs-lookup"><span data-stu-id="14956-226">`blocking` is `true`</span></span>|<span data-ttu-id="14956-227">`blocking` равно `false`</span><span class="sxs-lookup"><span data-stu-id="14956-227">`blocking` is `false`</span></span>|  
|-|-|-|  
|<span data-ttu-id="14956-228"><xref:System.GCCollectionMode.Forced> или <xref:System.GCCollectionMode.Default></span><span class="sxs-lookup"><span data-stu-id="14956-228"><xref:System.GCCollectionMode.Forced> or <xref:System.GCCollectionMode.Default></span></span>|<span data-ttu-id="14956-229">Блокирующий сбор выполнится, как только это станет возможным.</span><span class="sxs-lookup"><span data-stu-id="14956-229">A blocking collection is performed as soon as possible.</span></span> <span data-ttu-id="14956-230">Если фоновая коллекция выполняется, а `generation` равен 0 или 1, метод <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> немедленно активирует блокирующую коллекцию и возвращает значение после завершения сбора.</span><span class="sxs-lookup"><span data-stu-id="14956-230">If a background collection is in progress and `generation` is 0 or 1, the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> method immediately triggers a blocking collection and returns when the collection is finished.</span></span> <span data-ttu-id="14956-231">Если фоновая коллекция выполняется и `generation` равен 2, метод ждет завершения фоновой коллекции, запускает сборку блокировки поколения 2, а затем возвращает.</span><span class="sxs-lookup"><span data-stu-id="14956-231">If a background collection is in progress and `generation` is 2, the method waits until the background collection is finished, triggers a blocking generation 2 collection, and then returns.</span></span>|<span data-ttu-id="14956-232">Сборка выполнится, как только это станет возможным.</span><span class="sxs-lookup"><span data-stu-id="14956-232">A collection is performed as soon as possible.</span></span> <span data-ttu-id="14956-233">Метод <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> запрашивает фоновую сборку, но не гарантирует этот режим. В зависимости от обстоятельств может выполняться блокирующая сборка.</span><span class="sxs-lookup"><span data-stu-id="14956-233">The <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> method requests a background collection, but this is not guaranteed; depending on the circumstances, a blocking collection may still be performed.</span></span> <span data-ttu-id="14956-234">Если фоновая сборка уже выполняется, метод возвращает управление немедленно.</span><span class="sxs-lookup"><span data-stu-id="14956-234">If a background collection is already in progress, the method returns immediately.</span></span>|  
|<xref:System.GCCollectionMode.Optimized>|<span data-ttu-id="14956-235">Заблокированная коллекция может быть выполнена в зависимости от состояния сборщика мусора и параметра `generation`.</span><span class="sxs-lookup"><span data-stu-id="14956-235">A blocking collection may be performed, depending on the state of the garbage collector and the `generation` parameter.</span></span> <span data-ttu-id="14956-236">Сборщик мусора пытается обеспечить оптимальную производительность.</span><span class="sxs-lookup"><span data-stu-id="14956-236">The garbage collector tries to provide optimal performance.</span></span>|<span data-ttu-id="14956-237">Коллекция может быть выполнена в зависимости от состояния сборщика мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-237">A collection may be performed, depending on the state of the garbage collector.</span></span> <span data-ttu-id="14956-238">Метод <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> запрашивает фоновую коллекцию, однако это не гарантированно. В зависимости от обстоятельств блокирующая коллекция может выполняться.</span><span class="sxs-lookup"><span data-stu-id="14956-238">The <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> method requests a background collection, but this is not guaranteed; depending on the circumstances, a blocking collection may still be performed.</span></span> <span data-ttu-id="14956-239">Сборщик мусора пытается обеспечить оптимальную производительность.</span><span class="sxs-lookup"><span data-stu-id="14956-239">The garbage collector tries to provide optimal performance.</span></span> <span data-ttu-id="14956-240">Если фоновая сборка уже выполняется, метод возвращает управление немедленно.</span><span class="sxs-lookup"><span data-stu-id="14956-240">If a background collection is already in progress, the method returns immediately.</span></span>|  
  
 <span data-ttu-id="14956-241">Если при вызове метода <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> выполняется полная блокировка сборки мусора, можно также сжать кучу больших объектов, установив для свойства <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> значение <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> перед вызовом метода <xref:System.GC.Collect%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-241">If a call to the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%29> method performs a full blocking garbage collection, you can also compact the large object heap by setting the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> property to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> before calling the <xref:System.GC.Collect%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-242">Недопустимый параметр <paramref name="generation" />.</span><span class="sxs-lookup"><span data-stu-id="14956-242"><paramref name="generation" /> is not valid.</span></span>  
  
<span data-ttu-id="14956-243">- или -</span><span class="sxs-lookup"><span data-stu-id="14956-243">-or-</span></span> 
 <span data-ttu-id="14956-244"><paramref name="mode" /> не является одним из значений <see cref="T:System.GCCollectionMode" /> .</span><span class="sxs-lookup"><span data-stu-id="14956-244"><paramref name="mode" /> is not one of the <see cref="T:System.GCCollectionMode" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Collect">
      <MemberSignature Language="C#" Value="public static void Collect (int generation, GCCollectionMode mode, bool blocking, bool compacting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Collect(int32 generation, valuetype System.GCCollectionMode mode, bool blocking, bool compacting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Collect (generation As Integer, mode As GCCollectionMode, blocking As Boolean, compacting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Collect(int generation, GCCollectionMode mode, bool blocking, bool compacting);" />
      <MemberSignature Language="F#" Value="static member Collect : int * GCCollectionMode * bool * bool -&gt; unit" Usage="System.GC.Collect (generation, mode, blocking, compacting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.GCCollectionMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="blocking" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="compacting" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="generation"><span data-ttu-id="14956-245">Количество старших поколений, для которых следует выполнить сборку мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-245">The number of the oldest generation to be garbage collected.</span></span></param>
        <param name="mode"><span data-ttu-id="14956-246">Значение перечисления, указывающее, является ли сборка мусора принудительной (<see cref="F:System.GCCollectionMode.Default" /> или <see cref="F:System.GCCollectionMode.Forced" />) или оптимизированной (<see cref="F:System.GCCollectionMode.Optimized" />).</span><span class="sxs-lookup"><span data-stu-id="14956-246">An enumeration value that specifies whether the garbage collection is forced (<see cref="F:System.GCCollectionMode.Default" /> or <see cref="F:System.GCCollectionMode.Forced" />) or optimized (<see cref="F:System.GCCollectionMode.Optimized" />).</span></span></param>
        <param name="blocking"><span data-ttu-id="14956-247">Значение <see langword="true" /> для выполнения сборки мусора с блокировкой; значение <see langword="false" /> для выполнения фоновой сборки мусора, где это возможно.</span><span class="sxs-lookup"><span data-stu-id="14956-247"><see langword="true" /> to perform a blocking garbage collection; <see langword="false" /> to perform a background garbage collection where possible.</span></span></param>
        <param name="compacting"><span data-ttu-id="14956-248">Значение <see langword="true" />, чтобы сжимать кучу маленьких объектов; значение <see langword="false" />, чтобы только очищать.</span><span class="sxs-lookup"><span data-stu-id="14956-248"><see langword="true" /> to compact the small object heap; <see langword="false" /> to sweep only.</span></span></param>
        <summary><span data-ttu-id="14956-249">Принудительная сборка мусора с поколения 0 до указанного поколения во время, указанное значением <see cref="T:System.GCCollectionMode" />, со значениями, указывающими, должна ли сборка быть блокирующей и сжимающей.</span><span class="sxs-lookup"><span data-stu-id="14956-249">Forces a garbage collection from generation 0 through a specified generation, at a time specified by a <see cref="T:System.GCCollectionMode" /> value, with values that specify whether the collection should be blocking and compacting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-250">Если `blocking` `false`, сборщик мусора решает, следует ли выполнять фоновую сборку или блокирование сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-250">If `blocking` is `false`, the GC decides whether to perform a background or a blocking garbage collection.</span></span> <span data-ttu-id="14956-251">Если `compacting` `true`, выполняется блокировка сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-251">If `compacting` is `true`, it performs a blocking garbage collection.</span></span>  
  
 <span data-ttu-id="14956-252">Если `compacting` `true`, среда выполнения сжимает небольшую кучу объектов (SOH).</span><span class="sxs-lookup"><span data-stu-id="14956-252">If `compacting` is `true`, the runtime compacts the small object heap (SOH).</span></span> <span data-ttu-id="14956-253">Куча больших объектов (LOH) не сжимается, если свойство <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> не имеет значение <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="14956-253">The large object heap (LOH) is not compacted unless the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> property is set to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>.</span></span> <span data-ttu-id="14956-254">Обратите внимание, что сюда входят все блокирующие сборки мусора, а не только полные блокировки сборок мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-254">Note that this includes all blocking garbage collections, not just full blocking garbage collections.</span></span>  
  
 <span data-ttu-id="14956-255">Можно вызвать метод <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29>, чтобы уменьшить управляемую кучу до наименьшего размера, как показано в следующем фрагменте кода.</span><span class="sxs-lookup"><span data-stu-id="14956-255">You can call the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29> method to reduce the managed heap to the smallest size possible, as the following code fragment illustrates.</span></span>  
  
 [!code-csharp[System.GC.Collect#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect/cs/collect4.cs#1)]
 [!code-vb[System.GC.Collect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect/vb/collect4.vb#1)]  
  
 <span data-ttu-id="14956-256">Указание `true` для аргумента `compacting` гарантирует сжатие полной блокирующей сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-256">Specifying `true` for the `compacting` argument guarantees a compacting, full blocking garbage collection.</span></span> <span data-ttu-id="14956-257">Присвоение свойству <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> значения <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> гарантирует сжатие значений LOH и SOH.</span><span class="sxs-lookup"><span data-stu-id="14956-257">Setting the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A?displayProperty=nameWithType> property to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType> ensures that both the LOH and SOH are compacted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionCount">
      <MemberSignature Language="C#" Value="public static int CollectionCount (int generation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CollectionCount(int32 generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.CollectionCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CollectionCount (generation As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CollectionCount(int generation);" />
      <MemberSignature Language="F#" Value="static member CollectionCount : int -&gt; int" Usage="System.GC.CollectionCount generation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generation"><span data-ttu-id="14956-258">Поколение объектов, для которого будет определено количество операций сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-258">The generation of objects for which the garbage collection count is to be determined.</span></span></param>
        <summary><span data-ttu-id="14956-259">Возвращает количество операций сборки мусора, выполненных для заданного поколения объектов.</span><span class="sxs-lookup"><span data-stu-id="14956-259">Returns the number of times garbage collection has occurred for the specified generation of objects.</span></span></summary>
        <returns><span data-ttu-id="14956-260">Количество операций сборки мусора, выполненных для заданного поколения объектов с начала процесса.</span><span class="sxs-lookup"><span data-stu-id="14956-260">The number of times garbage collection has occurred for the specified generation since the process was started.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-261">При реализации собственного управления ресурсами может потребоваться периодическое принудительное выполнение сборки мусора путем вызова метода <xref:System.GC.Collect%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-261">If you implement your own resource management, you might need to force garbage collection periodically by calling the <xref:System.GC.Collect%2A> method.</span></span> <span data-ttu-id="14956-262">Поскольку это трудоемкая операция, можно повысить производительность, пропуская вызов, когда сборка мусора была выполнена недавно.</span><span class="sxs-lookup"><span data-stu-id="14956-262">Because this is an expensive operation, you can improve performance by skipping the call when a garbage collection has occurred recently.</span></span> <span data-ttu-id="14956-263">Сохраните значение, возвращаемое <xref:System.GC.CollectionCount%2A>, сразу после вызова <xref:System.GC.Collect%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-263">Save the value returned by <xref:System.GC.CollectionCount%2A> immediately after calling <xref:System.GC.Collect%2A>.</span></span> <span data-ttu-id="14956-264">В следующий раз, когда необходимо вызвать <xref:System.GC.Collect%2A>, сравните текущее значение, возвращенное <xref:System.GC.CollectionCount%2A>, с сохраненным значением.</span><span class="sxs-lookup"><span data-stu-id="14956-264">The next time you need to call <xref:System.GC.Collect%2A>, compare the current value returned by <xref:System.GC.CollectionCount%2A> to the saved value.</span></span> <span data-ttu-id="14956-265">Если два значения равны, в промежуточной коллекции не выполнялась коллекция, и разумно вызвать <xref:System.GC.Collect%2A> снова.</span><span class="sxs-lookup"><span data-stu-id="14956-265">If the two values are equal, no collection has occurred in the interim and it is reasonable to call <xref:System.GC.Collect%2A> again.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-266">Значение параметра <paramref name="generation" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="14956-266"><paramref name="generation" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndNoGCRegion">
      <MemberSignature Language="C#" Value="public static void EndNoGCRegion ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndNoGCRegion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.EndNoGCRegion" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndNoGCRegion ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndNoGCRegion();" />
      <MemberSignature Language="F#" Value="static member EndNoGCRegion : unit -&gt; unit" Usage="System.GC.EndNoGCRegion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14956-267">Завершает режим задержки без области сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-267">Ends the no GC region latency mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-268">Метод <xref:System.GC.EndNoGCRegion%2A> создает исключение <xref:System.InvalidOperationException>, если сборщик мусора не находится в режиме задержки без области GC.</span><span class="sxs-lookup"><span data-stu-id="14956-268">The <xref:System.GC.EndNoGCRegion%2A> method throws an <xref:System.InvalidOperationException> if the garbage collector is not in no GC region latency mode.</span></span> <span data-ttu-id="14956-269">Это происходит при выполнении любого из следующих условий.</span><span class="sxs-lookup"><span data-stu-id="14956-269">This occurs under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="14956-270">Метод <xref:System.GC.TryStartNoGCRegion%2A> не был вызван ранее.</span><span class="sxs-lookup"><span data-stu-id="14956-270">The <xref:System.GC.TryStartNoGCRegion%2A> method was not called previously.</span></span>  
  
-   <span data-ttu-id="14956-271">Вызов метода <xref:System.GC.TryStartNoGCRegion%2A> вернул `false`.</span><span class="sxs-lookup"><span data-stu-id="14956-271">The call to the <xref:System.GC.TryStartNoGCRegion%2A> method returned `false`.</span></span>  
  
-   <span data-ttu-id="14956-272">Вызов метода <xref:System.GC.TryStartNoGCRegion%2A> вызвал исключение.</span><span class="sxs-lookup"><span data-stu-id="14956-272">The call to the <xref:System.GC.TryStartNoGCRegion%2A> method threw an exception.</span></span>  
  
 <span data-ttu-id="14956-273">Исключение можно предотвратить по любой из этих причин, используя следующий код:</span><span class="sxs-lookup"><span data-stu-id="14956-273">You can prevent an exception for any of these reasons by using code such as the following:</span></span>  
  
 [!code-csharp[System.GC.EndNoGCRegion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.endnogcregion/cs/endnogcregion1.cs#1)]
 [!code-vb[System.GC.EndNoGCRegion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.endnogcregion/vb/endnogcregion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="14956-274">Сборщик мусора не находится в режиме задержки без области сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-274">The garbage collector is not in no GC region latency mode.</span></span>  
  
<span data-ttu-id="14956-275">- или -</span><span class="sxs-lookup"><span data-stu-id="14956-275">-or-</span></span> 
<span data-ttu-id="14956-276">Режим задержки без области сборки мусора был завершен заранее, поскольку была вызвана сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-276">The no GC region latency mode was ended previously because a garbage collection was induced.</span></span>  
  
<span data-ttu-id="14956-277">- или -</span><span class="sxs-lookup"><span data-stu-id="14956-277">-or-</span></span> 
<span data-ttu-id="14956-278">Выделение памяти превышает объем, указанный в вызове метода <see cref="M:System.GC.TryStartNoGCRegion(System.Int64)" />.</span><span class="sxs-lookup"><span data-stu-id="14956-278">A memory allocation exceeded the amount specified in the call to the <see cref="M:System.GC.TryStartNoGCRegion(System.Int64)" /> method.</span></span></exception>
        <altmember cref="M:System.GC.TryStartNoGCRegion(System.Int64)" />
        <altmember cref="P:System.Runtime.GCSettings.LatencyMode" />
        <related type="Article" href="~/docs/standard/garbage-collection/latency.md"><span data-ttu-id="14956-279">Режимы задержки</span><span class="sxs-lookup"><span data-stu-id="14956-279">Latency Modes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAllocatedBytesForCurrentThread">
      <MemberSignature Language="C#" Value="public static long GetAllocatedBytesForCurrentThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetAllocatedBytesForCurrentThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetAllocatedBytesForCurrentThread" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllocatedBytesForCurrentThread () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetAllocatedBytesForCurrentThread();" />
      <MemberSignature Language="F#" Value="static member GetAllocatedBytesForCurrentThread : unit -&gt; int64" Usage="System.GC.GetAllocatedBytesForCurrentThread " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14956-280">Возвращает общее число байтов, выделенных для текущего потока с начала времени его существования.</span><span class="sxs-lookup"><span data-stu-id="14956-280">Gets the total number of bytes allocated to the current thread since the beginning of its lifetime.</span></span></summary>
        <returns><span data-ttu-id="14956-281">Общее число байтов, выделенных для текущего потока с начала времени его существования.</span><span class="sxs-lookup"><span data-stu-id="14956-281">The total number of bytes allocated to the current thread since the beginning of its lifetime.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="14956-282">Метод `GetAllocatedBytesForCurrentThread` возвращает общее число байтов, выделенных в управляемой куче в течение времени существования потока, а не общее число байтов с несохранившимся сбором мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-282">The `GetAllocatedBytesForCurrentThread` method returns the total number of bytes allocated on the managed heap during the lifetime of a thread, not the total number of bytes that have survived garbage collection.</span></span> <span data-ttu-id="14956-283">Возвращаемое значение также не включает в себя никакие машинные выделения.</span><span class="sxs-lookup"><span data-stu-id="14956-283">The returned value also does not include any native allocations.</span></span>

<span data-ttu-id="14956-284">Этот метод наиболее удобен в сценариях мониторинга для измерения разницы в выделении памяти между интервалами времени или событиями.</span><span class="sxs-lookup"><span data-stu-id="14956-284">This method is most useful in monitoring scenarios for measuring the difference in memory allocation between time intervals or events.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGCMemoryInfo">
      <MemberSignature Language="C#" Value="public static GCMemoryInfo GetGCMemoryInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.GCMemoryInfo GetGCMemoryInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetGCMemoryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGCMemoryInfo () As GCMemoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static GCMemoryInfo GetGCMemoryInfo();" />
      <MemberSignature Language="F#" Value="static member GetGCMemoryInfo : unit -&gt; GCMemoryInfo" Usage="System.GC.GetGCMemoryInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.GCMemoryInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14956-285">Возвращает сведения о памяти при сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-285">Gets garbage collection memory information.</span></span></summary>
        <returns><span data-ttu-id="14956-286">Объект, содержащий сведения об использовании памяти сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-286">An object that contains information about the garbage collector's memory usage.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGeneration">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14956-287">Возвращает текущий номер поколения объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-287">Returns the current generation number of an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGeneration">
      <MemberSignature Language="C#" Value="public static int GetGeneration (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetGeneration(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetGeneration(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGeneration (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetGeneration(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetGeneration : obj -&gt; int" Usage="System.GC.GetGeneration obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="14956-288">Объект, информация о поколении которого извлекается.</span><span class="sxs-lookup"><span data-stu-id="14956-288">The object that generation information is retrieved for.</span></span></param>
        <summary><span data-ttu-id="14956-289">Возвращает номер текущего поколения указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-289">Returns the current generation number of the specified object.</span></span></summary>
        <returns><span data-ttu-id="14956-290">Текущий номер поколения <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="14956-290">The current generation number of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-291">Используйте этот метод, чтобы определить возраст объекта, а затем использовать эту информацию с методом <xref:System.GC.Collect%2A> для принудительного сбора сборщиком мусора объектов в одном и том же формировании.</span><span class="sxs-lookup"><span data-stu-id="14956-291">Use this method to determine the age of an object, and then use that information with the <xref:System.GC.Collect%2A> method to force the garbage collector to collect objects in the same generation.</span></span> <span data-ttu-id="14956-292">Например, этот метод используется при наличии набора объектов, которые создаются как группа и становятся недоступными одновременно.</span><span class="sxs-lookup"><span data-stu-id="14956-292">For example, use this method when you have a set of objects that are created as a group and that become inaccessible at the same time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-293">В следующем примере показано, как использовать метод <xref:System.GC.GetGeneration%2A> для определения возраста объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-293">The following example demonstrates how to use the <xref:System.GC.GetGeneration%2A> method to determine the age of an object.</span></span> <span data-ttu-id="14956-294">Затем в примере выполняется сборка мусора для очистки памяти и сравнения итогов предварительной и завершающей памяти коллекции в консоли.</span><span class="sxs-lookup"><span data-stu-id="14956-294">The example then performs garbage collections to clean up memory and compare the pre and post collection memory totals in the console.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.GC.MaxGeneration" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneration">
      <MemberSignature Language="C#" Value="public static int GetGeneration (WeakReference wo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetGeneration(class System.WeakReference wo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetGeneration(System.WeakReference)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGeneration (wo As WeakReference) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetGeneration(WeakReference ^ wo);" />
      <MemberSignature Language="F#" Value="static member GetGeneration : WeakReference -&gt; int" Usage="System.GC.GetGeneration wo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wo" Type="System.WeakReference" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="wo"><span data-ttu-id="14956-295">Объект <see cref="T:System.WeakReference" />, указывающий на целевой объект, номер поколения которого требуется определить.</span><span class="sxs-lookup"><span data-stu-id="14956-295">A <see cref="T:System.WeakReference" /> that refers to the target object whose generation number is to be determined.</span></span></param>
        <summary><span data-ttu-id="14956-296">Возвращает текущий номер поколения для целевого объекта указанной слабой ссылки.</span><span class="sxs-lookup"><span data-stu-id="14956-296">Returns the current generation number of the target of a specified weak reference.</span></span></summary>
        <returns><span data-ttu-id="14956-297">Текущий номер поколения для целевого объекта <paramref name="wo" />.</span><span class="sxs-lookup"><span data-stu-id="14956-297">The current generation number of the target of <paramref name="wo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14956-298">В следующем примере показано использование метода <xref:System.GC.GetGeneration%2A> для определения возраста объекта слабой ссылки.</span><span class="sxs-lookup"><span data-stu-id="14956-298">The following example demonstrates the use of the <xref:System.GC.GetGeneration%2A> method to determine the age of a weak reference object.</span></span>  
  
 [!code-cpp[System.GC.GetGenerationWeak Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.GetGenerationWeak Example/CPP/systemgcgetgenerationweak.cpp#1)]
 [!code-csharp[System.GC.GetGenerationWeak Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.GetGenerationWeak Example/CS/systemgcgetgenerationweak.cs#1)]
 [!code-vb[System.GC.GetGenerationWeak Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.GetGenerationWeak Example/VB/systemgcgetgenerationweak.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="14956-299">Сборка мусора уже выполнена для <paramref name="wo" />.</span><span class="sxs-lookup"><span data-stu-id="14956-299">Garbage collection has already been performed on <paramref name="wo" />.</span></span></exception>
        <altmember cref="P:System.GC.MaxGeneration" />
      </Docs>
    </Member>
    <Member MemberName="GetTotalAllocatedBytes">
      <MemberSignature Language="C#" Value="public static long GetTotalAllocatedBytes (bool precise = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTotalAllocatedBytes(bool precise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetTotalAllocatedBytes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTotalAllocatedBytes (Optional precise As Boolean = false) As Long" />
      <MemberSignature Language="F#" Value="static member GetTotalAllocatedBytes : bool -&gt; int64" Usage="System.GC.GetTotalAllocatedBytes precise" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="precise" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="precise"><span data-ttu-id="14956-300">Если <see langword="true" />, соберите точное число; в противном случае соберите приблизительное количество.</span><span class="sxs-lookup"><span data-stu-id="14956-300">If <see langword="true" />, gather a precise number; otherwise, gather an approximate count.</span></span> <span data-ttu-id="14956-301">Сбор точных значений влечет за собой значительное снижение производительности.</span><span class="sxs-lookup"><span data-stu-id="14956-301">Gathering a precise value entails a significant performance penalty.</span></span></param>
        <summary><span data-ttu-id="14956-302">Возвращает число байтов, выделенных за время существования процесса.</span><span class="sxs-lookup"><span data-stu-id="14956-302">Gets a count of the bytes allocated over the lifetime of the process.</span></span></summary>
        <returns><span data-ttu-id="14956-303">Общее число байтов, выделенных за время существования процесса.</span><span class="sxs-lookup"><span data-stu-id="14956-303">The total number of bytes allocated over the lifetime of the process.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTotalMemory">
      <MemberSignature Language="C#" Value="public static long GetTotalMemory (bool forceFullCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTotalMemory(bool forceFullCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.GetTotalMemory(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTotalMemory (forceFullCollection As Boolean) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTotalMemory(bool forceFullCollection);" />
      <MemberSignature Language="F#" Value="static member GetTotalMemory : bool -&gt; int64" Usage="System.GC.GetTotalMemory forceFullCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forceFullCollection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forceFullCollection"><span data-ttu-id="14956-304">Значение <see langword="true" />, указывающий, что перед возвратом этот метод может дождаться выполнения сборки мусора; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14956-304"><see langword="true" /> to indicate that this method can wait for garbage collection to occur before returning; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="14956-305">Извлекает предполагаемое количество выделенных в данный момент байтов.</span><span class="sxs-lookup"><span data-stu-id="14956-305">Retrieves the number of bytes currently thought to be allocated.</span></span> <span data-ttu-id="14956-306">Параметр указывает, может ли этот метод выдержать короткий интервал времени ожидания перед возвратом, пока система выполняет сборку мусора и завершает объекты.</span><span class="sxs-lookup"><span data-stu-id="14956-306">A parameter indicates whether this method can wait a short interval before returning, to allow the system to collect garbage and finalize objects.</span></span></summary>
        <returns><span data-ttu-id="14956-307">Наилучшая доступная аппроксимация числа байтов, распределенных в данный момент в управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-307">A number that is the best available approximation of the number of bytes currently allocated in managed memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-308">Если параметр `forceFullCollection` имеет значение `true`, этот метод ожидает короткий интервал перед возвратом, пока система собирает мусор и завершает объекты.</span><span class="sxs-lookup"><span data-stu-id="14956-308">If the `forceFullCollection` parameter is `true`, this method waits a short interval before returning while the system collects garbage and finalizes objects.</span></span> <span data-ttu-id="14956-309">Длительность интервала — это внутренний заданный предел, определяемый числом завершенных циклов сборки мусора и изменением объема памяти, восстановленного между циклами.</span><span class="sxs-lookup"><span data-stu-id="14956-309">The duration of the interval is an internally specified limit determined by the number of garbage collection cycles completed and the change in the amount of memory recovered between cycles.</span></span> <span data-ttu-id="14956-310">Сборщик мусора не гарантирует, что вся недоступная память будет собрана.</span><span class="sxs-lookup"><span data-stu-id="14956-310">The garbage collector does not guarantee that all inaccessible memory is collected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-311">В следующем примере показано, как использовать метод <xref:System.GC.GetTotalMemory%2A> для получения и отображения числа байтов, выделенных в данный момент в управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-311">The following example demonstrates how to use the <xref:System.GC.GetTotalMemory%2A> method to get and display the number of bytes currently allocated in managed memory.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public static void KeepAlive (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void KeepAlive(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.KeepAlive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub KeepAlive (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void KeepAlive(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member KeepAlive : obj -&gt; unit" Usage="System.GC.KeepAlive obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="14956-312">Объект для ссылки.</span><span class="sxs-lookup"><span data-stu-id="14956-312">The object to reference.</span></span></param>
        <summary><span data-ttu-id="14956-313">Ссылается на указанный объект, делая его недоступным для сборщика мусора с момента начала текущей процедуры до вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="14956-313">References the specified object, which makes it ineligible for garbage collection from the start of the current routine to the point where this method is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-314">Цель метода <xref:System.GC.KeepAlive%2A> заключается в обеспечении существования ссылки на объект, который может быть преждевременно освобожден сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-314">The purpose of the <xref:System.GC.KeepAlive%2A> method is to ensure the existence of a reference to an object that is at risk of being prematurely reclaimed by the garbage collector.</span></span> <span data-ttu-id="14956-315">Типичный сценарий, в котором это может произойти, заключается в отсутствии ссылок на объект в управляемом коде или данных, но объект по-прежнему используется в неуправляемом коде, например в API-интерфейсах Windows, неуправляемых библиотеках DLL или методах, использующих COM.</span><span class="sxs-lookup"><span data-stu-id="14956-315">A common scenario where this might happen is when there are no references to the object in managed code or data, but the object is still in use in unmanaged code such as Windows APIs, unmanaged DLLs, or methods using COM.</span></span>  
  
 <span data-ttu-id="14956-316">Этот метод ссылается на параметр `obj`, что делает этот объект недоступным для сборки мусора от начала подпрограммы до точки в порядке выполнения, где вызывается этот метод.</span><span class="sxs-lookup"><span data-stu-id="14956-316">This method references the `obj` parameter, making that object ineligible for garbage collection from the start of the routine to the point, in execution order, where this method is called.</span></span> <span data-ttu-id="14956-317">Код этого метода в конце, а не в начале диапазона инструкций, где `obj` должны быть доступны.</span><span class="sxs-lookup"><span data-stu-id="14956-317">Code this method at the end, not the beginning, of the range of instructions where `obj` must be available.</span></span>  
  
 <span data-ttu-id="14956-318">Метод <xref:System.GC.KeepAlive%2A> не выполняет никаких операций и не создает побочных эффектов, кроме расширения времени существования объекта, переданного в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="14956-318">The <xref:System.GC.KeepAlive%2A> method performs no operation and produces no side effects other than extending the lifetime of the object passed in as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-319">В следующем примере кода создается объект в начале метода `Main` и он не ссылается на объект повторно до конца, при вызове метода <xref:System.GC.KeepAlive%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-319">The following code example creates an object at the beginning of its `Main` method and does not refer to the object again until the end, when the <xref:System.GC.KeepAlive%2A> method is called.</span></span> <span data-ttu-id="14956-320">Объект сохраняется в течение 30-секундного срока `Main` метода, несмотря на вызовы методов <xref:System.GC.Collect%2A> и <xref:System.GC.WaitForPendingFinalizers%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-320">The object persists for the 30-second duration of the `Main` method, despite calls to the <xref:System.GC.Collect%2A> and <xref:System.GC.WaitForPendingFinalizers%2A> methods.</span></span>  
  
 [!code-cpp[System.GC.KeepAlive Example2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.KeepAlive Example2/CPP/gckeepalive.cpp#1)]
 [!code-csharp[System.GC.KeepAlive Example2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.KeepAlive Example2/CS/gckeepalive.cs#1)]
 [!code-vb[System.GC.KeepAlive Example2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.KeepAlive Example2/VB/gckeepalive.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxGeneration">
      <MemberSignature Language="C#" Value="public static int MaxGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxGeneration" />
      <MemberSignature Language="DocId" Value="P:System.GC.MaxGeneration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxGeneration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxGeneration { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxGeneration : int" Usage="System.GC.MaxGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14956-321">Возвращает наибольшее число поколений, поддерживаемое системой в настоящее время.</span><span class="sxs-lookup"><span data-stu-id="14956-321">Gets the maximum number of generations that the system currently supports.</span></span></summary>
        <value><span data-ttu-id="14956-322">Значение от нуля до максимального числа поддерживаемых поколений.</span><span class="sxs-lookup"><span data-stu-id="14956-322">A value that ranges from zero to the maximum number of supported generations.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-323">Номер поколения (или возраст объекта) представляет собой относительную меру, определенную реализацией объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-323">The generation number, or age, of an object is an implementation-defined relative measure of an object's lifespan.</span></span> <span data-ttu-id="14956-324">Недавно созданные объекты находятся в поколении 0, а самые старые объекты имеют поколение, меньшее или равное поколению, возвращенному свойством <xref:System.GC.MaxGeneration%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-324">The most recently created objects are in generation 0 and the oldest objects are in a generation less than or equal to the generation returned by the <xref:System.GC.MaxGeneration%2A> property.</span></span>  
  
 <span data-ttu-id="14956-325">Сборщик мусора предполагает, что более новая память может быть доступна для сборки мусора по сравнению с более старыми объемами памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-325">The garbage collector assumes that newer memory is more likely to be eligible for garbage collection than older memory.</span></span> <span data-ttu-id="14956-326">Таким образом, сборщик мусора повышает производительность, изменяя номера поколений каждый раз, когда она освобождает память, а значение свойства <xref:System.GC.MaxGeneration%2A> может увеличиваться со временем.</span><span class="sxs-lookup"><span data-stu-id="14956-326">Therefore, the garbage collector improves its performance by adjusting generation numbers each time it reclaims memory, and the <xref:System.GC.MaxGeneration%2A> property value can grow over time.</span></span>  
  
 <span data-ttu-id="14956-327">Если реализуется устаревание объекта, свойство <xref:System.GC.MaxGeneration%2A> Возвращает максимальный номер поколения, используемый системой. в противном случае это свойство возвращает ноль.</span><span class="sxs-lookup"><span data-stu-id="14956-327">If object aging is implemented, the <xref:System.GC.MaxGeneration%2A> property returns the maximum generation number used by the system; otherwise, this property returns zero.</span></span>  
  
 <span data-ttu-id="14956-328">Для этой реализации значение, возвращаемое свойством <xref:System.GC.MaxGeneration>, гарантированно остается постоянным в течение времени существования работающего приложения.</span><span class="sxs-lookup"><span data-stu-id="14956-328">For this implementation, the value returned by the <xref:System.GC.MaxGeneration> property is guaranteed to remain constant for the lifetime of an executing application.</span></span>  
  
 <span data-ttu-id="14956-329">Используйте свойство <xref:System.GC.MaxGeneration>, чтобы определить максимальное значение, которое можно указать при вызове метода <xref:System.GC.Collect%28System.Int32%29>, принимающего параметр создания.</span><span class="sxs-lookup"><span data-stu-id="14956-329">Use the <xref:System.GC.MaxGeneration> property to determine the maximum value you can specify when calling the <xref:System.GC.Collect%28System.Int32%29> method that takes a generation parameter.</span></span>
 
 
## Examples  
 <span data-ttu-id="14956-330">В следующем примере показано, как использовать свойство <xref:System.GC.MaxGeneration> для отображения самого крупного номера поколения, используемого в данный момент.</span><span class="sxs-lookup"><span data-stu-id="14956-330">The following example demonstrates how to use the <xref:System.GC.MaxGeneration> property to display the largest generation number currently in use.</span></span>  
  
 [!code-cpp[System.GC.Collect Int Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.gc.collect int example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.Collect Int Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.collect int example/CS/class1.cs#1)]
 [!code-vb[System.GC.Collect Int Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.collect int example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>        
        <altmember cref="M:System.GC.GetGeneration(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForFullGCNotification">
      <MemberSignature Language="C#" Value="public static void RegisterForFullGCNotification (int maxGenerationThreshold, int largeObjectHeapThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterForFullGCNotification(int32 maxGenerationThreshold, int32 largeObjectHeapThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.RegisterForFullGCNotification(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterForFullGCNotification (maxGenerationThreshold As Integer, largeObjectHeapThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterForFullGCNotification(int maxGenerationThreshold, int largeObjectHeapThreshold);" />
      <MemberSignature Language="F#" Value="static member RegisterForFullGCNotification : int * int -&gt; unit" Usage="System.GC.RegisterForFullGCNotification (maxGenerationThreshold, largeObjectHeapThreshold)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxGenerationThreshold" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="largeObjectHeapThreshold" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="maxGenerationThreshold"><span data-ttu-id="14956-331">Число от 1 до 99, указывающее условия создания уведомления в зависимости от объектов, выделенных в поколение 2.</span><span class="sxs-lookup"><span data-stu-id="14956-331">A number between 1 and 99 that specifies when the notification should be raised based on the objects allocated in generation 2.</span></span></param>
        <param name="largeObjectHeapThreshold"><span data-ttu-id="14956-332">Число от 1 до 99, указывающее условия создания уведомления в зависимости от объектов, помещенных в кучу больших объектов.</span><span class="sxs-lookup"><span data-stu-id="14956-332">A number between 1 and 99 that specifies when the notification should be raised based on objects allocated in the large object heap.</span></span></param>
        <summary><span data-ttu-id="14956-333">Указывает, что необходимо отправлять уведомления о сборке мусора, когда соблюдены условия для полной сборки мусора и когда завершена сборка.</span><span class="sxs-lookup"><span data-stu-id="14956-333">Specifies that a garbage collection notification should be raised when conditions favor full garbage collection and when the collection has been completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-334">Для каждого поколения сборщик мусора устанавливает пороговое значение для выделений в этом поколении.</span><span class="sxs-lookup"><span data-stu-id="14956-334">For each generation, the garbage collector sets a threshold for allocations into that generation.</span></span> <span data-ttu-id="14956-335">Если размер выделений превышает это пороговое значение, в этом поколении активируется сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-335">When the size of allocations exceeds this threshold, a garbage collection is triggered on that generation.</span></span> <span data-ttu-id="14956-336">Например, если пороговое значение поколения 2 — 20 МБ (это означает, что 20 МБ остается в коллекции поколения 1 и передается в поколение 2), а более 20 МБ имеет поколение 1, а в поколении — в поколение 2, будет предпринята следующая сборка мусора. как семейство поколений 2.</span><span class="sxs-lookup"><span data-stu-id="14956-336">For example, if generation 2's threshold is 20MB (which means that 20MB survives generation 1 collections and is promoted into generation 2), and more than 20MB has survived generation 1 and is prompted into generation 2, the next garbage collection will be attempted as a generation 2 collection.</span></span> <span data-ttu-id="14956-337">Аналогично, если пороговое значение кучи больших объектов (LOH) равно 20 МБ и ваше приложение выделило больше 20 МБ больших объектов, то следующая сборка мусора также будет предпринята как коллекция поколения 2 (так как LOH собирается только в сборках мусора Gen2).</span><span class="sxs-lookup"><span data-stu-id="14956-337">Similarly, if the large object heap's (LOH's) threshold is 20MB and your app has allocated more than 20MB of large objects, the next garbage collection will also be attempted as a generation 2 collection (since the LOH is only collected in gen2 garbage collections).</span></span>  
  
 <span data-ttu-id="14956-338">Пороговые значения `maxGenerationThreshold` и `largeObjectHeapThreshold` управляют тем, насколько заранее вы получаете уведомления до полной сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-338">The `maxGenerationThreshold` and `largeObjectHeapThreshold` thresholds control how much in advance you are notified before a full garbage collection occurs.</span></span> <span data-ttu-id="14956-339">Чем больше пороговое значение, тем больше выделений, которые могут возникнуть между уведомлениями и следующей полной сборкой мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-339">The greater the threshold, the more allocations that can occur between notification and the next full garbage collection.</span></span>  
  
 <span data-ttu-id="14956-340">При наличии ситуаций, в которых полная сборка мусора в среде CLR неблагоприятно повлияет на производительность приложения, можно запросить получение уведомления о том, что среда выполнения собирается выполнить полную сборку мусора, и обойти эту коллекцию, выполнив сборку самостоятельно (используя метод <xref:System.GC.Collect%2A>), когда условия все еще приемлемы.</span><span class="sxs-lookup"><span data-stu-id="14956-340">If you have situations in which a full garbage collection by the common language runtime would adversely affect your application's performance, you can ask to be notified when the runtime is about to do a full garbage collection and circumvent that collection by inducing a collection yourself (using the <xref:System.GC.Collect%2A> method) when conditions are still favorable.</span></span> <span data-ttu-id="14956-341">В дополнение к самостоятельному изменению расписания сбора мусора полное уведомление GC полезно в следующих сценариях:</span><span class="sxs-lookup"><span data-stu-id="14956-341">In addition to changing the garbage collection schedule yourself, full GC notification is useful in following the scenarios:</span></span>  
  
-   <span data-ttu-id="14956-342">Вы отслеживаете подход полной сборки мусора, и, когда вы получаете уведомления о том, что один из них приближается, вы уменьшаете объем данных в реальном времени (например, освобождая некоторые записи кэша).</span><span class="sxs-lookup"><span data-stu-id="14956-342">You monitor for the approach of a full garbage collection and, when you are notified that one is approaching, you reduce live data size (for example, by releasing some cache entries).</span></span> <span data-ttu-id="14956-343">В результате, когда происходит сборка мусора, она может освободить больше памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-343">As a result, when the garbage collection occurs, it is able to reclaim more memory.</span></span>  
  
-   <span data-ttu-id="14956-344">Вы наблюдаете за завершением полной сборки мусора, чтобы можно было собирать статистику.</span><span class="sxs-lookup"><span data-stu-id="14956-344">You monitor for the completion of a full garbage collection so that you can collect some statistics.</span></span>  <span data-ttu-id="14956-345">Например, может потребоваться измерение размера кучи при завершении сборки мусора, чтобы вы узнали размер данных в реальном времени.</span><span class="sxs-lookup"><span data-stu-id="14956-345">For example, you might want to measure the size of the heap at GC completion so that you know the size of live data.</span></span> <span data-ttu-id="14956-346">(После полного GC куча имеет свой наименьший размер.)</span><span class="sxs-lookup"><span data-stu-id="14956-346">(After a full GC, the heap is at its smallest size.)</span></span>  
  
 <span data-ttu-id="14956-347">Дополнительные сведения о том, что представляет полную сборку мусора, см. в разделе [уведомления о сборке мусора](~/docs/standard/garbage-collection/notifications.md).</span><span class="sxs-lookup"><span data-stu-id="14956-347">For more information about what represents a full garbage collection, see [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md).</span></span>  
  
 <span data-ttu-id="14956-348">При регистрации для уведомления о сборке мусора можно получать уведомления о приближении полной сборки мусора и ее завершении.</span><span class="sxs-lookup"><span data-stu-id="14956-348">When you register for a garbage collection notification, you can be notified when a full garbage collection is approaching and when it is completed.</span></span> <span data-ttu-id="14956-349">Этот шаблон напоминает, как операционная система отслеживает уведомления о нехватке памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-349">This pattern resembles how the operating system monitors for low memory notifications.</span></span>  
  
 <span data-ttu-id="14956-350">При указании параметров `maxGenerationThreshold` и `largeObjectHeapThreshold` используйте следующие рекомендации.</span><span class="sxs-lookup"><span data-stu-id="14956-350">Use the following guidelines for specifying the `maxGenerationThreshold` and `largeObjectHeapThreshold` parameters:</span></span>  
  
-   <span data-ttu-id="14956-351">Чем больше пороговое значение, тем больше ресурсов будет выделяться между уведомлением и полной сборкой мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-351">The larger the threshold value, the more allocations will occur between the notification and the full garbage collection.</span></span>  
  
     <span data-ttu-id="14956-352">Чем больше пороговое значение, тем больше возможностей среда выполнения проверяет на наличие подхода к коллекции.</span><span class="sxs-lookup"><span data-stu-id="14956-352">A larger threshold value provides more opportunities for the runtime to check for an approaching collection.</span></span> <span data-ttu-id="14956-353">Это повышает вероятность уведомления.</span><span class="sxs-lookup"><span data-stu-id="14956-353">This increases the likelihood that you will be notified.</span></span> <span data-ttu-id="14956-354">Однако не следует задавать слишком высокую пороговое значение, так как это приводит к большему выделению памяти до того, как среда выполнения вызовет следующую коллекцию.</span><span class="sxs-lookup"><span data-stu-id="14956-354">However, you should not set the threshold too high because that results in a more allocations before the runtime induces the next collection.</span></span>  
  
     <span data-ttu-id="14956-355">Когда вы вызываете коллекцию самостоятельно при уведомлении, используя большое пороговое значение, освобождается меньше объектов, чем будет освобождено следующей коллекцией среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="14956-355">When you induce a collection yourself upon notification using a high threshold value, fewer objects are reclaimed than would be reclaimed by the runtime's next collection.</span></span>  
  
-   <span data-ttu-id="14956-356">Чем меньше пороговое значение, тем меньше выделений между уведомлением и полной сборкой мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-356">The smaller the threshold value, the fewer the allocations between notification and the full garbage collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-357">В следующем примере показано, как зарегистрировать уведомление о сборке мусора и запустить поток для отслеживания состояния уведомления о сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-357">The following example shows how to register a garbage collection notification and start a thread to monitor the status of the garbage collection notification.</span></span> <span data-ttu-id="14956-358">Этот пример кода является частью большого примера, приведенного в разделе [уведомления о сборке мусора](~/docs/standard/garbage-collection/notifications.md) .</span><span class="sxs-lookup"><span data-stu-id="14956-358">This code example is part of a larger example provided for [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md) topic.</span></span>  
  
 [!code-cpp[GCNotification#2](~/samples/snippets/cpp/VS_Snippets_CLR/GCNotification/cpp/program.cpp#2)]
 [!code-csharp[GCNotification#2](~/samples/snippets/csharp/VS_Snippets_CLR/GCNotification/cs/Program.cs#2)]
 [!code-vb[GCNotification#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GCNotification/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-359">Значение параметра <paramref name="maxGenerationThreshold" /> или <paramref name="largeObjectHeapThreshold" /> не входит в диапазон от 1 до 99.</span><span class="sxs-lookup"><span data-stu-id="14956-359"><paramref name="maxGenerationThreshold" /> or <paramref name="largeObjectHeapThreshold" /> is not between 1 and 99.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="14956-360">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="14956-360">for full trust for the immediate caller.</span></span> <span data-ttu-id="14956-361">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-361">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="14956-362">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-362">requires full trust for the immediate caller.</span></span> <span data-ttu-id="14956-363">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-363">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/garbage-collection/notifications.md"><span data-ttu-id="14956-364">Уведомления о сборке мусора</span><span class="sxs-lookup"><span data-stu-id="14956-364">Garbage Collection Notifications</span></span></related>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="14956-365">Этот член недоступен, если включена параллельная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-365">This member is not available when concurrent garbage collection is enabled.</span></span> <span data-ttu-id="14956-366">Сведения об отключении параллельной сборки мусора см. в статье, посвященной параметру среды выполнения &lt;gcConcurrent&gt;.</span><span class="sxs-lookup"><span data-stu-id="14956-366">See the &lt;gcConcurrent&gt; runtime setting for information about how to disable concurrent garbage collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveMemoryPressure">
      <MemberSignature Language="C#" Value="public static void RemoveMemoryPressure (long bytesAllocated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMemoryPressure(int64 bytesAllocated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.RemoveMemoryPressure(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMemoryPressure (bytesAllocated As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMemoryPressure(long bytesAllocated);" />
      <MemberSignature Language="F#" Value="static member RemoveMemoryPressure : int64 -&gt; unit" Usage="System.GC.RemoveMemoryPressure bytesAllocated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesAllocated" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytesAllocated"><span data-ttu-id="14956-367">Объем, на который увеличен объем освобожденной неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-367">The amount of unmanaged memory that has been released.</span></span></param>
        <summary><span data-ttu-id="14956-368">Информирует среду выполнения о том, что неуправляемая память освобождена и ее более не требуется учитывать при планировании сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-368">Informs the runtime that unmanaged memory has been released and no longer needs to be taken into account when scheduling garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-369">При определении расписания сборки мусора среда выполнения учитывает объем выделяемой управляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-369">In determining when to schedule garbage collection, the runtime takes into account how much managed memory is allocated.</span></span> <span data-ttu-id="14956-370">Если небольшой управляемый объект выделяет большой объем неуправляемой памяти, среда выполнения учитывает только управляемую память и, таким же, недооценивает срочность планирования сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-370">If a small managed object allocates a large amount of unmanaged memory, the runtime takes into account only the managed memory, and thus underestimates the urgency of scheduling garbage collection.</span></span> <span data-ttu-id="14956-371">Метод <xref:System.GC.AddMemoryPressure%2A> информирует среду выполнения о дополнительной нехватке системной памяти, а метод <xref:System.GC.RemoveMemoryPressure%2A> информирует среду выполнения о том, что была освобождена дополнительная нагрузка.</span><span class="sxs-lookup"><span data-stu-id="14956-371">The <xref:System.GC.AddMemoryPressure%2A> method informs the runtime of this additional pressure on system memory, and the <xref:System.GC.RemoveMemoryPressure%2A> method informs the runtime that the additional pressure has been released.</span></span>  
  
 <span data-ttu-id="14956-372">В простейшем шаблоне использования управляемый объект выделяет неуправляемую память в конструкторе и освобождает ее в методе `Dispose` или `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="14956-372">In the simplest usage pattern, a managed object allocates unmanaged memory in the constructor and releases it in the `Dispose` or `Finalize` method.</span></span> <span data-ttu-id="14956-373">Вызовите метод <xref:System.GC.AddMemoryPressure%2A> после выделения неуправляемой памяти и вызовите метод <xref:System.GC.RemoveMemoryPressure%2A> после его освобождения.</span><span class="sxs-lookup"><span data-stu-id="14956-373">Call the <xref:System.GC.AddMemoryPressure%2A> method after allocating the unmanaged memory, and call the <xref:System.GC.RemoveMemoryPressure%2A> method after releasing it.</span></span>  
  
 <span data-ttu-id="14956-374">В более сложных сценариях, где неуправляемое выделение памяти существенно меняется в течение времени существования управляемого объекта, можно вызвать методы <xref:System.GC.AddMemoryPressure%2A> и <xref:System.GC.RemoveMemoryPressure%2A>, чтобы передать эти добавочные изменения в среду выполнения.</span><span class="sxs-lookup"><span data-stu-id="14956-374">In more complicated scenarios, where the unmanaged memory allocation changes substantially during the lifetime of the managed object, you can call the <xref:System.GC.AddMemoryPressure%2A> and <xref:System.GC.RemoveMemoryPressure%2A> methods to communicate these incremental changes to the runtime.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="14956-375">Необходимо убедиться, что вы удалили только добавляемый уровень нагрузки.</span><span class="sxs-lookup"><span data-stu-id="14956-375">You must ensure that you remove exactly the amount of pressure you add.</span></span> <span data-ttu-id="14956-376">Если этого не сделать, это может негативно сказаться на производительности системы в приложениях, работающих в течение длительного периода времени.</span><span class="sxs-lookup"><span data-stu-id="14956-376">Failing to do so can adversely affect the performance of the system in applications that run for long periods of time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-377"><paramref name="bytesAllocated" /> меньше или равно 0.</span><span class="sxs-lookup"><span data-stu-id="14956-377"><paramref name="bytesAllocated" /> is less than or equal to 0.</span></span>  
  
<span data-ttu-id="14956-378">- или -</span><span class="sxs-lookup"><span data-stu-id="14956-378">-or-</span></span> 
<span data-ttu-id="14956-379">На 32-разрядном компьютере <paramref name="bytesAllocated" /> больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="14956-379">On a 32-bit computer, <paramref name="bytesAllocated" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="14956-380">для возможности вызова неуправляемого кода при управлении приоритетом сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-380">for the ability to call unmanaged code when manipulating garbage-collection priority.</span></span> <span data-ttu-id="14956-381">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="14956-381">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="14956-382">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-382">requires full trust for the immediate caller.</span></span> <span data-ttu-id="14956-383">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-383">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ReRegisterForFinalize">
      <MemberSignature Language="C#" Value="public static void ReRegisterForFinalize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReRegisterForFinalize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.ReRegisterForFinalize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReRegisterForFinalize (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReRegisterForFinalize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member ReRegisterForFinalize : obj -&gt; unit" Usage="System.GC.ReRegisterForFinalize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="14956-384">Объект, для которого должен быть вызван метод завершения.</span><span class="sxs-lookup"><span data-stu-id="14956-384">The object that a finalizer must be called for.</span></span></param>
        <summary><span data-ttu-id="14956-385">Требует, чтобы система вызвала метод завершения для указанного объекта, для которого ранее был вызван метод <see cref="M:System.GC.SuppressFinalize(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="14956-385">Requests that the system call the finalizer for the specified object for which <see cref="M:System.GC.SuppressFinalize(System.Object)" /> has previously been called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-386">Метод <xref:System.GC.ReRegisterForFinalize%2A> добавляет параметр `obj` в список объектов, которые запрашивают завершение, прежде чем сборщик мусора освободит объект.</span><span class="sxs-lookup"><span data-stu-id="14956-386">The <xref:System.GC.ReRegisterForFinalize%2A> method adds the `obj` parameter to the list of objects that request finalization before the garbage collector frees the object.</span></span> <span data-ttu-id="14956-387">Параметр `obj` должен быть вызывающим объектом этого метода.</span><span class="sxs-lookup"><span data-stu-id="14956-387">The `obj` parameter must be the caller of this method.</span></span>  
  
 <span data-ttu-id="14956-388">Вызов метода <xref:System.GC.ReRegisterForFinalize%2A> не гарантирует, что сборщик мусора вызовет метод завершения объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-388">Calling the <xref:System.GC.ReRegisterForFinalize%2A> method does not guarantee that the garbage collector will call an object's finalizer.</span></span>  
  
 <span data-ttu-id="14956-389">По умолчанию все объекты, реализующие методы завершения, добавляются в список объектов, требующих финализации. Однако объект, возможно, уже был завершен или может быть отключен при завершении, вызвав метод <xref:System.GC.SuppressFinalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-389">By default, all objects that implement finalizers are added to the list of objects that require finalization; however, an object might have already been finalized or might have disabled finalization by calling the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="14956-390">Финализатор может использовать этот метод, чтобы восстановить себя или объект, на который он ссылается.</span><span class="sxs-lookup"><span data-stu-id="14956-390">A finalizer can use this method to resurrect itself or an object that it references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-391">В следующем примере показано, как использовать метод <xref:System.GC.ReRegisterForFinalize%2A> для окончательного завершения объекта после сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-391">The following example demonstrates how to use the <xref:System.GC.ReRegisterForFinalize%2A> method to finalize an object a second time after garbage collection.</span></span>  
  
 [!code-cpp[System.GC.ReregisterForFinalize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.ReRegisterForFinalize Example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.ReregisterForFinalize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.ReRegisterForFinalize Example/CS/class1.cs#1)]
 [!code-vb[System.GC.ReregisterForFinalize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.ReRegisterForFinalize Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14956-392">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14956-392"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.GC.SuppressFinalize(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SuppressFinalize">
      <MemberSignature Language="C#" Value="public static void SuppressFinalize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SuppressFinalize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.SuppressFinalize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SuppressFinalize (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SuppressFinalize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member SuppressFinalize : obj -&gt; unit" Usage="System.GC.SuppressFinalize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="14956-393">Объект, метод завершения для которого не должен выполняться.</span><span class="sxs-lookup"><span data-stu-id="14956-393">The object whose finalizer must not be executed.</span></span></param>
        <summary><span data-ttu-id="14956-394">Сообщает среде CLR, что она на не должна вызывать метод завершения для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-394">Requests that the common language runtime not call the finalizer for the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="14956-395">Этот метод задает бит в заголовке объекта `obj`, который среда выполнения проверяет при вызове методов завершения.</span><span class="sxs-lookup"><span data-stu-id="14956-395">This method sets a bit in the object header of `obj`, which the runtime checks when calling finalizers.</span></span> <span data-ttu-id="14956-396">Метод завершения, представленный методом <xref:System.Object.Finalize%2A?displayProperty=nameWithType>, используется для освобождения неуправляемых ресурсов перед сбором мусора для объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-396">A finalizer, which is represented by the <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method, is used to release unmanaged resources before an object is garbage-collected.</span></span> <span data-ttu-id="14956-397">Если `obj` не имеет метода завершения или сборщик мусора уже сообщил потоку метода завершения о необходимости запуска метода завершения, то обращение к методу <xref:System.GC.SuppressFinalize%2A> не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="14956-397">If `obj` does not have a finalizer or the GC has already signaled the finalizer thread to run the finalizer, the call to the <xref:System.GC.SuppressFinalize%2A> method has no effect.</span></span>  
  
 <span data-ttu-id="14956-398">Объекты, реализующие интерфейс <xref:System.IDisposable>, могут вызывать этот метод из реализации <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> объекта, чтобы предотвратить вызов сборщиком мусора <xref:System.Object.Finalize%2A?displayProperty=nameWithType> для объекта, который не требует этого.</span><span class="sxs-lookup"><span data-stu-id="14956-398">Objects that implement the <xref:System.IDisposable> interface can call this method from the object's <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation to prevent the garbage collector from calling <xref:System.Object.Finalize%2A?displayProperty=nameWithType> on an object that does not require it.</span></span> <span data-ttu-id="14956-399">Как правило, это делается, чтобы метод завершения не выпустил неуправляемые ресурсы, которые уже были освобождены реализацией <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="14956-399">Typically, this is done to prevent the finalizer from releasing unmanaged resources that have already been freed by the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-400">В следующем примере показано, как использовать метод <xref:System.GC.SuppressFinalize%2A> в классе ресурсов, чтобы предотвратить вызов избыточной сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-400">The following example demonstrates how to use the <xref:System.GC.SuppressFinalize%2A> method in a resource class to prevent a redundant garbage collection from being called.</span></span> <span data-ttu-id="14956-401">В примере [шаблон Dispose](~/docs/standard/garbage-collection/implementing-dispose.md) используется для высвобождения управляемых ресурсов (то есть объектов, реализующих <xref:System.IDisposable>) и неуправляемых ресурсов.</span><span class="sxs-lookup"><span data-stu-id="14956-401">The example uses the [dispose pattern](~/docs/standard/garbage-collection/implementing-dispose.md) to free both managed resources (that is, objects that implement <xref:System.IDisposable>) and unmanaged resources.</span></span>  
  
 [!code-csharp[System.GC.SuppressFinalize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.gc.suppressfinalize/cs/suppressfinalize1.cs#1)]
 [!code-vb[System.GC.SuppressFinalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.gc.suppressfinalize/vb/suppressfinalize1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="14956-402">Свойство <paramref name="obj" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="14956-402"><paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.GC.ReRegisterForFinalize(System.Object)" />
        <altmember cref="M:System.Object.Finalize" />
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="14956-403">Шаблон ликвидации</span><span class="sxs-lookup"><span data-stu-id="14956-403">Dispose Pattern</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryStartNoGCRegion">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14956-404">Пытается запретить сборку мусора во время выполнения критического пути.</span><span class="sxs-lookup"><span data-stu-id="14956-404">Attempts to disallow garbage collection during the execution of a critical path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="14956-405">Нельзя вкладывать вызовы в метод <xref:System.GC.TryStartNoGCRegion%2A>, и следует вызывать метод <xref:System.GC.EndNoGCRegion%2A> только в том случае, если среда выполнения в настоящее время находится в режиме задержки в области GC.</span><span class="sxs-lookup"><span data-stu-id="14956-405">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="14956-406">Иными словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы завершаются неудачно), и не следует рассчитывать на то, что вызов <xref:System.GC.EndNoGCRegion%2A> завершится только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> выполнен.</span><span class="sxs-lookup"><span data-stu-id="14956-406">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.GC.EndNoGCRegion" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryStartNoGCRegion">
      <MemberSignature Language="C#" Value="public static bool TryStartNoGCRegion (long totalSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryStartNoGCRegion(int64 totalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.TryStartNoGCRegion(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryStartNoGCRegion (totalSize As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryStartNoGCRegion(long totalSize);" />
      <MemberSignature Language="F#" Value="static member TryStartNoGCRegion : int64 -&gt; bool" Usage="System.GC.TryStartNoGCRegion totalSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalSize" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="totalSize"><span data-ttu-id="14956-407">Объем памяти в байтах для выделения без запуска сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-407">The amount of memory in bytes to allocate without triggering a garbage collection.</span></span> <span data-ttu-id="14956-408">Он должен быть меньше или равен размеру временного сегмента.</span><span class="sxs-lookup"><span data-stu-id="14956-408">It must be less than or equal to the size of an ephemeral segment.</span></span> <span data-ttu-id="14956-409">Сведения о размере эфемерных сегментов см. в разделе "Эфемерные поколения и сегменты" статьи [Основы сборки мусора](~/docs/standard/garbage-collection/fundamentals.md).</span><span class="sxs-lookup"><span data-stu-id="14956-409">For information on the size of an ephemeral segment, see the "Ephemeral generations and segments" section in the [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md) article.</span></span></param>
        <summary><span data-ttu-id="14956-410">Пытается запретить сборку мусора во время выполнения критического пути, если доступен указанный достаточный объем памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-410">Attempts to disallow garbage collection during the execution of a critical path if a specified amount of memory is available.</span></span></summary>
        <returns><span data-ttu-id="14956-411">Значение <see langword="true" />, если среде выполнения удалось зафиксировать необходимый объем памяти и сборщик мусора может перейти в режим задержки без области сборки мусора; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14956-411"><see langword="true" /> if the runtime was able to commit the required amount of memory and the garbage collector is able to enter no GC region latency mode; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-412">Метод <xref:System.GC.TryStartNoGCRegion%28System.Int64%29> пытается поместить сборщик мусора в режим задержки без области GC, который запрещает сбор мусора, пока приложение выполняет критическую область кода.</span><span class="sxs-lookup"><span data-stu-id="14956-412">The <xref:System.GC.TryStartNoGCRegion%28System.Int64%29> method attempts to place the garbage collector in no GC region latency mode, which disallows garbage collection while an app executes a critical region of code.</span></span>  <span data-ttu-id="14956-413">Если среда выполнения не может изначально выделить запрошенный объем памяти, сборщик мусора выполняет полную блокированную сборку мусора при попытке освободить дополнительную память.</span><span class="sxs-lookup"><span data-stu-id="14956-413">If the runtime is unable to initially allocate the requested amount of memory, the garbage collector performs a full blocking garbage collection in an attempt to free additional memory.</span></span> <span data-ttu-id="14956-414">Сборщик мусора не переходит в режим задержки в области GC, если он способен выделить необходимый объем памяти, который в данном случае является 2 \* `totalSize` байт (он пытается выделить `totalSize` байт для кучи небольших объектов и `totalSize` байт для кучи больших объектов).</span><span class="sxs-lookup"><span data-stu-id="14956-414">The garbage collector enters no GC region latency mode if it is able to allocate the required amount of memory, which in this case is actually 2 \* `totalSize` bytes (it attempts to allocate `totalSize` bytes for the small object heap and `totalSize` bytes for the large object heap).</span></span>  
  
 <span data-ttu-id="14956-415">`totalSize` должны быть достаточно большими, чтобы обрабатывать все операции выделения памяти, происходящие в критическом пути.</span><span class="sxs-lookup"><span data-stu-id="14956-415">`totalSize` must be large enough to handle all memory allocations that occur in the critical path.</span></span> <span data-ttu-id="14956-416">Сюда входят выделения для приложения, а также выделения, которые среда выполнения делает от имени приложения.</span><span class="sxs-lookup"><span data-stu-id="14956-416">This includes allocations by the app, as well as allocations that the runtime makes on the app's behalf.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="14956-417">Нельзя вкладывать вызовы в метод <xref:System.GC.TryStartNoGCRegion%2A>, и следует вызывать метод <xref:System.GC.EndNoGCRegion%2A> только в том случае, если среда выполнения в настоящее время находится в режиме задержки в области GC.</span><span class="sxs-lookup"><span data-stu-id="14956-417">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="14956-418">Иными словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы завершаются неудачно), и не следует рассчитывать на то, что вызов <xref:System.GC.EndNoGCRegion%2A> завершится только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> выполнен.</span><span class="sxs-lookup"><span data-stu-id="14956-418">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 <span data-ttu-id="14956-419">Чтобы выйти из режима задержки без области GC, вызовите метод <xref:System.GC.EndNoGCRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-419">You exit the no GC region latency mode by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-420"><paramref name="totalSize" /> превышает размер эфемерного сегмента.</span><span class="sxs-lookup"><span data-stu-id="14956-420"><paramref name="totalSize" /> exceeds the ephemeral segment size.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="14956-421">Процесс уже находится в режиме задержки без области сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-421">The process is already in no GC region latency mode.</span></span></exception>
        <altmember cref="M:System.GC.EndNoGCRegion" />
        <related type="Article" href="~/docs/standard/garbage-collection/fundamentals.md"><span data-ttu-id="14956-422">Основы сборки мусора</span><span class="sxs-lookup"><span data-stu-id="14956-422">Fundamentals of Garbage Collection</span></span></related>
        <related type="Article" href="~/docs/standard/garbage-collection/latency.md"><span data-ttu-id="14956-423">Режимы задержки</span><span class="sxs-lookup"><span data-stu-id="14956-423">Latency Modes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryStartNoGCRegion">
      <MemberSignature Language="C#" Value="public static bool TryStartNoGCRegion (long totalSize, bool disallowFullBlockingGC);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryStartNoGCRegion(int64 totalSize, bool disallowFullBlockingGC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.TryStartNoGCRegion(System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryStartNoGCRegion (totalSize As Long, disallowFullBlockingGC As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryStartNoGCRegion(long totalSize, bool disallowFullBlockingGC);" />
      <MemberSignature Language="F#" Value="static member TryStartNoGCRegion : int64 * bool -&gt; bool" Usage="System.GC.TryStartNoGCRegion (totalSize, disallowFullBlockingGC)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalSize" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="disallowFullBlockingGC" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="totalSize"><span data-ttu-id="14956-424">Объем памяти в байтах для выделения без запуска сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-424">The amount of memory in bytes to allocate without triggering a garbage collection.</span></span> <span data-ttu-id="14956-425">Он должен быть меньше или равен размеру временного сегмента.</span><span class="sxs-lookup"><span data-stu-id="14956-425">It must be less than or equal to the size of an ephemeral segment.</span></span> <span data-ttu-id="14956-426">Сведения о размере эфемерных сегментов см. в разделе "Эфемерные поколения и сегменты" статьи [Основы сборки мусора](~/docs/standard/garbage-collection/fundamentals.md).</span><span class="sxs-lookup"><span data-stu-id="14956-426">For information on the size of an ephemeral segment, see the "Ephemeral generations and segments" section in the [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md) article.</span></span></param>
        <param name="disallowFullBlockingGC"><span data-ttu-id="14956-427">Значение <see langword="true" />, чтобы пропустить полную блокирующую сборку мусора, если сборщику мусора изначально не удалось выделить <paramref name="totalSize" /> байтов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14956-427"><see langword="true" /> to omit a full blocking garbage collection if the garbage collector is initially unable to allocate <paramref name="totalSize" /> bytes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="14956-428">Пытается запретить сборку мусора во время выполнения критического пути, если доступен указанный объем памяти, и устанавливает, будет ли выполняться полная блокирующая сборка мусора, если изначально не хватает памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-428">Attempts to disallow garbage collection during the execution of a critical path if a specified amount of memory is available, and controls whether the garbage collector does a full blocking garbage collection if not enough memory is initially available.</span></span></summary>
        <returns><span data-ttu-id="14956-429">Значение <see langword="true" />, если среде выполнения удалось зафиксировать необходимый объем памяти и сборщик мусора может перейти в режим задержки без области сборки мусора; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14956-429"><see langword="true" /> if the runtime was able to commit the required amount of memory and the garbage collector is able to enter no GC region latency mode; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-430">Метод <xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Boolean%29> пытается поместить сборщик мусора в режим задержки без области GC, который запрещает сбор мусора, пока приложение выполняет критическую область кода.</span><span class="sxs-lookup"><span data-stu-id="14956-430">The <xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Boolean%29> method attempts to place the garbage collector in no GC region latency mode, which disallows garbage collection while an app executes a critical region of code.</span></span>  <span data-ttu-id="14956-431">Если среда выполнения не может изначально выделить запрошенный объем памяти и аргумент `disallowFullBlockingGC` `false`, сборщик мусора выполняет полную блокирующую сборку мусора при попытке освободить дополнительную память. в противном случае выделение завершается ошибкой, а метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="14956-431">If the runtime is unable to initially allocate the requested amount of memory and the `disallowFullBlockingGC` argument is `false`, the garbage collector performs a full blocking garbage collection in an attempt to free additional memory; otherwise, the allocation fails, and the method returns `false`.</span></span> <span data-ttu-id="14956-432">Сборщик мусора не переходит в режим задержки в области GC, если он способен выделить необходимый объем памяти, который в данном случае является 2 \* `totalSize` (он пытается выделить `totalSize` для кучи небольших объектов и `totalSize` для кучи больших объектов).</span><span class="sxs-lookup"><span data-stu-id="14956-432">The garbage collector enters no GC region latency mode if it is able to allocate the required amount of memory, which in this case is actually 2 \* `totalSize` (it attempts to allocate `totalSize` for the small object heap and `totalSize` for the large object heap).</span></span>  
  
 <span data-ttu-id="14956-433">`totalSize` должны быть достаточно большими, чтобы обрабатывать все операции выделения памяти, происходящие в критическом пути.</span><span class="sxs-lookup"><span data-stu-id="14956-433">`totalSize` must be large enough to handle all memory allocations that occur in the critical path.</span></span> <span data-ttu-id="14956-434">Сюда входят выделения для приложения, а также выделения, которые среда выполнения делает от имени приложения.</span><span class="sxs-lookup"><span data-stu-id="14956-434">This includes allocations by the app, as well as allocations that the runtime makes on the app's behalf.</span></span>  
  
 <span data-ttu-id="14956-435">Если в сценариях балансировки нагрузки не хватает памяти, при установке `disallowFullBlockingGC` в значение `true` для предотвращения полной блокирующей сборки мусора. одна система может вызывать этот метод и сообщать о готовности принимать запросы, если он возвращает `true`, и иметь возможность перенаправить запросы в другие системы, если она возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="14956-435">Setting `disallowFullBlockingGC` to `true` to prevent a full blocking garbage collection if not enough memory is initially available is most useful in load balancing scenarios: one system can call this method and report itself as ready to accept requests if it returns `true`, and have the load balancer redirect requests to other systems if it returns `false`.</span></span> <span data-ttu-id="14956-436">После этого можно выполнить полную блокирующую сборку мусора, когда запросы не обрабатываются путем вызова метода <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29>.</span><span class="sxs-lookup"><span data-stu-id="14956-436">It can then do a full blocking garbage collection when it's not handling requests by calling the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="14956-437">Нельзя вкладывать вызовы в метод <xref:System.GC.TryStartNoGCRegion%2A>, и следует вызывать метод <xref:System.GC.EndNoGCRegion%2A> только в том случае, если среда выполнения в настоящее время находится в режиме задержки в области GC.</span><span class="sxs-lookup"><span data-stu-id="14956-437">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="14956-438">Иными словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы завершаются неудачно), и не следует рассчитывать на то, что вызов <xref:System.GC.EndNoGCRegion%2A> завершится только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> выполнен.</span><span class="sxs-lookup"><span data-stu-id="14956-438">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 <span data-ttu-id="14956-439">Чтобы выйти из режима задержки без области GC, вызовите метод <xref:System.GC.EndNoGCRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-439">You exit the no GC region latency mode by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-440"><paramref name="totalSize" /> превышает размер эфемерного сегмента.</span><span class="sxs-lookup"><span data-stu-id="14956-440"><paramref name="totalSize" /> exceeds the ephemeral segment size.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="14956-441">Процесс уже находится в режиме задержки без области сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-441">The process is already in no GC region latency mode.</span></span></exception>
        <altmember cref="M:System.GC.EndNoGCRegion" />
        <related type="Article" href="~/docs/standard/garbage-collection/fundamentals.md"><span data-ttu-id="14956-442">Основы сборки мусора</span><span class="sxs-lookup"><span data-stu-id="14956-442">Fundamentals of Garbage Collection</span></span></related>
        <related type="Article" href="~/docs/standard/garbage-collection/latency.md"><span data-ttu-id="14956-443">Режимы задержки</span><span class="sxs-lookup"><span data-stu-id="14956-443">Latency Modes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryStartNoGCRegion">
      <MemberSignature Language="C#" Value="public static bool TryStartNoGCRegion (long totalSize, long lohSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryStartNoGCRegion(int64 totalSize, int64 lohSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.TryStartNoGCRegion(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryStartNoGCRegion (totalSize As Long, lohSize As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryStartNoGCRegion(long totalSize, long lohSize);" />
      <MemberSignature Language="F#" Value="static member TryStartNoGCRegion : int64 * int64 -&gt; bool" Usage="System.GC.TryStartNoGCRegion (totalSize, lohSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalSize" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="lohSize" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="totalSize"><span data-ttu-id="14956-444">Объем памяти в байтах для выделения без запуска сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-444">The amount of memory in bytes to allocate without triggering a garbage collection.</span></span> <span data-ttu-id="14956-445">Значение <paramref name="totalSize" /> -<paramref name="lohSize" /> должно быть меньше или равно размеру эфемерного сегмента.</span><span class="sxs-lookup"><span data-stu-id="14956-445"><paramref name="totalSize" /> -<paramref name="lohSize" /> must be less than or equal to the size of an ephemeral segment.</span></span> <span data-ttu-id="14956-446">Сведения о размере эфемерных сегментов см. в разделе "Эфемерные поколения и сегменты" статьи [Основы сборки мусора](~/docs/standard/garbage-collection/fundamentals.md).</span><span class="sxs-lookup"><span data-stu-id="14956-446">For information on the size of an ephemeral segment, see the "Ephemeral generations and segments" section in the [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md) article.</span></span></param>
        <param name="lohSize"><span data-ttu-id="14956-447">Число байтов в <paramref name="totalSize" /> для назначения кучи больших объектов.</span><span class="sxs-lookup"><span data-stu-id="14956-447">The number of bytes in <paramref name="totalSize" /> to use for large object heap (LOH) allocations.</span></span></param>
        <summary><span data-ttu-id="14956-448">Пытается запретить сборку мусора во время выполнения критического пути, если указанный объем памяти доступен для кучи больших объектов и для кучи маленьких объектов.</span><span class="sxs-lookup"><span data-stu-id="14956-448">Attempts to disallow garbage collection during the execution of a critical path if a specified amount of memory is available for the large object heap and the small object heap.</span></span></summary>
        <returns><span data-ttu-id="14956-449">Значение <see langword="true" />, если среде выполнения удалось зафиксировать необходимый объем памяти и сборщик мусора может перейти в режим задержки без области сборки мусора; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14956-449"><see langword="true" /> if the runtime was able to commit the required amount of memory and the garbage collector is able to enter no GC region latency mode; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-450">Метод <xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Int64%29> пытается поместить сборщик мусора в режим задержки без области GC, который запрещает сбор мусора, пока приложение выполняет критическую область кода.</span><span class="sxs-lookup"><span data-stu-id="14956-450">The <xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Int64%29> method attempts to place the garbage collector in no GC region latency mode, which disallows garbage collection while an app executes a critical region of code.</span></span>  <span data-ttu-id="14956-451">Если среда выполнения не может изначально выделить запрошенный объем памяти, сборщик мусора выполняет полную блокированную сборку мусора при попытке освободить дополнительную память.</span><span class="sxs-lookup"><span data-stu-id="14956-451">If the runtime is unable to initially allocate the requested amount of memory, the garbage collector performs a full blocking garbage collection in an attempt to free additional memory.</span></span> <span data-ttu-id="14956-452">Сборщик мусора не переходит в режим задержки в области GC, если он способен выделить `lohSize` для LOH и `totalSize` - `lohSize` для кучи небольших объектов (SOH).</span><span class="sxs-lookup"><span data-stu-id="14956-452">The garbage collector enters no GC region latency mode if it is able to allocate `lohSize` for the LOH and `totalSize` - `lohSize` for the small object heap (SOH).</span></span>  
  
 <span data-ttu-id="14956-453">`lohSize` должны быть достаточно большими, чтобы обрабатывать все операции выделения памяти, происходящие в критическом пути для LOH, а `totalSize` - `lohSize` должны быть достаточно большими, чтобы обрабатывать все выделения памяти, происходящие в критическом пути для SOH.</span><span class="sxs-lookup"><span data-stu-id="14956-453">`lohSize` must be large enough to handle all memory allocations that occur in the critical path for the LOH, and `totalSize` - `lohSize` must be large enough to handle all memory allocations that occur in the critical path for the SOH.</span></span> <span data-ttu-id="14956-454">Сюда входят выделения для приложения, а также выделения, которые среда выполнения делает от имени приложения.</span><span class="sxs-lookup"><span data-stu-id="14956-454">This includes allocations by the app, as well as allocations that the runtime makes on the app's behalf.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="14956-455">Нельзя вкладывать вызовы в метод <xref:System.GC.TryStartNoGCRegion%2A>, и следует вызывать метод <xref:System.GC.EndNoGCRegion%2A> только в том случае, если среда выполнения в настоящее время находится в режиме задержки в области GC.</span><span class="sxs-lookup"><span data-stu-id="14956-455">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="14956-456">Иными словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы завершаются неудачно), и не следует рассчитывать на то, что вызов <xref:System.GC.EndNoGCRegion%2A> завершится только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> выполнен.</span><span class="sxs-lookup"><span data-stu-id="14956-456">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 <span data-ttu-id="14956-457">Чтобы выйти из режима задержки без области GC, вызовите метод <xref:System.GC.EndNoGCRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-457">You exit the no GC region latency mode by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-458"><paramref name="totalSize" /> - <paramref name="lohSize" /> превышает размер эфемерного сегмента.</span><span class="sxs-lookup"><span data-stu-id="14956-458"><paramref name="totalSize" /> - <paramref name="lohSize" /> exceeds the ephemeral segment size.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="14956-459">Процесс уже находится в режиме задержки без области сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-459">The process is already in no GC region latency mode.</span></span></exception>
        <altmember cref="M:System.GC.EndNoGCRegion" />
        <related type="Article" href="~/docs/standard/garbage-collection/fundamentals.md"><span data-ttu-id="14956-460">Основы сборки мусора</span><span class="sxs-lookup"><span data-stu-id="14956-460">Fundamentals of Garbage Collection</span></span></related>
        <related type="Article" href="~/docs/standard/garbage-collection/latency.md"><span data-ttu-id="14956-461">Режимы задержки</span><span class="sxs-lookup"><span data-stu-id="14956-461">Latency Modes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryStartNoGCRegion">
      <MemberSignature Language="C#" Value="public static bool TryStartNoGCRegion (long totalSize, long lohSize, bool disallowFullBlockingGC);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryStartNoGCRegion(int64 totalSize, int64 lohSize, bool disallowFullBlockingGC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.TryStartNoGCRegion(System.Int64,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryStartNoGCRegion (totalSize As Long, lohSize As Long, disallowFullBlockingGC As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryStartNoGCRegion(long totalSize, long lohSize, bool disallowFullBlockingGC);" />
      <MemberSignature Language="F#" Value="static member TryStartNoGCRegion : int64 * int64 * bool -&gt; bool" Usage="System.GC.TryStartNoGCRegion (totalSize, lohSize, disallowFullBlockingGC)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalSize" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="lohSize" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="disallowFullBlockingGC" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="totalSize"><span data-ttu-id="14956-462">Объем памяти в байтах для выделения без запуска сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-462">The amount of memory in bytes to allocate without triggering a garbage collection.</span></span> <span data-ttu-id="14956-463">Значение <paramref name="totalSize" /> -<paramref name="lohSize" /> должно быть меньше или равно размеру эфемерного сегмента.</span><span class="sxs-lookup"><span data-stu-id="14956-463"><paramref name="totalSize" /> -<paramref name="lohSize" /> must be less than or equal to the size of an ephemeral segment.</span></span> <span data-ttu-id="14956-464">Сведения о размере эфемерных сегментов см. в разделе "Эфемерные поколения и сегменты" статьи [Основы сборки мусора](~/docs/standard/garbage-collection/fundamentals.md).</span><span class="sxs-lookup"><span data-stu-id="14956-464">For information on the size of an ephemeral segment, see the "Ephemeral generations and segments" section in the [Fundamentals of Garbage Collection](~/docs/standard/garbage-collection/fundamentals.md) article.</span></span></param>
        <param name="lohSize"><span data-ttu-id="14956-465">Число байтов в <paramref name="totalSize" /> для назначения кучи больших объектов.</span><span class="sxs-lookup"><span data-stu-id="14956-465">The number of bytes in <paramref name="totalSize" /> to use for large object heap (LOH) allocations.</span></span></param>
        <param name="disallowFullBlockingGC"><span data-ttu-id="14956-466">Значение <see langword="true" />, чтобы пропустить полную блокирующую сборку мусора, если сборщику мусора изначально не удалось выделить указанную память в куче малых и в куче больших объектов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14956-466"><see langword="true" /> to omit a full blocking garbage collection if the garbage collector is initially unable to allocate the specified memory on the small object heap (SOH) and LOH; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="14956-467">Пытается запретить сборку мусора во время выполнения критического пути, если доступен указанный объем памяти для кучи больших объектов и для кучи маленьких объектов, и устанавливает, будет ли выполняться полная блокирующая сборка мусора, если изначально не хватает памяти.</span><span class="sxs-lookup"><span data-stu-id="14956-467">Attempts to disallow garbage collection during the execution of a critical path if a specified amount of memory is available for the large object heap and the small object heap, and controls whether the garbage collector does a full blocking garbage collection if not enough memory is initially available.</span></span></summary>
        <returns><span data-ttu-id="14956-468">Значение <see langword="true" />, если среде выполнения удалось зафиксировать необходимый объем памяти и сборщик мусора может перейти в режим задержки без области сборки мусора; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14956-468"><see langword="true" /> if the runtime was able to commit the required amount of memory and the garbage collector is able to enter no GC region latency mode; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-469">Метод <xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29> пытается поместить сборщик мусора в режим задержки без области GC, который запрещает сбор мусора, пока приложение выполняет критическую область кода.</span><span class="sxs-lookup"><span data-stu-id="14956-469">The <xref:System.GC.TryStartNoGCRegion%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29> method attempts to place the garbage collector in no GC region latency mode, which disallows garbage collection while an app executes a critical region of code.</span></span>  <span data-ttu-id="14956-470">Если среда выполнения не может изначально выделить запрошенный объем памяти и аргумент `disallowFullBlockingGC` `false`, сборщик мусора выполняет полную блокирующую сборку мусора при попытке освободить дополнительную память. в противном случае выделение завершается ошибкой, а метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="14956-470">If the runtime is unable to initially allocate the requested amount of memory and the `disallowFullBlockingGC` argument is `false`, the garbage collector performs a full blocking garbage collection in an attempt to free additional memory; otherwise, the allocation fails, and the method returns `false`.</span></span> <span data-ttu-id="14956-471">Сборщик мусора не переходит в режим задержки в области GC, если он способен выделить `lohSize` для LOH и `totalSize` - `lohSize` для кучи небольших объектов (SOH).</span><span class="sxs-lookup"><span data-stu-id="14956-471">The garbage collector enters no GC region latency mode if it is able to allocate `lohSize` for the LOH and `totalSize` - `lohSize` for the small object heap (SOH).</span></span>  
  
 <span data-ttu-id="14956-472">`lohSize` должны быть достаточно большими, чтобы обрабатывать все операции выделения памяти, происходящие в критическом пути для LOH, а `totalSize` - `lohSize` должны быть достаточно большими, чтобы обрабатывать все выделения памяти, происходящие в критическом пути для SOH.</span><span class="sxs-lookup"><span data-stu-id="14956-472">`lohSize` must be large enough to handle all memory allocations that occur in the critical path for the LOH, and `totalSize` - `lohSize` must be large enough to handle all memory allocations that occur in the critical path for the SOH.</span></span> <span data-ttu-id="14956-473">Сюда входят выделения для приложения, а также выделения, которые среда выполнения делает от имени приложения.</span><span class="sxs-lookup"><span data-stu-id="14956-473">This includes allocations by the app, as well as allocations that the runtime makes on the app's behalf.</span></span>  
  
 <span data-ttu-id="14956-474">Если в сценариях балансировки нагрузки не хватает памяти, при установке `disallowFullBlockingGC` в значение `true` для предотвращения полной блокирующей сборки мусора. одна система может вызывать этот метод и сообщать о готовности принимать запросы, если он возвращает `true`, и иметь возможность перенаправить запросы в другие системы, если она возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="14956-474">Setting `disallowFullBlockingGC` to `true` to prevent a full blocking garbage collection if not enough memory is initially available is most useful in load balancing scenarios: one system can call this method and report itself as ready to accept requests if it returns `true`, and have the load balancer redirect requests to other systems if it returns `false`.</span></span> <span data-ttu-id="14956-475">После этого можно выполнить полную блокирующую сборку мусора, когда запросы не обрабатываются путем вызова метода <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29>.</span><span class="sxs-lookup"><span data-stu-id="14956-475">It can then do a full blocking garbage collection when it's not handling requests by calling the <xref:System.GC.Collect%28System.Int32%2CSystem.GCCollectionMode%2CSystem.Boolean%2CSystem.Boolean%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="14956-476">Нельзя вкладывать вызовы в метод <xref:System.GC.TryStartNoGCRegion%2A>, и следует вызывать метод <xref:System.GC.EndNoGCRegion%2A> только в том случае, если среда выполнения в настоящее время находится в режиме задержки в области GC.</span><span class="sxs-lookup"><span data-stu-id="14956-476">You cannot nest calls to the <xref:System.GC.TryStartNoGCRegion%2A> method, and you should only call the <xref:System.GC.EndNoGCRegion%2A> method if the runtime is currently in no GC region latency mode.</span></span> <span data-ttu-id="14956-477">Иными словами, не следует вызывать <xref:System.GC.TryStartNoGCRegion%2A> несколько раз (после первого вызова метода, последующие вызовы завершаются неудачно), и не следует рассчитывать на то, что вызов <xref:System.GC.EndNoGCRegion%2A> завершится только потому, что первый вызов <xref:System.GC.TryStartNoGCRegion%2A> выполнен.</span><span class="sxs-lookup"><span data-stu-id="14956-477">In other words, you should not call <xref:System.GC.TryStartNoGCRegion%2A> multiple times (after the first method call, subsequent calls will not succeed), and you should not expect calls to <xref:System.GC.EndNoGCRegion%2A> to succeed just because the first call to <xref:System.GC.TryStartNoGCRegion%2A> succeeded.</span></span>  
  
 <span data-ttu-id="14956-478">Чтобы выйти из режима задержки без области GC, вызовите метод <xref:System.GC.EndNoGCRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-478">You exit the no GC region latency mode by calling the <xref:System.GC.EndNoGCRegion%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-479"><paramref name="totalSize" /> - <paramref name="lohSize" /> превышает размер эфемерного сегмента.</span><span class="sxs-lookup"><span data-stu-id="14956-479"><paramref name="totalSize" /> - <paramref name="lohSize" /> exceeds the ephemeral segment size.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="14956-480">Процесс уже находится в режиме задержки без области сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-480">The process is already in no GC region latency mode.</span></span></exception>
        <altmember cref="M:System.GC.EndNoGCRegion" />
        <related type="Article" href="~/docs/standard/garbage-collection/fundamentals.md"><span data-ttu-id="14956-481">Основы сборки мусора</span><span class="sxs-lookup"><span data-stu-id="14956-481">Fundamentals of Garbage Collection</span></span></related>
        <related type="Article" href="~/docs/standard/garbage-collection/latency.md"><span data-ttu-id="14956-482">Режимы задержки</span><span class="sxs-lookup"><span data-stu-id="14956-482">Latency Modes</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForFullGCApproach">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14956-483">Возвращает состояние зарегистрированного уведомления, чтобы определить, является ли неизбежной полная блокировка сборки мусора средой CLR.</span><span class="sxs-lookup"><span data-stu-id="14956-483">Returns the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime is imminent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForFullGCApproach">
      <MemberSignature Language="C#" Value="public static GCNotificationStatus WaitForFullGCApproach ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.GCNotificationStatus WaitForFullGCApproach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForFullGCApproach" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitForFullGCApproach () As GCNotificationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static GCNotificationStatus WaitForFullGCApproach();" />
      <MemberSignature Language="F#" Value="static member WaitForFullGCApproach : unit -&gt; GCNotificationStatus" Usage="System.GC.WaitForFullGCApproach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14956-484">Возвращает состояние зарегистрированного уведомления, чтобы определить, является ли неизбежной полная, блокирующая сборка мусора средой CLR.</span><span class="sxs-lookup"><span data-stu-id="14956-484">Returns the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime is imminent.</span></span></summary>
        <returns><span data-ttu-id="14956-485">Состояние зарегистрированного уведомления о сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-485">The status of the registered garbage collection notification.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-486">Используйте перечисление <xref:System.GCNotificationStatus>, возвращаемое этим методом, для определения состояния текущего уведомления о сборке мусора, зарегистрированного с помощью метода <xref:System.GC.RegisterForFullGCNotification%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-486">Use the <xref:System.GCNotificationStatus> enumeration returned by this method to determine the status of the current garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="14956-487">Можно также использовать метод <xref:System.GC.WaitForFullGCComplete%2A>, чтобы определить, завершена ли полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-487">You can also use the <xref:System.GC.WaitForFullGCComplete%2A> method to determine whether the full garbage collection has completed.</span></span>  
  
 <span data-ttu-id="14956-488">Когда перечисление возвращает <xref:System.GCNotificationStatus.Succeeded>, можно выполнять такие задачи, как предотвращение выделения дополнительных объектов и принудительное применение коллекции с помощью метода <xref:System.GC.Collect%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-488">When the enumeration returns <xref:System.GCNotificationStatus.Succeeded>, you can do tasks such as preventing additional objects from being allocated and inducing a collection yourself with the <xref:System.GC.Collect%2A> method.</span></span> <span data-ttu-id="14956-489">Обратите внимание, что уведомление не гарантирует, что произойдет полная сборка мусора, только эти условия достигли порогового значения, приемлемого для полной сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-489">Note that the notification does not guarantee that a full garbage collection will occur, only that conditions have reached the threshold that are favorable for a full garbage collection to occur.</span></span>  
  
 <span data-ttu-id="14956-490">Этот метод ожидает получения уведомления о сборке мусора в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="14956-490">This method waits indefinitely for a garbage collection notification to be obtained.</span></span> <span data-ttu-id="14956-491">Если необходимо указать период времени ожидания, в течение которого метод будет возвращаться, если уведомление не может быть получено, используйте перегрузку метода <xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="14956-491">If you want to specify a time-out period for the method to return if the notification cannot be obtained, use the <xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="14956-492">При вызове этого метода без указания времени ожидания можно вызвать метод <xref:System.GC.CancelFullGCNotification%2A>, если ожидается больше предпочтительных.</span><span class="sxs-lookup"><span data-stu-id="14956-492">If you call this method without specifying a time-out, you can call the <xref:System.GC.CancelFullGCNotification%2A> method if you are waiting longer than preferred.</span></span>  
  
 <span data-ttu-id="14956-493">Этот метод следует использовать с вызовом метода <xref:System.GC.WaitForFullGCComplete%2A>, чтобы убедиться в наличии полной сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-493">You should follow this method with a call to the <xref:System.GC.WaitForFullGCComplete%2A> method to make sure that you have had a full garbage collection.</span></span> <span data-ttu-id="14956-494">Вызов этого метода только приводит к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="14956-494">Calling this method alone causes indeterminate results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-495">В следующем примере показано, как использовать этот метод, чтобы определить, приближается ли полная блокировка сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-495">The following example shows how to use this method to determine whether a full, blocking garbage collection is approaching.</span></span> <span data-ttu-id="14956-496">Всякий раз, когда состояние уведомления <xref:System.GCNotificationStatus.Succeeded>, метод пользователя `OnFullGCApproachNotify` вызывается для выполнения действий в ответ на подходную коллекцию.</span><span class="sxs-lookup"><span data-stu-id="14956-496">Whenever the status of the notification is <xref:System.GCNotificationStatus.Succeeded>, the user method `OnFullGCApproachNotify` is called to perform actions in response to the approaching collection.</span></span> <span data-ttu-id="14956-497">Этот пример кода является частью большого примера, приведенного в разделе [уведомления о сборке мусора](~/docs/standard/garbage-collection/notifications.md) .</span><span class="sxs-lookup"><span data-stu-id="14956-497">This code example is part of a larger example provided for [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md) topic.</span></span>  
  
 [!code-cpp[GCNotification#3](~/samples/snippets/cpp/VS_Snippets_CLR/GCNotification/cpp/program.cpp#3)]
 [!code-csharp[GCNotification#3](~/samples/snippets/csharp/VS_Snippets_CLR/GCNotification/cs/Program.cs#3)]
 [!code-vb[GCNotification#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/GCNotification/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="14956-498">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="14956-498">for full trust for the immediate caller.</span></span> <span data-ttu-id="14956-499">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-499">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="14956-500">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-500">requires full trust for the immediate caller.</span></span> <span data-ttu-id="14956-501">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-501">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/garbage-collection/notifications.md"><span data-ttu-id="14956-502">Уведомления о сборке мусора</span><span class="sxs-lookup"><span data-stu-id="14956-502">Garbage Collection Notifications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WaitForFullGCApproach">
      <MemberSignature Language="C#" Value="public static GCNotificationStatus WaitForFullGCApproach (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.GCNotificationStatus WaitForFullGCApproach(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForFullGCApproach(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitForFullGCApproach (millisecondsTimeout As Integer) As GCNotificationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static GCNotificationStatus WaitForFullGCApproach(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitForFullGCApproach : int -&gt; GCNotificationStatus" Usage="System.GC.WaitForFullGCApproach millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="14956-503">Продолжительность времени ожидания, прежде чем можно извлечь состояние уведомления.</span><span class="sxs-lookup"><span data-stu-id="14956-503">The length of time to wait before a notification status can be obtained.</span></span> <span data-ttu-id="14956-504">Укажите значение -1, если период ожидания неограниченный.</span><span class="sxs-lookup"><span data-stu-id="14956-504">Specify -1 to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="14956-505">Возвращает состояние зарегистрированного уведомления в пределах указанного времени ожидания, чтобы определить, является ли неизбежной полная блокировка сборки мусора средой CLR.</span><span class="sxs-lookup"><span data-stu-id="14956-505">Returns, in a specified time-out period, the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime is imminent.</span></span></summary>
        <returns><span data-ttu-id="14956-506">Состояние зарегистрированного уведомления о сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-506">The status of the registered garbage collection notification.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-507">Используйте перечисление <xref:System.GCNotificationStatus>, возвращаемое этим методом, для определения состояния текущего уведомления о сборке мусора, зарегистрированного с помощью метода <xref:System.GC.RegisterForFullGCNotification%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-507">Use the <xref:System.GCNotificationStatus> enumeration returned by this method to determine the status of the current garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="14956-508">Можно также использовать метод <xref:System.GC.WaitForFullGCComplete%2A>, чтобы определить, завершена ли полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-508">You can also use the <xref:System.GC.WaitForFullGCComplete%2A> method to determine whether the full garbage collection has completed.</span></span>  
  
 <span data-ttu-id="14956-509">Обратите внимание, что этот метод возвращает значение сразу при получении состояния уведомления о сборке мусора независимо от значения, заданного `millisecondsTimeout`.</span><span class="sxs-lookup"><span data-stu-id="14956-509">Note that this method returns immediately whenever a garbage collection notification status is obtained, regardless of the value specified by `millisecondsTimeout`.</span></span> <span data-ttu-id="14956-510">Если состояние уведомления о сборке мусора не получено до истечения `millisecondsTimeout`, этот метод возвращает <xref:System.GCNotificationStatus.NotApplicable>.</span><span class="sxs-lookup"><span data-stu-id="14956-510">If a garbage collection notification status is not obtained before `millisecondsTimeout` times out, this method returns <xref:System.GCNotificationStatus.NotApplicable>.</span></span>  
  
 <span data-ttu-id="14956-511">Когда перечисление возвращает <xref:System.GCNotificationStatus.Succeeded>, можно выполнять такие задачи, как предотвращение выделения дополнительных объектов и принудительное применение коллекции с помощью метода <xref:System.GC.Collect%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-511">When the enumeration returns <xref:System.GCNotificationStatus.Succeeded>, you can do tasks such as preventing additional objects from being allocated and inducing a collection yourself with the <xref:System.GC.Collect%2A> method.</span></span> <span data-ttu-id="14956-512">Обратите внимание, что уведомление не гарантирует, что произойдет полная сборка мусора, только эти условия достигли порогового значения, приемлемого для полной сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-512">Note that the notification does not guarantee that a full garbage collection will occur, only that conditions have reached the threshold that are favorable for a full garbage collection to occur.</span></span>  
  
 <span data-ttu-id="14956-513">Метод <xref:System.GC.CancelFullGCNotification%2A> можно вызвать, если не удается дождаться истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="14956-513">You can call the <xref:System.GC.CancelFullGCNotification%2A> method when you cannot wait for the time-out period to elapse.</span></span>  
  
 <span data-ttu-id="14956-514">Этот метод следует использовать с вызовом метода <xref:System.GC.WaitForFullGCComplete%2A>, чтобы убедиться в наличии полной сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-514">You should follow this method with a call to the <xref:System.GC.WaitForFullGCComplete%2A> method to make sure that you have had a full garbage collection.</span></span> <span data-ttu-id="14956-515">Вызов этого метода только приводит к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="14956-515">Calling this method alone causes indeterminate results.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="14956-516">Значение <paramref name="millisecondsTimeout" /> должно быть либо неотрицательным, либо меньше или равно <see cref="F:System.Int32.MaxValue" /> или –1.</span><span class="sxs-lookup"><span data-stu-id="14956-516"><paramref name="millisecondsTimeout" /> must be either non-negative or less than or equal to <see cref="F:System.Int32.MaxValue" /> or -1.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="14956-517">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="14956-517">for full trust for the immediate caller.</span></span> <span data-ttu-id="14956-518">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-518">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="14956-519">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-519">requires full trust for the immediate caller.</span></span> <span data-ttu-id="14956-520">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-520">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/garbage-collection/notifications.md"><span data-ttu-id="14956-521">Уведомления о сборке мусора</span><span class="sxs-lookup"><span data-stu-id="14956-521">Garbage Collection Notifications</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForFullGCComplete">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14956-522">Возвращает состояние зарегистрированного уведомления, чтобы определить, завершена ли полная блокировка сборки мусора средой CLR.</span><span class="sxs-lookup"><span data-stu-id="14956-522">Returns the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime has completed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForFullGCComplete">
      <MemberSignature Language="C#" Value="public static GCNotificationStatus WaitForFullGCComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.GCNotificationStatus WaitForFullGCComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForFullGCComplete" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitForFullGCComplete () As GCNotificationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static GCNotificationStatus WaitForFullGCComplete();" />
      <MemberSignature Language="F#" Value="static member WaitForFullGCComplete : unit -&gt; GCNotificationStatus" Usage="System.GC.WaitForFullGCComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14956-523">Возвращает состояние зарегистрированного уведомления, чтобы определить, завершена ли полная блокировка сборки мусора средой CLR.</span><span class="sxs-lookup"><span data-stu-id="14956-523">Returns the status of a registered notification for determining whether a full, blocking garbage collection by the common language runtime has completed.</span></span></summary>
        <returns><span data-ttu-id="14956-524">Состояние зарегистрированного уведомления о сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-524">The status of the registered garbage collection notification.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-525">Используйте перечисление <xref:System.GCNotificationStatus>, возвращаемое этим методом, для определения состояния текущего уведомления о сборке мусора, зарегистрированного с помощью метода <xref:System.GC.RegisterForFullGCNotification%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-525">Use the <xref:System.GCNotificationStatus> enumeration returned by this method to determine the status of the current garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="14956-526">Можно также использовать метод <xref:System.GC.WaitForFullGCApproach%2A>, чтобы определить, приближается ли полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-526">You can also use the <xref:System.GC.WaitForFullGCApproach%2A> method to determine whether a full garbage collection is imminent.</span></span>  
  
 <span data-ttu-id="14956-527">Когда перечисление возвращает <xref:System.GCNotificationStatus.Succeeded>, можно выполнять такие задачи, как возобновление работы и получение числа коллекций с помощью свойства <xref:System.GC.CollectionCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-527">When the enumeration returns <xref:System.GCNotificationStatus.Succeeded>, you can do tasks such as resuming work and obtaining a collection count with the <xref:System.GC.CollectionCount%2A> property.</span></span>  
  
 <span data-ttu-id="14956-528">Этот метод ожидает получения уведомления о сборке мусора в течение неограниченного времени.</span><span class="sxs-lookup"><span data-stu-id="14956-528">This method waits indefinitely for a garbage collection notification to be obtained.</span></span> <span data-ttu-id="14956-529">Если необходимо указать период времени ожидания, в течение которого метод будет возвращаться, если уведомление не может быть получено, используйте перегрузку метода <xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="14956-529">If you want to specify a time-out period for the method to return if the notification cannot be obtained, use the <xref:System.GC.WaitForFullGCApproach%28System.Int32%29?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="14956-530">При вызове этого метода без указания времени ожидания можно вызвать метод <xref:System.GC.CancelFullGCNotification%2A>, если ожидается больше предпочтительных.</span><span class="sxs-lookup"><span data-stu-id="14956-530">If you call this method without specifying a time-out, you can call the <xref:System.GC.CancelFullGCNotification%2A> method if you are waiting longer than preferred.</span></span>  
  
 <span data-ttu-id="14956-531">Этому вызову метода должен предшествовать вызов метода <xref:System.GC.WaitForFullGCApproach%2A>, чтобы убедиться в наличии полной сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-531">This method call should be preceded with a call to the <xref:System.GC.WaitForFullGCApproach%2A> method to make sure that you have had a full garbage collection.</span></span> <span data-ttu-id="14956-532">Вызов только этого метода может привести к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="14956-532">Calling this method alone can produce indeterminate results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-533">В следующем примере показано, как использовать этот метод, чтобы определить, завершена ли полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-533">The following example shows how to use this method to determine whether a full garbage collection has completed.</span></span> <span data-ttu-id="14956-534">Всякий раз, когда состояние уведомления <xref:System.GCNotificationStatus.Succeeded>, метод пользователя `OnFullGCCompletedNotify` вызывается для выполнения действий в ответ на завершенную коллекцию.</span><span class="sxs-lookup"><span data-stu-id="14956-534">Whenever the status of the notification is <xref:System.GCNotificationStatus.Succeeded>, the user method `OnFullGCCompletedNotify` is called to perform actions in response to the completed collection.</span></span> <span data-ttu-id="14956-535">Этот пример кода является частью большого примера, приведенного в разделе [уведомления о сборке мусора](~/docs/standard/garbage-collection/notifications.md) .</span><span class="sxs-lookup"><span data-stu-id="14956-535">This code example is part of a larger example provided for [Garbage Collection Notifications](~/docs/standard/garbage-collection/notifications.md) topic.</span></span>  
  
 [!code-cpp[GCNotification#4](~/samples/snippets/cpp/VS_Snippets_CLR/GCNotification/cpp/program.cpp#4)]
 [!code-csharp[GCNotification#4](~/samples/snippets/csharp/VS_Snippets_CLR/GCNotification/cs/Program.cs#4)]
 [!code-vb[GCNotification#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GCNotification/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="14956-536">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="14956-536">for full trust for the immediate caller.</span></span> <span data-ttu-id="14956-537">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-537">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="14956-538">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-538">requires full trust for the immediate caller.</span></span> <span data-ttu-id="14956-539">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-539">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/garbage-collection/notifications.md"><span data-ttu-id="14956-540">Уведомления о сборке мусора</span><span class="sxs-lookup"><span data-stu-id="14956-540">Garbage Collection Notifications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WaitForFullGCComplete">
      <MemberSignature Language="C#" Value="public static GCNotificationStatus WaitForFullGCComplete (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.GCNotificationStatus WaitForFullGCComplete(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForFullGCComplete(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitForFullGCComplete (millisecondsTimeout As Integer) As GCNotificationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static GCNotificationStatus WaitForFullGCComplete(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitForFullGCComplete : int -&gt; GCNotificationStatus" Usage="System.GC.WaitForFullGCComplete millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.GCNotificationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="14956-541">Продолжительность времени ожидания, прежде чем можно извлечь состояние уведомления.</span><span class="sxs-lookup"><span data-stu-id="14956-541">The length of time to wait before a notification status can be obtained.</span></span> <span data-ttu-id="14956-542">Укажите значение -1, если период ожидания неограниченный.</span><span class="sxs-lookup"><span data-stu-id="14956-542">Specify -1 to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="14956-543">Возвращает состояние зарегистрированного уведомления в пределах указанного времени ожидания, чтобы определить, завершена ли полная блокировка сборки мусора средой CLR.</span><span class="sxs-lookup"><span data-stu-id="14956-543">Returns, in a specified time-out period, the status of a registered notification for determining whether a full, blocking garbage collection by common language the runtime has completed.</span></span></summary>
        <returns><span data-ttu-id="14956-544">Состояние зарегистрированного уведомления о сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-544">The status of the registered garbage collection notification.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-545">Используйте перечисление <xref:System.GCNotificationStatus>, возвращаемое этим методом, для определения состояния текущего уведомления о сборке мусора, зарегистрированного с помощью метода <xref:System.GC.RegisterForFullGCNotification%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-545">Use the <xref:System.GCNotificationStatus> enumeration returned by this method to determine the status of the current garbage collection notification that was registered by using the <xref:System.GC.RegisterForFullGCNotification%2A> method.</span></span> <span data-ttu-id="14956-546">Можно также использовать метод <xref:System.GC.WaitForFullGCApproach%2A>, чтобы определить, приближается ли полная сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-546">You can also use the <xref:System.GC.WaitForFullGCApproach%2A> method to determine whether a full garbage collection is imminent.</span></span>  
  
 <span data-ttu-id="14956-547">Обратите внимание, что этот метод возвращает значение сразу при получении состояния уведомления о сборке мусора независимо от значения, заданного `millisecondsTimeout`.</span><span class="sxs-lookup"><span data-stu-id="14956-547">Note that this method returns immediately whenever a garbage collection notification status is obtained, regardless of the value specified by `millisecondsTimeout`.</span></span> <span data-ttu-id="14956-548">Если состояние уведомления о сборке мусора не получено до истечения `millisecondsTimeout`, этот метод возвращает <xref:System.GCNotificationStatus.NotApplicable>.</span><span class="sxs-lookup"><span data-stu-id="14956-548">If a garbage collection notification status is not obtained before `millisecondsTimeout` times out, this method returns <xref:System.GCNotificationStatus.NotApplicable>.</span></span>  
  
 <span data-ttu-id="14956-549">Когда перечисление возвращает <xref:System.GCNotificationStatus.Succeeded>, можно выполнять такие задачи, как возобновление работы и получение числа коллекций с помощью свойства <xref:System.GC.CollectionCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-549">When the enumeration returns <xref:System.GCNotificationStatus.Succeeded>, you can do tasks such as resuming work and obtaining a collection count with the <xref:System.GC.CollectionCount%2A> property.</span></span>  
  
 <span data-ttu-id="14956-550">Метод <xref:System.GC.CancelFullGCNotification%2A> можно вызвать, если не удается дождаться истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="14956-550">You can call the <xref:System.GC.CancelFullGCNotification%2A> method when you cannot wait for the time-out period to elapse.</span></span>  
  
 <span data-ttu-id="14956-551">Этому вызову метода должен предшествовать вызов метода <xref:System.GC.WaitForFullGCApproach%2A>, чтобы убедиться в наличии полной сборки мусора.</span><span class="sxs-lookup"><span data-stu-id="14956-551">This method call should be preceded with a call to the <xref:System.GC.WaitForFullGCApproach%2A> method to make sure that you have had a full garbage collection.</span></span> <span data-ttu-id="14956-552">Вызов только этого метода может привести к непредсказуемым результатам.</span><span class="sxs-lookup"><span data-stu-id="14956-552">Calling this method alone can produce indeterminate results.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="14956-553">Значение <paramref name="millisecondsTimeout" /> должно быть либо неотрицательным, либо меньше или равно <see cref="F:System.Int32.MaxValue" /> или –1.</span><span class="sxs-lookup"><span data-stu-id="14956-553"><paramref name="millisecondsTimeout" /> must be either non-negative or less than or equal to <see cref="F:System.Int32.MaxValue" /> or -1.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="14956-554">Полный уровень доверия для непосредственного вызывающего.</span><span class="sxs-lookup"><span data-stu-id="14956-554">for full trust for the immediate caller.</span></span> <span data-ttu-id="14956-555">Этот член не может быть использован частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-555">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="14956-556">Требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-556">requires full trust for the immediate caller.</span></span> <span data-ttu-id="14956-557">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="14956-557">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/garbage-collection/notifications.md"><span data-ttu-id="14956-558">Уведомления о сборке мусора</span><span class="sxs-lookup"><span data-stu-id="14956-558">Garbage Collection Notifications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WaitForPendingFinalizers">
      <MemberSignature Language="C#" Value="public static void WaitForPendingFinalizers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WaitForPendingFinalizers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.GC.WaitForPendingFinalizers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WaitForPendingFinalizers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WaitForPendingFinalizers();" />
      <MemberSignature Language="F#" Value="static member WaitForPendingFinalizers : unit -&gt; unit" Usage="System.GC.WaitForPendingFinalizers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14956-559">Приостанавливает текущий поток до тех пор, пока поток, обрабатывающий очередь методов завершения, не обработает всю очередь.</span><span class="sxs-lookup"><span data-stu-id="14956-559">Suspends the current thread until the thread that is processing the queue of finalizers has emptied that queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14956-560">Когда сборщик мусора находит объекты, которые могут быть освобождены, он проверяет каждый объект, чтобы определить требования к финализации объекта.</span><span class="sxs-lookup"><span data-stu-id="14956-560">When the garbage collector finds objects that can be reclaimed, it checks each object to determine the object's finalization requirements.</span></span> <span data-ttu-id="14956-561">Если объект реализует метод завершения и не отключил завершение путем вызова <xref:System.GC.SuppressFinalize%2A>, объект помещается в список объектов, помеченных как готовые к завершению.</span><span class="sxs-lookup"><span data-stu-id="14956-561">If an object implements a finalizer and has not disabled finalization by calling <xref:System.GC.SuppressFinalize%2A>, the object is placed in a list of objects that are marked as ready for finalization.</span></span> <span data-ttu-id="14956-562">Сборщик мусора вызывает <xref:System.Object.Finalize%2A> методы для объектов в этом списке и удаляет записи из списка.</span><span class="sxs-lookup"><span data-stu-id="14956-562">The garbage collector calls the <xref:System.Object.Finalize%2A> methods for the objects in this list and removes the entries from the list.</span></span> <span data-ttu-id="14956-563">Этот метод блокируется до завершения выполнения всех методов завершения.</span><span class="sxs-lookup"><span data-stu-id="14956-563">This method blocks until all finalizers have run to completion.</span></span>  
  
 <span data-ttu-id="14956-564">Поток, в котором выполняются методы завершения, не определен, поэтому нет никакой гарантии, что этот метод завершится.</span><span class="sxs-lookup"><span data-stu-id="14956-564">The thread on which finalizers are run is unspecified, so there is no guarantee that this method will terminate.</span></span> <span data-ttu-id="14956-565">Однако этот поток может быть прерван другим потоком, пока выполняется метод <xref:System.GC.WaitForPendingFinalizers%2A>.</span><span class="sxs-lookup"><span data-stu-id="14956-565">However, this thread can be interrupted by another thread while the <xref:System.GC.WaitForPendingFinalizers%2A> method is in progress.</span></span> <span data-ttu-id="14956-566">Например, можно запустить другой поток, который ожидает период времени, а затем прерывает этот поток, если этот поток все еще приостановлен.</span><span class="sxs-lookup"><span data-stu-id="14956-566">For example, you can start another thread that waits for a period of time and then interrupts this thread if this thread is still suspended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14956-567">В следующем примере показано, как использовать метод <xref:System.GC.WaitForPendingFinalizers%2A> для приостановки текущего потока до завершения финализации всех собранных объектов.</span><span class="sxs-lookup"><span data-stu-id="14956-567">The following example demonstrates how to use the <xref:System.GC.WaitForPendingFinalizers%2A> method to suspend the current thread until finalization of all the collected objects is complete.</span></span>  
  
 [!code-cpp[System.GC.WaitForPendingFinalizers Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.GC.WaitForPendingFinalizers Example/CPP/class1.cpp#1)]
 [!code-csharp[System.GC.WaitForPendingFinalizers Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GC.WaitForPendingFinalizers Example/CS/class1.cs#1)]
 [!code-vb[System.GC.WaitForPendingFinalizers Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GC.WaitForPendingFinalizers Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
