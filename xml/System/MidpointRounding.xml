<Type Name="MidpointRounding" FullName="System.MidpointRounding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fcef2fde4eceab955a8a4be353b857c654cedb1b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70456020" /></Metadata><TypeSignature Language="C#" Value="public enum MidpointRounding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MidpointRounding extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.MidpointRounding" />
  <TypeSignature Language="VB.NET" Value="Public Enum MidpointRounding" />
  <TypeSignature Language="C++ CLI" Value="public enum class MidpointRounding" />
  <TypeSignature Language="F#" Value="type MidpointRounding = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b1799-101">Задает способ обработки чисел, которые равноудалены от двух соседних чисел, в математических методах округления.</span><span class="sxs-lookup"><span data-stu-id="b1799-101">Specifies how mathematical rounding methods should process a number that is midway between two numbers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1799-102">Используйте `MidpointRounding` с соответствующими перегрузками <xref:System.Math.Round%2A?displayProperty=nameWithType> для предоставления большего контроля над процессом округления.</span><span class="sxs-lookup"><span data-stu-id="b1799-102">Use `MidpointRounding` with appropriate overloads of <xref:System.Math.Round%2A?displayProperty=nameWithType> to provide more control of the rounding process.</span></span>  
  
 <span data-ttu-id="b1799-103">Операция округления принимает исходный номер с неявной или заданной точностью; проверяет следующую цифру, которая находится в той же точности, что и единица. и возвращает ближайшее число с той же точностью, что и исходное число.</span><span class="sxs-lookup"><span data-stu-id="b1799-103">A rounding operation takes an original number with an implicit or specified precision; examines the next digit, which is at that precision plus one; and returns the nearest number with the same precision as the original number.</span></span> <span data-ttu-id="b1799-104">Для положительных чисел, если следующая цифра находится в направлении от 0 до 4, ближайшее число отдается отрицательной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="b1799-104">For positive numbers, if the next digit is from 0 through 4, the nearest number is toward negative infinity.</span></span> <span data-ttu-id="b1799-105">Если следующая цифра — от 6 до 9, то ближайшее число будет в сторону положительной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="b1799-105">If the next digit is from 6 through 9, the nearest number is toward positive infinity.</span></span> <span data-ttu-id="b1799-106">Для отрицательных чисел, если следующая цифра находится в направлении от 0 до 4, ближайшее число отдается плюс бесконечности.</span><span class="sxs-lookup"><span data-stu-id="b1799-106">For negative numbers, if the next digit is from 0 through 4, the nearest number is toward positive infinity.</span></span> <span data-ttu-id="b1799-107">Если следующая цифра — от 6 до 9, то ближайшее число будет в сторону отрицательной бесконечности.</span><span class="sxs-lookup"><span data-stu-id="b1799-107">If the next digit is from 6 through 9, the nearest number is toward negative infinity.</span></span>  
  
 <span data-ttu-id="b1799-108">В предыдущих случаях `MidpointRounding` перечисление не влияет на результат операции округления.</span><span class="sxs-lookup"><span data-stu-id="b1799-108">In the previous cases, the `MidpointRounding` enumeration does not affect the result of the rounding operation.</span></span> <span data-ttu-id="b1799-109">Однако если следующая цифра равна 5, то есть середина между двумя возможными результатами, а оставшиеся цифры равны нулю или нет оставшихся цифр, то ближайшее число неоднозначно.</span><span class="sxs-lookup"><span data-stu-id="b1799-109">However, if the next digit is 5, which is the midpoint between two possible results, and all remaining digits are zero or there are no remaining digits, the nearest number is ambiguous.</span></span> <span data-ttu-id="b1799-110">В этом случае `MidpointRounding` перечисление позволяет указать, возвращает ли операция округления ближайшее число в сторону от нуля или ближайшего четного числа.</span><span class="sxs-lookup"><span data-stu-id="b1799-110">In this case, the `MidpointRounding` enumeration enables you to specify whether the rounding operation returns the nearest number away from zero or the nearest even number.</span></span>  
  
 <span data-ttu-id="b1799-111">В следующей таблице показаны результаты округления отрицательных и положительных чисел в сочетании со значениями `MidpointRounding`.</span><span class="sxs-lookup"><span data-stu-id="b1799-111">The following table demonstrates the results of rounding some negative and positive numbers in conjunction with the values of `MidpointRounding`.</span></span> <span data-ttu-id="b1799-112">Точность, используемая для округления чисел, равна нулю. Это означает, что число после десятичной запятой влияет на операцию округления.</span><span class="sxs-lookup"><span data-stu-id="b1799-112">The precision used to round the numbers is zero, which means the number after the decimal point affects the rounding operation.</span></span> <span data-ttu-id="b1799-113">Например, для числа 2,5 цифра после десятичной запятой — 5.</span><span class="sxs-lookup"><span data-stu-id="b1799-113">For example, for the number -2.5, the digit after the decimal point is 5.</span></span> <span data-ttu-id="b1799-114">Так как эта цифра является средней, можно использовать `MidpointRounding` значение для определения результата округления.</span><span class="sxs-lookup"><span data-stu-id="b1799-114">Because that digit is the midpoint, you can use a `MidpointRounding` value to determine the result of rounding.</span></span> <span data-ttu-id="b1799-115">Если `AwayFromZero` указан параметр, возвращается значение-3, так как это ближайшее число от нуля до точности, равной нулю.</span><span class="sxs-lookup"><span data-stu-id="b1799-115">If `AwayFromZero` is specified, -3 is returned because it is the nearest number away from zero with a precision of zero.</span></span> <span data-ttu-id="b1799-116">Если `ToEven` указан параметр, возвращается значение-2, так как оно является ближайшим четным числом с точностью до нуля.</span><span class="sxs-lookup"><span data-stu-id="b1799-116">If `ToEven` is specified, -2 is returned because it is the nearest even number with a precision of zero.</span></span>  
  
|<span data-ttu-id="b1799-117">Исходный номер</span><span class="sxs-lookup"><span data-stu-id="b1799-117">Original number</span></span>|<span data-ttu-id="b1799-118">AwayFromZero</span><span class="sxs-lookup"><span data-stu-id="b1799-118">AwayFromZero</span></span>|<span data-ttu-id="b1799-119">тоевен</span><span class="sxs-lookup"><span data-stu-id="b1799-119">ToEven</span></span>|  
|---------------------|------------------|------------|  
|<span data-ttu-id="b1799-120">3.5</span><span class="sxs-lookup"><span data-stu-id="b1799-120">3.5</span></span>|<span data-ttu-id="b1799-121">4</span><span class="sxs-lookup"><span data-stu-id="b1799-121">4</span></span>|<span data-ttu-id="b1799-122">4</span><span class="sxs-lookup"><span data-stu-id="b1799-122">4</span></span>|  
|<span data-ttu-id="b1799-123">2.8</span><span class="sxs-lookup"><span data-stu-id="b1799-123">2.8</span></span>|<span data-ttu-id="b1799-124">3</span><span class="sxs-lookup"><span data-stu-id="b1799-124">3</span></span>|<span data-ttu-id="b1799-125">3</span><span class="sxs-lookup"><span data-stu-id="b1799-125">3</span></span>|  
|<span data-ttu-id="b1799-126">2.5</span><span class="sxs-lookup"><span data-stu-id="b1799-126">2.5</span></span>|<span data-ttu-id="b1799-127">3</span><span class="sxs-lookup"><span data-stu-id="b1799-127">3</span></span>|<span data-ttu-id="b1799-128">2</span><span class="sxs-lookup"><span data-stu-id="b1799-128">2</span></span>|  
|<span data-ttu-id="b1799-129">2.1</span><span class="sxs-lookup"><span data-stu-id="b1799-129">2.1</span></span>|<span data-ttu-id="b1799-130">2</span><span class="sxs-lookup"><span data-stu-id="b1799-130">2</span></span>|<span data-ttu-id="b1799-131">2</span><span class="sxs-lookup"><span data-stu-id="b1799-131">2</span></span>|  
|<span data-ttu-id="b1799-132">-2.1</span><span class="sxs-lookup"><span data-stu-id="b1799-132">-2.1</span></span>|<span data-ttu-id="b1799-133">-2</span><span class="sxs-lookup"><span data-stu-id="b1799-133">-2</span></span>|<span data-ttu-id="b1799-134">-2</span><span class="sxs-lookup"><span data-stu-id="b1799-134">-2</span></span>|  
|<span data-ttu-id="b1799-135">-2.5</span><span class="sxs-lookup"><span data-stu-id="b1799-135">-2.5</span></span>|<span data-ttu-id="b1799-136">-3</span><span class="sxs-lookup"><span data-stu-id="b1799-136">-3</span></span>|<span data-ttu-id="b1799-137">-2</span><span class="sxs-lookup"><span data-stu-id="b1799-137">-2</span></span>|  
|<span data-ttu-id="b1799-138">-2.8</span><span class="sxs-lookup"><span data-stu-id="b1799-138">-2.8</span></span>|<span data-ttu-id="b1799-139">-3</span><span class="sxs-lookup"><span data-stu-id="b1799-139">-3</span></span>|<span data-ttu-id="b1799-140">-3</span><span class="sxs-lookup"><span data-stu-id="b1799-140">-3</span></span>|  
|<span data-ttu-id="b1799-141">-3.5</span><span class="sxs-lookup"><span data-stu-id="b1799-141">-3.5</span></span>|<span data-ttu-id="b1799-142">-4</span><span class="sxs-lookup"><span data-stu-id="b1799-142">-4</span></span>|<span data-ttu-id="b1799-143">-4</span><span class="sxs-lookup"><span data-stu-id="b1799-143">-4</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b1799-144">В следующем примере демонстрируется <xref:System.Math.Round%2A?displayProperty=nameWithType> метод в сочетании `MidpointRounding` с перечислением:</span><span class="sxs-lookup"><span data-stu-id="b1799-144">The following example demonstrates the <xref:System.Math.Round%2A?displayProperty=nameWithType> method in conjunction with the `MidpointRounding` enumeration:</span></span>
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AwayFromZero">
      <MemberSignature Language="C#" Value="AwayFromZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding AwayFromZero = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.AwayFromZero" />
      <MemberSignature Language="VB.NET" Value="AwayFromZero" />
      <MemberSignature Language="C++ CLI" Value="AwayFromZero" />
      <MemberSignature Language="F#" Value="AwayFromZero = 1" Usage="System.MidpointRounding.AwayFromZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b1799-145">Когда число находится посредине между двумя другими числами, оно округляется до ближайшего числа со стороны нуля.</span><span class="sxs-lookup"><span data-stu-id="b1799-145">When a number is halfway between two others, it is rounded toward the nearest number that is away from zero.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ToEven">
      <MemberSignature Language="C#" Value="ToEven" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToEven = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToEven" />
      <MemberSignature Language="VB.NET" Value="ToEven" />
      <MemberSignature Language="C++ CLI" Value="ToEven" />
      <MemberSignature Language="F#" Value="ToEven = 0" Usage="System.MidpointRounding.ToEven" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b1799-146">Когда число находится посредине между двумя другими числами, оно округляется до ближайшего четного числа.</span><span class="sxs-lookup"><span data-stu-id="b1799-146">When a number is halfway between two others, it is rounded toward the nearest even number.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ToNegativeInfinity">
      <MemberSignature Language="C#" Value="ToNegativeInfinity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToNegativeInfinity = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToNegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="ToNegativeInfinity" />
      <MemberSignature Language="C++ CLI" Value="ToNegativeInfinity" />
      <MemberSignature Language="F#" Value="ToNegativeInfinity = 3" Usage="System.MidpointRounding.ToNegativeInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b1799-147">Если число находится на одинаковом расстоянии от двух других, оно округляется в сторону ближайшего результата, не большего, чем бесконечно точный результат.</span><span class="sxs-lookup"><span data-stu-id="b1799-147">When a number is halfway between two others, it is rounded toward the result closest to and no greater than the infinitely precise result.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ToPositiveInfinity">
      <MemberSignature Language="C#" Value="ToPositiveInfinity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToPositiveInfinity = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToPositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="ToPositiveInfinity" />
      <MemberSignature Language="C++ CLI" Value="ToPositiveInfinity" />
      <MemberSignature Language="F#" Value="ToPositiveInfinity = 4" Usage="System.MidpointRounding.ToPositiveInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b1799-148">Если число находится на одинаковом расстоянии от двух других, оно округляется в сторону ближайшего результата, не меньшего, чем бесконечно точный результат.</span><span class="sxs-lookup"><span data-stu-id="b1799-148">When a number is halfway between two others, it is rounded toward the result closest to and no less than the infinitely precise result.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ToZero">
      <MemberSignature Language="C#" Value="ToZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToZero = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToZero" />
      <MemberSignature Language="VB.NET" Value="ToZero" />
      <MemberSignature Language="C++ CLI" Value="ToZero" />
      <MemberSignature Language="F#" Value="ToZero = 2" Usage="System.MidpointRounding.ToZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b1799-149">Если число находится на одинаковом расстоянии от двух других, оно округляется в сторону ближайшего результата, не превышающего по порядку бесконечно точный результат.</span><span class="sxs-lookup"><span data-stu-id="b1799-149">When a number is halfway between two others, it is rounded toward the result closest to and no greater in magnitude than the infinitely precise result.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
