<Type Name="MidpointRounding" FullName="System.MidpointRounding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38e8ee38701d9fa5be725a24cad8895ed98d6fcb" /><Meta Name="ms.sourcegitcommit" Value="5c332e8417c001736f7e2f33a84791feebba2cd7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/30/2019" /><Meta Name="ms.locfileid" Value="68632959" /></Metadata><TypeSignature Language="C#" Value="public enum MidpointRounding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MidpointRounding extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.MidpointRounding" />
  <TypeSignature Language="VB.NET" Value="Public Enum MidpointRounding" />
  <TypeSignature Language="C++ CLI" Value="public enum class MidpointRounding" />
  <TypeSignature Language="F#" Value="type MidpointRounding = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Задает способ обработки чисел, которые равноудалены от двух соседних чисел, в математических методах округления.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.MidpointRounding> с соответствующими перегрузками <xref:System.Math.Round%2A?displayProperty=nameWithType> для предоставления большего контроля над процессом округления.  
  
 Операция округления принимает исходный номер с неявной или заданной точностью; проверяет следующую цифру, которая находится в той же точности, что и единица. и возвращает ближайшее число с той же точностью, что и исходное число. Для положительных чисел, если следующая цифра находится в направлении от 0 до 4, ближайшее число отдается отрицательной бесконечности. Если следующая цифра — от 6 до 9, то ближайшее число будет в сторону положительной бесконечности. Для отрицательных чисел, если следующая цифра находится в направлении от 0 до 4, ближайшее число отдается плюс бесконечности. Если следующая цифра — от 6 до 9, то ближайшее число будет в сторону отрицательной бесконечности.  
  
 В предыдущих случаях <xref:System.MidpointRounding> перечисление не влияет на результат операции округления. Однако если следующая цифра равна 5, то есть середина между двумя возможными результатами, а оставшиеся цифры равны нулю или нет оставшихся цифр, то ближайшее число неоднозначно. В этом случае <xref:System.MidpointRounding> перечисление позволяет указать, возвращает ли операция округления ближайшее число в сторону от нуля или ближайшего четного числа.  
  
 В следующей таблице показаны результаты округления отрицательных и положительных чисел в сочетании со значениями <xref:System.MidpointRounding>. Точность, используемая для округления чисел, равна нулю. Это означает, что число после десятичной запятой влияет на операцию округления. Например, для числа 2,5 цифра после десятичной запятой — 5. Так как эта цифра является средней, можно использовать <xref:System.MidpointRounding> значение для определения результата округления. Если задано значение AwayFromZero, возвращается значение-3, поскольку оно является ближайшим числом от нуля до точности, равной нулю. Если задано значение Тоевен, возвращается значение-2, поскольку оно является ближайшим четным числом с точностью до нуля.  
  
|Исходный номер|AwayFromZero|тоевен|  
|---------------------|------------------|------------|  
|3.5|4|4|  
|2.8|3|3|  
|2.5|3|2|  
|2.1|2|2|  
|-2.1|-2|-2|  
|-2.5|-3|-2|  
|-2.8|-3|-3|  
|-3.5|-4|-4|  
  
   
  
## Examples  
 В следующем примере кода демонстрируется <xref:System.Math.Round%2A> метод в сочетании <xref:System.MidpointRounding.ToEven> с перечислением.  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AwayFromZero">
      <MemberSignature Language="C#" Value="AwayFromZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding AwayFromZero = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.AwayFromZero" />
      <MemberSignature Language="VB.NET" Value="AwayFromZero" />
      <MemberSignature Language="C++ CLI" Value="AwayFromZero" />
      <MemberSignature Language="F#" Value="AwayFromZero = 1" Usage="System.MidpointRounding.AwayFromZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Когда число находится посредине между двумя другими числами, оно округляется до ближайшего числа со стороны нуля.</summary>
      </Docs>
    </Member>
    <Member MemberName="ToEven">
      <MemberSignature Language="C#" Value="ToEven" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToEven = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToEven" />
      <MemberSignature Language="VB.NET" Value="ToEven" />
      <MemberSignature Language="C++ CLI" Value="ToEven" />
      <MemberSignature Language="F#" Value="ToEven = 0" Usage="System.MidpointRounding.ToEven" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Когда число находится посредине между двумя другими числами, оно округляется до ближайшего четного числа.</summary>
      </Docs>
    </Member>
    <Member MemberName="ToNegativeInfinity">
      <MemberSignature Language="C#" Value="ToNegativeInfinity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToNegativeInfinity = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToNegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="ToNegativeInfinity" />
      <MemberSignature Language="C++ CLI" Value="ToNegativeInfinity" />
      <MemberSignature Language="F#" Value="ToNegativeInfinity = 3" Usage="System.MidpointRounding.ToNegativeInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Если число находится на одинаковом расстоянии от двух других, оно округляется в сторону ближайшего результата, не большего, чем бесконечно точный результат.</summary>
      </Docs>
    </Member>
    <Member MemberName="ToPositiveInfinity">
      <MemberSignature Language="C#" Value="ToPositiveInfinity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToPositiveInfinity = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToPositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="ToPositiveInfinity" />
      <MemberSignature Language="C++ CLI" Value="ToPositiveInfinity" />
      <MemberSignature Language="F#" Value="ToPositiveInfinity = 4" Usage="System.MidpointRounding.ToPositiveInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Если число находится на одинаковом расстоянии от двух других, оно округляется в сторону ближайшего результата, не меньшего, чем бесконечно точный результат.</summary>
      </Docs>
    </Member>
    <Member MemberName="ToZero">
      <MemberSignature Language="C#" Value="ToZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToZero = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToZero" />
      <MemberSignature Language="VB.NET" Value="ToZero" />
      <MemberSignature Language="C++ CLI" Value="ToZero" />
      <MemberSignature Language="F#" Value="ToZero = 2" Usage="System.MidpointRounding.ToZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Если число находится на одинаковом расстоянии от двух других, оно округляется в сторону ближайшего результата, не превышающего по порядку бесконечно точный результат.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
