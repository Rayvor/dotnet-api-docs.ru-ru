<Type Name="LingerOption" FullName="System.Net.Sockets.LingerOption">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15183cf5828863670b75c5537a933a05c911a1ca" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75111604" /></Metadata><TypeSignature Language="C#" Value="public class LingerOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LingerOption extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.LingerOption" />
  <TypeSignature Language="VB.NET" Value="Public Class LingerOption" />
  <TypeSignature Language="C++ CLI" Value="public ref class LingerOption" />
  <TypeSignature Language="F#" Value="type LingerOption = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Указывает, будет ли оставаться подключенным объект <see cref="T:System.Net.Sockets.Socket" /> после вызова метода <see cref="M:System.Net.Sockets.Socket.Close" /> или <see cref="M:System.Net.Sockets.TcpClient.Close" />, а также указывает продолжительность времени, в течение которого этот объект будет оставаться подключенным, если продолжается отправка данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После того как приложение вызывает метод <xref:System.Net.Sockets.Socket> или <xref:System.Net.Sockets.TcpClient>, в исходящем сетевом буфере могут оставаться доступные данные. Если вы хотите указать период времени, в течение которого <xref:System.Net.Sockets.Socket> будет пытаться передать неотправленные данные после закрытия, создайте <xref:System.Net.Sockets.LingerOption> с параметром `enable`, для которого задано значение `true`, а для параметра `seconds` — нужное количество времени. Параметр `seconds` используется для указания времени, в течение которого <xref:System.Net.Sockets.Socket> должно оставаться подключенным до истечения времени ожидания. Если не нужно, чтобы <xref:System.Net.Sockets.Socket> оставаться подключенными в течение какого-либо времени после закрытия, создайте экземпляр <xref:System.Net.Sockets.LingerOption> с параметром `enable`, для которого задано значение `true`, а для параметра `seconds` задано значение 0. В этом случае <xref:System.Net.Sockets.Socket> закроется немедленно и все неотправленные данные будут потеряны. После создания передавайте <xref:System.Net.Sockets.LingerOption> методу <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=nameWithType>. Если вы отправляете и получаете данные с <xref:System.Net.Sockets.TcpClient>, установите экземпляр <xref:System.Net.Sockets.LingerOption> в свойстве <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType>.  
  
 В стеке IP-адресов используется период ожидания протокола IP по умолчанию, используемый в зависимости от времени кругового пути соединения. В большинстве случаев время ожидания, вычисленное стеком, больше релевантно, чем определено приложением. Это поведение по умолчанию для <xref:System.Net.Sockets.Socket>, если свойство <xref:System.Net.Sockets.Socket.LingerState%2A> не задано и для <xref:System.Net.Sockets.TcpClient>, если не задано свойство <xref:System.Net.Sockets.TcpClient.LingerState%2A>.  
  
   
  
## Examples  
 В следующем примере ранее созданная <xref:System.Net.Sockets.Socket> задается в течение одной секунды после вызова метода <xref:System.Net.Sockets.Socket.Close%2A>.  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LingerOption (bool enable, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enable, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enable As Boolean, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LingerOption(bool enable, int seconds);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.LingerOption : bool * int -&gt; System.Net.Sockets.LingerOption" Usage="new System.Net.Sockets.LingerOption (enable, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enable">Значение <see langword="true" />, чтобы объект оставался подключенным после вызова метода <see cref="M:System.Net.Sockets.Socket.Close" />; в противном случае — значение <see langword="false" />.</param>
        <param name="seconds">Количество секунд, в течение которого сохраняется подключение после вызова метода <see cref="M:System.Net.Sockets.Socket.Close" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.LingerOption" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После закрытия <xref:System.Net.Sockets.Socket>в исходящем сетевом буфере могут оставаться доступные данные. Используйте параметр `enable`, чтобы указать, следует ли <xref:System.Net.Sockets.Socket> продолжать передачу неотправленных данных после вызова метода Close. Используйте параметр `seconds`, чтобы указать, как долго <xref:System.Net.Sockets.Socket> будет пытаться передать неотправленные данные до истечения времени ожидания. Если указать `true` для параметра `enable` и значение 0 для параметра `seconds`, <xref:System.Net.Sockets.Socket> будет пытаться отправить данные до тех пор, пока в исходящем сетевом буфере не останется данных. Если указать `false` для параметра `enable`, <xref:System.Net.Sockets.Socket> будет немедленно закрыта и все неотправленные данные будут потеряны.  
  
 В следующей таблице описывается поведение методов <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=nameWithType> и <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=nameWithType> на основе возможных значений параметров `enable` и `seconds` при создании экземпляра Т:систем.нет.соккетс.линжероптион и задании в свойстве <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=nameWithType> или <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType>.  
  
|`enable`|`seconds`|Поведение|  
|--------------|---------------|--------------|  
|`false` (отключено), значение по умолчанию|Время ожидания неприменимо (по умолчанию).|Пытается отправить ожидающие данные для сокета, ориентированного на соединение (например, TCP), пока не истечет время ожидания протокола IP по умолчанию.|  
|`true` (включено)|Ненулевое время ожидания|Пытается отправить ожидающие данные до истечения заданного времени ожидания. Если попытка не удалась, Winsock сбрасывает подключение.|  
|`true` (включено)|Нулевое время ожидания.|Отменяет все ожидающие данные. Для сокета, ориентированного на подключение (например, TCP), Winsock сбрасывает подключение.|  
  
 В стеке IP-адресов используется период ожидания протокола IP по умолчанию, используемый в зависимости от времени кругового пути соединения. В большинстве случаев время ожидания, вычисленное стеком, больше релевантно, чем определено приложением. Это поведение по умолчанию для сокета, если не задано свойство <xref:System.Net.Sockets.Socket.LingerState%2A>.  
  
 Если свойство <xref:System.Net.Sockets.LingerOption.LingerTime%2A>, хранящееся в свойстве <xref:System.Net.Sockets.Socket.LingerState%2A>, установлено больше, чем время ожидания протокола IP по умолчанию, по умолчанию время ожидания протокола IP по-прежнему будет применяться и переопределено.  
  
   
  
## Examples  
 В следующем примере ранее созданная <xref:System.Net.Sockets.Socket> задается в течение одной секунды после вызова метода <xref:System.Net.Sockets.Socket.Close%2A>.  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Net.Sockets.LingerOption.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или устанавливает значение, определяющее необходимость ожидания после закрытия объекта <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <value>Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.Socket" /> должен находится в состоянии ожидания после вызова метода <see cref="M:System.Net.Sockets.Socket.Close" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать свойство <xref:System.Net.Sockets.LingerOption.Enabled%2A>, чтобы определить, будет ли <xref:System.Net.Sockets.Socket> в ожидании после закрытия. Измените это значение на `true` или `false` и передайте измененный <xref:System.Net.Sockets.LingerOption> методу <xref:System.Net.Sockets.Socket.SetSocketOption%2A> или задайте <xref:System.Net.Sockets.TcpClient.LingerState%2A> или <xref:System.Net.Sockets.Socket.LingerState%2A> property.to отключите или включите параметр "включить".  
  
 В следующей таблице описывается поведение возможных значений свойства <xref:System.Net.Sockets.LingerOption.Enabled%2A> и свойства <xref:System.Net.Sockets.LingerOption.LingerTime%2A>, хранящегося в свойстве <xref:System.Net.Sockets.Socket.LingerState%2A>.  
  
|`enable`|`seconds`|Поведение|  
|--------------|---------------|--------------|  
|`false` (отключено), значение по умолчанию|Время ожидания неприменимо (по умолчанию).|Пытается отправить ожидающие данные для сокета, ориентированного на соединение (например, TCP), пока не истечет время ожидания протокола IP по умолчанию.|  
|`true` (включено)|Ненулевое время ожидания|Пытается отправить ожидающие данные до истечения заданного времени ожидания. Если попытка не удалась, Winsock сбрасывает подключение.|  
|`true` (включено)|Нулевое время ожидания.|Отменяет все ожидающие данные. Для сокета, ориентированного на подключение (например, TCP), Winsock сбрасывает подключение.|  
  
 В стеке IP-адресов используется период ожидания протокола IP по умолчанию, используемый в зависимости от времени кругового пути соединения. В большинстве случаев время ожидания, вычисленное стеком, больше релевантно, чем определено приложением. Это поведение по умолчанию для сокета, если не задано свойство <xref:System.Net.Sockets.Socket.LingerState%2A>.  
  
 Если свойство <xref:System.Net.Sockets.LingerOption.LingerTime%2A>, хранящееся в свойстве <xref:System.Net.Sockets.Socket.LingerState%2A>, установлено больше, чем время ожидания протокола IP по умолчанию, по умолчанию время ожидания протокола IP по-прежнему будет применяться и переопределено.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LingerTime">
      <MemberSignature Language="C#" Value="public int LingerTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LingerTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.LingerTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LingerTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LingerTime : int with get, set" Usage="System.Net.Sockets.LingerOption.LingerTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает интервал времени, в течение которого объект должен оставаться подключенным после вызова метода <see cref="M:System.Net.Sockets.Socket.Close" />, если остались данные для отправки.</summary>
        <value>Интервал времени, заданный в секундах, в течение которого объект остается подключенным после вызова метода <see cref="M:System.Net.Sockets.Socket.Close" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте это значение, если необходимо определить, как долго закрытая <xref:System.Net.Sockets.Socket> будет пытаться передать неотправленные данные до истечения времени ожидания. Можно также задать для этого параметра требуемое время ожидания в секундах.  
  
 Если свойство <xref:System.Net.Sockets.LingerOption.Enabled%2A> имеет значение `true`, а для <xref:System.Net.Sockets.LingerOption.LingerTime%2A> задано 0, <xref:System.Net.Sockets.Socket> отклоняет все ожидающие данные для отправки в исходящий сетевой буфер. При изменении этого значения необходимо передать измененный экземпляр <xref:System.Net.Sockets.LingerOption> в метод <xref:System.Net.Sockets.Socket.SetSocketOption%2A> или задать свойство <xref:System.Net.Sockets.TcpClient.LingerState%2A> или <xref:System.Net.Sockets.Socket.LingerState%2A>.  
  
 В следующей таблице описывается поведение возможных значений свойства <xref:System.Net.Sockets.LingerOption.Enabled%2A> и свойства <xref:System.Net.Sockets.LingerOption.LingerTime%2A>, хранящегося в свойстве <xref:System.Net.Sockets.Socket.LingerState%2A>.  
  
|`enable`|`seconds`|Поведение|  
|--------------|---------------|--------------|  
|`false` (отключено), значение по умолчанию|Время ожидания неприменимо (по умолчанию).|Пытается отправить ожидающие данные для сокета, ориентированного на соединение (например, TCP), пока не истечет время ожидания протокола IP по умолчанию.|  
|`true` (включено)|Ненулевое время ожидания|Пытается отправить ожидающие данные до истечения заданного времени ожидания. Если попытка не удалась, Winsock сбрасывает подключение.|  
|`true` (включено)|Нулевое время ожидания.|Отменяет все ожидающие данные. Для сокета, ориентированного на подключение (например, TCP), Winsock сбрасывает подключение.|  
  
 В стеке IP-адресов используется период ожидания протокола IP по умолчанию, используемый в зависимости от времени кругового пути соединения. В большинстве случаев время ожидания, вычисленное стеком, больше релевантно, чем определено приложением. Это поведение по умолчанию для сокета, если не задано свойство <xref:System.Net.Sockets.Socket.LingerState%2A>.  
  
 Если свойство <xref:System.Net.Sockets.LingerOption.LingerTime%2A>, хранящееся в свойстве <xref:System.Net.Sockets.Socket.LingerState%2A>, установлено больше, чем время ожидания протокола IP по умолчанию, по умолчанию время ожидания протокола IP по-прежнему будет применяться и переопределено.  
  
   
  
## Examples  
 В следующем примере показано значение этого свойства.  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
