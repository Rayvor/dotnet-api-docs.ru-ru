<Type Name="Socket" FullName="System.Net.Sockets.Socket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e76abada1c0fd76185042cd11feb08da2fac8ab" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70511565" /></Metadata><TypeSignature Language="C#" Value="public class Socket : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Socket extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.Socket" />
  <TypeSignature Language="VB.NET" Value="Public Class Socket&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Socket : IDisposable" />
  <TypeSignature Language="F#" Value="type Socket = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="660fe-101">Реализует интерфейс сокетов Berkeley.</span><span class="sxs-lookup"><span data-stu-id="660fe-101">Implements the Berkeley sockets interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-102"><xref:System.Net.Sockets.Socket> Класс предоставляет широкий набор методов и свойств для сетевого взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="660fe-102">The <xref:System.Net.Sockets.Socket> class provides a rich set of methods and properties for network communications.</span></span> <span data-ttu-id="660fe-103">Класс позволяет выполнять синхронную и асинхронную передачу данных с помощью любого из протоколов связи, <xref:System.Net.Sockets.ProtocolType> перечисленных в перечислении. <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="660fe-103">The <xref:System.Net.Sockets.Socket> class allows you to perform both synchronous and asynchronous data transfer using any of the communication protocols listed in the <xref:System.Net.Sockets.ProtocolType> enumeration.</span></span>  
  
 <span data-ttu-id="660fe-104"><xref:System.Net.Sockets.Socket> Класс соответствует шаблону именования .NET Framework для асинхронных методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-104">The <xref:System.Net.Sockets.Socket> class follows the .NET Framework naming pattern for asynchronous methods.</span></span> <span data-ttu-id="660fe-105">Например, синхронным <xref:System.Net.Sockets.Socket.Receive%2A> методом соответствует асинхронный <xref:System.Net.Sockets.Socket.BeginReceive%2A> метод и <xref:System.Net.Sockets.Socket.EndReceive%2A> .</span><span class="sxs-lookup"><span data-stu-id="660fe-105">For example, the synchronous <xref:System.Net.Sockets.Socket.Receive%2A> method corresponds to the asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> and <xref:System.Net.Sockets.Socket.EndReceive%2A> methods.</span></span>  
  
 <span data-ttu-id="660fe-106">Если приложению требуется только один поток во время выполнения, используйте следующие методы, предназначенные для работы в синхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="660fe-106">If your application only requires one thread during execution, use the following methods, which are designed for synchronous operation mode.</span></span>  
  
-   <span data-ttu-id="660fe-107">Если используется протокол, ориентированный на подключение, например TCP, сервер может прослушивать соединения с помощью <xref:System.Net.Sockets.Socket.Listen%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-107">If you are using a connection-oriented protocol such as TCP, your server can listen for connections using the <xref:System.Net.Sockets.Socket.Listen%2A> method.</span></span> <span data-ttu-id="660fe-108">Метод обрабатывает все входящие запросы на подключение и возвращает объект <xref:System.Net.Sockets.Socket> , который можно использовать для передачи данных с удаленного узла. <xref:System.Net.Sockets.Socket.Accept%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-108">The <xref:System.Net.Sockets.Socket.Accept%2A> method processes any incoming connection requests and returns a <xref:System.Net.Sockets.Socket> that you can use to communicate data with the remote host.</span></span> <span data-ttu-id="660fe-109">Используйте метод, <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket.Send%2A> возвращаемый для вызова <xref:System.Net.Sockets.Socket.Receive%2A> метода или.</span><span class="sxs-lookup"><span data-stu-id="660fe-109">Use this returned <xref:System.Net.Sockets.Socket> to call the <xref:System.Net.Sockets.Socket.Send%2A> or <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span> <span data-ttu-id="660fe-110">Вызовите <xref:System.Net.Sockets.Socket.Listen%2A> метод перед вызовом метода, если требуется указать локальный IP-адрес и номер порта. <xref:System.Net.Sockets.Socket.Bind%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-110">Call the <xref:System.Net.Sockets.Socket.Bind%2A> method prior to calling the <xref:System.Net.Sockets.Socket.Listen%2A> method if you want to specify the local IP address and port number.</span></span> <span data-ttu-id="660fe-111">Если вы хотите, чтобы базовый поставщик услуг назначит свободный порт, используйте нулевой номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-111">Use a port number of zero if you want the underlying service provider to assign a free port for you.</span></span> <span data-ttu-id="660fe-112">Если вы хотите подключиться к узлу прослушивания, вызовите <xref:System.Net.Sockets.Socket.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-112">If you want to connect to a listening host, call the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="660fe-113">Чтобы передать данные, вызовите <xref:System.Net.Sockets.Socket.Send%2A> метод <xref:System.Net.Sockets.Socket.Receive%2A> или.</span><span class="sxs-lookup"><span data-stu-id="660fe-113">To communicate data, call the <xref:System.Net.Sockets.Socket.Send%2A> or <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
-   <span data-ttu-id="660fe-114">Если используется протокол без установления соединения, например UDP, нет необходимости прослушивать подключения вообще.</span><span class="sxs-lookup"><span data-stu-id="660fe-114">If you are using a connectionless protocol such as UDP, you do not need to listen for connections at all.</span></span> <span data-ttu-id="660fe-115">Вызовите <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод, чтобы принимать все входящие датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-115">Call the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method to accept any incoming datagrams.</span></span> <span data-ttu-id="660fe-116"><xref:System.Net.Sockets.Socket.SendTo%2A> Используйте метод для отправки датаграмм на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-116">Use the <xref:System.Net.Sockets.Socket.SendTo%2A> method to send datagrams to a remote host.</span></span>  
  
 <span data-ttu-id="660fe-117">Для обработки обмена данными с помощью отдельных потоков во время выполнения используйте следующие методы, предназначенные для асинхронного режима работы.</span><span class="sxs-lookup"><span data-stu-id="660fe-117">To process communications using separate threads during execution, use the following methods, which are designed for asynchronous operation mode.</span></span>  
  
-   <span data-ttu-id="660fe-118">Если используется протокол <xref:System.Net.Sockets.Socket>, ориентированный на подключение, например TCP, используйте методы, <xref:System.Net.Sockets.Socket.BeginConnect%2A>и <xref:System.Net.Sockets.Socket.EndConnect%2A> для подключения к узлу прослушивания.</span><span class="sxs-lookup"><span data-stu-id="660fe-118">If you are using a connection-oriented protocol such as TCP, use the <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, and <xref:System.Net.Sockets.Socket.EndConnect%2A> methods to connect with a listening host.</span></span> <span data-ttu-id="660fe-119">Используйте методы and <xref:System.Net.Sockets.Socket.EndSend%2A> или <xref:System.Net.Sockets.Socket.BeginReceive%2A> и для асинхронной передачи данных. <xref:System.Net.Sockets.Socket.BeginSend%2A> <xref:System.Net.Sockets.Socket.EndReceive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-119">Use the <xref:System.Net.Sockets.Socket.BeginSend%2A> and <xref:System.Net.Sockets.Socket.EndSend%2A> or <xref:System.Net.Sockets.Socket.BeginReceive%2A> and <xref:System.Net.Sockets.Socket.EndReceive%2A> methods to communicate data asynchronously.</span></span> <span data-ttu-id="660fe-120">Входящие запросы на подключение могут обрабатываться <xref:System.Net.Sockets.Socket.BeginAccept%2A> с <xref:System.Net.Sockets.Socket.EndAccept%2A>помощью и.</span><span class="sxs-lookup"><span data-stu-id="660fe-120">Incoming connection requests can be processed using <xref:System.Net.Sockets.Socket.BeginAccept%2A> and <xref:System.Net.Sockets.Socket.EndAccept%2A>.</span></span>  
  
-   <span data-ttu-id="660fe-121">Если используется протокол без установления соединения, например UDP, можно <xref:System.Net.Sockets.Socket.BeginSendTo%2A> использовать и <xref:System.Net.Sockets.Socket.EndSendTo%2A> для <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> отправки датаграмм, <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> а также для получения датаграмм.</span><span class="sxs-lookup"><span data-stu-id="660fe-121">If you are using a connectionless protocol such as UDP, you can use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> and <xref:System.Net.Sockets.Socket.EndSendTo%2A> to send datagrams, and <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> and <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> to receive datagrams.</span></span>  
  
 <span data-ttu-id="660fe-122">При выполнении нескольких асинхронных операций на сокете они не обязательно завершаются в том порядке, в котором они были запущены.</span><span class="sxs-lookup"><span data-stu-id="660fe-122">If you perform multiple asynchronous operations on a socket, they do not necessarily complete in the order in which they are started.</span></span>  
  
 <span data-ttu-id="660fe-123">После завершения отправки и получения данных используйте <xref:System.Net.Sockets.Socket.Shutdown%2A> метод, чтобы <xref:System.Net.Sockets.Socket>отключить.</span><span class="sxs-lookup"><span data-stu-id="660fe-123">When you are finished sending and receiving data, use the <xref:System.Net.Sockets.Socket.Shutdown%2A> method to disable the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-124">После вызова <xref:System.Net.Sockets.Socket.Shutdown%2A> <xref:System.Net.Sockets.Socket.Close%2A> вызовите метод, чтобы освободить все ресурсы, <xref:System.Net.Sockets.Socket>связанные с объектом.</span><span class="sxs-lookup"><span data-stu-id="660fe-124">After calling <xref:System.Net.Sockets.Socket.Shutdown%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method to release all resources associated with the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="660fe-125">Класс позволяет настроить с помощью  <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метода. <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="660fe-125">The <xref:System.Net.Sockets.Socket> class allows you to configure your <xref:System.Net.Sockets.Socket> using the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method.</span></span> <span data-ttu-id="660fe-126">Извлеките эти параметры с <xref:System.Net.Sockets.Socket.GetSocketOption%2A> помощью метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-126">Retrieve these settings using the <xref:System.Net.Sockets.Socket.GetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-127">Если вы создаете относительно простое приложение и не требует максимальной производительности, рассмотрите возможность использования <xref:System.Net.Sockets.TcpClient>, <xref:System.Net.Sockets.TcpListener>и <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="660fe-127">If you are writing a relatively simple application and do not require maximum performance, consider using <xref:System.Net.Sockets.TcpClient>, <xref:System.Net.Sockets.TcpListener>, and <xref:System.Net.Sockets.UdpClient>.</span></span> <span data-ttu-id="660fe-128">Эти классы предоставляют простой и понятный пользователю интерфейс для <xref:System.Net.Sockets.Socket> обмена данными.</span><span class="sxs-lookup"><span data-stu-id="660fe-128">These classes provide a simpler and more user-friendly interface to <xref:System.Net.Sockets.Socket> communications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-129">В следующем примере кода показано, <xref:System.Net.Sockets.Socket> как класс можно использовать для отправки данных на HTTP-сервер и получения ответа.</span><span class="sxs-lookup"><span data-stu-id="660fe-129">The following code example shows how the <xref:System.Net.Sockets.Socket> class can be used to send data to an HTTP server and receive the response.</span></span> <span data-ttu-id="660fe-130">Этот пример блокируется до получения всей страницы.</span><span class="sxs-lookup"><span data-stu-id="660fe-130">This example blocks until the entire page is received.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket/CPP/socket.cpp#1)]
 [!code-csharp[System.Net.Sockets.Socket#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket/CS/socket.cs#1)]
 [!code-vb[System.Net.Sockets.Socket#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Socket/VB/socket.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-131">Чтобы установить исходящее подключение или принять входящий запрос.</span><span class="sxs-lookup"><span data-stu-id="660fe-131">To establish an outgoing connection or accept an incoming request.</span></span></permission>
    <threadsafe><span data-ttu-id="660fe-132">Экземпляры этого класса являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="660fe-132">Instances of this class are thread safe.</span></span></threadsafe>
    <altmember cref="N:System.Net" />
    <altmember cref="N:System.Net.Cache" />
    <altmember cref="N:System.Net.Security" />
    <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
    <related type="Article" href="~/docs/framework/network-programming/index.md"><span data-ttu-id="660fe-133">Сетевое программирование в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="660fe-133">Network Programming in the .NET Framework</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/best-practices-for-system-net-classes.md"><span data-ttu-id="660fe-134">Рекомендации по использованию классов System.Net</span><span class="sxs-lookup"><span data-stu-id="660fe-134">Best Practices for System.Net Classes</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/cache-management-for-network-applications.md"><span data-ttu-id="660fe-135">Управление кэшем для сетевых приложений</span><span class="sxs-lookup"><span data-stu-id="660fe-135">Cache Management for Network Applications</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/internet-protocol-version-6.md"><span data-ttu-id="660fe-136">протокол IP версии 6</span><span class="sxs-lookup"><span data-stu-id="660fe-136">Internet Protocol Version 6</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md"><span data-ttu-id="660fe-137">Примеры сетевого программирования</span><span class="sxs-lookup"><span data-stu-id="660fe-137">Network Programming Samples</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/network-tracing.md"><span data-ttu-id="660fe-138">Трассировка сети в .NET Framework</span><span class="sxs-lookup"><span data-stu-id="660fe-138">Network Tracing in the .NET Framework</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/security-in-network-programming.md"><span data-ttu-id="660fe-139">Безопасность в сетевом программировании</span><span class="sxs-lookup"><span data-stu-id="660fe-139">Security in Network Programming</span></span></related>
    <related type="Article" href="~/docs/framework/network-programming/socket-performance-enhancements-in-version-3-5.md"><span data-ttu-id="660fe-140">Улучшения производительности сокетов в версии 3.5</span><span class="sxs-lookup"><span data-stu-id="660fe-140">Socket Performance Enhancements in Version 3.5</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-141">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-141">Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (System.Net.Sockets.SocketInformation socketInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.SocketInformation socketInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Socket(System::Net::Sockets::SocketInformation socketInformation);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.Socket : System.Net.Sockets.SocketInformation -&gt; System.Net.Sockets.Socket" Usage="new System.Net.Sockets.Socket socketInformation" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socketInformation" Type="System.Net.Sockets.SocketInformation" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="socketInformation"><span data-ttu-id="660fe-142">Информация сокета, возвращенная объектом <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-142">The socket information returned by <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</span></span></param>
        <summary><span data-ttu-id="660fe-143">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.Socket" /> с помощью указанного значения, возвращенного из объекта <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified value returned from <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-144">Если вы вызываете <xref:System.Net.Sockets.Socket.%23ctor%2A> конструктор несколько раз с тем же массивом байтов, что и аргумент для каждого вызова, вы создадите несколько <xref:System.Net.Sockets.Socket>управляемых объектов с одним и тем же базовым сокетом.</span><span class="sxs-lookup"><span data-stu-id="660fe-144">If you call the <xref:System.Net.Sockets.Socket.%23ctor%2A> constructor multiple times with the same byte array as the argument for each call, you will create multiple managed <xref:System.Net.Sockets.Socket>s with the same underlying socket.</span></span> <span data-ttu-id="660fe-145">Этот подход настоятельно не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="660fe-145">This practice is strongly discouraged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (System.Net.Sockets.SocketType socketType, System.Net.Sockets.ProtocolType protocolType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.SocketType socketType, valuetype System.Net.Sockets.ProtocolType protocolType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Socket(System::Net::Sockets::SocketType socketType, System::Net::Sockets::ProtocolType protocolType);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.Socket : System.Net.Sockets.SocketType * System.Net.Sockets.ProtocolType -&gt; System.Net.Sockets.Socket" Usage="new System.Net.Sockets.Socket (socketType, protocolType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socketType" Type="System.Net.Sockets.SocketType" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="protocolType" Type="System.Net.Sockets.ProtocolType" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="socketType"><span data-ttu-id="660fe-146">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketType" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-146">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</span></span></param>
        <param name="protocolType"><span data-ttu-id="660fe-147">Одно из значений <see cref="T:System.Net.Sockets.ProtocolType" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-147">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-148">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.Socket" />, используя указанный тип сокетов и протокол.</span><span class="sxs-lookup"><span data-stu-id="660fe-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified socket type and protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-149">Параметр задает тип <xref:System.Net.Sockets.Socket> класса, а `protocolType` параметр указывает протокол, <xref:System.Net.Sockets.Socket>используемый. `socketType`</span><span class="sxs-lookup"><span data-stu-id="660fe-149">The `socketType` parameter specifies the type of the <xref:System.Net.Sockets.Socket> class and the `protocolType` parameter specifies the protocol used by <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-150">Два параметра не являются независимыми.</span><span class="sxs-lookup"><span data-stu-id="660fe-150">The two parameters are not independent.</span></span> <span data-ttu-id="660fe-151"><xref:System.Net.Sockets.Socket> Часто тип является неявным в протоколе.</span><span class="sxs-lookup"><span data-stu-id="660fe-151">Often the <xref:System.Net.Sockets.Socket> type is implicit in the protocol.</span></span> <span data-ttu-id="660fe-152">Если сочетание <xref:System.Net.Sockets.Socket> типа и типа протокола приводит к недопустимому <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.SocketException>, этот конструктор создает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-152">If the combination of <xref:System.Net.Sockets.Socket> type and protocol type results in an invalid <xref:System.Net.Sockets.Socket>, this constructor throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-153">Если этот конструктор создает исключение <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-153">If this constructor throws a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-154">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-154">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-155">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-155">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-156">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-156">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-157">Сочетание параметров <paramref name="socketType" /> и <paramref name="protocolType" /> приводит к недопустимому сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-157">The combination of  <paramref name="socketType" /> and <paramref name="protocolType" /> results in an invalid socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (System.Net.Sockets.AddressFamily addressFamily, System.Net.Sockets.SocketType socketType, System.Net.Sockets.ProtocolType protocolType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily addressFamily, valuetype System.Net.Sockets.SocketType socketType, valuetype System.Net.Sockets.ProtocolType protocolType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Socket(System::Net::Sockets::AddressFamily addressFamily, System::Net::Sockets::SocketType socketType, System::Net::Sockets::ProtocolType protocolType);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.Socket : System.Net.Sockets.AddressFamily * System.Net.Sockets.SocketType * System.Net.Sockets.ProtocolType -&gt; System.Net.Sockets.Socket" Usage="new System.Net.Sockets.Socket (addressFamily, socketType, protocolType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="addressFamily" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="socketType" Type="System.Net.Sockets.SocketType" />
        <Parameter Name="protocolType" Type="System.Net.Sockets.ProtocolType" />
      </Parameters>
      <Docs>
        <param name="addressFamily"><span data-ttu-id="660fe-158">Одно из значений перечисления <see cref="T:System.Net.Sockets.AddressFamily" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-158">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</span></span></param>
        <param name="socketType"><span data-ttu-id="660fe-159">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketType" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-159">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</span></span></param>
        <param name="protocolType"><span data-ttu-id="660fe-160">Одно из значений перечисления <see cref="T:System.Net.Sockets.ProtocolType" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-160">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-161">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.Socket" />, используя заданные семейство адресов, тип сокета и протокол.</span><span class="sxs-lookup"><span data-stu-id="660fe-161">Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified address family, socket type and protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-162"><xref:System.Net.Sockets.Socket> `socketType` <xref:System.Net.Sockets.Socket> `protocolType` <xref:System.Net.Sockets.Socket>Параметр задает схему адресации, используемую классом, параметр задает тип класса, а параметр указывает протокол, используемый. `addressFamily`</span><span class="sxs-lookup"><span data-stu-id="660fe-162">The `addressFamily` parameter specifies the addressing scheme that the <xref:System.Net.Sockets.Socket> class uses, the `socketType` parameter specifies the type of the <xref:System.Net.Sockets.Socket> class, and the `protocolType` parameter specifies the protocol used by <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-163">Три параметра не являются независимыми.</span><span class="sxs-lookup"><span data-stu-id="660fe-163">The three parameters are not independent.</span></span> <span data-ttu-id="660fe-164">Некоторые семейства адресов ограничивают, какие протоколы можно использовать с ними, и <xref:System.Net.Sockets.Socket> часто тип является неявным в протоколе.</span><span class="sxs-lookup"><span data-stu-id="660fe-164">Some address families restrict which protocols can be used with them, and often the <xref:System.Net.Sockets.Socket> type is implicit in the protocol.</span></span> <span data-ttu-id="660fe-165">Если сочетание семейства адресов, <xref:System.Net.Sockets.Socket> типа и типа протокола приводит к недопустимому <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.SocketException>, этот конструктор создает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-165">If the combination of address family, <xref:System.Net.Sockets.Socket> type, and protocol type results in an invalid <xref:System.Net.Sockets.Socket>, this constructor throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-166">Если этот конструктор создает исключение <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-166">If this constructor throws a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-167">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-167">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-168">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-168">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-169">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-169">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-170">В следующем примере кода показано, как создать экземпляр <xref:System.Net.Sockets.Socket> класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-170">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
 [!code-cpp[Socket_Send_Receive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Send_Receive/CPP/source.cpp#1)]
 [!code-csharp[Socket_Send_Receive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Send_Receive/CS/source.cs#1)]
 [!code-vb[Socket_Send_Receive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Send_Receive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-171">Сочетание параметров <paramref name="addressFamily" />, <paramref name="socketType" /> и <paramref name="protocolType" /> приводит к неработоспособному сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-171">The combination of <paramref name="addressFamily" />, <paramref name="socketType" />, and <paramref name="protocolType" /> results in an invalid socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketException" />
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
        <altmember cref="T:System.Net.Sockets.ProtocolType" />
        <altmember cref="T:System.Net.Sockets.SocketType" />
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Accept ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket Accept() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Function Accept () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ Accept();" />
      <MemberSignature Language="F#" Value="member this.Accept : unit -&gt; System.Net.Sockets.Socket" Usage="socket.Accept " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="660fe-172">Создает новый объект <see cref="T:System.Net.Sockets.Socket" /> для заново созданного подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-172">Creates a new <see cref="T:System.Net.Sockets.Socket" /> for a newly created connection.</span></span></summary>
        <returns><span data-ttu-id="660fe-173">Объект <see cref="T:System.Net.Sockets.Socket" /> для заново созданного подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-173">A <see cref="T:System.Net.Sockets.Socket" /> for a newly created connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-174"><xref:System.Net.Sockets.Socket.Accept%2A>синхронно извлекает из очереди запросов на подключение прослушивающего сокета первый ожидающий запрос на подключение, а затем создает и возвращает новый <xref:System.Net.Sockets.Socket>объект.</span><span class="sxs-lookup"><span data-stu-id="660fe-174"><xref:System.Net.Sockets.Socket.Accept%2A> synchronously extracts the first pending connection request from the connection request queue of the listening socket, and then creates and returns a new <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-175">Этот параметр нельзя использовать <xref:System.Net.Sockets.Socket> для приема любых дополнительных соединений из очереди подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-175">You cannot use this returned <xref:System.Net.Sockets.Socket> to accept any additional connections from the connection queue.</span></span> <span data-ttu-id="660fe-176">Однако можно вызвать <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> метод возвращаемого <xref:System.Net.Sockets.Socket> метода, чтобы найти сетевой адрес и номер порта удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-176">However, you can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> method of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
 <span data-ttu-id="660fe-177">В блокирующем режиме <xref:System.Net.Sockets.Socket.Accept%2A> блокируется до постановки входящего подключения в очередь.</span><span class="sxs-lookup"><span data-stu-id="660fe-177">In blocking mode, <xref:System.Net.Sockets.Socket.Accept%2A> blocks until an incoming connection attempt is queued.</span></span> <span data-ttu-id="660fe-178">После того как подключение будет принято, исходное <xref:System.Net.Sockets.Socket> состояние продолжит постановку в очередь входящих запросов на подключение, пока вы не закроете его.</span><span class="sxs-lookup"><span data-stu-id="660fe-178">Once a connection is accepted, the original <xref:System.Net.Sockets.Socket> continues queuing incoming connection requests until you close it.</span></span>  
  
 <span data-ttu-id="660fe-179">Если этот метод вызывается с помощью неблокирующего <xref:System.Net.Sockets.Socket>, а запросы на <xref:System.Net.Sockets.SocketException>подключение не помещаются в <xref:System.Net.Sockets.Socket.Accept%2A> очередь, вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-179">If you call this method using a non-blocking <xref:System.Net.Sockets.Socket>, and no connection requests are queued, <xref:System.Net.Sockets.Socket.Accept%2A> throws a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-180">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-180">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-181">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-181">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-182">Перед вызовом <xref:System.Net.Sockets.Socket.Accept%2A> метода необходимо сначала <xref:System.Net.Sockets.Socket.Listen%2A> вызвать метод для прослушивания и постановки в очередь входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-182">Before calling the <xref:System.Net.Sockets.Socket.Accept%2A> method, you must first call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-183">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-183">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-184">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-184">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-185">В следующем примере кода принимается простое <xref:System.Net.Sockets.Socket> соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-185">The following code example accepts a simple <xref:System.Net.Sockets.Socket> connection.</span></span>  
  
 [!code-cpp[Classic Socket.Accept Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Accept Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Accept Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Accept Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Accept Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Accept Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-186">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-186">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-187"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-187">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-188">Принимающий сокет не производит прослушивание подключений.</span><span class="sxs-lookup"><span data-stu-id="660fe-188">The accepting socket is not listening for connections.</span></span> <span data-ttu-id="660fe-189">Необходимо вызвать <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> и <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> до вызова объекта <see cref="M:System.Net.Sockets.Socket.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-189">You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.Accept" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.RemoteEndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AcceptAsync">
      <MemberSignature Language="C#" Value="public bool AcceptAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AcceptAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool AcceptAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AcceptAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.AcceptAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-190">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-190">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-191">Начинает асинхронную операцию, чтобы принять попытку входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-191">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="660fe-192"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-192"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-193">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-193">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-194"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-194"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-195">Событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не произойдет и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-195">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-196">Протоколы, ориентированные на подключение <xref:System.Net.Sockets.Socket.AcceptAsync%2A> , могут использовать метод для асинхронной обработки входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-196">Connection-oriented protocols can use the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> method to asynchronously process incoming connection attempts.</span></span> <span data-ttu-id="660fe-197">Асинхронное принятие подключений дает возможность отправлять и получать данные в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-197">Accepting connections asynchronously gives you the ability to send and receive data within a separate execution thread.</span></span> <span data-ttu-id="660fe-198">Перед вызовом <xref:System.Net.Sockets.Socket.AcceptAsync%2A> метода необходимо <xref:System.Net.Sockets.Socket.Listen%2A> вызвать метод для прослушивания и постановки в очередь входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-198">Before calling the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> method, you must call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
 <span data-ttu-id="660fe-199">Чтобы получать уведомления о завершении, необходимо создать метод обратного вызова, реализующий\<обработчик EventHandler SocketAsyncEventArgs > делегата и привязать его <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> к событию.</span><span class="sxs-lookup"><span data-stu-id="660fe-199">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and hook it to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="660fe-200">Для <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> объекта требуются следующие свойства и события:</span><span class="sxs-lookup"><span data-stu-id="660fe-200">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="660fe-201">Вызывающий объект может дополнительно указать существующий <xref:System.Net.Sockets.Socket> объект для входящего подключения, указав объект <xref:System.Net.Sockets.Socket> для использования со <xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType> свойством.</span><span class="sxs-lookup"><span data-stu-id="660fe-201">The caller can optionally specify an existing <xref:System.Net.Sockets.Socket> to use for the incoming connection by specifying the <xref:System.Net.Sockets.Socket> to use with the <xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="660fe-202"><xref:System.Net.Sockets.Socket.ProtocolType%2A> <xref:System.Net.Sockets.Socket.SocketType%2A> <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket.AddressFamily%2A> <xref:System.Net.Sockets.Socket> Если свойство имеет значение null, новый объект создается с тем же,, и в качестве текущего и задается как <xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType> свойство. <xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-202">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType> property is null, a new <xref:System.Net.Sockets.Socket> is constructed with the same <xref:System.Net.Sockets.Socket.AddressFamily%2A>, <xref:System.Net.Sockets.Socket.SocketType%2A>, and <xref:System.Net.Sockets.Socket.ProtocolType%2A> as the current <xref:System.Net.Sockets.Socket> and set as the <xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="660fe-203">Вызывающая сторона может задать <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> для свойства любой объект пользовательского состояния, необходимый перед <xref:System.Net.Sockets.Socket.AcceptAsync%2A> вызовом метода, чтобы информация была извлечена в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-203">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="660fe-204">Если для обратного вызова требуется больше сведений, чем для одного объекта, можно создать небольшой класс для хранения других требуемых сведений о состоянии в качестве членов.</span><span class="sxs-lookup"><span data-stu-id="660fe-204">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="660fe-205">При необходимости можно указать буфер, в котором будет получен начальный блок данных на сокете после того, как метод будет <xref:System.Net.Sockets.Socket.ConnectAsync%2A> выполнен.</span><span class="sxs-lookup"><span data-stu-id="660fe-205">Optionally, a buffer may be provided in which to receive the initial block of data on the socket after the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method succeeds.</span></span> <span data-ttu-id="660fe-206">В этом случае <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> свойство должно быть установлено в буфер, содержащий получаемые данные <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> , а свойство должно быть установлено равным максимальному числу байтов данных, получаемых в буфере.</span><span class="sxs-lookup"><span data-stu-id="660fe-206">In this case, the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> property needs to be set to the buffer containing the data to receive and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> property needs to be set to the maximum number of bytes of data to receive in the buffer.</span></span> <span data-ttu-id="660fe-207">Эти свойства можно задать с помощью <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A?displayProperty=nameWithType> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-207">These properties can be set using the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="660fe-208">Часть переданного буфера будет использоваться внутренне для использования базовым вызовом Winsock Акцептекс.</span><span class="sxs-lookup"><span data-stu-id="660fe-208">Part of the buffer passed in will be consumed internally for use by the underlying Winsock AcceptEx call.</span></span> <span data-ttu-id="660fe-209">Это означает, что объем возвращаемых данных всегда будет меньше значения <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> свойства <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> в предоставленном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="660fe-209">This means that the amount of data returned will always be less than the value of the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> property on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> instance provided.</span></span> <span data-ttu-id="660fe-210">Объем буфера, используемый внутри, зависит от семейства адресов сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-210">The amount of the buffer used internally varies based on the address family of the socket.</span></span> <span data-ttu-id="660fe-211">Минимальный требуемый размер буфера составляет 288 байт.</span><span class="sxs-lookup"><span data-stu-id="660fe-211">The minimum buffer size required is 288 bytes.</span></span> <span data-ttu-id="660fe-212">Если указан больший размер буфера, то ожидается, что <xref:System.Net.Sockets.Socket> некоторые дополнительные данные будут отличаться от данных адреса, полученных вызовом Winsock акцептекс, и будут ожидать получения этих дополнительных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-212">If a larger buffer size is specified, then the <xref:System.Net.Sockets.Socket> will expect some extra data other than the address data received by the Winsock AcceptEx call and will wait until this extra data is received.</span></span> <span data-ttu-id="660fe-213">В случае истечения времени ожидания соединение сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="660fe-213">If a timeout occurs, the connection is reset.</span></span> <span data-ttu-id="660fe-214">Поэтому, если требуются дополнительные данные определенного объема, то размер буфера должен быть минимальным размером буфера и этим значением.</span><span class="sxs-lookup"><span data-stu-id="660fe-214">So if extra data is expected of  a specific amount, then the buffer size should be set to the minimum buffer size plus this amount.</span></span>  
  
 <span data-ttu-id="660fe-215">Метод обратного вызова завершения должен проверить <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> свойство, чтобы определить, <xref:System.Net.Sockets.Socket.AcceptAsync%2A> была ли операция успешной.</span><span class="sxs-lookup"><span data-stu-id="660fe-215">The completion callback method should examine the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> property to determine if the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> operation was successful.</span></span>  
  
 <span data-ttu-id="660fe-216">Это <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> событие может возникать в некоторых случаях, когда соединение не было принято, и <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> <xref:System.Net.Sockets.SocketError.ConnectionReset>свойство должно иметь значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-216">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event can occur in some cases when no connection has been accepted and cause the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> property to be set to <xref:System.Net.Sockets.SocketError.ConnectionReset>.</span></span> <span data-ttu-id="660fe-217">Это может произойти в результате сканирования портов с использованием половины открытой проверки типа SYN (с последовательностью SYN-> SYN-ACK-> RST).</span><span class="sxs-lookup"><span data-stu-id="660fe-217">This can occur as a result of port scanning using a half-open SYN type scan (a SYN -> SYN-ACK -> RST sequence).</span></span> <span data-ttu-id="660fe-218">Приложения, использующие <xref:System.Net.Sockets.Socket.AcceptAsync%2A> метод, должны быть готовы к обработке этого условия.</span><span class="sxs-lookup"><span data-stu-id="660fe-218">Applications using the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> method should be prepared to handle this condition.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-219">Аргумент является недопустимым.</span><span class="sxs-lookup"><span data-stu-id="660fe-219">An argument is not valid.</span></span> <span data-ttu-id="660fe-220">Это исключение возникает, если обеспечиваемый буфер имеет недостаточный размер.</span><span class="sxs-lookup"><span data-stu-id="660fe-220">This exception occurs if the buffer provided is not large enough.</span></span> <span data-ttu-id="660fe-221">Буфер должен иметь размер, равный, по крайней мере, 2 \* (размер(SOCKADDR_STORAGE + 16) байт.</span><span class="sxs-lookup"><span data-stu-id="660fe-221">The buffer must be at least 2 \* (sizeof(SOCKADDR_STORAGE + 16) bytes.</span></span>  
  
<span data-ttu-id="660fe-222">Это исключение также возникает, если задано несколько буферов, свойство <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> не имеет значение "null".</span><span class="sxs-lookup"><span data-stu-id="660fe-222">This exception also occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-223">Аргумент вне диапазона.</span><span class="sxs-lookup"><span data-stu-id="660fe-223">An argument is out of range.</span></span> <span data-ttu-id="660fe-224">Исключение возникает, если объект <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> имеет значение меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-224">The exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-225">Предпринят запрос выполнения недопустимой операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-225">An invalid operation was requested.</span></span> <span data-ttu-id="660fe-226">Это исключение возникает, если принимающий объект <see cref="T:System.Net.Sockets.Socket" /> не производит прослушивание подключений или принимающий сокет является связанным.</span><span class="sxs-lookup"><span data-stu-id="660fe-226">This exception occurs if the accepting <see cref="T:System.Net.Sockets.Socket" /> is not listening for connections or the accepted socket is bound.</span></span>  
  
<span data-ttu-id="660fe-227">Требуется вызвать объект <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> и метод <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> перед вызовом метода <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-227">You must call the <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> method before calling the <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</span></span>  
  
<span data-ttu-id="660fe-228">Это исключение также происходит, если сокет уже подключен или работа с сокетом уже выполнялась с использованием указанного параметра <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-228">This exception also occurs if the socket is already connected or a socket operation was already in progress using the specified <paramref name="e" /> parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-229">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-229">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-230">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-230">Windows XP or later is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-231"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-231">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="AddressFamily">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.AddressFamily AddressFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily AddressFamily" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.AddressFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddressFamily As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::AddressFamily AddressFamily { System::Net::Sockets::AddressFamily get(); };" />
      <MemberSignature Language="F#" Value="member this.AddressFamily : System.Net.Sockets.AddressFamily" Usage="System.Net.Sockets.Socket.AddressFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-232">Получает семейство адресов объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-232">Gets the address family of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="660fe-233">Одно из значений перечисления <see cref="T:System.Net.Sockets.AddressFamily" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-233">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-234">Указывает схему адресации, которую может использовать экземпляр <xref:System.Net.Sockets.Socket> класса. <xref:System.Net.Sockets.AddressFamily></span><span class="sxs-lookup"><span data-stu-id="660fe-234">The <xref:System.Net.Sockets.AddressFamily> specifies the addressing scheme that an instance of the <xref:System.Net.Sockets.Socket> class can use.</span></span> <span data-ttu-id="660fe-235">Это свойство доступно только для чтения и задается при <xref:System.Net.Sockets.Socket> создании.</span><span class="sxs-lookup"><span data-stu-id="660fe-235">This property is read-only and is set when the <xref:System.Net.Sockets.Socket> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-236">В следующем примере кода в консоль <xref:System.Net.Sockets.AddressFamily>выводятся <xref:System.Net.Sockets.ProtocolType> , <xref:System.Net.Sockets.SocketType>и.</span><span class="sxs-lookup"><span data-stu-id="660fe-236">The following code example displays the <xref:System.Net.Sockets.AddressFamily>, <xref:System.Net.Sockets.SocketType>, and <xref:System.Net.Sockets.ProtocolType> to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#3)]
 [!code-csharp[Socket_Socket_Options#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#3)]
 [!code-vb[Socket_Socket_Options#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.Socket.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-237">Возвращает значение, указывающее количество полученных из сети и доступных для чтения данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-237">Gets the amount of data that has been received from the network and is available to be read.</span></span></summary>
        <value><span data-ttu-id="660fe-238">Количество байтов данных, полученных из сети и доступных для чтения.</span><span class="sxs-lookup"><span data-stu-id="660fe-238">The number of bytes of data received from the network and available to be read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-239">Если вы используете неблокирующий <xref:System.Net.Sockets.Socket>метод, <xref:System.Net.Sockets.Socket.Available%2A> это хороший способ определить, находятся ли данные в очереди для чтения перед вызовом метода <xref:System.Net.Sockets.Socket.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-239">If you are using a non-blocking <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Available%2A> is a good way to determine whether data is queued for reading, before calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="660fe-240">Доступные данные — это общий объем данных, помещенных в очередь сетевого буфера для чтения.</span><span class="sxs-lookup"><span data-stu-id="660fe-240">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="660fe-241">Если в сетевом буфере нет данных, <xref:System.Net.Sockets.Socket.Available%2A> функция возвращает 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-241">If no data is queued in the network buffer, <xref:System.Net.Sockets.Socket.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="660fe-242">Если удаленный узел завершает работу или закрывает соединение, <xref:System.Net.Sockets.Socket.Available%2A> может <xref:System.Net.Sockets.SocketException>вызвать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-242">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.Socket.Available%2A> can throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-243">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-243">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-244">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-244">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-245">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-245">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-246">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-246">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-247">В следующем примере кода сравниваются результаты вызова Иоконтрол с ФИОНРЕАД и доступным свойством.</span><span class="sxs-lookup"><span data-stu-id="660fe-247">The following code example compares the results of calling IOControl with FIONREAD and the Available property.</span></span>  
  
 [!code-cpp[NCLSocketIoControl#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketIoControl/CPP/iocontrolserver.cpp#1)]
 [!code-csharp[NCLSocketIoControl#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketIoControl/CS/iocontrolserver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-248">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-248">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-249"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-249">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Net.Sockets.SocketType.Dgram" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAccept">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-250">Начинает асинхронную операцию, чтобы принять попытку входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-250">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAccept">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAccept (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAccept(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAccept (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAccept(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAccept : AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginAccept (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="660fe-251">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-251">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-252">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-252">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-253">Начинает асинхронную операцию, чтобы принять попытку входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-253">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="660fe-254">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное создание объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-254">An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> creation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-255">Протоколы, ориентированные на подключение <xref:System.Net.Sockets.Socket.BeginAccept%2A> , могут использовать метод для асинхронной обработки входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-255">Connection-oriented protocols can use the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method to asynchronously process incoming connection attempts.</span></span> <span data-ttu-id="660fe-256">Асинхронное принятие подключений дает возможность отправлять и получать данные в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-256">Accepting connections asynchronously gives you the ability to send and receive data within a separate execution thread.</span></span> <span data-ttu-id="660fe-257">Перед вызовом <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода необходимо <xref:System.Net.Sockets.Socket.Listen%2A> вызвать метод для прослушивания и постановки в очередь входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-257">Before calling the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, you must call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
 <span data-ttu-id="660fe-258">Необходимо создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginAccept%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-258">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="660fe-259">Для этого, как минимум, необходимо передать <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket.BeginAccept%2A> объект прослушивания через `state` параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-259">To do this, at the very minimum, you must pass the listening <xref:System.Net.Sockets.Socket> object to <xref:System.Net.Sockets.Socket.BeginAccept%2A> through the `state` parameter.</span></span> <span data-ttu-id="660fe-260">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-260">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-261">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginAccept%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-261">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-262">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndAccept%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-262">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndAccept%2A> method.</span></span> <span data-ttu-id="660fe-263">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginAccept%2A>, система обычно использует отдельный поток для выполнения указанного метода обратного вызова и <xref:System.Net.Sockets.Socket.EndAccept%2A> блокируется до тех пор, пока не будет получено ожидающее подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-263">When your application calls <xref:System.Net.Sockets.Socket.BeginAccept%2A>, the system usually uses a separate thread to execute the specified callback method and blocks on <xref:System.Net.Sockets.Socket.EndAccept%2A> until a pending connection is retrieved.</span></span> <span data-ttu-id="660fe-264"><xref:System.Net.Sockets.Socket.EndAccept%2A>Возвращает новый <xref:System.Net.Sockets.Socket> объект, который можно использовать для отправки и получения данных с удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-264"><xref:System.Net.Sockets.Socket.EndAccept%2A> will return a new <xref:System.Net.Sockets.Socket> object that you can use to send and receive data with the remote host.</span></span> <span data-ttu-id="660fe-265">Этот параметр нельзя использовать <xref:System.Net.Sockets.Socket> для приема любых дополнительных соединений из очереди подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-265">You cannot use this returned <xref:System.Net.Sockets.Socket> to accept any additional connections from the connection queue.</span></span> <span data-ttu-id="660fe-266">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода, используйте. <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-266">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-267">Вызовите метод Set для <xref:System.Threading.ManualResetEvent> в методе обратного вызова, если необходимо, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-267">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span>  
  
 <span data-ttu-id="660fe-268">Система также может использовать вызывающий поток для вызова метода обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-268">The system may also use the calling thread to invoke the callback method.</span></span> <span data-ttu-id="660fe-269">В этом случае <xref:System.IAsyncResult.CompletedSynchronously%2A> свойство в возвращаемом <xref:System.IAsyncResult> элементе будет <xref:System.Net.Sockets.Socket.BeginAccept%2A> установлено, чтобы указать, что метод завершился синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-269">In this case, the <xref:System.IAsyncResult.CompletedSynchronously%2A> property on the returned <xref:System.IAsyncResult> will be set to indicate that the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method completed synchronously.</span></span>  
  
 <span data-ttu-id="660fe-270">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-270">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-271">Чтобы отменить отложенный вызов <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода, <xref:System.Net.Sockets.Socket>закройте.</span><span class="sxs-lookup"><span data-stu-id="660fe-271">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-272">При вызове  <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода во время выполнения асинхронной операции вызывается обратный вызов, предоставленный для метода. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-272">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method is called.</span></span>  <span data-ttu-id="660fe-273"><xref:System.Net.Sockets.Socket.EndAccept%2A> При <xref:System.ObjectDisposedException>  последующем вызове метода будет выдано исключение, указывающее, что операция была отменена.</span><span class="sxs-lookup"><span data-stu-id="660fe-273">A subsequent call to the <xref:System.Net.Sockets.Socket.EndAccept%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-274"><xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> Свойство возвращаемого <xref:System.Net.Sockets.Socket> значения можно использовать для задания сетевого адреса и номера порта удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-274">You can use the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-275">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-275">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-276">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-276">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-277">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-277">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-278">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-278">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-279">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-279">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-280">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-280">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-281">В следующем примере кода выполняется попытка асинхронного получения входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-281">The following code example attempts to receive an incoming connection asynchronously.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#2)]
 [!code-csharp[Socket_Async_Send_Receive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#2)]
 [!code-vb[Socket_Async_Send_Receive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-282">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-282">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-283">Этот метод доступен только в Windows NT.</span><span class="sxs-lookup"><span data-stu-id="660fe-283">Windows NT is required for this method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-284">Принимающий сокет не производит прослушивание подключений.</span><span class="sxs-lookup"><span data-stu-id="660fe-284">The accepting socket is not listening for connections.</span></span> <span data-ttu-id="660fe-285">Необходимо вызвать <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> и <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> до вызова объекта <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-285">You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span></span>  
  
<span data-ttu-id="660fe-286">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-286">-or-</span></span> 
<span data-ttu-id="660fe-287">Производится связывание принимающего сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-287">The accepted socket is bound.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-288">Значение параметра <paramref name="receiveSize" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-288"><paramref name="receiveSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-289">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-289">An error occurred when attempting to access the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="P:System.Net.Sockets.Socket.RemoteEndPoint" />
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-290">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-290">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-291">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-291">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAccept">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAccept (int receiveSize, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAccept(int32 receiveSize, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAccept (receiveSize As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAccept(int receiveSize, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAccept : int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginAccept (receiveSize, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiveSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="receiveSize"><span data-ttu-id="660fe-292">Число байтов, которые необходимо принять от отправителя.</span><span class="sxs-lookup"><span data-stu-id="660fe-292">The number of bytes to accept from the sender.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-293">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-293">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-294">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-294">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-295">Начинает асинхронную операцию, чтобы принять попытку входящего подключения и получить первый блок данных, посланных клиентским приложением.</span><span class="sxs-lookup"><span data-stu-id="660fe-295">Begins an asynchronous operation to accept an incoming connection attempt and receives the first block of data sent by the client application.</span></span></summary>
        <returns><span data-ttu-id="660fe-296">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное создание объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-296">An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> creation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-297">Протоколы, ориентированные на подключение <xref:System.Net.Sockets.Socket.BeginAccept%2A> , могут использовать метод для асинхронной обработки входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-297">Connection-oriented protocols can use the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method to asynchronously process incoming connection attempts.</span></span> <span data-ttu-id="660fe-298">Асинхронное принятие подключений позволяет отправлять и получать данные в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-298">Accepting connections asynchronously enables you to send and receive data within a separate execution thread.</span></span> <span data-ttu-id="660fe-299">Эта перегрузка позволяет указать число байтов, принимаемых при начальной перегрузке в `receiveSize` параметре.</span><span class="sxs-lookup"><span data-stu-id="660fe-299">This overload allows you to specify the number of bytes to accept in the initial transfer in the `receiveSize` parameter.</span></span>  
  
 <span data-ttu-id="660fe-300">Перед вызовом <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода необходимо <xref:System.Net.Sockets.Socket.Listen%2A> вызвать метод для прослушивания и постановки в очередь входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-300">Before calling the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, you must call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
 <span data-ttu-id="660fe-301">Необходимо создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginAccept%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-301">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="660fe-302">Для этого, как минимум, необходимо передать <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket.BeginAccept%2A> объект прослушивания через `state` параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-302">To do this, at the very minimum, you must pass the listening <xref:System.Net.Sockets.Socket> object to <xref:System.Net.Sockets.Socket.BeginAccept%2A> through the `state` parameter.</span></span> <span data-ttu-id="660fe-303">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-303">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-304">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginAccept%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-304">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-305">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndAccept%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-305">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndAccept%2A> method.</span></span> <span data-ttu-id="660fe-306">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginAccept%2A>, система обычно использует отдельный поток для выполнения указанного метода обратного вызова и <xref:System.Net.Sockets.Socket.EndAccept%2A> блокируется до тех пор, пока не будет получено ожидающее подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-306">When your application calls <xref:System.Net.Sockets.Socket.BeginAccept%2A>, the system usually uses a separate thread to execute the specified callback method and blocks on <xref:System.Net.Sockets.Socket.EndAccept%2A> until a pending connection is retrieved.</span></span>  
  
 <span data-ttu-id="660fe-307"><xref:System.Net.Sockets.Socket.EndAccept%2A>Возвращает новый <xref:System.Net.Sockets.Socket> объект, который можно использовать для отправки и получения данных с удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-307"><xref:System.Net.Sockets.Socket.EndAccept%2A> returns a new <xref:System.Net.Sockets.Socket> that you can use to send and receive data with the remote host.</span></span> <span data-ttu-id="660fe-308">Этот параметр нельзя использовать <xref:System.Net.Sockets.Socket> для приема любых дополнительных соединений из очереди подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-308">You cannot use this returned <xref:System.Net.Sockets.Socket> to accept any additional connections from the connection queue.</span></span> <span data-ttu-id="660fe-309">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода, используйте. <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-309">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-310">Вызовите метод Set для <xref:System.Threading.ManualResetEvent> в методе обратного вызова, если необходимо, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-310">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span>  
  
 <span data-ttu-id="660fe-311">Система также может использовать вызывающий поток для вызова метода обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-311">The system may also use the calling thread to invoke the callback method.</span></span> <span data-ttu-id="660fe-312">В этом случае <xref:System.IAsyncResult.CompletedSynchronously%2A> свойство в возвращаемом <xref:System.IAsyncResult> элементе будет <xref:System.Net.Sockets.Socket.BeginAccept%2A> установлено, чтобы указать, что метод завершился синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-312">In this case, the <xref:System.IAsyncResult.CompletedSynchronously%2A> property on the returned <xref:System.IAsyncResult> will be set to indicate that the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method completed synchronously.</span></span>  
  
 <span data-ttu-id="660fe-313">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-313">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-314">Чтобы отменить отложенный вызов <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода, <xref:System.Net.Sockets.Socket>закройте.</span><span class="sxs-lookup"><span data-stu-id="660fe-314">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span>  <span data-ttu-id="660fe-315">При вызове  <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода во время выполнения асинхронной операции вызывается обратный вызов, предоставленный для метода. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-315">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method is called.</span></span>  <span data-ttu-id="660fe-316"><xref:System.Net.Sockets.Socket.EndAccept%2A> При <xref:System.ObjectDisposedException>  последующем вызове метода будет выдано исключение, указывающее, что операция была отменена.</span><span class="sxs-lookup"><span data-stu-id="660fe-316">A subsequent call to the <xref:System.Net.Sockets.Socket.EndAccept%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-317">Чтобы указать сетевой адрес и <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> номер порта удаленного узла <xref:System.Net.Sockets.Socket> , можно вызвать метод с помощью свойства возвращенного объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-317">You can call use the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> object to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-318">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-318">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-319">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-319">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-320">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-320">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-321">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-321">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-322">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-322">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-323">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-323">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-324">В следующем примере кода открывается сокет и принимается асинхронное соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-324">The following code example opens a socket and accepts an asynchronous connection.</span></span> <span data-ttu-id="660fe-325">В этом примере сокет принимает начальные 10 байт данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-325">In this example, the socket accepts the initial 10 bytes of data.</span></span> <span data-ttu-id="660fe-326">Число полученных байтов и данные отображаются в консоли делегатом обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-326">The number of bytes received and the data are displayed on the console by the callback delegate.</span></span> <span data-ttu-id="660fe-327">Описание <xref:System.Net.Sockets.Socket.BeginReceive%2A> того, как получены оставшиеся данные, см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="660fe-327">See <xref:System.Net.Sockets.Socket.BeginReceive%2A> for a description of how the remaining data is received.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#6)]
 [!code-csharp[NCLSocketEnhancements#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-328">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-328">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-329">Этот метод доступен только в Windows NT.</span><span class="sxs-lookup"><span data-stu-id="660fe-329">Windows NT is required for this method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-330">Принимающий сокет не производит прослушивание подключений.</span><span class="sxs-lookup"><span data-stu-id="660fe-330">The accepting socket is not listening for connections.</span></span> <span data-ttu-id="660fe-331">Необходимо вызвать <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> и <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> до вызова объекта <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-331">You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span></span>  
  
<span data-ttu-id="660fe-332">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-332">-or-</span></span> 
<span data-ttu-id="660fe-333">Производится связывание принимающего сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-333">The accepted socket is bound.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-334">Значение параметра <paramref name="receiveSize" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-334"><paramref name="receiveSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-335">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-335">An error occurred when attempting to access the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="P:System.Net.Sockets.Socket.RemoteEndPoint" />
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-336">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-336">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-337">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-337">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAccept">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAccept (System.Net.Sockets.Socket acceptSocket, int receiveSize, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAccept(class System.Net.Sockets.Socket acceptSocket, int32 receiveSize, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAccept (acceptSocket As Socket, receiveSize As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAccept(System::Net::Sockets::Socket ^ acceptSocket, int receiveSize, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAccept : System.Net.Sockets.Socket * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginAccept (acceptSocket, receiveSize, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acceptSocket" Type="System.Net.Sockets.Socket" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="receiveSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="acceptSocket"><span data-ttu-id="660fe-338">Принятый объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-338">The accepted <see cref="T:System.Net.Sockets.Socket" /> object.</span></span> <span data-ttu-id="660fe-339">Это значение может быть равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-339">This value may be <see langword="null" />.</span></span></param>
        <param name="receiveSize"><span data-ttu-id="660fe-340">Максимальное число принимаемых байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-340">The maximum number of bytes to receive.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-341">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-341">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-342">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-342">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-343">Начинает асинхронную операцию, чтобы принять попытку входящего подключения с указанного сокета и получить первый блок данных, посланных клиентским приложением.</span><span class="sxs-lookup"><span data-stu-id="660fe-343">Begins an asynchronous operation to accept an incoming connection attempt from a specified socket and receives the first block of data sent by the client application.</span></span></summary>
        <returns><span data-ttu-id="660fe-344">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное создание объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-344">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> object creation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-345">Протоколы, ориентированные на подключение <xref:System.Net.Sockets.Socket.BeginAccept%2A> , могут использовать метод для асинхронной обработки входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-345">Connection-oriented protocols can use the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method to asynchronously process incoming connection attempts.</span></span> <span data-ttu-id="660fe-346">Асинхронное принятие подключений дает возможность отправлять и получать данные в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-346">Accepting connections asynchronously gives you the ability to send and receive data within a separate execution thread.</span></span> <span data-ttu-id="660fe-347">Эта перегрузка позволяет указать обслуживаемый сокет в `acceptSocket` параметре.</span><span class="sxs-lookup"><span data-stu-id="660fe-347">This overload allows you to specify the accepted socket in the `acceptSocket` parameter.</span></span> <span data-ttu-id="660fe-348">Если этот параметр имеет `null`значение, то принятый сокет создается <xref:System.Net.Sockets.Socket.BeginAccept%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="660fe-348">If this parameter is `null`, the accepted socket is created by the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="660fe-349">В `receiveSize` параметре можно указать число байтов, которое будет принято в ходе начальной пересылки.</span><span class="sxs-lookup"><span data-stu-id="660fe-349">You can specify the number of bytes to accept in the initial transfer in the `receiveSize` parameter.</span></span>  
  
 <span data-ttu-id="660fe-350">Перед вызовом <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода необходимо <xref:System.Net.Sockets.Socket.Listen%2A> вызвать метод для прослушивания и постановки в очередь входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-350">Before calling the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, you must call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
 <span data-ttu-id="660fe-351">Необходимо создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginAccept%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-351">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="660fe-352">Для этого, как минимум, необходимо передать <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket.BeginAccept%2A> объект прослушивания через `state` параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-352">To do this, at the very minimum, you must pass the listening <xref:System.Net.Sockets.Socket> object to <xref:System.Net.Sockets.Socket.BeginAccept%2A> through the `state` parameter.</span></span> <span data-ttu-id="660fe-353">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-353">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-354">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginAccept%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-354">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-355">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndAccept%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-355">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndAccept%2A> method.</span></span> <span data-ttu-id="660fe-356">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginAccept%2A>, система обычно использует отдельный поток для выполнения указанного метода обратного вызова и <xref:System.Net.Sockets.Socket.EndAccept%2A> блокируется до тех пор, пока не будет получено ожидающее подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-356">When your application calls <xref:System.Net.Sockets.Socket.BeginAccept%2A>, the system usually uses a separate thread to execute the specified callback method and blocks on <xref:System.Net.Sockets.Socket.EndAccept%2A> until a pending connection is retrieved.</span></span>  
  
 <span data-ttu-id="660fe-357"><xref:System.Net.Sockets.Socket.EndAccept%2A>Возвращает новый <xref:System.Net.Sockets.Socket> объект, который можно использовать для отправки и получения данных с удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-357"><xref:System.Net.Sockets.Socket.EndAccept%2A> returns a new <xref:System.Net.Sockets.Socket> object that you can use to send and receive data with the remote host.</span></span> <span data-ttu-id="660fe-358">Этот параметр нельзя использовать <xref:System.Net.Sockets.Socket> для приема любых дополнительных соединений из очереди подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-358">You cannot use this returned <xref:System.Net.Sockets.Socket> to accept any additional connections from the connection queue.</span></span> <span data-ttu-id="660fe-359">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода, используйте. <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-359">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-360">Вызовите метод Set для <xref:System.Threading.ManualResetEvent> в методе обратного вызова, если необходимо, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-360">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span>  
  
 <span data-ttu-id="660fe-361">Система также может использовать вызывающий поток для вызова метода обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-361">The system may also use the calling thread to invoke the callback method.</span></span> <span data-ttu-id="660fe-362">В этом случае <xref:System.IAsyncResult.CompletedSynchronously%2A> свойство в возвращаемом <xref:System.IAsyncResult> элементе будет <xref:System.Net.Sockets.Socket.BeginAccept%2A> установлено, чтобы указать, что метод завершился синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-362">In this case, the <xref:System.IAsyncResult.CompletedSynchronously%2A> property on the returned <xref:System.IAsyncResult> will be set to indicate that the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method completed synchronously.</span></span>  
  
 <span data-ttu-id="660fe-363">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-363">For additional information on writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-364">Чтобы отменить отложенный вызов <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода, <xref:System.Net.Sockets.Socket>закройте.</span><span class="sxs-lookup"><span data-stu-id="660fe-364">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-365">При вызове  <xref:System.Net.Sockets.Socket.BeginAccept%2A> метода во время выполнения асинхронной операции вызывается обратный вызов, предоставленный для метода. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-365">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method is called.</span></span>  <span data-ttu-id="660fe-366"><xref:System.Net.Sockets.Socket.EndAccept%2A> При <xref:System.ObjectDisposedException>  последующем вызове метода будет выдано исключение, указывающее, что операция была отменена.</span><span class="sxs-lookup"><span data-stu-id="660fe-366">A subsequent call to the <xref:System.Net.Sockets.Socket.EndAccept%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-367"><xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> Свойство возвращенного <xref:System.Net.Sockets.Socket> объекта можно использовать для задания сетевого адреса и номера порта удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-367">You can use the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> object to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-368">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-368">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-369">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-369">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-370">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-370">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-371">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-371">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-372">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-372">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-373">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-373">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-374">В следующем примере кода открывается сокет и принимается асинхронное соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-374">The following code example opens a socket and accepts an asynchronous connection.</span></span> <span data-ttu-id="660fe-375">В этом примере сокет принимает начальные 10 байт данных, а `acceptSocket` параметр — `null`, что заставляет <xref:System.Net.Sockets.Socket.BeginAccept%2A> метод создать обслуживаемый сокет.</span><span class="sxs-lookup"><span data-stu-id="660fe-375">In this example, the socket accepts the initial 10 bytes of data and the `acceptSocket` parameter is `null`, which forces the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method to create the accepted socket.</span></span> <span data-ttu-id="660fe-376">Число полученных байтов и данные отображаются в консоли делегатом обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-376">The number of bytes received and the data are displayed on the console by the callback delegate.</span></span> <span data-ttu-id="660fe-377">Описание <xref:System.Net.Sockets.Socket.BeginReceive%2A> того, как получены оставшиеся данные, см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="660fe-377">See <xref:System.Net.Sockets.Socket.BeginReceive%2A> for a description of how the remaining data is received.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#7)]
 [!code-csharp[NCLSocketEnhancements#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-378">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-378">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-379">Этот метод доступен только в Windows NT.</span><span class="sxs-lookup"><span data-stu-id="660fe-379">Windows NT is required for this method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-380">Принимающий сокет не производит прослушивание подключений.</span><span class="sxs-lookup"><span data-stu-id="660fe-380">The accepting socket is not listening for connections.</span></span> <span data-ttu-id="660fe-381">Необходимо вызвать <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> и <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> до вызова объекта <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-381">You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span></span>  
  
<span data-ttu-id="660fe-382">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-382">-or-</span></span> 
<span data-ttu-id="660fe-383">Производится связывание принимающего сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-383">The accepted socket is bound.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-384">Значение параметра <paramref name="receiveSize" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-384"><paramref name="receiveSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-385">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-385">An error occurred when attempting to access the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="P:System.Net.Sockets.Socket.RemoteEndPoint" />
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-386">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-386">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-387">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-387">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-388">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-388">Begins an asynchronous request for a remote host connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.EndPoint remoteEP, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.EndPoint remoteEP, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (remoteEP As EndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::EndPoint ^ remoteEP, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.EndPoint end_point, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.EndPoint end_point, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (end_point As EndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::EndPoint ^ end_point, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.EndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginConnect (end_point, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="end_point" Type="System.Net.EndPoint" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="remoteEP"><span data-ttu-id="660fe-389">Объект <see cref="T:System.Net.EndPoint" />, представляющий удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-389">An <see cref="T:System.Net.EndPoint" /> that represents the remote host.</span></span></param>
        <param name="end_point"><span data-ttu-id="660fe-390">Объект <see cref="T:System.Net.EndPoint" />, представляющий удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-390">An <see cref="T:System.Net.EndPoint" /> that represents the remote host.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-391">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-391">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-392">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-392">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-393">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-393">Begins an asynchronous request for a remote host connection.</span></span></summary>
        <returns><span data-ttu-id="660fe-394">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-394">An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-395">При использовании протокола, ориентированного на соединение, <xref:System.Net.Sockets.Socket.BeginConnect%2A> метод запускает асинхронный запрос соединения `remoteEP` с параметром.</span><span class="sxs-lookup"><span data-stu-id="660fe-395">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method starts an asynchronous request for a connection to the `remoteEP` parameter.</span></span> <span data-ttu-id="660fe-396">Если используется протокол без подключения, <xref:System.Net.Sockets.Socket.BeginConnect%2A> устанавливает удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-396">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.BeginConnect%2A> establishes a default remote host.</span></span> <span data-ttu-id="660fe-397">Подключение или установка удаленного узла по умолчанию асинхронно дает возможность отправлять и получать данные в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-397">Connecting or setting the default remote host asynchronously gives you the ability to send and receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="660fe-398">Можно создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginConnect%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-398">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method.</span></span> <span data-ttu-id="660fe-399">Как минимум, необходимо передать <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket.BeginConnect%2A> в с помощью `state` параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-399">At the very minimum, you must pass the <xref:System.Net.Sockets.Socket> to <xref:System.Net.Sockets.Socket.BeginConnect%2A> through the `state` parameter.</span></span> <span data-ttu-id="660fe-400">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс для хранения <xref:System.Net.Sockets.Socket>и другие необходимые сведения.</span><span class="sxs-lookup"><span data-stu-id="660fe-400">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket>, and the other required information.</span></span> <span data-ttu-id="660fe-401">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginConnect%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-401">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-402">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndConnect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-402">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="660fe-403">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginConnect%2A>, система будет использовать отдельный поток для выполнения указанного метода обратного вызова и <xref:System.Net.Sockets.Socket.EndConnect%2A> заблокируется до тех пор, <xref:System.Net.Sockets.Socket> пока не будет успешно установлено соединение или не создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-403">When your application calls <xref:System.Net.Sockets.Socket.BeginConnect%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndConnect%2A> until the <xref:System.Net.Sockets.Socket> connects successfully or throws an exception.</span></span> <span data-ttu-id="660fe-404">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginConnect%2A> метода, используйте. <xref:System.Threading.WaitHandle.WaitOne%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-404">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="660fe-405">Вызовите метод Set для <xref:System.Threading.ManualResetEvent> в методе обратного вызова, если необходимо, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-405">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="660fe-406">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-406">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-407">Если используется протокол без установления соединения, например UDP, нет необходимости вызывать метод <xref:System.Net.Sockets.Socket.BeginConnect%2A> перед отправкой и получением данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-407">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.BeginConnect%2A> before sending and receiving data.</span></span> <span data-ttu-id="660fe-408">Для взаимодействия с <xref:System.Net.Sockets.Socket.BeginSendTo%2A> удаленным узлом можно использовать и. <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-408">You can use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> and <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> to communicate with a remote host.</span></span> <span data-ttu-id="660fe-409">При вызове <xref:System.Net.Sockets.Socket.BeginConnect%2A>все датаграммы, поступающие с адреса, отличного от указанного по умолчанию, будут удалены.</span><span class="sxs-lookup"><span data-stu-id="660fe-409">If you do call <xref:System.Net.Sockets.Socket.BeginConnect%2A>, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="660fe-410">Если вы хотите задать для удаленного узла по умолчанию широковещательный адрес, необходимо сначала вызвать <xref:System.Net.Sockets.Socket.SetSocketOption%2A> и установить параметр Broadcast в. `true`</span><span class="sxs-lookup"><span data-stu-id="660fe-410">If you wish to set your default remote host to a broadcast address, you must first call <xref:System.Net.Sockets.Socket.SetSocketOption%2A> and set Broadcast to `true`.</span></span> <span data-ttu-id="660fe-411"><xref:System.Net.Sockets.Socket.BeginConnect%2A> В <xref:System.Net.Sockets.SocketException> противном случае выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-411">If you cannot, <xref:System.Net.Sockets.Socket.BeginConnect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-412">Если вы используете протокол, ориентированный на подключение, и не вызываете <xref:System.Net.Sockets.Socket.Bind%2A> перед вызовом <xref:System.Net.Sockets.Socket.BeginConnect%2A>, базовый поставщик услуг присвоит наиболее подходящий локальный сетевой адрес и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-412">If you are using a connection-oriented protocol and do not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.BeginConnect%2A>, the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="660fe-413">Если используется протокол без установления соединения, поставщик услуг не будет назначать локальный сетевой адрес и номер порта до вызова <xref:System.Net.Sockets.Socket.BeginSend%2A> метода или. <xref:System.Net.Sockets.Socket.ReceiveFrom%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-413">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> or <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-414">Если вы хотите изменить удаленный узел по умолчанию, вызовите <xref:System.Net.Sockets.Socket.BeginConnect%2A> метод еще раз с нужной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-414">If you want to change the default remote host, call the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method again with the desired endpoint.</span></span>  
  
 <span data-ttu-id="660fe-415">Чтобы отменить отложенный вызов <xref:System.Net.Sockets.Socket.BeginConnect%2A> метода, <xref:System.Net.Sockets.Socket>закройте.</span><span class="sxs-lookup"><span data-stu-id="660fe-415">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-416">При вызове  <xref:System.Net.Sockets.Socket.BeginConnect%2A> метода во время выполнения асинхронной операции вызывается обратный вызов, предоставленный для метода. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-416">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method is called.</span></span>  <span data-ttu-id="660fe-417"><xref:System.Net.Sockets.Socket.EndConnect%2A> При <xref:System.ObjectDisposedException>  последующем вызове метода будет выдано исключение, указывающее, что операция была отменена.</span><span class="sxs-lookup"><span data-stu-id="660fe-417">A subsequent call to the <xref:System.Net.Sockets.Socket.EndConnect%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-418">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-418">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-419">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-419">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-420">Если этот сокет ранее был отключен, <xref:System.Net.Sockets.Socket.BeginConnect%2A> он должен быть вызван в потоке, который не будет выходить до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-420">If this socket has previously been disconnected, then <xref:System.Net.Sockets.Socket.BeginConnect%2A> must be called on a thread that will not exit until the operation is complete.</span></span> <span data-ttu-id="660fe-421">Это ограничение базового поставщика.</span><span class="sxs-lookup"><span data-stu-id="660fe-421">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-422">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-422">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-423">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-423">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-424">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-424">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-425">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-425">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-426">В следующем примере кода инициируется асинхронная попытка соединения.</span><span class="sxs-lookup"><span data-stu-id="660fe-426">The following code example initiates an asynchronous connection attempt.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#1)]
 [!code-csharp[Socket_Async_Send_Receive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#1)]
 [!code-vb[Socket_Async_Send_Receive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-427"><paramref name="remoteEP" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-427"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-428">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-428">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-429"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-429">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-430">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-430">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-431">Сокет <see cref="T:System.Net.Sockets.Socket" /> был переведен в состояние прослушивания путем вызова <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, либо асинхронная операция уже выполняется.</span><span class="sxs-lookup"><span data-stu-id="660fe-431">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, or an asynchronous operation is already in progress.</span></span></exception>
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-432">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-432">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-433">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-433">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-434">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-434">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginConnect (address, port, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="660fe-435">Адрес <see cref="T:System.Net.IPAddress" /> удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-435">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="660fe-436">Номер порта удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-436">The port number of the remote host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="660fe-437">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, который следует вызвать по завершении операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-437">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-438">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, который следует вызвать по завершении операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-438">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-439">Пользовательский объект, содержащий информацию об операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-439">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="660fe-440">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-440">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="660fe-441">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-441">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="660fe-442">узел задается объектом <see cref="T:System.Net.IPAddress" /> и номером порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-442">The host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number.</span></span></summary>
        <returns><span data-ttu-id="660fe-443">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-443">An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-444">Асинхронная <xref:System.Net.Sockets.Socket.BeginConnect%2A> операция должна быть завершена путем <xref:System.Net.Sockets.Socket.EndConnect%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-444">The asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="660fe-445">Как правило, метод вызывается `requestCallback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-445">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="660fe-446">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-446">This method does not block until the operation is complete.</span></span> <span data-ttu-id="660fe-447">Чтобы заблокировать блокировку до завершения операции, используйте одну из <xref:System.Net.Sockets.Socket.Connect%2A> перегрузок метода или. <xref:System.Net.Sockets.Socket.EndConnect%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-447">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Connect%2A> method overloads, or <xref:System.Net.Sockets.Socket.EndConnect%2A>.</span></span>  
  
 <span data-ttu-id="660fe-448">Чтобы отменить отложенный вызов <xref:System.Net.Sockets.Socket.BeginConnect%2A> метода, <xref:System.Net.Sockets.Socket>закройте.</span><span class="sxs-lookup"><span data-stu-id="660fe-448">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-449">При вызове  <xref:System.Net.Sockets.Socket.BeginConnect%2A> метода во время выполнения асинхронной операции вызывается обратный вызов, предоставленный для метода. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-449">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method is called.</span></span>  <span data-ttu-id="660fe-450"><xref:System.Net.Sockets.Socket.EndConnect%2A> При <xref:System.ObjectDisposedException>  последующем вызове метода будет выдано исключение, указывающее, что операция была отменена.</span><span class="sxs-lookup"><span data-stu-id="660fe-450">A subsequent call to the <xref:System.Net.Sockets.Socket.EndConnect%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
 <span data-ttu-id="660fe-451">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="660fe-451">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-452">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-452">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-453">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-453">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-454">Если этот сокет ранее был отключен, <xref:System.Net.Sockets.Socket.BeginConnect%2A> он должен быть вызван в потоке, который не будет выходить до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-454">If this socket has previously been disconnected, then <xref:System.Net.Sockets.Socket.BeginConnect%2A> must be called on a thread that will not exit until the operation is complete.</span></span> <span data-ttu-id="660fe-455">Это ограничение базового поставщика.</span><span class="sxs-lookup"><span data-stu-id="660fe-455">This is a limitation of the underlying provider.</span></span> <span data-ttu-id="660fe-456">Кроме того <xref:System.Net.EndPoint> , используемое значение должно отличаться.</span><span class="sxs-lookup"><span data-stu-id="660fe-456">Also the <xref:System.Net.EndPoint> that is used must be different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-457">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-457">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-458">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-458">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-459">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-459">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-460">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-460">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-461">В следующем примере кода инициируется асинхронная попытка соединения.</span><span class="sxs-lookup"><span data-stu-id="660fe-461">The following code example initiates an asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#1)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#1)]  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#7)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-462">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-462"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-463">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-463">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-464"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-464">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-465">Объект <see cref="T:System.Net.Sockets.Socket" /> не входит в состав семейства сокетов.</span><span class="sxs-lookup"><span data-stu-id="660fe-465">The <see cref="T:System.Net.Sockets.Socket" /> is not in the socket family.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-466">Номер порта недействителен.</span><span class="sxs-lookup"><span data-stu-id="660fe-466">The port number is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-467">Длина параметра <paramref name="address" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="660fe-467">The length of <paramref name="address" /> is zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-468">Сокет <see cref="T:System.Net.Sockets.Socket" /> был переведен в состояние прослушивания путем вызова <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, либо асинхронная операция уже выполняется.</span><span class="sxs-lookup"><span data-stu-id="660fe-468">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, or an asynchronous operation is already in progress.</span></span></exception>
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-469">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-469">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-470">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-470">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-471">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-471">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginConnect (addresses, port, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="addresses"><span data-ttu-id="660fe-472">По крайней мере, один объект <see cref="T:System.Net.IPAddress" />, определяющий удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-472">At least one <see cref="T:System.Net.IPAddress" />, designating the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="660fe-473">Номер порта удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-473">The port number of the remote host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="660fe-474">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, который следует вызвать по завершении операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-474">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-475">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, который следует вызвать по завершении операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-475">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-476">Пользовательский объект, содержащий информацию об операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-476">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="660fe-477">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-477">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="660fe-478">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-478">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="660fe-479">узел задается массивом <see cref="T:System.Net.IPAddress" /> и номером порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-479">The host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number.</span></span></summary>
        <returns><span data-ttu-id="660fe-480">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронные подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-480">An <see cref="T:System.IAsyncResult" /> that references the asynchronous connections.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-481">Асинхронная <xref:System.Net.Sockets.Socket.BeginConnect%2A> операция должна быть завершена путем <xref:System.Net.Sockets.Socket.EndConnect%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-481">The asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="660fe-482">Как правило, метод вызывается `requestCallback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-482">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="660fe-483">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-483">This method does not block until the operation is complete.</span></span> <span data-ttu-id="660fe-484">Чтобы заблокировать блокировку до завершения операции, используйте одну из <xref:System.Net.Sockets.Socket.Connect%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-484">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="660fe-485">Чтобы отменить отложенный вызов <xref:System.Net.Sockets.Socket.BeginConnect%2A> метода, <xref:System.Net.Sockets.Socket>закройте.</span><span class="sxs-lookup"><span data-stu-id="660fe-485">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-486">При вызове  <xref:System.Net.Sockets.Socket.BeginConnect%2A> метода во время выполнения асинхронной операции вызывается обратный вызов, предоставленный для метода. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-486">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method is called.</span></span>  <span data-ttu-id="660fe-487"><xref:System.Net.Sockets.Socket.EndConnect%2A> При <xref:System.ObjectDisposedException>  последующем вызове метода будет выдано исключение, указывающее, что операция была отменена.</span><span class="sxs-lookup"><span data-stu-id="660fe-487">A subsequent call to the <xref:System.Net.Sockets.Socket.EndConnect%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
 <span data-ttu-id="660fe-488">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-488">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-489">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-489">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-490">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-490">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-491">Если этот сокет ранее был отключен, <xref:System.Net.Sockets.Socket.BeginConnect%2A> он должен быть вызван в потоке, который не будет выходить до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-491">If this socket has previously been disconnected, then <xref:System.Net.Sockets.Socket.BeginConnect%2A> must be called on a thread that will not exit until the operation is complete.</span></span> <span data-ttu-id="660fe-492">Это ограничение базового поставщика.</span><span class="sxs-lookup"><span data-stu-id="660fe-492">This is a limitation of the underlying provider.</span></span> <span data-ttu-id="660fe-493">Кроме того <xref:System.Net.EndPoint> , используемое значение должно отличаться.</span><span class="sxs-lookup"><span data-stu-id="660fe-493">Also the <xref:System.Net.EndPoint> that is used must be different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-494">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-494">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-495">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-495">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-496">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-496">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-497">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-497">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-498">В следующем примере кода инициируется асинхронная попытка соединения.</span><span class="sxs-lookup"><span data-stu-id="660fe-498">The following code example initiates an asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#1)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#1)]  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#2)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-499"><paramref name="addresses" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-499"><paramref name="addresses" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-500">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-500">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-501"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-501">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-502">Этот метод применим для сокетов, которые используют объект <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-502">This method is valid for sockets that use <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-503">Номер порта недействителен.</span><span class="sxs-lookup"><span data-stu-id="660fe-503">The port number is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-504">Длина параметра <paramref name="address" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="660fe-504">The length of <paramref name="address" /> is zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-505">Сокет <see cref="T:System.Net.Sockets.Socket" /> был переведен в состояние прослушивания путем вызова <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, либо асинхронная операция уже выполняется.</span><span class="sxs-lookup"><span data-stu-id="660fe-505">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, or an asynchronous operation is already in progress.</span></span></exception>
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-506">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-506">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-507">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-507">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-508">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-508">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginConnect (host, port, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="660fe-509">Имя удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-509">The name of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="660fe-510">Номер порта удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-510">The port number of the remote host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="660fe-511">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, который следует вызвать по завершении операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-511">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-512">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, который следует вызвать по завершении операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-512">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-513">Пользовательский объект, содержащий информацию об операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-513">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="660fe-514">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-514">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="660fe-515">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-515">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="660fe-516">Узел задается именем узла и номером порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-516">The host is specified by a host name and a port number.</span></span></summary>
        <returns><span data-ttu-id="660fe-517">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-517">An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-518">Асинхронная <xref:System.Net.Sockets.Socket.BeginConnect%2A> операция должна быть завершена путем <xref:System.Net.Sockets.Socket.EndConnect%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-518">The asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="660fe-519">Как правило, метод вызывается `requestCallback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-519">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="660fe-520">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-520">This method does not block until the operation is complete.</span></span> <span data-ttu-id="660fe-521">Чтобы заблокировать блокировку до завершения операции, используйте одну из <xref:System.Net.Sockets.Socket.Connect%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-521">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="660fe-522">Чтобы отменить отложенный вызов <xref:System.Net.Sockets.Socket.BeginConnect%2A> метода, <xref:System.Net.Sockets.Socket>закройте.</span><span class="sxs-lookup"><span data-stu-id="660fe-522">To cancel a pending call to the  <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-523">При вызове  <xref:System.Net.Sockets.Socket.BeginConnect%2A> метода во время выполнения асинхронной операции вызывается обратный вызов, предоставленный для метода. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-523">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method is called.</span></span>  <span data-ttu-id="660fe-524"><xref:System.Net.Sockets.Socket.EndConnect%2A> При <xref:System.ObjectDisposedException>  последующем вызове метода будет выдано исключение, указывающее, что операция была отменена.</span><span class="sxs-lookup"><span data-stu-id="660fe-524">A subsequent call to the <xref:System.Net.Sockets.Socket.EndConnect%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
 <span data-ttu-id="660fe-525">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="660fe-525">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-526">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-526">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-527">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-527">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-528">Если этот сокет ранее был отключен, <xref:System.Net.Sockets.Socket.BeginConnect%2A> он должен быть вызван в потоке, который не будет выходить до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-528">If this socket has previously been disconnected, then <xref:System.Net.Sockets.Socket.BeginConnect%2A> must be called on a thread that will not exit until the operation is complete.</span></span> <span data-ttu-id="660fe-529">Это ограничение базового поставщика.</span><span class="sxs-lookup"><span data-stu-id="660fe-529">This is a limitation of the underlying provider.</span></span> <span data-ttu-id="660fe-530">Кроме того <xref:System.Net.EndPoint> , используемое значение должно отличаться.</span><span class="sxs-lookup"><span data-stu-id="660fe-530">Also the <xref:System.Net.EndPoint> that is used must be different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-531">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-531">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-532">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-532">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-533">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-533">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-534">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-534">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-535">В следующем примере кода инициируется асинхронная попытка соединения.</span><span class="sxs-lookup"><span data-stu-id="660fe-535">The following code example initiates an asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#1)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#1)]  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#3)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-536">Свойство <paramref name="host" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-536"><paramref name="host" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-537"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-537">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-538">Этот метод допустим для сокетов в семействах <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> .</span><span class="sxs-lookup"><span data-stu-id="660fe-538">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-539">Номер порта недействителен.</span><span class="sxs-lookup"><span data-stu-id="660fe-539">The port number is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-540">Сокет <see cref="T:System.Net.Sockets.Socket" /> был переведен в состояние прослушивания путем вызова <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, либо асинхронная операция уже выполняется.</span><span class="sxs-lookup"><span data-stu-id="660fe-540">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, or an asynchronous operation is already in progress.</span></span></exception>
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-541">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-541">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-542">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-542">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-543">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-543">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginDisconnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisconnect (bool reuseSocket, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginDisconnect(bool reuseSocket, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisconnect (reuseSocket As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisconnect(bool reuseSocket, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginDisconnect : bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginDisconnect (reuseSocket, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reuseSocket" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reuseSocket"><span data-ttu-id="660fe-544">Значение <see langword="true" />, если этот сокет может быть повторно использован после закрытия подключения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-544"><see langword="true" /> if this socket can be reused after the connection is closed; otherwise, <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-545">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-545">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-546">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-546">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-547">Начинает выполнение асинхронного запроса для отключения от удаленной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="660fe-547">Begins an asynchronous request to disconnect from a remote endpoint.</span></span></summary>
        <returns><span data-ttu-id="660fe-548">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-548">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-549">Если используется протокол, ориентированный на соединение, можно вызвать <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> метод для запроса отключения от удаленной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="660fe-549">If you are using a connection-oriented protocol, you can call the <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> method to request a disconnect from a remote endpoint.</span></span> <span data-ttu-id="660fe-550">Если `reuseSocket` имеет `true`значение, можно повторно использовать сокет.</span><span class="sxs-lookup"><span data-stu-id="660fe-550">If `reuseSocket` is `true`, you can reuse the socket.</span></span>  
  
 <span data-ttu-id="660fe-551"><xref:System.Net.Sockets.Socket.BeginDisconnect%2A> Метод использует отдельный поток для вызова указанного метода обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-551">The <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> method uses a separate thread to invoke the specified callback method.</span></span> <span data-ttu-id="660fe-552"><xref:System.Net.Sockets.Socket.EndDisconnect%2A> Метод блокируется до завершения ожидающего отключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-552">The <xref:System.Net.Sockets.Socket.EndDisconnect%2A> method blocks until the pending disconnect is complete.</span></span> <span data-ttu-id="660fe-553">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-553">For additional information on writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-554">Если вы получаете <xref:System.Net.Sockets.SocketException> исключение, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-554">If you receive a <xref:System.Net.Sockets.SocketException> exception, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-555">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-555">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-556">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-556">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-557">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-557">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-558">В следующем примере кода создается сокет для асинхронного взаимодействия и данные отправляются на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-558">The following code example creates a socket for asynchronous communication and sends some data to a remote host.</span></span> <span data-ttu-id="660fe-559">При отправке <xref:System.Net.Sockets.Socket.Shutdown%2A> данных вызывается для завершения действия Send и Receive.</span><span class="sxs-lookup"><span data-stu-id="660fe-559">When the data has been sent, <xref:System.Net.Sockets.Socket.Shutdown%2A> is called to stop the send and receive activity.</span></span> <span data-ttu-id="660fe-560">Затем <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> вызывается для начала запроса на отключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-560">Then <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> is called to begin a disconnect request.</span></span> <span data-ttu-id="660fe-561">По завершении запроса <xref:System.Net.Sockets.Socket.Connected%2A> свойство запрашивается, чтобы проверить, отключен ли сокет.</span><span class="sxs-lookup"><span data-stu-id="660fe-561">When the request completes, the <xref:System.Net.Sockets.Socket.Connected%2A> property is queried to test whether the socket is disconnected.</span></span>  
  
 [!code-cpp[Nclsocketenhancements#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#11)]
 [!code-csharp[Nclsocketenhancements#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-562">Используется операционная система Windows 2000 или более ранняя версия, а для этого метода необходима операционная система Windows XP.</span><span class="sxs-lookup"><span data-stu-id="660fe-562">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-563">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-563">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-564">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-564">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReceive">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-565">Начинает выполнение асинхронного приема данных с подключенного объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-565">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceive (buffers, socketFlags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-566">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-566">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-567">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-567">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-568">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-568">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-569">Пользовательский объект, содержащий информацию об операции приема.</span><span class="sxs-lookup"><span data-stu-id="660fe-569">A user-defined object that contains information about the receive operation.</span></span> <span data-ttu-id="660fe-570">Этот объект передается делегату <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-570">This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="660fe-571">Начинает выполнение асинхронного приема данных с подключенного объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-571">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-572">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-572">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-573">Асинхронная <xref:System.Net.Sockets.Socket.BeginReceive%2A> операция должна быть завершена путем <xref:System.Net.Sockets.Socket.EndReceive%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-573">The asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceive%2A> method.</span></span> <span data-ttu-id="660fe-574">Как правило, метод вызывается `callback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-574">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="660fe-575">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-575">This method does not block until the operation is complete.</span></span> <span data-ttu-id="660fe-576">Чтобы заблокировать блокировку до завершения операции, используйте одну из <xref:System.Net.Sockets.Socket.Receive%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-576">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Receive%2A> method overloads.</span></span>  
  
 <span data-ttu-id="660fe-577">Чтобы отменить ожидание <xref:System.Net.Sockets.Socket.BeginReceive%2A>, <xref:System.Net.Sockets.Socket.Close%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-577">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-578">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-578">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-579">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-579">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-580">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-580">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-581">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-581">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-582">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-582">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-583">`state`— Это экземпляр определяемого пользователем класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-583">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-584">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-584">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-585">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-585">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-586">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-586">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-587">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-587">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-588"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-588"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-589">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-589">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-590">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-590"><see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-591">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-591">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-592">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-592">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-593">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-593">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceive (buffers, socketFlags, errorCode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-594">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-594">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-595">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-595">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-596">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-596">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-597">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-597">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-598">Пользовательский объект, содержащий информацию об операции приема.</span><span class="sxs-lookup"><span data-stu-id="660fe-598">A user-defined object that contains information about the receive operation.</span></span> <span data-ttu-id="660fe-599">Этот объект передается делегату <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-599">This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="660fe-600">Начинает выполнение асинхронного приема данных с подключенного объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-600">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-601">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-601">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-602">Асинхронная <xref:System.Net.Sockets.Socket.BeginReceive%2A> операция должна быть завершена путем <xref:System.Net.Sockets.Socket.EndReceive%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-602">The asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceive%2A> method.</span></span> <span data-ttu-id="660fe-603">Как правило, метод вызывается `callback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-603">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="660fe-604">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-604">This method does not block until the operation is complete.</span></span> <span data-ttu-id="660fe-605">Чтобы заблокировать блокировку до завершения операции, используйте одну из <xref:System.Net.Sockets.Socket.Receive%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-605">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Receive%2A> method overloads.</span></span>  
  
 <span data-ttu-id="660fe-606">Чтобы отменить ожидание <xref:System.Net.Sockets.Socket.BeginReceive%2A>, <xref:System.Net.Sockets.Socket.Close%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-606">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-607">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-607">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-608">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-608">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-609">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-609">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-610">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-610">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-611">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-611">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-612">`state`— Это экземпляр определяемого пользователем класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-612">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-613">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-613">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-614">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-614">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-615">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-615">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-616">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-616">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-617"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-617"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-618">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-618">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-619">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-619"><see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-620">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-620">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-621">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-621">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-622">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-622">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socket_flags, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socket_flags, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (buffer As Byte(), offset As Integer, size As Integer, socket_flags As SocketFlags, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socket_flags, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : byte[] * int * int * System.Net.Sockets.SocketFlags * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceive (buffer, offset, size, socket_flags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socket_flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-623">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-623">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-624">Отсчитываемая с нуля позиция в параметре <paramref name="buffer" />, начиная с которой хранятся принятые данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-624">The zero-based position in the <paramref name="buffer" /> parameter at which to store the received data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-625">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-625">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-626">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-626">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="socket_flags"><span data-ttu-id="660fe-627">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-627">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-628">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-628">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-629">Пользовательский объект, содержащий информацию об операции приема.</span><span class="sxs-lookup"><span data-stu-id="660fe-629">A user-defined object that contains information about the receive operation.</span></span> <span data-ttu-id="660fe-630">Этот объект передается делегату <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-630">This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="660fe-631">Начинает выполнение асинхронного приема данных с подключенного объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-631">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-632">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-632">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-633">Асинхронная <xref:System.Net.Sockets.Socket.BeginReceive%2A> операция должна быть завершена путем <xref:System.Net.Sockets.Socket.EndReceive%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-633">The asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceive%2A> method.</span></span> <span data-ttu-id="660fe-634">Как правило, метод вызывается `callback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-634">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="660fe-635">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-635">This method does not block until the operation is complete.</span></span> <span data-ttu-id="660fe-636">Чтобы заблокировать блокировку до завершения операции, используйте одну из <xref:System.Net.Sockets.Socket.Receive%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-636">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Receive%2A> method overloads.</span></span>  
  
 <span data-ttu-id="660fe-637">Чтобы отменить ожидание <xref:System.Net.Sockets.Socket.BeginReceive%2A>, <xref:System.Net.Sockets.Socket.Close%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-637">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-638">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-638">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-639">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-639">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-640">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-640">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-641">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-641">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-642">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-642">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-643">`state`— Это экземпляр определяемого пользователем класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-643">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-644">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-644">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-645">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-645">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-646">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-646">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-647">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-647">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-648">В следующем примере кода начинается асинхронный прием данных из подключенного <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-648">The following code example begins to asynchronously receive data from a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#11)]
 [!code-csharp[Socket_Async_Send_Receive#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#11)]
 [!code-vb[Socket_Async_Send_Receive#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#11)]  
  
 [!code-cpp[Socket_Async_Send_Receive#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#7)]
 [!code-csharp[Socket_Async_Send_Receive#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#7)]
 [!code-vb[Socket_Async_Send_Receive#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#7)]  
  
 [!code-cpp[Socket_Async_Send_Receive#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#8)]
 [!code-csharp[Socket_Async_Send_Receive#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#8)]
 [!code-vb[Socket_Async_Send_Receive#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-649"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-649"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-650">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-650">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-651">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-651"><see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-652">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-652"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-653">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-653">-or-</span></span> 
 <span data-ttu-id="660fe-654">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-654"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-655">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-655">-or-</span></span> 
 <span data-ttu-id="660fe-656">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-656"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-657">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-657">-or-</span></span> 
 <span data-ttu-id="660fe-658">Значение <paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-658"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-659">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-659">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-660">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-660">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-661">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-661">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags flags, out System.Net.Sockets.SocketError error, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags flags, [out] valuetype System.Net.Sockets.SocketError&amp; error, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (buffer As Byte(), offset As Integer, size As Integer, flags As SocketFlags, ByRef error As SocketError, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags flags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % error, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : byte[] * int * int * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceive (buffer, offset, size, flags, error, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="error" Type="System.Net.Sockets.SocketError" RefType="out" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-662">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-662">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-663">Место в объекте <paramref name="buffer" />, выделенное для хранения принимаемых данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-663">The location in <paramref name="buffer" /> to store the received data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-664">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-664">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-665">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-665">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="flags"><span data-ttu-id="660fe-666">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-666">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-667">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-667">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <param name="error"><span data-ttu-id="660fe-668">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-668">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-669">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-669">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-670">Пользовательский объект, содержащий информацию об операции приема.</span><span class="sxs-lookup"><span data-stu-id="660fe-670">A user-defined object that contains information about the receive operation.</span></span> <span data-ttu-id="660fe-671">Этот объект передается делегату <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-671">This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="660fe-672">Начинает выполнение асинхронного приема данных с подключенного объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-672">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-673">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-673">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-674">Асинхронная <xref:System.Net.Sockets.Socket.BeginReceive%2A> операция должна быть завершена путем <xref:System.Net.Sockets.Socket.EndReceive%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-674">The asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceive%2A> method.</span></span> <span data-ttu-id="660fe-675">Как правило, метод вызывается `callback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-675">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="660fe-676">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-676">This method does not block until the operation is complete.</span></span> <span data-ttu-id="660fe-677">Чтобы заблокировать блокировку до завершения операции, используйте одну из <xref:System.Net.Sockets.Socket.Receive%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-677">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Receive%2A> method overloads.</span></span>  
  
 <span data-ttu-id="660fe-678">Чтобы отменить ожидание <xref:System.Net.Sockets.Socket.BeginReceive%2A>, <xref:System.Net.Sockets.Socket.Close%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-678">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-679">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-679">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-680">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-680">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-681">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-681">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-682">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-682">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-683">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-683">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-684">`state`— Это экземпляр определяемого пользователем класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-684">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-685">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-685">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-686">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-686">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-687">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-687">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-688">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-688">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-689">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-689"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-690">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-690">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-691">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-691"><see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-692">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-692"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-693">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-693">-or-</span></span> 
 <span data-ttu-id="660fe-694">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-694"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-695">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-695">-or-</span></span> 
 <span data-ttu-id="660fe-696">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-696"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-697">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-697">-or-</span></span> 
 <span data-ttu-id="660fe-698">Значение <paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-698"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-699">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-699">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-700">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-700">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-701">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-701">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFrom">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFrom (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFrom (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socket_flags, ref System.Net.EndPoint remote_end, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socket_flags, class System.Net.EndPoint&amp; remote_end, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFrom (buffer As Byte(), offset As Integer, size As Integer, socket_flags As SocketFlags, ByRef remote_end As EndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socket_flags, System::Net::EndPoint ^ % remote_end, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFrom : byte[] * int * int * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceiveFrom (buffer, offset, size, socket_flags, remote_end, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socket_flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="remote_end" Type="System.Net.EndPoint" RefType="ref" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-702">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-702">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-703">Отсчитываемая с нуля позиция в параметре <paramref name="buffer" />, начиная с которой хранятся данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-703">The zero-based position in the <paramref name="buffer" /> parameter at which to store the data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-704">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-704">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-705">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-705">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="socket_flags"><span data-ttu-id="660fe-706">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-706">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-707">Объект <see cref="T:System.Net.EndPoint" />, представляющий источник данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-707">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data.</span></span></param>
        <param name="remote_end"><span data-ttu-id="660fe-708">Объект <see cref="T:System.Net.EndPoint" />, представляющий источник данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-708">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-709">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-709">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-710">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-710">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-711">Начинает выполнение асинхронного приема данных с указанного сетевого устройства.</span><span class="sxs-lookup"><span data-stu-id="660fe-711">Begins to asynchronously receive data from a specified network device.</span></span></summary>
        <returns><span data-ttu-id="660fe-712">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-712">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-713"><xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> Метод запускает асинхронное чтение датаграмм без подключения с удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-713">The <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method starts asynchronously reading connectionless datagrams from a remote host.</span></span> <span data-ttu-id="660fe-714"><xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> Вызов метода дает возможность получения данных в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-714">Calling the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method gives you the ability to receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="660fe-715">Можно создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-715">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-716">Для этого, как минимум, `state` параметр должен содержать подключенное или используемое по умолчанию <xref:System.Net.Sockets.Socket> соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-716">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="660fe-717">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-717">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-718">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-718">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-719">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-719">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-720">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, система будет использовать отдельный поток для выполнения указанного метода обратного вызова, и он будет <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> заблокирован до тех пор, <xref:System.Net.Sockets.Socket> пока не прочитает данные или не выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-720">When your application calls <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, the system will use a separate thread to execute the specified callback method, and it will block on <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> until the <xref:System.Net.Sockets.Socket> reads data or throws an exception.</span></span> <span data-ttu-id="660fe-721">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> метода, используйте. <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-721">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-722">Вызовите метод Set для Т:систем.среадинг.мануалресетевент в методе обратного вызова, если нужно, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-722">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="660fe-723">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-723">For additional information on writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-724"><xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>Перед вызовом <xref:System.Net.Sockets.SocketException>необходимо явным образом <xref:System.Net.Sockets.Socket> привязать к локальной конечной точке с помощью <xref:System.Net.Sockets.Socket.Bind%2A> метода или <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-724">Before calling <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method, or <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-725">Этот метод считывает данные в `buffer` параметр и фиксирует конечную точку удаленного узла, из которой отправляются данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-725">This method reads data into the `buffer` parameter, and captures the remote host endpoint from which the data is sent.</span></span> <span data-ttu-id="660fe-726">Сведения о том, как получить эту конечную точку, <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="660fe-726">For information on how to retrieve this endpoint, refer to <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>.</span></span> <span data-ttu-id="660fe-727">Этот метод наиболее удобен, если предполагается асинхронное получение датаграмм без подключения из неизвестного узла или с нескольких узлов.</span><span class="sxs-lookup"><span data-stu-id="660fe-727">This method is most useful if you intend to asynchronously receive connectionless datagrams from an unknown host or multiple hosts.</span></span> <span data-ttu-id="660fe-728">В этих случаях будет <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> считывать первые поставленные в очередь датаграммы, полученные в буфер локальной сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-728">In these cases, <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="660fe-729">Если полученная датаграмма превышает размер `buffer` <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> , метод будет заполняться `buffer` максимально возможной частью <xref:System.Net.Sockets.SocketException>сообщения и вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-729">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-730">При использовании ненадежного протокола избыточные данные будут потеряны.</span><span class="sxs-lookup"><span data-stu-id="660fe-730">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="660fe-731">Если используется надежный протокол, избыточные данные будут храниться в поставщике служб, и его можно будет извлечь, вызвав <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> метод с достаточно большим размером буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-731">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="660fe-732">Чтобы гарантировать, что конечная точка удаленного узла всегда возвращается, приложение должно явно привязать <xref:System.Net.Sockets.Socket> к локальной конечной точке <xref:System.Net.Sockets.Socket.Bind%2A> с помощью <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метода, а затем вызвать метод с параметром, `optionLevel` для  <xref:System.Net.Sockets.SocketOptionLevel.IP> которого задано значение.  <xref:System.Net.Sockets.SocketOptionName.PacketInformation>или `optionName` , если `optionValue`  необходимо, параметр имеет значение и параметр, чтобы включить этот параметр перед вызовом <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> метода. <xref:System.Net.Sockets.SocketOptionLevel.IPv6></span><span class="sxs-lookup"><span data-stu-id="660fe-732">To guarantee that the remote host endpoint is always returned, an application should explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method and then call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method with the `optionLevel` parameter set to <xref:System.Net.Sockets.SocketOptionLevel.IP> or <xref:System.Net.Sockets.SocketOptionLevel.IPv6> as appropriate, the `optionName` parameter set to <xref:System.Net.Sockets.SocketOptionName.PacketInformation>, and the `optionValue` parameter to enable this option before calling the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-733">В противном случае конечная точка удаленного узла может быть не возвращена, когда отправитель отправил число датаграмм, прежде чем получатель вызвал <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-733">Otherwise, it is possible for the remote host endpoint to not be returned when the sender has sent a number of datagrams before the receiver has called the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-734">Хотя <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> предназначен для протоколов без подключения, также можно использовать протокол, ориентированный на соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-734">Although <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="660fe-735">Если вы решили это сделать, необходимо сначала установить соединение <xref:System.Net.Sockets.Socket.Connect%2A> с удаленным узлом, вызвав  /  <xref:System.Net.Sockets.Socket.BeginConnect%2A> метод или <xref:System.Net.Sockets.Socket.Accept%2A> приняв входящий запрос на подключение, вызвав метод или <xref:System.Net.Sockets.Socket.BeginAccept%2A> .</span><span class="sxs-lookup"><span data-stu-id="660fe-735">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> / <xref:System.Net.Sockets.Socket.BeginConnect%2A> method or accept an incoming connection request by calling the <xref:System.Net.Sockets.Socket.Accept%2A> or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="660fe-736">При вызове <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> метода перед установкой или приемом соединения вы <xref:System.Net.Sockets.SocketException>получите.</span><span class="sxs-lookup"><span data-stu-id="660fe-736">If you call the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method before establishing or accepting a connection, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-737">Кроме того, можно установить удаленный узел по умолчанию для протокола без установления соединения перед <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-737">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-738">В любом из этих случаев <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> метод будет `remoteEP` игнорировать параметр и получить данные только с подключенного или удаленного узла по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-738">In either of these cases, the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="660fe-739">При использовании сокетов, ориентированных <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> на соединение, будет считывать столько данных, сколько доступно до числа байтов `size` , заданных параметром.</span><span class="sxs-lookup"><span data-stu-id="660fe-739">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> will read as much data as is available up to the number of bytes specified by the `size` parameter.</span></span>  
  
 <span data-ttu-id="660fe-740">Чтобы отменить ожидание <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, <xref:System.Net.Sockets.Socket.Close%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-740">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-741">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-741">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-742">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-742">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-743">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-743">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-744">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-744">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-745">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-745">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-746">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-746">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-747">В следующем примере кода асинхронно принимаются датаграммы без установления соединения с удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-747">The following code example asynchronously receives connectionless datagrams from a remote host.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#41](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#41)]
 [!code-csharp[Socket_Async_Send_Receive#41](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#41)]
 [!code-vb[Socket_Async_Send_Receive#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-748">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-748"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-749">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-749">-or-</span></span> 
 <span data-ttu-id="660fe-750">Свойство <paramref name="remoteEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-750"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-751">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-751">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-752">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-752"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-753">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-753">-or-</span></span> 
 <span data-ttu-id="660fe-754">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-754"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-755">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-755">-or-</span></span> 
 <span data-ttu-id="660fe-756">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-756"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-757">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-757">-or-</span></span> 
 <span data-ttu-id="660fe-758">Значение<paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" /> .</span><span class="sxs-lookup"><span data-stu-id="660fe-758"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-759"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-759">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-760">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-760">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Accept" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-761">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-761">Marshaling a Delegate as a Callback Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveMessageFrom">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveMessageFrom (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveMessageFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveMessageFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveMessageFrom : byte[] * int * int * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceiveMessageFrom (buffer, offset, size, socketFlags, remoteEP, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-762">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-762">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-763">Отсчитываемая с нуля позиция в параметре <paramref name="buffer" />, начиная с которой хранятся данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-763">The zero-based position in the <paramref name="buffer" /> parameter at which to store the data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-764">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-764">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-765">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-765">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-766">Объект <see cref="T:System.Net.EndPoint" />, представляющий источник данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-766">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-767">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-767">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-768">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-768">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-769">Начинает асинхронный прием заданного числа байтов данных в указанное место буфера данных, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />, а также сохраняет конечную точку и информацию пакета.</span><span class="sxs-lookup"><span data-stu-id="660fe-769">Begins to asynchronously receive the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint and packet information.</span></span></summary>
        <returns><span data-ttu-id="660fe-770">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-770">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-771">Асинхронная операция получения должна быть завершена путем вызова <xref:System.Net.Sockets.Socket.EndReceiveMessageFrom%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-771">The asynchronous receive operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceiveMessageFrom%2A> method.</span></span> <span data-ttu-id="660fe-772">Как правило, метод вызывается `asyncCallback` делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-772">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="660fe-773">Этот метод не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-773">This method does not block until the operation completes.</span></span> <span data-ttu-id="660fe-774">Для блокировки до завершения операции используйте <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-774">To block until the operation completes, use the <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-775">Чтобы отменить ожидание <xref:System.Net.Sockets.Socket.BeginReceiveMessageFrom%2A>, <xref:System.Net.Sockets.Socket.Close%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-775">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceiveMessageFrom%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-776">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="660fe-776">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="660fe-777">Этот метод считывает данные в `buffer` параметр и захватывает конечную точку удаленного узла, из которой отправляются данные, а также сведения о полученном пакете.</span><span class="sxs-lookup"><span data-stu-id="660fe-777">This method reads data into the `buffer` parameter, and captures the remote host endpoint from which the data is sent, as well as information about the received packet.</span></span> <span data-ttu-id="660fe-778">Сведения о том, как получить эту конечную точку, <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="660fe-778">For information on how to retrieve this endpoint, refer to <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>.</span></span> <span data-ttu-id="660fe-779">Этот метод наиболее удобен, если предполагается асинхронное получение датаграмм без подключения из неизвестного узла или с нескольких узлов.</span><span class="sxs-lookup"><span data-stu-id="660fe-779">This method is most useful if you intend to asynchronously receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-780">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-780">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-781">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-781">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-782">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-782">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-783">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-783">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-784">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-784">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-785">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-785">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-786">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-786"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-787">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-787">-or-</span></span> 
 <span data-ttu-id="660fe-788">Свойство <paramref name="remoteEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-788"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-789">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-789">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-790">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-790"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-791">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-791">-or-</span></span> 
 <span data-ttu-id="660fe-792">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-792"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-793">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-793">-or-</span></span> 
 <span data-ttu-id="660fe-794">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-794"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-795">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-795">-or-</span></span> 
 <span data-ttu-id="660fe-796">Значение<paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" /> .</span><span class="sxs-lookup"><span data-stu-id="660fe-796"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-797"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-797">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-798">Используется операционная система Windows 2000 или более ранняя версия, а для этого метода необходима операционная система Windows XP.</span><span class="sxs-lookup"><span data-stu-id="660fe-798">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-799">Выполняет асинхронную передачу данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-799">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSend (buffers, socketFlags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-800">Массив типа <see cref="T:System.Byte" />, который содержит передаваемые данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-800">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-801">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-801">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-802">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-802">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-803">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-803">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-804">Выполняет асинхронную передачу данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-804">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-805">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу.</span><span class="sxs-lookup"><span data-stu-id="660fe-805">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-806"><xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.Sockets.Socket.Connect%2A> <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.Accept%2A>Метод запускает асинхронную операцию отправки на удаленный узел, установленный в методе,, или. <xref:System.Net.Sockets.Socket.BeginSend%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-806">The <xref:System.Net.Sockets.Socket.BeginSend%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="660fe-807"><xref:System.Net.Sockets.Socket.BeginSend%2A>выдаст исключение, если не выполняется <xref:System.Net.Sockets.Socket.Accept%2A>первый вызов <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-807"><xref:System.Net.Sockets.Socket.BeginSend%2A> will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-808"><xref:System.Net.Sockets.Socket.BeginSend%2A> Вызов метода дает возможность отправки данных в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-808">Calling the <xref:System.Net.Sockets.Socket.BeginSend%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="660fe-809">Можно создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginSend%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-809">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="660fe-810">Для этого, как минимум, `state` параметр должен содержать подключенное или используемое по умолчанию <xref:System.Net.Sockets.Socket> соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-810">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="660fe-811">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс или структуру для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-811">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-812">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginSend%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-812">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-813">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndSend%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-813">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSend%2A> method.</span></span> <span data-ttu-id="660fe-814">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginSend%2A>, система будет использовать отдельный поток для выполнения указанного метода обратного вызова и будет <xref:System.Net.Sockets.Socket.EndSend%2A> блокироваться до тех пор, пока <xref:System.Net.Sockets.Socket> не отправит запрошенное число байтов или не выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-814">When your application calls <xref:System.Net.Sockets.Socket.BeginSend%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSend%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="660fe-815">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginSend%2A> метода, <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-815">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="660fe-816">Вызовите метод Set для Т:систем.среадинг.мануалресетевент в методе обратного вызова, если нужно, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-816">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="660fe-817">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-817">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-818">Хотя и предназначен для протоколов, ориентированных на подключение, <xref:System.Net.Sockets.Socket.BeginSend%2A> также работает для протоколов без подключения при условии, что сначала <xref:System.Net.Sockets.Socket.Connect%2A> вызывается метод или <xref:System.Net.Sockets.Socket.BeginConnect%2A> , чтобы установить удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-818">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSend%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="660fe-819">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует <xref:System.Net.Sockets.Socket.BeginSendTo%2A>использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-819">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span> <span data-ttu-id="660fe-820">Его можно использовать <xref:System.Net.Sockets.Socket.BeginSendTo%2A> даже после установки удаленного узла по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-820">It is okay to use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-821">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.BeginSend%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A> вызов или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-821">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.BeginSend%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-822">При использовании протоколов без подключения необходимо также убедиться, что размер буфера не превышает максимальный размер пакета поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-822">With connectionless protocols, you must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-823">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.BeginSend%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-823">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.BeginSend%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-824">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketflags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-824">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-825">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-825">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-826">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-826">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-827">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-827">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-828">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-828">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-829">`state`— Это экземпляр определяемого пользователем класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-829">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-830">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-830">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-831">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-831">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-832">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-832">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-833">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-833">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-834">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-834">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-835">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-835">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-836"><paramref name="buffers" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-836"><paramref name="buffers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-837">Параметр <paramref name="buffers" /> пуст.</span><span class="sxs-lookup"><span data-stu-id="660fe-837"><paramref name="buffers" /> is empty.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-838">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-838">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-839">См. ниже примeчания к данному разделу.</span><span class="sxs-lookup"><span data-stu-id="660fe-839">See remarks section below.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-840"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-840">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-841">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-841">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-842">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-842">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-843">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-843">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSend (buffers, socketFlags, errorCode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-844">Массив типа <see cref="T:System.Byte" />, который содержит передаваемые данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-844">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-845">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-845">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-846">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-846">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-847">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-847">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-848">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-848">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-849">Выполняет асинхронную передачу данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-849">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-850">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу.</span><span class="sxs-lookup"><span data-stu-id="660fe-850">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-851"><xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.Sockets.Socket.Connect%2A> <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.Accept%2A>Метод запускает асинхронную операцию отправки на удаленный узел, установленный в методе,, или. <xref:System.Net.Sockets.Socket.BeginSend%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-851">The <xref:System.Net.Sockets.Socket.BeginSend%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="660fe-852"><xref:System.Net.Sockets.Socket.BeginSend%2A>выдаст исключение, если не выполняется <xref:System.Net.Sockets.Socket.Accept%2A>первый вызов <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-852"><xref:System.Net.Sockets.Socket.BeginSend%2A> will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-853"><xref:System.Net.Sockets.Socket.BeginSend%2A> Вызов метода дает возможность отправки данных в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-853">Calling the <xref:System.Net.Sockets.Socket.BeginSend%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="660fe-854">Можно создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginSend%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-854">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="660fe-855">Для этого, как минимум, `state` параметр должен содержать подключенное или используемое по умолчанию <xref:System.Net.Sockets.Socket> соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-855">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="660fe-856">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс или структуру для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-856">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-857">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginSend%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-857">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-858">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndSend%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-858">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSend%2A> method.</span></span> <span data-ttu-id="660fe-859">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginSend%2A>, система будет использовать отдельный поток для выполнения указанного метода обратного вызова и будет <xref:System.Net.Sockets.Socket.EndSend%2A> блокироваться до тех пор, пока <xref:System.Net.Sockets.Socket> не отправит запрошенное число байтов или не выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-859">When your application calls <xref:System.Net.Sockets.Socket.BeginSend%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSend%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="660fe-860">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginSend%2A> метода, <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-860">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="660fe-861">Вызовите метод Set для <xref:System.Threading.ManualResetEvent> в методе обратного вызова, если необходимо, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-861">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="660fe-862">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-862">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-863">Хотя и предназначен для протоколов, ориентированных на подключение, <xref:System.Net.Sockets.Socket.BeginSend%2A> также работает для протоколов без подключения при условии, что сначала <xref:System.Net.Sockets.Socket.Connect%2A> вызывается метод или <xref:System.Net.Sockets.Socket.BeginConnect%2A> , чтобы установить удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-863">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSend%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="660fe-864">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует <xref:System.Net.Sockets.Socket.BeginSendTo%2A>использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-864">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span> <span data-ttu-id="660fe-865">Его можно использовать <xref:System.Net.Sockets.Socket.BeginSendTo%2A> даже после установки удаленного узла по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-865">It is okay to use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-866">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.BeginSend%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A> вызов или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-866">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.BeginSend%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-867">При использовании протоколов без подключения необходимо также убедиться, что размер буфера не превышает максимальный размер пакета поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-867">With connectionless protocols, you must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-868">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.BeginSend%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-868">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.BeginSend%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-869">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketflags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-869">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-870">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-870">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-871">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-871">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-872">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-872">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-873">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-873">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-874">`state`— Это экземпляр определяемого пользователем класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-874">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-875">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-875">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-876">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-876">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-877">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-877">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-878">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-878">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-879">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-879">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-880">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-880">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-881"><paramref name="buffers" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-881"><paramref name="buffers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-882">Параметр <paramref name="buffers" /> пуст.</span><span class="sxs-lookup"><span data-stu-id="660fe-882"><paramref name="buffers" /> is empty.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-883">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-883">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-884">См. ниже примeчания к данному разделу.</span><span class="sxs-lookup"><span data-stu-id="660fe-884">See remarks section below.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-885"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-885">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-886">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-886">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-887">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-887">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-888">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-888">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * int * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSend (buffer, offset, size, socketFlags, errorCode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-889">Массив типа <see cref="T:System.Byte" />, который содержит передаваемые данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-889">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-890">Отсчитываемая с нуля позиция в параметре <paramref name="buffer" />, с которой начинается отправка данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-890">The zero-based position in the <paramref name="buffer" /> parameter at which to begin sending data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-891">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-891">The number of bytes to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-892">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-892">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-893">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-893">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-894">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-894">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-895">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-895">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-896">Выполняет асинхронную передачу данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-896">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-897">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу.</span><span class="sxs-lookup"><span data-stu-id="660fe-897">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-898"><xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.Sockets.Socket.Connect%2A> <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.Accept%2A>Метод запускает асинхронную операцию отправки на удаленный узел, установленный в методе,, или. <xref:System.Net.Sockets.Socket.BeginSend%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-898">The <xref:System.Net.Sockets.Socket.BeginSend%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="660fe-899"><xref:System.Net.Sockets.Socket.BeginSend%2A>выдаст исключение, если не выполняется <xref:System.Net.Sockets.Socket.Accept%2A>первый вызов <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-899"><xref:System.Net.Sockets.Socket.BeginSend%2A> will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-900"><xref:System.Net.Sockets.Socket.BeginSend%2A> Вызов метода дает возможность отправки данных в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-900">Calling the <xref:System.Net.Sockets.Socket.BeginSend%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="660fe-901">Можно создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginSend%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-901">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="660fe-902">Для этого, как минимум, `state` параметр должен содержать подключенное или используемое по умолчанию <xref:System.Net.Sockets.Socket> соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-902">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="660fe-903">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс или структуру для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-903">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-904">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginSend%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-904">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-905">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndSend%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-905">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSend%2A> method.</span></span> <span data-ttu-id="660fe-906">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginSend%2A>, система будет использовать отдельный поток для выполнения указанного метода обратного вызова и будет <xref:System.Net.Sockets.Socket.EndSend%2A> блокироваться до тех пор, пока <xref:System.Net.Sockets.Socket> не отправит запрошенное число байтов или не выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-906">When your application calls <xref:System.Net.Sockets.Socket.BeginSend%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSend%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="660fe-907">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginSend%2A> метода, <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-907">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="660fe-908">Вызовите метод Set для Т:систем.среадинг.мануалресетевент в методе обратного вызова, если нужно, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-908">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="660fe-909">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-909">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-910">Хотя и предназначен для протоколов, ориентированных на подключение, <xref:System.Net.Sockets.Socket.BeginSend%2A> также работает для протоколов без подключения при условии, что сначала <xref:System.Net.Sockets.Socket.Connect%2A> вызывается метод или <xref:System.Net.Sockets.Socket.BeginConnect%2A> , чтобы установить удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-910">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSend%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="660fe-911">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует <xref:System.Net.Sockets.Socket.BeginSendTo%2A>использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-911">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span> <span data-ttu-id="660fe-912">Его можно использовать <xref:System.Net.Sockets.Socket.BeginSendTo%2A> даже после установки удаленного узла по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-912">It is okay to use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-913">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.BeginSend%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A> вызов или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-913">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.BeginSend%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-914">При использовании протоколов без подключения необходимо также убедиться, что размер буфера не превышает максимальный размер пакета поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-914">With connectionless protocols, you must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-915">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.BeginSend%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-915">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.BeginSend%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-916">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketflags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-916">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-917">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-917">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-918">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-918">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-919">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-919">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-920">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-920">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-921">`state`— Это экземпляр определяемого пользователем класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-921">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-922">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-922">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-923">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-923">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-924">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-924">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-925">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-925">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-926">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-926">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-927">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-927">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-928">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-928"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-929">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-929">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-930">См. ниже примeчания к данному разделу.</span><span class="sxs-lookup"><span data-stu-id="660fe-930">See remarks section below.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-931">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-931"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-932">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-932">-or-</span></span> 
 <span data-ttu-id="660fe-933">Значение параметра <paramref name="offset" /> меньше значения длины, указанного в параметре <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-933"><paramref name="offset" /> is less than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-934">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-934">-or-</span></span> 
 <span data-ttu-id="660fe-935">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-935"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-936">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-936">-or-</span></span> 
 <span data-ttu-id="660fe-937">Значение<paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" /> .</span><span class="sxs-lookup"><span data-stu-id="660fe-937"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-938"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-938">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-939">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-939">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-940">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-940">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-941">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-941">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socket_flags, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socket_flags, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (buffer As Byte(), offset As Integer, size As Integer, socket_flags As SocketFlags, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socket_flags, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * int * System.Net.Sockets.SocketFlags * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSend (buffer, offset, size, socket_flags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socket_flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-942">Массив типа <see cref="T:System.Byte" />, который содержит передаваемые данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-942">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-943">Отсчитываемая с нуля позиция в параметре <paramref name="buffer" />, с которой начинается отправка данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-943">The zero-based position in the <paramref name="buffer" /> parameter at which to begin sending data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-944">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-944">The number of bytes to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-945">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-945">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="socket_flags"><span data-ttu-id="660fe-946">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-946">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-947">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-947">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-948">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-948">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-949">Выполняет асинхронную передачу данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-949">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-950">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу.</span><span class="sxs-lookup"><span data-stu-id="660fe-950">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-951"><xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.Sockets.Socket.Connect%2A> <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.Accept%2A>Метод запускает асинхронную операцию отправки на удаленный узел, установленный в методе,, или. <xref:System.Net.Sockets.Socket.BeginSend%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-951">The <xref:System.Net.Sockets.Socket.BeginSend%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="660fe-952"><xref:System.Net.Sockets.Socket.BeginSend%2A>выдаст исключение, если не выполняется <xref:System.Net.Sockets.Socket.Accept%2A>первый вызов <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-952"><xref:System.Net.Sockets.Socket.BeginSend%2A> will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-953"><xref:System.Net.Sockets.Socket.BeginSend%2A> Вызов метода дает возможность отправки данных в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-953">Calling the <xref:System.Net.Sockets.Socket.BeginSend%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="660fe-954">Можно создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginSend%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-954">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="660fe-955">Для этого, как минимум, `state` параметр должен содержать подключенное или используемое по умолчанию <xref:System.Net.Sockets.Socket> соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-955">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="660fe-956">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс или структуру для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-956">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-957">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginSend%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-957">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-958">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndSend%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-958">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSend%2A> method.</span></span> <span data-ttu-id="660fe-959">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginSend%2A>, система будет использовать отдельный поток для выполнения указанного метода обратного вызова и будет <xref:System.Net.Sockets.Socket.EndSend%2A> блокироваться до тех пор, пока <xref:System.Net.Sockets.Socket> не отправит запрошенное число байтов или не выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-959">When your application calls <xref:System.Net.Sockets.Socket.BeginSend%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSend%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="660fe-960">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginSend%2A> метода, <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-960">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="660fe-961">Вызовите метод Set для Т:систем.среадинг.мануалресетевент в методе обратного вызова, если нужно, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-961">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="660fe-962">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-962">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-963">Хотя и предназначен для протоколов, ориентированных на подключение, <xref:System.Net.Sockets.Socket.BeginSend%2A> также работает для протоколов без подключения при условии, что сначала <xref:System.Net.Sockets.Socket.Connect%2A> вызывается метод или <xref:System.Net.Sockets.Socket.BeginConnect%2A> , чтобы установить удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-963">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSend%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="660fe-964">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует <xref:System.Net.Sockets.Socket.BeginSendTo%2A>использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-964">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span> <span data-ttu-id="660fe-965">Его можно использовать <xref:System.Net.Sockets.Socket.BeginSendTo%2A> даже после установки удаленного узла по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-965">It is okay to use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-966">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.BeginSend%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A> вызов или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-966">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.BeginSend%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-967">При использовании протоколов без подключения необходимо также убедиться, что размер буфера не превышает максимальный размер пакета поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-967">With connectionless protocols, you must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-968">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.BeginSend%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-968">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.BeginSend%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-969">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketflags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-969">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-970">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-970">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-971">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-971">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-972">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-972">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-973">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-973">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-974">`state`— Это экземпляр определяемого пользователем класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-974">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-975">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-975">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-976">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-976">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-977">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-977">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-978">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-978">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-979">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-979">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-980">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-980">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-981">В следующем примере кода начинается асинхронная отправка данных на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-981">The following code example begins asynchronously sending data to a remote host.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#5)]
 [!code-csharp[Socket_Async_Send_Receive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#5)]
 [!code-vb[Socket_Async_Send_Receive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-982">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-982"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-983">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-983">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-984">См. ниже примeчания к данному разделу.</span><span class="sxs-lookup"><span data-stu-id="660fe-984">See remarks section below.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-985">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-985"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-986">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-986">-or-</span></span> 
 <span data-ttu-id="660fe-987">Значение параметра <paramref name="offset" /> меньше значения длины, указанного в параметре <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-987"><paramref name="offset" /> is less than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-988">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-988">-or-</span></span> 
 <span data-ttu-id="660fe-989">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-989"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-990">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-990">-or-</span></span> 
 <span data-ttu-id="660fe-991">Значение<paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" /> .</span><span class="sxs-lookup"><span data-stu-id="660fe-991"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-992"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-992">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-993">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-993">Marshaling a Delegate as a Callback Method</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md"><span data-ttu-id="660fe-994">Примеры асинхронных сокетов клиента</span><span class="sxs-lookup"><span data-stu-id="660fe-994">Asynchronous Client Socket Example</span></span></related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md"><span data-ttu-id="660fe-995">Пример асинхронного сокета сервера</span><span class="sxs-lookup"><span data-stu-id="660fe-995">Asynchronous Server Socket Example</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSendFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-996">Выполняет асинхронную передачу файла на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-996">Sends a file asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSendFile">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendFile (string fileName, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendFile(string fileName, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendFile (fileName As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendFile(System::String ^ fileName, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendFile : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSendFile (fileName, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="660fe-997">Строка, содержащая путь и имя отправляемого файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-997">A string that contains the path and name of the file to send.</span></span> <span data-ttu-id="660fe-998">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-998">This parameter can be <see langword="null" />.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-999">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-999">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-1000">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1000">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-1001">Отправляет файл <paramref name="fileName" /> на подключенный объект <see cref="T:System.Net.Sockets.Socket" />, используя флаг <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1001">Sends the file <paramref name="fileName" /> to a connected <see cref="T:System.Net.Sockets.Socket" /> object using the <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> flag.</span></span></summary>
        <returns><span data-ttu-id="660fe-1002">Объект <see cref="T:System.IAsyncResult" />, который представляет асинхронную передачу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1002">An <see cref="T:System.IAsyncResult" /> object that represents the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1003">Эта перегрузка отправляет файл `fileName` на подключенный сокет.</span><span class="sxs-lookup"><span data-stu-id="660fe-1003">This overload sends the file `fileName` to the connected socket.</span></span> <span data-ttu-id="660fe-1004">Если `fileName` параметр находится в локальном каталоге, он может быть идентифицирован только с именем файла; в противном случае необходимо указать полный путь и имя файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1004">If `fileName` is in the local directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="660fe-1005">Подстановочные знаки (".. \\\\\\\\\мифиле.ткст ") и общие имена UNC (" \шаред Directory \мифиле.ткст ") поддерживаются. \\</span><span class="sxs-lookup"><span data-stu-id="660fe-1005">Wildcards ("..\\\myfile.txt") and UNC share names ("\\\\\\\shared directory\\\myfile.txt") are supported.</span></span> <span data-ttu-id="660fe-1006">Если файл не найден, возникает исключение <xref:System.IO.FileNotFoundException> .</span><span class="sxs-lookup"><span data-stu-id="660fe-1006">If the file is not found, the exception <xref:System.IO.FileNotFoundException> is thrown.</span></span>  
  
 <span data-ttu-id="660fe-1007">Этот метод использует функцию `TransmitFile` , обнаруженную в API Windows Sockets 2.</span><span class="sxs-lookup"><span data-stu-id="660fe-1007">This method uses the `TransmitFile` function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="660fe-1008">Дополнительные сведения о `TransmitFile` функции и ее флагах см. в документации по [сокетам Windows](/windows/desktop/WinSock/) .</span><span class="sxs-lookup"><span data-stu-id="660fe-1008">For more information about the `TransmitFile` function and its flags, see the [Windows Sockets](/windows/desktop/WinSock/) documentation.</span></span>  
  
 <span data-ttu-id="660fe-1009"><xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.Sockets.Socket.Connect%2A> <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.Accept%2A>Метод запускает асинхронную операцию отправки на удаленный узел, установленный в методах,, или. <xref:System.Net.Sockets.Socket.BeginSendFile%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1009">The <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>,<xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> methods.</span></span> <span data-ttu-id="660fe-1010"><xref:System.Net.Sockets.Socket.BeginSendFile%2A>создает исключение, если не выполняется <xref:System.Net.Sockets.Socket.Accept%2A>первый вызов <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1010"><xref:System.Net.Sockets.Socket.BeginSendFile%2A> throws an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-1011"><xref:System.Net.Sockets.Socket.BeginSendFile%2A> Вызов метода позволяет отправить файл в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1011">Calling the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method enables you to send a file within a separate execution thread.</span></span>  
  
 <span data-ttu-id="660fe-1012">Чтобы завершить операцию, можно создать метод обратного вызова, который вызывается <xref:System.AsyncCallback> параметром Delegate.</span><span class="sxs-lookup"><span data-stu-id="660fe-1012">To complete the operation, you can create a callback method that is invoked by the <xref:System.AsyncCallback> delegate parameter.</span></span> <span data-ttu-id="660fe-1013">Для этого, как минимум, `state` параметр должен <xref:System.Net.Sockets.Socket> содержать объект, используемый для связи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1013">To do this, at the very minimum, the `state` parameter must contain the <xref:System.Net.Sockets.Socket> object being used for communication.</span></span> <span data-ttu-id="660fe-1014">Если для обратного вызова требуются дополнительные сведения, можно создать класс или структуру для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-1014">If your callback needs more information, you can create a class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-1015">Передайте экземпляр этого пользовательского объекта в <xref:System.Net.Sockets.Socket.BeginSendFile%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-1015">Pass an instance of this custom object to the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-1016">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndSendFile%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1016">Your callback method must invoke the <xref:System.Net.Sockets.Socket.EndSendFile%2A> method.</span></span> <span data-ttu-id="660fe-1017">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginSendFile%2A>, система использует отдельный поток для выполнения указанного метода обратного вызова и <xref:System.Net.Sockets.Socket.EndSendFile%2A> блокируется до тех пор, <xref:System.Net.Sockets.Socket> пока не отправит весь файл или не выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1017">When your application calls <xref:System.Net.Sockets.Socket.BeginSendFile%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.Socket.EndSendFile%2A> until the <xref:System.Net.Sockets.Socket> sends the entire file or throws an exception.</span></span> <span data-ttu-id="660fe-1018">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1018">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-1019">Хотя и предназначен для протоколов, ориентированных на подключение, <xref:System.Net.Sockets.Socket.BeginSendFile%2A> также работает для протоколов без подключения при условии, что сначала <xref:System.Net.Sockets.Socket.Connect%2A> вызывается метод или <xref:System.Net.Sockets.Socket.BeginConnect%2A> , чтобы установить удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1019">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSendFile%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="660fe-1020">При использовании протоколов без подключения необходимо убедиться, что размер файла не превышает максимальный размер пакета поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-1020">With connectionless protocols, you must be sure that the size of your file does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-1021">Если это так, датаграмма не отправляется и <xref:System.Net.Sockets.Socket.BeginSendFile%2A> <xref:System.Net.Sockets.SocketException> вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1021">If it does, the datagram is not sent and <xref:System.Net.Sockets.Socket.BeginSendFile%2A> throws a <xref:System.Net.Sockets.SocketException> exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1022">Если вы получаете <xref:System.Net.Sockets.SocketException> исключение, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1022">If you receive a <xref:System.Net.Sockets.SocketException> exception, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1023">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1023">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1024">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1024">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1025">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1025">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1026">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1026">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-1027">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-1027">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1028">В следующем примере кода создается и подключается сокет для асинхронного взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="660fe-1028">The following code example creates and connects a socket for asynchronous communication.</span></span> <span data-ttu-id="660fe-1029">Сначала файл "Text. txt" отправляется асинхронно на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-1029">First, the file "text.txt" is sent asynchronously to the remote host.</span></span> <span data-ttu-id="660fe-1030">Вызовы <xref:System.Net.Sockets.Socket.EndSendFile%2A> делегата обратного вызова для завершения передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1030">The callback delegate calls <xref:System.Net.Sockets.Socket.EndSendFile%2A> to complete the transmission.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#9)]
 [!code-csharp[NCLSocketEnhancements#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1031">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1031">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1032">Сокет не подключен к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1032">The socket is not connected to a remote host.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="660fe-1033">Файл <paramref name="fileName" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="660fe-1033">The file <paramref name="fileName" /> was not found.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1034">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1034">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-1035">См. ниже примeчания к данному разделу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1035">See remarks section below.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendFile">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendFile (string fileName, byte[] preBuffer, byte[] postBuffer, System.Net.Sockets.TransmitFileOptions flags, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendFile(string fileName, unsigned int8[] preBuffer, unsigned int8[] postBuffer, valuetype System.Net.Sockets.TransmitFileOptions flags, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendFile (fileName As String, preBuffer As Byte(), postBuffer As Byte(), flags As TransmitFileOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendFile(System::String ^ fileName, cli::array &lt;System::Byte&gt; ^ preBuffer, cli::array &lt;System::Byte&gt; ^ postBuffer, System::Net::Sockets::TransmitFileOptions flags, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendFile : string * byte[] * byte[] * System.Net.Sockets.TransmitFileOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSendFile (fileName, preBuffer, postBuffer, flags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="preBuffer" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="postBuffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="flags" Type="System.Net.Sockets.TransmitFileOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="660fe-1036">Строка, содержащая путь и имя отправляемого файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1036">A string that contains the path and name of the file to be sent.</span></span> <span data-ttu-id="660fe-1037">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1037">This parameter can be <see langword="null" />.</span></span></param>
        <param name="preBuffer"><span data-ttu-id="660fe-1038">Массив <see cref="T:System.Byte" />, содержащий данные, отправляемые перед передачей файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1038">A <see cref="T:System.Byte" /> array that contains data to be sent before the file is sent.</span></span> <span data-ttu-id="660fe-1039">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1039">This parameter can be <see langword="null" />.</span></span></param>
        <param name="postBuffer"><span data-ttu-id="660fe-1040">Массив <see cref="T:System.Byte" />, содержащий данные, отправляемые после передачи файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1040">A <see cref="T:System.Byte" /> array that contains data to be sent after the file is sent.</span></span> <span data-ttu-id="660fe-1041">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1041">This parameter can be <see langword="null" />.</span></span></param>
        <param name="flags"><span data-ttu-id="660fe-1042">Побитовое сочетание значений <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1042">A bitwise combination of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-1043">Делегат <see cref="T:System.AsyncCallback" />, который должен быть вызван, когда эта операция завершается.</span><span class="sxs-lookup"><span data-stu-id="660fe-1043">An <see cref="T:System.AsyncCallback" /> delegate to be invoked when this operation completes.</span></span> <span data-ttu-id="660fe-1044">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1044">This parameter can be <see langword="null" />.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-1045">Определенный пользователем объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1045">A user-defined object that contains state information for this request.</span></span> <span data-ttu-id="660fe-1046">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1046">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="660fe-1047">Выполняет асинхронную передачу файла и буферов данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1047">Sends a file and buffers of data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span></span></summary>
        <returns><span data-ttu-id="660fe-1048">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1048">An <see cref="T:System.IAsyncResult" /> object that represents the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1049">Для этой перегрузки требуется имя файла, который необходимо отправить, и побитовое <xref:System.Net.Sockets.TransmitFileOptions> сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-1049">This overload requires the name of the file you want to send and a bitwise combination of <xref:System.Net.Sockets.TransmitFileOptions> values.</span></span> <span data-ttu-id="660fe-1050">`preBuffer` Параметр содержит все данные, которые должны предшествовать файлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1050">The `preBuffer` parameter contains any data you want to precede the file.</span></span> <span data-ttu-id="660fe-1051">`postBuffer`содержит данные, которые необходимо отслеживать в файле.</span><span class="sxs-lookup"><span data-stu-id="660fe-1051">`postBuffer` contains data you want to follow the file.</span></span> <span data-ttu-id="660fe-1052">Если `fileName` параметр находится в локальном каталоге, он может быть идентифицирован только с именем файла; в противном случае необходимо указать полный путь и имя файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1052">If `fileName` is in the local directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="660fe-1053">Подстановочные знаки (".. \\\\\\\\\мифиле.ткст ") и общие имена UNC (" \шаред Directory \мифиле.ткст ") поддерживаются. \\</span><span class="sxs-lookup"><span data-stu-id="660fe-1053">Wildcards ("..\\\myfile.txt") and UNC share names ("\\\\\\\shared directory\\\myfile.txt") are supported.</span></span> <span data-ttu-id="660fe-1054">Если файл не найден, возникает исключение <xref:System.IO.FileNotFoundException> .</span><span class="sxs-lookup"><span data-stu-id="660fe-1054">If the file is not found, the exception <xref:System.IO.FileNotFoundException> is thrown.</span></span>  
  
 <span data-ttu-id="660fe-1055">`flags` Параметр предоставляет поставщику услуг Windows Sockets дополнительные сведения о переносе файлов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1055">The `flags` parameter provides the Window Sockets service provider with additional information about the file transfer.</span></span> <span data-ttu-id="660fe-1056">Дополнительные сведения об использовании этого параметра см. в разделе <xref:System.Net.Sockets.TransmitFileOptions>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1056">For more information about how to use this parameter, see <xref:System.Net.Sockets.TransmitFileOptions>.</span></span>  
  
 <span data-ttu-id="660fe-1057">Этот метод использует функцию `TransmitFile` , обнаруженную в API Windows Sockets 2.</span><span class="sxs-lookup"><span data-stu-id="660fe-1057">This method uses the `TransmitFile` function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="660fe-1058">Дополнительные сведения о `TransmitFile` функции и ее флагах см. в документации по [сокетам Windows](/windows/desktop/WinSock/) .</span><span class="sxs-lookup"><span data-stu-id="660fe-1058">For more information about the `TransmitFile` function and its flags, see the [Windows Sockets](/windows/desktop/WinSock/) documentation.</span></span>  
  
 <span data-ttu-id="660fe-1059"><xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.Sockets.Socket.Connect%2A> <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.Accept%2A>Метод запускает асинхронную операцию отправки на удаленный узел, установленный в методах,, или. <xref:System.Net.Sockets.Socket.BeginSendFile%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1059">The <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> methods.</span></span> <span data-ttu-id="660fe-1060"><xref:System.Net.Sockets.Socket.BeginSendFile%2A>создает исключение, если не выполняется <xref:System.Net.Sockets.Socket.Accept%2A>первый вызов <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, или <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1060"><xref:System.Net.Sockets.Socket.BeginSendFile%2A> throws an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="660fe-1061"><xref:System.Net.Sockets.Socket.BeginSendFile%2A> Вызов метода дает возможность отправить файл в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1061">Calling the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method gives you the ability to send a file within a separate execution thread.</span></span>  
  
 <span data-ttu-id="660fe-1062">Чтобы завершить операцию, можно создать метод обратного вызова, который вызывается <xref:System.AsyncCallback> параметром Delegate.</span><span class="sxs-lookup"><span data-stu-id="660fe-1062">To complete the operation, you can create a callback method that is invoked by the <xref:System.AsyncCallback> delegate parameter.</span></span> <span data-ttu-id="660fe-1063">Для этого, как минимум, `state` параметр должен <xref:System.Net.Sockets.Socket> содержать объект, используемый для связи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1063">To do this, at the very minimum, the `state` parameter must contain the <xref:System.Net.Sockets.Socket> object being used for communication.</span></span> <span data-ttu-id="660fe-1064">Если для обратного вызова требуются дополнительные сведения, можно создать класс или структуру для хранения <xref:System.Net.Sockets.Socket> и других необходимых сведений.</span><span class="sxs-lookup"><span data-stu-id="660fe-1064">If your callback needs more information, you can create a class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="660fe-1065">Передайте экземпляр этого пользовательского объекта в <xref:System.Net.Sockets.Socket.BeginSendFile%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-1065">Pass an instance of this custom object to the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-1066">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndSendFile%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1066">Your callback method must invoke the <xref:System.Net.Sockets.Socket.EndSendFile%2A> method.</span></span> <span data-ttu-id="660fe-1067">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginSendFile%2A>, система использует отдельный поток для выполнения указанного метода обратного вызова и <xref:System.Net.Sockets.Socket.EndSendFile%2A> блокируется до тех пор, <xref:System.Net.Sockets.Socket> пока не отправит весь файл или не выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1067">When your application calls <xref:System.Net.Sockets.Socket.BeginSendFile%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.Socket.EndSendFile%2A> until the <xref:System.Net.Sockets.Socket> sends the entire file or throws an exception.</span></span> <span data-ttu-id="660fe-1068">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1068">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-1069">Хотя и предназначен для протоколов, ориентированных на подключение, <xref:System.Net.Sockets.Socket.BeginSendFile%2A> также работает для протоколов без подключения при условии, что сначала <xref:System.Net.Sockets.Socket.Connect%2A> вызывается метод или <xref:System.Net.Sockets.Socket.BeginConnect%2A> , чтобы установить удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1069">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSendFile%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="660fe-1070">При использовании протоколов без подключения необходимо также убедиться в том, что размер файла не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-1070">With connectionless protocols, you must also be sure that the size of your file does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-1071">Если это так, датаграмма не отправляется и <xref:System.Net.Sockets.Socket.BeginSendFile%2A> <xref:System.Net.Sockets.SocketException> вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1071">If it does, the datagram is not sent and <xref:System.Net.Sockets.Socket.BeginSendFile%2A> throws a <xref:System.Net.Sockets.SocketException> exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1072">Если вы получаете <xref:System.Net.Sockets.SocketException> исключение, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1072">If you receive a <xref:System.Net.Sockets.SocketException> exception, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1073">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1073">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1074">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1074">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1075">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1075">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1076">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1076">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-1077">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-1077">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1078">Следующий пример кода создает и подключает сокет для асинхронного взаимодействия и начинает асинхронно отправлять файл "Text. txt" на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-1078">The following code example creates and connects a socket for asynchronous communication and begins sending the file "text.txt" asynchronously to the remote host.</span></span> <span data-ttu-id="660fe-1079">В этом примере `preBuffer` создается и объект `postBuffer` для отправки с файлом и используется значение по умолчанию <xref:System.Net.Sockets.TransmitFileOptions> .</span><span class="sxs-lookup"><span data-stu-id="660fe-1079">In this example, a `preBuffer` and a `postBuffer` of data is created to send with the file and the default <xref:System.Net.Sockets.TransmitFileOptions> value is used.</span></span> <span data-ttu-id="660fe-1080">Вызовы <xref:System.Net.Sockets.Socket.EndSendFile%2A> делегата обратного вызова для завершения передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1080">The callback delegate calls <xref:System.Net.Sockets.Socket.EndSendFile%2A> to complete the transmission.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#10)]
 [!code-csharp[NCLSocketEnhancements#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1081">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1081">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1082">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1082">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-1083">См. ниже примeчания к данному разделу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1083">See remarks section below.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1084">Операционной системой не является Windows NT или более поздняя версия.</span><span class="sxs-lookup"><span data-stu-id="660fe-1084">The operating system is not Windows NT or later.</span></span>  
  
<span data-ttu-id="660fe-1085">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-1085">-or-</span></span>
  
 <span data-ttu-id="660fe-1086">Сокет не подключен к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1086">The socket is not connected to a remote host.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="660fe-1087">Файл <paramref name="fileName" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="660fe-1087">The file <paramref name="fileName" /> was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ remoteEP, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socket_flags, System.Net.EndPoint remote_end, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socket_flags, class System.Net.EndPoint remote_end, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, size As Integer, socket_flags As SocketFlags, remote_end As EndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socket_flags, System::Net::EndPoint ^ remote_end, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginSendTo : byte[] * int * int * System.Net.Sockets.SocketFlags * System.Net.EndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSendTo (buffer, offset, size, socket_flags, remote_end, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socket_flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="remote_end" Type="System.Net.EndPoint" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-1088">Массив типа <see cref="T:System.Byte" />, который содержит передаваемые данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-1088">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-1089">Отсчитываемая с нуля позиция в параметре <paramref name="buffer" />, с которой начинается отправка данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1089">The zero-based position in <paramref name="buffer" /> at which to begin sending data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-1090">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1090">The number of bytes to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-1091">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1091">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="socket_flags"><span data-ttu-id="660fe-1092">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1092">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-1093">Объект <see cref="T:System.Net.EndPoint" />, представляющий удаленное устройство.</span><span class="sxs-lookup"><span data-stu-id="660fe-1093">An <see cref="T:System.Net.EndPoint" /> that represents the remote device.</span></span></param>
        <param name="remote_end"><span data-ttu-id="660fe-1094">Объект <see cref="T:System.Net.EndPoint" />, представляющий удаленное устройство.</span><span class="sxs-lookup"><span data-stu-id="660fe-1094">An <see cref="T:System.Net.EndPoint" /> that represents the remote device.</span></span></param>
        <param name="callback"><span data-ttu-id="660fe-1095">Делегат <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1095">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="660fe-1096">Объект, содержащий сведения о состоянии для этого запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1096">An object that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="660fe-1097">Асинхронно передает данные на конкретный удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-1097">Sends data asynchronously to a specific remote host.</span></span></summary>
        <returns><span data-ttu-id="660fe-1098">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную передачу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1098">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1099">Метод запускает асинхронную операцию отправки на удаленный узел, указанный `remoteEP` в параметре. <xref:System.Net.Sockets.Socket.BeginSendTo%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1099">The <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method starts an asynchronous send operation to the remote host specified in the `remoteEP` parameter.</span></span> <span data-ttu-id="660fe-1100"><xref:System.Net.Sockets.Socket.BeginSendTo%2A> Вызов метода дает возможность отправки данных в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1100">Calling the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method gives you the ability to send data within a separate execution thread.</span></span> <span data-ttu-id="660fe-1101">Хотя и предназначен для протоколов без <xref:System.Net.Sockets.Socket.BeginSendTo%2A> подключения, работает с протоколами, ориентированными на подключения и без них.</span><span class="sxs-lookup"><span data-stu-id="660fe-1101">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.BeginSendTo%2A> works with both connectionless and connection-oriented protocols.</span></span>  
  
 <span data-ttu-id="660fe-1102">Можно создать метод обратного вызова, реализующий <xref:System.AsyncCallback> делегат, и передать его имя <xref:System.Net.Sockets.Socket.BeginSendTo%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1102">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method.</span></span> <span data-ttu-id="660fe-1103">Для этого, как минимум, `state` параметр должен содержать подключенное или используемое по умолчанию <xref:System.Net.Sockets.Socket> соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1103">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="660fe-1104">Если для обратного вызова требуются дополнительные сведения, можно создать небольшой класс для хранения <xref:System.Net.Sockets.Socket>и другие необходимые сведения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1104">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket>, and the other required information.</span></span> <span data-ttu-id="660fe-1105">Передайте экземпляр этого класса в <xref:System.Net.Sockets.Socket.BeginSendTo%2A> метод `state` через параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-1105">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="660fe-1106">Метод обратного вызова должен вызывать <xref:System.Net.Sockets.Socket.EndSendTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1106">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSendTo%2A> method.</span></span> <span data-ttu-id="660fe-1107">Когда приложение вызывает <xref:System.Net.Sockets.Socket.BeginSendTo%2A>, система будет использовать отдельный поток для выполнения указанного метода обратного вызова и будет <xref:System.Net.Sockets.Socket.EndSendTo%2A> блокироваться до тех пор, пока <xref:System.Net.Sockets.Socket> не отправит запрошенное число байтов или не выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1107">When your application calls <xref:System.Net.Sockets.Socket.BeginSendTo%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSendTo%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="660fe-1108">Если вы хотите, чтобы исходный поток блокировался после вызова <xref:System.Net.Sockets.Socket.BeginSendTo%2A> метода, <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1108">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="660fe-1109">Вызовите метод Set для Т:систем.среадинг.мануалресетевент в методе обратного вызова, если нужно, чтобы исходный поток продолжал выполнение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1109">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="660fe-1110">Дополнительные сведения о написании методов обратного вызова см. в разделе [маршалирование делегата в качестве метода обратного вызова](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1110">For additional information about writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="660fe-1111">При использовании <xref:System.Net.Sockets.Socket.Connect%2A>протокола, ориентированного на соединение, необходимо сначала вызвать метод, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>или <xref:System.Net.Sockets.Socket.BeginAccept%2A> , или <xref:System.Net.Sockets.Socket.BeginSendTo%2A> будет вызывать исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1111">If you are using a connection-oriented protocol, you must first call the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, or <xref:System.Net.Sockets.Socket.BeginSendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-1112"><xref:System.Net.Sockets.Socket.BeginSendTo%2A>будет игнорировать `remoteEP` параметр и отправить данные в объект <xref:System.Net.EndPoint> <xref:System.Net.Sockets.Socket.Connect%2A>, установленный в методе <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A> или.</span><span class="sxs-lookup"><span data-stu-id="660fe-1112"><xref:System.Net.Sockets.Socket.BeginSendTo%2A> will ignore the `remoteEP` parameter and send data to the <xref:System.Net.EndPoint> established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1113">Если используется протокол без установления соединения, не нужно устанавливать удаленный узел по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A> методом или <xref:System.Net.Sockets.Socket.BeginConnect%2A> перед вызовом <xref:System.Net.Sockets.Socket.SendTo%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1113">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="660fe-1114">Это необходимо сделать только в том случае, если предполагается вызывать <xref:System.Net.Sockets.Socket.BeginSend%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1114">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="660fe-1115">При вызове <xref:System.Net.Sockets.Socket.Connect%2A> метода или <xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.Sockets.Socket.SendTo%2A>перед вызовом параметр переопределит указанный удаленный узел по умолчанию только для этой операции отправки. `remoteEP`</span><span class="sxs-lookup"><span data-stu-id="660fe-1115">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="660fe-1116">Также не требуется вызывать <xref:System.Net.Sockets.Socket.Bind%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1116">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="660fe-1117">В этом случае базовый поставщик услуг будет назначать наиболее подходящий адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1117">In this case, the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="660fe-1118">Если необходимо, чтобы базовый поставщик услуг выберет свободный порт, используйте нуль-порт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1118">Use a port number of zero if you want the underlying service provider to select a free port.</span></span> <span data-ttu-id="660fe-1119">Если необходимо указать назначенный локальный сетевой адрес и номер порта, можно использовать <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> свойство <xref:System.Net.Sockets.Socket.EndSendTo%2A> после успешного завершения метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1119">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.EndSendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="660fe-1120">Если вы хотите отправить данные на широковещательный адрес, необходимо сначала вызвать <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метод и установить параметр сокета в <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1120">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-1121">— Необходимо также убедиться, что размер буфера не превышает максимальный размер пакета поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-1121">-You must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-1122">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.EndSendTo%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1122">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.EndSendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-1123">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketflags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-1123">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1124">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1124">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1125">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1125">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1126">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1126">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1127">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1127">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1128">Контекст выполнения (контекст безопасности, олицетворенный пользователь и вызывающий контекст) кэшируется для асинхронных <xref:System.Net.Sockets.Socket> методов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1128">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="660fe-1129">После первого использования определенного контекста (определенного асинхронного <xref:System.Net.Sockets.Socket> метода, конкретного <xref:System.Net.Sockets.Socket> экземпляра и конкретного обратного вызова) при последующих применениях этого контекста будет отображаться улучшение производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-1129">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1130">В следующем примере кода асинхронно отправляются данные на указанный удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-1130">The following code example asynchronously sends data to the specified remote host.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#3)]
 [!code-csharp[Socket_Async_Send_Receive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#3)]
 [!code-vb[Socket_Async_Send_Receive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1131">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1131"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-1132">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-1132">-or-</span></span> 
 <span data-ttu-id="660fe-1133"><paramref name="remoteEP" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1133"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1134">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1134">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-1135">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-1135"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-1136">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-1136">-or-</span></span> 
 <span data-ttu-id="660fe-1137">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1137"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-1138">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-1138">-or-</span></span> 
 <span data-ttu-id="660fe-1139">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-1139"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-1140">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-1140">-or-</span></span> 
 <span data-ttu-id="660fe-1141">Значение<paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" /> .</span><span class="sxs-lookup"><span data-stu-id="660fe-1141"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1142"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1142">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-1143">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1143">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md"><span data-ttu-id="660fe-1144">Маршалинг делегата как метода обратного вызова</span><span class="sxs-lookup"><span data-stu-id="660fe-1144">Marshaling a Delegate as a Callback Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Net.EndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Net.EndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind (localEP As EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Net::EndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="member this.Bind : System.Net.EndPoint -&gt; unit" Usage="socket.Bind localEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.EndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="660fe-1145">Локальный объект <see cref="T:System.Net.EndPoint" />, который необходимо связать с объектом <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1145">The local <see cref="T:System.Net.EndPoint" /> to associate with the <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="660fe-1146">Связывает объект <see cref="T:System.Net.Sockets.Socket" /> с локальной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1146">Associates a <see cref="T:System.Net.Sockets.Socket" /> with a local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1147">Используйте метод <xref:System.Net.Sockets.Socket.Bind%2A> , если необходимо использовать определенную локальную конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-1147">Use the <xref:System.Net.Sockets.Socket.Bind%2A> method if you need to use a specific local endpoint.</span></span> <span data-ttu-id="660fe-1148"><xref:System.Net.Sockets.Socket.Bind%2A> Перед <xref:System.Net.Sockets.Socket.Listen%2A>  вызовом метода необходимо вызвать метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1148">You must call <xref:System.Net.Sockets.Socket.Bind%2A> before you can call the <xref:System.Net.Sockets.Socket.Listen%2A> method.</span></span> <span data-ttu-id="660fe-1149">Не нужно вызывать <xref:System.Net.Sockets.Socket.Bind%2A> <xref:System.Net.Sockets.Socket.Connect%2A> метод перед использованием метода, если не требуется использовать определенную локальную конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-1149">You do not need to call <xref:System.Net.Sockets.Socket.Bind%2A> before using the <xref:System.Net.Sockets.Socket.Connect%2A> method unless you need to use a specific local endpoint.</span></span> <span data-ttu-id="660fe-1150">Вы можете использовать <xref:System.Net.Sockets.Socket.Bind%2A> метод как для протокола, так и для протоколов, ориентированных на подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1150">You can use the <xref:System.Net.Sockets.Socket.Bind%2A> method on both connectionless and connection-oriented protocols.</span></span>  
  
 <span data-ttu-id="660fe-1151">Перед вызовом <xref:System.Net.Sockets.Socket.Bind%2A>необходимо сначала создать локаль <xref:System.Net.IPEndPoint> , из которого планируется передавать данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-1151">Before calling <xref:System.Net.Sockets.Socket.Bind%2A>, you must first create the local <xref:System.Net.IPEndPoint> from which you intend to communicate data.</span></span> <span data-ttu-id="660fe-1152">Если вы не хотите, чтобы локальный адрес был назначен, можно создать <xref:System.Net.IPEndPoint> с помощью <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> в качестве параметра Address, и базовый поставщик услуг присвоит наиболее подходящий сетевой адрес.</span><span class="sxs-lookup"><span data-stu-id="660fe-1152">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="660fe-1153">Это может помочь упростить приложение при наличии нескольких сетевых интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="660fe-1154">Если вы не хотите использовать локальный порт, можно создать <xref:System.Net.IPEndPoint> с помощью значения 0 для номера порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1154">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="660fe-1155">В этом случае поставщик услуг присвоит доступному номеру порта от 1024 до 5000.</span><span class="sxs-lookup"><span data-stu-id="660fe-1155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span>  
  
 <span data-ttu-id="660fe-1156">При использовании описанного выше подхода можно определить, какой локальный сетевой адрес и номер порта были назначены путем вызова <xref:System.Net.Sockets.Socket.LocalEndPoint%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1156">If you use the above approach, you can discover what local network address and port number has been assigned by calling the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A>.</span></span> <span data-ttu-id="660fe-1157">При использовании протокола, ориентированного на соединение, <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> не возвращает локально назначенный сетевой адрес до тех пор, пока не будет выполнен вызов <xref:System.Net.Sockets.Socket.Connect%2A> метода или <xref:System.Net.Sockets.Socket.EndConnect%2A> .</span><span class="sxs-lookup"><span data-stu-id="660fe-1157">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> will not return the locally assigned network address until after you have made a call to the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="660fe-1158">Если используется протокол без подключения, вы не сможете получить доступ к этим данным, пока не завершите отправку или получение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1158">If you are using a connectionless protocol, you will not have access to this information until you have completed a send or receive.</span></span>  
  
 <span data-ttu-id="660fe-1159">Если сокету UDP требуется получать сведения о интерфейсе для полученных пакетов, <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метод следует вызывать явным образом с параметром Socket, <xref:System.Net.Sockets.SocketOptionName.PacketInformation> установленным сразу после вызова <xref:System.Net.Sockets.Socket.Bind%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1159">If a UDP socket wants to receive interface information on received packets,  the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method should be explicitly called with the socket option set to <xref:System.Net.Sockets.SocketOptionName.PacketInformation> immediately after calling the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1160">Если предполагается получение датаграмм многоадресной рассылки, необходимо вызвать <xref:System.Net.Sockets.Socket.Bind%2A> метод с номером многоадресного порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1160">If you intend to receive multicast datagrams, you must call the <xref:System.Net.Sockets.Socket.Bind%2A> method with a multicast port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1161">Необходимо вызвать метод, <xref:System.Net.Sockets.Socket.Bind%2A> если предполагается получение датаграмм без подключения <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1161">You must call the <xref:System.Net.Sockets.Socket.Bind%2A> method if you intend to receive connectionless datagrams using the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1162">При получении сообщения <xref:System.Net.Sockets.SocketException> при <xref:System.Net.Sockets.Socket.Bind%2A> вызове метода используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1162">If you receive a <xref:System.Net.Sockets.SocketException> when calling the <xref:System.Net.Sockets.Socket.Bind%2A> method, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1163">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1163">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1164">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1164">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1165">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1165">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1166">В следующем примере кода выполняется привязка <xref:System.Net.Sockets.Socket> с использованием указанной локальной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1166">The following code example binds a <xref:System.Net.Sockets.Socket> using the specified local endpoint.</span></span>  
  
 [!code-cpp[Classic Socket.Bind Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Bind Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Bind Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Bind Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Bind Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Bind Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1167">Свойство <paramref name="localEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1167"><paramref name="localEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1168">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1168">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1169"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1169">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-1170">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1170">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-1171">для приема соединений с узла, определенного параметром <paramref name="localEP" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1171">for accepting connections from the host defined by <paramref name="localEP" />.</span></span> <span data-ttu-id="660fe-1172">Связанное перечисление:<see cref="F:System.Net.NetworkAccess.Accept" /></span><span class="sxs-lookup"><span data-stu-id="660fe-1172">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" /></span></span></permission>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Blocking">
      <MemberSignature Language="C#" Value="public bool Blocking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Blocking" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Blocking" />
      <MemberSignature Language="VB.NET" Value="Public Property Blocking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Blocking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Blocking : bool with get, set" Usage="System.Net.Sockets.Socket.Blocking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-1173">Возвращает или задает значение, определяющее, находится ли объект <see cref="T:System.Net.Sockets.Socket" /> в заблокированном режиме.</span><span class="sxs-lookup"><span data-stu-id="660fe-1173">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.Socket" /> is in blocking mode.</span></span></summary>
        <value><span data-ttu-id="660fe-1174">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.Socket" /> будет заблокирован; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1174"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> will block; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="660fe-1175">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1175">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1176">Свойство указывает, находится ли <xref:System.Net.Sockets.Socket> объект в блокирующем режиме. <xref:System.Net.Sockets.Socket.Blocking%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1176">The <xref:System.Net.Sockets.Socket.Blocking%2A> property indicates whether a <xref:System.Net.Sockets.Socket> is in blocking mode.</span></span>  
  
 <span data-ttu-id="660fe-1177">Если вы используете режим блокировки и вы выполняете вызов метода, который не завершается немедленно, приложение будет блокировать выполнение до тех пор, пока не завершится запрошенная операция.</span><span class="sxs-lookup"><span data-stu-id="660fe-1177">If you are in blocking mode, and you make a method call which does not complete immediately, your application will block execution until the requested operation completes.</span></span> <span data-ttu-id="660fe-1178">Если необходимо продолжить выполнение, даже если запрошенная операция не завершена, измените <xref:System.Net.Sockets.Socket.Blocking%2A> свойство на. `false`</span><span class="sxs-lookup"><span data-stu-id="660fe-1178">If you want execution to continue even though the requested operation is not complete, change the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false`.</span></span> <span data-ttu-id="660fe-1179"><xref:System.Net.Sockets.Socket.Blocking%2A> Свойство не влияет на асинхронные методы.</span><span class="sxs-lookup"><span data-stu-id="660fe-1179">The <xref:System.Net.Sockets.Socket.Blocking%2A> property has no effect on asynchronous methods.</span></span> <span data-ttu-id="660fe-1180">Если вы отправляете и получаете данные асинхронно и хотите блокировать выполнение, используйте <xref:System.Threading.ManualResetEvent> класс.</span><span class="sxs-lookup"><span data-stu-id="660fe-1180">If you are sending and receiving data asynchronously and want to block execution, use the <xref:System.Threading.ManualResetEvent> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1181">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1181">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1182">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1182">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1183">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1183">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1184">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1184">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1185">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1185">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1186"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1186">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CancelConnectAsync">
      <MemberSignature Language="C#" Value="public static void CancelConnectAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelConnectAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CancelConnectAsync (e As SocketAsyncEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CancelConnectAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="static member CancelConnectAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; unit" Usage="System.Net.Sockets.Socket.CancelConnectAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-1187">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />, используемый для запроса соединения с удаленным узлом путем вызова одного из методов <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1187">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object used to request the connection to the remote host by calling one of the <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" /> methods.</span></span></param>
        <summary><span data-ttu-id="660fe-1188">Отменяет выполнение асинхронного запроса для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1188">Cancels an asynchronous request for a remote host connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1189"><xref:System.Net.Sockets.Socket.CancelConnectAsync%2A> Метод отменяет асинхронный запрос для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1189">The <xref:System.Net.Sockets.Socket.CancelConnectAsync%2A> method cancels an asynchronous request for a remote host connection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1190">Параметр <paramref name="e" /> и <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> не могут иметь значение NULL.</span><span class="sxs-lookup"><span data-stu-id="660fe-1190">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1191">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1191">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1192"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1192">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-1193">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1193">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-1194">Закрывает подключение <see cref="T:System.Net.Sockets.Socket" /> и освобождает все связанные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="660fe-1194">Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="socket.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="660fe-1195">Закрывает подключение <see cref="T:System.Net.Sockets.Socket" /> и освобождает все связанные ресурсы.</span><span class="sxs-lookup"><span data-stu-id="660fe-1195">Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1196">Метод закрывает подключение к удаленному узлу и освобождает все управляемые и неуправляемые ресурсы, <xref:System.Net.Sockets.Socket>связанные с. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1196">The <xref:System.Net.Sockets.Socket.Close%2A> method closes the remote host connection and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1197">После закрытия <xref:System.Net.Sockets.Socket.Connected%2A> свойству присваивается `false`значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1197">Upon closing, the <xref:System.Net.Sockets.Socket.Connected%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="660fe-1198">Для протоколов, ориентированных на соединение, рекомендуется вызывать <xref:System.Net.Sockets.Socket.Shutdown%2A> <xref:System.Net.Sockets.Socket.Close%2A> метод перед вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1198">For connection-oriented protocols, it is recommended that you call <xref:System.Net.Sockets.Socket.Shutdown%2A> before calling the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="660fe-1199">Это гарантирует, что все данные отправляются и получаются на подключенном сокете до его закрытия.</span><span class="sxs-lookup"><span data-stu-id="660fe-1199">This ensures that all data is sent and received on the connected socket before it is closed.</span></span>  
  
 <span data-ttu-id="660fe-1200"><xref:System.Net.Sockets.Socket.Close%2A> Если необходимо вызвать без первого вызова <xref:System.Net.Sockets.SocketOptionName.DontLinger> <xref:System.Net.Sockets.Socket.Shutdown%2A>, можно убедиться, что данные, поставленные в очередь для исходящей передачи, будут отправлены, задав `false` <xref:System.Net.Sockets.Socket> для параметра значение и указав интервал времени ожидания, отличный от нуля.</span><span class="sxs-lookup"><span data-stu-id="660fe-1200">If you need to call <xref:System.Net.Sockets.Socket.Close%2A> without first calling <xref:System.Net.Sockets.Socket.Shutdown%2A>, you can ensure that data queued for outgoing transmission will be sent by setting the <xref:System.Net.Sockets.SocketOptionName.DontLinger><xref:System.Net.Sockets.Socket> option to `false` and specifying a non-zero time-out interval.</span></span> <span data-ttu-id="660fe-1201"><xref:System.Net.Sockets.Socket.Close%2A>будет блокироваться до тех пор, пока эти данные не будут отправлены или пока не истечет указанное время ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-1201"><xref:System.Net.Sockets.Socket.Close%2A> will then block until this data is sent or until the specified time-out expires.</span></span> <span data-ttu-id="660fe-1202">Если задано <xref:System.Net.Sockets.SocketOptionName.DontLinger> значение `false` и задан нулевой интервал времени ожидания, <xref:System.Net.Sockets.Socket.Close%2A> освобождает соединение и автоматически удаляет исходящие данные из очереди.</span><span class="sxs-lookup"><span data-stu-id="660fe-1202">If you set <xref:System.Net.Sockets.SocketOptionName.DontLinger> to `false` and specify a zero time-out interval, <xref:System.Net.Sockets.Socket.Close%2A> releases the connection and automatically discards outgoing queued data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1203"><xref:System.Net.Sockets.SocketOptionName.DontLinger> Чтобы присвоить `false`параметру сокета значение <xref:System.Net.Sockets.LingerOption>, создайте, задайте для `true`свойства Enabled значение, а <xref:System.Net.Sockets.LingerOption.LingerTime%2A> для свойства — требуемый период времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-1203">To set the <xref:System.Net.Sockets.SocketOptionName.DontLinger> socket option to `false`, create a <xref:System.Net.Sockets.LingerOption>, set the enabled property to `true`, and set the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property to the desired time out period.</span></span> <span data-ttu-id="660fe-1204">Используйте его <xref:System.Net.Sockets.LingerOption> вместе <xref:System.Net.Sockets.SocketOptionName.DontLinger> с параметром <xref:System.Net.Sockets.Socket.SetSocketOption%2A> Socket для вызова метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1204">Use this <xref:System.Net.Sockets.LingerOption> along with the <xref:System.Net.Sockets.SocketOptionName.DontLinger> socket option to call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1205">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1205">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1206">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1206">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1207">В следующем примере кода закрывается <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1207">The following code example closes a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic Socket.Close Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Close Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.DontLinger" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="member this.Close : int -&gt; unit" Usage="socket.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="660fe-1208">Процесс ожидает указанное число секунд <paramref name="timeout" />, прежде чем отправить оставшиеся данные, а затем закрывает сокет.</span><span class="sxs-lookup"><span data-stu-id="660fe-1208">Wait up to <paramref name="timeout" /> seconds to send any remaining data, then close the socket.</span></span></param>
        <summary><span data-ttu-id="660fe-1209">Закрывает подключение <see cref="T:System.Net.Sockets.Socket" /> и освобождает все связанные ресурсы с заданным временем ожидания, чтобы разрешить отправку данных в очереди.</span><span class="sxs-lookup"><span data-stu-id="660fe-1209">Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources with a specified timeout to allow queued data to be sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1210">Метод закрывает подключение к удаленному узлу и освобождает все управляемые и неуправляемые ресурсы, <xref:System.Net.Sockets.Socket>связанные с. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1210">The <xref:System.Net.Sockets.Socket.Close%2A> method closes the remote host connection and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1211">После закрытия <xref:System.Net.Sockets.Socket.Connected%2A> свойству присваивается `false`значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1211">Upon closing, the <xref:System.Net.Sockets.Socket.Connected%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="660fe-1212">Для протоколов, ориентированных на соединение, рекомендуется вызывать метод <xref:System.Net.Sockets.Socket.Shutdown%2A> перед вызовом метода. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1212">For connection-oriented protocols, it is recommended that you call <xref:System.Net.Sockets.Socket.Shutdown%2A> before calling <xref:System.Net.Sockets.Socket.Close%2A>.</span></span> <span data-ttu-id="660fe-1213">Это гарантирует, что все данные отправляются и получаются на подключенном сокете до его закрытия.</span><span class="sxs-lookup"><span data-stu-id="660fe-1213">This ensures that all data is sent and received on the connected socket before it is closed.</span></span>  
  
 <span data-ttu-id="660fe-1214">Если необходимо вызвать <xref:System.Net.Sockets.Socket.Close%2A> без первого вызова <xref:System.Net.Sockets.Socket.Shutdown%2A>, можно убедиться, что данные, поставленные в очередь для исходящей передачи, будут отправлены <xref:System.Net.Sockets.SocketOptionName.DontLinger> , задав `false` для параметра значение и указав интервал времени ожидания, отличный от нуля.</span><span class="sxs-lookup"><span data-stu-id="660fe-1214">If you need to call <xref:System.Net.Sockets.Socket.Close%2A> without first calling <xref:System.Net.Sockets.Socket.Shutdown%2A>, you can ensure that data queued for outgoing transmission will be sent by setting the <xref:System.Net.Sockets.SocketOptionName.DontLinger> option to `false` and specifying a non-zero time-out interval.</span></span> <span data-ttu-id="660fe-1215"><xref:System.Net.Sockets.Socket.Close%2A>будет блокироваться до тех пор, пока эти данные не будут отправлены или пока не истечет указанное время ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-1215"><xref:System.Net.Sockets.Socket.Close%2A> will then block until this data is sent or until the specified time-out expires.</span></span> <span data-ttu-id="660fe-1216">Если задано <xref:System.Net.Sockets.SocketOptionName.DontLinger> значение `false` и задан нулевой интервал времени ожидания, <xref:System.Net.Sockets.Socket.Close%2A> освобождает соединение и автоматически удаляет исходящие данные из очереди.</span><span class="sxs-lookup"><span data-stu-id="660fe-1216">If you set <xref:System.Net.Sockets.SocketOptionName.DontLinger> to `false` and specify a zero time-out interval, <xref:System.Net.Sockets.Socket.Close%2A> releases the connection and automatically discards outgoing queued data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1217"><xref:System.Net.Sockets.SocketOptionName.DontLinger> Чтобы присвоить `false`параметру сокета значение <xref:System.Net.Sockets.LingerOption>, создайте, задайте для `true`свойства Enabled значение и задайте <xref:System.Net.Sockets.LingerOption.LingerTime%2A> для свойства требуемый период ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-1217">To set the <xref:System.Net.Sockets.SocketOptionName.DontLinger> socket option to `false`, create a <xref:System.Net.Sockets.LingerOption>, set the enabled property to `true`, and set the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property to the desired time-out period.</span></span> <span data-ttu-id="660fe-1218">Используйте его <xref:System.Net.Sockets.LingerOption> вместе <xref:System.Net.Sockets.SocketOptionName.DontLinger> с параметром <xref:System.Net.Sockets.Socket.SetSocketOption%2A> Socket для вызова метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1218">Use this <xref:System.Net.Sockets.LingerOption> along with the <xref:System.Net.Sockets.SocketOptionName.DontLinger> socket option to call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1219">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1219">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1220">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1220">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1221">В следующем примере кода показано, как закрыть <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1221">The following code example demonstrates how to close a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic Socket.Close Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Close Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.DontLinger" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-1222">Устанавливает подключение к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1222">Establishes a connection to a remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.EndPoint -&gt; unit" Usage="socket.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="remoteEP"><span data-ttu-id="660fe-1223">Объект <see cref="T:System.Net.EndPoint" />, представляющий удаленное устройство.</span><span class="sxs-lookup"><span data-stu-id="660fe-1223">An <see cref="T:System.Net.EndPoint" /> that represents the remote device.</span></span></param>
        <summary><span data-ttu-id="660fe-1224">Устанавливает подключение к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1224">Establishes a connection to a remote host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1225">Если используется протокол, ориентированный на подключение, например TCP, <xref:System.Net.Sockets.Socket.Connect%2A> метод синхронно устанавливает сетевое подключение между <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> и указанной удаленной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1225">If you are using a connection-oriented protocol such as TCP, the <xref:System.Net.Sockets.Socket.Connect%2A> method synchronously establishes a network connection between <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> and the specified remote endpoint.</span></span> <span data-ttu-id="660fe-1226">Если используется протокол без подключения, <xref:System.Net.Sockets.Socket.Connect%2A> устанавливает удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1226">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.Connect%2A> establishes a default remote host.</span></span> <span data-ttu-id="660fe-1227">После вызова <xref:System.Net.Sockets.Socket.Connect%2A>можно отправить данные на удаленное устройство <xref:System.Net.Sockets.Socket.Send%2A> с помощью метода или получить данные с удаленного устройства с помощью <xref:System.Net.Sockets.Socket.Receive%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1227">After you call <xref:System.Net.Sockets.Socket.Connect%2A>, you can send data to the remote device with the <xref:System.Net.Sockets.Socket.Send%2A> method, or receive data from the remote device with the <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1228">Если используется протокол без установления соединения, например UDP, нет необходимости вызывать метод <xref:System.Net.Sockets.Socket.Connect%2A> перед отправкой и получением данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1228">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.Connect%2A> before sending and receiving data.</span></span> <span data-ttu-id="660fe-1229">Для синхронной <xref:System.Net.Sockets.Socket.SendTo%2A> связи <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> с удаленным узлом можно использовать и.</span><span class="sxs-lookup"><span data-stu-id="660fe-1229">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> and <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> to synchronously communicate with a remote host.</span></span> <span data-ttu-id="660fe-1230">При вызове <xref:System.Net.Sockets.Socket.Connect%2A>все датаграммы, поступающие с адреса, отличного от указанного по умолчанию, будут удалены.</span><span class="sxs-lookup"><span data-stu-id="660fe-1230">If you do call <xref:System.Net.Sockets.Socket.Connect%2A>, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="660fe-1231">Если вы хотите задать для <xref:System.Net.Sockets.Socket.SetSocketOption%2A> удаленного узла по умолчанию широковещательный адрес, необходимо сначала вызвать метод и установить параметр сокета в <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>значение <xref:System.Net.Sockets.SocketException>, или <xref:System.Net.Sockets.Socket.Connect%2A> будет вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1231">If you want to set your default remote host to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-1232">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1232">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1233">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1233">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="660fe-1234">Метод блокируется, если только вы не <xref:System.Net.Sockets.Socket.Blocking%2A> установили для `false` свойства значение до вызова  <xref:System.Net.Sockets.Socket.Connect%2A> .  <xref:System.Net.Sockets.Socket.Connect%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1234">The <xref:System.Net.Sockets.Socket.Connect%2A> method will block, unless you specifically set the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false` prior to calling <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-1235">Если вы используете протокол, ориентированный на подключение, например TCP, и отключите блокировку, <xref:System.Net.Sockets.Socket.Connect%2A> вызовет <xref:System.Net.Sockets.SocketException> исключение, так как ему требуется время для подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1235">If you are using a connection-oriented protocol like TCP and you do disable blocking, <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException> because it needs time to make the connection.</span></span> <span data-ttu-id="660fe-1236">Протоколы без подключения не вызовут исключение, так как они просто устанавливают удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1236">Connectionless protocols will not throw an exception because they simply establish a default remote host.</span></span> <span data-ttu-id="660fe-1237">Для получения конкретного <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> кода ошибки можно использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-1237">You can use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1238">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1238">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="660fe-1239">Если ошибка вернула всаеваулдблокк, соединение с удаленным узлом было инициировано с помощью подключения <xref:System.Net.Sockets.Socket>, но еще не завершилось успешно.</span><span class="sxs-lookup"><span data-stu-id="660fe-1239">If the error returned WSAEWOULDBLOCK, the remote host connection has been initiated by a connection-oriented <xref:System.Net.Sockets.Socket>, but has not yet completed successfully.</span></span> <span data-ttu-id="660fe-1240">Используйте метод, чтобы определить, <xref:System.Net.Sockets.Socket> когда завершается соединение. <xref:System.Net.Sockets.Socket.Poll%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1240">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method to determine when the <xref:System.Net.Sockets.Socket> is finished connecting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1241">Если вы используете протокол, ориентированный на подключение, и не выполнили <xref:System.Net.Sockets.Socket.Bind%2A> вызов <xref:System.Net.Sockets.Socket.Connect%2A>до вызова, базовый поставщик услуг присвоит адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1241">If you are using a connection-oriented protocol and did not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.Connect%2A>, the underlying service provider will assign the local network address and port number.</span></span> <span data-ttu-id="660fe-1242">Если используется протокол без подключения, поставщик услуг не будет назначать локальный сетевой адрес и номер порта, пока не завершится операция отправки или получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1242">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you complete a send or receive operation.</span></span> <span data-ttu-id="660fe-1243">Если вы хотите изменить удаленный узел по умолчанию, вызовите <xref:System.Net.Sockets.Socket.Connect%2A> его еще раз с нужной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1243">If you want to change the default remote host, call <xref:System.Net.Sockets.Socket.Connect%2A> again with the desired endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1244">Если сокет был ранее отключен, использовать этот метод для восстановления соединения нельзя.</span><span class="sxs-lookup"><span data-stu-id="660fe-1244">If the socket has been previously disconnected, then you cannot use this method to restore the connection.</span></span> <span data-ttu-id="660fe-1245">Используйте один из асинхронных <xref:System.Net.Sockets.Socket.BeginConnect%2A> методов для повторного подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1245">Use one of the asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> methods to reconnect.</span></span> <span data-ttu-id="660fe-1246">Это ограничение базового поставщика.</span><span class="sxs-lookup"><span data-stu-id="660fe-1246">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1247">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1247">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1248">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1248">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1249">Следующий пример кода подключается к удаленной конечной точке, а затем проверяет подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1249">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[Classic Socket.Connect Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Connect Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Connect Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Connect Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Connect Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Connect Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1250"><paramref name="remoteEP" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1250"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1251">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1251">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1252"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1252">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-1253">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1253">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1254">Сокет <see cref="T:System.Net.Sockets.Socket" /> был переведен в состояние прослушивания путем вызова <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1254">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-1255">для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1255">for connecting to the remote host.</span></span> <span data-ttu-id="660fe-1256">Связанное перечисление:<see cref="F:System.Net.NetworkAccess.Connect" /></span><span class="sxs-lookup"><span data-stu-id="660fe-1256">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.Blocking" />
        <altmember cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="socket.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="660fe-1257">IP-адрес удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1257">The IP address of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="660fe-1258">Номер порта удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1258">The port number of the remote host.</span></span></param>
        <summary><span data-ttu-id="660fe-1259">Создает подключение к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1259">Establishes a connection to a remote host.</span></span> <span data-ttu-id="660fe-1260">Узел задается IP-адресом и номером порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1260">The host is specified by an IP address and a port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1261">Если используется протокол, ориентированный на подключение, например TCP, <xref:System.Net.Sockets.Socket.Connect%2A> метод синхронно устанавливает сетевое подключение между <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> и указанной удаленной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1261">If you are using a connection-oriented protocol such as TCP, the <xref:System.Net.Sockets.Socket.Connect%2A> method synchronously establishes a network connection between <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> and the specified remote endpoint.</span></span> <span data-ttu-id="660fe-1262">Если используется протокол без подключения, <xref:System.Net.Sockets.Socket.Connect%2A> устанавливает удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1262">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.Connect%2A> establishes a default remote host.</span></span> <span data-ttu-id="660fe-1263">После вызова <xref:System.Net.Sockets.Socket.Connect%2A> можно отправить данные на удаленное устройство <xref:System.Net.Sockets.Socket.Send%2A> с помощью метода или получить данные с удаленного устройства с помощью <xref:System.Net.Sockets.Socket.Receive%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1263">After you call <xref:System.Net.Sockets.Socket.Connect%2A> you can send data to the remote device with the <xref:System.Net.Sockets.Socket.Send%2A> method, or receive data from the remote device with the <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1264">Если используется протокол без установления соединения, например UDP, нет необходимости вызывать метод <xref:System.Net.Sockets.Socket.Connect%2A> перед отправкой и получением данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1264">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.Connect%2A> before sending and receiving data.</span></span> <span data-ttu-id="660fe-1265">Для синхронной <xref:System.Net.Sockets.Socket.SendTo%2A> связи <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> с удаленным узлом можно использовать и.</span><span class="sxs-lookup"><span data-stu-id="660fe-1265">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> and <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> to synchronously communicate with a remote host.</span></span> <span data-ttu-id="660fe-1266">При вызове <xref:System.Net.Sockets.Socket.Connect%2A> всех датаграмм, поступивших из адреса, отличного от указанного по умолчанию, будут удалены.</span><span class="sxs-lookup"><span data-stu-id="660fe-1266">If you do call <xref:System.Net.Sockets.Socket.Connect%2A> any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="660fe-1267">Если вы хотите задать для <xref:System.Net.Sockets.Socket.SetSocketOption%2A> удаленного узла по умолчанию широковещательный адрес, необходимо сначала вызвать метод и установить параметр сокета в <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>значение <xref:System.Net.Sockets.SocketException>, или <xref:System.Net.Sockets.Socket.Connect%2A> будет вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1267">If you want to set your default remote host to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-1268">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1268">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1269">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1269">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="660fe-1270"><xref:System.Net.Sockets.Socket.Connect%2A>метод будет заблокирован, если только вы не установили <xref:System.Net.Sockets.Socket.Blocking%2A> для `false` свойства значение до вызова. <xref:System.Net.Sockets.Socket.Connect%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1270"><xref:System.Net.Sockets.Socket.Connect%2A> method will block, unless you specifically set the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false` prior to calling <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-1271">Если вы используете протокол, ориентированный на подключение, например TCP, и отключите блокировку, <xref:System.Net.Sockets.Socket.Connect%2A> вызовет <xref:System.Net.Sockets.SocketException> исключение, так как ему требуется время для подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1271">If you are using a connection-oriented protocol like TCP and you do disable blocking, <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException> because it needs time to make the connection.</span></span> <span data-ttu-id="660fe-1272">Протоколы без подключения не вызовут исключение, так как они просто устанавливают удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1272">Connectionless protocols will not throw an exception because they simply establish a default remote host.</span></span> <span data-ttu-id="660fe-1273">Для получения конкретного <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> кода ошибки можно использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-1273">You can use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1274">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1274">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="660fe-1275">Если ошибка вернула всаеваулдблокк, соединение с удаленным узлом было инициировано с помощью подключения <xref:System.Net.Sockets.Socket>, но еще не завершилось успешно.</span><span class="sxs-lookup"><span data-stu-id="660fe-1275">If the error returned WSAEWOULDBLOCK, the remote host connection has been initiated by a connection-oriented <xref:System.Net.Sockets.Socket>, but has not yet completed successfully.</span></span> <span data-ttu-id="660fe-1276">Используйте метод, чтобы определить, <xref:System.Net.Sockets.Socket> когда завершается соединение. <xref:System.Net.Sockets.Socket.Poll%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1276">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method to determine when the <xref:System.Net.Sockets.Socket> is finished connecting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1277">Если вы используете протокол, ориентированный на подключение, и не выполнили <xref:System.Net.Sockets.Socket.Bind%2A> вызов <xref:System.Net.Sockets.Socket.Connect%2A>до вызова, базовый поставщик услуг присвоит адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1277">If you are using a connection-oriented protocol and did not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.Connect%2A>, the underlying service provider will assign the local network address and port number.</span></span> <span data-ttu-id="660fe-1278">Если используется протокол без подключения, поставщик услуг не будет назначать локальный сетевой адрес и номер порта, пока не завершится операция отправки или получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1278">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you complete a send or receive operation.</span></span> <span data-ttu-id="660fe-1279">Если вы хотите изменить удаленный узел по умолчанию, вызовите <xref:System.Net.Sockets.Socket.Connect%2A> его еще раз с нужной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1279">If you want to change the default remote host, call <xref:System.Net.Sockets.Socket.Connect%2A> again with the desired endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1280">Если сокет был ранее отключен, использовать этот метод для восстановления соединения нельзя.</span><span class="sxs-lookup"><span data-stu-id="660fe-1280">If the socket has been previously disconnected, then you cannot use this method to restore the connection.</span></span> <span data-ttu-id="660fe-1281">Используйте один из асинхронных <xref:System.Net.Sockets.Socket.BeginConnect%2A> методов для повторного подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1281">Use one of the asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> methods to reconnect.</span></span> <span data-ttu-id="660fe-1282">Это ограничение базового поставщика.</span><span class="sxs-lookup"><span data-stu-id="660fe-1282">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1283">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1283">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1284">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1284">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1285">Следующий пример кода подключается к удаленной конечной точке, а затем проверяет подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1285">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#4)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1286">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1286"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-1287">Номер порта недействителен.</span><span class="sxs-lookup"><span data-stu-id="660fe-1287">The port number is not valid.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1288">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1288">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1289"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1289">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1290">Этот метод применим для сокетов в семействах <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1290">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1291">Длина параметра <paramref name="address" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="660fe-1291">The length of <paramref name="address" /> is zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1292">Сокет <see cref="T:System.Net.Sockets.Socket" /> был переведен в состояние прослушивания путем вызова <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1292">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="socket.Connect (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="addresses"><span data-ttu-id="660fe-1293">IP-адрес удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1293">The IP addresses of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="660fe-1294">Номер порта удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1294">The port number of the remote host.</span></span></param>
        <summary><span data-ttu-id="660fe-1295">Устанавливает подключение к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1295">Establishes a connection to a remote host.</span></span> <span data-ttu-id="660fe-1296">Узел задается массивом IP-адресов и номером порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1296">The host is specified by an array of IP addresses and a port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1297">Этот метод обычно используется сразу после вызова <xref:System.Net.Dns.GetHostAddresses%2A>метода, который может возвращать несколько IP-адресов для одного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1297">This method is typically used immediately after a call to <xref:System.Net.Dns.GetHostAddresses%2A>, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="660fe-1298">Если используется протокол, ориентированный на подключение, например TCP, <xref:System.Net.Sockets.Socket.Connect%2A> метод синхронно устанавливает сетевое подключение между <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> и указанной удаленной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1298">If you are using a connection-oriented protocol such as TCP, the <xref:System.Net.Sockets.Socket.Connect%2A> method synchronously establishes a network connection between <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> and the specified remote endpoint.</span></span> <span data-ttu-id="660fe-1299">Если используется протокол без подключения, <xref:System.Net.Sockets.Socket.Connect%2A> устанавливает удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1299">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.Connect%2A> establishes a default remote host.</span></span> <span data-ttu-id="660fe-1300">После вызова <xref:System.Net.Sockets.Socket.Connect%2A> можно отправить данные на удаленное устройство <xref:System.Net.Sockets.Socket.Send%2A> с помощью метода или получить данные с удаленного устройства с помощью <xref:System.Net.Sockets.Socket.Receive%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1300">After you call <xref:System.Net.Sockets.Socket.Connect%2A> you can send data to the remote device with the <xref:System.Net.Sockets.Socket.Send%2A> method, or receive data from the remote device with the <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1301">Если используется протокол без установления соединения, например UDP, нет необходимости вызывать метод <xref:System.Net.Sockets.Socket.Connect%2A> перед отправкой и получением данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1301">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.Connect%2A> before sending and receiving data.</span></span> <span data-ttu-id="660fe-1302">Для синхронной <xref:System.Net.Sockets.Socket.SendTo%2A> связи <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> с удаленным узлом можно использовать и.</span><span class="sxs-lookup"><span data-stu-id="660fe-1302">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> and <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> to synchronously communicate with a remote host.</span></span> <span data-ttu-id="660fe-1303">При вызове <xref:System.Net.Sockets.Socket.Connect%2A> всех датаграмм, поступивших из адреса, отличного от указанного по умолчанию, будут удалены.</span><span class="sxs-lookup"><span data-stu-id="660fe-1303">If you do call <xref:System.Net.Sockets.Socket.Connect%2A> any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="660fe-1304">Если вы хотите задать для <xref:System.Net.Sockets.Socket.SetSocketOption%2A> удаленного узла по умолчанию широковещательный адрес, необходимо сначала вызвать метод и установить параметр сокета в <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>значение <xref:System.Net.Sockets.SocketException>, или <xref:System.Net.Sockets.Socket.Connect%2A> будет вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1304">If you want to set your default remote host to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-1305">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1305">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1306">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1306">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="660fe-1307"><xref:System.Net.Sockets.Socket.Connect%2A>метод будет заблокирован, если только вы не установили <xref:System.Net.Sockets.Socket.Blocking%2A> для `false` свойства значение до вызова. <xref:System.Net.Sockets.Socket.Connect%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1307"><xref:System.Net.Sockets.Socket.Connect%2A> method will block, unless you specifically set the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false` prior to calling <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-1308">Если вы используете протокол, ориентированный на подключение, например TCP, и отключите блокировку, <xref:System.Net.Sockets.Socket.Connect%2A> вызовет <xref:System.Net.Sockets.SocketException> исключение, так как ему требуется время для подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1308">If you are using a connection-oriented protocol like TCP and you do disable blocking, <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException> because it needs time to make the connection.</span></span> <span data-ttu-id="660fe-1309">Протоколы без подключения не вызовут исключение, так как они просто устанавливают удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1309">Connectionless protocols will not throw an exception because they simply establish a default remote host.</span></span> <span data-ttu-id="660fe-1310">Для получения конкретного <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> кода ошибки можно использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-1310">You can use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1311">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1311">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="660fe-1312">Если ошибка вернула всаеваулдблокк, соединение с удаленным узлом было инициировано с помощью подключения <xref:System.Net.Sockets.Socket>, но еще не завершилось успешно.</span><span class="sxs-lookup"><span data-stu-id="660fe-1312">If the error returned WSAEWOULDBLOCK, the remote host connection has been initiated by a connection-oriented <xref:System.Net.Sockets.Socket>, but has not yet completed successfully.</span></span> <span data-ttu-id="660fe-1313">Используйте метод, чтобы определить, <xref:System.Net.Sockets.Socket> когда завершается соединение. <xref:System.Net.Sockets.Socket.Poll%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1313">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method to determine when the <xref:System.Net.Sockets.Socket> is finished connecting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1314">Если вы используете протокол, ориентированный на подключение, и не выполнили <xref:System.Net.Sockets.Socket.Bind%2A> вызов <xref:System.Net.Sockets.Socket.Connect%2A>до вызова, базовый поставщик услуг присвоит адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1314">If you are using a connection-oriented protocol and did not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.Connect%2A>, the underlying service provider will assign the local network address and port number.</span></span> <span data-ttu-id="660fe-1315">Если используется протокол без подключения, поставщик услуг не будет назначать локальный сетевой адрес и номер порта, пока не завершится операция отправки или получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1315">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you complete a send or receive operation.</span></span> <span data-ttu-id="660fe-1316">Если вы хотите изменить удаленный узел по умолчанию, вызовите <xref:System.Net.Sockets.Socket.Connect%2A> его еще раз с нужной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1316">If you want to change the default remote host, call <xref:System.Net.Sockets.Socket.Connect%2A> again with the desired endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1317">Если сокет был ранее отключен, использовать этот метод для восстановления соединения нельзя.</span><span class="sxs-lookup"><span data-stu-id="660fe-1317">If the socket has been previously disconnected, then you cannot use this method to restore the connection.</span></span> <span data-ttu-id="660fe-1318">Используйте один из асинхронных <xref:System.Net.Sockets.Socket.BeginConnect%2A> методов для повторного подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1318">Use one of the asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> methods to reconnect.</span></span> <span data-ttu-id="660fe-1319">Это ограничение базового поставщика.</span><span class="sxs-lookup"><span data-stu-id="660fe-1319">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1320">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1320">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1321">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1321">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1322">Следующий пример кода подключается к удаленной конечной точке, а затем проверяет подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1322">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#5)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1323">Свойство <paramref name="addresses" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1323"><paramref name="addresses" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-1324">Номер порта недействителен.</span><span class="sxs-lookup"><span data-stu-id="660fe-1324">The port number is not valid.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1325">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1325">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1326"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1326">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1327">Этот метод применим для сокетов в семействах <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1327">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1328">Длина параметра <paramref name="address" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="660fe-1328">The length of <paramref name="address" /> is zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1329">Сокет <see cref="T:System.Net.Sockets.Socket" /> был переведен в состояние прослушивания путем вызова <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1329">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="socket.Connect (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="660fe-1330">Имя удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1330">The name of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="660fe-1331">Номер порта удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1331">The port number of the remote host.</span></span></param>
        <summary><span data-ttu-id="660fe-1332">Устанавливает подключение к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1332">Establishes a connection to a remote host.</span></span> <span data-ttu-id="660fe-1333">Узел задается именем узла и номером порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1333">The host is specified by a host name and a port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1334">Если используется протокол, ориентированный на подключение, например TCP, <xref:System.Net.Sockets.Socket.Connect%2A> метод синхронно устанавливает сетевое подключение между <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> и указанным удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1334">If you are using a connection-oriented protocol such as TCP, the <xref:System.Net.Sockets.Socket.Connect%2A> method synchronously establishes a network connection between <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> and the specified remote host.</span></span> <span data-ttu-id="660fe-1335">Если используется протокол без подключения, <xref:System.Net.Sockets.Socket.Connect%2A> устанавливает удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1335">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.Connect%2A> establishes a default remote host.</span></span> <span data-ttu-id="660fe-1336">После вызова <xref:System.Net.Sockets.Socket.Connect%2A> можно отправить данные на удаленное устройство <xref:System.Net.Sockets.Socket.Send%2A> с помощью метода или получить данные с удаленного устройства с помощью <xref:System.Net.Sockets.Socket.Receive%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1336">After you call <xref:System.Net.Sockets.Socket.Connect%2A> you can send data to the remote device with the <xref:System.Net.Sockets.Socket.Send%2A> method, or receive data from the remote device with the <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1337">Если используется протокол без установления соединения, например UDP, нет необходимости вызывать метод <xref:System.Net.Sockets.Socket.Connect%2A> перед отправкой и получением данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1337">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.Connect%2A> before sending and receiving data.</span></span> <span data-ttu-id="660fe-1338">Для синхронной <xref:System.Net.Sockets.Socket.SendTo%2A> связи <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> с удаленным узлом можно использовать и.</span><span class="sxs-lookup"><span data-stu-id="660fe-1338">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> and <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> to synchronously communicate with a remote host.</span></span> <span data-ttu-id="660fe-1339">При вызове <xref:System.Net.Sockets.Socket.Connect%2A> всех датаграмм, поступивших из адреса, отличного от указанного по умолчанию, будут удалены.</span><span class="sxs-lookup"><span data-stu-id="660fe-1339">If you do call <xref:System.Net.Sockets.Socket.Connect%2A> any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="660fe-1340">Если вы хотите задать для <xref:System.Net.Sockets.Socket.SetSocketOption%2A> удаленного узла по умолчанию широковещательный адрес, необходимо сначала вызвать метод и установить параметр сокета в <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>значение <xref:System.Net.Sockets.SocketException>, или <xref:System.Net.Sockets.Socket.Connect%2A> будет вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1340">If you want to set your default remote host to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-1341">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1341">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1342">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1342">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="660fe-1343"><xref:System.Net.Sockets.Socket.Connect%2A>метод будет заблокирован, если только вы не установили <xref:System.Net.Sockets.Socket.Blocking%2A> для `false` свойства значение до вызова. <xref:System.Net.Sockets.Socket.Connect%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1343"><xref:System.Net.Sockets.Socket.Connect%2A> method will block, unless you specifically set the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false` prior to calling <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-1344">Если вы используете протокол, ориентированный на подключение, например TCP, и отключите блокировку, <xref:System.Net.Sockets.Socket.Connect%2A> вызовет <xref:System.Net.Sockets.SocketException> исключение, так как ему требуется время для подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1344">If you are using a connection-oriented protocol like TCP and you do disable blocking, <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException> because it needs time to make the connection.</span></span> <span data-ttu-id="660fe-1345">Протоколы без подключения не вызовут исключение, так как они просто устанавливают удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1345">Connectionless protocols will not throw an exception because they simply establish a default remote host.</span></span> <span data-ttu-id="660fe-1346">Для получения конкретного <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> кода ошибки можно использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-1346">You can use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1347">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1347">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="660fe-1348">Если ошибка вернула всаеваулдблокк, соединение с удаленным узлом было инициировано с помощью подключения <xref:System.Net.Sockets.Socket>, но еще не завершилось успешно.</span><span class="sxs-lookup"><span data-stu-id="660fe-1348">If the error returned WSAEWOULDBLOCK, the remote host connection has been initiated by a connection-oriented <xref:System.Net.Sockets.Socket>, but has not yet completed successfully.</span></span> <span data-ttu-id="660fe-1349">Используйте метод, чтобы определить, <xref:System.Net.Sockets.Socket> когда завершается соединение. <xref:System.Net.Sockets.Socket.Poll%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1349">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method to determine when the <xref:System.Net.Sockets.Socket> is finished connecting.</span></span>  
  
 <span data-ttu-id="660fe-1350">Если включена поддержка протокола IPv6 и <xref:System.Net.Sockets.Socket.Connect%28System.String%2CSystem.Int32%29> вызывается метод для подключения к узлу, который разрешается как в IPv6, так и в IPv4-адресах, будет предпринята попытка подключения к IPv6-адресу до адреса IPv4.</span><span class="sxs-lookup"><span data-stu-id="660fe-1350">If IPv6 is enabled and the <xref:System.Net.Sockets.Socket.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="660fe-1351">Это может привести к задержке времени для установления соединения, если узел не прослушивает IPv6-адрес.</span><span class="sxs-lookup"><span data-stu-id="660fe-1351">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1352">Если вы используете протокол, ориентированный на подключение, и не выполнили <xref:System.Net.Sockets.Socket.Bind%2A> вызов <xref:System.Net.Sockets.Socket.Connect%2A>до вызова, базовый поставщик услуг присвоит адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1352">If you are using a connection-oriented protocol and did not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.Connect%2A>, the underlying service provider will assign the local network address and port number.</span></span> <span data-ttu-id="660fe-1353">Если используется протокол без подключения, поставщик услуг не будет назначать локальный сетевой адрес и номер порта, пока не завершится операция отправки или получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1353">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you complete a send or receive operation.</span></span> <span data-ttu-id="660fe-1354">Если вы хотите изменить удаленный узел по умолчанию, вызовите <xref:System.Net.Sockets.Socket.Connect%2A> его еще раз с нужной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1354">If you want to change the default remote host, call <xref:System.Net.Sockets.Socket.Connect%2A> again with the desired endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1355">Если сокет был ранее отключен, использовать этот метод для восстановления соединения нельзя.</span><span class="sxs-lookup"><span data-stu-id="660fe-1355">If the socket has been previously disconnected, then you cannot use this method to restore the connection.</span></span> <span data-ttu-id="660fe-1356">Используйте один из асинхронных <xref:System.Net.Sockets.Socket.BeginConnect%2A> методов для повторного подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1356">Use one of the asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> methods to reconnect.</span></span> <span data-ttu-id="660fe-1357">Это ограничение базового поставщика.</span><span class="sxs-lookup"><span data-stu-id="660fe-1357">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1358">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1358">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1359">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1359">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1360">Следующий пример кода подключается к удаленной конечной точке, а затем проверяет подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1360">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#6)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1361"><paramref name="host" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1361"><paramref name="host" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-1362">Номер порта недействителен.</span><span class="sxs-lookup"><span data-stu-id="660fe-1362">The port number is not valid.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1363">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1363">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1364"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1364">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1365">Этот метод применим для сокетов в семействах <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1365">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1366">Сокет <see cref="T:System.Net.Sockets.Socket" /> был переведен в состояние прослушивания путем вызова <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1366">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-1367">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1367">Begins an asynchronous request for a connection to a remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public bool ConnectAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ConnectAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ConnectAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.ConnectAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-1368">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1368">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1369">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1369">Begins an asynchronous request for a connection to a remote host.</span></span></summary>
        <returns><span data-ttu-id="660fe-1370"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-1370"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-1371">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1371">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-1372"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-1372"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-1373">В данном случае событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не будет создано и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1373">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1374">При использовании протокола, ориентированного на соединение, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> метод запускает асинхронный запрос подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1374">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method starts an asynchronous request for a connection to the remote host.</span></span> <span data-ttu-id="660fe-1375">Если используется протокол без подключения, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> устанавливает удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1375">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> establishes a default remote host.</span></span>  
  
 <span data-ttu-id="660fe-1376">Чтобы получать уведомления о завершении, необходимо создать метод обратного вызова, реализующий\<обработчик EventHandler SocketAsyncEventArgs > делегата и присоединить <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> обратный вызов к событию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1376">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and attach the callback to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="660fe-1377">Вызывающий объект должен задать <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> свойство <xref:System.Net.IPEndPoint> для удаленного узла, к которому необходимо подключиться.</span><span class="sxs-lookup"><span data-stu-id="660fe-1377">The caller must set the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property to the <xref:System.Net.IPEndPoint> of the remote host to connect to.</span></span>  
  
 <span data-ttu-id="660fe-1378">Вызывающая сторона может задать <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> для свойства любой объект пользовательского состояния, необходимый перед <xref:System.Net.Sockets.Socket.ConnectAsync%2A> вызовом метода, чтобы информация была извлечена в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-1378">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="660fe-1379">Если для обратного вызова требуется больше сведений, чем для одного объекта, можно создать небольшой класс для хранения других требуемых сведений о состоянии в качестве членов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1379">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="660fe-1380">Если используется протокол без установления соединения, например UDP, нет необходимости вызывать метод <xref:System.Net.Sockets.Socket.ConnectAsync%2A> перед отправкой и получением данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1380">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.ConnectAsync%2A> before sending and receiving data.</span></span> <span data-ttu-id="660fe-1381">Для взаимодействия с <xref:System.Net.Sockets.Socket.SendToAsync%2A> удаленным узлом можно использовать и. <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1381">You can use <xref:System.Net.Sockets.Socket.SendToAsync%2A> and <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> to communicate with a remote host.</span></span> <span data-ttu-id="660fe-1382">При вызове <xref:System.Net.Sockets.Socket.ConnectAsync%2A>все датаграммы, поступающие с адреса, отличного от указанного по умолчанию, будут удалены.</span><span class="sxs-lookup"><span data-stu-id="660fe-1382">If you do call <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="660fe-1383">Если вы хотите изменить удаленный узел по умолчанию, вызовите <xref:System.Net.Sockets.Socket.ConnectAsync%2A> метод еще раз с нужной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1383">If you want to change the default remote host, call the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method again with the desired endpoint.</span></span>  
  
 <span data-ttu-id="660fe-1384">Если вы хотите задать для удаленного узла по умолчанию широковещательный адрес, необходимо сначала вызвать <xref:System.Net.Sockets.Socket.SetSocketOption%2A> и установить параметр Broadcast в. `true`</span><span class="sxs-lookup"><span data-stu-id="660fe-1384">If you wish to set the default remote host to a broadcast address, you must first call <xref:System.Net.Sockets.Socket.SetSocketOption%2A> and set Broadcast to `true`.</span></span> <span data-ttu-id="660fe-1385">Если это не сделано, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> метод вызовет <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1385">If this is not done, the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-1386">Для <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> объекта требуются следующие свойства и события:</span><span class="sxs-lookup"><span data-stu-id="660fe-1386">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="660fe-1387">При необходимости можно указать буфер, который будет атомарно отправлен на сокет после того, как метод завершится с <xref:System.Net.Sockets.Socket.ConnectAsync%2A> ошибкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1387">Optionally, a buffer may be provided which will atomically be sent on the socket after the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method succeeds.</span></span> <span data-ttu-id="660fe-1388">В этом случае <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> свойство должно быть установлено в буфер, содержащий отправляемые данные <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> , а свойство должно иметь значение, равное числу байтов данных, отправляемых из буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-1388">In this case, the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> property needs to be set to the buffer containing the data to send and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> property needs to be set to the number of bytes of data to send from the buffer.</span></span> <span data-ttu-id="660fe-1389">После установления соединения отправляется этот буфер данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1389">Once a connection is established, this buffer of data is sent.</span></span>  
  
 <span data-ttu-id="660fe-1390">Если вы используете протокол, ориентированный на подключение, и не вызываете <xref:System.Net.Sockets.Socket.Bind%2A> перед вызовом <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, базовый поставщик услуг присвоит наиболее подходящий локальный сетевой адрес и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1390">If you are using a connection-oriented protocol and do not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, the underlying service provider will assign the most appropriate local network address and port number.</span></span>  
  
 <span data-ttu-id="660fe-1391">Если используется протокол без установления соединения, поставщик услуг не будет назначать IP-адрес и номер порта локальной сети до тех пор, пока не <xref:System.Net.Sockets.Socket.SendAsync%2A> будут <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> вызваны методы или.</span><span class="sxs-lookup"><span data-stu-id="660fe-1391">If you are using a connectionless protocol, the service provider will not assign a local network IP address and port number until you call the <xref:System.Net.Sockets.Socket.SendAsync%2A> or <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="660fe-1392">Метод вызывает исключение <xref:System.NotSupportedException> , <xref:System.Net.Sockets.Socket> Если <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  семейство адресов и не совпадает с семейством адресов. <xref:System.Net.Sockets.Socket.ConnectAsync%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1392">The <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method throws <xref:System.NotSupportedException> if the address family of the <xref:System.Net.Sockets.Socket> and the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> are not the same address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1393">При получении сообщения <xref:System.Net.Sockets.SocketException> при вызове этого метода <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1393">If you receive a <xref:System.Net.Sockets.SocketException> when calling this method, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1394">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1394">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1395">Аргумент является недопустимым.</span><span class="sxs-lookup"><span data-stu-id="660fe-1395">An argument is not valid.</span></span> <span data-ttu-id="660fe-1396">Это исключение возникает, если задано несколько буферов, свойство <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> не имеет значение "null".</span><span class="sxs-lookup"><span data-stu-id="660fe-1396">This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1397">Параметр <paramref name="e" /> и <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> не могут иметь значение NULL.</span><span class="sxs-lookup"><span data-stu-id="660fe-1397">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1398"><see cref="T:System.Net.Sockets.Socket" /> ведет прослушивание или работа с сокетом уже выполняется с использованием объекта <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />, указанного параметром <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1398">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1399">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1399">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1400">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-1400">Windows XP or later is required for this method.</span></span> <span data-ttu-id="660fe-1401">Это исключение возникает также в том случае, если локальная конечная точка и объект <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> не принадлежат к одному семейству адресов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1401">This exception also occurs if the local endpoint and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1402"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1402">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-1403">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1403">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public static bool ConnectAsync (System.Net.Sockets.SocketType socketType, System.Net.Sockets.ProtocolType protocolType, System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConnectAsync(valuetype System.Net.Sockets.SocketType socketType, valuetype System.Net.Sockets.ProtocolType protocolType, class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConnectAsync(System::Net::Sockets::SocketType socketType, System::Net::Sockets::ProtocolType protocolType, System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="static member ConnectAsync : System.Net.Sockets.SocketType * System.Net.Sockets.ProtocolType * System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="System.Net.Sockets.Socket.ConnectAsync (socketType, protocolType, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socketType" Type="System.Net.Sockets.SocketType" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="protocolType" Type="System.Net.Sockets.ProtocolType" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="socketType"><span data-ttu-id="660fe-1404">Одно из значений <see cref="T:System.Net.Sockets.SocketType" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1404">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</span></span></param>
        <param name="protocolType"><span data-ttu-id="660fe-1405">Одно из значений перечисления <see cref="T:System.Net.Sockets.ProtocolType" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1405">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</span></span></param>
        <param name="e"><span data-ttu-id="660fe-1406">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1406">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1407">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1407">Begins an asynchronous request for a connection to a remote host.</span></span></summary>
        <returns><span data-ttu-id="660fe-1408"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-1408"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-1409">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1409">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-1410"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-1410"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-1411">В данном случае событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не будет создано и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1411">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1412">Если используется протокол, ориентированный на соединение, метод М:систем.нет.соккетс.соккет.коннектасинк (System .NET. Sockets. Соккеттипе, System .NET. Sockets. ProtocolType, System .NET. Sockets. SocketAsyncEventArgs) запускает асинхронный запрос для подключение к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1412">If you are using a connection-oriented protocol, the M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs) method starts an asynchronous request for a connection to the remote host.</span></span> <span data-ttu-id="660fe-1413">Если используется протокол без подключения, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> устанавливает удаленный узел по умолчанию, заданный `socketType` параметрами и `protocolType` .</span><span class="sxs-lookup"><span data-stu-id="660fe-1413">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> establishes a default remote host specified by the `socketType` and `protocolType` parameters.</span></span>  
  
 <span data-ttu-id="660fe-1414">Чтобы получать уведомления о завершении, необходимо создать метод обратного вызова, реализующий\<обработчик EventHandler SocketAsyncEventArgs > делегата и присоединить <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> обратный вызов к событию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1414">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and attach the callback to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="660fe-1415">Вызывающий объект должен задать <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> свойство <xref:System.Net.IPEndPoint> для удаленного узла, к которому необходимо подключиться.</span><span class="sxs-lookup"><span data-stu-id="660fe-1415">The caller must set the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property to the <xref:System.Net.IPEndPoint> of the remote host to connect to.</span></span>  
  
 <span data-ttu-id="660fe-1416">Вызывающая сторона может задать <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> для свойства любой объект пользовательского состояния, необходимый перед <xref:System.Net.Sockets.Socket.ConnectAsync%2A> вызовом метода, чтобы информация была извлечена в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-1416">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="660fe-1417">Если для обратного вызова требуется больше сведений, чем для одного объекта, можно создать небольшой класс для хранения других требуемых сведений о состоянии в качестве членов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1417">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="660fe-1418">Если используется протокол без установления соединения, например UDP, нет необходимости вызывать метод <xref:System.Net.Sockets.Socket.ConnectAsync%2A> перед отправкой и получением данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1418">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.ConnectAsync%2A> before sending and receiving data.</span></span> <span data-ttu-id="660fe-1419">Для взаимодействия с <xref:System.Net.Sockets.Socket.SendToAsync%2A> удаленным узлом можно использовать и. <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1419">You can use <xref:System.Net.Sockets.Socket.SendToAsync%2A> and <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> to communicate with a remote host.</span></span> <span data-ttu-id="660fe-1420">При вызове <xref:System.Net.Sockets.Socket.ConnectAsync%2A>все датаграммы, поступающие с адреса, отличного от указанного по умолчанию, будут удалены.</span><span class="sxs-lookup"><span data-stu-id="660fe-1420">If you do call <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="660fe-1421">Если вы хотите изменить удаленный узел по умолчанию, вызовите <xref:System.Net.Sockets.Socket.ConnectAsync%2A> метод еще раз с нужной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1421">If you want to change the default remote host, call the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method again with the desired endpoint.</span></span>  
  
 <span data-ttu-id="660fe-1422">Если вы хотите задать для удаленного узла по умолчанию широковещательный адрес, необходимо сначала вызвать <xref:System.Net.Sockets.Socket.SetSocketOption%2A> и установить параметр Broadcast в. `true`</span><span class="sxs-lookup"><span data-stu-id="660fe-1422">If you wish to set the default remote host to a broadcast address, you must first call <xref:System.Net.Sockets.Socket.SetSocketOption%2A> and set Broadcast to `true`.</span></span> <span data-ttu-id="660fe-1423">Если это не сделано, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> метод вызовет <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1423">If this is not done, the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-1424">Для <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> объекта требуются следующие свойства и события:</span><span class="sxs-lookup"><span data-stu-id="660fe-1424">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="660fe-1425">При необходимости можно указать буфер, который будет атомарно отправлен на сокет после того, как метод завершится с <xref:System.Net.Sockets.Socket.ConnectAsync%2A> ошибкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-1425">Optionally, a buffer may be provided which will atomically be sent on the socket after the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method succeeds.</span></span> <span data-ttu-id="660fe-1426">В этом случае <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> свойство должно быть установлено в буфер, содержащий отправляемые данные <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> , а свойство должно иметь значение, равное числу байтов данных, отправляемых из буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-1426">In this case, the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> property needs to be set to the buffer containing the data to send and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> property needs to be set to the number of bytes of data to send from the buffer.</span></span> <span data-ttu-id="660fe-1427">После установления соединения отправляется этот буфер данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1427">Once a connection is established, this buffer of data is sent.</span></span>  
  
 <span data-ttu-id="660fe-1428">Если вы используете протокол, ориентированный на подключение, и не вызываете <xref:System.Net.Sockets.Socket.Bind%2A> перед вызовом <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, базовый поставщик услуг присвоит наиболее подходящий локальный сетевой адрес и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1428">If you are using a connection-oriented protocol and do not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, the underlying service provider will assign the most appropriate local network address and port number.</span></span>  
  
 <span data-ttu-id="660fe-1429">Если используется протокол без установления соединения, поставщик услуг не будет назначать IP-адрес и номер порта локальной сети до тех пор, пока не <xref:System.Net.Sockets.Socket.SendAsync%2A> будут <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> вызваны методы или.</span><span class="sxs-lookup"><span data-stu-id="660fe-1429">If you are using a connectionless protocol, the service provider will not assign a local network IP address and port number until you call the <xref:System.Net.Sockets.Socket.SendAsync%2A> or <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="660fe-1430">Метод вызывает исключение <xref:System.NotSupportedException> , <xref:System.Net.Sockets.Socket> Если <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  семейство адресов и не совпадает с семейством адресов. <xref:System.Net.Sockets.Socket.ConnectAsync%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1430">The <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method throws <xref:System.NotSupportedException> if the address family of the <xref:System.Net.Sockets.Socket> and the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> are not the same address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1431">При получении сообщения <xref:System.Net.Sockets.SocketException> при вызове этого метода <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1431">If you receive a <xref:System.Net.Sockets.SocketException> when calling this method, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1432">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1432">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1433">Аргумент является недопустимым.</span><span class="sxs-lookup"><span data-stu-id="660fe-1433">An argument is not valid.</span></span> <span data-ttu-id="660fe-1434">Это исключение возникает, если задано несколько буферов, свойство <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> не имеет значение "null".</span><span class="sxs-lookup"><span data-stu-id="660fe-1434">This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1435">Параметр <paramref name="e" /> и <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> не могут иметь значение NULL.</span><span class="sxs-lookup"><span data-stu-id="660fe-1435">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1436"><see cref="T:System.Net.Sockets.Socket" /> ведет прослушивание или работа с сокетом уже выполняется с использованием объекта <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />, указанного параметром <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1436">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1437">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1437">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1438">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-1438">Windows XP or later is required for this method.</span></span> <span data-ttu-id="660fe-1439">Это исключение возникает также в том случае, если локальная конечная точка и объект <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> не принадлежат к одному семейству адресов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1439">This exception also occurs if the local endpoint and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1440"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1440">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-1441">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span><span class="sxs-lookup"><span data-stu-id="660fe-1441">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.Socket.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-1442">Получает значение, указывающее, подключается ли объект <see cref="T:System.Net.Sockets.Socket" /> к удаленному узлу в результате последней операции <see cref="Overload:System.Net.Sockets.Socket.Send" /> или <see cref="Overload:System.Net.Sockets.Socket.Receive" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1442">Gets a value that indicates whether a <see cref="T:System.Net.Sockets.Socket" /> is connected to a remote host as of the last <see cref="Overload:System.Net.Sockets.Socket.Send" /> or <see cref="Overload:System.Net.Sockets.Socket.Receive" /> operation.</span></span></summary>
        <value><span data-ttu-id="660fe-1443">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.Socket" /> в результате последней операции был подключен к удаленному ресурсу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1443"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1444">Свойство возвращает состояние соединения объекта по состоянию <xref:System.Net.Sockets.Socket> последней операции ввода-вывода. `Connected`</span><span class="sxs-lookup"><span data-stu-id="660fe-1444">The `Connected` property gets the connection state of the <xref:System.Net.Sockets.Socket> as of the last I/O operation.</span></span> <span data-ttu-id="660fe-1445">При возвращении `false` <xref:System.Net.Sockets.Socket> он никогда не был подключен или перестает быть подключенным.</span><span class="sxs-lookup"><span data-stu-id="660fe-1445">When it returns `false`, the <xref:System.Net.Sockets.Socket> was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="660fe-1446">Значение <xref:System.Net.Sockets.Socket.Connected%2A> свойства отражает состояние соединения в последней операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1446">The value of the <xref:System.Net.Sockets.Socket.Connected%2A> property reflects the state of the connection as of the most recent operation.</span></span> <span data-ttu-id="660fe-1447">Если необходимо определить текущее состояние соединения, сделайте неблокирующий вызов send с нулевым байтом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1447">If you need to determine the current state of the connection, make a nonblocking, zero-byte Send call.</span></span> <span data-ttu-id="660fe-1448">Если вызов завершается успешно или вызывается код ошибки ВАЕВАУЛДБЛОКК (10035), сокет все еще подключен; в противном случае сокет больше не будет подключен.</span><span class="sxs-lookup"><span data-stu-id="660fe-1448">If the call returns successfully or throws a WAEWOULDBLOCK error code (10035), then the socket is still connected; otherwise, the socket is no longer connected.</span></span>  
  
 <span data-ttu-id="660fe-1449">При вызове <xref:System.Net.Sockets.Socket.Connect%2A> через сокет <xref:System.Net.Sockets.Socket.Connected%2A> UDP свойство всегда возвращает `true`значение, однако это действие не изменяет характер протокола UDP без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1449">If you call <xref:System.Net.Sockets.Socket.Connect%2A> on a User Datagram Protocol (UDP) socket, the <xref:System.Net.Sockets.Socket.Connected%2A> property always returns `true`; however, this action does not change the inherent connectionless nature of UDP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1450">В следующем примере кода выполняется подключение к удаленной конечной точке, проверяется <xref:System.Net.Sockets.Socket.Connected%2A> свойство и проверяется текущее состояние соединения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1450">The following code example connects to a remote endpoint, checks the <xref:System.Net.Sockets.Socket.Connected%2A> property, and checks the current state of the connection.</span></span>  
  
 [!code-cpp[Classic Socket.Connect Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Connect Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Connect Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Connect Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Connect Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Connect Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public void Disconnect (bool reuseSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Disconnect(bool reuseSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Disconnect (reuseSocket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Disconnect(bool reuseSocket);" />
      <MemberSignature Language="F#" Value="member this.Disconnect : bool -&gt; unit" Usage="socket.Disconnect reuseSocket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reuseSocket" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="reuseSocket"><span data-ttu-id="660fe-1451">Значение <see langword="true" />, если этот сокет может быть повторно использован после закрытия текущего подключения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1451"><see langword="true" /> if this socket can be reused after the current connection is closed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="660fe-1452">Закрывает подключение к сокету и позволяет повторно его использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-1452">Closes the socket connection and allows reuse of the socket.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1453">При использовании протокола, ориентированного на подключение, этот метод можно использовать для закрытия сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1453">If you are using a connection-oriented protocol, you can use this method to close the socket.</span></span> <span data-ttu-id="660fe-1454">Этот метод завершает соединение и задает <xref:System.Net.Sockets.Socket.Connected%2A> для `false`свойства значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1454">This method ends the connection and sets the <xref:System.Net.Sockets.Socket.Connected%2A> property to `false`.</span></span> <span data-ttu-id="660fe-1455">Однако если `reuseSocket` имеет значение `true`, можно повторно использовать сокет.</span><span class="sxs-lookup"><span data-stu-id="660fe-1455">However, if `reuseSocket` is `true`, you can reuse the socket.</span></span>  
  
 <span data-ttu-id="660fe-1456">Чтобы обеспечить отправку и получение всех данных перед закрытием сокета, следует вызвать <xref:System.Net.Sockets.Socket.Shutdown%2A> <xref:System.Net.Sockets.Socket.Disconnect%2A> метод перед вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1456">To ensure that all data is sent and received before the socket is closed, you should call <xref:System.Net.Sockets.Socket.Shutdown%2A> before calling the <xref:System.Net.Sockets.Socket.Disconnect%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1457">Если необходимо вызвать <xref:System.Net.Sockets.Socket.Disconnect%2A> без первого `false` <xref:System.Net.Sockets.SocketOptionName.DontLinger> вызова <xref:System.Net.Sockets.Socket.Shutdown%2A>, можно установить параметр в значение и указать нулевой интервал времени ожидания, чтобы гарантировать отправку данных, поставленных в очередь для исходящей передачи. <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="660fe-1457">If you need to call <xref:System.Net.Sockets.Socket.Disconnect%2A> without first calling <xref:System.Net.Sockets.Socket.Shutdown%2A>, you can set the <xref:System.Net.Sockets.SocketOptionName.DontLinger><xref:System.Net.Sockets.Socket> option to `false` and specify a nonzero time-out interval to ensure that data queued for outgoing transmission is sent.</span></span> <span data-ttu-id="660fe-1458"><xref:System.Net.Sockets.Socket.Disconnect%2A>затем блокируется до тех пор, пока данные не будут отправлены или пока не истечет указанное время ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-1458"><xref:System.Net.Sockets.Socket.Disconnect%2A> then blocks until the data is sent or until the specified time-out expires.</span></span> <span data-ttu-id="660fe-1459">Если задано <xref:System.Net.Sockets.SocketOptionName.DontLinger> значение `false` и задан нулевой интервал времени ожидания, <xref:System.Net.Sockets.Socket.Close%2A> освобождает соединение и автоматически удаляет исходящие данные из очереди.</span><span class="sxs-lookup"><span data-stu-id="660fe-1459">If you set <xref:System.Net.Sockets.SocketOptionName.DontLinger> to `false` and specify a zero time-out interval, <xref:System.Net.Sockets.Socket.Close%2A> releases the connection and automatically discards outgoing queued data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1460">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1460">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1461">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1461">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1462">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1462">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1463">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1463">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1464">В следующем примере кода создается сокет для синхронного взаимодействия и отправляются некоторые данные на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-1464">The following code example creates a socket for synchronous communication and sends some data to a remote host.</span></span> <span data-ttu-id="660fe-1465">Затем он вызывает <xref:System.Net.Sockets.Socket.Shutdown%2A>, для завершения действия Send и Receive и <xref:System.Net.Sockets.Socket.Disconnect%2A>, чтобы закрыть подключение к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1465">It then calls <xref:System.Net.Sockets.Socket.Shutdown%2A>, to stop the send and receive activity, and <xref:System.Net.Sockets.Socket.Disconnect%2A>, to close the socket connection.</span></span>  
  
 [!code-cpp[Nclsocketenhancements#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#12)]
 [!code-csharp[Nclsocketenhancements#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="660fe-1466">Для этого метода необходима операционная система Windows 2000 или более ранняя версия или будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1466">This method requires Windows 2000 or earlier, or the exception will be thrown.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1467">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1467">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1468">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1468">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisconnectAsync">
      <MemberSignature Language="C#" Value="public bool DisconnectAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DisconnectAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisconnectAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DisconnectAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.DisconnectAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.DisconnectAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-1469">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1469">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1470">Начинает выполнение асинхронного запроса для отключения от удаленной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1470">Begins an asynchronous request to disconnect from a remote endpoint.</span></span></summary>
        <returns><span data-ttu-id="660fe-1471"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-1471"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-1472">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1472">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-1473"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-1473"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-1474">В данном случае событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не будет создано и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1474">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1475">При использовании протокола, ориентированного на соединение, вызов <xref:System.Net.Sockets.Socket.DisconnectAsync%2A> метода запрашивает отключение от удаленной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1475">When using a connection-oriented protocol, calling the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A> method requests a disconnect from a remote endpoint.</span></span> <span data-ttu-id="660fe-1476">Если для <xref:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket%2A?displayProperty=nameWithType> `true` параметра задано значение, сокет можно использовать повторно. `e`</span><span class="sxs-lookup"><span data-stu-id="660fe-1476">If you set <xref:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket%2A?displayProperty=nameWithType> to `true` in the `e` parameter, the socket can be reused.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1477">Параметр <paramref name="e" /> не может быть равен null.</span><span class="sxs-lookup"><span data-stu-id="660fe-1477">The <paramref name="e" /> parameter cannot be null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1478">Операция сокета уже выполнялась с использованием объекта <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />, указанного в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1478">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1479">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-1479">Windows XP or later is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1480"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1480">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1481">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1481">An error occurred when attempting to access the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-1482">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1482">Releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.Socket" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="socket.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="660fe-1483">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1483">Releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.Socket" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1484">Вызовите метод `Dispose` по окончании использования класса <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1484">Call `Dispose` when you are finished using the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1485">Метод `Dispose` оставляет класс <xref:System.Net.Sockets.Socket> в непригодном для использования состоянии.</span><span class="sxs-lookup"><span data-stu-id="660fe-1485">The `Dispose` method leaves the <xref:System.Net.Sockets.Socket> in an unusable state.</span></span> <span data-ttu-id="660fe-1486">После вызова `Dispose`необходимо освободить все ссылки <xref:System.Net.Sockets.Socket> на, чтобы сборщик мусора мог освободить память, которую <xref:System.Net.Sockets.Socket> занимают.</span><span class="sxs-lookup"><span data-stu-id="660fe-1486">After calling `Dispose`, you must release all references to the <xref:System.Net.Sockets.Socket> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.Socket> was occupying.</span></span>  
  
 <span data-ttu-id="660fe-1487">Дополнительные сведения см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1487">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1488">Всегда вызывайте метод `Dispose` перед освобождением последней ссылки на класс <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1488">Always call `Dispose` before you release your last reference to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1489">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Net.Sockets.Socket> метод `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="660fe-1489">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.Socket> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="socket.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="660fe-1490">Значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1490"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="660fe-1491">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.Sockets.Socket" />, и при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="660fe-1491">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.Socket" />, and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1492">Этот метод вызывается открытым `Dispose()` методом <xref:System.Object.Finalize%2A> и методом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1492">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="660fe-1493">`Dispose()`вызывает защищенный `Dispose(Boolean)` метод с параметром `disposing` , для `true`которого задано значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1493">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="660fe-1494"><xref:System.Object.Finalize%2A>вызывает метод `disposing` `false`с параметром, равным. `Dispose`</span><span class="sxs-lookup"><span data-stu-id="660fe-1494"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="660fe-1495">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1495">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.Socket> references.</span></span> <span data-ttu-id="660fe-1496">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="660fe-1496">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1497">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1497">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1498">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1498">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="660fe-1499">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="660fe-1499">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="660fe-1500">При переопределении метода <see cref="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1500">When overriding <see cref="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="660fe-1501">Дополнительные сведения о реализации <see cref="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1501">For more information about how to implement <see cref="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="660fe-1502"><see langword="Dispose" /> Дополнительные сведения о <see cref="M:System.Object.Finalize" />и см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Переопределение метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="660fe-1502">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.Sockets.Socket.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-1503">Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, разрешает ли объект <see cref="T:System.Net.Sockets.Socket" /> выполнение фрагментации датаграмм протокола IP.</span><span class="sxs-lookup"><span data-stu-id="660fe-1503">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> allows Internet Protocol (IP) datagrams to be fragmented.</span></span></summary>
        <value><span data-ttu-id="660fe-1504">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.Socket" /> разрешает фрагментацию датаграмм; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1504"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="660fe-1505">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1505">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1506">Для датаграмм требуется фрагментация, если их размер превышает максимальную единицу передачи (MTU) носителя передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1506">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="660fe-1507">Датаграммы могут быть фрагментированы отправляющим узлом (все версии протокола IP) или промежуточным маршрутизатором (только для протокола IP версии 4).</span><span class="sxs-lookup"><span data-stu-id="660fe-1507">Datagrams may be fragmented by the sending host (all Internet Protocol versions) or an intermediate router (Internet Protocol Version 4 only).</span></span> <span data-ttu-id="660fe-1508">Если датаграмма должна быть фрагментирована, а <xref:System.Net.Sockets.Socket.DontFragment%2A> параметр установлен, датаграмма отбрасывается, а сообщение об ошибке протокола ICMP отправляется обратно отправителю датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-1508">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
 <span data-ttu-id="660fe-1509">Установка этого свойства для сокета протокола TCP не будет действовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-1509">Setting this property on a Transmission Control Protocol (TCP) socket will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1510">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.DontFragment%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-1510">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#2)]
 [!code-csharp[SocketPropertyTester#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1511">Это свойство может быть установлено только для сокетов в семействах <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1511">This property can be set only for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1512">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1512">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1513"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1513">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DualMode">
      <MemberSignature Language="C#" Value="public bool DualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DualMode" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.DualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DualMode : bool with get, set" Usage="System.Net.Sockets.Socket.DualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-1514">Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, является ли <see cref="T:System.Net.Sockets.Socket" /> сокетом с двойным режимом, используемым для IPv4 и IPv6.</span><span class="sxs-lookup"><span data-stu-id="660fe-1514">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> is a dual-mode socket used for both IPv4 and IPv6.</span></span></summary>
        <value><span data-ttu-id="660fe-1515">Значение <see langword="true" />, если <see cref="T:System.Net.Sockets.Socket" /> — сокет с двойным режимом. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1515"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> is a  dual-mode socket; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="660fe-1516">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1516">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateAndClose">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketInformation DuplicateAndClose (int targetProcessId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Net.Sockets.SocketInformation DuplicateAndClose(int32 targetProcessId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DuplicateAndClose (targetProcessId As Integer) As SocketInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::SocketInformation DuplicateAndClose(int targetProcessId);" />
      <MemberSignature Language="F#" Value="member this.DuplicateAndClose : int -&gt; System.Net.Sockets.SocketInformation" Usage="socket.DuplicateAndClose targetProcessId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoLimitation("We do not support passing sockets across processes, we merely allow this API to pass the socket across AppDomains")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetProcessId" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetProcessId"><span data-ttu-id="660fe-1517">Идентификатор конечного процесса, в котором создается дубликат ссылки сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1517">The ID of the target process where a duplicate of the socket reference is created.</span></span></param>
        <summary><span data-ttu-id="660fe-1518">Дублирует ссылку сокета для конечного процесса и закрывает сокет для этого процесса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1518">Duplicates the socket reference for the target process, and closes the socket for this process.</span></span></summary>
        <returns><span data-ttu-id="660fe-1519">Ссылка сокета, передаваемая в конечный процесс.</span><span class="sxs-lookup"><span data-stu-id="660fe-1519">The socket reference to be passed to the target process.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1520">Целевой процесс должен использовать <xref:System.Net.Sockets.Socket.%23ctor%2A> для создания повторяющегося экземпляра сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1520">The target process should use <xref:System.Net.Sockets.Socket.%23ctor%2A> to create the duplicate socket instance.</span></span>  
  
 <span data-ttu-id="660fe-1521">Если вы вызываете <xref:System.Net.Sockets.Socket.%23ctor%2A> конструктор несколько раз с тем же массивом байтов, что и аргумент для каждого вызова, вы создадите несколько <xref:System.Net.Sockets.Socket> управляемых экземпляров с одним и тем же базовым сокетом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1521">If you call the <xref:System.Net.Sockets.Socket.%23ctor%2A> constructor multiple times with the same byte array as the argument for each call, you will create multiple managed <xref:System.Net.Sockets.Socket> instances with the same underlying socket.</span></span> <span data-ttu-id="660fe-1522">Этот подход настоятельно не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="660fe-1522">This practice is strongly discouraged.</span></span>  
  
 <span data-ttu-id="660fe-1523">Если процесс создания сокета использует асинхронные методы (<xref:System.Net.Sockets.Socket.BeginReceive%2A> или <xref:System.Net.Sockets.Socket.BeginSend%2A>), то сначала необходимо установить <xref:System.Net.Sockets.Socket.UseOnlyOverlappedIO%2A> свойство в значение true. в противном случае сокет привязывается к порту завершения создания процесса, что может вызвать исключение  <xref:System.ArgumentNullException> будет выдаваться в целевом процессе.</span><span class="sxs-lookup"><span data-stu-id="660fe-1523">If the process creating the socket uses asynchronous methods (<xref:System.Net.Sockets.Socket.BeginReceive%2A> or <xref:System.Net.Sockets.Socket.BeginSend%2A>), the process must first set the <xref:System.Net.Sockets.Socket.UseOnlyOverlappedIO%2A> property to true; otherwise, the socket is bound to the completion port of the creating process, which may cause an <xref:System.ArgumentNullException> to be thrown on the target process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1524">Параметр <paramref name="targetProcessID" /> не является допустимым идентификатором процесса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1524"><paramref name="targetProcessID" /> is not a valid process id.</span></span> 
<span data-ttu-id="660fe-1525">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-1525">-or-</span></span> 
<span data-ttu-id="660fe-1526">Дубликат ссылки сокета не создан.</span><span class="sxs-lookup"><span data-stu-id="660fe-1526">Duplication of the socket reference failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableBroadcast : bool with get, set" Usage="System.Net.Sockets.Socket.EnableBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-1527">Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, может ли объект <see cref="T:System.Net.Sockets.Socket" /> производить отправку или прием широковещательных пакетов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1527">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> can send or receive broadcast packets.</span></span></summary>
        <value><span data-ttu-id="660fe-1528">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.Socket" /> разрешает использование широковещательных пакетов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1528"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> allows broadcast packets; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="660fe-1529">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1529">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1530">Широковещательная рассылка ограничена определенной подсетью и должна использовать протокол UDP. Для протокола IP версии 4 можно выполнить широковещательную рассылку в локальную подсеть, отправив пакет в 255.255.255.255; также можно использовать направленный широковещательный адрес, который представляет собой сетевую часть IP-адреса со всеми битами, заданными в части узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1530">Broadcasting is limited to a specific subnet, and must use User Datagram Protocol (UDP.) For Internet Protocol version 4, you can broadcast to your local subnet by sending a packet to 255.255.255.255; or you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="660fe-1531">Например, если IP-адрес — 192.168.1.40 (адрес класса C, маска 255.255.255.0--, часть сети — первые три октета, а часть узла — последний октет), направленный широковещательный адрес 192.168.1.255.</span><span class="sxs-lookup"><span data-stu-id="660fe-1531">For example, if your IP address is 192.168.1.40 (a Class C address, with a netmask of 255.255.255.0 -- the network portion is the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
 <span data-ttu-id="660fe-1532">Установка этого свойства для сокета протокола TCP не будет действовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-1532">Setting this property on a Transmission Control Protocol (TCP) socket will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1533">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.EnableBroadcast%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-1533">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#2)]
 [!code-csharp[SocketPropertyTester#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1534">Эта функция применима только для сокета датаграмм.</span><span class="sxs-lookup"><span data-stu-id="660fe-1534">This option is valid for a datagram socket only.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1535"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1535">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndAccept">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-1536">Асинхронно принимает попытку входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1536">Asynchronously accepts an incoming connection attempt.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndAccept">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAccept (out byte[] buffer, IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAccept([out] unsigned int8[]&amp; buffer, class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAccept (ByRef buffer As Byte(), asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAccept([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % buffer, IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAccept :  * IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="socket.EndAccept (buffer, asyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-1537">Массив типа <see cref="T:System.Byte" />, который содержит переданные байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-1537">An array of type <see cref="T:System.Byte" /> that contains the bytes transferred.</span></span></param>
        <param name="asyncResult"><span data-ttu-id="660fe-1538">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии для этой асинхронной операции, а также любые данные, определенные пользователем.</span><span class="sxs-lookup"><span data-stu-id="660fe-1538">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation as well as any user defined data.</span></span></param>
        <summary><span data-ttu-id="660fe-1539">Асинхронно принимает входящие попытки подключения и создает новый объект <see cref="T:System.Net.Sockets.Socket" /> для связи с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1539">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> object to handle remote host communication.</span></span> <span data-ttu-id="660fe-1540">Этот метод возвращает буфер, который содержит начальные данные для передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1540">This method returns a buffer that contains the initial data transferred.</span></span></summary>
        <returns><span data-ttu-id="660fe-1541">Объект <see cref="T:System.Net.Sockets.Socket" /> для связи с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1541">A <see cref="T:System.Net.Sockets.Socket" /> object to handle communication with the remote host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1542"><xref:System.Net.Sockets.Socket.EndAccept%2A>завершает вызов <xref:System.Net.Sockets.Socket.BeginAccept%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1542"><xref:System.Net.Sockets.Socket.EndAccept%2A> completes a call to <xref:System.Net.Sockets.Socket.BeginAccept%2A>.</span></span> <span data-ttu-id="660fe-1543">Перед вызовом <xref:System.Net.Sockets.Socket.BeginAccept%2A>необходимо создать метод обратного вызова, который вызывается <xref:System.AsyncCallback> делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1543">Before calling <xref:System.Net.Sockets.Socket.BeginAccept%2A>, you need to create a callback method that is invoked by the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1544">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после того, <xref:System.Net.Sockets.Socket.BeginAccept%2A> как метод возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1544">This callback method executes in a separate thread, and is called by the system after the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method returns.</span></span>  
  
 <span data-ttu-id="660fe-1545">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод `asyncResult` параметра, чтобы получить объект <xref:System.Net.Sockets.Socket> , для которого выполняется попытка подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1545">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the `asyncResult` parameter to obtain the <xref:System.Net.Sockets.Socket> on which the connection attempt is being made.</span></span> <span data-ttu-id="660fe-1546">После получения <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndAccept%2A> вызвать метод для успешного завершения попытки подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1546">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndAccept%2A> method to successfully complete the connection attempt.</span></span> <span data-ttu-id="660fe-1547">Параметр этой перегрузки содержит данные, полученные при <xref:System.Net.Sockets.Socket.BeginAccept%2A> вызове функции, а `bytesTransferred` параметр содержит число байтов, переданных в вызове. `buffer`</span><span class="sxs-lookup"><span data-stu-id="660fe-1547">The `buffer` parameter of this overload contains the data that was received in the call to <xref:System.Net.Sockets.Socket.BeginAccept%2A> and the `bytesTransferred` parameter contains the number of bytes that were transferred in the call.</span></span>  
  
 <span data-ttu-id="660fe-1548"><xref:System.Net.Sockets.Socket.EndAccept%2A> Метод блокируется до завершения подключения в очереди входящих подключений.</span><span class="sxs-lookup"><span data-stu-id="660fe-1548">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method blocks until a connection is pending in the incoming connection queue.</span></span> <span data-ttu-id="660fe-1549">Метод принимает входящее соединение и возвращает новый <xref:System.Net.Sockets.Socket> объект, который может использоваться для отправки и получения данных с удаленного узла. <xref:System.Net.Sockets.Socket.EndAccept%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1549">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method accepts the incoming connection and returns a new <xref:System.Net.Sockets.Socket> that can be used to send data to and receive data from the remote host.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1550">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1550">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1551">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1551">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1552">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1552">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1553">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1553">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1554">В следующем примере кода используется <xref:System.Net.Sockets.Socket.BeginAccept%2A> для создания и подключения сокета, а также для принятия начальных 10 байт данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1554">The following code example uses <xref:System.Net.Sockets.Socket.BeginAccept%2A> to create and connect a socket and accept the initial 10 bytes of data.</span></span> <span data-ttu-id="660fe-1555">Делегат обратного вызова <xref:System.Net.Sockets.Socket.EndAccept%2A> вызывает метод для завершения асинхронного запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1555">The callback delegate calls <xref:System.Net.Sockets.Socket.EndAccept%2A> to end the asynchronous request.</span></span> <span data-ttu-id="660fe-1556">Число переданных байтов и данные возвращаются в `buffer` параметрах и `bytesTransferred` этого метода и отображаются в консоли.</span><span class="sxs-lookup"><span data-stu-id="660fe-1556">The number of bytes transmitted and the data are returned in the `buffer` and `bytesTransferred` parameters of this method and are displayed on the console.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#6)]
 [!code-csharp[NCLSocketEnhancements#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1557">Этот метод доступен только в Windows NT.</span><span class="sxs-lookup"><span data-stu-id="660fe-1557">Windows NT is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1558">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1558">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1559">Параметр <paramref name="asyncResult" /> пуст.</span><span class="sxs-lookup"><span data-stu-id="660fe-1559"><paramref name="asyncResult" /> is empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1560">Параметр <paramref name="asyncResult" /> не был создан вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1560"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1561">Ранее был вызван метод <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1561"><see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1562">Произошла ошибка при попытке доступа к объекту <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1562">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAccept">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAccept (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAccept(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAccept (asyncResult As IAsyncResult) As Socket" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAccept(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAccept (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAccept(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAccept (result As IAsyncResult) As Socket" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAccept(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndAccept : IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="socket.EndAccept result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1563">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии для этой асинхронной операции, а также любые данные, определенные пользователем.</span><span class="sxs-lookup"><span data-stu-id="660fe-1563">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation as well as any user defined data.</span></span></param>
        <param name="result"><span data-ttu-id="660fe-1564">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии для этой асинхронной операции, а также любые данные, определенные пользователем.</span><span class="sxs-lookup"><span data-stu-id="660fe-1564">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation as well as any user defined data.</span></span></param>
        <summary><span data-ttu-id="660fe-1565">Асинхронно принимает входящие попытки подключения и создает новый объект <see cref="T:System.Net.Sockets.Socket" /> для связи с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1565">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="660fe-1566">Объект<see cref="T:System.Net.Sockets.Socket" /> для связи с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1566">A <see cref="T:System.Net.Sockets.Socket" /> to handle communication with the remote host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1567"><xref:System.Net.Sockets.Socket.EndAccept%2A>завершает вызов <xref:System.Net.Sockets.Socket.BeginAccept%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1567"><xref:System.Net.Sockets.Socket.EndAccept%2A> completes a call to <xref:System.Net.Sockets.Socket.BeginAccept%2A>.</span></span> <span data-ttu-id="660fe-1568">Перед вызовом <xref:System.Net.Sockets.Socket.BeginAccept%2A>необходимо создать метод обратного вызова, который <xref:System.AsyncCallback> реализует делегат.</span><span class="sxs-lookup"><span data-stu-id="660fe-1568">Before calling <xref:System.Net.Sockets.Socket.BeginAccept%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1569">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после того, <xref:System.Net.Sockets.Socket.BeginAccept%2A> как метод возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1569">This callback method executes in a separate thread, and is called by the system after the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method returns.</span></span> <span data-ttu-id="660fe-1570">Он должен принять параметр `asyncResult` , возвращенный <xref:System.Net.Sockets.Socket.BeginAccept%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1570">It must accept the `asyncResult` parameter returned from the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1571">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод `asyncResult` параметра, чтобы получить объект <xref:System.Net.Sockets.Socket> , для которого выполняется попытка подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1571">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the `asyncResult` parameter to obtain the <xref:System.Net.Sockets.Socket> on which the connection attempt is being made.</span></span> <span data-ttu-id="660fe-1572">После получения <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndAccept%2A> вызвать метод для успешного завершения попытки подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1572">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndAccept%2A> method to successfully complete the connection attempt.</span></span>  
  
 <span data-ttu-id="660fe-1573"><xref:System.Net.Sockets.Socket.EndAccept%2A> Метод блокируется до завершения подключения в очереди входящих подключений.</span><span class="sxs-lookup"><span data-stu-id="660fe-1573">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method blocks until a connection is pending in the incoming connection queue.</span></span> <span data-ttu-id="660fe-1574">Метод принимает входящее соединение и возвращает новый <xref:System.Net.Sockets.Socket> объект, который может использоваться для отправки и получения данных с удаленного узла. <xref:System.Net.Sockets.Socket.EndAccept%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1574">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method accepts the incoming connection and returns a new <xref:System.Net.Sockets.Socket> that can be used to send data to and receive data from the remote host.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1575">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1575">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1576">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1576">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1577">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1577">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1578">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1578">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1579">В следующем примере кода завершается асинхронный запрос и создается новый <xref:System.Net.Sockets.Socket> объект, принимающий входящий запрос на подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1579">The following code example ends an asynchronous request and creates a new <xref:System.Net.Sockets.Socket> to accept an incoming connection request.</span></span> <span data-ttu-id="660fe-1580">Полный пример, демонстрирующий асинхронную связь с сокетами, см. в статье [примеры кода для сокетов](~/docs/framework/network-programming/socket-code-examples.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1580">For a complete example that demonstrates asynchronous communications with sockets, see [Socket Code Examples](~/docs/framework/network-programming/socket-code-examples.md).</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#7)]
 [!code-csharp[Socket_Async_Send_Receive#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#7)]
 [!code-vb[Socket_Async_Send_Receive#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1581"><paramref name="asyncResult" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1581"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1582">Параметр <paramref name="asyncResult" /> не был создан вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1582"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1583">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1583">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-1584">Дополнительные сведения см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="660fe-1584">See the Remarks section for more information.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1585"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1585">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1586">Ранее был вызван метод <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1586"><see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1587">Этот метод доступен только в Windows NT.</span><span class="sxs-lookup"><span data-stu-id="660fe-1587">Windows NT is required for this method.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
      </Docs>
    </Member>
    <Member MemberName="EndAccept">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAccept (out byte[] buffer, out int bytesTransferred, IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAccept([out] unsigned int8[]&amp; buffer, [out] int32&amp; bytesTransferred, class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAccept (ByRef buffer As Byte(), ByRef bytesTransferred As Integer, asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAccept([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % buffer, [Runtime::InteropServices::Out] int % bytesTransferred, IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAccept :  *  * IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="socket.EndAccept (buffer, bytesTransferred, asyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytesTransferred" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-1588">Массив типа <see cref="T:System.Byte" />, который содержит переданные байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-1588">An array of type <see cref="T:System.Byte" /> that contains the bytes transferred.</span></span></param>
        <param name="bytesTransferred"><span data-ttu-id="660fe-1589">Количество переданных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1589">The number of bytes transferred.</span></span></param>
        <param name="asyncResult"><span data-ttu-id="660fe-1590">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии для этой асинхронной операции, а также любые данные, определенные пользователем.</span><span class="sxs-lookup"><span data-stu-id="660fe-1590">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation as well as any user defined data.</span></span></param>
        <summary><span data-ttu-id="660fe-1591">Асинхронно принимает входящие попытки подключения и создает новый объект <see cref="T:System.Net.Sockets.Socket" /> для связи с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1591">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> object to handle remote host communication.</span></span> <span data-ttu-id="660fe-1592">Этот метод возвращает буфер, который содержит начальные данные и число переданных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1592">This method returns a buffer that contains the initial data and the number of bytes transferred.</span></span></summary>
        <returns><span data-ttu-id="660fe-1593">Объект <see cref="T:System.Net.Sockets.Socket" /> для связи с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1593">A <see cref="T:System.Net.Sockets.Socket" /> object to handle communication with the remote host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1594"><xref:System.Net.Sockets.Socket.EndAccept%2A>завершает вызов <xref:System.Net.Sockets.Socket.BeginAccept%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1594"><xref:System.Net.Sockets.Socket.EndAccept%2A> completes a call to <xref:System.Net.Sockets.Socket.BeginAccept%2A>.</span></span> <span data-ttu-id="660fe-1595">Перед вызовом <xref:System.Net.Sockets.Socket.BeginAccept%2A>необходимо создать метод обратного вызова, который вызывается <xref:System.AsyncCallback> делегатом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1595">Before calling <xref:System.Net.Sockets.Socket.BeginAccept%2A>, you need to create a callback method that is invoked by the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1596">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после того, <xref:System.Net.Sockets.Socket.BeginAccept%2A> как метод возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1596">This callback method executes in a separate thread, and is called by the system after the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method returns.</span></span> <span data-ttu-id="660fe-1597">Он должен принять параметр `asyncResult` , возвращенный <xref:System.Net.Sockets.Socket.BeginAccept%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1597">It must accept the `asyncResult` parameter returned from the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1598">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод `asyncResult` параметра, чтобы получить объект <xref:System.Net.Sockets.Socket> , для которого выполняется попытка подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1598">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the `asyncResult` parameter to obtain the <xref:System.Net.Sockets.Socket> on which the connection attempt is being made.</span></span> <span data-ttu-id="660fe-1599">После получения <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndAccept%2A> вызвать метод для успешного завершения попытки подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1599">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndAccept%2A> method to successfully complete the connection attempt.</span></span> <span data-ttu-id="660fe-1600">Параметр этой перегрузки содержит данные, полученные при <xref:System.Net.Sockets.Socket.BeginAccept%2A> вызове функции, а `bytesTransferred` параметр содержит число байтов, переданных в вызове. `buffer`</span><span class="sxs-lookup"><span data-stu-id="660fe-1600">The `buffer` parameter of this overload contains the data that was received in the call to <xref:System.Net.Sockets.Socket.BeginAccept%2A> and the `bytesTransferred` parameter contains the number of bytes that were transferred in the call.</span></span>  
  
 <span data-ttu-id="660fe-1601"><xref:System.Net.Sockets.Socket.EndAccept%2A> Метод блокируется до завершения подключения в очереди входящих подключений.</span><span class="sxs-lookup"><span data-stu-id="660fe-1601">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method blocks until a connection is pending in the incoming connection queue.</span></span> <span data-ttu-id="660fe-1602">Метод принимает входящее соединение и возвращает новый <xref:System.Net.Sockets.Socket> объект, который может использоваться для отправки и получения данных с удаленного узла. <xref:System.Net.Sockets.Socket.EndAccept%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1602">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method accepts the incoming connection and returns a new <xref:System.Net.Sockets.Socket> that can be used to send data to and receive data from the remote host.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1603">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1603">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1604">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1604">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1605">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1605">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1606">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1606">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1607">В следующем примере кода используется <xref:System.Net.Sockets.Socket.BeginAccept%2A> для создания и подключения сокета, а также для принятия начальных 10 байт данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1607">The following code example uses <xref:System.Net.Sockets.Socket.BeginAccept%2A> to create and connect a socket and accept the initial 10 bytes of data.</span></span> <span data-ttu-id="660fe-1608">Делегат обратного вызова <xref:System.Net.Sockets.Socket.EndAccept%2A> вызывает метод для завершения асинхронного запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1608">The callback delegate calls <xref:System.Net.Sockets.Socket.EndAccept%2A> to end the asynchronous request.</span></span> <span data-ttu-id="660fe-1609">Число переданных байтов и данные возвращаются в `buffer` параметрах и `bytesTransferred` этого метода и отображаются в консоли.</span><span class="sxs-lookup"><span data-stu-id="660fe-1609">The number of bytes transmitted and the data are returned in the `buffer` and `bytesTransferred` parameters of this method and are displayed on the console.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#6)]
 [!code-csharp[NCLSocketEnhancements#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1610">Этот метод доступен только в Windows NT.</span><span class="sxs-lookup"><span data-stu-id="660fe-1610">Windows NT is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1611">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1611">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1612">Параметр <paramref name="asyncResult" /> пуст.</span><span class="sxs-lookup"><span data-stu-id="660fe-1612"><paramref name="asyncResult" /> is empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1613">Параметр <paramref name="asyncResult" /> не был создан вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1613"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1614">Ранее был вызван метод <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1614"><see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1615">Произошла ошибка при попытке доступа к объекту <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1615">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (result As IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="socket.EndConnect result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1616">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1616">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <param name="result"><span data-ttu-id="660fe-1617">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1617">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1618">Завершает ожидающий асинхронный запрос на подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1618">Ends a pending asynchronous connection request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1619"><xref:System.Net.Sockets.Socket.EndConnect%2A>— Это блокирующий метод, который завершает асинхронный запрос на подключение к удаленному <xref:System.Net.Sockets.Socket.BeginConnect%2A> узлу, запущенный в методе.</span><span class="sxs-lookup"><span data-stu-id="660fe-1619"><xref:System.Net.Sockets.Socket.EndConnect%2A> is a blocking method that completes the asynchronous remote host connection request started in the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1620">Перед вызовом <xref:System.Net.Sockets.Socket.BeginConnect%2A>необходимо создать метод обратного вызова, который <xref:System.AsyncCallback> реализует делегат.</span><span class="sxs-lookup"><span data-stu-id="660fe-1620">Before calling <xref:System.Net.Sockets.Socket.BeginConnect%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1621">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после <xref:System.Net.Sockets.Socket.BeginConnect%2A> возврата.</span><span class="sxs-lookup"><span data-stu-id="660fe-1621">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginConnect%2A> returns.</span></span> <span data-ttu-id="660fe-1622">Метод обратного вызова должен принять <xref:System.IAsyncResult> значение, возвращенное <xref:System.Net.Sockets.Socket.BeginConnect%2A> методом в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1622">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="660fe-1623">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult> параметра, чтобы получить объект <xref:System.Net.Sockets.Socket> , для которого выполняется попытка подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1623">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the <xref:System.Net.Sockets.Socket> on which the connection attempt is being made.</span></span> <span data-ttu-id="660fe-1624">После получения <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndConnect%2A> вызвать метод для успешного завершения попытки подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1624">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndConnect%2A> method to successfully complete the connection attempt.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1625">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1625">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1626">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1626">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1627">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1627">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1628">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1628">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1629">В следующем примере кода завершается асинхронная попытки подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1629">The following code example ends the asynchronous connection attempt.</span></span> <span data-ttu-id="660fe-1630">Полный пример, демонстрирующий асинхронную связь с сокетами, см. в статье [примеры кода для сокетов](~/docs/framework/network-programming/socket-code-examples.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1630">For a complete example that demonstrates asynchronous communications with sockets, see [Socket Code Examples](~/docs/framework/network-programming/socket-code-examples.md).</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#5)]
 [!code-csharp[Socket_Async_Send_Receive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#5)]
 [!code-vb[Socket_Async_Send_Receive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1631">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1631"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1632">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1632"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1633">Метод <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> был ранее вызван для асинхронного подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1633"><see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> was previously called for the asynchronous connection.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1634">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1634">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1635"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1635">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
      </Docs>
    </Member>
    <Member MemberName="EndDisconnect">
      <MemberSignature Language="C#" Value="public void EndDisconnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndDisconnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisconnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisconnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndDisconnect : IAsyncResult -&gt; unit" Usage="socket.EndDisconnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1636">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1636">An <see cref="T:System.IAsyncResult" /> object that stores state information and any user-defined data for this asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1637">Завершает ожидающий асинхронный запрос на разъединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1637">Ends a pending asynchronous disconnect request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1638"><xref:System.Net.Sockets.Socket.EndDisconnect%2A>завершает вызов <xref:System.Net.Sockets.Socket.BeginDisconnect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1638"><xref:System.Net.Sockets.Socket.EndDisconnect%2A> completes a call to <xref:System.Net.Sockets.Socket.BeginDisconnect%2A>.</span></span> <span data-ttu-id="660fe-1639"><xref:System.Net.Sockets.Socket.EndDisconnect%2A> Метод блокируется до завершения отключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1639">The <xref:System.Net.Sockets.Socket.EndDisconnect%2A> method blocks until the disconnect completes.</span></span> <span data-ttu-id="660fe-1640">Дополнительные сведения об асинхронных операциях см. в разделе Общие сведения о асинхронном программировании в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="660fe-1640">For information about asynchronous operations, see the Asynchronous Programming Overview topic in the MSDN library.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1641">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1641">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1642">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1642">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1643">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1643">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1644">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1644">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1645">В следующем примере кода создается сокет для асинхронного взаимодействия и данные отправляются на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-1645">The following code example creates a socket for asynchronous communication and sends some data to a remote host.</span></span> <span data-ttu-id="660fe-1646">При отправке <xref:System.Net.Sockets.Socket.Shutdown%2A> данных вызывается для завершения действия Send и Receive.</span><span class="sxs-lookup"><span data-stu-id="660fe-1646">When the data has been sent, <xref:System.Net.Sockets.Socket.Shutdown%2A> is called to stop the send and receive activity.</span></span> <span data-ttu-id="660fe-1647">Затем <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> вызывается для начала запроса на отключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1647">Then <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> is called to begin a disconnect request.</span></span> <span data-ttu-id="660fe-1648">Делегат обратного вызова <xref:System.Net.Sockets.Socket.EndDisconnect%2A> вызывает метод для завершения асинхронного запроса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1648">The callback delegate calls <xref:System.Net.Sockets.Socket.EndDisconnect%2A> to end the asynchronous request.</span></span> <span data-ttu-id="660fe-1649">По завершении запроса <xref:System.Net.Sockets.Socket.Connected%2A> свойство запрашивается, чтобы проверить, отключен ли сокет.</span><span class="sxs-lookup"><span data-stu-id="660fe-1649">When the request completes, the <xref:System.Net.Sockets.Socket.Connected%2A> property is queried to test whether the socket is disconnected.</span></span>  
  
 [!code-cpp[Nclsocketenhancements#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#11)]
 [!code-csharp[Nclsocketenhancements#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1650">Используется операционная система Windows 2000 или более ранняя версия, а для этого метода необходима операционная система Windows XP.</span><span class="sxs-lookup"><span data-stu-id="660fe-1650">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1651">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1651">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1652">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1652"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1653">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1653"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1654">Метод <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> был ранее вызван для асинхронного подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1654"><see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> was previously called for the asynchronous connection.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1655">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1655">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="660fe-1656">Истекло время ожидания для запроса на разъединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1656">The disconnect request has timed out.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndReceive">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-1657">Завершает отложенное асинхронное чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1657">Ends a pending asynchronous read.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public int EndReceive (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceive(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult) As Integer" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceive(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public int EndReceive (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceive(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (result As IAsyncResult) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceive(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult -&gt; int" Usage="socket.EndReceive result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1658">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1658">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <param name="result"><span data-ttu-id="660fe-1659">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1659">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1660">Завершает отложенное асинхронное чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1660">Ends a pending asynchronous read.</span></span></summary>
        <returns><span data-ttu-id="660fe-1661">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1661">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1662">Метод завершает операцию асинхронного чтения, запущенную <xref:System.Net.Sockets.Socket.BeginReceive%2A> в методе. <xref:System.Net.Sockets.Socket.EndReceive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1662">The <xref:System.Net.Sockets.Socket.EndReceive%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1663">Перед вызовом <xref:System.Net.Sockets.Socket.BeginReceive%2A>необходимо создать метод обратного вызова, который <xref:System.AsyncCallback> реализует делегат.</span><span class="sxs-lookup"><span data-stu-id="660fe-1663">Before calling <xref:System.Net.Sockets.Socket.BeginReceive%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1664">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после <xref:System.Net.Sockets.Socket.BeginReceive%2A> возврата.</span><span class="sxs-lookup"><span data-stu-id="660fe-1664">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginReceive%2A> returns.</span></span> <span data-ttu-id="660fe-1665">Метод обратного вызова должен принять <xref:System.IAsyncResult> значение, возвращенное <xref:System.Net.Sockets.Socket.BeginReceive%2A> методом в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1665">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="660fe-1666">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult> класса, чтобы получить объект <xref:System.Net.Sockets.Socket.BeginReceive%2A> состояния, переданный в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1666">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span> <span data-ttu-id="660fe-1667">Извлеките получение <xref:System.Net.Sockets.Socket> из этого объекта состояния.</span><span class="sxs-lookup"><span data-stu-id="660fe-1667">Extract the receiving <xref:System.Net.Sockets.Socket> from this state object.</span></span> <span data-ttu-id="660fe-1668">После получения объекта <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndReceive%2A> вызвать метод для успешного завершения операции чтения и возврата числа считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1668">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndReceive%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="660fe-1669"><xref:System.Net.Sockets.Socket.EndReceive%2A> Метод будет блокироваться до тех пор, пока данные недоступны.</span><span class="sxs-lookup"><span data-stu-id="660fe-1669">The <xref:System.Net.Sockets.Socket.EndReceive%2A> method will block until data is available.</span></span> <span data-ttu-id="660fe-1670">Если используется протокол без установления соединения, будет <xref:System.Net.Sockets.Socket.EndReceive%2A> считывать первые поставленные в очередь датаграммы, доступные во входящем сетевом буфере.</span><span class="sxs-lookup"><span data-stu-id="660fe-1670">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndReceive%2A> will read the first enqueued datagram available in the incoming network buffer.</span></span> <span data-ttu-id="660fe-1671">При использовании протокола, ориентированного на соединение, <xref:System.Net.Sockets.Socket.EndReceive%2A> метод будет считывать столько данных, сколько доступно до числа байтов, указанного `size` в параметре <xref:System.Net.Sockets.Socket.BeginReceive%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1671">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.EndReceive%2A> method will read as much data as is available up to the number of bytes you specified in the `size` parameter of the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span> <span data-ttu-id="660fe-1672">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.EndReceive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-1672">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.EndReceive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-1673">Чтобы получить полученные данные, вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult>объекта и извлеките буфер, содержащийся в результирующем объекте состояния.</span><span class="sxs-lookup"><span data-stu-id="660fe-1673">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
 <span data-ttu-id="660fe-1674">Чтобы отменить ожидание <xref:System.Net.Sockets.Socket.BeginReceive%2A>, <xref:System.Net.Sockets.Socket.Close%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1674">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1675">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1675">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1676">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1676">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1677">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-1677">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-1678">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1678">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1679">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1679">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1680">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1680">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1681">В следующем примере кода завершается ожидание асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1681">The following code example ends a pending asynchronous read.</span></span> <span data-ttu-id="660fe-1682">Полный пример, демонстрирующий асинхронную связь с сокетами, см. в статье [примеры кода для сокетов](~/docs/framework/network-programming/socket-code-examples.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1682">For a complete example that demonstrates asynchronous communications with sockets, see [Socket Code Examples](~/docs/framework/network-programming/socket-code-examples.md).</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#8)]
 [!code-csharp[Socket_Async_Send_Receive#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#8)]
 [!code-vb[Socket_Async_Send_Receive#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1683"><paramref name="asyncResult" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1683"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1684">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1684"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1685">Метод <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> был ранее вызван для асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1685"><see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1686">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1686">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1687"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1687">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public int EndReceive (IAsyncResult asyncResult, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceive(class System.IAsyncResult asyncResult, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef errorCode As SocketError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceive(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult *  -&gt; int" Usage="socket.EndReceive (asyncResult, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1688">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1688">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-1689">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1689">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <summary><span data-ttu-id="660fe-1690">Завершает отложенное асинхронное чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1690">Ends a pending asynchronous read.</span></span></summary>
        <returns><span data-ttu-id="660fe-1691">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1691">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1692">Метод завершает операцию асинхронного чтения, запущенную <xref:System.Net.Sockets.Socket.BeginReceive%2A> в методе. <xref:System.Net.Sockets.Socket.EndReceive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1692">The <xref:System.Net.Sockets.Socket.EndReceive%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1693">Перед вызовом <xref:System.Net.Sockets.Socket.BeginReceive%2A>необходимо создать метод обратного вызова, который <xref:System.AsyncCallback> реализует делегат.</span><span class="sxs-lookup"><span data-stu-id="660fe-1693">Before calling <xref:System.Net.Sockets.Socket.BeginReceive%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1694">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после <xref:System.Net.Sockets.Socket.BeginReceive%2A> возврата.</span><span class="sxs-lookup"><span data-stu-id="660fe-1694">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginReceive%2A> returns.</span></span> <span data-ttu-id="660fe-1695">Метод обратного вызова должен принять <xref:System.IAsyncResult> значение, возвращенное <xref:System.Net.Sockets.Socket.BeginReceive%2A> методом в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1695">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="660fe-1696">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult> класса, чтобы получить объект <xref:System.Net.Sockets.Socket.BeginReceive%2A> состояния, переданный в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1696">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span> <span data-ttu-id="660fe-1697">Извлеките получение <xref:System.Net.Sockets.Socket> из этого объекта состояния.</span><span class="sxs-lookup"><span data-stu-id="660fe-1697">Extract the receiving <xref:System.Net.Sockets.Socket> from this state object.</span></span> <span data-ttu-id="660fe-1698">После получения объекта <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndReceive%2A> вызвать метод для успешного завершения операции чтения и возврата числа считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1698">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndReceive%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="660fe-1699"><xref:System.Net.Sockets.Socket.EndReceive%2A> Метод будет блокироваться до тех пор, пока данные недоступны.</span><span class="sxs-lookup"><span data-stu-id="660fe-1699">The <xref:System.Net.Sockets.Socket.EndReceive%2A> method will block until data is available.</span></span> <span data-ttu-id="660fe-1700">Если используется протокол без установления соединения, будет <xref:System.Net.Sockets.Socket.EndReceive%2A> считывать первые поставленные в очередь датаграммы, доступные во входящем сетевом буфере.</span><span class="sxs-lookup"><span data-stu-id="660fe-1700">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndReceive%2A> will read the first enqueued datagram available in the incoming network buffer.</span></span> <span data-ttu-id="660fe-1701">При использовании протокола, ориентированного на соединение, <xref:System.Net.Sockets.Socket.EndReceive%2A> метод будет считывать столько данных, сколько доступно до числа байтов, указанного `size` в параметре <xref:System.Net.Sockets.Socket.BeginReceive%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1701">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.EndReceive%2A> method will read as much data as is available up to the number of bytes you specified in the `size` parameter of the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span> <span data-ttu-id="660fe-1702">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.EndReceive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-1702">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.EndReceive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-1703">Чтобы получить полученные данные, вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult>объекта и извлеките буфер, содержащийся в результирующем объекте состояния.</span><span class="sxs-lookup"><span data-stu-id="660fe-1703">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1704">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1704">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1705">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1705">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1706">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-1706">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-1707">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1707">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1708">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1708">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1709">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1709">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1710">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1710"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1711">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1711"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1712">Метод <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> был ранее вызван для асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1712"><see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1713">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1713">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1714"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1714">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFrom">
      <MemberSignature Language="C#" Value="public int EndReceiveFrom (IAsyncResult asyncResult, ref System.Net.EndPoint endPoint);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFrom(class System.IAsyncResult asyncResult, class System.Net.EndPoint&amp; endPoint) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFrom (asyncResult As IAsyncResult, ByRef endPoint As EndPoint) As Integer" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFrom(IAsyncResult ^ asyncResult, System::Net::EndPoint ^ % endPoint);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public int EndReceiveFrom (IAsyncResult result, ref System.Net.EndPoint end_point);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFrom(class System.IAsyncResult result, class System.Net.EndPoint&amp; end_point) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFrom (result As IAsyncResult, ByRef end_point As EndPoint) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFrom(IAsyncResult ^ result, System::Net::EndPoint ^ % end_point);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFrom : IAsyncResult *  -&gt; int" Usage="socket.EndReceiveFrom (result, end_point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="endPoint" Type="System.Net.EndPoint" RefType="ref" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="end_point" Type="System.Net.EndPoint" RefType="ref" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1715">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1715">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <param name="result"><span data-ttu-id="660fe-1716">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1716">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <param name="endPoint"><span data-ttu-id="660fe-1717">Источник <see cref="T:System.Net.EndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1717">The source <see cref="T:System.Net.EndPoint" />.</span></span></param>
        <param name="end_point"><span data-ttu-id="660fe-1718">Источник <see cref="T:System.Net.EndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1718">The source <see cref="T:System.Net.EndPoint" />.</span></span></param>
        <summary><span data-ttu-id="660fe-1719">Завершает отложенное асинхронное чтение с определенной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1719">Ends a pending asynchronous read from a specific endpoint.</span></span></summary>
        <returns><span data-ttu-id="660fe-1720">Количество полученных байтов, если операция успешно выполнена.</span><span class="sxs-lookup"><span data-stu-id="660fe-1720">If successful, the number of bytes received.</span></span> <span data-ttu-id="660fe-1721">Возвращает значение 0, если операция завершилась неудачей.</span><span class="sxs-lookup"><span data-stu-id="660fe-1721">If unsuccessful, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1722">Метод завершает операцию асинхронного чтения, запущенную <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> в методе. <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1722">The <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1723">Перед вызовом <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>необходимо создать метод обратного вызова, который <xref:System.AsyncCallback> реализует делегат.</span><span class="sxs-lookup"><span data-stu-id="660fe-1723">Before calling <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1724">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> возврата.</span><span class="sxs-lookup"><span data-stu-id="660fe-1724">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> returns.</span></span> <span data-ttu-id="660fe-1725">Метод обратного вызова должен принять <xref:System.IAsyncResult> значение, возвращенное <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> методом в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1725">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="660fe-1726">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult> класса, чтобы получить объект <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> состояния, переданный в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1726">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-1727">Извлеките получение <xref:System.Net.Sockets.Socket> из этого объекта состояния.</span><span class="sxs-lookup"><span data-stu-id="660fe-1727">Extract the receiving <xref:System.Net.Sockets.Socket> from this state object.</span></span> <span data-ttu-id="660fe-1728">После получения объекта <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> вызвать метод для успешного завершения операции чтения и возврата числа считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1728">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="660fe-1729"><xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> Метод будет блокироваться до тех пор, пока данные недоступны.</span><span class="sxs-lookup"><span data-stu-id="660fe-1729">The <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="660fe-1730">Если используется протокол без установления соединения, будет <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> считывать первые поставленные в очередь датаграммы, доступные во входящем сетевом буфере.</span><span class="sxs-lookup"><span data-stu-id="660fe-1730">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> will read the first enqueued datagram available in the incoming network buffer.</span></span> <span data-ttu-id="660fe-1731">При использовании протокола, ориентированного на соединение, <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> метод будет считывать столько данных, сколько доступно до числа байтов, указанного `size` в параметре <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1731">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method will read as much data as is available up to the number of bytes you specified in the `size` parameter of the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-1732">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-1732">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span> <span data-ttu-id="660fe-1733">Чтобы получить полученные данные, вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult> объекта и извлеките буфер, содержащийся в результирующем объекте состояния.</span><span class="sxs-lookup"><span data-stu-id="660fe-1733">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> object, and extract the buffer contained in the resulting state object.</span></span> <span data-ttu-id="660fe-1734">Чтобы найти исходный узел, извлеките <xref:System.Net.EndPoint> и приведите его <xref:System.Net.IPEndPoint>к типу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1734">To identify the originating host, extract the <xref:System.Net.EndPoint> and cast it to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="660fe-1735">Используйте метод, чтобы получить IP-адрес <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> и метод для получения номера порта. <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-1735">Use the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> method to obtain the IP address and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> method to obtain the port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1736">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1736">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1737">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1737">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1738">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1738">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1739">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1739">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1740">В следующем примере кода завершается ожидание асинхронного чтения из <xref:System.Net.EndPoint>указанного.</span><span class="sxs-lookup"><span data-stu-id="660fe-1740">The following code example ends a pending asynchronous read from a specific <xref:System.Net.EndPoint>.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#10)]
 [!code-csharp[Socket_Async_Send_Receive#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#10)]
 [!code-vb[Socket_Async_Send_Receive#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1741"><paramref name="asyncResult" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1741"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1742">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1742"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1743">Метод <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> был ранее вызван для асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1743"><see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1744">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1744">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1745"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1745">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveMessageFrom">
      <MemberSignature Language="C#" Value="public int EndReceiveMessageFrom (IAsyncResult asyncResult, ref System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint endPoint, out System.Net.Sockets.IPPacketInformation ipPacketInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveMessageFrom(class System.IAsyncResult asyncResult, valuetype System.Net.Sockets.SocketFlags&amp; socketFlags, class System.Net.EndPoint&amp; endPoint, [out] valuetype System.Net.Sockets.IPPacketInformation&amp; ipPacketInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveMessageFrom (asyncResult As IAsyncResult, ByRef socketFlags As SocketFlags, ByRef endPoint As EndPoint, ByRef ipPacketInformation As IPPacketInformation) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveMessageFrom(IAsyncResult ^ asyncResult, System::Net::Sockets::SocketFlags % socketFlags, System::Net::EndPoint ^ % endPoint, [Runtime::InteropServices::Out] System::Net::Sockets::IPPacketInformation % ipPacketInformation);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveMessageFrom : IAsyncResult *  *  *  -&gt; int" Usage="socket.EndReceiveMessageFrom (asyncResult, socketFlags, endPoint, ipPacketInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" RefType="ref" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="endPoint" Type="System.Net.EndPoint" RefType="ref" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ipPacketInformation" Type="System.Net.Sockets.IPPacketInformation" RefType="out" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1746">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1746">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-1747">Поразрядное сочетание значений перечисления <see cref="T:System.Net.Sockets.SocketFlags" /> для принятого пакета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1747">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values for the received packet.</span></span></param>
        <param name="endPoint"><span data-ttu-id="660fe-1748">Источник <see cref="T:System.Net.EndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1748">The source <see cref="T:System.Net.EndPoint" />.</span></span></param>
        <param name="ipPacketInformation"><span data-ttu-id="660fe-1749">Объект <see cref="T:System.Net.IPAddress" /> и интерфейс полученного пакета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1749">The <see cref="T:System.Net.IPAddress" /> and interface of the received packet.</span></span></param>
        <summary><span data-ttu-id="660fe-1750">Завершает отложенное асинхронное чтение с определенной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1750">Ends a pending asynchronous read from a specific endpoint.</span></span> <span data-ttu-id="660fe-1751">Этот метод также показывает больше информации о пакете, чем метод <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1751">This method also reveals more information about the packet than <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-1752">Количество полученных байтов, если операция успешно выполнена.</span><span class="sxs-lookup"><span data-stu-id="660fe-1752">If successful, the number of bytes received.</span></span> <span data-ttu-id="660fe-1753">Возвращает значение 0, если операция завершилась неудачей.</span><span class="sxs-lookup"><span data-stu-id="660fe-1753">If unsuccessful, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1754">Если операция не завершена, этот метод блокируется до тех пор, пока он не завершится.</span><span class="sxs-lookup"><span data-stu-id="660fe-1754">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="660fe-1755">Чтобы выполнить эту операцию синхронно, используйте <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1755">To perform this operation synchronously, use the <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-1756">Проверьте `ipPacketInformation` , нужно ли узнать, была ли датаграмма отправлена с помощью одноадресного, многоадресного или широковещательного адреса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1756">Examine `ipPacketInformation` if you need to know if the datagram was sent using a unicast, multicast, or broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1757"><paramref name="asyncResult" /> равно <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="660fe-1757"><paramref name="asyncResult" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="660fe-1758">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-1758">-or-</span></span> 
 <span data-ttu-id="660fe-1759"><paramref name="endPoint" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1759"><paramref name="endPoint" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1760">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1760"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1761">Метод <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> был ранее вызван для асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="660fe-1761"><see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1762">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1762">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1763"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1763">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-1764">Завершает отложенную операцию асинхронной передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1764">Ends a pending asynchronous send.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (result As IAsyncResult) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult -&gt; int" Usage="socket.EndSend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1765">Объект <see cref="T:System.IAsyncResult" />, хранящий сведения о состоянии этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1765">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation.</span></span></param>
        <param name="result"><span data-ttu-id="660fe-1766">Объект <see cref="T:System.IAsyncResult" />, хранящий сведения о состоянии этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1766">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1767">Завершает отложенную операцию асинхронной передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1767">Ends a pending asynchronous send.</span></span></summary>
        <returns><span data-ttu-id="660fe-1768">Если операция завершилась успешно — значение количества байтов, переданных в объект <see cref="T:System.Net.Sockets.Socket" />; в противном случае — ошибка, указывающая на недопустимость объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1768">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1769"><xref:System.Net.Sockets.Socket.EndSend%2A>завершает операцию асинхронной отправки, запущенную <xref:System.Net.Sockets.Socket.BeginSend%2A>в.</span><span class="sxs-lookup"><span data-stu-id="660fe-1769"><xref:System.Net.Sockets.Socket.EndSend%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.Socket.BeginSend%2A>.</span></span>  
  
 <span data-ttu-id="660fe-1770">Перед вызовом <xref:System.Net.Sockets.Socket.BeginSend%2A>необходимо создать метод обратного вызова, который <xref:System.AsyncCallback> реализует делегат.</span><span class="sxs-lookup"><span data-stu-id="660fe-1770">Before calling <xref:System.Net.Sockets.Socket.BeginSend%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1771">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после <xref:System.Net.Sockets.Socket.BeginSend%2A> возврата.</span><span class="sxs-lookup"><span data-stu-id="660fe-1771">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginSend%2A> returns.</span></span> <span data-ttu-id="660fe-1772">Метод обратного вызова должен принять <xref:System.IAsyncResult> значение, возвращенное <xref:System.Net.Sockets.Socket.BeginSend%2A> методом в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1772">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginSend%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="660fe-1773">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult> параметра, чтобы получить отправку <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1773">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the sending <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1774">После получения объекта <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndSend%2A> вызвать метод для успешного завершения операции отправки и возврата числа отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1774">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndSend%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="660fe-1775">Если используется протокол без установления соединения, <xref:System.Net.Sockets.Socket.EndSend%2A> будет блокироваться до отправки датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-1775">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndSend%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="660fe-1776">При использовании протокола, ориентированного на соединение, <xref:System.Net.Sockets.Socket.EndSend%2A> блокируется до отправки некоторых буферов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1776">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.EndSend%2A> will block until some of the buffer was sent.</span></span> <span data-ttu-id="660fe-1777">Если возвращаемое значение из <xref:System.Net.Sockets.Socket.EndSend%2A> указывает, что буфер не был полностью отправлен, <xref:System.Net.Sockets.Socket.BeginSend%2A> вызовите метод еще раз, изменив буфер для хранения неотправленных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1777">If the return value from <xref:System.Net.Sockets.Socket.EndSend%2A> indicates that the buffer was not completely sent, call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method again, modifying the buffer to hold the unsent data.</span></span>  
  
 <span data-ttu-id="660fe-1778">Нет никакой гарантии, что отправленные данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1778">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-1779">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-1779">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-1780">Успешное завершение <xref:System.Net.Sockets.Socket.BeginSend%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-1780">A successful completion of the <xref:System.Net.Sockets.Socket.BeginSend%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1781">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1781">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1782">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1782">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1783">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-1783">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-1784">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1784">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1785">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-1785">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-1786">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-1786">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1787">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1787">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1788">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1788">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1789">В следующем примере кода завершается отложенная асинхронная отправка.</span><span class="sxs-lookup"><span data-stu-id="660fe-1789">The following code example ends a pending asynchronous send.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#6)]
 [!code-csharp[Socket_Async_Send_Receive#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#6)]
 [!code-vb[Socket_Async_Send_Receive#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1790">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1790"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1791">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1791"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1792">Метод <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> был ранее вызван для асинхронной передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1792"><see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous send.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1793">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1793">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1794"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1794">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.NoDelay" />
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult, ByRef errorCode As SocketError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult *  -&gt; int" Usage="socket.EndSend (asyncResult, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1795">Объект <see cref="T:System.IAsyncResult" />, хранящий сведения о состоянии этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1795">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-1796">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1796">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <summary><span data-ttu-id="660fe-1797">Завершает отложенную операцию асинхронной передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1797">Ends a pending asynchronous send.</span></span></summary>
        <returns><span data-ttu-id="660fe-1798">Если операция завершилась успешно — значение количества байтов, переданных в объект <see cref="T:System.Net.Sockets.Socket" />; в противном случае — ошибка, указывающая на недопустимость объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1798">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1799"><xref:System.Net.Sockets.Socket.EndSend%2A>завершает операцию асинхронной отправки, запущенную <xref:System.Net.Sockets.Socket.BeginSend%2A>в.</span><span class="sxs-lookup"><span data-stu-id="660fe-1799"><xref:System.Net.Sockets.Socket.EndSend%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.Socket.BeginSend%2A>.</span></span>  
  
 <span data-ttu-id="660fe-1800">Перед вызовом <xref:System.Net.Sockets.Socket.BeginSend%2A>необходимо создать метод обратного вызова, который <xref:System.AsyncCallback> реализует делегат.</span><span class="sxs-lookup"><span data-stu-id="660fe-1800">Before calling <xref:System.Net.Sockets.Socket.BeginSend%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1801">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после <xref:System.Net.Sockets.Socket.BeginSend%2A> возврата.</span><span class="sxs-lookup"><span data-stu-id="660fe-1801">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginSend%2A> returns.</span></span> <span data-ttu-id="660fe-1802">Метод обратного вызова должен принять <xref:System.IAsyncResult> значение, возвращенное <xref:System.Net.Sockets.Socket.BeginSend%2A> методом в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1802">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginSend%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="660fe-1803">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult> параметра, чтобы получить отправку <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1803">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the sending <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1804">После получения объекта <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndSend%2A> вызвать метод для успешного завершения операции отправки и возврата числа отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1804">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndSend%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="660fe-1805">Если используется протокол без установления соединения, <xref:System.Net.Sockets.Socket.EndSend%2A> будет блокироваться до отправки датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-1805">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndSend%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="660fe-1806">При использовании протокола, ориентированного на соединение, <xref:System.Net.Sockets.Socket.EndSend%2A> блокируется до отправки некоторых буферов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1806">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.EndSend%2A> will block until some of the buffer was sent.</span></span> <span data-ttu-id="660fe-1807">Если возвращаемое значение из <xref:System.Net.Sockets.Socket.EndSend%2A> указывает, что буфер не был полностью отправлен, <xref:System.Net.Sockets.Socket.BeginSend%2A> вызовите метод еще раз, изменив буфер для хранения неотправленных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1807">If the return value from <xref:System.Net.Sockets.Socket.EndSend%2A> indicates that the buffer was not completely sent, call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method again, modifying the buffer to hold the unsent data.</span></span>  
  
 <span data-ttu-id="660fe-1808">Нет никакой гарантии, что отправленные данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1808">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-1809">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-1809">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-1810">Успешное завершение <xref:System.Net.Sockets.Socket.BeginSend%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-1810">A successful completion of the <xref:System.Net.Sockets.Socket.BeginSend%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1811">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1811">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1812">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1812">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1813">Все операции ввода-вывода, инициированные данным потоком, отменяются при выходе из этого потока.</span><span class="sxs-lookup"><span data-stu-id="660fe-1813">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="660fe-1814">Незавершенная асинхронная операция может завершиться ошибкой, если поток завершается до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1814">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1815">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-1815">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-1816">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-1816">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1817">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1817">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1818">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1818">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1819"><paramref name="asyncResult" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1819"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1820">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1820"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1821">Метод <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> был ранее вызван для асинхронной передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1821"><see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous send.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1822">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1822">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1823"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1823">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.NoDelay" />
      </Docs>
    </Member>
    <Member MemberName="EndSendFile">
      <MemberSignature Language="C#" Value="public void EndSendFile (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendFile(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendFile (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendFile(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSendFile : IAsyncResult -&gt; unit" Usage="socket.EndSendFile asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1824">Объект <see cref="T:System.IAsyncResult" />, хранящий сведения о состоянии этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1824">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1825">Завершает отложенную операцию асинхронной передачи файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1825">Ends a pending asynchronous send of a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1826"><xref:System.Net.Sockets.Socket.EndSendFile%2A>завершает операцию асинхронной отправки, запущенную <xref:System.Net.Sockets.Socket.BeginSendFile%2A>в.</span><span class="sxs-lookup"><span data-stu-id="660fe-1826"><xref:System.Net.Sockets.Socket.EndSendFile%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.Socket.BeginSendFile%2A>.</span></span>  
  
 <span data-ttu-id="660fe-1827">Перед вызовом <xref:System.Net.Sockets.Socket.BeginSendFile%2A>необходимо создать метод обратного вызова, <xref:System.AsyncCallback> реализующий делегат.</span><span class="sxs-lookup"><span data-stu-id="660fe-1827">Before calling <xref:System.Net.Sockets.Socket.BeginSendFile%2A>, you must create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1828">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после <xref:System.Net.Sockets.Socket.BeginSendFile%2A> возврата.</span><span class="sxs-lookup"><span data-stu-id="660fe-1828">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginSendFile%2A> returns.</span></span> <span data-ttu-id="660fe-1829">Метод обратного вызова должен принимать <xref:System.IAsyncResult> объект <xref:System.Net.Sockets.Socket.BeginSendFile%2A> , возвращаемый методом, в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1829">The callback method must accept the <xref:System.IAsyncResult> object returned by the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="660fe-1830">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult> параметра, чтобы получить отправку <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1830">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the sending <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1831">После получения <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndSendFile%2A> вызвать метод для успешного завершения операции Send.</span><span class="sxs-lookup"><span data-stu-id="660fe-1831">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndSendFile%2A> method to successfully complete the send operation.</span></span>  
  
 <span data-ttu-id="660fe-1832">Если используется протокол без установления соединения, <xref:System.Net.Sockets.Socket.EndSendFile%2A> блокируется до отправки датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-1832">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndSendFile%2A> blocks until the datagram is sent.</span></span> <span data-ttu-id="660fe-1833">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.EndSendFile%2A> блокируется до отправки всего файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-1833">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.EndSendFile%2A> blocks until the entire file is sent.</span></span> <span data-ttu-id="660fe-1834">Нет никакой гарантии, что отправленные данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1834">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-1835">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-1835">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-1836">Успешное завершение <xref:System.Net.Sockets.Socket.BeginSendFile%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-1836">A successful completion of the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1837">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1837">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1838">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1838">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1839">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1839">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1840">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1840">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1841">Следующий пример кода создает и подключает сокет для асинхронного взаимодействия и начинает асинхронно отправлять файл "Text. txt" на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-1841">The following code example creates and connects a socket for asynchronous communication and begins sending the file "text.txt" asynchronously to the remote host.</span></span> <span data-ttu-id="660fe-1842">Вызовы <xref:System.Net.Sockets.Socket.EndSendFile%2A> делегата обратного вызова для завершения передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1842">The callback delegate calls <xref:System.Net.Sockets.Socket.EndSendFile%2A> to complete the transmission.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#9)]
 [!code-csharp[NCLSocketEnhancements#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-1843">Этот метод доступен только в Windows NT.</span><span class="sxs-lookup"><span data-stu-id="660fe-1843">Windows NT is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1844">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1844">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1845">Параметр <paramref name="asyncResult" /> пуст.</span><span class="sxs-lookup"><span data-stu-id="660fe-1845"><paramref name="asyncResult" /> is empty.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1846">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1846"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1847">Метод <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> был ранее вызван для асинхронной передачи объекта <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1847"><see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> was previously called for the asynchronous <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1848">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1848">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-1849">См. ниже примeчания к данному разделу.</span><span class="sxs-lookup"><span data-stu-id="660fe-1849">See remarks section below.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public int EndSendTo (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSendTo(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendTo (asyncResult As IAsyncResult) As Integer" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSendTo(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public int EndSendTo (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSendTo(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendTo (result As IAsyncResult) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSendTo(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndSendTo : IAsyncResult -&gt; int" Usage="socket.EndSendTo result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="660fe-1850">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1850">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <param name="result"><span data-ttu-id="660fe-1851">Объект <see cref="T:System.IAsyncResult" />, в котором хранятся сведения о состоянии и любые данные, определенные пользователем, для этой асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1851">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1852">Завершает отложенную операцию асинхронной отправки в определенное местоположение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1852">Ends a pending asynchronous send to a specific location.</span></span></summary>
        <returns><span data-ttu-id="660fe-1853">Если операция завершилась успешно — значение количества отправленных байтов; в противном случае — ошибка, указывающая на недопустимость объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1853">If successful, the number of bytes sent; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1854"><xref:System.Net.Sockets.Socket.EndSendTo%2A>завершает операцию асинхронной отправки, запущенную <xref:System.Net.Sockets.Socket.BeginSendTo%2A>в.</span><span class="sxs-lookup"><span data-stu-id="660fe-1854"><xref:System.Net.Sockets.Socket.EndSendTo%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span>  
  
 <span data-ttu-id="660fe-1855">Перед вызовом <xref:System.Net.Sockets.Socket.BeginSendTo%2A>необходимо создать метод обратного вызова, который <xref:System.AsyncCallback> реализует делегат.</span><span class="sxs-lookup"><span data-stu-id="660fe-1855">Before calling <xref:System.Net.Sockets.Socket.BeginSendTo%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="660fe-1856">Этот метод обратного вызова выполняется в отдельном потоке и вызывается системой после <xref:System.Net.Sockets.Socket.BeginReceive%2A> возврата.</span><span class="sxs-lookup"><span data-stu-id="660fe-1856">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginReceive%2A> returns.</span></span> <span data-ttu-id="660fe-1857">Метод обратного вызова должен принять <xref:System.IAsyncResult> значение, возвращенное <xref:System.Net.Sockets.Socket.BeginSendTo%2A> методом в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1857">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="660fe-1858">В методе обратного вызова вызовите <xref:System.IAsyncResult.AsyncState%2A> метод <xref:System.IAsyncResult> параметра, чтобы получить отправку <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-1858">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the sending <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1859">После получения объекта <xref:System.Net.Sockets.Socket>можно <xref:System.Net.Sockets.Socket.EndSendTo%2A> вызвать метод для успешного завершения операции отправки и возврата числа отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1859">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndSendTo%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="660fe-1860">Если используется протокол без установления соединения, <xref:System.Net.Sockets.Socket.EndSendTo%2A> будет блокироваться до отправки датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-1860">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndSendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="660fe-1861">Если используется протокол, ориентированный на подключение, <xref:System.Net.Sockets.Socket.EndSendTo%2A> будет блокироваться до отправки запрошенного числа байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1861">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.EndSendTo%2A> will block until the requested number of bytes are sent.</span></span> <span data-ttu-id="660fe-1862">Нет никакой гарантии, что отправленные данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1862">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-1863">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-1863">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-1864">Успешное завершение <xref:System.Net.Sockets.Socket.BeginSendTo%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-1864">A successful completion of the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1865">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1865">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1866">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1866">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1867">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1867">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1868">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1868">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1869">В следующем примере кода завершается асинхронная отправка в определенное расположение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1869">The following code example ends an asynchronous send to a specific location.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#9)]
 [!code-csharp[Socket_Async_Send_Receive#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#9)]
 [!code-vb[Socket_Async_Send_Receive#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-1870">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1870"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-1871">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1871"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1872">Метод <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> был ранее вызван для асинхронной передачи.</span><span class="sxs-lookup"><span data-stu-id="660fe-1872"><see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> was previously called for the asynchronous send.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1873">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1873">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1874"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1874">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.Socket.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-1875">Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, разрешает ли объект <see cref="T:System.Net.Sockets.Socket" /> привязку к порту только одного процесса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1875">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> allows only one process to bind to a port.</span></span></summary>
        <value><span data-ttu-id="660fe-1876">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.Socket" /> разрешает привязку только одного сокета к определенному порту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1876"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> allows only one socket to bind to a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="660fe-1877">Значение по умолчанию — <see langword="true" /> для Windows Server 2003 и Windows XP с пакетом обновления 2 (SP2), а <see langword="false" /> также для всех остальных версий.</span><span class="sxs-lookup"><span data-stu-id="660fe-1877">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1878">Если <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> имеет `false`значение, то <xref:System.Net.Sockets.Socket.Bind%2A> несколько сокетов могут использовать метод для привязки к определенному порту, однако только один из них может выполнять операции с сетевым трафиком, отправляемым на порт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1878">If <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> is `false`, multiple sockets can use the <xref:System.Net.Sockets.Socket.Bind%2A> method to bind to a specific port; however only one of the sockets can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="660fe-1879">Если несколько сокетов пытаются использовать <xref:System.Net.Sockets.Socket.Bind%28System.Net.EndPoint%29> метод для привязки к определенному порту, то один из них с более конкретным IP-адресом будет работать с сетевым трафиком, отправляемым на этот порт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1879">If more than one socket attempts to use the <xref:System.Net.Sockets.Socket.Bind%28System.Net.EndPoint%29> method to bind to a particular port, then the one with the more specific IP address will handle the network traffic sent to that port.</span></span>  
  
 <span data-ttu-id="660fe-1880">Если <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> имеет `true`значение <xref:System.Net.Sockets.Socket.Bind%2A> , <xref:System.Net.Sockets.Socket.Bind%2A>  то первое использование метода для попытки привязки к определенному порту, независимо от IP-адреса, будет выполняться удачно; все последующие попытки использования метода для привязки к этому порту будут сбой до уничтожения исходного привязанного сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1880">If <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> is `true`, the first use of the <xref:System.Net.Sockets.Socket.Bind%2A> method to attempt to bind to a particular port, regardless of Internet Protocol (IP) address, will succeed; all subsequent uses of the <xref:System.Net.Sockets.Socket.Bind%2A> method to attempt to bind to that port will fail until the original bound socket is destroyed.</span></span>  
  
 <span data-ttu-id="660fe-1881">Это свойство должно быть задано <xref:System.Net.Sockets.Socket.Bind%2A> до вызова метода. <xref:System.InvalidOperationException> в противном случае будет выдано исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1881">This property must be set before <xref:System.Net.Sockets.Socket.Bind%2A> is called; otherwise an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1882">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-1882">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1883">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1883">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1884"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1884">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1885">Объект <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> вызван для этого объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1885"><see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> has been called for this <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Socket ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Socket ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="socket.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="660fe-1886">Освобождает ресурсы, используемые классом <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1886">Frees resources used by the <see cref="T:System.Net.Sockets.Socket" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1887">Финализатор класса вызывает метод, чтобы закрыть <xref:System.Net.Sockets.Socket> и свободные ресурсы, <xref:System.Net.Sockets.Socket>связанные с. <xref:System.Net.Sockets.Socket.Close%2A> <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="660fe-1887">The <xref:System.Net.Sockets.Socket> class finalizer calls the <xref:System.Net.Sockets.Socket.Close%2A> method to close the <xref:System.Net.Sockets.Socket> and free resources associated with the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="socket.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="660fe-1888">Возвращает хэш-значение для экземпляра <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1888">Returns a hash value for a <see cref="T:System.Net.Sockets.Socket" /> instance.</span></span></summary>
        <returns><span data-ttu-id="660fe-1889">Целочисленное хэш-значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1889">An integer hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="660fe-1890">Метод GetHashCode возвращает хэш-код этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1890">The GetHashCode method returns a hash code of this instance.</span></span> <span data-ttu-id="660fe-1891">Это значение можно использовать в качестве ключа в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="660fe-1891">This value can be used as a key in hash tables.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSocketOption">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-1892">Возвращает значение параметра <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1892">Returns the value of a <see cref="T:System.Net.Sockets.Socket" /> option.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSocketOption">
      <MemberSignature Language="C#" Value="public object GetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName);" />
      <MemberSignature Language="F#" Value="member this.GetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName -&gt; obj" Usage="socket.GetSocketOption (optionLevel, optionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="optionLevel"><span data-ttu-id="660fe-1893">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1893">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span></span></param>
        <param name="optionName"><span data-ttu-id="660fe-1894">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionName" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1894">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-1895">Возвращает значение указанного параметра <see cref="T:System.Net.Sockets.Socket" />, представленного в виде объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1895">Returns the value of a specified <see cref="T:System.Net.Sockets.Socket" /> option, represented as an object.</span></span></summary>
        <returns><span data-ttu-id="660fe-1896">Объект, который представляет значение параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1896">An object that represents the value of the option.</span></span> <span data-ttu-id="660fe-1897">Когда для параметра <paramref name="optionName" /> установлено значение <see cref="F:System.Net.Sockets.SocketOptionName.Linger" />, возвращаемое значение является экземпляром класса <see cref="T:System.Net.Sockets.LingerOption" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1897">When the <paramref name="optionName" /> parameter is set to <see cref="F:System.Net.Sockets.SocketOptionName.Linger" /> the return value is an instance of the <see cref="T:System.Net.Sockets.LingerOption" /> class.</span></span> <span data-ttu-id="660fe-1898">Когда для параметра <paramref name="optionName" /> задано значение <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> или <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />, возвращаемое значение является экземпляром класса <see cref="T:System.Net.Sockets.MulticastOption" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1898">When <paramref name="optionName" /> is set to <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> or <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />, the return value is an instance of the <see cref="T:System.Net.Sockets.MulticastOption" /> class.</span></span> <span data-ttu-id="660fe-1899">Когда для параметра <paramref name="optionName" /> задано любое другое значение, возвращаемое значение является целым числом.</span><span class="sxs-lookup"><span data-stu-id="660fe-1899">When <paramref name="optionName" /> is any other value, the return value is an integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1900"><xref:System.Net.Sockets.Socket>параметры определяют поведение текущего <xref:System.Net.Sockets.Socket>объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1900"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1901">Используйте эту перегрузку для <xref:System.Net.Sockets.SocketOptionName.Linger>получения <xref:System.Net.Sockets.SocketOptionName.AddMembership>параметров, <xref:System.Net.Sockets.SocketOptionName.DropMembership> и <xref:System.Net.Sockets.Socket> .</span><span class="sxs-lookup"><span data-stu-id="660fe-1901">Use this overload to get the <xref:System.Net.Sockets.SocketOptionName.Linger>, <xref:System.Net.Sockets.SocketOptionName.AddMembership>, and <xref:System.Net.Sockets.SocketOptionName.DropMembership><xref:System.Net.Sockets.Socket> options.</span></span> <span data-ttu-id="660fe-1902">Для параметра используйте <xref:System.Net.Sockets.Socket> для `optionLevel` параметра. <xref:System.Net.Sockets.SocketOptionName.Linger></span><span class="sxs-lookup"><span data-stu-id="660fe-1902">For the <xref:System.Net.Sockets.SocketOptionName.Linger> option, use <xref:System.Net.Sockets.Socket> for the `optionLevel` parameter.</span></span> <span data-ttu-id="660fe-1903">Для <xref:System.Net.Sockets.SocketOptionName.AddMembership> и <xref:System.Net.Sockets.SocketOptionName.DropMembership>используйте . <xref:System.Net.Sockets.SocketOptionLevel.IP></span><span class="sxs-lookup"><span data-stu-id="660fe-1903">For <xref:System.Net.Sockets.SocketOptionName.AddMembership> and <xref:System.Net.Sockets.SocketOptionName.DropMembership>, use <xref:System.Net.Sockets.SocketOptionLevel.IP>.</span></span> <span data-ttu-id="660fe-1904">Если вы хотите задать значение любого из перечисленных выше параметров, используйте <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-1904">If you want to set the value of any of the options listed above, use the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1905">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1905">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1906">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1906">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1907">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1907">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1908">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1908">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1909">В следующем примере кода <xref:System.Net.Sockets.LingerOption> извлекаются <xref:System.Net.Sockets.Socket.Send%2A> значения времени ожидания и отображаются в консоли.</span><span class="sxs-lookup"><span data-stu-id="660fe-1909">The following code example retrieves the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values and displays them to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1910">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1910">An error occurred when attempting to access the socket.</span></span>  
  
<span data-ttu-id="660fe-1911">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-1911">-or-</span></span> 
 <span data-ttu-id="660fe-1912">Для параметра <paramref name="optionName" /> было установлено неподдерживаемое значение <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1912"><paramref name="optionName" /> was set to the unsupported value <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1913"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1913">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
      </Docs>
    </Member>
    <Member MemberName="GetSocketOption">
      <MemberSignature Language="C#" Value="public void GetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, byte[] optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, unsigned int8[] optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, cli::array &lt;System::Byte&gt; ^ optionValue);" />
      <MemberSignature Language="F#" Value="member this.GetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * byte[] -&gt; unit" Usage="socket.GetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionValue" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="optionLevel"><span data-ttu-id="660fe-1914">Одно из значений <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1914">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span></span></param>
        <param name="optionName"><span data-ttu-id="660fe-1915">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionName" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1915">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span></span></param>
        <param name="optionValue"><span data-ttu-id="660fe-1916">Массив типа <see cref="T:System.Byte" />, который используется для отправки значения параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1916">An array of type <see cref="T:System.Byte" /> that is to receive the option setting.</span></span></param>
        <summary><span data-ttu-id="660fe-1917">Возвращает указанное значение параметра <see cref="T:System.Net.Sockets.Socket" />, представленного в виде байтового массива.</span><span class="sxs-lookup"><span data-stu-id="660fe-1917">Returns the specified <see cref="T:System.Net.Sockets.Socket" /> option setting, represented as a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1918"><xref:System.Net.Sockets.Socket>параметры определяют поведение текущего <xref:System.Net.Sockets.Socket>объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-1918"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-1919">После успешного завершения этого метода массив, заданный `optionValue` параметром, содержит значение указанного <xref:System.Net.Sockets.Socket> параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-1919">Upon successful completion of this method, the array specified by the `optionValue` parameter contains the value of the specified <xref:System.Net.Sockets.Socket> option.</span></span>  
  
 <span data-ttu-id="660fe-1920">Если длина `optionValue` массива меньше, чем число байтов, необходимых для хранения значения указанного <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.SocketException>параметра, <xref:System.Net.Sockets.Socket.GetSocketOption%2A> вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1920">When the length of the `optionValue` array is smaller than the number of bytes required to store the value of the specified <xref:System.Net.Sockets.Socket> option, <xref:System.Net.Sockets.Socket.GetSocketOption%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-1921">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1921">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1922">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1922">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="660fe-1923">Используйте эту перегрузку для всех сокетов, представленных логическими значениями или целыми числами.</span><span class="sxs-lookup"><span data-stu-id="660fe-1923">Use this overload for any sockets that are represented by Boolean values or integers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1924">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1924">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1925">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1925">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1926">В следующем примере кода <xref:System.Net.Sockets.LingerOption> извлекаются <xref:System.Net.Sockets.Socket.Send%2A> значения времени ожидания и отображаются в консоли.</span><span class="sxs-lookup"><span data-stu-id="660fe-1926">The following code example retrieves the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values and displays them to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1927">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1927">An error occurred when attempting to access the socket.</span></span>  
  
<span data-ttu-id="660fe-1928">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-1928">-or-</span></span> 
<span data-ttu-id="660fe-1929">В приложениях .NET Compact Framework для размера буферного пространства Windows CE установлено по умолчанию значение 32768 байт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1929">In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes.</span></span> <span data-ttu-id="660fe-1930">Можно изменить размер буферного пространства сокета, вызвав свойство <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1930">You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1931"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1931">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
      </Docs>
    </Member>
    <Member MemberName="GetSocketOption">
      <MemberSignature Language="C#" Value="public byte[] GetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, int optionLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, int32 optionLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionLength As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, int optionLength);" />
      <MemberSignature Language="F#" Value="member this.GetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * int -&gt; byte[]" Usage="socket.GetSocketOption (optionLevel, optionName, optionLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionLength" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="optionLevel"><span data-ttu-id="660fe-1932">Одно из значений <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1932">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span></span></param>
        <param name="optionName"><span data-ttu-id="660fe-1933">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionName" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1933">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span></span></param>
        <param name="optionLength"><span data-ttu-id="660fe-1934">Длина ожидаемого возвращаемого значения, указанная в байтах.</span><span class="sxs-lookup"><span data-stu-id="660fe-1934">The length, in bytes, of the expected return value.</span></span></param>
        <summary><span data-ttu-id="660fe-1935">Возвращает значение указанного параметра <see cref="T:System.Net.Sockets.Socket" /> в массиве.</span><span class="sxs-lookup"><span data-stu-id="660fe-1935">Returns the value of the specified <see cref="T:System.Net.Sockets.Socket" /> option in an array.</span></span></summary>
        <returns><span data-ttu-id="660fe-1936">Массив типа <see cref="T:System.Byte" />, который содержит значение параметра сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1936">An array of type <see cref="T:System.Byte" /> that contains the value of the socket option.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1937">`optionLength` Параметр задает максимальный размер возвращаемого массива байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1937">The `optionLength` parameter sets the maximum size of the returned byte array.</span></span> <span data-ttu-id="660fe-1938">Если значение параметра требует меньше байт, массив будет содержать только столько байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-1938">If the option value requires fewer bytes, the array will contain only that many bytes.</span></span> <span data-ttu-id="660fe-1939">Если значение параметра требует больше байтов, <xref:System.Net.Sockets.Socket.GetSocketOption%2A> то вызовет <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-1939">If the option value requires more bytes, <xref:System.Net.Sockets.Socket.GetSocketOption%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-1940">Используйте эту перегрузку для всех сокетов, представленных логическими значениями или целыми числами.</span><span class="sxs-lookup"><span data-stu-id="660fe-1940">Use this overload for any sockets that are represented by Boolean values or integers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1941">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1941">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1942">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1942">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1943">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1943">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1944">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1944">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1945">В следующем примере кода <xref:System.Net.Sockets.LingerOption> извлекаются <xref:System.Net.Sockets.Socket.Send%2A> значения времени ожидания и отображаются в консоли.</span><span class="sxs-lookup"><span data-stu-id="660fe-1945">The following code example retrieves the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values and displays them to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1946">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1946">An error occurred when attempting to access the socket.</span></span>  
  
<span data-ttu-id="660fe-1947">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-1947">-or-</span></span> 
<span data-ttu-id="660fe-1948">В приложениях .NET Compact Framework для размера буферного пространства Windows CE установлено по умолчанию значение 32768 байт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1948">In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes.</span></span> <span data-ttu-id="660fe-1949">Можно изменить размер буферного пространства сокета, вызвав свойство <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1949">You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1950"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1950">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Net.Sockets.Socket.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-1951">Возвращает дескриптор операционной системы для объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1951">Gets the operating system handle for the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="660fe-1952">Объект <see cref="T:System.IntPtr" />, представляющий дескриптор операционной системы для <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1952">An <see cref="T:System.IntPtr" /> that represents the operating system handle for the <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IOControl">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-1953">Задает низкоуровневые операционные режимы для объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1953">Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IOControl">
      <MemberSignature Language="C#" Value="public int IOControl (int ioControlCode, byte[] optionInValue, byte[] optionOutValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IOControl(int32 ioControlCode, unsigned int8[] optionInValue, unsigned int8[] optionOutValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function IOControl (ioControlCode As Integer, optionInValue As Byte(), optionOutValue As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IOControl(int ioControlCode, cli::array &lt;System::Byte&gt; ^ optionInValue, cli::array &lt;System::Byte&gt; ^ optionOutValue);" />
      <MemberSignature Language="F#" Value="member this.IOControl : int * byte[] * byte[] -&gt; int" Usage="socket.IOControl (ioControlCode, optionInValue, optionOutValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ioControlCode" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionInValue" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionOutValue" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="ioControlCode"><span data-ttu-id="660fe-1954">Значение <see cref="T:System.Int32" />, задающее код элемента управления для выполняемой операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1954">An <see cref="T:System.Int32" /> value that specifies the control code of the operation to perform.</span></span></param>
        <param name="optionInValue"><span data-ttu-id="660fe-1955">Массив <see cref="T:System.Byte" />, который содержит входные данные, необходимые для операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1955">A <see cref="T:System.Byte" /> array that contains the input data required by the operation.</span></span></param>
        <param name="optionOutValue"><span data-ttu-id="660fe-1956">Массив <see cref="T:System.Byte" />, который содержит выходные данные, необходимые для операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1956">A <see cref="T:System.Byte" /> array that contains the output data returned by the operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1957">Задает низкоуровневые операционные режимы для объекта <see cref="T:System.Net.Sockets.Socket" />, используя цифровые коды элементов управления.</span><span class="sxs-lookup"><span data-stu-id="660fe-1957">Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" /> using numerical control codes.</span></span></summary>
        <returns><span data-ttu-id="660fe-1958">Число байтов в параметре <paramref name="optionOutValue" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1958">The number of bytes in the <paramref name="optionOutValue" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1959">Метод предоставляет низкоуровневый доступ к операционной системе <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket> , лежащей в основе текущего экземпляра класса. <xref:System.Net.Sockets.Socket.IOControl%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1959">The <xref:System.Net.Sockets.Socket.IOControl%2A> method provides low-level access to the operating system <xref:System.Net.Sockets.Socket> underlying the current instance of the <xref:System.Net.Sockets.Socket> class.</span></span> <span data-ttu-id="660fe-1960">Дополнительные сведения см. в документации по [всаиоктл](/windows/desktop/api/winsock2/nf-winsock2-wsaioctl) .</span><span class="sxs-lookup"><span data-stu-id="660fe-1960">For more information, see the [WSAIoctl](/windows/desktop/api/winsock2/nf-winsock2-wsaioctl) documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1961">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1961">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1962">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1962">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1963">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1963">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1964">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1964">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1965">В следующем примере кода сравниваются результаты ФИОНРЕАД и доступного свойства.</span><span class="sxs-lookup"><span data-stu-id="660fe-1965">The following code example compares the results of FIONREAD and the Available property.</span></span>  
  
 [!code-cpp[NCLSocketIoControl#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketIoControl/CPP/iocontrolserver.cpp#1)]
 [!code-csharp[NCLSocketIoControl#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketIoControl/CS/iocontrolserver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1966">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1966">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1967"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1967">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1968">Была сделана попытка изменения блокирующего режима без использования свойства <see cref="P:System.Net.Sockets.Socket.Blocking" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1968">An attempt was made to change the blocking mode without using the <see cref="P:System.Net.Sockets.Socket.Blocking" /> property.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-1969">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-1969">A caller in the call stack does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="660fe-1970">для выполнения неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1970">to execute unmanaged code.</span></span> <span data-ttu-id="660fe-1971">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1971">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IOControl">
      <MemberSignature Language="C#" Value="public int IOControl (System.Net.Sockets.IOControlCode ioControlCode, byte[] optionInValue, byte[] optionOutValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IOControl(valuetype System.Net.Sockets.IOControlCode ioControlCode, unsigned int8[] optionInValue, unsigned int8[] optionOutValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IOControl(System::Net::Sockets::IOControlCode ioControlCode, cli::array &lt;System::Byte&gt; ^ optionInValue, cli::array &lt;System::Byte&gt; ^ optionOutValue);" />
      <MemberSignature Language="F#" Value="member this.IOControl : System.Net.Sockets.IOControlCode * byte[] * byte[] -&gt; int" Usage="socket.IOControl (ioControlCode, optionInValue, optionOutValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ioControlCode" Type="System.Net.Sockets.IOControlCode" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionInValue" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionOutValue" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="ioControlCode"><span data-ttu-id="660fe-1972">Значение <see cref="T:System.Net.Sockets.IOControlCode" />, задающее код элемента управления для выполняемой операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1972">A <see cref="T:System.Net.Sockets.IOControlCode" /> value that specifies the control code of the operation to perform.</span></span></param>
        <param name="optionInValue"><span data-ttu-id="660fe-1973">Массив типа <see cref="T:System.Byte" />, который содержит входные данные, необходимые для операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-1973">An array of type <see cref="T:System.Byte" /> that contains the input data required by the operation.</span></span></param>
        <param name="optionOutValue"><span data-ttu-id="660fe-1974">Массив типа <see cref="T:System.Byte" />, который содержит выходные данные, возвращенные операцией.</span><span class="sxs-lookup"><span data-stu-id="660fe-1974">An array of type <see cref="T:System.Byte" /> that contains the output data returned by the operation.</span></span></param>
        <summary><span data-ttu-id="660fe-1975">Задает низкоуровневые операционные режимы для объекта <see cref="T:System.Net.Sockets.Socket" />, используя перечисление <see cref="T:System.Net.Sockets.IOControlCode" />, чтобы указать коды элементов управления.</span><span class="sxs-lookup"><span data-stu-id="660fe-1975">Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" /> using the <see cref="T:System.Net.Sockets.IOControlCode" /> enumeration to specify control codes.</span></span></summary>
        <returns><span data-ttu-id="660fe-1976">Число байтов в параметре <paramref name="optionOutValue" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1976">The number of bytes in the <paramref name="optionOutValue" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1977">Этот метод обеспечивает низкоуровневый доступ к операционной системе <xref:System.Net.Sockets.Socket> , лежащей в основе текущего экземпляра <xref:System.Net.Sockets.Socket> класса.</span><span class="sxs-lookup"><span data-stu-id="660fe-1977">This method provides low-level access to the operating system <xref:System.Net.Sockets.Socket> underlying the current instance of the <xref:System.Net.Sockets.Socket> class.</span></span> <span data-ttu-id="660fe-1978">Дополнительные сведения см. в документации по [всаиоктл](/windows/desktop/api/winsock2/nf-winsock2-wsaioctl) .</span><span class="sxs-lookup"><span data-stu-id="660fe-1978">For more, see the [WSAIoctl](/windows/desktop/api/winsock2/nf-winsock2-wsaioctl) documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1979">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1979">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-1980">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1980">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-1981">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-1981">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-1982">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-1982">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1983">В следующем примере кода сравниваются результаты вызова метода <xref:System.Net.Sockets.Socket.IOControl%2A> с <xref:System.Net.Sockets.IOControlCode.DataToRead> и <xref:System.Net.Sockets.Socket.Available%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="660fe-1983">The following code example compares the results of calling <xref:System.Net.Sockets.Socket.IOControl%2A> with <xref:System.Net.Sockets.IOControlCode.DataToRead> and the <xref:System.Net.Sockets.Socket.Available%2A> property.</span></span>  
  
 [!code-cpp[NCLSocketIoControl1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketIoControl1/CPP/iocontrolcode.cpp#1)]
 [!code-csharp[NCLSocketIoControl1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketIoControl1/CS/iocontrolcode.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-1984">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-1984">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-1985"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-1985">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-1986">Была сделана попытка изменения блокирующего режима без использования свойства <see cref="P:System.Net.Sockets.Socket.Blocking" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1986">An attempt was made to change the blocking mode without using the <see cref="P:System.Net.Sockets.Socket.Blocking" /> property.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="660fe-1987">для выполнения неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="660fe-1987">to execute unmanaged code.</span></span> <span data-ttu-id="660fe-1988">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1988">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsBound">
      <MemberSignature Language="C#" Value="public bool IsBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBound" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.IsBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBound : bool" Usage="System.Net.Sockets.Socket.IsBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-1989">Получает значение, указывающее, привязан ли объект <see cref="T:System.Net.Sockets.Socket" /> к конкретному локальному порту.</span><span class="sxs-lookup"><span data-stu-id="660fe-1989">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.Socket" /> is bound to a specific local port.</span></span></summary>
        <value><span data-ttu-id="660fe-1990">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.Socket" /> привязан к локальному порту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-1990"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> is bound to a local port; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1991">Сокет считается привязанным к локальному порту <xref:System.Net.Sockets.Socket.Bind%2A> , если он явно привязан путем вызова метода или неявно привязан путем вызова членов, таких как <xref:System.Net.Sockets.Socket.Connect%2A>, или <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, <xref:System.Net.Sockets.Socket.SendTo%2A>которые используют временный локальный порт (свободный порт больше, чем 1024, выбранная операционной системой.) Серверы используют <xref:System.Net.Sockets.Socket.Bind%2A> метод для привязки к хорошо известному порту, чтобы клиенты могли подключаться к ним.</span><span class="sxs-lookup"><span data-stu-id="660fe-1991">A socket is considered bound to a local port if it is explicitly bound by calling the <xref:System.Net.Sockets.Socket.Bind%2A> method, or implicitly bound by calling members like <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.SendTo%2A>, or <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, which use an ephemeral local port (a free port greater than 1024, selected by the operating system.) Servers use the <xref:System.Net.Sockets.Socket.Bind%2A> method to bind to a well-known port so that clients may connect to them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-1992">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.IsBound%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-1992">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.IsBound%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.Socket.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-1993">Возвращает или задает значение, указывающее, будет ли объект <see cref="T:System.Net.Sockets.Socket" /> задерживать закрытие сокета при попытке отправки всех отложенных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-1993">Gets or sets a value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> will delay closing a socket in an attempt to send all pending data.</span></span></summary>
        <value><span data-ttu-id="660fe-1994">Объект <see cref="T:System.Net.Sockets.LingerOption" />, указывающий задержку при закрытии сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-1994">A <see cref="T:System.Net.Sockets.LingerOption" /> that specifies how to linger while closing a socket.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-1995">Свойство изменяет способ <xref:System.Net.Sockets.Socket.Close%2A> , которым ведет себя метод. <xref:System.Net.Sockets.Socket.LingerState%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-1995">The <xref:System.Net.Sockets.Socket.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="660fe-1996">Это свойство задается при изменении условий, при которых подключение может быть сброшено с помощью Winsock.</span><span class="sxs-lookup"><span data-stu-id="660fe-1996">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="660fe-1997">Сброс соединения по-прежнему может происходить в зависимости от поведения протокола IP.</span><span class="sxs-lookup"><span data-stu-id="660fe-1997">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="660fe-1998">Это свойство управляет длительностью времени, в течение которого соединение, ориентированное на соединение, остается открытым после вызова <xref:System.Net.Sockets.Socket.Close%2A> , когда данные остаются для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-1998">This property controls the length of time that a connection-oriented connection will remain open after a call to <xref:System.Net.Sockets.Socket.Close%2A> when data remains to be sent.</span></span>  
  
 <span data-ttu-id="660fe-1999">При вызове методов для отправки данных одноранговой сети эти данные помещаются в исходящий сетевой буфер.</span><span class="sxs-lookup"><span data-stu-id="660fe-1999">When you call methods to send data to a peer, this data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="660fe-2000">Это свойство можно использовать, чтобы убедиться, что эти данные отправляются на удаленный узел перед <xref:System.Net.Sockets.TcpClient.Close%2A> тем, как метод удалит подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2000">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="660fe-2001">Чтобы включить ожидание, создайте <xref:System.Net.Sockets.LingerOption> экземпляр, содержащий нужные значения, и <xref:System.Net.Sockets.Socket.LingerState%2A> присвойте свойству значение этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="660fe-2001">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.Socket.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="660fe-2002">В следующей таблице описывается <xref:System.Net.Sockets.Socket.Close%2A> поведение метода для возможных значений <xref:System.Net.Sockets.LingerOption.Enabled%2A> свойства и <xref:System.Net.Sockets.LingerOption.LingerTime%2A> свойство, хранящееся в <xref:System.Net.Sockets.Socket.LingerState%2A> свойстве.</span><span class="sxs-lookup"><span data-stu-id="660fe-2002">The following table describes the behavior of the <xref:System.Net.Sockets.Socket.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="660fe-2003">Линжерстате. Enabled</span><span class="sxs-lookup"><span data-stu-id="660fe-2003">LingerState.Enabled</span></span>|<span data-ttu-id="660fe-2004">Линжерстате. Линжертиме</span><span class="sxs-lookup"><span data-stu-id="660fe-2004">LingerState.LingerTime</span></span>|<span data-ttu-id="660fe-2005">Поведение</span><span class="sxs-lookup"><span data-stu-id="660fe-2005">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="660fe-2006">`false`(отключено), значение по умолчанию</span><span class="sxs-lookup"><span data-stu-id="660fe-2006">`false` (disabled), the default value</span></span>|<span data-ttu-id="660fe-2007">Время ожидания неприменимо (по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="660fe-2007">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="660fe-2008">Пытается отправить ожидающие данные до истечения времени ожидания протокола IP по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-2008">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="660fe-2009">`true`доступной</span><span class="sxs-lookup"><span data-stu-id="660fe-2009">`true` (enabled)</span></span>|<span data-ttu-id="660fe-2010">Ненулевое время ожидания</span><span class="sxs-lookup"><span data-stu-id="660fe-2010">A nonzero time-out</span></span>|<span data-ttu-id="660fe-2011">Пытается отправить ожидающие данные до истечения заданного времени ожидания. Если попытка не удалась, Winsock сбрасывает подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2011">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="660fe-2012">`true`доступной</span><span class="sxs-lookup"><span data-stu-id="660fe-2012">`true` (enabled)</span></span>|<span data-ttu-id="660fe-2013">Нулевое время ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-2013">A zero timeout.</span></span>|<span data-ttu-id="660fe-2014">Отменяет все ожидающие данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-2014">Discards any pending data.</span></span> <span data-ttu-id="660fe-2015">Для сокета, ориентированного на подключение (например, TCP), Winsock сбрасывает подключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2015">For connection-oriented socket (TCP, for example), Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="660fe-2016">В стеке IP-адресов используется период ожидания протокола IP по умолчанию, используемый в зависимости от времени кругового пути соединения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2016">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="660fe-2017">В большинстве случаев время ожидания, вычисленное стеком, больше релевантно, чем определено приложением.</span><span class="sxs-lookup"><span data-stu-id="660fe-2017">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="660fe-2018">Это поведение по умолчанию для сокета, если <xref:System.Net.Sockets.Socket.LingerState%2A> свойство не задано.</span><span class="sxs-lookup"><span data-stu-id="660fe-2018">This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="660fe-2019">Если свойство, хранящееся в свойстве, задано больше, чем время ожидания протокола IP по умолчанию, по умолчанию время ожидания протокола IP по-прежнему будет применяться и переопределено. <xref:System.Net.Sockets.Socket.LingerState%2A> <xref:System.Net.Sockets.LingerOption.LingerTime%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2019">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2020">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.LingerState%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2020">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.LingerState%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2021">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2021">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2022"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2022">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Listen">
      <MemberSignature Language="C#" Value="public void Listen (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Listen(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Listen (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Listen(int backlog);" />
      <MemberSignature Language="F#" Value="member this.Listen : int -&gt; unit" Usage="socket.Listen backlog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="backlog"><span data-ttu-id="660fe-2023">Максимальная длина очереди ожидающих подключений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2023">The maximum length of the pending connections queue.</span></span></param>
        <summary><span data-ttu-id="660fe-2024">Устанавливает объект <see cref="T:System.Net.Sockets.Socket" /> в состояние прослушивания.</span><span class="sxs-lookup"><span data-stu-id="660fe-2024">Places a <see cref="T:System.Net.Sockets.Socket" /> in a listening state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2025"><xref:System.Net.Sockets.Socket.Listen%2A>вызывает ориентированный <xref:System.Net.Sockets.Socket> на соединение объект для прослушивания входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2025"><xref:System.Net.Sockets.Socket.Listen%2A> causes a connection-oriented <xref:System.Net.Sockets.Socket> to listen for incoming connection attempts.</span></span> <span data-ttu-id="660fe-2026">`backlog` Параметр указывает число входящих подключений, которые могут быть поставлены в очередь на принятие.</span><span class="sxs-lookup"><span data-stu-id="660fe-2026">The `backlog` parameter specifies the number of incoming connections that can be queued for acceptance.</span></span> <span data-ttu-id="660fe-2027">Чтобы определить максимальное количество подключений, которое можно указать, извлеките <xref:System.Net.Sockets.SocketOptionName.MaxConnections> значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2027">To determine the maximum number of connections you can specify, retrieve the <xref:System.Net.Sockets.SocketOptionName.MaxConnections> value.</span></span> <span data-ttu-id="660fe-2028"><xref:System.Net.Sockets.Socket.Listen%2A>не блокируется.</span><span class="sxs-lookup"><span data-stu-id="660fe-2028"><xref:System.Net.Sockets.Socket.Listen%2A> does not block.</span></span>  
  
 <span data-ttu-id="660fe-2029">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2029">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2030">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2030">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="660fe-2031">Используйте <xref:System.Net.Sockets.Socket.Accept%2A> или <xref:System.Net.Sockets.Socket.BeginAccept%2A>  для принятия подключения из очереди.</span><span class="sxs-lookup"><span data-stu-id="660fe-2031">Use <xref:System.Net.Sockets.Socket.Accept%2A> or <xref:System.Net.Sockets.Socket.BeginAccept%2A> to accept a connection from the queue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2032">Необходимо вызвать <xref:System.Net.Sockets.Socket.Bind%2A> метод перед вызовом <xref:System.Net.Sockets.Socket.Listen%2A>метода или <xref:System.Net.Sockets.Socket.Listen%2A> будет вызывать исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2032">You must call the <xref:System.Net.Sockets.Socket.Bind%2A> method before calling <xref:System.Net.Sockets.Socket.Listen%2A>, or <xref:System.Net.Sockets.Socket.Listen%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2033">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2033">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2034">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2034">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2035">Параметр невыполненной работы ограничен различными значениями в зависимости от операционной системы.</span><span class="sxs-lookup"><span data-stu-id="660fe-2035">The backlog parameter is limited to different values depending on the Operating System.</span></span> <span data-ttu-id="660fe-2036">Вы можете указать более высокое значение, но невыполненная работа будет ограничена в зависимости от операционной системы.</span><span class="sxs-lookup"><span data-stu-id="660fe-2036">You may specify a higher value, but the backlog will be limited based on the Operating System.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2037">В следующем примере кода используется <xref:System.Net.Sockets.Socket> для прослушивания входящих подключений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2037">The following code example uses <xref:System.Net.Sockets.Socket> to listen for incoming connections.</span></span>  
  
 [!code-cpp[Classic Socket.Listen Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Listen Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Listen Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Listen Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Listen Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Listen Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2038">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2038">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2039"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2039">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />
        <altmember cref="M:System.Net.Sockets.Socket.Accept" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndPoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.EndPoint" Usage="System.Net.Sockets.Socket.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2040">Возвращает локальную конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-2040">Gets the local endpoint.</span></span></summary>
        <value><span data-ttu-id="660fe-2041">Объект <see cref="T:System.Net.EndPoint" />, который объект <see cref="T:System.Net.Sockets.Socket" /> использует для взаимодействий.</span><span class="sxs-lookup"><span data-stu-id="660fe-2041">The <see cref="T:System.Net.EndPoint" /> that the <see cref="T:System.Net.Sockets.Socket" /> is using for communications.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2042">Свойство получает объект <xref:System.Net.EndPoint> , содержащий локальный IP-адрес и номер <xref:System.Net.Sockets.Socket> порта, к которым привязана привязка. <xref:System.Net.Sockets.Socket.LocalEndPoint%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2042">The <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property gets an <xref:System.Net.EndPoint> that contains the local IP address and port number to which your <xref:System.Net.Sockets.Socket> is bound.</span></span> <span data-ttu-id="660fe-2043">Перед извлечением любой <xref:System.Net.EndPoint> информации необходимо <xref:System.Net.IPEndPoint> привести его к типу.</span><span class="sxs-lookup"><span data-stu-id="660fe-2043">You must cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint> before retrieving any information.</span></span> <span data-ttu-id="660fe-2044">Затем можно вызвать <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> метод, чтобы получить локальный <xref:System.Net.IPAddress>объект, и <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> метод для получения номера локального порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-2044">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> method to retrieve the local <xref:System.Net.IPAddress>, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> method to retrieve the local port number.</span></span>  
  
 <span data-ttu-id="660fe-2045">Свойство обычно задается после выполнения вызова <xref:System.Net.Sockets.Socket.Bind%2A> метода. <xref:System.Net.Sockets.Socket.LocalEndPoint%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2045">The <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property is usually set after you make a call to the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="660fe-2046">Если разрешить системе назначать локальный IP-адрес сокета и номер порта, это <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> свойство будет установлено после первой операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2046">If you allow the system to assign your socket's local IP address and port number, the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property will be set after the first I/O operation.</span></span> <span data-ttu-id="660fe-2047">Для протоколов, ориентированных на соединение, первая операция ввода-вывода будет вызывать <xref:System.Net.Sockets.Socket.Connect%2A> метод или. <xref:System.Net.Sockets.Socket.Accept%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2047">For connection-oriented protocols, the first I/O operation would be a call to the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2048">Для протоколов без подключения первая операция ввода-вывода будет иметь любой из вызовов Send или Receive.</span><span class="sxs-lookup"><span data-stu-id="660fe-2048">For connectionless protocols, the first I/O operation would be any of the send or receive calls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2049">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2049">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2050">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2050">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2051">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2051">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2052">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2052">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2053">В следующем примере кода извлекаются и отображаются локальные и удаленные конечные точки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2053">The following code example retrieves and displays the local and remote endpoints.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#4)]
 [!code-csharp[Socket_Socket_Options#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#4)]
 [!code-vb[Socket_Socket_Options#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2054">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2054">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2055"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2055">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.Socket.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2056">Возвращает или задает значение, указывающее, могут ли доставляться исходящие пакеты многоадресной рассылки в передающем приложении.</span><span class="sxs-lookup"><span data-stu-id="660fe-2056">Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</span></span></summary>
        <value><span data-ttu-id="660fe-2057">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.Socket" /> получает исходящие пакеты многоадресной рассылки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2057"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2058">Многоадресная рассылка — это масштабируемый метод для связи "многие ко многим" в Интернете.</span><span class="sxs-lookup"><span data-stu-id="660fe-2058">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="660fe-2059">Процесс подписывается на адрес многоадресной рассылки; Затем все пакеты, отправленные подписанным процессом, получаются любым другим процессом, подписанным на адрес многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2059">A process subscribes to a multicast address; then, any packets sent by a subscribed process are received by every other process subscribed to the multicast address.</span></span>  
  
 <span data-ttu-id="660fe-2060">Установка этого свойства для сокета протокола TCP не будет действовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-2060">Setting this property on a Transmission Control Protocol (TCP) socket will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2061">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.MulticastLoopback%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2061">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#2)]
 [!code-csharp[SocketPropertyTester#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2062">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2062">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2063"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2063">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.Socket.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2064">Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, используется ли поток <see cref="T:System.Net.Sockets.Socket" /> в алгоритме Nagle.</span><span class="sxs-lookup"><span data-stu-id="660fe-2064">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the stream <see cref="T:System.Net.Sockets.Socket" /> is using the Nagle algorithm.</span></span></summary>
        <value><span data-ttu-id="660fe-2065">Значение <see langword="false" />, если объект <see cref="T:System.Net.Sockets.Socket" /> использует алгоритм Nagle; в противном случае — значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2065"><see langword="false" /> if the <see cref="T:System.Net.Sockets.Socket" /> uses the Nagle algorithm; otherwise, <see langword="true" />.</span></span> <span data-ttu-id="660fe-2066">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2066">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2067">Алгоритм Nagle предназначен для уменьшения сетевого трафика, вызывая буферизацию небольших пакетов через сокет, а затем объединять и отсылать их в одном пакете при определенных обстоятельствах.</span><span class="sxs-lookup"><span data-stu-id="660fe-2067">The Nagle algorithm is designed to reduce network traffic by causing the socket to buffer small packets and then combine and send them in one packet under certain circumstances.</span></span> <span data-ttu-id="660fe-2068">Пакет TCP состоит из 40 байт заголовка и отправляемых данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2068">A TCP packet consists of 40 bytes of header plus the data being sent.</span></span> <span data-ttu-id="660fe-2069">Когда небольшие пакеты данных отправляются по протоколу TCP, накладные расходы, полученные из заголовка TCP, могут стать значительным частью сетевого трафика.</span><span class="sxs-lookup"><span data-stu-id="660fe-2069">When small packets of data are sent with TCP, the overhead resulting from the TCP header can become a significant part of the network traffic.</span></span> <span data-ttu-id="660fe-2070">В сильно загруженных сетях перегрузка, полученная в результате этой дополнительной нагрузки, может привести к потере датаграмм и повторных передач, а также к чрезмерному времени распространения, вызванному перегрузкой.</span><span class="sxs-lookup"><span data-stu-id="660fe-2070">On heavily loaded networks, the congestion resulting from this overhead can result in lost datagrams and retransmissions, as well as excessive propagation time caused by congestion.</span></span> <span data-ttu-id="660fe-2071">Алгоритм Nagle запрещает отправку новых TCP-сегментов при поступлении новых исходящих данных от пользователя, если все ранее переданные подключения не подтверждены.</span><span class="sxs-lookup"><span data-stu-id="660fe-2071">The Nagle algorithm inhibits the sending of new TCP segments when new outgoing data arrives from the user if any previously transmitted data on the connection remains unacknowledged.</span></span>  
  
 <span data-ttu-id="660fe-2072">Большинство сетевых приложений должны использовать алгоритм Nagle.</span><span class="sxs-lookup"><span data-stu-id="660fe-2072">The majority of network applications should use the Nagle algorithm.</span></span>  
  
 <span data-ttu-id="660fe-2073">Задание этого свойства для сокета UDP не будет действовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-2073">Setting this property on a User Datagram Protocol (UDP) socket will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2074">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.NoDelay%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2074">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.NoDelay%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2075">Произошла ошибка при попытке доступа к объекту <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2075">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2076"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2076">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OSSupportsIPv4">
      <MemberSignature Language="C#" Value="public static bool OSSupportsIPv4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool OSSupportsIPv4" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.OSSupportsIPv4" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OSSupportsIPv4 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool OSSupportsIPv4 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.OSSupportsIPv4 : bool" Usage="System.Net.Sockets.Socket.OSSupportsIPv4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2077">Указывает, поддерживают ли основная операционная система и сетевые адаптеры протокол IPv4.</span><span class="sxs-lookup"><span data-stu-id="660fe-2077">Indicates whether the underlying operating system and network adaptors support Internet Protocol version 4 (IPv4).</span></span></summary>
        <value><span data-ttu-id="660fe-2078">Значение <see langword="true" />, если основная операционная система и сетевые адаптеры поддерживают протокол IPv4; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2078"><see langword="true" /> if the operating system and network adaptors support the IPv4 protocol; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2079">Операционная система может поддерживать протоколы IPv4 и IPv6.</span><span class="sxs-lookup"><span data-stu-id="660fe-2079">The operating system may support both IPv4 and IPv6 protocols.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.OSSupportsIPv6" />
      </Docs>
    </Member>
    <Member MemberName="OSSupportsIPv6">
      <MemberSignature Language="C#" Value="public static bool OSSupportsIPv6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool OSSupportsIPv6" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.OSSupportsIPv6" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OSSupportsIPv6 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool OSSupportsIPv6 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.OSSupportsIPv6 : bool" Usage="System.Net.Sockets.Socket.OSSupportsIPv6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2080">Указывает, поддерживают ли основная операционная система и сетевые адаптеры протокол IPv6.</span><span class="sxs-lookup"><span data-stu-id="660fe-2080">Indicates whether the underlying operating system and network adaptors support Internet Protocol version 6 (IPv6).</span></span></summary>
        <value><span data-ttu-id="660fe-2081">Значение <see langword="true" />, если основная операционная система и сетевые адаптеры поддерживают протокол IPv6; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2081"><see langword="true" /> if the operating system and network adaptors support the IPv6 protocol; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2082">Операционная система может поддерживать протоколы IPv4 и IPv6.</span><span class="sxs-lookup"><span data-stu-id="660fe-2082">The operating system may support both IPv4 and IPv6 protocols.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.OSSupportsIPv4" />
      </Docs>
    </Member>
    <Member MemberName="Poll">
      <MemberSignature Language="C#" Value="public bool Poll (int microSeconds, System.Net.Sockets.SelectMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Poll(int32 microSeconds, valuetype System.Net.Sockets.SelectMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Poll (microSeconds As Integer, mode As SelectMode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Poll(int microSeconds, System::Net::Sockets::SelectMode mode);" />
      <MemberSignature Language="F#" Value="member this.Poll : int * System.Net.Sockets.SelectMode -&gt; bool" Usage="socket.Poll (microSeconds, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="microSeconds" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.Net.Sockets.SelectMode" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="microSeconds"><span data-ttu-id="660fe-2083">Время ожидания ответа, заданное в микросекундах.</span><span class="sxs-lookup"><span data-stu-id="660fe-2083">The time to wait for a response, in microseconds.</span></span></param>
        <param name="mode"><span data-ttu-id="660fe-2084">Одно из значений перечисления <see cref="T:System.Net.Sockets.SelectMode" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2084">One of the <see cref="T:System.Net.Sockets.SelectMode" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-2085">Определяет состояние объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2085">Determines the status of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2086">Состояние объекта <see cref="T:System.Net.Sockets.Socket" />, основанное на значении режима опроса, переданного в параметре <paramref name="mode" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2086">The status of the <see cref="T:System.Net.Sockets.Socket" /> based on the polling mode value passed in the <paramref name="mode" /> parameter.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="660fe-2087">Режим</span><span class="sxs-lookup"><span data-stu-id="660fe-2087">Mode</span></span> 
 </term><description> <span data-ttu-id="660fe-2088">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="660fe-2088">Return Value</span></span> 
 </description></listheader><item><term><see cref="F:System.Net.Sockets.SelectMode.SelectRead" /></term><description><span data-ttu-id="660fe-2089">Значение <see langword="true" />, если был вызван метод <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> и подключение отложено;</span><span class="sxs-lookup"><span data-stu-id="660fe-2089"><see langword="true" /> if <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> has been called and a connection is pending;</span></span> 
<span data-ttu-id="660fe-2090">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2090">-or-</span></span> 
 <span data-ttu-id="660fe-2091">Значение <see langword="true" />, если данные доступны для чтения;</span><span class="sxs-lookup"><span data-stu-id="660fe-2091"><see langword="true" /> if data is available for reading;</span></span> 
<span data-ttu-id="660fe-2092">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2092">-or-</span></span> 
 <span data-ttu-id="660fe-2093">Значение <see langword="true" />, если подключение закрыто, сброшено или завершено.</span><span class="sxs-lookup"><span data-stu-id="660fe-2093"><see langword="true" /> if the connection has been closed, reset, or terminated;</span></span> 
<span data-ttu-id="660fe-2094">В противном случае, возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2094">otherwise, returns <see langword="false" />.</span></span>  
  
 </description></item><item><term><see cref="F:System.Net.Sockets.SelectMode.SelectWrite" /></term><description><span data-ttu-id="660fe-2095">Значение <see langword="true" />, если обработка метода <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> и подключения завершились успешно;</span><span class="sxs-lookup"><span data-stu-id="660fe-2095"><see langword="true" />, if processing a <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />, and the connection has succeeded;</span></span> 
<span data-ttu-id="660fe-2096">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2096">-or-</span></span> 
 <span data-ttu-id="660fe-2097">Значение <see langword="true" />, если данные могут быть посланы;</span><span class="sxs-lookup"><span data-stu-id="660fe-2097"><see langword="true" /> if data can be sent;</span></span> 
<span data-ttu-id="660fe-2098">В противном случае, возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2098">otherwise, returns <see langword="false" />.</span></span>  
  
 </description></item><item><term><see cref="F:System.Net.Sockets.SelectMode.SelectError" /></term><description><span data-ttu-id="660fe-2099">Значение <see langword="true" />, если не блокируется обработка метода <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> и попытка подключения завершилась неудачей;</span><span class="sxs-lookup"><span data-stu-id="660fe-2099"><see langword="true" /> if processing a <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> that does not block, and the connection has failed;</span></span> 
<span data-ttu-id="660fe-2100">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2100">-or-</span></span> 
 <span data-ttu-id="660fe-2101">Значение <see langword="true" />, если не установлен объект <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> и доступны экстренные данные;</span><span class="sxs-lookup"><span data-stu-id="660fe-2101"><see langword="true" /> if <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> is not set and out-of-band data is available;</span></span> 
<span data-ttu-id="660fe-2102">В противном случае, возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2102">otherwise, returns <see langword="false" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2103">Метод проверит состояние  <xref:System.Net.Sockets.Socket> объекта.  <xref:System.Net.Sockets.Socket.Poll%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2103">The <xref:System.Net.Sockets.Socket.Poll%2A> method will check the state of the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-2104">Укажите <xref:System.Net.Sockets.SelectMode.SelectRead?displayProperty=nameWithType> <xref:System.Net.Sockets.Socket> для параметра, чтобы определить, является ли объект доступным для чтения. `selectMode`</span><span class="sxs-lookup"><span data-stu-id="660fe-2104">Specify <xref:System.Net.Sockets.SelectMode.SelectRead?displayProperty=nameWithType> for the `selectMode` parameter to determine if the <xref:System.Net.Sockets.Socket> is readable.</span></span> <span data-ttu-id="660fe-2105">Укажите <xref:System.Net.Sockets.SelectMode.SelectWrite?displayProperty=nameWithType> , чтобы определить, <xref:System.Net.Sockets.Socket> является ли объект доступным для записи.</span><span class="sxs-lookup"><span data-stu-id="660fe-2105">Specify <xref:System.Net.Sockets.SelectMode.SelectWrite?displayProperty=nameWithType> to determine if the <xref:System.Net.Sockets.Socket> is writable.</span></span> <span data-ttu-id="660fe-2106">Используйте <xref:System.Net.Sockets.SelectMode.SelectError?displayProperty=nameWithType> для обнаружения состояния ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2106">Use <xref:System.Net.Sockets.SelectMode.SelectError?displayProperty=nameWithType> to detect an error condition.</span></span> <span data-ttu-id="660fe-2107"><xref:System.Net.Sockets.Socket.Poll%2A>будет блокировать выполнение до указанного периода времени, измеряемого в `microseconds`, истекает.</span><span class="sxs-lookup"><span data-stu-id="660fe-2107"><xref:System.Net.Sockets.Socket.Poll%2A> will block execution until the specified time period, measured in `microseconds`, elapses.</span></span> <span data-ttu-id="660fe-2108">Если вы хотите ждать ответа в течение неограниченного времени, задайте для параметра отрицательное целое число. `microSeconds`</span><span class="sxs-lookup"><span data-stu-id="660fe-2108">Set the `microSeconds` parameter to a negative integer if you would like to wait indefinitely for a response.</span></span> <span data-ttu-id="660fe-2109">Если вы хотите проверить состояние нескольких сокетов, вы можете использовать <xref:System.Net.Sockets.Socket.Select%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2109">If you want to check the status of multiple sockets, you might prefer to use the <xref:System.Net.Sockets.Socket.Select%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2110">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2110">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2111">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2111">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2112">Этот метод не может обнаружить некоторые виды проблем с подключением, например обрыв сетевого кабеля или некорректное завершение работы удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2112">This method cannot detect certain kinds of connection problems, such as a broken network cable, or that the remote host was shut down ungracefully.</span></span> <span data-ttu-id="660fe-2113">Необходимо попытаться отправить или получить данные для обнаружения ошибок этих типов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2113">You must attempt to send or receive data to detect these kinds of errors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2114">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2114">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2115">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2115">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2116">В следующем примере кода создается сокет, подключается к серверу и используется <xref:System.Net.Sockets.Socket.Poll%2A> для проверки состояния сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2116">The following code example creates a socket, connects to a server, and uses <xref:System.Net.Sockets.Socket.Poll%2A> to check the status of the socket.</span></span>  
  
 [!code-cpp[SelectModeExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SelectModeExample/CPP/source.cpp#1)]
 [!code-csharp[SelectModeExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SelectModeExample/CS/source.cs#1)]
 [!code-vb[SelectModeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SelectModeExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-2117">Параметр <paramref name="mode" /> не является одним из значений <see cref="T:System.Net.Sockets.SelectMode" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2117">The <paramref name="mode" /> parameter is not one of the <see cref="T:System.Net.Sockets.SelectMode" /> values.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2118">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2118">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-2119">См. примечания ниже.</span><span class="sxs-lookup"><span data-stu-id="660fe-2119">See remarks below.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2120"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2120">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SelectMode" />
        <altmember cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolType">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.ProtocolType ProtocolType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.ProtocolType ProtocolType" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.ProtocolType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolType As ProtocolType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::ProtocolType ProtocolType { System::Net::Sockets::ProtocolType get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolType : System.Net.Sockets.ProtocolType" Usage="System.Net.Sockets.Socket.ProtocolType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.ProtocolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2121">Получает тип протокола объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2121">Gets the protocol type of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="660fe-2122">Одно из значений перечисления <see cref="T:System.Net.Sockets.ProtocolType" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2122">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2123">Свойство задается <xref:System.Net.Sockets.Socket> при создании и указывает протокол, <xref:System.Net.Sockets.Socket>используемый этим свойством. <xref:System.Net.Sockets.Socket.ProtocolType%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2123">The <xref:System.Net.Sockets.Socket.ProtocolType%2A> property is set when the <xref:System.Net.Sockets.Socket> is created, and specifies the protocol used by that <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2124">В следующем примере кода в консоль <xref:System.Net.Sockets.AddressFamily>выводятся <xref:System.Net.Sockets.ProtocolType> , <xref:System.Net.Sockets.SocketType>и.</span><span class="sxs-lookup"><span data-stu-id="660fe-2124">The following code example displays the <xref:System.Net.Sockets.AddressFamily>, <xref:System.Net.Sockets.SocketType>, and <xref:System.Net.Sockets.ProtocolType> to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#3)]
 [!code-csharp[Socket_Socket_Options#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#3)]
 [!code-vb[Socket_Socket_Options#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Receive">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-2125">Получает данные из связанного объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2125">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (buffer As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] -&gt; int" Usage="socket.Receive buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2126">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2126">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <summary><span data-ttu-id="660fe-2127">Возвращает данные из связанного объекта <see cref="T:System.Net.Sockets.Socket" /> в приемный буфер.</span><span class="sxs-lookup"><span data-stu-id="660fe-2127">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer.</span></span></summary>
        <returns><span data-ttu-id="660fe-2128">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2128">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2129"><xref:System.Net.Sockets.Socket.Receive%2A> Метод считывает данные в параметр buffer и возвращает число успешно считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2129">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the buffer parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="660fe-2130">Вы можете вызывать <xref:System.Net.Sockets.Socket.Receive%2A> из сокетов, ориентированных на подключение, и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2130">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="660fe-2131">Эта перегрузка требует только предоставления буфера приема.</span><span class="sxs-lookup"><span data-stu-id="660fe-2131">This overload only requires you to provide a receive buffer.</span></span> <span data-ttu-id="660fe-2132">По умолчанию смещение буфера равно 0, размер по умолчанию равен длине параметра buffer, а <xref:System.Net.Sockets.SocketFlags> значение по умолчанию <xref:System.Net.Sockets.SocketFlags.None>—.</span><span class="sxs-lookup"><span data-stu-id="660fe-2132">The buffer offset defaults to 0, the size defaults to the length of the buffer parameter, and the <xref:System.Net.Sockets.SocketFlags> value defaults to <xref:System.Net.Sockets.SocketFlags.None>.</span></span>  
  
 <span data-ttu-id="660fe-2133">Если используется протокол, ориентированный на соединение, необходимо либо вызвать метод <xref:System.Net.Sockets.Socket.Connect%2A> , чтобы установить соединение с удаленным узлом, либо <xref:System.Net.Sockets.Socket.Accept%2A> принять входящее подключение перед вызовом <xref:System.Net.Sockets.Socket.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2133">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="660fe-2134">Метод будет считывать только данные, поступающие с удаленного узла, <xref:System.Net.Sockets.Socket.Connect%2A> установленного в методе или. <xref:System.Net.Sockets.Socket.Accept%2A> <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2134">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2135">Если используется протокол без подключения, можно также использовать <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2135">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2136"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>позволяет принимать данные, поступающие с любого узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2136"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="660fe-2137">Если данные недоступны для чтения, <xref:System.Net.Sockets.Socket.Receive%2A> метод будет блокироваться до тех пор, пока данные не будут доступны, если только значение времени ожидания не было задано с помощью. <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2137">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2138">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Receive%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2138">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2139">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.Receive%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2139">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2140">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2140">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2141">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2141">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2142">Если используется ориентированный <xref:System.Net.Sockets.Socket>на соединение объект <xref:System.Net.Sockets.Socket.Receive%2A> , метод будет считывать столько данных, сколько доступно, вплоть до размера буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2142">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the size of the buffer.</span></span> <span data-ttu-id="660fe-2143">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.Receive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2143">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-2144">Если используется без подключения <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> то считывает первую датаграмму в очереди из <xref:System.Net.Sockets.Socket.Connect%2A> адреса назначения, указанного в методе.</span><span class="sxs-lookup"><span data-stu-id="660fe-2144">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="660fe-2145">Если полученная датаграмма превышает размер `buffer` параметра, `buffer` она заполняется первой частью сообщения, лишние <xref:System.Net.Sockets.SocketException> данные теряются и создается исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2145">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2146">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2146">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2147">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2147">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2148">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2148">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2149">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2149">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2150">Следующий пример кода получает данные на подключенном <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2150">The following code example receives data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#1)]
 [!code-csharp[Socket_Sync_Send_Receive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#1)]
 [!code-vb[Socket_Sync_Send_Receive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2151">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2151"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2152">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2152">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2153"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2153">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-2154">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2154">A caller in the call stack does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2155">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2155">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2156">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2156">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (buffers As IList(Of ArraySegment(Of Byte))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; int" Usage="socket.Receive buffers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-2157">Список объектов <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, содержащих полученные данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-2157">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</span></span></param>
        <summary><span data-ttu-id="660fe-2158">Получает данные из связанного объекта <see cref="T:System.Net.Sockets.Socket" /> в список приемных буферов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2158">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers.</span></span></summary>
        <returns><span data-ttu-id="660fe-2159">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2159">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2160">Этот метод считывает данные в параметр Buffers и возвращает число успешно считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2160">This method reads data into the buffers parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="660fe-2161">Вы можете вызывать из сокетов, ориентированных на подключение, и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2161">You can call from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="660fe-2162">Эта перегрузка требует предоставления одного или нескольких буферов приема.</span><span class="sxs-lookup"><span data-stu-id="660fe-2162">This overload requires you to provide one or more receive buffers.</span></span>  
  
 <span data-ttu-id="660fe-2163">Если используется протокол, ориентированный на соединение, необходимо либо вызвать метод <xref:System.Net.Sockets.Socket.Connect%2A> , чтобы установить соединение с удаленным узлом, либо <xref:System.Net.Sockets.Socket.Accept%2A> принять входящее подключение перед вызовом <xref:System.Net.Sockets.Socket.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2163">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="660fe-2164">Метод будет считывать только данные, поступающие из соединения с удаленным узлом, <xref:System.Net.Sockets.Socket.Connect%2A> установленного в методе или  <xref:System.Net.Sockets.Socket.Accept%2A> . <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2164">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host connection established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2165">Если используется протокол без подключения, можно также использовать <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2165">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2166"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>позволяет принимать данные, поступающие с любого узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2166"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="660fe-2167">Если данные недоступны для чтения, <xref:System.Net.Sockets.Socket.Receive%2A> метод будет блокироваться до тех пор, пока данные не будут доступны, если только значение времени ожидания не было задано с помощью. <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2167">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2168">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Receive%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2168">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2169">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.Receive%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2169">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2170">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2170">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2171">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2171">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2172">Если используется ориентированный <xref:System.Net.Sockets.Socket>на соединение объект <xref:System.Net.Sockets.Socket.Receive%2A> , метод будет считывать столько данных, сколько доступно, вплоть до размера буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2172">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the size of the buffer.</span></span> <span data-ttu-id="660fe-2173">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.Receive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2173">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-2174">Если вы используете бесустановленное соединение <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> будет считывать первые поставленные в очередь датаграммы с <xref:System.Net.Sockets.Socket.Connect%2A> адреса назначения, указанного в методе.</span><span class="sxs-lookup"><span data-stu-id="660fe-2174">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first enqueued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="660fe-2175">Если полученная датаграмма превышает размер `buffers` параметра, `buffers` она заполняется первой частью сообщения, лишние <xref:System.Net.Sockets.SocketException> данные теряются и создается исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2175">If the datagram you receive is larger than the size of the `buffers` parameter, `buffers` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2176">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2176">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2177">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2177">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="660fe-2178">**Примечание** . Этот элемент выводит данные трассировки при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="660fe-2178">**Note** This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2179">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2179">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Receive(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2180">Параметр <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2180">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2181">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2181">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2182"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2182">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="member this.Receive : Span&lt;byte&gt; -&gt; int" Usage="socket.Receive buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffer, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2183">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2183">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2184">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2184">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-2185">Получает данные из связанного объекта <see cref="T:System.Net.Sockets.Socket" /> в приемный буфер, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2185">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2186">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2186">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2187"><xref:System.Net.Sockets.Socket.Receive%2A> Метод считывает данные в параметр buffer и возвращает число успешно считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2187">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the buffer parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="660fe-2188">Вы можете вызывать <xref:System.Net.Sockets.Socket.Receive%2A> из сокетов, ориентированных на подключение, и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2188">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="660fe-2189">Эта перегрузка требует только предоставить буфер приема и необходимый <xref:System.Net.Sockets.SocketFlags>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2189">This overload only requires you to provide a receive buffer and the necessary <xref:System.Net.Sockets.SocketFlags>.</span></span> <span data-ttu-id="660fe-2190">По умолчанию смещение буфера равно 0, а размер по умолчанию равен длине параметра Byte.</span><span class="sxs-lookup"><span data-stu-id="660fe-2190">The buffer offset defaults to 0, and the size defaults to the length of the byte parameter.</span></span>  
  
 <span data-ttu-id="660fe-2191">Если используется протокол, ориентированный на соединение, необходимо либо вызвать метод <xref:System.Net.Sockets.Socket.Connect%2A> , чтобы установить соединение с удаленным узлом, либо <xref:System.Net.Sockets.Socket.Accept%2A> принять входящее подключение перед вызовом <xref:System.Net.Sockets.Socket.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2191">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="660fe-2192">Метод будет считывать только данные, поступающие с удаленного узла, <xref:System.Net.Sockets.Socket.Connect%2A> установленного в методе или. <xref:System.Net.Sockets.Socket.Accept%2A> <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2192">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2193">Если используется протокол без подключения, можно также использовать <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2193">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2194"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>позволяет принимать данные, поступающие с любого узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2194"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="660fe-2195">Если данные для чтения недоступны, <xref:System.Net.Sockets.Socket.Receive%2A> метод блокируется до тех пор, пока данные не будут доступны.</span><span class="sxs-lookup"><span data-stu-id="660fe-2195">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available.</span></span> <span data-ttu-id="660fe-2196">Если вы используете режим без блокировки и в буфере стека протоколов нет доступных данных, <xref:System.Net.Sockets.Socket.Receive%2A> метод будет выполнен немедленно и <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2196">If you are in non-blocking mode, and there is no data available in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2197">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2197">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2198">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2198">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry your receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2199">Если используется ориентированный <xref:System.Net.Sockets.Socket>на соединение объект <xref:System.Net.Sockets.Socket.Receive%2A> , метод будет считывать столько данных, сколько доступно до размера буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2199">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available up to the size of the buffer.</span></span> <span data-ttu-id="660fe-2200">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.Receive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2200">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-2201">Если вы используете бесустановленное соединение <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> будет считывать первые поставленные в очередь датаграммы с <xref:System.Net.Sockets.Socket.Connect%2A> адреса назначения, указанного в методе.</span><span class="sxs-lookup"><span data-stu-id="660fe-2201">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first enqueued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="660fe-2202">Если полученная датаграмма превышает размер `buffer` параметра, `buffer` она заполняется первой частью сообщения, лишние <xref:System.Net.Sockets.SocketException> данные теряются и создается исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2202">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2203">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2203">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2204">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2204">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2205">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2205">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2206">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2206">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2207">В следующем примере кода задается буфер данных и <xref:System.Net.Sockets.SocketFlags> для приема данных на подключенном <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2207">The following code example specifies a data buffer, and <xref:System.Net.Sockets.SocketFlags> for receiving data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#2)]
 [!code-csharp[Socket_Sync_Send_Receive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#2)]
 [!code-vb[Socket_Sync_Send_Receive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2208">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2208"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2209">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2209">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2210"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2210">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-2211">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2211">A caller in the call stack does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2212">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2212">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2213">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2213">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffers, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-2214">Список объектов <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, содержащих полученные данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-2214">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2215">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2215">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-2216">Получает данные из связанного объекта <see cref="T:System.Net.Sockets.Socket" /> в список приемных буферов, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2216">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2217">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2217">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2218">Этот метод считывает данные в `buffers` параметр и возвращает число успешно считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2218">This method reads data into the `buffers` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="660fe-2219">Вы можете вызывать из сокетов, ориентированных на подключение, и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2219">You can call from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="660fe-2220">Эта перегрузка требует предоставления одного или нескольких буферов приема.</span><span class="sxs-lookup"><span data-stu-id="660fe-2220">This overload requires you to provide one or more receive buffers.</span></span> <span data-ttu-id="660fe-2221">Значение по умолчанию  <xref:System.Net.Sockets.SocketFlags.None> —.  <xref:System.Net.Sockets.SocketFlags></span><span class="sxs-lookup"><span data-stu-id="660fe-2221">The <xref:System.Net.Sockets.SocketFlags> value defaults to <xref:System.Net.Sockets.SocketFlags.None>.</span></span>  
  
 <span data-ttu-id="660fe-2222">Если используется протокол, ориентированный на соединение, необходимо либо вызвать метод <xref:System.Net.Sockets.Socket.Connect%2A> , чтобы установить соединение с удаленным узлом, либо <xref:System.Net.Sockets.Socket.Accept%2A> принять входящее подключение перед вызовом <xref:System.Net.Sockets.Socket.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2222">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="660fe-2223">Метод будет считывать только данные, поступающие из соединения с удаленным узлом, <xref:System.Net.Sockets.Socket.Connect%2A> установленного в методе или  <xref:System.Net.Sockets.Socket.Accept%2A> . <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2223">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host connection established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2224">Если используется протокол без подключения, можно также использовать <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2224">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2225"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>позволяет принимать данные, поступающие с любого узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2225"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="660fe-2226">Если данные недоступны для чтения, <xref:System.Net.Sockets.Socket.Receive%2A> метод будет блокироваться до тех пор, пока данные не будут доступны, если только значение времени ожидания не было задано с помощью. <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2226">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2227">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Receive%2A> вызов <xref:System.Net.Sockets.SocketException>создает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2227">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call throws a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2228">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.Receive%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2228">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2229">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2229">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2230">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2230">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2231">Если используется ориентированный <xref:System.Net.Sockets.Socket>на соединение объект <xref:System.Net.Sockets.Socket.Receive%2A> , метод будет считывать столько данных, сколько доступно, вплоть до размера буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2231">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the size of the buffer.</span></span> <span data-ttu-id="660fe-2232">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.Receive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2232">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-2233">Если вы используете бесустановленное соединение <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> будет считывать первые поставленные в очередь датаграммы с <xref:System.Net.Sockets.Socket.Connect%2A> адреса назначения, указанного в методе.</span><span class="sxs-lookup"><span data-stu-id="660fe-2233">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first enqueued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="660fe-2234">Если полученная датаграмма превышает размер `buffers` параметра, `buffers` она заполняется первой частью сообщения, лишние <xref:System.Net.Sockets.SocketException> данные теряются и создается исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2234">If the datagram you receive is larger than the size of the `buffers` parameter, `buffers` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2235">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2235">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2236">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2236">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2237">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2237">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2238">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2238">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2239">В следующем примере кода показано, как получить данные на подключенном <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2239">The following code example demonstrates how to receive data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socketgenerics#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socketgenerics/CPP/sendgeneric.cpp#2)]
 [!code-csharp[System.Net.Sockets.Socketgenerics#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socketgenerics/CS/sendgeneric.cs#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2240">Свойство <paramref name="buffers" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2240"><paramref name="buffers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-2241">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2241">-or-</span></span> 
 <span data-ttu-id="660fe-2242">Значение <paramref name="buffers" />. Отсчет равен нулю.</span><span class="sxs-lookup"><span data-stu-id="660fe-2242"><paramref name="buffers" />.Count is zero.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2243">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2243">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2244"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2244">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2245">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2245">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2246">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2246">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (Span&lt;byte&gt; buffer, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(valuetype System.Span`1&lt;unsigned int8&gt; buffer, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(Span&lt;System::Byte&gt; buffer, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : Span&lt;byte&gt; * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffer, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="socketFlags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer, int size, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer, int size, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] * int * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffer, size, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2247">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2247">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-2248">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2248">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2249">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2249">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-2250">Получает указанное число байтов данных из связанного объекта <see cref="T:System.Net.Sockets.Socket" /> в приемный буфер, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2250">Receives the specified number of bytes of data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2251">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2251">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2252">Метод считывает данные `buffer` в параметр и возвращает число успешно считанных байтов. <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2252">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the `buffer` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="660fe-2253">Вы можете вызывать <xref:System.Net.Sockets.Socket.Receive%2A> из сокетов, ориентированных на подключение, и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2253">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="660fe-2254">Эта перегрузка требует только предоставить буфер приема, число байтов, которое требуется получить, и необходимое <xref:System.Net.Sockets.SocketFlags>значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2254">This overload only requires you to provide a receive buffer, the number of bytes you want to receive, and the necessary <xref:System.Net.Sockets.SocketFlags>.</span></span>  
  
 <span data-ttu-id="660fe-2255">Если используется протокол, ориентированный на соединение, необходимо либо вызвать метод <xref:System.Net.Sockets.Socket.Connect%2A> , чтобы установить соединение с удаленным узлом, либо <xref:System.Net.Sockets.Socket.Accept%2A> принять входящее подключение перед вызовом <xref:System.Net.Sockets.Socket.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2255">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="660fe-2256">Метод будет считывать только данные, поступающие с удаленного узла, <xref:System.Net.Sockets.Socket.Connect%2A> установленного в методе или. <xref:System.Net.Sockets.Socket.Accept%2A> <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2256">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2257">Если используется протокол без подключения, можно также использовать <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2257">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2258"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>позволяет принимать данные, поступающие с любого узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2258"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="660fe-2259">Если данные недоступны для чтения, <xref:System.Net.Sockets.Socket.Receive%2A> метод будет блокироваться до тех пор, пока данные не будут доступны, если только значение времени ожидания не было задано с помощью. <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2259">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2260">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Receive%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2260">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2261">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.Receive%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2261">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, The <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2262">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2262">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2263">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2263">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry your receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2264">Если используется ориентированный <xref:System.Net.Sockets.Socket>на соединение объект <xref:System.Net.Sockets.Socket.Receive%2A> , метод будет считывать столько данных, сколько доступно, вплоть до числа байтов, заданного `size` параметром.</span><span class="sxs-lookup"><span data-stu-id="660fe-2264">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="660fe-2265">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.Receive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2265">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-2266">Если используется без подключения <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> то считывает первую датаграмму в очереди из <xref:System.Net.Sockets.Socket.Connect%2A> адреса назначения, указанного в методе.</span><span class="sxs-lookup"><span data-stu-id="660fe-2266">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="660fe-2267">Если полученная датаграмма превышает размер `buffer` параметра, `buffer` она заполняется первой частью сообщения, лишние <xref:System.Net.Sockets.SocketException> данные теряются и создается исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2267">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2268">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2268">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2269">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2269">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2270">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2270">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2271">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2271">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2272">Следующий объект получает данные, найденные `buffer`в, и <xref:System.Net.Sockets.SocketFlags.None> указывает <xref:System.Net.Sockets.SocketFlags>для.</span><span class="sxs-lookup"><span data-stu-id="660fe-2272">The following receives the data found into `buffer`, and specifies <xref:System.Net.Sockets.SocketFlags.None> for <xref:System.Net.Sockets.SocketFlags>.</span></span>  
  
 [!code-cpp[Socket_Send_Receive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Send_Receive/CPP/source.cpp#4)]
 [!code-csharp[Socket_Send_Receive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Send_Receive/CS/source.cs#4)]
 [!code-vb[Socket_Send_Receive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Send_Receive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2273">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2273"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-2274">Значение <paramref name="size" /> превышает размер параметра <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2274"><paramref name="size" /> exceeds the size of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2275">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2275">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2276"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2276">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-2277">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2277">A caller in the call stack does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2278">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2278">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2279">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2279">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Receive (buffers, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-2280">Список объектов <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, содержащих полученные данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-2280">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2281">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2281">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-2282">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2282">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <summary><span data-ttu-id="660fe-2283">Получает данные из связанного объекта <see cref="T:System.Net.Sockets.Socket" /> в список приемных буферов, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2283">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2284">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2284">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2285">Этот метод считывает данные в `buffers` параметр и возвращает число успешно считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2285">This method reads data into the `buffers` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="660fe-2286">Вы можете вызывать из сокетов, ориентированных на подключение, и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2286">You can call from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="660fe-2287">Эта перегрузка требует предоставления одного или нескольких буферов приема.</span><span class="sxs-lookup"><span data-stu-id="660fe-2287">This overload requires you to provide one or more receive buffers.</span></span> <span data-ttu-id="660fe-2288">Значение по умолчанию  <xref:System.Net.Sockets.SocketFlags.None> —.  <xref:System.Net.Sockets.SocketFlags></span><span class="sxs-lookup"><span data-stu-id="660fe-2288">The <xref:System.Net.Sockets.SocketFlags> value defaults to <xref:System.Net.Sockets.SocketFlags.None>.</span></span>  
  
 <span data-ttu-id="660fe-2289">Если используется протокол, ориентированный на соединение, необходимо либо вызвать метод <xref:System.Net.Sockets.Socket.Connect%2A> , чтобы установить соединение с удаленным узлом, либо <xref:System.Net.Sockets.Socket.Accept%2A> принять входящее подключение перед вызовом <xref:System.Net.Sockets.Socket.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2289">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="660fe-2290">Метод будет считывать только данные, поступающие из соединения с удаленным узлом, <xref:System.Net.Sockets.Socket.Connect%2A> установленного в методе или  <xref:System.Net.Sockets.Socket.Accept%2A> . <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2290">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host connection established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2291">Если используется протокол без подключения, можно также использовать <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2291">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2292"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>позволяет принимать данные, поступающие с любого узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2292"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="660fe-2293">Если данные недоступны для чтения, <xref:System.Net.Sockets.Socket.Receive%2A> метод будет блокироваться до тех пор, пока данные не будут доступны, если только значение времени ожидания не было задано с помощью. <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2293">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2294">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Receive%2A> вызов <xref:System.Net.Sockets.SocketException>создает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2294">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call throws a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2295">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.Receive%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2295">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2296">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2296">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2297">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2297">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2298">Если используется ориентированный <xref:System.Net.Sockets.Socket>на соединение объект <xref:System.Net.Sockets.Socket.Receive%2A> , метод будет считывать столько данных, сколько доступно, вплоть до размера буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2298">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the size of the buffer.</span></span> <span data-ttu-id="660fe-2299">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.Receive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2299">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-2300">Если используется без подключения <xref:System.Net.Sockets.Socket>,<xref:System.Net.Sockets.Socket.Receive%2A> то считывает первую датаграмму в очереди из <xref:System.Net.Sockets.Socket.Connect%2A> адреса назначения, указанного в методе.</span><span class="sxs-lookup"><span data-stu-id="660fe-2300">If you are using a connectionless <xref:System.Net.Sockets.Socket>,<xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="660fe-2301">Если полученная датаграмма превышает размер `buffers` параметра, `buffers` она заполняется первой частью сообщения, лишние <xref:System.Net.Sockets.SocketException> данные теряются и создается исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2301">If the datagram you receive is larger than the size of the `buffers` parameter, `buffers` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2302">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2302">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2303">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2303">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2304">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2304">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2305">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2305">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2306"><paramref name="buffers" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2306"><paramref name="buffers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-2307">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2307">-or-</span></span> 
 <span data-ttu-id="660fe-2308">Значение <paramref name="buffers" />. Отсчет равен нулю.</span><span class="sxs-lookup"><span data-stu-id="660fe-2308"><paramref name="buffers" />.Count is zero.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2309">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2309">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2310"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2310">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2311">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2311">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2312">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2312">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (Span&lt;byte&gt; buffer, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(valuetype System.Span`1&lt;unsigned int8&gt; buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(Span&lt;System::Byte&gt; buffer, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Receive : Span&lt;byte&gt; * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Receive (buffer, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="socketFlags">To be added.</param>
        <param name="errorCode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] * int * int * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffer, offset, size, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2313">Массив объекта типа <see cref="T:System.Byte" />, который является местом хранения полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2313">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-2314">Место в объекте <paramref name="buffer" />, выделенное для хранения принимаемых данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2314">The location in <paramref name="buffer" /> to store the received data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-2315">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2315">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2316">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2316">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-2317">Получает указанное число байтов данных из связанного объекта <see cref="T:System.Net.Sockets.Socket" /> в приемный буфер с указанной позиции смещения, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2317">Receives the specified number of bytes from a bound <see cref="T:System.Net.Sockets.Socket" /> into the specified offset position of the receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2318">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2318">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2319"><xref:System.Net.Sockets.Socket.Receive%2A> Метод считывает данные в параметр buffer и возвращает число успешно считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2319">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the buffer parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="660fe-2320">Вы можете вызывать <xref:System.Net.Sockets.Socket.Receive%2A> из сокетов, ориентированных на подключение, и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2320">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="660fe-2321">Если используется протокол, ориентированный на соединение, необходимо либо вызвать метод <xref:System.Net.Sockets.Socket.Connect%2A> , чтобы установить соединение с удаленным узлом, либо <xref:System.Net.Sockets.Socket.Accept%2A> принять входящее подключение перед вызовом <xref:System.Net.Sockets.Socket.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2321">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="660fe-2322">Метод будет считывать только данные, поступающие с удаленного узла, <xref:System.Net.Sockets.Socket.Connect%2A> установленного в методе или. <xref:System.Net.Sockets.Socket.Accept%2A> <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2322">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2323">Если используется протокол без подключения, можно также использовать <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2323">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2324"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>позволяет принимать данные, поступающие с любого узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2324"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="660fe-2325">Если данные недоступны для чтения, <xref:System.Net.Sockets.Socket.Receive%2A> метод будет блокироваться до тех пор, пока данные не будут доступны, если только значение времени ожидания не было задано с помощью. <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2325">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2326">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Receive%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2326">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2327">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.Receive%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2327">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2328">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2328">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-2329">См. примечания ниже.</span><span class="sxs-lookup"><span data-stu-id="660fe-2329">See Remarks below.</span></span> <span data-ttu-id="660fe-2330">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2330">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2331">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2331">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2332">Если используется ориентированный <xref:System.Net.Sockets.Socket>на соединение объект <xref:System.Net.Sockets.Socket.Receive%2A> , метод будет считывать столько данных, сколько доступно, вплоть до числа байтов, заданного параметром size.</span><span class="sxs-lookup"><span data-stu-id="660fe-2332">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the number of bytes specified by the size parameter.</span></span> <span data-ttu-id="660fe-2333">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.Receive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2333">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-2334">Если используется без подключения <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> то считывает первую датаграмму в очереди из <xref:System.Net.Sockets.Socket.Connect%2A> адреса назначения, указанного в методе.</span><span class="sxs-lookup"><span data-stu-id="660fe-2334">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="660fe-2335">Если полученная датаграмма превышает размер `buffer` параметра, `buffer` она заполняется первой частью сообщения, лишние <xref:System.Net.Sockets.SocketException> данные теряются и создается исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2335">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2336">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2336">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2337">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2337">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2338">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2338">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2339">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2339">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2340">В следующем примере кода задаются буфер данных, смещение, размер и флаг сокета перед получением данных на подключенном <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2340">The following code example specifies a data buffer, an offset, a size, and a socket flag before receiving data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#4)]
 [!code-csharp[Socket_Sync_Send_Receive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#4)]
 [!code-vb[Socket_Sync_Send_Receive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2341">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2341"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-2342">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2342"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-2343">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2343">-or-</span></span> 
 <span data-ttu-id="660fe-2344">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2344"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-2345">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2345">-or-</span></span> 
 <span data-ttu-id="660fe-2346">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2346"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-2347">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2347">-or-</span></span> 
 <span data-ttu-id="660fe-2348">Значение <paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2348"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2349"><paramref name="socketFlags" /> — недопустимое сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2349"><paramref name="socketFlags" /> is not a valid combination of values.</span></span>  
  
<span data-ttu-id="660fe-2350">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2350">-or-</span></span> 
<span data-ttu-id="660fe-2351">Свойство <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> не задано.</span><span class="sxs-lookup"><span data-stu-id="660fe-2351">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.</span></span>  
  
<span data-ttu-id="660fe-2352">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2352">-or-</span></span> 
<span data-ttu-id="660fe-2353">Произошла ошибка операционной системы при доступе к <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2353">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2354"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2354">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-2355">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2355">A caller in the call stack does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2356">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2356">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2357">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2357">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] * int * int * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Receive (buffer, offset, size, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2358">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2358">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-2359">Позиция в параметре <paramref name="buffer" /> для хранения полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2359">The position in the <paramref name="buffer" /> parameter to store the received data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-2360">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2360">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2361">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2361">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-2362">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2362">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <summary><span data-ttu-id="660fe-2363">Получает данные из связанного объекта <see cref="T:System.Net.Sockets.Socket" /> в приемный буфер, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2363">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2364">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2364">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2365"><xref:System.Net.Sockets.Socket.Receive%2A> Метод считывает данные в параметр buffer и возвращает число успешно считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2365">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the buffer parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="660fe-2366">Вы можете вызывать <xref:System.Net.Sockets.Socket.Receive%2A> из сокетов, ориентированных на подключение, и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2366">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="660fe-2367">Если используется протокол, ориентированный на соединение, необходимо либо вызвать метод <xref:System.Net.Sockets.Socket.Connect%2A> , чтобы установить соединение с удаленным узлом, либо <xref:System.Net.Sockets.Socket.Accept%2A> принять входящее подключение перед вызовом <xref:System.Net.Sockets.Socket.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2367">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="660fe-2368">Метод будет считывать только данные, поступающие с удаленного узла, <xref:System.Net.Sockets.Socket.Connect%2A> установленного в методе или. <xref:System.Net.Sockets.Socket.Accept%2A> <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2368">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2369">Если используется протокол без подключения, можно также использовать <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2369">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2370"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>позволяет принимать данные, поступающие с любого узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2370"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="660fe-2371">Если данные недоступны для чтения, <xref:System.Net.Sockets.Socket.Receive%2A> метод будет блокироваться до тех пор, пока данные не будут доступны, если только значение времени ожидания не было задано с помощью. <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2371">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2372">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Receive%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2372">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2373">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.Receive%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2373">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2374">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2374">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-2375">См. примечания ниже.</span><span class="sxs-lookup"><span data-stu-id="660fe-2375">See Remarks below.</span></span> <span data-ttu-id="660fe-2376">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2376">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2377">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2377">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2378">Если используется ориентированный <xref:System.Net.Sockets.Socket>на соединение объект <xref:System.Net.Sockets.Socket.Receive%2A> , метод будет считывать столько данных, сколько доступно, вплоть до числа байтов, заданного параметром size.</span><span class="sxs-lookup"><span data-stu-id="660fe-2378">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the number of bytes specified by the size parameter.</span></span> <span data-ttu-id="660fe-2379">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.Receive%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2379">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="660fe-2380">Если используется без подключения <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> то считывает первую датаграмму в очереди из <xref:System.Net.Sockets.Socket.Connect%2A> адреса назначения, указанного в методе.</span><span class="sxs-lookup"><span data-stu-id="660fe-2380">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="660fe-2381">Если полученная датаграмма превышает размер `buffer` параметра, `buffer` она заполняется первой частью сообщения, лишние <xref:System.Net.Sockets.SocketException> данные теряются и создается исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2381">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2382">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2382">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2383">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2383">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2384">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2384">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2385">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2385">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2386"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2386"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-2387">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2387"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-2388">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2388">-or-</span></span> 
 <span data-ttu-id="660fe-2389">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2389"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-2390">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2390">-or-</span></span> 
 <span data-ttu-id="660fe-2391">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2391"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-2392">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2392">-or-</span></span> 
 <span data-ttu-id="660fe-2393">Значение <paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2393"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2394"><paramref name="socketFlags" /> — недопустимое сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2394"><paramref name="socketFlags" /> is not a valid combination of values.</span></span>  
  
<span data-ttu-id="660fe-2395">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2395">-or-</span></span> 
<span data-ttu-id="660fe-2396">Свойство <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> не задано.</span><span class="sxs-lookup"><span data-stu-id="660fe-2396">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property is not set.</span></span>  
  
<span data-ttu-id="660fe-2397">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2397">-or-</span></span> 
<span data-ttu-id="660fe-2398">Произошла ошибка операционной системы при доступе к <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2398">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2399"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2399">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-2400">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2400">A caller in the call stack does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2401">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2401">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2402">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2402">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public bool ReceiveAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReceiveAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReceiveAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.ReceiveAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-2403">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2403">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-2404">Начинает выполнение асинхронного запроса, чтобы получить данные из подключенного объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2404">Begins an asynchronous request to receive data from a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span></span></summary>
        <returns><span data-ttu-id="660fe-2405"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-2405"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-2406">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2406">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-2407"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-2407"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-2408">В данном случае событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не будет создано и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-2408">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2409"><xref:System.Net.Sockets.Socket.ReceiveAsync%2A> Метод используется на подключенных сокетах или в связанных сокетах без подключения и используется для чтения входящих данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2409">The <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> method is used on connected sockets or bound connectionless sockets and is used to read incoming data.</span></span> <span data-ttu-id="660fe-2410">Локальный адрес сокета должен быть известен.</span><span class="sxs-lookup"><span data-stu-id="660fe-2410">The socket's local address must be known.</span></span>  
  
 <span data-ttu-id="660fe-2411">Для привязанных сокетов без подключения эта функция ограничивает адреса, из которых принимаются принимаемые сообщения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2411">For bound connectionless sockets, this function restricts the addresses from which received messages are accepted.</span></span> <span data-ttu-id="660fe-2412">Функция возвращает только сообщения с удаленного адреса, указанного в соединении.</span><span class="sxs-lookup"><span data-stu-id="660fe-2412">The function only returns messages from the remote address specified in the connection.</span></span> <span data-ttu-id="660fe-2413">Сообщения из других адресов отбрасываются без уведомления.</span><span class="sxs-lookup"><span data-stu-id="660fe-2413">Messages from other addresses are silently discarded.</span></span>  
  
 <span data-ttu-id="660fe-2414"><xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType> Свойство `e`  в параметре предоставляет поставщику услуг Windows Sockets дополнительные сведения о запросе на чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2414">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType> property on the `e` parameter provides the Window Sockets service provider with additional information about the read request.</span></span> <span data-ttu-id="660fe-2415">Дополнительные сведения об использовании этого параметра см. в разделе <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2415">For more information about how to use this parameter, see <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="660fe-2416">Для успешного вызова этого метода необходимы следующие <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> свойства и события объекта:</span><span class="sxs-lookup"><span data-stu-id="660fe-2416">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <span data-ttu-id="660fe-2417"><xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> или <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2417"><xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> or <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A?displayProperty=nameWithType></span></span>  
  
-   <span data-ttu-id="660fe-2418"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>Если <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> задано значение</span><span class="sxs-lookup"><span data-stu-id="660fe-2418"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> if <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> is set</span></span>  
  
-   <span data-ttu-id="660fe-2419"><xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>Если <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> задано значение</span><span class="sxs-lookup"><span data-stu-id="660fe-2419"><xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> if <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> is set</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="660fe-2420">Вызывающая сторона может задать <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> для свойства любой объект пользовательского состояния, необходимый перед <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> вызовом метода, чтобы информация была извлечена в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-2420">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="660fe-2421">Если для обратного вызова требуется больше сведений, чем для одного объекта, можно создать небольшой класс для хранения других требуемых сведений о состоянии в качестве членов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2421">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="660fe-2422">Для сокетов типа Byte входящие данные помещаются в буфер до тех пор, пока буфер не будет заполнен, соединение будет закрыто или исчерпаны внутренние буферизованные данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-2422">For byte stream-style sockets, incoming data is placed into the buffer until the buffer is filled, the connection is closed, or the internally buffered data is exhausted.</span></span>  
  
 <span data-ttu-id="660fe-2423">Для сокетов, ориентированных на сообщения, входящее сообщение помещается в буфер вплоть до общего размера буфера, связанного с `e` параметром.</span><span class="sxs-lookup"><span data-stu-id="660fe-2423">For message-oriented sockets, an incoming message is placed into the buffer up to the total size of the buffer associated with the `e` parameter.</span></span> <span data-ttu-id="660fe-2424">Если размер сообщения превышает размер буфера, буфер заполняется первой частью сообщения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2424">If the message is larger than the buffer, the buffer is filled with the first part of the message.</span></span>  
  
 <span data-ttu-id="660fe-2425">Для сокетов, ориентированных на <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> соединение, метод может указывать на корректное завершение виртуального канала одним из двух способов, которые зависят от того, является ли сокет байтовым потоком или ориентированным на сообщения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2425">For connection-oriented sockets, the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> method can indicate the graceful termination of the virtual circuit in one of two ways that depend on whether the socket is byte stream or message oriented.</span></span> <span data-ttu-id="660fe-2426">Для потоковых потоков нулевое число прочитанных байтов указывает на корректное закрытие и на то, что больше байтов не будет считано.</span><span class="sxs-lookup"><span data-stu-id="660fe-2426">For byte streams, zero bytes having been read indicates graceful closure and that no more bytes will ever be read.</span></span> <span data-ttu-id="660fe-2427">Для сокетов, ориентированных на сообщения, где сообщение с нулевым байтом часто разрешено <xref:System.Net.Sockets.SocketException> , для <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> указания корректного замыкания используется параметр с параметром, имеющим значение машинного кода ошибки Winsock всаедискон (10101).</span><span class="sxs-lookup"><span data-stu-id="660fe-2427">For message-oriented sockets, where a zero byte message is often allowable, a <xref:System.Net.Sockets.SocketException> with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> set to the native Winsock WSAEDISCON error code (10101) is used to indicate graceful closure.</span></span> <span data-ttu-id="660fe-2428">В любом случае, a <xref:System.Net.Sockets.SocketException> <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> с установленным на собственный код ошибки всаеконнресет Winsock (10054) указывает на то, что произошло аварийное закрытие.</span><span class="sxs-lookup"><span data-stu-id="660fe-2428">In any case, a <xref:System.Net.Sockets.SocketException> with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> set to the native Winsock WSAECONNRESET error code (10054) indicates an abortive close has occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-2429">Аргумент был недопустимым.</span><span class="sxs-lookup"><span data-stu-id="660fe-2429">An argument was invalid.</span></span> <span data-ttu-id="660fe-2430">Свойства <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> или <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> на параметре <paramref name="e" /> должны ссылаться на допустимые буферы.</span><span class="sxs-lookup"><span data-stu-id="660fe-2430">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <paramref name="e" /> parameter must reference valid buffers.</span></span> <span data-ttu-id="660fe-2431">Может быть установлено одно из этих свойств, но нельзя одновременно устанавливать оба свойства.</span><span class="sxs-lookup"><span data-stu-id="660fe-2431">One or the other of these properties may be set, but not both at the same time.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-2432">Операция сокета уже выполнялась с использованием объекта <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />, указанного в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2432">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-2433">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-2433">Windows XP or later is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2434"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2434">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2435">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2435">An error occurred when attempting to access the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.Socket.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2436">Получает или задает значение, задающее размер приемного буфера объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2436">Gets or sets a value that specifies the size of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="660fe-2437">Объект <see cref="T:System.Int32" />, который содержит значение размера приемного буфера в байтах.</span><span class="sxs-lookup"><span data-stu-id="660fe-2437">An <see cref="T:System.Int32" /> that contains the size, in bytes, of the receive buffer.</span></span> <span data-ttu-id="660fe-2438">Значение по умолчанию — 8192.</span><span class="sxs-lookup"><span data-stu-id="660fe-2438">The default is 8192.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2439">Больший размер буфера потенциально сокращает количество пустых подтверждений (пакетов TCP без данных), но может также отложить распознавание проблем с подключением.</span><span class="sxs-lookup"><span data-stu-id="660fe-2439">A larger buffer size potentially reduces the number of empty acknowledgements (TCP packets with no data portion), but might also delay the recognition of connection difficulties.</span></span> <span data-ttu-id="660fe-2440">Если вы передаете большие файлы или используете высокоскоростное подключение с высокой задержкой (например, поставщик широкополосного подключения), попробуйте увеличить размер буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2440">Consider increasing the buffer size if you are transferring large files, or you are using a high bandwidth, high latency connection (such as a satellite broadband provider.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2441">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2441">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2442">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2442">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2443"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2443">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-2444">Значение, указанное для операции установки, меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2444">The value specified for a set operation is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveFrom">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-2445">Получает датаграмму и сохраняет конечную точку источника.</span><span class="sxs-lookup"><span data-stu-id="660fe-2445">Receives a datagram and stores the source endpoint.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveFrom">
      <MemberSignature Language="C#" Value="public int ReceiveFrom (byte[] buffer, ref System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveFrom(unsigned int8[] buffer, class System.Net.EndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveFrom (buffer As Byte(), ByRef remoteEP As EndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::EndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFrom : byte[] *  -&gt; int" Usage="socket.ReceiveFrom (buffer, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2446">Массив объекта типа <see cref="T:System.Byte" />, который является местом хранения полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2446">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-2447">Переданный по ссылке объект <see cref="T:System.Net.EndPoint" />, представляющий удаленный сервер.</span><span class="sxs-lookup"><span data-stu-id="660fe-2447">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span></span></param>
        <summary><span data-ttu-id="660fe-2448">Принимает датаграмму в буфер данных и сохраняет конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-2448">Receives a datagram into the data buffer and stores the endpoint.</span></span></summary>
        <returns><span data-ttu-id="660fe-2449">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2449">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2450">Метод считывает данные `buffer` в параметр, возвращает число успешно считанных байтов и фиксирует конечную точку удаленного узла, из которой были отправлены данные. <xref:System.Net.Sockets.Socket.ReceiveFrom%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2450">The <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent.</span></span> <span data-ttu-id="660fe-2451">Этот метод полезен, если вы собираетесь принимать неподключенные датаграммы с неизвестного узла или с нескольких узлов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2451">This method is useful if you intend to receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
 <span data-ttu-id="660fe-2452">Эта перегрузка требует только предоставления метода Receive `buffer` <xref:System.Net.EndPoint> и, представляющего удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-2452">This overload only requires you to provide a receive `buffer`, and an <xref:System.Net.EndPoint> that represents the remote host.</span></span> <span data-ttu-id="660fe-2453">По умолчанию смещение буфера равно 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2453">The buffer offset defaults to 0.</span></span> <span data-ttu-id="660fe-2454">Размер по умолчанию `buffer` `socketFlags` равен длине параметра, а значение по умолчанию <xref:System.Net.Sockets.SocketFlags.None>—.</span><span class="sxs-lookup"><span data-stu-id="660fe-2454">The size defaults to the length of the `buffer` parameter and the `socketFlags` value defaults to <xref:System.Net.Sockets.SocketFlags.None>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2455">Перед вызовом <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>необходимо явным образом <xref:System.Net.Sockets.Socket> привязать к локальной конечной точке с помощью <xref:System.Net.Sockets.Socket.Bind%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2455">Before calling <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="660fe-2456"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> В <xref:System.Net.Sockets.SocketException> противном случае вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2456">If you do not, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-2457">При использовании протоколов без <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> подключения будет считывать первые поставленные в очередь датаграммы, полученные в буфер локальной сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2457">With connectionless protocols, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="660fe-2458">Если полученная датаграмма превышает размер `buffer` <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> , метод будет заполняться `buffer` максимально возможной частью <xref:System.Net.Sockets.SocketException>сообщения и вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2458">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2459">При использовании ненадежного протокола избыточные данные будут потеряны.</span><span class="sxs-lookup"><span data-stu-id="660fe-2459">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="660fe-2460">Если используется надежный протокол, избыточные данные будут храниться в поставщике служб, и его можно будет извлечь, вызвав <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод с достаточно большим размером буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2460">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="660fe-2461">Если данные для чтения недоступны, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод блокируется до тех пор, пока данные не будут доступны.</span><span class="sxs-lookup"><span data-stu-id="660fe-2461">If no data is available for reading, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="660fe-2462">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2462">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2463">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2463">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2464">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2464">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2465">Хотя <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> предназначен для протоколов без подключения, также можно использовать протокол, ориентированный на соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2465">Although <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="660fe-2466">Если вы решили это сделать, необходимо сначала установить соединение с удаленным узлом, вызвав <xref:System.Net.Sockets.Socket.Connect%2A> метод или приняв входящее соединение с удаленным узлом, <xref:System.Net.Sockets.Socket.Accept%2A> вызвав метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2466">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming remote host connection by calling the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2467">Если вы не устанавливаете или не принимаете соединение перед вызовом <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метода, вы <xref:System.Net.Sockets.SocketException>получите.</span><span class="sxs-lookup"><span data-stu-id="660fe-2467">If you do not establish or accept a connection before calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2468">Кроме того, можно установить удаленный узел по умолчанию для протокола без установления соединения перед <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2468">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2469">В любом из этих случаев <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод будет `remoteEP` игнорировать параметр и получить данные только с подключенного или удаленного узла по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-2469">In either of these cases, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="660fe-2470">При использовании сокетов, ориентированных <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> на соединение, будет считывать столько данных, сколько доступно до `buffer`размера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2470">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read as much data as is available up to the size of `buffer`.</span></span> <span data-ttu-id="660fe-2471">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2471">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2472">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2472">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2473">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2473">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2474">Объект <xref:System.Net.Sockets.AddressFamily> , <xref:System.Net.Sockets.Socket.SendTo%2A> <xref:System.Net.EndPoint> используемый в , <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>  должен соответствовать значению объекта, используемого в. <xref:System.Net.Sockets.AddressFamily>  <xref:System.Net.EndPoint></span><span class="sxs-lookup"><span data-stu-id="660fe-2474">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2475">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2475">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2476">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2476">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2477">Следующий пример кода получает датаграмму без подключения от удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2477">The following code example receives a connectionless datagram from a remote host.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#9)]
 [!code-csharp[Socket_Sync_Send_Receive#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#9)]
 [!code-vb[Socket_Sync_Send_Receive#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2478">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2478"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-2479">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2479">-or-</span></span> 
 <span data-ttu-id="660fe-2480"><paramref name="remoteEP" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2480"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2481">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2481">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2482"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2482">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-2483">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2483">A caller in the call stack does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2484">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2484">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2485">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2485">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveFrom">
      <MemberSignature Language="C#" Value="public int ReceiveFrom (byte[] buffer, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveFrom(unsigned int8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFrom : byte[] * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.ReceiveFrom (buffer, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2486">Массив типа <see cref="T:System.Byte" />, который является местоположением памяти для полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2486">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2487">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2487">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-2488">Переданный по ссылке объект <see cref="T:System.Net.EndPoint" />, представляющий удаленный сервер.</span><span class="sxs-lookup"><span data-stu-id="660fe-2488">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span></span></param>
        <summary><span data-ttu-id="660fe-2489">Принимает датаграмму в буфер данных, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />, и сохраняет конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-2489">Receives a datagram into the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</span></span></summary>
        <returns><span data-ttu-id="660fe-2490">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2490">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2491">Метод считывает данные `buffer` в параметр, возвращает число успешно считанных байтов и фиксирует конечную точку удаленного узла, из которой были отправлены данные. <xref:System.Net.Sockets.Socket.ReceiveFrom%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2491">The <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent.</span></span> <span data-ttu-id="660fe-2492">Этот метод полезен, если вы собираетесь принимать неподключенные датаграммы с неизвестного узла или с нескольких узлов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2492">This method is useful if you intend to receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
 <span data-ttu-id="660fe-2493">Эта перегрузка требует только предоставить буфер приема, необходимый <xref:System.Net.Sockets.SocketFlags>объект <xref:System.Net.EndPoint> и, представляющий удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-2493">This overload only requires you to provide a receive buffer, the necessary <xref:System.Net.Sockets.SocketFlags>, and an <xref:System.Net.EndPoint> that represents the remote host.</span></span> <span data-ttu-id="660fe-2494">Смещение по умолчанию равно 0, а размер по умолчанию равен длине параметра buffer.</span><span class="sxs-lookup"><span data-stu-id="660fe-2494">The offset defaults to 0 and the size defaults to the length of the buffer parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2495">Перед вызовом <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>необходимо явным образом <xref:System.Net.Sockets.Socket> привязать к локальной конечной точке с помощью <xref:System.Net.Sockets.Socket.Bind%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2495">Before calling <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="660fe-2496"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> В <xref:System.Net.Sockets.SocketException> противном случае вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2496">If you do not, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-2497">При использовании протоколов без <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> подключения будет считывать первые поставленные в очередь датаграммы, полученные в буфер локальной сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2497">With connectionless protocols, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="660fe-2498">Если полученная датаграмма превышает размер `buffer` <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> , метод будет заполняться `buffer` максимально возможной частью <xref:System.Net.Sockets.SocketException>сообщения и вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2498">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2499">При использовании ненадежного протокола избыточные данные будут потеряны.</span><span class="sxs-lookup"><span data-stu-id="660fe-2499">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="660fe-2500">Если используется надежный протокол, избыточные данные будут храниться в поставщике служб, и его можно будет извлечь, вызвав <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод с достаточно большим размером буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2500">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="660fe-2501">Если данные для чтения недоступны, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод блокируется до тех пор, пока данные не будут доступны.</span><span class="sxs-lookup"><span data-stu-id="660fe-2501">If no data is available for reading, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="660fe-2502">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2502">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2503">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2503">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2504">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2504">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2505">Хотя <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> предназначен для протоколов без подключения, также можно использовать протокол, ориентированный на соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2505">Although <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="660fe-2506">Если вы решили это сделать, необходимо сначала установить соединение с удаленным узлом, вызвав <xref:System.Net.Sockets.Socket.Connect%2A> метод или приняв входящее соединение с удаленным узлом, <xref:System.Net.Sockets.Socket.Accept%2A> вызвав метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2506">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming remote host connection by calling the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2507">Если вы не устанавливаете или не принимаете соединение перед вызовом <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метода, вы <xref:System.Net.Sockets.SocketException>получите.</span><span class="sxs-lookup"><span data-stu-id="660fe-2507">If you do not establish or accept a connection before calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2508">Кроме того, можно установить удаленный узел по умолчанию для протокола без установления соединения перед <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2508">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2509">В любом из этих случаев <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод будет `remoteEP` игнорировать параметр и получить данные только с подключенного или удаленного узла по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-2509">In either of these cases, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="660fe-2510">При использовании сокетов, ориентированных <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> на соединение, будет считывать столько данных, сколько доступно до `buffer`размера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2510">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read as much data as is available up to the size of `buffer`.</span></span> <span data-ttu-id="660fe-2511">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2511">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been Received, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2512">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2512">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2513">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2513">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2514">Объект <xref:System.Net.Sockets.AddressFamily> , <xref:System.Net.Sockets.Socket.SendTo%2A> <xref:System.Net.EndPoint> используемый в , <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>  должен соответствовать значению объекта, используемого в. <xref:System.Net.Sockets.AddressFamily>  <xref:System.Net.EndPoint></span><span class="sxs-lookup"><span data-stu-id="660fe-2514">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2515">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2515">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2516">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2516">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2517">Следующий пример кода получает датаграмму без подключения от удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2517">The following code example receives a connectionless datagram from a remote host.</span></span> <span data-ttu-id="660fe-2518"><xref:System.Net.Sockets.SocketFlags>передаются <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2518"><xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#10)]
 [!code-csharp[Socket_Sync_Send_Receive#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#10)]
 [!code-vb[Socket_Sync_Send_Receive#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2519">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2519"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-2520">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2520">-or-</span></span> 
 <span data-ttu-id="660fe-2521">Свойство <paramref name="remoteEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2521"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2522">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2522">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2523"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2523">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-2524">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2524">A caller in the call stack does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2525">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2525">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2526">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2526">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveFrom">
      <MemberSignature Language="C#" Value="public int ReceiveFrom (byte[] buffer, int size, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveFrom(unsigned int8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFrom : byte[] * int * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.ReceiveFrom (buffer, size, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2527">Массив объекта типа <see cref="T:System.Byte" />, который является местом хранения полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2527">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-2528">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2528">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2529">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2529">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-2530">Переданный по ссылке объект <see cref="T:System.Net.EndPoint" />, представляющий удаленный сервер.</span><span class="sxs-lookup"><span data-stu-id="660fe-2530">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span></span></param>
        <summary><span data-ttu-id="660fe-2531">Получает указанное число байтов во входной буфер, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />, и сохраняет конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-2531">Receives the specified number of bytes into the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</span></span></summary>
        <returns><span data-ttu-id="660fe-2532">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2532">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2533">Метод считывает данные `buffer` в параметр, возвращает число успешно считанных байтов и фиксирует конечную точку удаленного узла, из которой были отправлены данные. <xref:System.Net.Sockets.Socket.ReceiveFrom%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2533">The <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent.</span></span> <span data-ttu-id="660fe-2534">Этот метод полезен, если вы собираетесь принимать неподключенные датаграммы с неизвестного узла или с нескольких узлов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2534">This method is useful if you intend to receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
 <span data-ttu-id="660fe-2535">Эта перегрузка требует только предоставить буфер приема, число байтов, которое требуется получить, необходимое <xref:System.Net.Sockets.SocketFlags>значение и объект <xref:System.Net.EndPoint> , представляющий удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-2535">This overload only requires you to provide a receive buffer, the number of bytes you want to receive, the necessary <xref:System.Net.Sockets.SocketFlags>, and an <xref:System.Net.EndPoint> that represents the remote host.</span></span> <span data-ttu-id="660fe-2536">По умолчанию смещение буфера равно 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2536">The buffer offset defaults to 0.</span></span>  
  
 <span data-ttu-id="660fe-2537">При использовании протоколов без <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> подключения будет считывать первые поставленные в очередь датаграммы, полученные в буфер локальной сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2537">With connectionless protocols, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="660fe-2538">Если полученная датаграмма превышает размер `buffer` <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> , метод будет заполняться `buffer` максимально возможной частью <xref:System.Net.Sockets.SocketException>сообщения и вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2538">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2539">При использовании ненадежного протокола избыточные данные будут потеряны.</span><span class="sxs-lookup"><span data-stu-id="660fe-2539">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="660fe-2540">Если используется надежный протокол, избыточные данные будут храниться в поставщике служб, и его можно будет извлечь, вызвав <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод с достаточно большим размером буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2540">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="660fe-2541">Если данные для чтения недоступны, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод блокируется до тех пор, пока данные не будут доступны.</span><span class="sxs-lookup"><span data-stu-id="660fe-2541">If no data is available for reading, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="660fe-2542">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2542">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2543">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2543">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2544">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2544">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2545">Хотя <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> предназначен для протоколов без подключения, также можно использовать протокол, ориентированный на соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2545">Although <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="660fe-2546">Если вы решили это сделать, необходимо сначала установить соединение с удаленным узлом, вызвав <xref:System.Net.Sockets.Socket.Connect%2A> метод или приняв входящее соединение с удаленным узлом, <xref:System.Net.Sockets.Socket.Accept%2A> вызвав метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2546">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming remote host connection by calling the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2547">Если вы не устанавливаете или не принимаете соединение перед вызовом <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метода, вы <xref:System.Net.Sockets.SocketException>получите.</span><span class="sxs-lookup"><span data-stu-id="660fe-2547">If you do not establish or accept a connection before calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2548">Кроме того, можно установить удаленный узел по умолчанию для протокола без установления соединения перед <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2548">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2549">В любом из этих случаев <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод будет `remoteEP` игнорировать параметр и получить данные только с подключенного или удаленного узла по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-2549">In either of these cases, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="660fe-2550">При использовании сокетов, ориентированных <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> на соединение, будет считывать столько данных, сколько доступно до числа байтов `size` , заданных параметром.</span><span class="sxs-lookup"><span data-stu-id="660fe-2550">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read as much data as is available up to the number of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="660fe-2551">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2551">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2552">Перед вызовом <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>необходимо явным образом <xref:System.Net.Sockets.Socket> привязать к локальной конечной точке с помощью <xref:System.Net.Sockets.Socket.Bind%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2552">Before calling <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="660fe-2553"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> В <xref:System.Net.Sockets.SocketException> противном случае вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2553">If you do not, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2554">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2554">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2555">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2555">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2556">Объект <xref:System.Net.Sockets.AddressFamily> , <xref:System.Net.Sockets.Socket.SendTo%2A> <xref:System.Net.EndPoint> используемый в , <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>  должен соответствовать значению объекта, используемого в. <xref:System.Net.Sockets.AddressFamily>  <xref:System.Net.EndPoint></span><span class="sxs-lookup"><span data-stu-id="660fe-2556">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2557">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2557">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2558">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2558">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2559">Следующий пример кода получает датаграмму без подключения от удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2559">The following code example receives a connectionless datagram from a remote host.</span></span> <span data-ttu-id="660fe-2560">Размер буфера и <xref:System.Net.Sockets.SocketFlags> передаются <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2560">The buffer size, and <xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#11)]
 [!code-csharp[Socket_Sync_Send_Receive#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#11)]
 [!code-vb[Socket_Sync_Send_Receive#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2561">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2561"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-2562">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2562">-or-</span></span> 
 <span data-ttu-id="660fe-2563">Свойство <paramref name="remoteEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2563"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-2564">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2564"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-2565">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2565">-or-</span></span> 
 <span data-ttu-id="660fe-2566">Значение<paramref name="size" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2566"><paramref name="size" /> is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2567"><paramref name="socketFlags" /> — недопустимое сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2567"><paramref name="socketFlags" /> is not a valid combination of values.</span></span>  
  
<span data-ttu-id="660fe-2568">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2568">-or-</span></span> 
<span data-ttu-id="660fe-2569">Свойство <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> не задано.</span><span class="sxs-lookup"><span data-stu-id="660fe-2569">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.</span></span>  
  
<span data-ttu-id="660fe-2570">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2570">-or-</span></span> 
<span data-ttu-id="660fe-2571">Произошла ошибка операционной системы при доступе к <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2571">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2572"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2572">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-2573">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2573">A caller in the call stack does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2574">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2574">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2575">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2575">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveFrom">
      <MemberSignature Language="C#" Value="public int ReceiveFrom (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFrom : byte[] * int * int * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.ReceiveFrom (buffer, offset, size, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2576">Массив объекта типа <see cref="T:System.Byte" />, который является местом хранения полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2576">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-2577">Позиция в параметре <paramref name="buffer" /> для хранения полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2577">The position in the <paramref name="buffer" /> parameter to store the received data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-2578">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2578">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2579">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2579">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-2580">Переданный по ссылке объект <see cref="T:System.Net.EndPoint" />, представляющий удаленный сервер.</span><span class="sxs-lookup"><span data-stu-id="660fe-2580">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span></span></param>
        <summary><span data-ttu-id="660fe-2581">Получает указанное число байтов данных в заданном расположении буфера данных с использованием определенного параметра <see cref="T:System.Net.Sockets.SocketFlags" /> и сохраняет конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-2581">Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</span></span></summary>
        <returns><span data-ttu-id="660fe-2582">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2582">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2583">Метод считывает данные `buffer` в параметр, возвращает число успешно считанных байтов и фиксирует конечную точку удаленного узла, из которой были отправлены данные. <xref:System.Net.Sockets.Socket.ReceiveFrom%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2583">The <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent.</span></span> <span data-ttu-id="660fe-2584">Этот метод полезен, если вы собираетесь принимать неподключенные датаграммы с неизвестного узла или с нескольких узлов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2584">This method is useful if you intend to receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
 <span data-ttu-id="660fe-2585">При использовании протоколов без <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> подключения будет считывать первые поставленные в очередь датаграммы, полученные в буфер локальной сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2585">With connectionless protocols, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="660fe-2586">Если полученная датаграмма превышает размер `buffer` <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> , метод будет заполняться `buffer` максимально возможной частью <xref:System.Net.Sockets.SocketException>сообщения и вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2586">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2587">При использовании ненадежного протокола избыточные данные будут потеряны.</span><span class="sxs-lookup"><span data-stu-id="660fe-2587">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="660fe-2588">Если используется надежный протокол, избыточные данные будут храниться в поставщике служб, и его можно будет извлечь, вызвав <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод с достаточно большим размером буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2588">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="660fe-2589">Если данные для чтения недоступны, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод блокируется до тех пор, пока данные не будут доступны.</span><span class="sxs-lookup"><span data-stu-id="660fe-2589">If no data is available for reading, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="660fe-2590">Если вы используете неблокирующий режим и в буфере <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> стека протокола нет доступных данных, метод будет завершен немедленно и <xref:System.Net.Sockets.SocketException>создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2590">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2591">Чтобы определить, доступны <xref:System.Net.Sockets.Socket.Available%2A> ли данные для чтения, можно использовать свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2591">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="660fe-2592">Если <xref:System.Net.Sockets.Socket.Available%2A> имеет ненулевое значение, повторите операцию получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2592">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="660fe-2593">Хотя <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> предназначен для протоколов без подключения, также можно использовать протокол, ориентированный на соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2593">Although <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="660fe-2594">Если вы решили это сделать, необходимо сначала установить соединение с удаленным узлом, вызвав <xref:System.Net.Sockets.Socket.Connect%2A> метод или приняв входящее соединение с удаленным узлом, <xref:System.Net.Sockets.Socket.Accept%2A> вызвав метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2594">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming remote host connection by calling the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-2595">Если вы не устанавливаете или не принимаете соединение перед вызовом <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метода, вы <xref:System.Net.Sockets.SocketException>получите.</span><span class="sxs-lookup"><span data-stu-id="660fe-2595">If you do not establish or accept a connection before calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2596">Кроме того, можно установить удаленный узел по умолчанию для протокола без установления соединения перед <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2596">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="660fe-2597">В любом из этих случаев <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод будет `remoteEP` игнорировать параметр и получить данные только с подключенного или удаленного узла по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-2597">In either of these cases, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="660fe-2598">При использовании сокетов, ориентированных <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> на соединение, будет считывать столько данных, сколько доступно в байтах `size` , заданных параметром.</span><span class="sxs-lookup"><span data-stu-id="660fe-2598">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read as much data as is available up to the amount of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="660fe-2599">Если удаленный узел завершает <xref:System.Net.Sockets.Socket> соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> с методом и все доступные данные получены, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> метод немедленно завершается и возвращает нулевые байты.</span><span class="sxs-lookup"><span data-stu-id="660fe-2599">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been Received, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2600">Перед вызовом <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>необходимо явным образом <xref:System.Net.Sockets.Socket> привязать к локальной конечной точке с помощью <xref:System.Net.Sockets.Socket.Bind%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2600">Before calling <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="660fe-2601"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> В <xref:System.Net.Sockets.SocketException> противном случае вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2601">If you do not, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2602">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2602">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2603">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2603">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2604">Объект <xref:System.Net.Sockets.AddressFamily> , <xref:System.Net.Sockets.Socket.SendTo%2A> <xref:System.Net.EndPoint> используемый в , <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>  должен соответствовать значению объекта, используемого в. <xref:System.Net.Sockets.AddressFamily>  <xref:System.Net.EndPoint></span><span class="sxs-lookup"><span data-stu-id="660fe-2604">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2605">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2605">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2606">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2606">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2607">Следующий пример кода получает датаграмму без подключения от удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2607">The following code example receives a connectionless datagram from a remote host.</span></span> <span data-ttu-id="660fe-2608">Смещение, размер буфера и <xref:System.Net.Sockets.SocketFlags> передаются <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2608">The offset, buffer size, and <xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#12](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#12)]
 [!code-csharp[Socket_Sync_Send_Receive#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#12)]
 [!code-vb[Socket_Sync_Send_Receive#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2609">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2609"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-2610">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2610">-or-</span></span> 
 <span data-ttu-id="660fe-2611">Свойство <paramref name="remoteEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2611"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-2612">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2612"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-2613">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2613">-or-</span></span> 
 <span data-ttu-id="660fe-2614">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2614"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-2615">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2615">-or-</span></span> 
 <span data-ttu-id="660fe-2616">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2616"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-2617">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2617">-or-</span></span> 
 <span data-ttu-id="660fe-2618">Значение <paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра смещения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2618"><paramref name="size" /> is greater than the length of the <paramref name="buffer" /> minus the value of the offset parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2619"><paramref name="socketFlags" /> — недопустимое сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2619"><paramref name="socketFlags" /> is not a valid combination of values.</span></span>  
  
<span data-ttu-id="660fe-2620">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2620">-or-</span></span> 
<span data-ttu-id="660fe-2621">Свойство <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> не задано.</span><span class="sxs-lookup"><span data-stu-id="660fe-2621">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.</span></span>  
  
<span data-ttu-id="660fe-2622">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2622">-or-</span></span> 
<span data-ttu-id="660fe-2623">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2623">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2624"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2624">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2625">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2625">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2626">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2626">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveFromAsync">
      <MemberSignature Language="C#" Value="public bool ReceiveFromAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReceiveFromAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveFromAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReceiveFromAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFromAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.ReceiveFromAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-2627">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2627">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-2628">Начинает выполнение асинхронного приема данных с указанного сетевого устройства.</span><span class="sxs-lookup"><span data-stu-id="660fe-2628">Begins to asynchronously receive data from a specified network device.</span></span></summary>
        <returns><span data-ttu-id="660fe-2629"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-2629"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-2630">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2630">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-2631"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-2631"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-2632">В данном случае событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не будет создано и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-2632">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2633"><xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> Метод используется в основном для получения данных в сокете без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2633">The <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> method is used primarily to receive data on a connectionless socket.</span></span> <span data-ttu-id="660fe-2634">Локальный адрес сокета должен быть известен.</span><span class="sxs-lookup"><span data-stu-id="660fe-2634">The socket's local address must be known.</span></span>  
  
 <span data-ttu-id="660fe-2635">Вызывающий объект должен задать <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> свойство <xref:System.Net.IPEndPoint> для удаленного узла, от которого должны быть получены данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-2635">The caller must set the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property to the <xref:System.Net.IPEndPoint> of the remote host from which the data is to be received.</span></span>  
  
 <span data-ttu-id="660fe-2636"><xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType> Свойство `e`  в параметре предоставляет поставщику услуг Windows Sockets дополнительные сведения о запросе на чтение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2636">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType> property on the `e` parameter provides the Window Sockets service provider with additional information about the read request.</span></span> <span data-ttu-id="660fe-2637">Дополнительные сведения об использовании этого параметра см. в разделе <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2637">For more information about how to use this parameter, see <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="660fe-2638">Для успешного вызова этого метода необходимы следующие <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> свойства и события объекта:</span><span class="sxs-lookup"><span data-stu-id="660fe-2638">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="660fe-2639">Вызывающая сторона может задать <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> для свойства любой объект пользовательского состояния, необходимый перед <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> вызовом метода, чтобы информация была извлечена в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-2639">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="660fe-2640">Если для обратного вызова требуется больше сведений, чем для одного объекта, можно создать небольшой класс для хранения других требуемых сведений о состоянии в качестве членов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2640">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="660fe-2641">Для сокетов, ориентированных на сообщения, входящее сообщение помещается в буфер вплоть до общего размера буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2641">For message-oriented sockets, an incoming message is placed into the buffer up to the total size of the buffer.</span></span> <span data-ttu-id="660fe-2642">Свойства <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> и <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>  определяют, где в буфере размещаются данные, и объем данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2642">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> properties determine where in the buffer the data is placed and the amount of data.</span></span>  
  
 <span data-ttu-id="660fe-2643">Для сокетов типа Byte входящие данные помещаются в буфер до тех пор, пока буфер не будет заполнен, соединение будет закрыто или исчерпаны внутренние буферизованные данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-2643">For byte stream-style sockets, incoming data is placed into the buffer until the buffer is filled, the connection is closed, or the internally buffered data is exhausted.</span></span> <span data-ttu-id="660fe-2644">Свойства <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> и <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>  определяют, где в буфере размещаются данные, и объем данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2644">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> properties determine where in the buffer the data is placed and the amount of data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2645">Объект <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> не может иметь значение "null".</span><span class="sxs-lookup"><span data-stu-id="660fe-2645">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-2646">Операция сокета уже выполнялась с использованием объекта <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />, указанного в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2646">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-2647">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-2647">Windows XP or later is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2648"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2648">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2649">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2649">An error occurred when attempting to access the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessageFrom">
      <MemberSignature Language="C#" Value="public int ReceiveMessageFrom (byte[] buffer, int offset, int size, ref System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP, out System.Net.Sockets.IPPacketInformation ipPacketInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveMessageFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags&amp; socketFlags, class System.Net.EndPoint&amp; remoteEP, [out] valuetype System.Net.Sockets.IPPacketInformation&amp; ipPacketInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveMessageFrom (buffer As Byte(), offset As Integer, size As Integer, ByRef socketFlags As SocketFlags, ByRef remoteEP As EndPoint, ByRef ipPacketInformation As IPPacketInformation) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveMessageFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags % socketFlags, System::Net::EndPoint ^ % remoteEP, [Runtime::InteropServices::Out] System::Net::Sockets::IPPacketInformation % ipPacketInformation);" />
      <MemberSignature Language="F#" Value="member this.ReceiveMessageFrom : byte[] * int * int *  *  *  -&gt; int" Usage="socket.ReceiveMessageFrom (buffer, offset, size, socketFlags, remoteEP, ipPacketInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" RefType="ref" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ipPacketInformation" Type="System.Net.Sockets.IPPacketInformation" RefType="out" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2650">Массив объекта типа <see cref="T:System.Byte" />, который является местом хранения полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2650">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-2651">Позиция в параметре <paramref name="buffer" /> для хранения полученных данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2651">The position in the <paramref name="buffer" /> parameter to store the received data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-2652">Количество байтов, которые необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2652">The number of bytes to receive.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2653">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2653">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-2654">Переданный по ссылке объект <see cref="T:System.Net.EndPoint" />, представляющий удаленный сервер.</span><span class="sxs-lookup"><span data-stu-id="660fe-2654">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span></span></param>
        <param name="ipPacketInformation"><span data-ttu-id="660fe-2655"><see cref="T:System.Net.Sockets.IPPacketInformation" /> сохраняет адрес и сведения об интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="660fe-2655">An <see cref="T:System.Net.Sockets.IPPacketInformation" /> holding address and interface information.</span></span></param>
        <summary><span data-ttu-id="660fe-2656">Получает указанное число байтов данных в указанное расположение буфера данных с помощью заданного <see cref="T:System.Net.Sockets.SocketFlags" /> и сохраняет конечную точку и сведения о пакете.</span><span class="sxs-lookup"><span data-stu-id="660fe-2656">Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint and packet information.</span></span></summary>
        <returns><span data-ttu-id="660fe-2657">Количество полученных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2657">The number of bytes received.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2658">Метод считывает данные `buffer` в параметр, возвращает число успешно считанных байтов и захватывает конечную точку удаленного узла, из которой были отправлены данные, а также сведения о полученных пакетах. <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2658">The <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent, as well as information about the received packet.</span></span>  
  
 <span data-ttu-id="660fe-2659"><xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> Метод используется в основном для получения данных сообщений в сокете без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2659">The <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method is used primarily to receive message data on a connectionless socket.</span></span> <span data-ttu-id="660fe-2660">Локальный адрес сокета должен быть известен.</span><span class="sxs-lookup"><span data-stu-id="660fe-2660">The socket's local address must be known.</span></span> <span data-ttu-id="660fe-2661">Этот метод может использоваться только с датаграммами и необработанными сокетами.</span><span class="sxs-lookup"><span data-stu-id="660fe-2661">This method can only be used with datagram and raw sockets.</span></span> <span data-ttu-id="660fe-2662">Сокет должен быть инициализирован с типом сокета, установленным в <xref:System.Net.Sockets.SocketType.Dgram> , <xref:System.Net.Sockets.SocketType.Raw> или до вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2662">The socket must be initialized with the socket type set to <xref:System.Net.Sockets.SocketType.Dgram> or <xref:System.Net.Sockets.SocketType.Raw> before calling this method.</span></span> <span data-ttu-id="660fe-2663">Это можно сделать при создании сокета с помощью <xref:System.Net.Sockets.Socket.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2663">This can be done when the socket is constructed using <xref:System.Net.Sockets.Socket.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="660fe-2664">Для сокетов, ориентированных на сообщения, входящее сообщение помещается `buffer` в параметр вплоть до общего размера, указанного `size` в параметре.</span><span class="sxs-lookup"><span data-stu-id="660fe-2664">For message-oriented sockets, an incoming message is placed into the `buffer` parameter up to the total size specified in the `size` parameter.</span></span> <span data-ttu-id="660fe-2665">Параметр определяет место `buffer` размещения данных. `offset`</span><span class="sxs-lookup"><span data-stu-id="660fe-2665">The `offset` parameter determines where in the `buffer` the data is placed.</span></span> <span data-ttu-id="660fe-2666">Фактический объем данных, помещаемых в `buffer` , возвращается <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="660fe-2666">The actual amount of data placed into the `buffer` is returned by the <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-2667">Метод автоматически <xref:System.Net.Sockets.Socket>устанавливает параметр <xref:System.Net.Sockets.SocketOptionName.PacketInformation> сокета в первый раз , когда он вызывается для заданного `true` . <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2667">The <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method automatically method sets the <xref:System.Net.Sockets.SocketOptionName.PacketInformation> socket option to `true` the first time it is called for a given <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-2668">Однако возвращенный <xref:System.Net.Sockets.IPPacketInformation> объект будет действителен только для пакетов, поступающих на локальный компьютер после установки параметра сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2668">However, the returned <xref:System.Net.Sockets.IPPacketInformation> object will only be valid for packets which arrive at the local computer after the socket option has been set.</span></span> <span data-ttu-id="660fe-2669">Значение, если сокет отправляет пакеты <xref:System.Net.Sockets.Socket.Bind%2A> между моментом привязки к локальной конечной точке (явным образом методом или неявно одним <xref:System.Net.Sockets.Socket.Connect%2A>из методов <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, <xref:System.Net.Sockets.Socket.SendTo%2A>, или <xref:System.Net.Sockets.Socket.SendToAsync%2A> ) и первым вызовом <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> метода метод, вызовы <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> метода будут возвращать недопустимые <xref:System.Net.Sockets.IPPacketInformation> объекты для этих пакетов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2669">If a socket is sent packets between when it is bound to a local endpoint (explicitly by the <xref:System.Net.Sockets.Socket.Bind%2A> method or implicitly by one of the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, <xref:System.Net.Sockets.Socket.SendTo%2A>, or <xref:System.Net.Sockets.Socket.SendToAsync%2A> methods) and its first call to the <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method, calls to <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method will return invalid <xref:System.Net.Sockets.IPPacketInformation> objects for these packets.</span></span>  
  
 <span data-ttu-id="660fe-2670">Чтобы убедиться, что <xref:System.Net.Sockets.IPPacketInformation> все объекты являются допустимыми, приложение должно <xref:System.Net.Sockets.SocketOptionName.PacketInformation> установить параметр сокета `true` в значение, прежде чем он <xref:System.Net.Sockets.Socket.SetSocketOption%28System.Net.Sockets.SocketOptionLevel%2CSystem.Net.Sockets.SocketOptionName%2CSystem.Boolean%29> будет привязан к локальной конечной точке с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2670">To ensure that all <xref:System.Net.Sockets.IPPacketInformation> objects are valid, an application should set the <xref:System.Net.Sockets.SocketOptionName.PacketInformation> socket option to `true` before it is bound to a local endpoint using the <xref:System.Net.Sockets.Socket.SetSocketOption%28System.Net.Sockets.SocketOptionLevel%2CSystem.Net.Sockets.SocketOptionName%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="660fe-2671">Приложение может проверить `ipPacketInformation` параметр, если необходимо узнать, была ли датаграмма отправлена с помощью одноадресной рассылки, многоадресной рассылки или широковещательной рассылки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2671">An application can examine the `ipPacketInformation` parameter if it needs to know if the datagram was sent using a unicast, multicast, or broadcast address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2672">Объект <xref:System.Net.Sockets.AddressFamily> , <xref:System.Net.Sockets.Socket.SendTo%2A> <xref:System.Net.EndPoint> используемый в , <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>  должен соответствовать значению объекта, используемого в. <xref:System.Net.Sockets.AddressFamily>  <xref:System.Net.EndPoint></span><span class="sxs-lookup"><span data-stu-id="660fe-2672">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2673">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2673">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2674">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2674">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2675">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2675"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-2676">\- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2676">\- or-</span></span> 
 <span data-ttu-id="660fe-2677"><paramref name="remoteEP" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2677"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-2678">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2678"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-2679">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2679">-or-</span></span> 
 <span data-ttu-id="660fe-2680">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2680"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-2681">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2681">-or-</span></span> 
 <span data-ttu-id="660fe-2682">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2682"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-2683">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-2683">-or-</span></span> 
 <span data-ttu-id="660fe-2684">Значение <paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра смещения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2684"><paramref name="size" /> is greater than the length of the <paramref name="buffer" /> minus the value of the offset parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2685"><paramref name="socketFlags" /> — недопустимое сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2685"><paramref name="socketFlags" /> is not a valid combination of values.</span></span>  
  
<span data-ttu-id="660fe-2686">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2686">-or-</span></span> 
<span data-ttu-id="660fe-2687">Свойство <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> не задано.</span><span class="sxs-lookup"><span data-stu-id="660fe-2687">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.</span></span>  
  
<span data-ttu-id="660fe-2688">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2688">-or-</span></span> 
<span data-ttu-id="660fe-2689">Платформа .NET Framework выполняется на 64-разрядном процессоре AMD.</span><span class="sxs-lookup"><span data-stu-id="660fe-2689">The .NET Framework is running on an AMD 64-bit processor.</span></span>  
  
<span data-ttu-id="660fe-2690">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2690">-or-</span></span> 
<span data-ttu-id="660fe-2691">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2691">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2692"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2692">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-2693">Используется операционная система Windows 2000 или более ранняя версия, а для этого метода необходима операционная система Windows XP.</span><span class="sxs-lookup"><span data-stu-id="660fe-2693">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</span></span></exception>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="660fe-2694">для приема подключений из сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2694">for accepting connections from the network.</span></span> <span data-ttu-id="660fe-2695">Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Accept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2695">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span></span></permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessageFromAsync">
      <MemberSignature Language="C#" Value="public bool ReceiveMessageFromAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReceiveMessageFromAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveMessageFromAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReceiveMessageFromAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.ReceiveMessageFromAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.ReceiveMessageFromAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-2696">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2696">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-2697">Начинает асинхронный прием заданного числа байтов данных в указанное место буфера данных, используя заданный объект <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />, а также сохраняет конечную точку и информацию пакета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2697">Begins to asynchronously receive the specified number of bytes of data into the specified location in the data buffer, using the specified <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />, and stores the endpoint and packet information.</span></span></summary>
        <returns><span data-ttu-id="660fe-2698"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-2698"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-2699">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2699">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-2700"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-2700"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-2701">В данном случае событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не будет создано и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-2701">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2702"><xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> Метод используется в основном для получения данных сообщений в сокете без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2702">The <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method is used primarily to receive message data on a connectionless socket.</span></span> <span data-ttu-id="660fe-2703">Локальный адрес сокета должен быть известен.</span><span class="sxs-lookup"><span data-stu-id="660fe-2703">The socket's local address must be known.</span></span> <span data-ttu-id="660fe-2704">Этот метод может использоваться только с датаграммами и необработанными сокетами.</span><span class="sxs-lookup"><span data-stu-id="660fe-2704">This method can only be used with datagram and raw sockets.</span></span> <span data-ttu-id="660fe-2705">Сокет должен быть инициализирован с типом сокета, установленным в <xref:System.Net.Sockets.SocketType.Dgram> , <xref:System.Net.Sockets.SocketType.Raw> или до вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2705">The socket must be initialized with the socket type set to <xref:System.Net.Sockets.SocketType.Dgram> or <xref:System.Net.Sockets.SocketType.Raw> before calling this method.</span></span> <span data-ttu-id="660fe-2706">Это можно сделать при создании сокета с помощью <xref:System.Net.Sockets.Socket.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2706">This can be done when the socket is constructed using <xref:System.Net.Sockets.Socket.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="660fe-2707">Вызывающий объект должен задать <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> свойство <xref:System.Net.IPEndPoint> для удаленного узла, от которого должны быть получены данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-2707">The caller must set the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property to the <xref:System.Net.IPEndPoint> of the remote host from which the data is to be received.</span></span>  
  
 <span data-ttu-id="660fe-2708">Для успешного вызова этого метода необходимы следующие <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> свойства и события объекта:</span><span class="sxs-lookup"><span data-stu-id="660fe-2708">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="660fe-2709">Вызывающая сторона может задать <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> для свойства любой объект пользовательского состояния, необходимый перед <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> вызовом метода, чтобы информация была извлечена в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-2709">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="660fe-2710">Если для обратного вызова требуется больше сведений, чем для одного объекта, можно создать небольшой класс для хранения других требуемых сведений о состоянии в качестве членов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2710">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="660fe-2711">Для сокетов, ориентированных на сообщения, входящее сообщение помещается в буфер вплоть до общего размера буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2711">For message-oriented sockets, an incoming message is placed into the buffer up to the total size of the buffer.</span></span> <span data-ttu-id="660fe-2712">Свойства <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> и <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>  определяют, где в буфере размещаются данные, и объем данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2712">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> properties determine where in the buffer the data is placed and the amount of data.</span></span>  
  
 <span data-ttu-id="660fe-2713">Метод автоматически <xref:System.Net.Sockets.Socket>устанавливает параметр <xref:System.Net.Sockets.SocketOptionName.PacketInformation> сокета в первый раз , когда он вызывается для заданного `true` . <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2713">The <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method automatically sets the <xref:System.Net.Sockets.SocketOptionName.PacketInformation> socket option to `true` the first time it is called for a given <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-2714"><xref:System.Net.Sockets.IPPacketInformation> Однако объект будет действителен только для пакетов, поступающих на локальный компьютер после установки параметра сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2714">However, the <xref:System.Net.Sockets.IPPacketInformation> object will only be valid for packets which arrive at the local computer after the socket option has been set.</span></span> <span data-ttu-id="660fe-2715">Значение, если сокет отправляет пакеты между <xref:System.Net.Sockets.Socket.Bind%2A> моментом привязки сокета к локальной конечной точке (явно методом или неявно одним <xref:System.Net.Sockets.Socket.Connect%2A>из методов, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> <xref:System.Net.Sockets.Socket.SendTo%2A>, или <xref:System.Net.Sockets.Socket.SendToAsync%2A> ) и первым вызовом метода <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A>, вызовы метода приведут к <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> недопустимым <xref:System.Net.Sockets.IPPacketInformation> объектам для этих пакетов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2715">If a socket is sent packets between when the socket is bound to a local endpoint (explicitly by the <xref:System.Net.Sockets.Socket.Bind%2A> method or implicitly by one of the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, <xref:System.Net.Sockets.Socket.SendTo%2A>, or <xref:System.Net.Sockets.Socket.SendToAsync%2A> methods) and the first call to the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method, calls to <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method will result in invalid <xref:System.Net.Sockets.IPPacketInformation> objects for these packets.</span></span>  
  
 <span data-ttu-id="660fe-2716">Чтобы убедиться, что <xref:System.Net.Sockets.IPPacketInformation> все объекты являются допустимыми, приложение должно <xref:System.Net.Sockets.SocketOptionName.PacketInformation> установить параметр сокета`true` в значение, прежде чем он <xref:System.Net.Sockets.Socket.SetSocketOption%28System.Net.Sockets.SocketOptionLevel%2CSystem.Net.Sockets.SocketOptionName%2CSystem.Boolean%29> будет привязан к локальной конечной точке с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2716">To ensure that all <xref:System.Net.Sockets.IPPacketInformation> objects are valid, an application should set the <xref:System.Net.Sockets.SocketOptionName.PacketInformation> socket option to`true` before it is bound to a local endpoint using the <xref:System.Net.Sockets.Socket.SetSocketOption%28System.Net.Sockets.SocketOptionLevel%2CSystem.Net.Sockets.SocketOptionName%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="660fe-2717">Приложение может проверить полученные <xref:System.Net.Sockets.IPPacketInformation> объекты, если необходимо узнать, была ли датаграмма отправлена с использованием одноадресного, многоадресного или широковещательного адреса.</span><span class="sxs-lookup"><span data-stu-id="660fe-2717">An application can examine the resulting <xref:System.Net.Sockets.IPPacketInformation> objects if it needs to know if the datagram was sent using a unicast, multicast, or broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2718">Объект <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> не может иметь значение "null".</span><span class="sxs-lookup"><span data-stu-id="660fe-2718">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-2719">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-2719">Windows XP or later is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2720"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2720">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2721">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2721">An error occurred when attempting to access the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.Socket.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2722">Получает или устанавливает значение, указывающее промежуток времени, после которого для синхронного вызова <see cref="Overload:System.Net.Sockets.Socket.Receive" /> истечет время тайм-аута.</span><span class="sxs-lookup"><span data-stu-id="660fe-2722">Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Receive" /> call will time out.</span></span></summary>
        <value><span data-ttu-id="660fe-2723">Значение времени ожидания в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="660fe-2723">The time-out value, in milliseconds.</span></span> <span data-ttu-id="660fe-2724">По умолчанию используется значение 0, указывающее на бесконечное значение интервала для тайм-аута</span><span class="sxs-lookup"><span data-stu-id="660fe-2724">The default value is 0, which indicates an infinite time-out period.</span></span> <span data-ttu-id="660fe-2725">Задание значения -1 также указывает на бесконечное значение интервала для тайм-аута.</span><span class="sxs-lookup"><span data-stu-id="660fe-2725">Specifying -1 also indicates an infinite time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2726">Этот параметр применяется только к <xref:System.Net.Sockets.Socket.Receive%2A> синхронным вызовам.</span><span class="sxs-lookup"><span data-stu-id="660fe-2726">This option applies to synchronous <xref:System.Net.Sockets.Socket.Receive%2A> calls only.</span></span> <span data-ttu-id="660fe-2727">При превышении <xref:System.Net.Sockets.Socket.Receive%2A> времени ожидания метод вызовет <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2727">If the time-out period is exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2728">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-2728">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2729">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2729">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2730"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2730">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-2731">Значение, указанное для операции задания, меньше –1.</span><span class="sxs-lookup"><span data-stu-id="660fe-2731">The value specified for a set operation is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ RemoteEndPoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.EndPoint" Usage="System.Net.Sockets.Socket.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2732">Возвращает удаленную конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-2732">Gets the remote endpoint.</span></span></summary>
        <value><span data-ttu-id="660fe-2733">Объект <see cref="T:System.Net.EndPoint" />, с которым взаимодействует объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2733">The <see cref="T:System.Net.EndPoint" /> with which the <see cref="T:System.Net.Sockets.Socket" /> is communicating.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2734">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> свойство получает объект <xref:System.Net.EndPoint> , содержащий удаленный IP-адрес и номер порта, к которому подключен объект <xref:System.Net.Sockets.Socket> .</span><span class="sxs-lookup"><span data-stu-id="660fe-2734">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property gets the <xref:System.Net.EndPoint> that contains the remote IP address and port number to which the <xref:System.Net.Sockets.Socket> is connected.</span></span> <span data-ttu-id="660fe-2735">Если используется протокол без подключения, <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> содержит удаленный IP-адрес по умолчанию и номер порта, с <xref:System.Net.Sockets.Socket> которым будет взаимодействовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-2735">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> contains the default remote IP address and port number with which the <xref:System.Net.Sockets.Socket> will communicate.</span></span> <span data-ttu-id="660fe-2736">Перед извлечением любой <xref:System.Net.EndPoint> информации необходимо <xref:System.Net.IPEndPoint> привести его к типу.</span><span class="sxs-lookup"><span data-stu-id="660fe-2736">You must cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint> before retrieving any information.</span></span> <span data-ttu-id="660fe-2737">Затем можно вызвать <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> метод, чтобы получить удаленный <xref:System.Net.IPAddress>объект, и <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> метод для получения номера удаленного порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-2737">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> method to retrieve the remote <xref:System.Net.IPAddress>, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> method to retrieve the remote port number.</span></span>  
  
 <span data-ttu-id="660fe-2738">Задается после вызова <xref:System.Net.Sockets.Socket.Connect%2A>либо <xref:System.Net.Sockets.Socket.Accept%2A> в, либо в. <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-2738">The <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> is set after a call to either <xref:System.Net.Sockets.Socket.Accept%2A> or <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-2739">Если попытаться получить доступ к этому свойству ранее <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> , <xref:System.Net.Sockets.SocketException>будет вызвано исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2739">If you try to access this property earlier, <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2740">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2740">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2741">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2741">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2742">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2742">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2743">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2743">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2744">В следующем примере кода извлекаются и отображаются локальные и удаленные конечные точки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2744">The following code example retrieves and displays the local and remote endpoints.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#4)]
 [!code-csharp[Socket_Socket_Options#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#4)]
 [!code-vb[Socket_Socket_Options#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2745">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2745">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2746"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2746">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Accept" />
      </Docs>
    </Member>
    <Member MemberName="SafeHandle">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SafeSocketHandle SafeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.SafeSocketHandle SafeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SafeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeHandle As SafeSocketHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SafeSocketHandle ^ SafeHandle { System::Net::Sockets::SafeSocketHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeHandle : System.Net.Sockets.SafeSocketHandle" Usage="System.Net.Sockets.Socket.SafeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SafeSocketHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-2747">Получает <see cref="T:System.Net.Sockets.SafeSocketHandle" />, представляющий дескриптор сокета, инкапсулируемый текущим объектом <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2747">Gets a <see cref="T:System.Net.Sockets.SafeSocketHandle" /> that represents the socket handle that the current <see cref="T:System.Net.Sockets.Socket" /> object encapsulates.</span></span></summary>
        <value><span data-ttu-id="660fe-2748">Открытый в безопасном режиме обработчик сокета, который инкапсулирует текущий <see cref="T:System.Net.Sockets.Socket" /> объект.</span><span class="sxs-lookup"><span data-stu-id="660fe-2748">A socket handle exposed in a safe manner for the socket that the current <see cref="T:System.Net.Sockets.Socket" /> object encapsulates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

> [!IMPORTANT]
> <span data-ttu-id="660fe-2749"><xref:System.Net.Sockets.SafeSocketHandle> Использование для прямого взаимодействия с сокетом может привести к недокументированному состоянию.</span><span class="sxs-lookup"><span data-stu-id="660fe-2749">Using the <xref:System.Net.Sockets.SafeSocketHandle> to operate on the socket directly may result in an undocumented state.</span></span> 

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public static void Select (System.Collections.IList checkRead, System.Collections.IList checkWrite, System.Collections.IList checkError, int microSeconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Select(class System.Collections.IList checkRead, class System.Collections.IList checkWrite, class System.Collections.IList checkError, int32 microSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Select (checkRead As IList, checkWrite As IList, checkError As IList, microSeconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Select(System::Collections::IList ^ checkRead, System::Collections::IList ^ checkWrite, System::Collections::IList ^ checkError, int microSeconds);" />
      <MemberSignature Language="F#" Value="static member Select : System.Collections.IList * System.Collections.IList * System.Collections.IList * int -&gt; unit" Usage="System.Net.Sockets.Socket.Select (checkRead, checkWrite, checkError, microSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkRead" Type="System.Collections.IList" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkWrite" Type="System.Collections.IList" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkError" Type="System.Collections.IList" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="microSeconds" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="checkRead"><span data-ttu-id="660fe-2750"><see cref="T:System.Collections.IList" /> экземпляров <see cref="T:System.Net.Sockets.Socket" /> для проверки удобства чтения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2750">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for readability.</span></span></param>
        <param name="checkWrite"><span data-ttu-id="660fe-2751"><see cref="T:System.Collections.IList" /> экземпляров <see cref="T:System.Net.Sockets.Socket" /> для проверки удобства ведения записи.</span><span class="sxs-lookup"><span data-stu-id="660fe-2751">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for writability.</span></span></param>
        <param name="checkError"><span data-ttu-id="660fe-2752"><see cref="T:System.Collections.IList" /> экземпляров <see cref="T:System.Net.Sockets.Socket" /> для проверки ошибок.</span><span class="sxs-lookup"><span data-stu-id="660fe-2752">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for errors.</span></span></param>
        <param name="microSeconds"><span data-ttu-id="660fe-2753">Значение времени ожидания в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="660fe-2753">The time-out value, in microseconds.</span></span> <span data-ttu-id="660fe-2754">Значение -1 указывает на бесконечное время ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-2754">A -1 value indicates an infinite time-out.</span></span></param>
        <summary><span data-ttu-id="660fe-2755">Определяет состояние одного или нескольких сокетов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2755">Determines the status of one or more sockets.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2756"><xref:System.Net.Sockets.Socket.Select%2A>— Это статический метод, который определяет состояние одного или нескольких <xref:System.Net.Sockets.Socket> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="660fe-2756"><xref:System.Net.Sockets.Socket.Select%2A> is a static method that determines the status of one or more <xref:System.Net.Sockets.Socket> instances.</span></span> <span data-ttu-id="660fe-2757"><xref:System.Collections.IList> Перед <xref:System.Net.Sockets.Socket.Select%2A>  использованием метода необходимо поместить один или несколько сокетов в.</span><span class="sxs-lookup"><span data-stu-id="660fe-2757">You must place one or more sockets into an <xref:System.Collections.IList> before you can use the <xref:System.Net.Sockets.Socket.Select%2A> method.</span></span> <span data-ttu-id="660fe-2758">Проверьте наличие удобочитаемости, вызвав <xref:System.Net.Sockets.Socket.Select%2A> метод <xref:System.Collections.IList> с `checkRead` параметром.</span><span class="sxs-lookup"><span data-stu-id="660fe-2758">Check for readability by calling <xref:System.Net.Sockets.Socket.Select%2A> with the <xref:System.Collections.IList> as the `checkRead` parameter.</span></span> <span data-ttu-id="660fe-2759">Чтобы проверить сокеты для записи, используйте `checkWrite` параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-2759">To check your sockets for writability, use the `checkWrite` parameter.</span></span> <span data-ttu-id="660fe-2760">Для обнаружения условий ошибок используйте `checkError`.</span><span class="sxs-lookup"><span data-stu-id="660fe-2760">For detecting error conditions, use `checkError`.</span></span> <span data-ttu-id="660fe-2761">После вызова <xref:System.Net.Sockets.Socket.Select%2A>функции <xref:System.Collections.IList> будут заполнены только теми сокетами, которые соответствуют условиям.</span><span class="sxs-lookup"><span data-stu-id="660fe-2761">After calling <xref:System.Net.Sockets.Socket.Select%2A>, the <xref:System.Collections.IList> will be filled with only those sockets that satisfy the conditions.</span></span>  
  
 <span data-ttu-id="660fe-2762">В состоянии прослушивания удобочитаемость означает, что вызов <xref:System.Net.Sockets.Socket.Accept%2A> будет выполнен без блокировки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2762">If you are in a listening state, readability means that a call to <xref:System.Net.Sockets.Socket.Accept%2A> will succeed without blocking.</span></span> <span data-ttu-id="660fe-2763">Если вы уже приняли подключение, удобочитаемость означает, что данные доступны для чтения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2763">If you have already accepted the connection, readability means that data is available for reading.</span></span> <span data-ttu-id="660fe-2764">В таких случаях все операции получения будут выполняться без блокировки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2764">In these cases, all receive operations will succeed without blocking.</span></span> <span data-ttu-id="660fe-2765">Удобочитаемость также может указывать на то, <xref:System.Net.Sockets.Socket> что удаленное соединение завершилось. в этом случае <xref:System.Net.Sockets.Socket.Receive%2A> вызов будет немедленно возвращаться с нулевым количеством байт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2765">Readability can also indicate whether the remote <xref:System.Net.Sockets.Socket> has shut down the connection; in that case a call to <xref:System.Net.Sockets.Socket.Receive%2A> will return immediately, with zero bytes returned.</span></span>  
  
 <span data-ttu-id="660fe-2766"><xref:System.Net.Sockets.Socket.Select%2A>Возвращает, когда по крайней мере один из нужных сокетов (сокеты в `checkRead`списках `checkWrite`, и `checkError` ) соответствует заданным условиям, или превышено значение параметра в зависимости от того, что `microSeconds` происходит первым.</span><span class="sxs-lookup"><span data-stu-id="660fe-2766"><xref:System.Net.Sockets.Socket.Select%2A> returns when at least one of the sockets of interest (the sockets in the `checkRead`, `checkWrite`, and `checkError` lists) meets its specified criteria, or the `microSeconds` parameter is exceeded, whichever comes first.</span></span> <span data-ttu-id="660fe-2767">Значение `microSeconds` параметра равно-1 указывает неограниченное время ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-2767">Setting `microSeconds` to -1 specifies an infinite time-out.</span></span>  
  
 <span data-ttu-id="660fe-2768">Если вы сделаете неблокирующий вызов <xref:System.Net.Sockets.Socket.Connect%2A>, записи означает, что соединение установлено успешно.</span><span class="sxs-lookup"><span data-stu-id="660fe-2768">If you make a nonblocking call to <xref:System.Net.Sockets.Socket.Connect%2A>, writability means that you have connected successfully.</span></span> <span data-ttu-id="660fe-2769">Если соединение уже установлено, записи означает, что все операции отправки будут выполнены без блокировки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2769">If you already have a connection established, writability means that all send operations will succeed without blocking.</span></span>  
  
 <span data-ttu-id="660fe-2770">Если вы выполнили неблокирующий вызов <xref:System.Net.Sockets.Socket.Connect%2A> `checkerror` , параметр определяет сокеты, которые не были успешно подключены.</span><span class="sxs-lookup"><span data-stu-id="660fe-2770">If you have made a non-blocking call to <xref:System.Net.Sockets.Socket.Connect%2A>, the `checkerror` parameter identifies sockets that have not connected successfully.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2771">Используйте метод <xref:System.Net.Sockets.Socket.Poll%2A> , если хотите определить только состояние одного <xref:System.Net.Sockets.Socket>объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-2771">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method if you only want to determine the status of a single <xref:System.Net.Sockets.Socket>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2772">Этот метод не может обнаружить некоторые виды проблем с подключением, например обрыв сетевого кабеля или некорректное завершение работы удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="660fe-2772">This method cannot detect certain kinds of connection problems, such as a broken network cable, or that the remote host was shut down ungracefully.</span></span> <span data-ttu-id="660fe-2773">Необходимо попытаться отправить или получить данные для обнаружения ошибок этих типов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2773">You must attempt to send or receive data to detect these kinds of errors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2774">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2774">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2775">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2775">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2776">В следующем примере кода используется <xref:System.Net.Sockets.Socket.Select%2A> , чтобы определить, какие сокеты прослушивания имеют запрос на соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2776">The following code example uses <xref:System.Net.Sockets.Socket.Select%2A> to determine which listening sockets have a connection request.</span></span>  
  
 [!code-cpp[Socket_Select#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Select/CPP/source.cpp#1)]
 [!code-csharp[Socket_Select#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Select/CS/source.cs#1)]
 [!code-vb[Socket_Select#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Select/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2777">Параметр <paramref name="checkRead" /> имеет значение <see langword="null" /> или является пустым.</span><span class="sxs-lookup"><span data-stu-id="660fe-2777">The <paramref name="checkRead" /> parameter is <see langword="null" /> or empty.</span></span>  
  
<span data-ttu-id="660fe-2778">- и -</span><span class="sxs-lookup"><span data-stu-id="660fe-2778">-and-</span></span> 
<span data-ttu-id="660fe-2779">Параметр <paramref name="checkWrite" /> имеет значение <see langword="null" /> или является пустым.</span><span class="sxs-lookup"><span data-stu-id="660fe-2779">The <paramref name="checkWrite" /> parameter is <see langword="null" /> or empty</span></span> 
<span data-ttu-id="660fe-2780">- и -</span><span class="sxs-lookup"><span data-stu-id="660fe-2780">-and-</span></span> 
<span data-ttu-id="660fe-2781">Параметр <paramref name="checkError" /> имеет значение <see langword="null" /> или является пустым.</span><span class="sxs-lookup"><span data-stu-id="660fe-2781">The <paramref name="checkError" /> parameter is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2782">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2782">An error occurred when attempting to access the socket.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Net.Sockets.Socket.Accept" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-2783">Передает данные в подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2783">Sends data to a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (buffer As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] -&gt; int" Usage="socket.Send buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2784">Массив типа <see cref="T:System.Byte" />, содержащий данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2784">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <summary><span data-ttu-id="660fe-2785">Передает данные в подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2785">Sends data to a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2786">Количество байтов, отправленных в <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2786">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2787"><xref:System.Net.Sockets.Socket.Send%2A>синхронно отправляет данные на удаленный узел, указанный в <xref:System.Net.Sockets.Socket.Connect%2A> методе или <xref:System.Net.Sockets.Socket.Accept%2A> , и возвращает число успешно отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2787"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="660fe-2788"><xref:System.Net.Sockets.Socket.Send%2A>можно использовать для протоколов, ориентированных на подключение и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2788"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="660fe-2789">Для этой перегрузки требуется буфер, содержащий данные, которые необходимо отправить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2789">This overload requires a buffer that contains the data you want to send.</span></span> <span data-ttu-id="660fe-2790"><xref:System.Net.Sockets.SocketFlags> Значение по умолчанию равно 0, смещение буфера по умолчанию равно 0, а число байтов для отправки по умолчанию равно размеру буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2790">The <xref:System.Net.Sockets.SocketFlags> value defaults to 0, the buffer offset defaults to 0, and the number of bytes to send defaults to the size of the buffer.</span></span>  
  
 <span data-ttu-id="660fe-2791">Если используется протокол без установления соединения, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> метод перед вызовом этого метода или <xref:System.Net.Sockets.Socket.Send%2A> вызвать исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2791">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2792">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2792">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-2793">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует использовать <xref:System.Net.Sockets.Socket.SendTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2793">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-2794">Если <xref:System.Net.Sockets.Socket.SendTo%2A> метод не используется, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> перед каждым вызовом <xref:System.Net.Sockets.Socket.Send%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2794">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="660fe-2795">Вы можете использовать <xref:System.Net.Sockets.Socket.SendTo%2A> даже после установки удаленного узла по умолчанию с помощью <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2795">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-2796">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.Send%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2796">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="660fe-2797">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.Send%2A> будет блокироваться до тех пор, пока не будут отправлены все байты в буфере, если не было задано время ожидания с помощью. <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2797">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2798">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Send%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2798">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2799">В неблокирующем режиме может <xref:System.Net.Sockets.Socket.Send%2A> завершиться успешно, даже если число байтов в буфере меньше числа.</span><span class="sxs-lookup"><span data-stu-id="660fe-2799">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="660fe-2800">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит байты в буфере.</span><span class="sxs-lookup"><span data-stu-id="660fe-2800">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the bytes in the buffer.</span></span> <span data-ttu-id="660fe-2801">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2801">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-2802">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-2802">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-2803">Успешное завершение <xref:System.Net.Sockets.Socket.Send%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-2803">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2804">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2804">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2805">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2805">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2806">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-2806">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-2807">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-2807">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2808">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2808">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2809">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2809">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2810">В следующем примере кода показано, как отправлять данные на <xref:System.Net.Sockets.Socket>подключенном.</span><span class="sxs-lookup"><span data-stu-id="660fe-2810">The following code example demonstrates sending data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#1)]
 [!code-csharp[Socket_Sync_Send_Receive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#1)]
 [!code-vb[Socket_Sync_Send_Receive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2811">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2811"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2812">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2812">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2813"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2813">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (buffers As IList(Of ArraySegment(Of Byte))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; int" Usage="socket.Send buffers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-2814">Список объектов <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, содержащих данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2814">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <summary><span data-ttu-id="660fe-2815">Отправляет набор буферов в список на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2815">Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2816">Количество байтов, отправленных в <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2816">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2817"><xref:System.Net.Sockets.Socket.Send%2A>можно использовать для протоколов, ориентированных на подключение и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2817"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="660fe-2818">Для этой перегрузки требуется по крайней мере один буфер, содержащий данные, которые необходимо отправить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2818">This overload requires at least one buffer that contains the data you want to send.</span></span>  
  
 <span data-ttu-id="660fe-2819">Если используется протокол без установления соединения, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> метод перед вызовом этого метода или <xref:System.Net.Sockets.Socket.Send%2A> вызвать исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2819">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2820">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2820">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-2821">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует использовать <xref:System.Net.Sockets.Socket.SendTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2821">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-2822">Если <xref:System.Net.Sockets.Socket.SendTo%2A> метод не используется, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> перед каждым вызовом <xref:System.Net.Sockets.Socket.Send%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2822">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="660fe-2823">Вы можете использовать <xref:System.Net.Sockets.Socket.SendTo%2A> даже после установки удаленного узла по умолчанию с помощью <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2823">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-2824">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.Send%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2824">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="660fe-2825">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.Send%2A> будет блокироваться до тех пор, пока не будут отправлены все байты в буфере, если не было задано время ожидания с помощью. <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2825">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2826">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Send%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2826">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2827">В неблокирующем режиме может <xref:System.Net.Sockets.Socket.Send%2A> завершиться успешно, даже если число байтов в буфере меньше числа.</span><span class="sxs-lookup"><span data-stu-id="660fe-2827">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="660fe-2828">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит байты в буфере.</span><span class="sxs-lookup"><span data-stu-id="660fe-2828">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the bytes in the buffer.</span></span> <span data-ttu-id="660fe-2829">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2829">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-2830">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-2830">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-2831">Успешное завершение <xref:System.Net.Sockets.Socket.Send%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-2831">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2832">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2832">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2833">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2833">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2834">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-2834">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-2835">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-2835">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2836">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2836">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2837">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2837">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Send(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2838">Свойство <paramref name="buffers" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2838"><paramref name="buffers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-2839">Параметр <paramref name="buffers" /> пуст.</span><span class="sxs-lookup"><span data-stu-id="660fe-2839"><paramref name="buffers" /> is empty.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2840">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2840">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-2841">См. ниже примeчания к данному разделу.</span><span class="sxs-lookup"><span data-stu-id="660fe-2841">See remarks section below.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2842"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2842">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (buffer As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="socket.Send buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffer, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2843">Массив типа <see cref="T:System.Byte" />, содержащий данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2843">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2844">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2844">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-2845">Передает данные в подключенный объект <see cref="T:System.Net.Sockets.Socket" />, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2845">Sends data to a connected <see cref="T:System.Net.Sockets.Socket" /> using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2846">Количество байтов, отправленных в <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2846">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2847"><xref:System.Net.Sockets.Socket.Send%2A>синхронно отправляет данные на удаленный узел, установленный в <xref:System.Net.Sockets.Socket.Connect%2A> методе или <xref:System.Net.Sockets.Socket.Accept%2A> , и возвращает число успешно отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2847"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="660fe-2848"><xref:System.Net.Sockets.Socket.Send%2A> Метод можно использовать как для протоколов, ориентированных на подключение, так и для протокола без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2848">The <xref:System.Net.Sockets.Socket.Send%2A> method can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="660fe-2849">Для этой перегрузки требуется буфер, содержащий данные, которые необходимо отправить, и побитовое сочетание <xref:System.Net.Sockets.SocketFlags>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2849">This overload requires a buffer that contains the data you want to send and a bitwise combination of <xref:System.Net.Sockets.SocketFlags>.</span></span> <span data-ttu-id="660fe-2850">По умолчанию смещение буфера равно 0, а число байтов для отправки по умолчанию равно размеру буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2850">The buffer offset defaults to 0, and the number of bytes to send defaults to the size of the buffer.</span></span> <span data-ttu-id="660fe-2851">Если в <xref:System.Net.Sockets.SocketFlags.DontRoute> `socketflags` качестве значения параметра указан флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-2851">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter value, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-2852">Если используется протокол без установления соединения, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> метод перед вызовом этого метода или <xref:System.Net.Sockets.Socket.Send%2A> вызвать исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2852">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2853">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2853">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-2854">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует использовать <xref:System.Net.Sockets.Socket.SendTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2854">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-2855">Если <xref:System.Net.Sockets.Socket.SendTo%2A> метод не используется, необходимо <xref:System.Net.Sockets.Socket.Connect%2A> вызвать <xref:System.Net.Sockets.Socket.Send%2A>метод перед каждым вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2855">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call the <xref:System.Net.Sockets.Socket.Connect%2A> method before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="660fe-2856">Вы можете использовать <xref:System.Net.Sockets.Socket.SendTo%2A> даже после установки удаленного узла по умолчанию с помощью <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2856">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-2857">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.Send%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2857">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="660fe-2858">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.Send%2A> будет блокироваться до тех пор, пока не будут отправлены все байты в буфере, если не было задано время ожидания с помощью. <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2858">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2859">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Send%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2859">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2860">В неблокирующем режиме может <xref:System.Net.Sockets.Socket.Send%2A> завершиться успешно, даже если число байтов в буфере меньше числа.</span><span class="sxs-lookup"><span data-stu-id="660fe-2860">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="660fe-2861">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит запрошенное число байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2861">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="660fe-2862">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2862">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-2863">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-2863">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-2864">Успешное завершение <xref:System.Net.Sockets.Socket.Send%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-2864">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2865">Необходимо убедиться, что размер буфера не превышает максимальный размер пакета базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-2865">You must ensure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-2866">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.Send%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2866">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2867">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2867">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2868">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2868">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2869">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-2869">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-2870">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-2870">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2871">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2871">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2872">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2872">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2873">В следующем примере кода показано, как отправлять данные на <xref:System.Net.Sockets.Socket>подключенном.</span><span class="sxs-lookup"><span data-stu-id="660fe-2873">The following code example demonstrates sending data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#2)]
 [!code-csharp[Socket_Sync_Send_Receive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#2)]
 [!code-vb[Socket_Sync_Send_Receive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2874">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2874"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2875">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2875">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2876"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2876">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffers, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-2877">Список объектов <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, содержащих данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2877">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2878">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2878">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-2879">Отправляет набор буферов в список на подключенный объект <see cref="T:System.Net.Sockets.Socket" />, используя указанный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2879">Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2880">Количество байтов, отправленных в <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2880">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2881">Для этой перегрузки требуется по крайней мере один буфер, содержащий данные, которые необходимо отправить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2881">This overload requires at least one buffer that contains the data you want to send.</span></span> <span data-ttu-id="660fe-2882"><xref:System.Net.Sockets.SocketFlags> Значение по умолчанию равно 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2882">The <xref:System.Net.Sockets.SocketFlags> value defaults to 0.</span></span> <span data-ttu-id="660fe-2883">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketFlags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-2883">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketFlags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-2884">Если используется протокол без установления соединения, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> метод перед вызовом этого метода или <xref:System.Net.Sockets.Socket.Send%2A> вызвать исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2884">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2885">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2885">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-2886">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует использовать <xref:System.Net.Sockets.Socket.SendTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2886">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-2887">Если <xref:System.Net.Sockets.Socket.SendTo%2A> метод не используется, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> перед каждым вызовом <xref:System.Net.Sockets.Socket.Send%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2887">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="660fe-2888">Вы можете использовать <xref:System.Net.Sockets.Socket.SendTo%2A> даже после установки удаленного узла по умолчанию с помощью <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2888">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-2889">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.Send%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2889">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="660fe-2890">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.Send%2A> будет блокироваться до тех пор, пока не будут отправлены все байты в буфере, если не было задано время ожидания с помощью. <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2890">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2891">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Send%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2891">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2892">В режиме без блокировки может завершиться успешно, <xref:System.Net.Sockets.Socket.Send%2A> даже если число байтов в буфере меньше числа.</span><span class="sxs-lookup"><span data-stu-id="660fe-2892">In non-blocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="660fe-2893">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит байты в буфере.</span><span class="sxs-lookup"><span data-stu-id="660fe-2893">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the bytes in the buffer.</span></span> <span data-ttu-id="660fe-2894">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2894">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-2895">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-2895">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-2896">Успешное завершение <xref:System.Net.Sockets.Socket.Send%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-2896">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2897">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2897">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2898">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2898">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2899">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-2899">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-2900">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-2900">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2901">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2901">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2902">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2902">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2903">Свойство <paramref name="buffers" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2903"><paramref name="buffers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-2904">Параметр <paramref name="buffers" /> пуст.</span><span class="sxs-lookup"><span data-stu-id="660fe-2904"><paramref name="buffers" /> is empty.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2905">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2905">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2906"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2906">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (ReadOnlySpan&lt;byte&gt; buffer, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(ReadOnlySpan&lt;System::Byte&gt; buffer, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : ReadOnlySpan&lt;byte&gt; * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffer, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="socketFlags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer, int size, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer, int size, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffer, size, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2907">Массив типа <see cref="T:System.Byte" />, содержащий данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2907">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-2908">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2908">The number of bytes to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2909">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2909">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-2910">Посылает указанное число байтов данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2910">Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2911">Количество байтов, отправленных в <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2911">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2912"><xref:System.Net.Sockets.Socket.Send%2A>синхронно отправляет данные на удаленный узел, установленный в <xref:System.Net.Sockets.Socket.Connect%2A> методе или <xref:System.Net.Sockets.Socket.Accept%2A> , и возвращает число успешно отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2912"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="660fe-2913"><xref:System.Net.Sockets.Socket.Send%2A>можно использовать для протоколов, ориентированных на подключение и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2913"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="660fe-2914">Для этой перегрузки требуется буфер, содержащий данные, которые необходимо отправить, число байтов, которые требуется отправить, и побитовое сочетание любого из <xref:System.Net.Sockets.SocketFlags>них.</span><span class="sxs-lookup"><span data-stu-id="660fe-2914">This overload requires a buffer that contains the data you want to send, the number of bytes you want to send, and a bitwise combination of any <xref:System.Net.Sockets.SocketFlags>.</span></span> <span data-ttu-id="660fe-2915">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketflags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-2915">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-2916">Если используется протокол без установления соединения, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> метод перед вызовом этого метода или <xref:System.Net.Sockets.Socket.Send%2A> вызвать исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2916">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2917">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2917">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-2918">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует использовать <xref:System.Net.Sockets.Socket.SendTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2918">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-2919">Если <xref:System.Net.Sockets.Socket.SendTo%2A> метод не используется, то <xref:System.Net.Sockets.Socket.Send%2A> перед каждым вызовом метода придется <xref:System.Net.Sockets.Socket.Connect%2A> вызывать метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2919">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call the <xref:System.Net.Sockets.Socket.Connect%2A> method before each call to the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="660fe-2920">Вы можете использовать <xref:System.Net.Sockets.Socket.SendTo%2A> даже после установки удаленного узла по умолчанию с помощью <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2920">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-2921">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.Send%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2921">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="660fe-2922">При использовании протокола, ориентированного на <xref:System.Net.Sockets.Socket.Send%2A> соединение, блокируется до тех пор, пока не будет отправлено запрошенное число байтов, если не <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>было задано время ожидания с помощью.</span><span class="sxs-lookup"><span data-stu-id="660fe-2922">With a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until the requested number of bytes are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2923">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Send%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2923">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2924">В неблокирующем режиме может <xref:System.Net.Sockets.Socket.Send%2A> завершиться успешно, даже если количество отправленных байтов превышает.</span><span class="sxs-lookup"><span data-stu-id="660fe-2924">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes you request.</span></span> <span data-ttu-id="660fe-2925">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит запрошенное число байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2925">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="660fe-2926">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2926">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-2927">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-2927">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-2928">Успешное завершение <xref:System.Net.Sockets.Socket.Send%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-2928">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2929">Необходимо убедиться, что размер не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-2929">You must ensure that the size does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-2930">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.Send%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2930">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2931">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2931">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2932">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2932">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2933">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-2933">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-2934">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-2934">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2935">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2935">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2936">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2936">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-2937">Следующий пример кода отправляет данные, найденные в буфере, и <xref:System.Net.Sockets.SocketFlags.None> указывает <xref:System.Net.Sockets.SocketFlags>для.</span><span class="sxs-lookup"><span data-stu-id="660fe-2937">The following code example sends the data found in buffer, and specifies <xref:System.Net.Sockets.SocketFlags.None> for <xref:System.Net.Sockets.SocketFlags>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#3)]
 [!code-csharp[Socket_Sync_Send_Receive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#3)]
 [!code-vb[Socket_Sync_Send_Receive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2938">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2938"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-2939">Значение параметра <paramref name="size" /> меньше 0 или превышает размер буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-2939"><paramref name="size" /> is less than 0 or exceeds the size of the buffer.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2940"><paramref name="socketFlags" /> — недопустимое сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-2940"><paramref name="socketFlags" /> is not a valid combination of values.</span></span>  
  
<span data-ttu-id="660fe-2941">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-2941">-or-</span></span> 
<span data-ttu-id="660fe-2942">Сбой операционной системы при доступе к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2942">An operating system error occurs while accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2943"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2943">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Send (buffers, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffers"><span data-ttu-id="660fe-2944">Список объектов <see cref="T:System.ArraySegment`1" /> типа <see cref="T:System.Byte" />, содержащих данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2944">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2945">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2945">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-2946">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-2946">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <summary><span data-ttu-id="660fe-2947">Отправляет набор буферов в список на подключенный объект <see cref="T:System.Net.Sockets.Socket" />, используя указанный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2947">Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2948">Количество байтов, отправленных в <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2948">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2949">Для этой перегрузки требуется по крайней мере один буфер, содержащий данные, которые необходимо отправить.</span><span class="sxs-lookup"><span data-stu-id="660fe-2949">This overload requires at least one buffer that contains the data you want to send.</span></span> <span data-ttu-id="660fe-2950"><xref:System.Net.Sockets.SocketFlags> Значение по умолчанию равно 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-2950">The <xref:System.Net.Sockets.SocketFlags> value defaults to 0.</span></span> <span data-ttu-id="660fe-2951">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketFlags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-2951">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketFlags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-2952">Если используется протокол без установления соединения, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> метод перед вызовом этого метода или <xref:System.Net.Sockets.Socket.Send%2A> вызвать исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2952">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2953">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2953">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-2954">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует использовать <xref:System.Net.Sockets.Socket.SendTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-2954">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-2955">Если <xref:System.Net.Sockets.Socket.SendTo%2A> метод не используется, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> перед каждым вызовом <xref:System.Net.Sockets.Socket.Send%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-2955">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="660fe-2956">Вы можете использовать <xref:System.Net.Sockets.Socket.SendTo%2A> даже после установки удаленного узла по умолчанию с помощью <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2956">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-2957">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.Send%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2957">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="660fe-2958">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.Send%2A> будет блокироваться до тех пор, пока не будут отправлены все байты в буфере, если не было задано время ожидания с помощью. <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2958">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2959">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Send%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2959">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2960">В режиме без блокировки может завершиться успешно, <xref:System.Net.Sockets.Socket.Send%2A> даже если число байтов в буфере меньше числа.</span><span class="sxs-lookup"><span data-stu-id="660fe-2960">In non-blocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="660fe-2961">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит байты в буфере.</span><span class="sxs-lookup"><span data-stu-id="660fe-2961">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the bytes in the buffer.</span></span> <span data-ttu-id="660fe-2962">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2962">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-2963">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-2963">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-2964">Успешное завершение <xref:System.Net.Sockets.Socket.Send%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-2964">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2965">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2965">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-2966">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2966">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2967">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-2967">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-2968">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-2968">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2969">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2969">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-2970">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-2970">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-2971"><paramref name="buffers" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2971"><paramref name="buffers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-2972">Параметр <paramref name="buffers" /> пуст.</span><span class="sxs-lookup"><span data-stu-id="660fe-2972"><paramref name="buffers" /> is empty.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-2973">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-2973">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-2974"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-2974">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (ReadOnlySpan&lt;byte&gt; buffer, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(ReadOnlySpan&lt;System::Byte&gt; buffer, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Send : ReadOnlySpan&lt;byte&gt; * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Send (buffer, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="socketFlags">To be added.</param>
        <param name="errorCode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * int * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffer, offset, size, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-2975">Массив типа <see cref="T:System.Byte" />, содержащий данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2975">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-2976">Положение в буфере данных, с которого начинается отправка данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-2976">The position in the data buffer at which to begin sending data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-2977">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2977">The number of bytes to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-2978">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2978">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-2979">Отправляет указанное количество байтов данных в подключенный <see cref="T:System.Net.Sockets.Socket" />, начиная с заданного смещения и используя заданный параметр <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2979">Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, starting at the specified offset, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-2980">Количество байтов, отправленных в <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-2980">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-2981"><xref:System.Net.Sockets.Socket.Send%2A>синхронно отправляет данные на удаленный узел, указанный в <xref:System.Net.Sockets.Socket.Connect%2A> методе или <xref:System.Net.Sockets.Socket.Accept%2A> , и возвращает число успешно отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2981"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="660fe-2982"><xref:System.Net.Sockets.Socket.Send%2A>можно использовать для протоколов, ориентированных на подключение и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2982"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="660fe-2983">В этой перегрузке при указании <xref:System.Net.Sockets.SocketFlags.DontRoute> флага в `socketflags` качестве параметра отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-2983">In this overload, if you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-2984">Если используется протокол без установления соединения, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> метод перед вызовом этого метода или <xref:System.Net.Sockets.Socket.Send%2A> вызвать исключение. <xref:System.Net.Sockets.SocketException></span><span class="sxs-lookup"><span data-stu-id="660fe-2984">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2985">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-2985">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-2986">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует <xref:System.Net.Sockets.Socket.SendTo%2A>использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-2986">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="660fe-2987">Если вы не используете <xref:System.Net.Sockets.Socket.SendTo%2A>, то придется вызывать <xref:System.Net.Sockets.Socket.Connect%2A> перед каждым вызовом <xref:System.Net.Sockets.Socket.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2987">If you do not use <xref:System.Net.Sockets.Socket.SendTo%2A>, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="660fe-2988">Его можно использовать <xref:System.Net.Sockets.Socket.SendTo%2A> даже после установки удаленного узла по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-2988">It is okay to use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-2989">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.Send%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2989">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="660fe-2990">Кроме того, необходимо убедиться, что размер не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-2990">You must also be sure that the size does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-2991">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.Send%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2991">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-2992">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.Send%2A> блокируется до тех пор, пока не будет отправлено запрошенное число байтов, если не было задано время ожидания с помощью. <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-2992">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until the requested number of bytes are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-2993">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Send%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-2993">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-2994">В неблокирующем режиме может <xref:System.Net.Sockets.Socket.Send%2A> завершиться успешно, даже если количество отправленных байтов превышает.</span><span class="sxs-lookup"><span data-stu-id="660fe-2994">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes you request.</span></span> <span data-ttu-id="660fe-2995">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит запрошенное число байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-2995">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="660fe-2996">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-2996">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-2997">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-2997">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-2998">Успешное завершение <xref:System.Net.Sockets.Socket.Send%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-2998">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-2999">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-2999">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3000">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3000">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3001">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-3001">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-3002">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-3002">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3003">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3003">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3004">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3004">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3005">В следующем примере кода задаются буфер данных, смещение, размер и <xref:System.Net.Sockets.SocketFlags> для отправки данных в соединение. <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="660fe-3005">The following code example specifies the data buffer, an offset, a size, and <xref:System.Net.Sockets.SocketFlags> for sending data to a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#4)]
 [!code-csharp[Socket_Sync_Send_Receive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#4)]
 [!code-vb[Socket_Sync_Send_Receive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-3006"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3006"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-3007">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-3007"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-3008">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3008">-or-</span></span> 
 <span data-ttu-id="660fe-3009">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3009"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-3010">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-3010">-or-</span></span> 
 <span data-ttu-id="660fe-3011">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-3011"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-3012">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3012">-or-</span></span> 
 <span data-ttu-id="660fe-3013">Значение <paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3013"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3014"><paramref name="socketFlags" /> — недопустимое сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-3014"><paramref name="socketFlags" /> is not a valid combination of values.</span></span>  
  
<span data-ttu-id="660fe-3015">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-3015">-or-</span></span> 
<span data-ttu-id="660fe-3016">Произошла ошибка операционной системы при доступе к <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3016">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3017"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3017">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * int * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Send (buffer, offset, size, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-3018">Массив типа <see cref="T:System.Byte" />, содержащий данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3018">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-3019">Положение в буфере данных, с которого начинается отправка данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-3019">The position in the data buffer at which to begin sending data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-3020">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3020">The number of bytes to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-3021">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3021">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="errorCode"><span data-ttu-id="660fe-3022">Объект <see cref="T:System.Net.Sockets.SocketError" />, содержащий ошибку сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-3022">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span></span></param>
        <summary><span data-ttu-id="660fe-3023">Посылает указанное число байтов данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />, начиная с указанного смещения и используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3023">Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, starting at the specified offset, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" /></span></span></summary>
        <returns><span data-ttu-id="660fe-3024">Количество байтов, отправленных в <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3024">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3025"><xref:System.Net.Sockets.Socket.Send%2A>синхронно отправляет данные на удаленный узел, указанный в <xref:System.Net.Sockets.Socket.Connect%2A> методе или <xref:System.Net.Sockets.Socket.Accept%2A> , и возвращает число успешно отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3025"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="660fe-3026"><xref:System.Net.Sockets.Socket.Send%2A>можно использовать для протоколов, ориентированных на подключение и без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3026"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="660fe-3027">В этой перегрузке при указании <xref:System.Net.Sockets.SocketFlags.DontRoute> флага в `socketflags` качестве параметра отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-3027">In this overload, if you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-3028">Если используется протокол без установления соединения, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> метод перед вызовом этого метода или <xref:System.Net.Sockets.Socket.Send%2A> вызвать исключение. <xref:System.Net.Sockets.SocketException></span><span class="sxs-lookup"><span data-stu-id="660fe-3028">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-3029">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3029">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-3030">Если вы используете протокол без установления соединения и планируете отправку данных на несколько разных узлов, следует <xref:System.Net.Sockets.Socket.SendTo%2A>использовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-3030">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="660fe-3031">Если вы не используете <xref:System.Net.Sockets.Socket.SendTo%2A>, то придется вызывать <xref:System.Net.Sockets.Socket.Connect%2A> перед каждым вызовом <xref:System.Net.Sockets.Socket.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3031">If you do not use <xref:System.Net.Sockets.Socket.SendTo%2A>, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="660fe-3032">Его можно использовать <xref:System.Net.Sockets.Socket.SendTo%2A> даже после установки удаленного узла по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3032">It is okay to use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="660fe-3033">Можно также изменить удаленный узел по умолчанию перед вызовом <xref:System.Net.Sockets.Socket.Send%2A> , сделав еще один <xref:System.Net.Sockets.Socket.Connect%2A>вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3033">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="660fe-3034">Кроме того, необходимо убедиться, что размер не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-3034">You must also be sure that the size does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-3035">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.Send%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3035">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-3036">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.Send%2A> блокируется до тех пор, пока не будет отправлено запрошенное число байтов, если не было задано время ожидания с помощью. <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-3036">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until the requested number of bytes are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-3037">Если значение времени ожидания было превышено, <xref:System.Net.Sockets.Socket.Send%2A> вызов <xref:System.Net.Sockets.SocketException>выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3037">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-3038">В неблокирующем режиме может <xref:System.Net.Sockets.Socket.Send%2A> завершиться успешно, даже если количество отправленных байтов превышает.</span><span class="sxs-lookup"><span data-stu-id="660fe-3038">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes you request.</span></span> <span data-ttu-id="660fe-3039">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит запрошенное число байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3039">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="660fe-3040">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3040">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-3041">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-3041">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-3042">Успешное завершение <xref:System.Net.Sockets.Socket.Send%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-3042">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3043">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3043">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3044">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3044">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3045">Успешное завершение отправки не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-3045">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="660fe-3046">Если в транспортной системе нет доступных буферных пространств для хранения данных, подходящих для передачи, отправка будет заблокирована, пока сокет не будет помещен в неблокирующий режим.</span><span class="sxs-lookup"><span data-stu-id="660fe-3046">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3047">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3047">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3048">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3048">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3049">В следующем примере кода задаются буфер данных, смещение, размер и <xref:System.Net.Sockets.SocketFlags> для отправки данных в соединение. <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="660fe-3049">The following code example specifies the data buffer, an offset, a size, and <xref:System.Net.Sockets.SocketFlags> for sending data to a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#4)]
 [!code-csharp[Socket_Sync_Send_Receive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#4)]
 [!code-vb[Socket_Sync_Send_Receive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-3050">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3050"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-3051">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-3051"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-3052">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3052">-or-</span></span> 
 <span data-ttu-id="660fe-3053">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3053"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-3054">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3054">-or-</span></span> 
 <span data-ttu-id="660fe-3055">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-3055"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-3056">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3056">-or-</span></span> 
 <span data-ttu-id="660fe-3057">Значение <paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3057"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3058"><paramref name="socketFlags" /> — недопустимое сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-3058"><paramref name="socketFlags" /> is not a valid combination of values.</span></span>  
  
<span data-ttu-id="660fe-3059">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3059">-or-</span></span> 
<span data-ttu-id="660fe-3060">Произошла ошибка операционной системы при доступе к <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3060">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3061"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3061">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public bool SendAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SendAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SendAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.SendAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-3062">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-3062">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-3063">Выполняет асинхронную передачу данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3063">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span></span></summary>
        <returns><span data-ttu-id="660fe-3064"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-3064"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-3065">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3065">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-3066"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-3066"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-3067">В данном случае событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не будет создано и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-3067">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3068"><xref:System.Net.Sockets.Socket.SendAsync%2A> Метод используется для записи исходящих данных из одного или нескольких буферов на сокете, ориентированном на соединение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3068">The <xref:System.Net.Sockets.Socket.SendAsync%2A> method is used to write outgoing data from one or more buffers on a connection-oriented socket.</span></span> <span data-ttu-id="660fe-3069">Однако этот метод можно также использовать для сокетов без подключения, которые указали удаленный узел в операции подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3069">This method can also be used, however, on connectionless sockets that have specified a remote host on a connect operation.</span></span>  
  
 <span data-ttu-id="660fe-3070"><xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.ConnectAsync%2A> <xref:System.Net.Sockets.Socket.AcceptAsync%2A> <xref:System.Net.Sockets.Socket.Accept%2A> <xref:System.Net.Sockets.Socket.Connect%2A>Метод запускает асинхронную операцию отправки на удаленный узел, установленный в методе,, <xref:System.Net.Sockets.Socket.BeginConnect%2A>,, или. <xref:System.Net.Sockets.Socket.SendAsync%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3070">The <xref:System.Net.Sockets.Socket.SendAsync%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-3071">Для успешного вызова этого метода необходимы следующие <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> свойства и события объекта:</span><span class="sxs-lookup"><span data-stu-id="660fe-3071">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <span data-ttu-id="660fe-3072"><xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> или <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-3072"><xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> or <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A?displayProperty=nameWithType></span></span>  
  
-   <span data-ttu-id="660fe-3073"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>Если <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> задано значение</span><span class="sxs-lookup"><span data-stu-id="660fe-3073"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> if <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> is set</span></span>  
  
-   <span data-ttu-id="660fe-3074"><xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>Если <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> задано значение</span><span class="sxs-lookup"><span data-stu-id="660fe-3074"><xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> if <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> is set</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="660fe-3075">Вызывающая сторона может задать <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> для свойства любой объект пользовательского состояния, необходимый перед <xref:System.Net.Sockets.Socket.SendAsync%2A> вызовом метода, чтобы информация была извлечена в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-3075">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.SendAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="660fe-3076">Если для обратного вызова требуется больше сведений, чем для одного объекта, можно создать небольшой класс для хранения других требуемых сведений о состоянии в качестве членов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3076">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="660fe-3077"><xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.Connect%2A> <xref:System.Net.Sockets.Socket.ConnectAsync%2A>Метод вызывает исключение, если не выполняется первый вызов <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>,, или. <xref:System.Net.Sockets.Socket.SendAsync%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3077">The <xref:System.Net.Sockets.Socket.SendAsync%2A> method will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A><xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A>.</span></span>  
  
 <span data-ttu-id="660fe-3078"><xref:System.Net.Sockets.Socket.SendAsync%2A> Вызов метода дает возможность отправки данных в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3078">Calling the <xref:System.Net.Sockets.Socket.SendAsync%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="660fe-3079">Для сокетов, ориентированных на сообщения, не следует превысить максимальный размер сообщения в базовом поставщике службы Windows Sockets.</span><span class="sxs-lookup"><span data-stu-id="660fe-3079">For message-oriented sockets, do not exceed the maximum message size of the underlying Windows sockets service provider.</span></span> <span data-ttu-id="660fe-3080">Если данные слишком длинны для передачи атомарным образом через базового поставщика услуг, данные не передаются, а <xref:System.Net.Sockets.Socket.SendAsync%2A> метод <xref:System.Net.Sockets.SocketException> создает исключение с <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> установленным кодом ошибки всаемсгсизе в машинном коде Winsock (10040).</span><span class="sxs-lookup"><span data-stu-id="660fe-3080">If the data is too long to pass atomically through the underlying service provider, no data is transmitted and the <xref:System.Net.Sockets.Socket.SendAsync%2A> method throws a <xref:System.Net.Sockets.SocketException> with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> set to the native Winsock WSAEMSGSIZE error code (10040).</span></span>  
  
 <span data-ttu-id="660fe-3081">Обратите внимание, что успешное <xref:System.Net.Sockets.Socket.SendAsync%2A> завершение метода не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-3081">Note that the successful completion of the <xref:System.Net.Sockets.Socket.SendAsync%2A> method does not indicate that the data was successfully delivered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-3082">Свойства <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> или <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> на параметре <paramref name="e" /> должны ссылаться на допустимые буферы.</span><span class="sxs-lookup"><span data-stu-id="660fe-3082">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <paramref name="e" /> parameter must reference valid buffers.</span></span> <span data-ttu-id="660fe-3083">Может быть установлено одно из этих свойств, но нельзя одновременно устанавливать оба свойства.</span><span class="sxs-lookup"><span data-stu-id="660fe-3083">One or the other of these properties may be set, but not both at the same time.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-3084">Операция сокета уже выполнялась с использованием объекта <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />, указанного в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3084">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-3085">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-3085">Windows XP or later is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3086"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3086">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3087">Объект <see cref="T:System.Net.Sockets.Socket" /> уже не подключен или он был получен посредством метода <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> или <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3087">The <see cref="T:System.Net.Sockets.Socket" /> is not yet connected or was not obtained via an <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />,or <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />, method.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.Socket.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-3088">Получает или задает значение, определяющее размер буфера передачи объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3088">Gets or sets a value that specifies the size of the send buffer of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="660fe-3089">Объект <see cref="T:System.Int32" />, который содержит значение размера буфера передачи в байтах.</span><span class="sxs-lookup"><span data-stu-id="660fe-3089">An <see cref="T:System.Int32" /> that contains the size, in bytes, of the send buffer.</span></span> <span data-ttu-id="660fe-3090">Значение по умолчанию — 8192.</span><span class="sxs-lookup"><span data-stu-id="660fe-3090">The default is 8192.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3091">Больший размер буфера может замедлить распознавание проблем с подключением.</span><span class="sxs-lookup"><span data-stu-id="660fe-3091">A larger buffer size might delay the recognition of connection difficulties.</span></span> <span data-ttu-id="660fe-3092">Если вы передаете большие файлы или используете высокоскоростное подключение с высокой задержкой (например, поставщик широкополосного подключения), попробуйте увеличить размер буфера.</span><span class="sxs-lookup"><span data-stu-id="660fe-3092">Consider increasing the buffer size if you are transferring large files, or you are using a high bandwidth, high latency connection (such as a satellite broadband provider.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3093">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.SendBufferSize%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-3093">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.SendBufferSize%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3094">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3094">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3095"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3095">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-3096">Значение, указанное для операции установки, меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-3096">The value specified for a set operation is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-3097">Выполняет синхронную передачу файла и дополнительных данных на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3097">Sends a file and optional data synchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendFile">
      <MemberSignature Language="C#" Value="public void SendFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFile (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendFile(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.SendFile : string -&gt; unit" Usage="socket.SendFile fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="660fe-3098">Параметр типа <see cref="T:System.String" />, содержащий имя отправляемого файла и путь к нему.</span><span class="sxs-lookup"><span data-stu-id="660fe-3098">A <see cref="T:System.String" /> that contains the path and name of the file to be sent.</span></span> <span data-ttu-id="660fe-3099">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3099">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="660fe-3100">Отправляет файл <paramref name="fileName" /> на подключенный объект <see cref="T:System.Net.Sockets.Socket" />, используя флаг передачи <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3100">Sends the file <paramref name="fileName" /> to a connected <see cref="T:System.Net.Sockets.Socket" /> object with the <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> transmit flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3101">Эта перегрузка отправляет файл `fileName` на подключенный сокет.</span><span class="sxs-lookup"><span data-stu-id="660fe-3101">This overload sends the file `fileName` to the connected socket.</span></span> <span data-ttu-id="660fe-3102">`preBuffer` `postBuffer` `null`Параметр по умолчанию имеет <xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread> значение (0), а параметры и по умолчанию имеют значение. `flags`</span><span class="sxs-lookup"><span data-stu-id="660fe-3102">The `flags` parameter defaults to <xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread> (0), and the `preBuffer` and `postBuffer` parameters default to `null`.</span></span> <span data-ttu-id="660fe-3103">Если `fileName` параметр находится в локальном каталоге, он может быть идентифицирован только с именем файла; в противном случае необходимо указать полный путь и имя файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3103">If `fileName` is in the local directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="660fe-3104">Подстановочные знаки (".. \\\\\\\\\мифиле.ткст ") и общие имена UNC (" \шаред Directory \мифиле.ткст ") поддерживаются. \\</span><span class="sxs-lookup"><span data-stu-id="660fe-3104">Wildcards ("..\\\myfile.txt") and UNC share names ("\\\\\\\shared directory\\\myfile.txt") are supported.</span></span> <span data-ttu-id="660fe-3105">Если файл не найден, возникает исключение <xref:System.IO.FileNotFoundException> .</span><span class="sxs-lookup"><span data-stu-id="660fe-3105">If the file is not found, the exception <xref:System.IO.FileNotFoundException> is thrown.</span></span>  
  
 <span data-ttu-id="660fe-3106">Этот метод использует функцию `TransmitFile` , обнаруженную в API Windows Sockets 2.</span><span class="sxs-lookup"><span data-stu-id="660fe-3106">This method uses the `TransmitFile` function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="660fe-3107">Дополнительные сведения о `TransmitFile` функции и ее флагах см. в документации по [сокетам Windows](/windows/desktop/WinSock/) .</span><span class="sxs-lookup"><span data-stu-id="660fe-3107">For more information about the `TransmitFile` function and its flags, see the [Windows Sockets](/windows/desktop/WinSock/) documentation.</span></span>  
  
 <span data-ttu-id="660fe-3108"><xref:System.Net.Sockets.Socket.SendFile%2A>синхронно отправляет файл на удаленный узел, указанный в <xref:System.Net.Sockets.Socket.Connect%2A> методе или. <xref:System.Net.Sockets.Socket.Accept%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3108"><xref:System.Net.Sockets.Socket.SendFile%2A> synchronously sends a file to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-3109"><xref:System.Net.Sockets.Socket.SendFile%2A>можно использовать как для подключений, так и для протоколов без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3109"><xref:System.Net.Sockets.Socket.SendFile%2A> can be used for both connection-oriented and for connectionless protocols.</span></span>  
  
 <span data-ttu-id="660fe-3110">Если используется протокол без установления соединения, перед вызовом этого <xref:System.Net.Sockets.Socket.Connect%2A> метода необходимо вызвать, в противном случае <xref:System.Net.Sockets.SocketException> <xref:System.Net.Sockets.Socket.SendFile%2A> вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3110">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, otherwise <xref:System.Net.Sockets.Socket.SendFile%2A> throws a <xref:System.Net.Sockets.SocketException> exception.</span></span> <span data-ttu-id="660fe-3111">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3111">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-3112">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.SendFile%2A> блокируется до отправки файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3112">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.SendFile%2A> blocks until the file is sent.</span></span> <span data-ttu-id="660fe-3113">В неблокирующем режиме <xref:System.Net.Sockets.Socket.SendFile%2A> может завершиться успешно перед отправкой всего файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3113">In nonblocking mode, <xref:System.Net.Sockets.Socket.SendFile%2A> may complete successfully before the entire file has been sent.</span></span> <span data-ttu-id="660fe-3114">Нет никакой гарантии, что отправленные данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3114">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-3115">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-3115">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-3116">Успешное завершение <xref:System.Net.Sockets.Socket.SendFile%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-3116">A successful completion of the <xref:System.Net.Sockets.Socket.SendFile%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3117">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3117">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3118">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3118">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3119">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3119">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3120">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3120">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3121">В следующем примере кода создается и подключается сокет, а затем файл отправляется на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-3121">The following code example creates and connects a socket and then sends a file to the remote host.</span></span> <span data-ttu-id="660fe-3122">Файл Test. txt находится в корневом каталоге локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="660fe-3122">The file "test.txt" is located in the root directory of the local machine.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#3)]
 [!code-csharp[NCLSocketEnhancements#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-3123">Сокет не подключен к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-3123">The socket is not connected to a remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3124">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3124">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-3125">Объект <see cref="T:System.Net.Sockets.Socket" /> не находится в режиме блокировки и не может принять этот синхронный вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3125">The <see cref="T:System.Net.Sockets.Socket" /> object is not in blocking mode and cannot accept this synchronous call.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="660fe-3126">Файл <paramref name="fileName" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="660fe-3126">The file <paramref name="fileName" /> was not found.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3127">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3127">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendFile">
      <MemberSignature Language="C#" Value="public void SendFile (string fileName, byte[] preBuffer, byte[] postBuffer, System.Net.Sockets.TransmitFileOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendFile(string fileName, unsigned int8[] preBuffer, unsigned int8[] postBuffer, valuetype System.Net.Sockets.TransmitFileOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFile (fileName As String, preBuffer As Byte(), postBuffer As Byte(), flags As TransmitFileOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendFile(System::String ^ fileName, cli::array &lt;System::Byte&gt; ^ preBuffer, cli::array &lt;System::Byte&gt; ^ postBuffer, System::Net::Sockets::TransmitFileOptions flags);" />
      <MemberSignature Language="F#" Value="member this.SendFile : string * byte[] * byte[] * System.Net.Sockets.TransmitFileOptions -&gt; unit" Usage="socket.SendFile (fileName, preBuffer, postBuffer, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="preBuffer" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="postBuffer" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="flags" Type="System.Net.Sockets.TransmitFileOptions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="660fe-3128">Параметр типа <see cref="T:System.String" />, содержащий имя отправляемого файла и путь к нему.</span><span class="sxs-lookup"><span data-stu-id="660fe-3128">A <see cref="T:System.String" /> that contains the path and name of the file to be sent.</span></span> <span data-ttu-id="660fe-3129">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3129">This parameter can be <see langword="null" />.</span></span></param>
        <param name="preBuffer"><span data-ttu-id="660fe-3130">Массив <see cref="T:System.Byte" />, содержащий данные, отправляемые перед передачей файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3130">A <see cref="T:System.Byte" /> array that contains data to be sent before the file is sent.</span></span> <span data-ttu-id="660fe-3131">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3131">This parameter can be <see langword="null" />.</span></span></param>
        <param name="postBuffer"><span data-ttu-id="660fe-3132">Массив <see cref="T:System.Byte" />, содержащий данные, отправляемые после передачи файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3132">A <see cref="T:System.Byte" /> array that contains data to be sent after the file is sent.</span></span> <span data-ttu-id="660fe-3133">Этот параметр может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3133">This parameter can be <see langword="null" />.</span></span></param>
        <param name="flags"><span data-ttu-id="660fe-3134">Одно или несколько значений <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3134">One or more of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values.</span></span></param>
        <summary><span data-ttu-id="660fe-3135">Отправляет файл <paramref name="fileName" /> и буферы данных в подключенный объект <see cref="T:System.Net.Sockets.Socket" />, используя указанное значение <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3135">Sends the file <paramref name="fileName" /> and buffers of data to a connected <see cref="T:System.Net.Sockets.Socket" /> object using the specified <see cref="T:System.Net.Sockets.TransmitFileOptions" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3136">Для этой перегрузки требуется имя файла, который необходимо отправить, и побитовое <xref:System.Net.Sockets.TransmitFileOptions> сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-3136">This overload requires the name of the file you want to send and a bitwise combination of <xref:System.Net.Sockets.TransmitFileOptions> values.</span></span> <span data-ttu-id="660fe-3137">`preBuffer` Параметр содержит все данные, которые должны предшествовать файлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-3137">The `preBuffer` parameter contains any data you want to precede the file.</span></span> <span data-ttu-id="660fe-3138">`postBuffer`содержит данные, которые необходимо отслеживать в файле.</span><span class="sxs-lookup"><span data-stu-id="660fe-3138">`postBuffer` contains data you want to follow the file.</span></span> <span data-ttu-id="660fe-3139">Если `fileName` параметр находится в текущем рабочем каталоге, он может быть идентифицирован только с именем файла; в противном случае необходимо указать полный путь и имя файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3139">If `fileName` is in the current working directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="660fe-3140">Подстановочные знаки (".. \\\\\\\\\мифиле.ткст ") и общие имена UNC (" \шаред Directory \мифиле.ткст ") поддерживаются. \\</span><span class="sxs-lookup"><span data-stu-id="660fe-3140">Wildcards ("..\\\myfile.txt") and UNC share names ("\\\\\\\shared directory\\\myfile.txt") are supported.</span></span>  
  
 <span data-ttu-id="660fe-3141">`flags` Параметр предоставляет поставщику услуг Windows Sockets дополнительные сведения о переносе файлов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3141">The `flags` parameter provides the Window Sockets service provider with additional information about the file transfer.</span></span> <span data-ttu-id="660fe-3142">Дополнительные сведения об использовании этого параметра см. в разделе <xref:System.Net.Sockets.TransmitFileOptions>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3142">For more information about how to use this parameter, see <xref:System.Net.Sockets.TransmitFileOptions>.</span></span>  
  
 <span data-ttu-id="660fe-3143">Этот метод использует функцию `TransmitFile` , обнаруженную в API Windows Sockets 2.</span><span class="sxs-lookup"><span data-stu-id="660fe-3143">This method uses the `TransmitFile` function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="660fe-3144">Дополнительные сведения о `TransmitFile` функции и ее флагах см. в документации по [сокетам Windows](/windows/desktop/WinSock/) .</span><span class="sxs-lookup"><span data-stu-id="660fe-3144">For more information about the `TransmitFile` function and its flags, see the [Windows Sockets](/windows/desktop/WinSock/) documentation.</span></span>  
  
 <span data-ttu-id="660fe-3145"><xref:System.Net.Sockets.Socket.SendFile%2A>синхронно отправляет файл на удаленный узел, указанный в <xref:System.Net.Sockets.Socket.Connect%2A> методе или. <xref:System.Net.Sockets.Socket.Accept%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3145"><xref:System.Net.Sockets.Socket.SendFile%2A> synchronously sends a file to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-3146"><xref:System.Net.Sockets.Socket.SendFile%2A>можно использовать как для подключений, так и для протоколов без подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3146"><xref:System.Net.Sockets.Socket.SendFile%2A> can be used for both connection-oriented and for connectionless protocols.</span></span>  
  
 <span data-ttu-id="660fe-3147">Если используется протокол без установления соединения, необходимо вызвать <xref:System.Net.Sockets.Socket.Connect%2A> метод перед вызовом этого метода. в противном случае <xref:System.Net.Sockets.Socket.SendFile%2A> создает исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3147">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method; otherwise <xref:System.Net.Sockets.Socket.SendFile%2A> throws a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-3148">Если используется протокол, ориентированный на соединение, необходимо либо использовать <xref:System.Net.Sockets.Socket.Connect%2A> для установления соединения с удаленным узлом, либо использовать <xref:System.Net.Sockets.Socket.Accept%2A> для приема входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3148">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="660fe-3149">Если используется протокол, ориентированный на соединение, <xref:System.Net.Sockets.Socket.SendFile%2A> блокируется до отправки всего файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3149">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.SendFile%2A> blocks until the entire file is sent.</span></span> <span data-ttu-id="660fe-3150">В неблокирующем режиме <xref:System.Net.Sockets.Socket.SendFile%2A> может завершиться успешно перед отправкой всего файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3150">In nonblocking mode, <xref:System.Net.Sockets.Socket.SendFile%2A> may complete successfully before the entire file has been sent.</span></span> <span data-ttu-id="660fe-3151">Нет никакой гарантии, что отправленные данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3151">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-3152">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-3152">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-3153">Успешное завершение <xref:System.Net.Sockets.Socket.SendFile%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-3153">A successful completion of the <xref:System.Net.Sockets.Socket.SendFile%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3154">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3154">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3155">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3155">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3156">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3156">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3157">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3157">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3158">В следующем примере кода создается и подключается сокет.</span><span class="sxs-lookup"><span data-stu-id="660fe-3158">The following code example creates and connects a socket.</span></span> <span data-ttu-id="660fe-3159">Файл Test. txt находится в корневом каталоге локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="660fe-3159">The file "test.txt" is located in the root directory of the local machine.</span></span> <span data-ttu-id="660fe-3160">В этом примере мы создадим предбуферную и буферизованную передачу данных и отправим их на удаленный узел с помощью файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3160">In this example, we create a prebuffer and postbuffer of data and send them to the remote host with the file.</span></span> <span data-ttu-id="660fe-3161">Используются значения <xref:System.Net.Sockets.TransmitFileOptions> по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-3161">The default <xref:System.Net.Sockets.TransmitFileOptions> are used.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#4)]
 [!code-csharp[NCLSocketEnhancements#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-3162">Операционной системой не является Windows NT или более поздняя версия.</span><span class="sxs-lookup"><span data-stu-id="660fe-3162">The operating system is not Windows NT or later.</span></span>  
  
<span data-ttu-id="660fe-3163">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-3163">-or-</span></span>
  
 <span data-ttu-id="660fe-3164">Сокет не подключен к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-3164">The socket is not connected to a remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3165">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3165">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-3166">Объект <see cref="T:System.Net.Sockets.Socket" /> не находится в режиме блокировки и не может принять этот синхронный вызов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3166">The <see cref="T:System.Net.Sockets.Socket" /> object is not in blocking mode and cannot accept this synchronous call.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="660fe-3167">Файл <paramref name="fileName" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="660fe-3167">The file <paramref name="fileName" /> was not found.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3168">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3168">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendPacketsAsync">
      <MemberSignature Language="C#" Value="public bool SendPacketsAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SendPacketsAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPacketsAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SendPacketsAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.SendPacketsAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.SendPacketsAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-3169">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-3169">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-3170">Выполняет асинхронную передачу набора файла или буферов данных в памяти на подключенный объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3170">Sends a collection of files or in memory data buffers asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span></span></summary>
        <returns><span data-ttu-id="660fe-3171"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-3171"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-3172">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3172">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-3173"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-3173"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-3174">В данном случае событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не будет создано и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-3174">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3175"><xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> Метод используется для отправки коллекции файлов или буферов данных в памяти на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-3175">The <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method is used to send a collection of files or in memory data buffers to remote host.</span></span> <span data-ttu-id="660fe-3176"><xref:System.Net.Sockets.Socket> Должен быть уже подключен к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-3176">The <xref:System.Net.Sockets.Socket> must already be connected to the remote host.</span></span>  
  
 <span data-ttu-id="660fe-3177">Если объект <xref:System.Net.Sockets.SendPacketsElement?displayProperty=nameWithType> ссылается на файл в рабочем каталоге, он может быть идентифицирован только с именем файла; в противном случае необходимо указать полный путь и имя файла.</span><span class="sxs-lookup"><span data-stu-id="660fe-3177">If a <xref:System.Net.Sockets.SendPacketsElement?displayProperty=nameWithType> references a file in the working directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="660fe-3178">Поддерживаются подстановочные знаки и имена общих папок в формате UNC.</span><span class="sxs-lookup"><span data-stu-id="660fe-3178">Wildcards and UNC share names are supported.</span></span> <span data-ttu-id="660fe-3179">Если файл не найден, <xref:System.IO.FileNotFoundException> вызывается исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3179">If the file is not found, <xref:System.IO.FileNotFoundException> is thrown.</span></span>  
  
 <span data-ttu-id="660fe-3180">Чтобы получать уведомления о завершении, необходимо создать метод обратного вызова, реализующий\<обработчик EventHandler SocketAsyncEventArgs > делегата и присоединить <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> обратный вызов к событию.</span><span class="sxs-lookup"><span data-stu-id="660fe-3180">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and attach the callback to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="660fe-3181"><xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A?displayProperty=nameWithType> Свойство `e`  в параметре предоставляет поставщику услуг Windows Sockets дополнительные сведения о переносе файлов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3181">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A?displayProperty=nameWithType> property on the `e` parameter provides the Window Sockets service provider with additional information about the file transfer.</span></span> <span data-ttu-id="660fe-3182">Дополнительные сведения об использовании этого параметра см. в разделе <xref:System.Net.Sockets.TransmitFileOptions>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3182">For more information about how to use this parameter, see <xref:System.Net.Sockets.TransmitFileOptions>.</span></span>  
  
 <span data-ttu-id="660fe-3183">Для успешного вызова этого метода необходимы следующие <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> свойства и события объекта:</span><span class="sxs-lookup"><span data-stu-id="660fe-3183">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="660fe-3184">Вызывающая сторона может задать <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> для свойства любой объект пользовательского состояния, необходимый перед <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> вызовом метода, чтобы информация была извлечена в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-3184">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="660fe-3185">Если для обратного вызова требуется больше сведений, чем для одного объекта, можно создать небольшой класс для хранения других требуемых сведений о состоянии в качестве членов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3185">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="660fe-3186">Этот метод использует функцию Трансмитпаккетс, находящийся в API Windows Sockets 2.</span><span class="sxs-lookup"><span data-stu-id="660fe-3186">This method uses the TransmitPackets function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="660fe-3187">Дополнительные сведения о функции Трансмитпаккетс и ее флагах см. в документации по [сокетам Windows](/windows/desktop/WinSock/) .</span><span class="sxs-lookup"><span data-stu-id="660fe-3187">For more information about the TransmitPackets function and its flags, see the [Windows Sockets](/windows/desktop/WinSock/) documentation.</span></span>  
  
 <span data-ttu-id="660fe-3188">Хотя этот метод предназначен для протоколов, ориентированных на соединение, он <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> также работает для протоколов без подключения, при условии, что сначала <xref:System.Net.Sockets.Socket.BeginConnect%2A>вызывается метод, <xref:System.Net.Sockets.Socket.Connect%2A>или <xref:System.Net.Sockets.Socket.ConnectAsync%2A> , чтобы установить удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-3188">Although intended for connection-oriented protocols, the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method to establish a default remote host.</span></span> <span data-ttu-id="660fe-3189">При использовании протоколов без подключения необходимо также убедиться в том, что размер файла не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-3189">With connectionless protocols, you must also be sure that the size of your file does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-3190">Если это так, датаграмма не отправляется и <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> <xref:System.Net.Sockets.SocketException> вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3190">If it does, the datagram is not sent and <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> throws a <xref:System.Net.Sockets.SocketException> exception.</span></span>  
  
 <span data-ttu-id="660fe-3191"><xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> Метод оптимизирован в соответствии с операционной системой, в которой он используется.</span><span class="sxs-lookup"><span data-stu-id="660fe-3191">The <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method is optimized according to the operating system on which it is used.</span></span> <span data-ttu-id="660fe-3192">В выпусках Windows Server <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> этот метод оптимизирован для обеспечения высокой производительности.</span><span class="sxs-lookup"><span data-stu-id="660fe-3192">On Windows server editions, the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method is optimized for high performance.</span></span>  
  
 <span data-ttu-id="660fe-3193">В выпусках <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> клиента Windows метод оптимизирован для использования минимального объема памяти и ресурсов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3193">On Windows client editions, the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method is optimized for minimum memory and resource utilization.</span></span>  
  
 <span data-ttu-id="660fe-3194">Использование флага <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A?displayProperty=nameWithType> в свойстве `e` параметра может обеспечить значительное повышение производительности. <xref:System.Net.Sockets.TransmitFileOptions.UseKernelApc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="660fe-3194">Use of the <xref:System.Net.Sockets.TransmitFileOptions.UseKernelApc?displayProperty=nameWithType> flag in the <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A?displayProperty=nameWithType> property on the `e` parameter can deliver significant performance benefits.</span></span> <span data-ttu-id="660fe-3195">Если поток, инициирующий <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> вызов метода, используется для интенсивных вычислений, можно, хотя маловероятно, избежать запуска APC.</span><span class="sxs-lookup"><span data-stu-id="660fe-3195">If the thread initiating the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method call is being used for heavy computations, it is possible, though unlikely, that APCs could be prevented from launching.</span></span> <span data-ttu-id="660fe-3196">Обратите внимание, что существует разница между ядром и пользовательским режимом APC.</span><span class="sxs-lookup"><span data-stu-id="660fe-3196">Note that there is a difference between kernel and user-mode APCs.</span></span> <span data-ttu-id="660fe-3197">Ядро APC запуск, когда поток находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-3197">Kernel APCs launch when a thread is in a wait state.</span></span> <span data-ttu-id="660fe-3198">Пользовательский режим APC запуск, когда поток находится в состоянии ожидания с оповещением</span><span class="sxs-lookup"><span data-stu-id="660fe-3198">User-mode APCs launch when a thread is in an alertable wait state</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="660fe-3199">Файл, указанный в свойстве <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" />, не найден.</span><span class="sxs-lookup"><span data-stu-id="660fe-3199">The file specified in the <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> property was not found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-3200">Операция сокета уже выполнялась с использованием объекта <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />, указанного в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3200">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-3201">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-3201">Windows XP or later is required for this method.</span></span> <span data-ttu-id="660fe-3202">Это исключение возникает также в том случае, когда объект <see cref="T:System.Net.Sockets.Socket" /> не подключен к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="660fe-3202">This exception also occurs if the <see cref="T:System.Net.Sockets.Socket" /> is not connected to a remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3203"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3203">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3204">Используется объект <see cref="T:System.Net.Sockets.Socket" />, функционирующий без установления соединения, и размер отправляемого файла превышает максимальный размер пакета основного транспортного средства.</span><span class="sxs-lookup"><span data-stu-id="660fe-3204">A connectionless <see cref="T:System.Net.Sockets.Socket" /> is being used and the file being sent exceeds the maximum packet size of the underlying transport.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.Socket.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-3205">Получает или устанавливает значение, указывающее промежуток времени, после которого для синхронного вызова <see cref="Overload:System.Net.Sockets.Socket.Send" /> истечет время тайм-аута.</span><span class="sxs-lookup"><span data-stu-id="660fe-3205">Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Send" /> call will time out.</span></span></summary>
        <value><span data-ttu-id="660fe-3206">Значение времени ожидания в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="660fe-3206">The time-out value, in milliseconds.</span></span> <span data-ttu-id="660fe-3207">Если для этого свойства задать значение от 1 до 499, значение будет изменено на 500.</span><span class="sxs-lookup"><span data-stu-id="660fe-3207">If you set the property with a value between 1 and 499, the value will be changed to 500.</span></span> <span data-ttu-id="660fe-3208">По умолчанию используется значение 0, указывающее на бесконечное значение интервала для тайм-аута</span><span class="sxs-lookup"><span data-stu-id="660fe-3208">The default value is 0, which indicates an infinite time-out period.</span></span> <span data-ttu-id="660fe-3209">Задание значения -1 также указывает на бесконечное значение интервала для тайм-аута.</span><span class="sxs-lookup"><span data-stu-id="660fe-3209">Specifying -1 also indicates an infinite time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3210">Этот параметр применяется только к <xref:System.Net.Sockets.Socket.Send%2A> синхронным вызовам.</span><span class="sxs-lookup"><span data-stu-id="660fe-3210">This option applies to synchronous <xref:System.Net.Sockets.Socket.Send%2A> calls only.</span></span> <span data-ttu-id="660fe-3211">При превышении <xref:System.Net.Sockets.Socket.Send%2A> времени ожидания метод вызовет <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3211">If the time-out period is exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3212">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.SendTimeout%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-3212">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.SendTimeout%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3213">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3213">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3214"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3214">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-3215">Значение, указанное для операции задания, меньше –1.</span><span class="sxs-lookup"><span data-stu-id="660fe-3215">The value specified for a set operation is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendTo">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-3216">Посылает данные на указанную конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-3216">Sends data to a specific endpoint.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendTo">
      <MemberSignature Language="C#" Value="public int SendTo (byte[] buffer, System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SendTo(unsigned int8[] buffer, class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTo (buffer As Byte(), remoteEP As EndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SendTo(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.SendTo : byte[] * System.Net.EndPoint -&gt; int" Usage="socket.SendTo (buffer, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-3217">Массив типа <see cref="T:System.Byte" />, содержащий данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3217">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-3218">Объект <see cref="T:System.Net.EndPoint" />, представляющий пункт назначения для данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-3218">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span></span></param>
        <summary><span data-ttu-id="660fe-3219">Посылает данные на указанную конечную точку.</span><span class="sxs-lookup"><span data-stu-id="660fe-3219">Sends data to the specified endpoint.</span></span></summary>
        <returns><span data-ttu-id="660fe-3220">Число отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3220">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3221">В этой перегрузке смещение буфера по умолчанию равно 0, число отправляемых байтов по умолчанию равно размеру `buffer` параметра, <xref:System.Net.Sockets.SocketFlags> а значение по умолчанию — 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-3221">In this overload, the buffer offset defaults to 0, the number of bytes to send defaults to the size of the `buffer` parameter, and the <xref:System.Net.Sockets.SocketFlags> value defaults to 0.</span></span>  
  
 <span data-ttu-id="660fe-3222">Если используется протокол без установления соединения, не нужно устанавливать удаленный узел по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A> методом перед вызовом. <xref:System.Net.Sockets.Socket.SendTo%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3222">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="660fe-3223">Это необходимо сделать только в том случае, если предполагается вызывать <xref:System.Net.Sockets.Socket.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3223">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="660fe-3224">Если <xref:System.Net.Sockets.Socket.Connect%2A> метод вызывается до вызова <xref:System.Net.Sockets.Socket.SendTo%2A>метода, этот `remoteEP` параметр переопределит указанный удаленный узел по умолчанию только для этой операции отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3224">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="660fe-3225">Вам также не обязательно вызывать <xref:System.Net.Sockets.Socket.Bind%2A> метод, так как базовый поставщик услуг будет назначать наиболее подходящий адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3225">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method, because the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="660fe-3226">Если необходимо указать назначенный локальный сетевой адрес и номер порта, можно использовать <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> свойство <xref:System.Net.Sockets.Socket.SendTo%2A> после успешного завершения метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3226">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.SendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="660fe-3227">Хотя и предназначен для протоколов без <xref:System.Net.Sockets.Socket.SendTo%2A> подключения, также работает с протоколами, ориентированными на подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3227">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendTo%2A> also works with connection-oriented protocols.</span></span> <span data-ttu-id="660fe-3228">Если используется протокол, ориентированный на соединение, необходимо сначала установить соединение с удаленным узлом, вызвав <xref:System.Net.Sockets.Socket.Connect%2A> метод или приняв входящий запрос на <xref:System.Net.Sockets.Socket.Accept%2A> соединение с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3228">If you are using a connection-oriented protocol, you must first establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming connection request using the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-3229">Если не установить или принять соединение с удаленным узлом, <xref:System.Net.Sockets.Socket.SendTo%2A> будет вызвано <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3229">If you do not establish or accept a remote host connection, <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-3230">Кроме того, можно установить удаленный узел по умолчанию для протокола без установления соединения перед <xref:System.Net.Sockets.Socket.SendTo%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3230">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-3231">В любом из этих случаев <xref:System.Net.Sockets.Socket.SendTo%2A> `remoteEP` параметр будет игнорировать параметры и отправить данные только на удаленный узел, подключенный по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-3231">In either of these cases, <xref:System.Net.Sockets.Socket.SendTo%2A> will ignore the `remoteEP` parameter and only send data to the connected or default remote host.</span></span>  
  
 <span data-ttu-id="660fe-3232">Блокирующие сокеты блокируются до тех пор, пока не будут отправлены все байты в буфере.</span><span class="sxs-lookup"><span data-stu-id="660fe-3232">Blocking sockets will block until the all of the bytes in the buffer are sent.</span></span> <span data-ttu-id="660fe-3233">Поскольку неблокировка <xref:System.Net.Sockets.Socket> завершается немедленно, она может не отправить все байты `buffer`в.</span><span class="sxs-lookup"><span data-stu-id="660fe-3233">Since a nonblocking <xref:System.Net.Sockets.Socket> completes immediately, it might not send all of the bytes in the `buffer`.</span></span> <span data-ttu-id="660fe-3234">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит все байты в `buffer`.</span><span class="sxs-lookup"><span data-stu-id="660fe-3234">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends all of the bytes in the `buffer`.</span></span> <span data-ttu-id="660fe-3235">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3235">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-3236">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-3236">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="660fe-3237">Успешное завершение <xref:System.Net.Sockets.Socket.SendTo%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-3237">A successful completion of the <xref:System.Net.Sockets.Socket.SendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
 <span data-ttu-id="660fe-3238">Если вы используете протокол без установления соединения в блокирующем режиме <xref:System.Net.Sockets.Socket.SendTo%2A> , будет блокироваться до отправки датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-3238">If you are using a connectionless protocol in blocking mode, <xref:System.Net.Sockets.Socket.SendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="660fe-3239">Если вы хотите отправить данные на широковещательный адрес, необходимо сначала вызвать <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метод и установить параметр сокета в <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3239">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-3240">Кроме того, необходимо убедиться, что число отправленных байтов не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-3240">You must also be sure that the number of bytes sent does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-3241">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.SendTo%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3241">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3242">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3242">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3243">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3243">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3244">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3244">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3245">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3245">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3246">В следующем примере кода датаграмма без подключения отправляется на указанный удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-3246">The following code example sends a connectionless datagram to the specified remote host.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#5)]
 [!code-csharp[Socket_Sync_Send_Receive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#5)]
 [!code-vb[Socket_Sync_Send_Receive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-3247">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3247"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-3248">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-3248">-or-</span></span> 
 <span data-ttu-id="660fe-3249">Свойство <paramref name="remoteEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3249"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3250">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3250">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3251"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3251">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="SendTo">
      <MemberSignature Language="C#" Value="public int SendTo (byte[] buffer, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SendTo(unsigned int8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SendTo(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.SendTo : byte[] * System.Net.Sockets.SocketFlags * System.Net.EndPoint -&gt; int" Usage="socket.SendTo (buffer, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-3252">Массив типа <see cref="T:System.Byte" />, содержащий данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3252">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-3253">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3253">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-3254">Объект <see cref="T:System.Net.EndPoint" />, представляющий пункт назначения для данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-3254">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data.</span></span></param>
        <summary><span data-ttu-id="660fe-3255">Передает данные на указанную конечную точку, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3255">Sends data to a specific endpoint using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-3256">Число отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3256">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3257">В этой перегрузке смещение буфера по умолчанию равно 0, а число байтов для отправки по умолчанию равно размеру `buffer`.</span><span class="sxs-lookup"><span data-stu-id="660fe-3257">In this overload, the buffer offset defaults to 0, and the number of bytes to send defaults to the size of the `buffer`.</span></span> <span data-ttu-id="660fe-3258">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketflags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-3258">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-3259">Если используется протокол без установления соединения, не нужно устанавливать удаленный узел по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A> методом перед вызовом. <xref:System.Net.Sockets.Socket.SendTo%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3259">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="660fe-3260">Это необходимо сделать только в том случае, если предполагается вызывать <xref:System.Net.Sockets.Socket.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3260">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="660fe-3261">Если <xref:System.Net.Sockets.Socket.Connect%2A> метод вызывается до вызова <xref:System.Net.Sockets.Socket.SendTo%2A>метода, этот `remoteEP` параметр переопределит указанный удаленный узел по умолчанию только для этой операции отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3261">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="660fe-3262">Вам также не обязательно вызывать <xref:System.Net.Sockets.Socket.Bind%2A> метод, так как базовый поставщик услуг будет назначать наиболее подходящий адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3262">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method, because the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="660fe-3263">Если необходимо указать назначенный локальный сетевой адрес и номер порта, можно использовать <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> свойство <xref:System.Net.Sockets.Socket.SendTo%2A> после успешного завершения метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3263">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.SendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="660fe-3264">Хотя и предназначен для протоколов без <xref:System.Net.Sockets.Socket.SendTo%2A> подключения, также работает с протоколами, ориентированными на подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3264">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendTo%2A> also works with connection-oriented protocols.</span></span> <span data-ttu-id="660fe-3265">Если используется протокол, ориентированный на соединение, необходимо сначала установить соединение с удаленным узлом, вызвав <xref:System.Net.Sockets.Socket.Connect%2A> метод или приняв входящий запрос на <xref:System.Net.Sockets.Socket.Accept%2A> соединение с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3265">If you are using a connection-oriented protocol, you must first establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming connection request using the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-3266">Если не установить или принять соединение с удаленным узлом, <xref:System.Net.Sockets.Socket.SendTo%2A> будет вызвано <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3266">If you do not establish or accept a remote host connection, <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-3267">Кроме того, можно установить удаленный узел по умолчанию для протокола без установления соединения перед <xref:System.Net.Sockets.Socket.SendTo%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3267">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-3268">В любом из этих случаев <xref:System.Net.Sockets.Socket.SendTo%2A> `remoteEP` параметр будет игнорировать параметры и отправить данные только на удаленный узел, подключенный по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-3268">In either of these cases, <xref:System.Net.Sockets.Socket.SendTo%2A> will ignore the `remoteEP` parameter and only send data to the connected or default remote host.</span></span>  
  
 <span data-ttu-id="660fe-3269">Блокирующие сокеты блокируются до тех пор, пока не будут отправлены все байты в `buffer` .</span><span class="sxs-lookup"><span data-stu-id="660fe-3269">Blocking sockets will block until the requested all of the bytes in the `buffer` are sent.</span></span> <span data-ttu-id="660fe-3270">Поскольку неблокировка <xref:System.Net.Sockets.Socket> завершается немедленно, она может не отправить все байты `buffer`в.</span><span class="sxs-lookup"><span data-stu-id="660fe-3270">Since a nonblocking <xref:System.Net.Sockets.Socket> completes immediately, it might not send all of the bytes in the `buffer`.</span></span> <span data-ttu-id="660fe-3271">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит все байты в `buffer`.</span><span class="sxs-lookup"><span data-stu-id="660fe-3271">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends all of the bytes in the `buffer`.</span></span> <span data-ttu-id="660fe-3272">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3272">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-3273">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-3273">To increase network efficiency, the underlying system may delay transmission until a significant amount of out-going data is collected.</span></span> <span data-ttu-id="660fe-3274">Успешное завершение <xref:System.Net.Sockets.Socket.SendTo%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-3274">A successful completion of the <xref:System.Net.Sockets.Socket.SendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
 <span data-ttu-id="660fe-3275">Если вы используете протокол без установления соединения в блокирующем режиме <xref:System.Net.Sockets.Socket.SendTo%2A> , будет блокироваться до отправки датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-3275">If you are using a connectionless protocol in blocking mode, <xref:System.Net.Sockets.Socket.SendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="660fe-3276">Если вы хотите отправить данные на широковещательный адрес, необходимо сначала вызвать <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метод и установить параметр сокета в <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3276">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-3277">Кроме того, необходимо убедиться, что число отправленных байтов не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-3277">You must also be sure that the number of bytes sent does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-3278">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.SendTo%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3278">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3279">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3279">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3280">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3280">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3281">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3281">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3282">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3282">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3283">В следующем примере кода датаграмма без подключения отправляется на указанный удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-3283">The following code example sends a connectionless datagram to the specified remote host.</span></span> <span data-ttu-id="660fe-3284"><xref:System.Net.Sockets.SocketFlags>передаются <xref:System.Net.Sockets.Socket.SendTo%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3284"><xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#6)]
 [!code-csharp[Socket_Sync_Send_Receive#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#6)]
 [!code-vb[Socket_Sync_Send_Receive#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-3285"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3285"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-3286">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-3286">-or-</span></span> 
 <span data-ttu-id="660fe-3287">Свойство <paramref name="remoteEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3287"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3288">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3288">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3289"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3289">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="SendTo">
      <MemberSignature Language="C#" Value="public int SendTo (byte[] buffer, int size, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SendTo(unsigned int8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SendTo(cli::array &lt;System::Byte&gt; ^ buffer, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.SendTo : byte[] * int * System.Net.Sockets.SocketFlags * System.Net.EndPoint -&gt; int" Usage="socket.SendTo (buffer, size, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-3290">Массив типа <see cref="T:System.Byte" />, содержащий данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3290">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-3291">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3291">The number of bytes to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-3292">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3292">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-3293">Объект <see cref="T:System.Net.EndPoint" />, представляющий пункт назначения для данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-3293">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data.</span></span></param>
        <summary><span data-ttu-id="660fe-3294">Посылает указанное число байтов данных на указанную конечную точку, используя заданный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3294">Sends the specified number of bytes of data to the specified endpoint using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-3295">Число отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3295">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3296">В этой перегрузке смещение буфера по умолчанию равно 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-3296">In this overload, the buffer offset defaults to 0.</span></span> <span data-ttu-id="660fe-3297">Если указать <xref:System.Net.Sockets.SocketFlags.DontRoute> в `socketflags` качестве параметра флаг, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-3297">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-3298">Если используется протокол без установления соединения, не нужно устанавливать удаленный узел по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A> методом перед вызовом. <xref:System.Net.Sockets.Socket.SendTo%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3298">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="660fe-3299">Это необходимо сделать только в том случае, если предполагается вызывать <xref:System.Net.Sockets.Socket.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3299">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="660fe-3300">Если <xref:System.Net.Sockets.Socket.Connect%2A> метод вызывается до вызова <xref:System.Net.Sockets.Socket.SendTo%2A>метода, этот `remoteEP` параметр переопределит указанный удаленный узел по умолчанию только для этой операции отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3300">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="660fe-3301">Вам также не обязательно вызывать <xref:System.Net.Sockets.Socket.Bind%2A> метод, так как базовый поставщик услуг будет назначать наиболее подходящий адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3301">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method, because the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="660fe-3302">Если необходимо указать назначенный локальный сетевой адрес и номер порта, можно использовать <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> свойство <xref:System.Net.Sockets.Socket.SendTo%2A> после успешного завершения метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3302">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.SendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="660fe-3303">Хотя и предназначен для протоколов без <xref:System.Net.Sockets.Socket.SendTo%2A> подключения, также работает с протоколами, ориентированными на подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3303">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendTo%2A> also works with connection-oriented protocols.</span></span> <span data-ttu-id="660fe-3304">Если используется протокол, ориентированный на соединение, необходимо сначала установить соединение с удаленным узлом, вызвав <xref:System.Net.Sockets.Socket.Connect%2A> метод или приняв входящий запрос на <xref:System.Net.Sockets.Socket.Accept%2A> соединение с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3304">If you are using a connection-oriented protocol, you must first establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming connection request using the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-3305">Если не установить или принять соединение с удаленным узлом, <xref:System.Net.Sockets.Socket.SendTo%2A> будет вызвано <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3305">If you do not establish or accept a remote host connection, <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-3306">Кроме того, можно установить удаленный узел по умолчанию для протокола без установления соединения перед <xref:System.Net.Sockets.Socket.SendTo%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3306">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-3307">В любом из этих случаев <xref:System.Net.Sockets.Socket.SendTo%2A> `remoteEP` параметр будет игнорировать параметры и отправить данные только на удаленный узел, подключенный по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-3307">In either of these cases, <xref:System.Net.Sockets.Socket.SendTo%2A> will ignore the `remoteEP` parameter and only send data to the connected or default remote host.</span></span>  
  
 <span data-ttu-id="660fe-3308">Блокирующие сокеты блокируются до тех пор, пока не будет отправлено запрошенное число байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3308">Blocking sockets will block until the requested number of bytes are sent.</span></span> <span data-ttu-id="660fe-3309">Поскольку неблокировка <xref:System.Net.Sockets.Socket> завершается немедленно, она может не отправить все запрошенные байты в одной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-3309">Since a nonblocking <xref:System.Net.Sockets.Socket> completes immediately, it might not send all of the bytes requested in a single operation.</span></span> <span data-ttu-id="660fe-3310">Ответственность за отслеживание числа отправленных байтов и повтор операции до тех пор, пока приложение не отправит запрошенное число байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3310">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="660fe-3311">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3311">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-3312">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-3312">To increase network efficiency, the underlying system may delay transmission until a significant amount of out-going data is collected.</span></span> <span data-ttu-id="660fe-3313">Успешное завершение <xref:System.Net.Sockets.Socket.SendTo%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-3313">A successful completion of the <xref:System.Net.Sockets.Socket.SendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
 <span data-ttu-id="660fe-3314">Если вы используете протокол без установления соединения в блокирующем режиме <xref:System.Net.Sockets.Socket.SendTo%2A> , будет блокироваться до отправки датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-3314">If you are using a connectionless protocol in blocking mode, <xref:System.Net.Sockets.Socket.SendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="660fe-3315">Если вы хотите отправить данные на широковещательный адрес, необходимо сначала вызвать <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метод и установить параметр сокета в <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3315">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-3316">Кроме того, необходимо убедиться, что число отправленных байтов не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-3316">You must also be sure that the number of bytes sent does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-3317">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.SendTo%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3317">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3318">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3318">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3319">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3319">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3320">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3320">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3321">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3321">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3322">В следующем примере кода датаграмма без подключения отправляется на указанный удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-3322">The following code example sends a connectionless datagram to the specified remote host.</span></span> <span data-ttu-id="660fe-3323">Размер и <xref:System.Net.Sockets.SocketFlags> передаются <xref:System.Net.Sockets.Socket.SendTo%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3323">The size and <xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#7)]
 [!code-csharp[Socket_Sync_Send_Receive#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#7)]
 [!code-vb[Socket_Sync_Send_Receive#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-3324">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3324"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-3325">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3325">-or-</span></span> 
 <span data-ttu-id="660fe-3326"><paramref name="remoteEP" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3326"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-3327">Заданное значение <paramref name="size" /> превышает размер параметра <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3327">The specified <paramref name="size" /> exceeds the size of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3328">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3328">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3329"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3329">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="SendTo">
      <MemberSignature Language="C#" Value="public int SendTo (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SendTo(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.SendTo : byte[] * int * int * System.Net.Sockets.SocketFlags * System.Net.EndPoint -&gt; int" Usage="socket.SendTo (buffer, offset, size, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="660fe-3330">Массив типа <see cref="T:System.Byte" />, содержащий данные для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3330">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span></span></param>
        <param name="offset"><span data-ttu-id="660fe-3331">Положение в буфере данных, с которого начинается отправка данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-3331">The position in the data buffer at which to begin sending data.</span></span></param>
        <param name="size"><span data-ttu-id="660fe-3332">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3332">The number of bytes to send.</span></span></param>
        <param name="socketFlags"><span data-ttu-id="660fe-3333">Поразрядное сочетание значений <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3333">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="660fe-3334">Объект <see cref="T:System.Net.EndPoint" />, представляющий пункт назначения для данных.</span><span class="sxs-lookup"><span data-stu-id="660fe-3334">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data.</span></span></param>
        <summary><span data-ttu-id="660fe-3335">Посылает указанное число байтов данных на указанную конечную точку, начиная с заданной позиции буфера и используя указанный объект <see cref="T:System.Net.Sockets.SocketFlags" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3335">Sends the specified number of bytes of data to the specified endpoint, starting at the specified location in the buffer, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span></span></summary>
        <returns><span data-ttu-id="660fe-3336">Число отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3336">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3337">В этой перегрузке при указании <xref:System.Net.Sockets.SocketFlags.DontRoute> флага в `socketflags` качестве параметра отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-3337">In this overload, if you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-3338">Если используется протокол без установления соединения, не нужно устанавливать удаленный узел по умолчанию с <xref:System.Net.Sockets.Socket.Connect%2A> методом перед вызовом. <xref:System.Net.Sockets.Socket.SendTo%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3338">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="660fe-3339">Это необходимо сделать только в том случае, если предполагается вызывать <xref:System.Net.Sockets.Socket.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3339">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="660fe-3340">Если <xref:System.Net.Sockets.Socket.Connect%2A> метод вызывается до вызова <xref:System.Net.Sockets.Socket.SendTo%2A>метода, этот `remoteEP` параметр переопределит указанный удаленный узел по умолчанию только для этой операции отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3340">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="660fe-3341">Вам также не обязательно вызывать <xref:System.Net.Sockets.Socket.Bind%2A> метод, так как базовый поставщик услуг будет назначать наиболее подходящий адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3341">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method, because the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="660fe-3342">Если необходимо указать назначенный локальный сетевой адрес и номер порта, можно использовать <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> свойство <xref:System.Net.Sockets.Socket.SendTo%2A> после успешного завершения метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3342">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.SendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="660fe-3343">Хотя и предназначен для протоколов без <xref:System.Net.Sockets.Socket.SendTo%2A> подключения, также работает с протоколами, ориентированными на подключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3343">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendTo%2A> also works with connection-oriented protocols.</span></span> <span data-ttu-id="660fe-3344">Если используется протокол, ориентированный на соединение, необходимо сначала установить соединение с удаленным узлом, вызвав <xref:System.Net.Sockets.Socket.Connect%2A> метод или приняв входящий запрос на <xref:System.Net.Sockets.Socket.Accept%2A> соединение с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3344">If you are using a connection-oriented protocol, you must first establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming connection request using the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="660fe-3345">Если не установить или принять соединение с удаленным узлом, <xref:System.Net.Sockets.Socket.SendTo%2A> будет вызвано <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3345">If you do not establish or accept a remote host connection, <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-3346">Кроме того, можно установить удаленный узел по умолчанию для протокола без установления соединения перед <xref:System.Net.Sockets.Socket.SendTo%2A> вызовом метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3346">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="660fe-3347">В любом из этих случаев <xref:System.Net.Sockets.Socket.SendTo%2A> `remoteEP` параметр будет игнорировать параметры и отправить данные только на удаленный узел, подключенный по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="660fe-3347">In either of these cases, <xref:System.Net.Sockets.Socket.SendTo%2A> will ignore the `remoteEP` parameter and only send data to the connected or default remote host.</span></span>  
  
 <span data-ttu-id="660fe-3348">Блокирующие сокеты блокируются до тех пор, пока не будет отправлено запрошенное число байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3348">Blocking sockets will block until the requested number of bytes are sent.</span></span> <span data-ttu-id="660fe-3349">Так как неблокировка <xref:System.Net.Sockets.Socket> завершается немедленно, она может не отправить все запрошенные байты в одной операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-3349">Since a non-blocking <xref:System.Net.Sockets.Socket> completes immediately, it might not send all of the bytes requested in a single operation.</span></span> <span data-ttu-id="660fe-3350">Мы обязаны следить за количеством отправленных байтов и повторить операцию до тех пор, пока приложение не отправит запрошенное число байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3350">It is your applications responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="660fe-3351">Кроме того, не гарантируется, что отправляемые данные будут немедленно отображаться в сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3351">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="660fe-3352">Чтобы повысить эффективность работы сети, базовая система может отложить передачу данных до тех пор, пока не будет собрано значительное количество исходящих.</span><span class="sxs-lookup"><span data-stu-id="660fe-3352">To increase network efficiency, the underlying system may delay transmission until a significant amount of out-going data is collected.</span></span> <span data-ttu-id="660fe-3353">Успешное завершение <xref:System.Net.Sockets.Socket.SendTo%2A> метода означает, что базовая система имела место для буферизации данных для отправки в сеть.</span><span class="sxs-lookup"><span data-stu-id="660fe-3353">A successful completion of the <xref:System.Net.Sockets.Socket.SendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
 <span data-ttu-id="660fe-3354">Если вы используете протокол без установления соединения в блокирующем режиме <xref:System.Net.Sockets.Socket.SendTo%2A> , будет блокироваться до отправки датаграммы.</span><span class="sxs-lookup"><span data-stu-id="660fe-3354">If you are using a connectionless protocol in blocking mode, <xref:System.Net.Sockets.Socket.SendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="660fe-3355">Если вы хотите отправить данные на широковещательный адрес, необходимо сначала вызвать <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метод и установить параметр сокета в <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3355">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="660fe-3356">Кроме того, необходимо убедиться, что размер не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-3356">You must also be sure that the size does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-3357">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.SendTo%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3357">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3358">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3358">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3359">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3359">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3360">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3360">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3361">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3361">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3362">В следующем примере кода датаграмма без подключения отправляется на указанный удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-3362">The following code example sends a connectionless datagram to the specified remote host.</span></span> <span data-ttu-id="660fe-3363">Смещение, размер и <xref:System.Net.Sockets.SocketFlags> передаются <xref:System.Net.Sockets.Socket.SendTo%2A> в метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3363">The offset, size, and <xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#8)]
 [!code-csharp[Socket_Sync_Send_Receive#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#8)]
 [!code-vb[Socket_Sync_Send_Receive#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-3364">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3364"><paramref name="buffer" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="660fe-3365">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3365">-or-</span></span> 
 <span data-ttu-id="660fe-3366">Свойство <paramref name="remoteEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3366"><paramref name="remoteEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-3367">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-3367"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-3368">-или-</span><span class="sxs-lookup"><span data-stu-id="660fe-3368">-or-</span></span> 
 <span data-ttu-id="660fe-3369">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3369"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="660fe-3370">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3370">-or-</span></span> 
 <span data-ttu-id="660fe-3371">Значение параметра <paramref name="size" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="660fe-3371"><paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="660fe-3372">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3372">-or-</span></span> 
 <span data-ttu-id="660fe-3373">Значение <paramref name="size" /> превышает значение, полученное, если отнять от длины <paramref name="buffer" /> значение параметра <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3373"><paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3374"><paramref name="socketFlags" /> — недопустимое сочетание значений.</span><span class="sxs-lookup"><span data-stu-id="660fe-3374"><paramref name="socketFlags" /> is not a valid combination of values.</span></span>  
  
<span data-ttu-id="660fe-3375">- или -</span><span class="sxs-lookup"><span data-stu-id="660fe-3375">-or-</span></span> 
<span data-ttu-id="660fe-3376">Произошла ошибка операционной системы при доступе к <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3376">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3377"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3377">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="660fe-3378">Вызывающий оператор в стеке вызовов не имеет необходимых разрешений.</span><span class="sxs-lookup"><span data-stu-id="660fe-3378">A caller in the call stack does not have the required permissions.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="SendToAsync">
      <MemberSignature Language="C#" Value="public bool SendToAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SendToAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendToAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SendToAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.SendToAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.SendToAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="660fe-3379">Объект <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> для использования в данной асинхронной операции сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-3379">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span></span></param>
        <summary><span data-ttu-id="660fe-3380">Асинхронно передает данные на конкретный удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="660fe-3380">Sends data asynchronously to a specific remote host.</span></span></summary>
        <returns><span data-ttu-id="660fe-3381"><see langword="true" />, если операция ввода-вывода находится в состоянии ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-3381"><see langword="true" /> if the I/O operation is pending.</span></span> <span data-ttu-id="660fe-3382">По завершении операции создается событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3382">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span></span>  
  
 <span data-ttu-id="660fe-3383"><see langword="false" />, если операция ввода-вывода завершена синхронно.</span><span class="sxs-lookup"><span data-stu-id="660fe-3383"><see langword="false" /> if the I/O operation completed synchronously.</span></span> <span data-ttu-id="660fe-3384">В данном случае событие <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> на параметре <paramref name="e" /> не будет создано и объект <paramref name="e" />, передаваемый как параметр, можно изучить сразу после получения результатов вызова метода для извлечения результатов операции.</span><span class="sxs-lookup"><span data-stu-id="660fe-3384">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3385">Метод запускает асинхронную операцию отправки на удаленный узел, указанный <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> в свойстве `e` параметра. <xref:System.Net.Sockets.Socket.SendToAsync%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3385">The <xref:System.Net.Sockets.Socket.SendToAsync%2A> method starts an asynchronous send operation to the remote host specified in the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property of the `e` parameter.</span></span> <span data-ttu-id="660fe-3386"><xref:System.Net.Sockets.Socket.SendToAsync%2A> Вызов метода дает возможность отправки данных в отдельном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3386">Calling the <xref:System.Net.Sockets.Socket.SendToAsync%2A> method gives you the ability to send data within a separate execution thread.</span></span> <span data-ttu-id="660fe-3387">Несмотря на то, что этот метод предназначен для протоколов без подключения, работает с протоколами, <xref:System.Net.Sockets.Socket.SendToAsync%2A> ориентированными на подключения и без них.</span><span class="sxs-lookup"><span data-stu-id="660fe-3387">Although this method is intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendToAsync%2A> works with both connectionless and connection-oriented protocols.</span></span>  
  
 <span data-ttu-id="660fe-3388">Чтобы получать уведомления о завершении, необходимо создать метод обратного вызова, реализующий\<обработчик EventHandler SocketAsyncEventArgs > делегата и присоединить <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> обратный вызов к событию.</span><span class="sxs-lookup"><span data-stu-id="660fe-3388">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and attach the callback to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="660fe-3389">Для успешного вызова этого метода необходимы следующие <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> свойства и события объекта:</span><span class="sxs-lookup"><span data-stu-id="660fe-3389">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="660fe-3390">Вызывающая сторона может задать <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> для свойства любой объект пользовательского состояния, необходимый перед <xref:System.Net.Sockets.Socket.SendToAsync%2A> вызовом метода, чтобы информация была извлечена в методе обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="660fe-3390">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.SendToAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="660fe-3391">Если для обратного вызова требуется больше сведений, чем для одного объекта, можно создать небольшой класс для хранения других требуемых сведений о состоянии в качестве членов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3391">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="660fe-3392">При использовании <xref:System.Net.Sockets.Socket.Accept%2A>протокола, ориентированного на соединение, необходимо сначала вызвать метод, <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.Sockets.Socket.AcceptAsync%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>,, или <xref:System.Net.Sockets.Socket.ConnectAsync%2A> .</span><span class="sxs-lookup"><span data-stu-id="660fe-3392">If you are using a connection-oriented protocol, you must first call the <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method.</span></span> <span data-ttu-id="660fe-3393">В <xref:System.Net.Sockets.Socket.SendToAsync%2A> противном случае <xref:System.Net.Sockets.SocketException>будет вызвано исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3393">Otherwise <xref:System.Net.Sockets.Socket.SendToAsync%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-3394">При использовании протокола, ориентированного на соединение, <xref:System.Net.Sockets.Socket.SendToAsync%2A> метод <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> игнорирует свойство и отправляет данные в объект <xref:System.Net.Sockets.Socket.BeginConnect%2A> <xref:System.Net.EndPoint?displayProperty=nameWithType> <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.Accept%2A>, установленный в, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>,,, <xref:System.Net.Sockets.Socket.Connect%2A> метод или <xref:System.Net.Sockets.Socket.ConnectAsync%2A> .</span><span class="sxs-lookup"><span data-stu-id="660fe-3394">When using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.SendToAsync%2A> method will ignore the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property and send data to the <xref:System.Net.EndPoint?displayProperty=nameWithType> established in the <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-3395">Если используется протокол без установления соединения, не <xref:System.Net.Sockets.Socket.BeginConnect%2A>нужно устанавливать удаленный узел по умолчанию с методом, <xref:System.Net.Sockets.Socket.Connect%2A>или <xref:System.Net.Sockets.Socket.ConnectAsync%2A> до вызова <xref:System.Net.Sockets.Socket.SendToAsync%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="660fe-3395">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendToAsync%2A>.</span></span> <span data-ttu-id="660fe-3396">Это необходимо сделать только в том случае, если предполагается вызывать <xref:System.Net.Sockets.Socket.BeginSend%2A> методы <xref:System.Net.Sockets.Socket.SendAsync%2A> или.</span><span class="sxs-lookup"><span data-stu-id="660fe-3396">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.BeginSend%2A> or <xref:System.Net.Sockets.Socket.SendAsync%2A> methods.</span></span> <span data-ttu-id="660fe-3397">При <xref:System.Net.Sockets.Socket.BeginConnect%2A>вызове метода, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> <xref:System.Net.Sockets.Socket.Connect%2A>или перед вызовом <xref:System.Net.Sockets.Socket.SendToAsync%2A> <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> свойство переопределит указанный удаленный узел по умолчанию только для этой операции отправки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3397">If you do call the <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendToAsync%2A>, the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="660fe-3398">Также не требуется вызывать <xref:System.Net.Sockets.Socket.Bind%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3398">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="660fe-3399">В этом случае базовый поставщик услуг будет назначать наиболее подходящий IP-адрес локальной сети и номер порта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3399">In this case, the underlying service provider will assign the most appropriate local network IP address and port number.</span></span> <span data-ttu-id="660fe-3400">Если необходимо, чтобы базовый поставщик услуг выберет свободный порт, используйте нуль-порт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3400">Use a port number of zero if you want the underlying service provider to select a free port.</span></span> <span data-ttu-id="660fe-3401">Если необходимо указать назначенный локальный сетевой IP-адрес и номер порта, можно использовать <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> свойство <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> после получения сигнала о событии и вызова связанных делегатов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3401">If you need to identify the assigned local network IP address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event is signaled and the associated delegates are called.</span></span>  
  
 <span data-ttu-id="660fe-3402">Если вы хотите отправить данные на широковещательный адрес, необходимо сначала вызвать <xref:System.Net.Sockets.Socket.SetSocketOption%2A> метод и установить <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> параметр сокета в значение true.</span><span class="sxs-lookup"><span data-stu-id="660fe-3402">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option for <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> to true.</span></span> <span data-ttu-id="660fe-3403">Кроме того, необходимо убедиться, что размер буфера не превышает максимальный размер пакета для базового поставщика услуг.</span><span class="sxs-lookup"><span data-stu-id="660fe-3403">You must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="660fe-3404">Если это так, датаграмма не будет отправлена и <xref:System.Net.Sockets.Socket.SendToAsync%2A> создаст <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3404">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendToAsync%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="660fe-3405">Если в <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType> свойстве указан флаг донтрауте, отправляемые данные не будут маршрутизироваться.</span><span class="sxs-lookup"><span data-stu-id="660fe-3405">If you specify the DontRoute flag in the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType> property, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="660fe-3406">Для сокетов, ориентированных на сообщения, необходимо не превышать максимальный размер сообщения базового транспорта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3406">For message-oriented sockets, care must be taken not to exceed the maximum message size of the underlying transport.</span></span> <span data-ttu-id="660fe-3407">Если размер буфера превышает максимальный размер пакета основного поставщика услуг, датаграмма не отправляется и <xref:System.Net.Sockets.Socket.SendToAsync%2A> вызывает <xref:System.Net.Sockets.SocketException>исключение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3407">If the size of the buffer exceeds the maximum packet size of the underlying service provider, the datagram is not sent and <xref:System.Net.Sockets.Socket.SendToAsync%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="660fe-3408">Успешное завершение <xref:System.Net.Sockets.Socket.SendToAsync%2A> метода не означает, что данные были успешно доставлены.</span><span class="sxs-lookup"><span data-stu-id="660fe-3408">The successful completion of a <xref:System.Net.Sockets.Socket.SendToAsync%2A> method does not indicate that the data was successfully delivered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-3409">Объект <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> не может иметь значение "null".</span><span class="sxs-lookup"><span data-stu-id="660fe-3409">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-3410">Операция сокета уже выполнялась с использованием объекта <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />, указанного в параметре <paramref name="e" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3410">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-3411">Этот метод доступен только в Windows XP и более поздних версиях.</span><span class="sxs-lookup"><span data-stu-id="660fe-3411">Windows XP or later is required for this method.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3412"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3412">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3413">Указанный протокол работает с установлением соединения, но объект <see cref="T:System.Net.Sockets.Socket" /> еще не подключен.</span><span class="sxs-lookup"><span data-stu-id="660fe-3413">The protocol specified is connection-oriented, but the <see cref="T:System.Net.Sockets.Socket" /> is not yet connected.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="SetIPProtectionLevel">
      <MemberSignature Language="C#" Value="public void SetIPProtectionLevel (System.Net.Sockets.IPProtectionLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIPProtectionLevel(valuetype System.Net.Sockets.IPProtectionLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIPProtectionLevel (level As IPProtectionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIPProtectionLevel(System::Net::Sockets::IPProtectionLevel level);" />
      <MemberSignature Language="F#" Value="member this.SetIPProtectionLevel : System.Net.Sockets.IPProtectionLevel -&gt; unit" Usage="socket.SetIPProtectionLevel level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Net.Sockets.IPProtectionLevel" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="level"><span data-ttu-id="660fe-3414">Уровень защиты IP, который надо установить для сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-3414">The IP protection level to set on this socket.</span></span></param>
        <summary><span data-ttu-id="660fe-3415">Задается стандартный уровень защиты IP для сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-3415">Set the IP protection level on a socket.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3416"><xref:System.Net.Sockets.Socket.SetIPProtectionLevel%2A> Метод позволяет ограничить сокеты IPv6 или IP для прослушивания указанной области, например адресов с одинаковой локальной ссылкой или локальным префиксом сайта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3416">The <xref:System.Net.Sockets.Socket.SetIPProtectionLevel%2A> method enables restricting an a IPv6 or IP socket to listen on a specified scope, such as addresses with the same link local or site local prefix.</span></span> <span data-ttu-id="660fe-3417">Этот параметр сокета позволяет приложениям размещать ограничения доступа к сокетам IPv6 или IP.</span><span class="sxs-lookup"><span data-stu-id="660fe-3417">This socket option enables applications to place access restrictions on IPv6 or IP sockets.</span></span> <span data-ttu-id="660fe-3418">Такие ограничения позволяют приложению, работающему в частной локальной сети, просто и надежно защититься от внешних атак.</span><span class="sxs-lookup"><span data-stu-id="660fe-3418">Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks.</span></span> <span data-ttu-id="660fe-3419">Этот параметр сокета также можно использовать для удаления ограничений доступа, `level` если параметр имеет <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3419">This socket option can also be used to remove access restrictions if the `level` parameter is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="660fe-3420">Этот параметр сокета расширяет или сужает диапазон прослушивающего сокета, обеспечивая при необходимости неограниченный доступ со стороны открытых и закрытых пользователей или ограничивая доступ только тем же сайтом.</span><span class="sxs-lookup"><span data-stu-id="660fe-3420">This socket option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required.</span></span>  
  
 <span data-ttu-id="660fe-3421">Определенные уровни защиты этого параметра сокета указаны в перечислении <xref:System.Net.Sockets.IPProtectionLevel>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3421">This socket option has defined protection levels specified in the <xref:System.Net.Sockets.IPProtectionLevel> enumeration.</span></span>  
  
 <span data-ttu-id="660fe-3422">Метод используется для включения или отключения обхода сетевых адресов (NAT) <xref:System.Net.Sockets.Socket> для экземпляра. <xref:System.Net.Sockets.Socket.SetIPProtectionLevel%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3422">The <xref:System.Net.Sockets.Socket.SetIPProtectionLevel%2A> method is used to enable or disable Network Address Traversal (NAT) for a <xref:System.Net.Sockets.Socket> instance.</span></span> <span data-ttu-id="660fe-3423">Обход NAT может быть предоставлен с помощью Teredo, 6to4 или туннеля ISATAP.</span><span class="sxs-lookup"><span data-stu-id="660fe-3423">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="660fe-3424">Если параметр имеет <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>значение или <xref:System.Net.Sockets.IPProtectionLevel.Restricted>, то <xref:System.Net.Sockets.Socket> он явно отключает обход NAT для экземпляра. `level`</span><span class="sxs-lookup"><span data-stu-id="660fe-3424">When the `level` parameter is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>, or <xref:System.Net.Sockets.IPProtectionLevel.Restricted>, this explicitly disables NAT traversal for a <xref:System.Net.Sockets.Socket> instance.</span></span>  
  
 <span data-ttu-id="660fe-3425">Если параметр имеет <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>значение, это может разрешить обход NAT для, <xref:System.Net.Sockets.Socket> в зависимости от правил брандмауэра, установленных в системе. `level`</span><span class="sxs-lookup"><span data-stu-id="660fe-3425">When the `level` parameter is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>, this may allow NAT traversal for a <xref:System.Net.Sockets.Socket> depending on firewall rules in place on the system.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="660fe-3426">Параметр <paramref name="level" /> не может иметь значение <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3426">The <paramref name="level" /> parameter cannot be <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />.</span></span> <span data-ttu-id="660fe-3427">Уровень защиты IP не может быть неопределенным.</span><span class="sxs-lookup"><span data-stu-id="660fe-3427">The IP protection level cannot be set to unspecified.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-3428"><see cref="T:System.Net.Sockets.AddressFamily" /> сокета должен быть либо <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />, либо <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3428">The <see cref="T:System.Net.Sockets.AddressFamily" /> of the socket must be either <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSocketOption">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="660fe-3429">Устанавливает параметр <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3429">Sets a <see cref="T:System.Net.Sockets.Socket" /> option.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSocketOption">
      <MemberSignature Language="C#" Value="public void SetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, bool optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, bool optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, bool optionValue);" />
      <MemberSignature Language="F#" Value="member this.SetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * bool -&gt; unit" Usage="socket.SetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionValue" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="optionLevel"><span data-ttu-id="660fe-3430">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3430">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span></span></param>
        <param name="optionName"><span data-ttu-id="660fe-3431">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionName" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3431">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span></span></param>
        <param name="optionValue"><span data-ttu-id="660fe-3432">Значение параметра, представленное в виде объекта <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3432">The value of the option, represented as a <see cref="T:System.Boolean" />.</span></span></param>
        <summary><span data-ttu-id="660fe-3433">Устанавливает для заданного параметра <see cref="T:System.Net.Sockets.Socket" /> указанное значение <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3433">Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified <see cref="T:System.Boolean" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3434"><xref:System.Net.Sockets.Socket>параметры определяют поведение текущего <xref:System.Net.Sockets.Socket>объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3434"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-3435">Задайте для значение `optionValue` , чтобы включить параметр, или `false` для отключения параметра. `true`</span><span class="sxs-lookup"><span data-stu-id="660fe-3435">Set `optionValue` to `true` to enable the option, or to `false` to disable the option.</span></span>  
  
 <span data-ttu-id="660fe-3436"><xref:System.Net.Sockets.Socket>Параметры группируются по уровню поддержки протокола.</span><span class="sxs-lookup"><span data-stu-id="660fe-3436"><xref:System.Net.Sockets.Socket> options are grouped by level of protocol support.</span></span>  
  
 <span data-ttu-id="660fe-3437">Ниже приведены различные <xref:System.Net.Sockets.Socket> параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3437">Listed below are the various <xref:System.Net.Sockets.Socket> options that can be set using this overload.</span></span> <span data-ttu-id="660fe-3438">Эти параметры группируются по соответствующему <xref:System.Net.Sockets.SocketOptionLevel> значению.</span><span class="sxs-lookup"><span data-stu-id="660fe-3438">These options are grouped by the appropriate <xref:System.Net.Sockets.SocketOptionLevel> value.</span></span> <span data-ttu-id="660fe-3439">Если вы собираетесь задать любой из этих параметров, обязательно используйте соответствующее <xref:System.Net.Sockets.SocketOptionLevel> значение `optionLevel` для параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-3439">If you intend to set any of these options, be sure to use the appropriate <xref:System.Net.Sockets.SocketOptionLevel> value for the `optionLevel` parameter.</span></span> <span data-ttu-id="660fe-3440">Параметр, выбранный для установки, должен быть указан в `optionName` параметре.</span><span class="sxs-lookup"><span data-stu-id="660fe-3440">The option you choose to set must be specified in the `optionName` parameter.</span></span> <span data-ttu-id="660fe-3441">Если вы хотите получить текущее значение любого из перечисленных параметров, используйте <xref:System.Net.Sockets.Socket.GetSocketOption%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3441">If you want to get the current value of any of the options listed, use the <xref:System.Net.Sockets.Socket.GetSocketOption%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-3442"><xref:System.Net.Sockets.SocketOptionLevel.Socket?displayProperty=nameWithType>параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3442"><xref:System.Net.Sockets.SocketOptionLevel.Socket?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.AcceptConnection>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Broadcast>  
  
-   <xref:System.Net.Sockets.SocketOptionName.DontLinger>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Debug>  
  
-   <xref:System.Net.Sockets.SocketOptionName.KeepAlive>  
  
-   <xref:System.Net.Sockets.SocketOptionName.OutOfBandInline>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ReuseAddress>  
  
 <span data-ttu-id="660fe-3443"><xref:System.Net.Sockets.SocketOptionLevel.IP?displayProperty=nameWithType>параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3443"><xref:System.Net.Sockets.SocketOptionLevel.IP?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.HeaderIncluded>  
  
-   <xref:System.Net.Sockets.SocketOptionName.MulticastLoopback>  
  
-   <xref:System.Net.Sockets.SocketOptionName.UseLoopback>  
  
 <span data-ttu-id="660fe-3444"><xref:System.Net.Sockets.SocketOptionLevel.Tcp?displayProperty=nameWithType>параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3444"><xref:System.Net.Sockets.SocketOptionLevel.Tcp?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.BsdUrgent>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Expedited>  
  
-   <xref:System.Net.Sockets.SocketOptionName.NoDelay>  
  
 <span data-ttu-id="660fe-3445"><xref:System.Net.Sockets.SocketOptionLevel.Udp?displayProperty=nameWithType>параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3445"><xref:System.Net.Sockets.SocketOptionLevel.Udp?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.NoChecksum>  
  
 <span data-ttu-id="660fe-3446">Дополнительные сведения об этих параметрах см. в <xref:System.Net.Sockets.SocketOptionName> описании перечисления.</span><span class="sxs-lookup"><span data-stu-id="660fe-3446">For more information on these options, refer to the <xref:System.Net.Sockets.SocketOptionName> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3447">Если вы получаете <xref:System.Net.Sockets.SocketException> исключение, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3447">If you receive a <xref:System.Net.Sockets.SocketException> exception, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3448">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3448">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3449">В следующем примере кода открывается сокет и включаются `DontLinger` параметры `OutOfBandInline` и сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-3449">The following code example opens a socket and enables the `DontLinger` and the `OutOfBandInline` socket options.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#5)]
 [!code-csharp[NCLSocketEnhancements#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3450">Объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3450">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3451">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3451">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSocketOption">
      <MemberSignature Language="C#" Value="public void SetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, byte[] optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, unsigned int8[] optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, cli::array &lt;System::Byte&gt; ^ optionValue);" />
      <MemberSignature Language="F#" Value="member this.SetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * byte[] -&gt; unit" Usage="socket.SetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionValue" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="optionLevel"><span data-ttu-id="660fe-3452">Одно из значений <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3452">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span></span></param>
        <param name="optionName"><span data-ttu-id="660fe-3453">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionName" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3453">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span></span></param>
        <param name="optionValue"><span data-ttu-id="660fe-3454">Массив типа <see cref="T:System.Byte" />, который представляет значение параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-3454">An array of type <see cref="T:System.Byte" /> that represents the value of the option.</span></span></param>
        <summary><span data-ttu-id="660fe-3455">Устанавливает для указанного параметра <see cref="T:System.Net.Sockets.Socket" /> заданное значение, представленное в виде байтового массива.</span><span class="sxs-lookup"><span data-stu-id="660fe-3455">Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified value, represented as a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3456"><xref:System.Net.Sockets.Socket>параметры определяют поведение текущего <xref:System.Net.Sockets.Socket>объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3456"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-3457">Используйте эту перегрузку для <xref:System.Net.Sockets.Socket> задания этих параметров, для которых в качестве значения параметра требуется массив байтов.</span><span class="sxs-lookup"><span data-stu-id="660fe-3457">Use this overload to set those <xref:System.Net.Sockets.Socket> options that require a byte array as an option value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3458">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3458">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3459">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3459">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3460">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3460">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3461">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3461">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3462">В следующем примере кода <xref:System.Net.Sockets.LingerOption> задаются <xref:System.Net.Sockets.Socket.Send%2A> значения времени ожидания и.</span><span class="sxs-lookup"><span data-stu-id="660fe-3462">The following code example sets the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#1)]
 [!code-csharp[Socket_Socket_Options#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#1)]
 [!code-vb[Socket_Socket_Options#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3463">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3463">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3464"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3464">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />
      </Docs>
    </Member>
    <Member MemberName="SetSocketOption">
      <MemberSignature Language="C#" Value="public void SetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, int optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, int32 optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, int optionValue);" />
      <MemberSignature Language="F#" Value="member this.SetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * int -&gt; unit" Usage="socket.SetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionValue" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="optionLevel"><span data-ttu-id="660fe-3465">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3465">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span></span></param>
        <param name="optionName"><span data-ttu-id="660fe-3466">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionName" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3466">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span></span></param>
        <param name="optionValue"><span data-ttu-id="660fe-3467">Значение параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-3467">A value of the option.</span></span></param>
        <summary><span data-ttu-id="660fe-3468">Устанавливает заданное целое значение для указанного параметра <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3468">Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3469"><xref:System.Net.Sockets.Socket>параметры определяют поведение текущего <xref:System.Net.Sockets.Socket>объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3469"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-3470">Для параметра с <xref:System.Boolean> типом данных укажите ненулевое значение, чтобы включить параметр, и нулевое значение для отключения параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-3470">For an option with a <xref:System.Boolean> data type, specify a nonzero value to enable the option, and a zero value to disable the option.</span></span> <span data-ttu-id="660fe-3471">Для параметра с целочисленным типом данных укажите соответствующее значение.</span><span class="sxs-lookup"><span data-stu-id="660fe-3471">For an option with an integer data type, specify the appropriate value.</span></span> <span data-ttu-id="660fe-3472"><xref:System.Net.Sockets.Socket>Параметры группируются по уровню поддержки протокола.</span><span class="sxs-lookup"><span data-stu-id="660fe-3472"><xref:System.Net.Sockets.Socket> options are grouped by level of protocol support.</span></span>  
  
 <span data-ttu-id="660fe-3473">Ниже приведены различные <xref:System.Net.Sockets.Socket> параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3473">Listed below are the various <xref:System.Net.Sockets.Socket> options that can be set using this overload.</span></span> <span data-ttu-id="660fe-3474">Эти параметры группируются по соответствующему <xref:System.Net.Sockets.SocketOptionLevel>параметру.</span><span class="sxs-lookup"><span data-stu-id="660fe-3474">These options are grouped by the appropriate <xref:System.Net.Sockets.SocketOptionLevel>.</span></span> <span data-ttu-id="660fe-3475">Если вы собираетесь задать любой из этих параметров, обязательно используйте соответствующий <xref:System.Net.Sockets.SocketOptionLevel> `optionLevel` параметр.</span><span class="sxs-lookup"><span data-stu-id="660fe-3475">If you intend to set any of these options, be sure to use the appropriate <xref:System.Net.Sockets.SocketOptionLevel> for the `optionLevel` parameter.</span></span> <span data-ttu-id="660fe-3476">Параметр, выбранный для установки, должен быть указан в `optionName` параметре.</span><span class="sxs-lookup"><span data-stu-id="660fe-3476">The option you choose to set must be specified in the `optionName` parameter.</span></span> <span data-ttu-id="660fe-3477">Если вы хотите получить текущее значение любого из перечисленных параметров, используйте <xref:System.Net.Sockets.Socket.GetSocketOption%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3477">If you want to get the current value of any of the options listed, use the <xref:System.Net.Sockets.Socket.GetSocketOption%2A> method.</span></span>  
  
 <span data-ttu-id="660fe-3478"><xref:System.Net.Sockets.SocketOptionLevel.Socket?displayProperty=nameWithType>параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3478"><xref:System.Net.Sockets.SocketOptionLevel.Socket?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Broadcast>  
  
-   <xref:System.Net.Sockets.SocketOptionName.DontLinger>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Debug>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Error>  
  
-   <xref:System.Net.Sockets.SocketOptionName.KeepAlive>  
  
-   <xref:System.Net.Sockets.SocketOptionName.OutOfBandInline>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ReceiveBuffer>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ReceiveTimeout>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ReuseAddress>  
  
-   <xref:System.Net.Sockets.SocketOptionName.SendBuffer>  
  
-   <xref:System.Net.Sockets.SocketOptionName.SendTimeout>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Type>  
  
 <span data-ttu-id="660fe-3479"><xref:System.Net.Sockets.SocketOptionLevel.IP?displayProperty=nameWithType>параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3479"><xref:System.Net.Sockets.SocketOptionLevel.IP?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.HeaderIncluded>  
  
-   <xref:System.Net.Sockets.SocketOptionName.IPOptions>  
  
-   <xref:System.Net.Sockets.SocketOptionName.IpTimeToLive>  
  
-   <xref:System.Net.Sockets.SocketOptionName.MulticastInterface>  
  
-   <xref:System.Net.Sockets.SocketOptionName.MulticastLoopback>  
  
-   <xref:System.Net.Sockets.SocketOptionName.MulticastTimeToLive>  
  
-   <xref:System.Net.Sockets.SocketOptionName.TypeOfService>  
  
-   <xref:System.Net.Sockets.SocketOptionName.UseLoopback>  
  
 <span data-ttu-id="660fe-3480"><xref:System.Net.Sockets.SocketOptionLevel.Tcp?displayProperty=nameWithType>параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3480"><xref:System.Net.Sockets.SocketOptionLevel.Tcp?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.BsdUrgent>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Expedited>  
  
-   <xref:System.Net.Sockets.SocketOptionName.NoDelay>  
  
 <span data-ttu-id="660fe-3481"><xref:System.Net.Sockets.SocketOptionLevel.Udp?displayProperty=nameWithType>параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3481"><xref:System.Net.Sockets.SocketOptionLevel.Udp?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ChecksumCoverage>  
  
-   <xref:System.Net.Sockets.SocketOptionName.NoChecksum>  
  
 <span data-ttu-id="660fe-3482"><xref:System.Net.Sockets.SocketOptionLevel.IPv6?displayProperty=nameWithType>параметры, которые можно задать с помощью этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3482"><xref:System.Net.Sockets.SocketOptionLevel.IPv6?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.HopLimit>  
  
 <span data-ttu-id="660fe-3483">Дополнительные сведения об этих параметрах см. в <xref:System.Net.Sockets.SocketOptionName> описании перечисления.</span><span class="sxs-lookup"><span data-stu-id="660fe-3483">For more information about these options, refer to the <xref:System.Net.Sockets.SocketOptionName> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3484">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3484">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3485">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3485">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3486">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3486">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3487">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3487">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3488">В следующем примере кода <xref:System.Net.Sockets.LingerOption> задаются <xref:System.Net.Sockets.Socket.Send%2A> значения времени ожидания и.</span><span class="sxs-lookup"><span data-stu-id="660fe-3488">The following code example sets the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#1)]
 [!code-csharp[Socket_Socket_Options#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#1)]
 [!code-vb[Socket_Socket_Options#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3489">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3489">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3490"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3490">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />
      </Docs>
    </Member>
    <Member MemberName="SetSocketOption">
      <MemberSignature Language="C#" Value="public void SetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, object optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, object optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, System::Object ^ optionValue);" />
      <MemberSignature Language="F#" Value="member this.SetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * obj -&gt; unit" Usage="socket.SetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionValue" Type="System.Object" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="optionLevel"><span data-ttu-id="660fe-3491">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3491">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span></span></param>
        <param name="optionName"><span data-ttu-id="660fe-3492">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketOptionName" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3492">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span></span></param>
        <param name="optionValue"><span data-ttu-id="660fe-3493">Объект <see cref="T:System.Net.Sockets.LingerOption" /> или <see cref="T:System.Net.Sockets.MulticastOption" />, содержащий значение параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-3493">A <see cref="T:System.Net.Sockets.LingerOption" /> or <see cref="T:System.Net.Sockets.MulticastOption" /> that contains the value of the option.</span></span></param>
        <summary><span data-ttu-id="660fe-3494">Устанавливает для указанного параметра <see cref="T:System.Net.Sockets.Socket" /> заданное значение, представленное в виде объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3494">Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified value, represented as an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3495"><xref:System.Net.Sockets.Socket>параметры определяют поведение текущего <xref:System.Net.Sockets.Socket>объекта.</span><span class="sxs-lookup"><span data-stu-id="660fe-3495"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-3496">Используйте эту перегрузку для <xref:System.Net.Sockets.SocketOptionName.Linger>установки <xref:System.Net.Sockets.SocketOptionName.AddMembership>параметров, <xref:System.Net.Sockets.SocketOptionName.DropMembership> и <xref:System.Net.Sockets.Socket> .</span><span class="sxs-lookup"><span data-stu-id="660fe-3496">Use this overload to set the <xref:System.Net.Sockets.SocketOptionName.Linger>, <xref:System.Net.Sockets.SocketOptionName.AddMembership>, and <xref:System.Net.Sockets.SocketOptionName.DropMembership><xref:System.Net.Sockets.Socket> options.</span></span> <span data-ttu-id="660fe-3497">Для параметра используйте <xref:System.Net.Sockets.Socket> для `optionLevel` параметра. <xref:System.Net.Sockets.SocketOptionName.Linger></span><span class="sxs-lookup"><span data-stu-id="660fe-3497">For the <xref:System.Net.Sockets.SocketOptionName.Linger> option, use <xref:System.Net.Sockets.Socket> for the `optionLevel` parameter.</span></span> <span data-ttu-id="660fe-3498">Для <xref:System.Net.Sockets.SocketOptionName.AddMembership> и <xref:System.Net.Sockets.SocketOptionName.DropMembership>используйте . <xref:System.Net.Sockets.SocketOptionLevel.IP></span><span class="sxs-lookup"><span data-stu-id="660fe-3498">For <xref:System.Net.Sockets.SocketOptionName.AddMembership> and <xref:System.Net.Sockets.SocketOptionName.DropMembership>, use <xref:System.Net.Sockets.SocketOptionLevel.IP>.</span></span> <span data-ttu-id="660fe-3499">Если вы хотите получить текущее значение любого из перечисленных выше параметров, используйте <xref:System.Net.Sockets.Socket.GetSocketOption%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="660fe-3499">If you want to get the current value of any of the options listed above, use the <xref:System.Net.Sockets.Socket.GetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3500">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3500">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3501">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3501">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3502">В следующем примере кода <xref:System.Net.Sockets.LingerOption> задаются <xref:System.Net.Sockets.Socket.Send%2A> значения и времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="660fe-3502">The following code example sets the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time out values.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#1)]
 [!code-csharp[Socket_Socket_Options#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#1)]
 [!code-vb[Socket_Socket_Options#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="660fe-3503"><paramref name="optionValue" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3503"><paramref name="optionValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3504">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3504">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3505"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3505">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown (System.Net.Sockets.SocketShutdown how);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown(valuetype System.Net.Sockets.SocketShutdown how) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown (how As SocketShutdown)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown(System::Net::Sockets::SocketShutdown how);" />
      <MemberSignature Language="F#" Value="member this.Shutdown : System.Net.Sockets.SocketShutdown -&gt; unit" Usage="socket.Shutdown how" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="how" Type="System.Net.Sockets.SocketShutdown" />
      </Parameters>
      <Docs>
        <param name="how"><span data-ttu-id="660fe-3506">Одно из значений <see cref="T:System.Net.Sockets.SocketShutdown" />, указывающее на то, что операция более не разрешена.</span><span class="sxs-lookup"><span data-stu-id="660fe-3506">One of the <see cref="T:System.Net.Sockets.SocketShutdown" /> values that specifies the operation that will no longer be allowed.</span></span></param>
        <summary><span data-ttu-id="660fe-3507">Блокирует передачу и получение данных для объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3507">Disables sends and receives on a <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3508">При использовании ориентированного <xref:System.Net.Sockets.Socket>на соединение <xref:System.Net.Sockets.Socket.Shutdown%2A> метода всегда вызывайте метод перед закрытием <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3508">When using a connection-oriented <xref:System.Net.Sockets.Socket>, always call the <xref:System.Net.Sockets.Socket.Shutdown%2A> method before closing the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-3509">Это гарантирует, что все данные отправляются и получаются на подключенном сокете до его закрытия.</span><span class="sxs-lookup"><span data-stu-id="660fe-3509">This ensures that all data is sent and received on the connected socket before it is closed.</span></span>  
  
 <span data-ttu-id="660fe-3510">Вызовите <xref:System.Net.Sockets.Socket>метод, чтобы освободить все управляемые и неуправляемые ресурсы, связанные с. <xref:System.Net.Sockets.Socket.Close%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3510">Call the <xref:System.Net.Sockets.Socket.Close%2A> method to free all managed and unmanaged resources associated with the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-3511">Не пытайтесь повторно использовать <xref:System.Net.Sockets.Socket> после закрытия.</span><span class="sxs-lookup"><span data-stu-id="660fe-3511">Do not attempt to reuse the <xref:System.Net.Sockets.Socket> after closing.</span></span>  
  
 <span data-ttu-id="660fe-3512">В следующей таблице приведены <xref:System.Net.Sockets.SocketShutdown> значения перечисления, которые являются допустимыми `how` для параметра.</span><span class="sxs-lookup"><span data-stu-id="660fe-3512">The following table shows the <xref:System.Net.Sockets.SocketShutdown> enumeration values that are valid for the `how` parameter.</span></span>  
  
|<span data-ttu-id="660fe-3513">Значение</span><span class="sxs-lookup"><span data-stu-id="660fe-3513">Value</span></span>|<span data-ttu-id="660fe-3514">Описание</span><span class="sxs-lookup"><span data-stu-id="660fe-3514">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="660fe-3515">Отправить</span><span class="sxs-lookup"><span data-stu-id="660fe-3515">Send</span></span>|<span data-ttu-id="660fe-3516">Отключите отправку <xref:System.Net.Sockets.Socket>на этом.</span><span class="sxs-lookup"><span data-stu-id="660fe-3516">Disable sending on this <xref:System.Net.Sockets.Socket>.</span></span>|  
|<span data-ttu-id="660fe-3517">Получить</span><span class="sxs-lookup"><span data-stu-id="660fe-3517">Receive</span></span>|<span data-ttu-id="660fe-3518">Отключите получение на этом <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3518">Disable receiving on this <xref:System.Net.Sockets.Socket>.</span></span>|  
|<span data-ttu-id="660fe-3519">Оба</span><span class="sxs-lookup"><span data-stu-id="660fe-3519">Both</span></span>|<span data-ttu-id="660fe-3520">Отключите отправку и получение для <xref:System.Net.Sockets.Socket>этого.</span><span class="sxs-lookup"><span data-stu-id="660fe-3520">Disable both sending and receiving on this <xref:System.Net.Sockets.Socket>.</span></span>|  
  
 <span data-ttu-id="660fe-3521">Значение  `how` , указывающее, что последующие вызовы не разрешены. <xref:System.Net.Sockets.SocketShutdown.Send>  <xref:System.Net.Sockets.Socket.Send%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3521">Setting `how` to <xref:System.Net.Sockets.SocketShutdown.Send> specifies that subsequent calls to <xref:System.Net.Sockets.Socket.Send%2A> are not allowed.</span></span> <span data-ttu-id="660fe-3522">Если используется соединение без подключения <xref:System.Net.Sockets.Socket>, то указание <xref:System.Net.Sockets.SocketShutdown.Send> не будет действовать.</span><span class="sxs-lookup"><span data-stu-id="660fe-3522">If you are using a connectionless <xref:System.Net.Sockets.Socket>, specifying <xref:System.Net.Sockets.SocketShutdown.Send> will have no effect.</span></span>  
  
 <span data-ttu-id="660fe-3523">Значение  `how` , указывающее, что последующие вызовы не разрешены. <xref:System.Net.Sockets.SocketShutdown.Receive>  <xref:System.Net.Sockets.Socket.Receive%2A></span><span class="sxs-lookup"><span data-stu-id="660fe-3523">Setting `how` to <xref:System.Net.Sockets.SocketShutdown.Receive> specifies that subsequent calls to <xref:System.Net.Sockets.Socket.Receive%2A> are not allowed.</span></span> <span data-ttu-id="660fe-3524">Это не влияет на более низкие уровни протокола.</span><span class="sxs-lookup"><span data-stu-id="660fe-3524">This has no effect on lower protocol layers.</span></span> <span data-ttu-id="660fe-3525">Если используется протокол, ориентированный на соединение, соединение будет разорвано, если после вызова метода выполнить <xref:System.Net.Sockets.Socket.Shutdown%2A> одно из следующих условий.</span><span class="sxs-lookup"><span data-stu-id="660fe-3525">If you are using a connection-oriented protocol, the connection is terminated if either of the following conditions exist after a call to <xref:System.Net.Sockets.Socket.Shutdown%2A> :</span></span>  
  
-   <span data-ttu-id="660fe-3526">Данные находятся в входящем сетевом буфере, ожидающем получения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3526">Data is in the incoming network buffer waiting to be received.</span></span>  
  
-   <span data-ttu-id="660fe-3527">Получены дополнительные данные.</span><span class="sxs-lookup"><span data-stu-id="660fe-3527">More data has arrived.</span></span>  
  
 <span data-ttu-id="660fe-3528">Если используется протокол без установления соединения, датаграммы принимаются и ставятся в очередь.</span><span class="sxs-lookup"><span data-stu-id="660fe-3528">If you are using a connectionless protocol, datagrams are accepted and queued.</span></span> <span data-ttu-id="660fe-3529">Однако если для дополнительных входящих датаграмм нет буферного пространства, они будут удалены, а отправителю не будет возвращено сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="660fe-3529">However, if no buffer space is available for additional incoming datagrams, they will be discarded and no error will be returned to the sender.</span></span> <span data-ttu-id="660fe-3530">Использовать <xref:System.Net.Sockets.Socket.Shutdown%2A> для <xref:System.Net.Sockets.Socket>  подключения не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="660fe-3530">Using <xref:System.Net.Sockets.Socket.Shutdown%2A> on a connectionless <xref:System.Net.Sockets.Socket> is not recommended.</span></span>  
  
 <span data-ttu-id="660fe-3531">Параметр `how` для <xref:System.Net.Sockets.SocketShutdown.Both>  отключения обеих операций отправки и получения, как описано выше.</span><span class="sxs-lookup"><span data-stu-id="660fe-3531">Setting `how` to <xref:System.Net.Sockets.SocketShutdown.Both> disables both sends and receives as described above.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3532">При получении сообщения <xref:System.Net.Sockets.SocketException> при <xref:System.Net.Sockets.Socket.Shutdown%2A> вызове метода используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3532">If you receive a <xref:System.Net.Sockets.SocketException> when calling the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3533">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3533">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="660fe-3534">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="660fe-3534">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="660fe-3535">Дополнительные сведения см. [в разделе Сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3535">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3536">В следующем примере кода используется <xref:System.Net.Sockets.Socket.Shutdown%2A> для <xref:System.Net.Sockets.Socket>отключения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3536">The following code example uses <xref:System.Net.Sockets.Socket.Shutdown%2A> to disable the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic Socket.Close Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Close Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3537">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3537">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3538"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3538">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
        <altmember cref="T:System.Net.Sockets.SocketShutdown" />
      </Docs>
    </Member>
    <Member MemberName="SocketType">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketType SocketType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketType SocketType" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SocketType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SocketType As SocketType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketType SocketType { System::Net::Sockets::SocketType get(); };" />
      <MemberSignature Language="F#" Value="member this.SocketType : System.Net.Sockets.SocketType" Usage="System.Net.Sockets.Socket.SocketType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-3539">Получает тип объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3539">Gets the type of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="660fe-3540">Одно из значений перечисления <see cref="T:System.Net.Sockets.SocketType" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3540">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3541"><xref:System.Net.Sockets.Socket.SocketType%2A>параметр доступен только для чтения и задается <xref:System.Net.Sockets.Socket> при создании.</span><span class="sxs-lookup"><span data-stu-id="660fe-3541"><xref:System.Net.Sockets.Socket.SocketType%2A> is read-only and is set when the <xref:System.Net.Sockets.Socket> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3542">В следующем примере кода в консоль <xref:System.Net.Sockets.AddressFamily>выводятся <xref:System.Net.Sockets.ProtocolType> , <xref:System.Net.Sockets.SocketType>и.</span><span class="sxs-lookup"><span data-stu-id="660fe-3542">The following code example displays the <xref:System.Net.Sockets.AddressFamily>, <xref:System.Net.Sockets.SocketType>, and <xref:System.Net.Sockets.ProtocolType> to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#3)]
 [!code-csharp[Socket_Socket_Options#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#3)]
 [!code-vb[Socket_Socket_Options#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.SocketType" />
      </Docs>
    </Member>
    <Member MemberName="SupportsIPv4">
      <MemberSignature Language="C#" Value="public static bool SupportsIPv4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SupportsIPv4" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SupportsIPv4" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SupportsIPv4 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SupportsIPv4 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIPv4 : bool" Usage="System.Net.Sockets.Socket.SupportsIPv4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use OSSupportsIPv4 instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("SupportsIPv4 is obsoleted for this type, please use OSSupportsIPv4 instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("SupportsIPv4 is obsoleted for this type, please use OSSupportsIPv4 instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-3543">Возвращает значение, указывающее, доступна ли на текущем узле поддержка протокола IPv4 и включена ли эта функция.</span><span class="sxs-lookup"><span data-stu-id="660fe-3543">Gets a value indicating whether IPv4 support is available and enabled on the current host.</span></span></summary>
        <value><span data-ttu-id="660fe-3544">Значение <see langword="true" />, если текущий узел поддерживает протокол IPv4; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3544"><see langword="true" /> if the current host supports the IPv4 protocol; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3545">Операционная система может поддерживать протоколы IPv4 и IPv6.</span><span class="sxs-lookup"><span data-stu-id="660fe-3545">The operating system may support both IPv4 and IPv6 protocols.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.SupportsIPv6" />
      </Docs>
    </Member>
    <Member MemberName="SupportsIPv6">
      <MemberSignature Language="C#" Value="public static bool SupportsIPv6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SupportsIPv6" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SupportsIPv6" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SupportsIPv6 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SupportsIPv6 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIPv6 : bool" Usage="System.Net.Sockets.Socket.SupportsIPv6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use OSSupportsIPv6 instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("SupportsIPv6 is obsoleted for this type, please use OSSupportsIPv6 instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("SupportsIPv6 is obsoleted for this type, please use OSSupportsIPv6 instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-3546">Получает значение, указывающее, поддерживает ли Framework протокол IPv6 для определенных устаревших членов <see cref="T:System.Net.Dns" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3546">Gets a value that indicates whether the Framework supports IPv6 for certain obsolete <see cref="T:System.Net.Dns" /> members.</span></span></summary>
        <value><span data-ttu-id="660fe-3547">Значение <see langword="true" />, если Framework поддерживает протокол IPv6 для определенных устаревших методов <see cref="T:System.Net.Dns" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3547"><see langword="true" /> if the Framework supports IPv6 for certain obsolete <see cref="T:System.Net.Dns" /> methods; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3548">Операционная система может поддерживать протоколы IPv4 и IPv6.</span><span class="sxs-lookup"><span data-stu-id="660fe-3548">The operating system may support both IPv4 and IPv6 protocols.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.OSSupportsIPv6" />
        <altmember cref="P:System.Net.Sockets.Socket.SupportsIPv4" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="660fe-3549">Освобождает все ресурсы, занятые модулем <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3549">Releases all resources used by the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="660fe-3550">Вызовите IDisposable. Dispose по завершении использования <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3550">Call IDisposable.Dispose when you are finished using the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-3551">Метод IDisposable. Dispose оставляет в непригодном для <xref:System.Net.Sockets.Socket> использования состоянии.</span><span class="sxs-lookup"><span data-stu-id="660fe-3551">The IDisposable.Dispose method leaves the <xref:System.Net.Sockets.Socket> in an unusable state.</span></span> <span data-ttu-id="660fe-3552">После вызова IDisposable. Dispose необходимо освободить все ссылки на, <xref:System.Net.Sockets.Socket> чтобы сборщик мусора мог высвободить память, занимаемую заданной. <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="660fe-3552">After calling IDisposable.Dispose, you must release all references to the <xref:System.Net.Sockets.Socket> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.Socket> was occupying.</span></span> <span data-ttu-id="660fe-3553">Дополнительные сведения см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="660fe-3553">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE] 
> <span data-ttu-id="660fe-3554">Всегда вызывайте IDisposable. Dispose перед освобождением последней ссылки <xref:System.Net.Sockets.Socket>на.</span><span class="sxs-lookup"><span data-stu-id="660fe-3554">Always call IDisposable.Dispose before you release your last reference to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="660fe-3555">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Net.Sockets.Socket> метод `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="660fe-3555">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.Socket> object's `Finalize` method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int16 with get, set" Usage="System.Net.Sockets.Socket.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-3556">Получает или задает значение, задающее время существования (TTL) IP-пакетов, отправленных объектом <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3556">Gets or sets a value that specifies the Time To Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="660fe-3557">Значение времени существования TTL.</span><span class="sxs-lookup"><span data-stu-id="660fe-3557">The TTL value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3558">Значение TTL указывает максимальное число маршрутизаторов, которые может пройти пакет, прежде чем маршрутизатор отклоняет пакет и сообщение об ошибке TTL (ICMP), полученное по истечении срока жизни, возвращается отправителю.</span><span class="sxs-lookup"><span data-stu-id="660fe-3558">The TTL value indicates the maximum number of routers the packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
 <span data-ttu-id="660fe-3559">Для значения TTL можно задать значение от 0 до 255.</span><span class="sxs-lookup"><span data-stu-id="660fe-3559">The TTL value may be set to a value from 0 to 255.</span></span> <span data-ttu-id="660fe-3560">Если это свойство не задано, значение TTL по умолчанию для сокета равно 32.</span><span class="sxs-lookup"><span data-stu-id="660fe-3560">When this property is not set, the default TTL value for a socket is 32.</span></span>  
  
 <span data-ttu-id="660fe-3561">Установка этого свойства для сокета TCP/IP пропускается стеком TCP/SSL, если установлено успешное соединение с помощью сокета.</span><span class="sxs-lookup"><span data-stu-id="660fe-3561">Setting this property on a Transmission Control Protocol (TCP) socket is ignored by the TCP/IP stack if a successful connection has been established using the socket.</span></span>  
  
 <span data-ttu-id="660fe-3562">Если вы получаете <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> используйте свойство для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3562">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="660fe-3563">После получения этого кода обратитесь к документации по [коду ошибки API Windows Sockets версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) для получения подробного описания ошибки.</span><span class="sxs-lookup"><span data-stu-id="660fe-3563">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="660fe-3564">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.Socket.Ttl%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="660fe-3564">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.Ttl%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="660fe-3565">В качестве величины срока жизни нельзя задать отрицательное число.</span><span class="sxs-lookup"><span data-stu-id="660fe-3565">The TTL value can't be set to a negative number.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="660fe-3566">Это свойство может быть установлено только для сокетов в семействах <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3566">This property can be set only for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="660fe-3567">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="660fe-3567">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="660fe-3568">Эта ошибка также возвращается при попытке задать срок жизни больше, чем 255.</span><span class="sxs-lookup"><span data-stu-id="660fe-3568">This error is also returned when an attempt was made to set TTL to a value higher than 255.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="660fe-3569"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="660fe-3569">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseOnlyOverlappedIO">
      <MemberSignature Language="C#" Value="public bool UseOnlyOverlappedIO { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOnlyOverlappedIO" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO" />
      <MemberSignature Language="VB.NET" Value="Public Property UseOnlyOverlappedIO As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOnlyOverlappedIO { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseOnlyOverlappedIO : bool with get, set" Usage="System.Net.Sockets.Socket.UseOnlyOverlappedIO" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("This doesn't do anything on Mono yet")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="660fe-3570">Указывает, должен ли сокет использовать только режим ввода-вывода Overlapped.</span><span class="sxs-lookup"><span data-stu-id="660fe-3570">Specifies whether the socket should only use Overlapped I/O mode.</span></span></summary>
        <value><span data-ttu-id="660fe-3571">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.Socket" /> использует только режим перекрывающего ввода-вывода; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3571"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> uses only overlapped I/O; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="660fe-3572">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="660fe-3572">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="660fe-3573">Задайте для этого свойства `true` значение, <xref:System.Net.Sockets.Socket> которое нужно вызвать <xref:System.Net.Sockets.Socket.DuplicateAndClose%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3573">Set this property to `true` for a <xref:System.Net.Sockets.Socket> you intend to call <xref:System.Net.Sockets.Socket.DuplicateAndClose%2A>.</span></span> <span data-ttu-id="660fe-3574">В противном случае платформа может назначить порту завершения сокету, что запрещает использование <xref:System.Net.Sockets.Socket.DuplicateAndClose%2A>.</span><span class="sxs-lookup"><span data-stu-id="660fe-3574">Otherwise, the Framework may assign a completion port to the socket, which would prohibit the use of <xref:System.Net.Sockets.Socket.DuplicateAndClose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="660fe-3575">Сокет привязан к порту завершения.</span><span class="sxs-lookup"><span data-stu-id="660fe-3575">The socket has been bound to a completion port.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
