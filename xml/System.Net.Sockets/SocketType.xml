<Type Name="SocketType" FullName="System.Net.Sockets.SocketType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22efa407a36a1d3b5f48d68462a6b232acfd6e7b" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75170455" /></Metadata><TypeSignature Language="C#" Value="public enum SocketType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SocketType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SocketType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SocketType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SocketType" />
  <TypeSignature Language="F#" Value="type SocketType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="09134-101">Указывает тип сокета, являющегося экземпляром класса <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="09134-101">Specifies the type of socket that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class represents.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09134-102">Прежде чем <xref:System.Net.Sockets.Socket> сможет отправлять и получать данные, сначала необходимо создать его с помощью <xref:System.Net.Sockets.AddressFamily>, <xref:System.Net.Sockets.SocketType>и <xref:System.Net.Sockets.ProtocolType>.</span><span class="sxs-lookup"><span data-stu-id="09134-102">Before a <xref:System.Net.Sockets.Socket> can send and receive data, it must first be created using an <xref:System.Net.Sockets.AddressFamily>, a <xref:System.Net.Sockets.SocketType>, and a <xref:System.Net.Sockets.ProtocolType>.</span></span> <span data-ttu-id="09134-103">Перечисление <xref:System.Net.Sockets.SocketType> предоставляет несколько параметров для определения типа <xref:System.Net.Sockets.Socket>, который вы хотите открыть.</span><span class="sxs-lookup"><span data-stu-id="09134-103">The <xref:System.Net.Sockets.SocketType> enumeration provides several options for defining the type of <xref:System.Net.Sockets.Socket> that you intend to open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09134-104">Иногда <xref:System.Net.Sockets.SocketType> неявно указывает, какая <xref:System.Net.Sockets.ProtocolType> используется в <xref:System.Net.Sockets.AddressFamily>.</span><span class="sxs-lookup"><span data-stu-id="09134-104"><xref:System.Net.Sockets.SocketType> sometimes implicitly indicates which <xref:System.Net.Sockets.ProtocolType> is used within an <xref:System.Net.Sockets.AddressFamily>.</span></span> <span data-ttu-id="09134-105">Например, если <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> <xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>, <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> всегда <xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="09134-105">For example, when the <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> is <xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>, the <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> is always <xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="09134-106">Если <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>, <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> всегда <xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="09134-106">When the <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> is <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>, the <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> is always <xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="09134-107">При попытке создать <xref:System.Net.Sockets.Socket> с несовместимой комбинацией <xref:System.Net.Sockets.Socket> создает <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="09134-107">If you try to create a <xref:System.Net.Sockets.Socket> with an incompatible combination, <xref:System.Net.Sockets.Socket> throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09134-108">В следующем примере используется <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType> в качестве параметра для конструктора <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="09134-108">The following example uses <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType> as a parameter to the <xref:System.Net.Sockets.Socket> constructor.</span></span>  
  
 [!code-cpp[SelectModeExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SelectModeExample/CPP/source.cpp#1)]
 [!code-csharp[SelectModeExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SelectModeExample/CS/source.cs#1)]
 [!code-vb[SelectModeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SelectModeExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.AddressFamily" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.Sockets.Socket" />
  </Docs>
  <Members>
    <Member MemberName="Dgram">
      <MemberSignature Language="C#" Value="Dgram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Dgram = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Dgram" />
      <MemberSignature Language="VB.NET" Value="Dgram" />
      <MemberSignature Language="C++ CLI" Value="Dgram" />
      <MemberSignature Language="F#" Value="Dgram = 2" Usage="System.Net.Sockets.SocketType.Dgram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09134-109">Поддерживает датаграммы — ненадежные сообщения с фиксированной (обычно малой) максимальной длиной, передаваемые без установления подключения.</span><span class="sxs-lookup"><span data-stu-id="09134-109">Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length.</span></span> <span data-ttu-id="09134-110">Возможны потеря и дублирование сообщений, а также их получение не в том порядке, в котором они отправлены.</span><span class="sxs-lookup"><span data-stu-id="09134-110">Messages might be lost or duplicated and might arrive out of order.</span></span> <span data-ttu-id="09134-111">Объект <see cref="T:System.Net.Sockets.Socket" /> типа <see cref="F:System.Net.Sockets.SocketType.Dgram" /> не требует установки подключения до приема и передачи данных и может обеспечивать связь со множеством одноранговых узлов.</span><span class="sxs-lookup"><span data-stu-id="09134-111">A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Dgram" /> requires no connection prior to sending and receiving data, and can communicate with multiple peers.</span></span> <span data-ttu-id="09134-112"><see cref="F:System.Net.Sockets.SocketType.Dgram" /> использует протокол Datagram (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) семейство адресов <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span><span class="sxs-lookup"><span data-stu-id="09134-112"><see cref="F:System.Net.Sockets.SocketType.Dgram" /> uses the Datagram Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) and the <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span></span> <span data-ttu-id="09134-113">.</span><span class="sxs-lookup"><span data-stu-id="09134-113">address family.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="Raw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Raw = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Raw" />
      <MemberSignature Language="VB.NET" Value="Raw" />
      <MemberSignature Language="C++ CLI" Value="Raw" />
      <MemberSignature Language="F#" Value="Raw = 3" Usage="System.Net.Sockets.SocketType.Raw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09134-114">Поддерживает доступ к основному транспортному протоколу.</span><span class="sxs-lookup"><span data-stu-id="09134-114">Supports access to the underlying transport protocol.</span></span> <span data-ttu-id="09134-115">Используя <see cref="F:System.Net.Sockets.SocketType.Raw" />, можно организовать связь с применением протоколов, таких как протокол ICMP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) и протокол IGMP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />).</span><span class="sxs-lookup"><span data-stu-id="09134-115">Using <see cref="F:System.Net.Sockets.SocketType.Raw" />, you can communicate using protocols like Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) and Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />).</span></span> <span data-ttu-id="09134-116">При передаче приложение должно обеспечивать полный IP-заголовок.</span><span class="sxs-lookup"><span data-stu-id="09134-116">Your application must provide a complete IP header when sending.</span></span> <span data-ttu-id="09134-117">Полученные датаграммы возвращаются с неизмененными IP-заголовком и параметрами.</span><span class="sxs-lookup"><span data-stu-id="09134-117">Received datagrams return with the IP header and options intact.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Rdm">
      <MemberSignature Language="C#" Value="Rdm" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Rdm = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Rdm" />
      <MemberSignature Language="VB.NET" Value="Rdm" />
      <MemberSignature Language="C++ CLI" Value="Rdm" />
      <MemberSignature Language="F#" Value="Rdm = 4" Usage="System.Net.Sockets.SocketType.Rdm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09134-118">Поддерживает ориентированную на сообщения связь без установления подключения с надежной доставкой сообщений и сохранением границ сообщений в данных.</span><span class="sxs-lookup"><span data-stu-id="09134-118">Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data.</span></span> <span data-ttu-id="09134-119">Сообщения RDM (Reliably-Delivered Messages — сообщения с надежной доставкой) принимаются без получения дубликатов и в порядке отправки.</span><span class="sxs-lookup"><span data-stu-id="09134-119">Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order.</span></span> <span data-ttu-id="09134-120">Кроме того, отправителю отправляется уведомление в случае потери сообщений.</span><span class="sxs-lookup"><span data-stu-id="09134-120">Furthermore, the sender is notified if messages are lost.</span></span> <span data-ttu-id="09134-121">Если инициализируется сокет <see cref="T:System.Net.Sockets.Socket" /> типа <see cref="F:System.Net.Sockets.SocketType.Rdm" />, нет необходимости в установлении подключения к удаленному узлу перед началом отправки или получения данных.</span><span class="sxs-lookup"><span data-stu-id="09134-121">If you initialize a <see cref="T:System.Net.Sockets.Socket" /> using <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you do not require a remote host connection before sending and receiving data.</span></span> <span data-ttu-id="09134-122">Используя тип <see cref="F:System.Net.Sockets.SocketType.Rdm" />, можно организовать связь со множеством узелов.</span><span class="sxs-lookup"><span data-stu-id="09134-122">With <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you can communicate with multiple peers.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Seqpacket">
      <MemberSignature Language="C#" Value="Seqpacket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Seqpacket = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Seqpacket" />
      <MemberSignature Language="VB.NET" Value="Seqpacket" />
      <MemberSignature Language="C++ CLI" Value="Seqpacket" />
      <MemberSignature Language="F#" Value="Seqpacket = 5" Usage="System.Net.Sockets.SocketType.Seqpacket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09134-123">Обеспечивает надежную двустороннюю передачу упорядоченных байтовых потоков через сеть в режиме с установлением подключения.</span><span class="sxs-lookup"><span data-stu-id="09134-123">Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network.</span></span> <span data-ttu-id="09134-124"><see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> не дублирует данные и сохраняет границы в потоке данных.</span><span class="sxs-lookup"><span data-stu-id="09134-124"><see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> does not duplicate data, and it preserves boundaries within the data stream.</span></span> <span data-ttu-id="09134-125">Объект <see cref="T:System.Net.Sockets.Socket" /> типа <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> взаимодействует с одним узелом и требует установления подключения к удаленному узлу перед началом передачи данных.</span><span class="sxs-lookup"><span data-stu-id="09134-125">A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> communicates with a single peer and requires a remote host connection before communication can begin.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="Stream" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Stream = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Stream" />
      <MemberSignature Language="VB.NET" Value="Stream" />
      <MemberSignature Language="C++ CLI" Value="Stream" />
      <MemberSignature Language="F#" Value="Stream = 1" Usage="System.Net.Sockets.SocketType.Stream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09134-126">Поддерживает надежные двусторонние байтовые потоки в режиме с установлением подключения, без дублирования данных и без сохранения границ данных.</span><span class="sxs-lookup"><span data-stu-id="09134-126">Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries.</span></span> <span data-ttu-id="09134-127">Объект <see cref="T:System.Net.Sockets.Socket" /> этого типа взаимодействует с одним узлом и требует установления подключения к удаленному узлу перед началом передачи данных.</span><span class="sxs-lookup"><span data-stu-id="09134-127">A <see cref="T:System.Net.Sockets.Socket" /> of this type communicates with a single peer and requires a remote host connection before communication can begin.</span></span> <span data-ttu-id="09134-128"><see cref="F:System.Net.Sockets.SocketType.Stream" /> использует протокол TCP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) и семейство адресов <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span><span class="sxs-lookup"><span data-stu-id="09134-128"><see cref="F:System.Net.Sockets.SocketType.Stream" /> uses the Transmission Control Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) and the <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span></span> <span data-ttu-id="09134-129">.</span><span class="sxs-lookup"><span data-stu-id="09134-129">address family.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Unknown = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = -1" Usage="System.Net.Sockets.SocketType.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="09134-130">Задает неизвестный тип <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="09134-130">Specifies an unknown <see cref="T:System.Net.Sockets.Socket" /> type.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
