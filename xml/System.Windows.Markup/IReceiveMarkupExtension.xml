<Type Name="IReceiveMarkupExtension" FullName="System.Windows.Markup.IReceiveMarkupExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1be50a1f268f655f1588f632e5e085aa22d40e44" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75176734" /></Metadata><TypeSignature Language="C#" Value="public interface IReceiveMarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReceiveMarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IReceiveMarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReceiveMarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReceiveMarkupExtension" />
  <TypeSignature Language="F#" Value="type IReceiveMarkupExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Obsolete("IReceiveMarkupExtension has been deprecated. This interface is no longer in use.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4bcbe-101">Предоставляет механизм, с помощью которого типы могут объявлять, что они могут получать выражение (или другой класс) из расширения разметки, где выводом является другой тип свойства, а не целевое свойство.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-101">Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.</span></span> <span data-ttu-id="4bcbe-102">Не следует использовать для реализаций .NET Framework 4.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-102">Do not use for .NET Framework 4 implementations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bcbe-103">В [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]<xref:System.Windows.Markup.IReceiveMarkupExtension> является методом, характерным для WPF, чтобы разрешить типам вводить различные коду каждый раз, когда любой из его членов, доступных в XAML, задается в качестве расширений разметки во время синтаксического анализа XAML.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-103">In [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], <xref:System.Windows.Markup.IReceiveMarkupExtension> was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing.</span></span> <span data-ttu-id="4bcbe-104">В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]этот интерфейс является устаревшим и заменяется реализацией .NET Framework служб XAML для того, как расширения разметки могут получить службы или типы, которые могут вызывать логику метода задания, зависящего от расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-104">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.</span></span>  
  
 <span data-ttu-id="4bcbe-105">Для [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]ных реализаций, если типы хотят выполнять специальную обработку при задании свойств с помощью расширения разметки, а не других средств, типы должны быть определены с применением атрибутов <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-105">For [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributes applied.</span></span> <span data-ttu-id="4bcbe-106">Атрибут задает обратный вызов, который обычно определяется как частный член типа.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-106">The attribute specifies a callback, which is typically defined as a private member of the type.</span></span>  
  
 <span data-ttu-id="4bcbe-107">В реализациях инфраструктуры классов WPF в большинстве случаев, когда <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> применяется ссылка на метод `ReceiveMarkupExtension`, который ранее реализовал этот интерфейс, вместо этого следует использовать контекст через обратный вызов.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-107">In infrastructure implementations of WPF classes, most cases where <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> is applied reference a `ReceiveMarkupExtension` method that previously implemented this interface, but now instead use context through the callback.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="4bcbe-108">Преобразователи типов или расширения разметки для XAML</span><span class="sxs-lookup"><span data-stu-id="4bcbe-108">Type Converters or Markup Extensions for XAML</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public void ReceiveMarkupExtension (string property, System.Windows.Markup.MarkupExtension markupExtension, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveMarkupExtension(string property, class System.Windows.Markup.MarkupExtension markupExtension, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveMarkupExtension(System::String ^ property, System::Windows::Markup::MarkupExtension ^ markupExtension, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveMarkupExtension : string * System.Windows.Markup.MarkupExtension * IServiceProvider -&gt; unit" Usage="iReceiveMarkupExtension.ReceiveMarkupExtension (property, markupExtension, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="markupExtension" Type="System.Windows.Markup.MarkupExtension" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="4bcbe-109">Имя целевого свойства.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-109">The name of the target property.</span></span></param>
        <param name="markupExtension"><span data-ttu-id="4bcbe-110">Экземпляр расширения разметки входящих данных.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-110">The markup extension instance of the incoming data.</span></span></param>
        <param name="serviceProvider"><span data-ttu-id="4bcbe-111">Может предоставлять дополнительные службы, которые должны выполняться во время обработки данных расширения разметки для значения свойства.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-111">Can provide additional services that should be performed when processing the markup extension data for a property value.</span></span></param>
        <summary><span data-ttu-id="4bcbe-112">Предоставляет обработку расширений разметки, которые обеспечивают значения свойств.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-112">Provides the handling for markup extensions that provide property values.</span></span> <span data-ttu-id="4bcbe-113">Не следует использовать для реализаций [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]; см. <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</span><span class="sxs-lookup"><span data-stu-id="4bcbe-113">Do not use for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementations; see <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
