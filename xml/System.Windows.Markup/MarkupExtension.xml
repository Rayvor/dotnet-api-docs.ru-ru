<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="350e330a188843e9e2523e679820809d65a5e7d1" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70639136" /></Metadata><TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет базовый класс для реализаций расширений разметки XAML, который может поддерживаться службами XAML платформы .NET Framework и другими средствами чтения и записи XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширения разметки возвращают объекты вызывающим объектам на основе входных значений строковых атрибутов или элементов разметки в XAML. Расширения разметки возвращают объекты более сложным способом, чем могут быть выполнены только преобразователи типов. Средство записи объектов XAML вызывает преобразователь типов, так как с типом или членом связана реализация преобразователя типов. Из фрейма ссылки CLR это означает, что тип или член является <xref:System.ComponentModel.TypeConverterAttribute> атрибутом. С точки зрения системы типов XAML это означает, что тип XAML или член XAML имеет значение для его `TypeConverter` свойства. Вызов преобразователя типов связан с определением типа или свойства и всегда вызывается обработкой XAML для этих случаев. Расширение разметки, напротив, — это больше, чем управление кодом пользователя и разметкой, созданной пользователем, и может применяться каждый раз, когда сценарий приложения требует его. Расширение разметки может быть вызвано и может использоваться для установки различных значений членов типа, если тип возвращаемого значения расширения разметки назначается этому значению.  
  
 Сведения о создании пользовательского расширения разметки см. в <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>разделе. Дополнительные сведения о расширениях разметки см. в разделе [Общие сведения о расширениях разметки для XAML](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md). Если вы создаете на платформе WPF и используете или создаете расширения разметки для XAML, другие важные сведения можно найти в разделе [расширения разметки и XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
 Метод каждой реализации расширения разметки может <xref:System.IServiceProvider> использовать во время выполнения, который может предоставить контекст. <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> Затем выполняется запрос для конкретных служб, которые передают сведения, <xref:System.Windows.Markup.IProvideValueTarget> например или  <xref:System.Windows.Markup.IXamlTypeResolver> .  <xref:System.IServiceProvider> Дополнительные сведения о контекстах службы для расширения разметки см. в разделе [контексты служб, доступные для преобразователей типов и расширений разметки](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Производные классы должны иметь атрибут <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> , чтобы информировать потребителей о наиболее конкретном возвращаемом типе, доступном из <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> реализации расширения разметки.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Преобразователи типов или расширения разметки для XAML</related>
    <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">Общие сведения о расширениях разметки для XAML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса, производного от класса <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.MarkupExtension> Абстрактный класс не содержит закрытых значений, требующих инициализации.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Функциональное расширение разметки должно определять собственный открытый конструктор без параметров. Кроме того, расширение разметки должно реализовывать конструкторы, подходящие для предполагаемых возможностей расширения и использования разметки. Дополнительные сведения см. в статье [Общие сведения о расширениях разметки для XAML](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para></block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Вспомогательный объект поставщика служб, способный предоставлять службы для расширения разметки.</param>
        <summary>При реализации в производном классе возвращает объект, предоставляемый как значение целевого свойства для данного расширения разметки.</summary>
        <returns>Значение объекта, которое необходимо присвоить свойству, где применяется расширение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда обработчик XAML обрабатывает узел типа и значение элемента, которое является расширением разметки, оно вызывает <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> метод этого расширения разметки и записывает результат в граф объекта или поток сериализации. Модуль записи объектов XAML передает контекст службы каждой такой реализации через `serviceProvider` параметр.  
  
 Дополнительные сведения о реализации <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> в пользовательском расширении разметки см. в разделе "Примечания для реализации".  
  
## <a name="wpf-usage-notes"></a>Примечания об использовании WPF  
  
> [!IMPORTANT]
>  Классы WPF, имеющие определенные взаимодействия с операциями наборов разметки, не <xref:System.Windows.Markup.IReceiveMarkupExtension> должны полагаться на [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] реализацию. Вместо <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>этого используйте обратные вызовы с атрибутами.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Стандартные службы, возвращаемые поставщиком услуг по умолчанию, которые обычно доступны для пользовательской или <see cref="T:System.Windows.Markup.MarkupExtension" /> существующей реализации, включают следующие основные службы.  
  
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" />сообщает ссылку на объект и идентификатор свойства из контекста, в котором используется расширение разметки. 
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" />предоставляет службу, которая параллельно использует общее поведение при написании объектов XAML, которое <see cref="T:System.Type" /> может предоставляться на основе имени типа XAML. При необходимости имя может содержать префикс для сопоставленного пространства имен XAML.  
  
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" />предоставляет контекст активной схемы XAML напрямую. Из отчета <see cref="T:System.Xaml.XamlSchemaContext" />можно получить сведения о контексте схемы XAML, например о том, как сборки сопоставляются для поддержки типов, предпочитаемый префикс в сборках, <see cref="T:System.Xaml.XamlType" /> списки каждого из сборок и т. д.  
  
Другие службы, доступные для более специализированных сценариев расширения разметки, включают: 
    -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" />  
  
Потенциально реализации <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> могут <paramref name="serviceProvider" /> игнорировать параметр. Это допустимо для некоторых базовых сценариев, где для возвращения значения не требуется никакой контекст.  
  
В типичном использовании службы .NET Framework XAML и реализованные средства записи объектов XAML предоставляют поставщику услуг для всех методов преобразователя значений, которые вызываются во время обработки XAML. Однако для обеспечения надежности необходимо предоставить пути кода для значений NULL как для самого поставщика услуг, так и для любой запрошенной службы. Значения NULL могут возникать, если расширение разметки применяется в ситуации, когда стандартная поддержка служб, предоставляемая инфраструктурой обработчика XAML, недоступна.  
  
Дополнительные сведения о доступных службах из контекста поставщика службы XAML и об их использовании см. в разделе [преобразователи типов и расширения разметки для XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  
  
Реализации, требующие доступности определенной службы для получения полезного <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> результата, должны вызывать исключения, если эта служба недоступна. Рекомендуемое исключение для вызова — <see cref="T:System.InvalidOperationException" />.  
  
Реализация также может создавать исключения, если один из аргументов, необходимых пользовательскому расширению разметки для предоставления значения, имеет значение null, является недопустимым для его типа данных или не содержит значение, которое может обработать расширение разметки. Рекомендуемое исключение для вызова — <see cref="T:System.InvalidOperationException" />.</para></block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Преобразователи типов или расширения разметки для XAML</related>
        <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">Общие сведения о расширениях разметки для XAML</related>
      </Docs>
    </Member>
  </Members>
</Type>
