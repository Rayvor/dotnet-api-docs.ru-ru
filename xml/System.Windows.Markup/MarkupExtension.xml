<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75d64eadc8c8a7ff37614e48328e248ee57a6b9f" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64994612" /></Metadata><TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет базовый класс для реализаций расширений разметки XAML, которые могут поддерживаться службами XAML платформы .NET Framework и другими средствами чтения и записи XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширения разметки возвращают объекты для вызывающих объектов, на основе входных строковых значений атрибутов или элементов разметки в XAML. Расширения разметки возвращают объекты в более сложных, как можно выполнить только преобразователей типов. Средство записи объектов XAML вызывает преобразователь типов, так как тип или член имеет связанные с ним реализация преобразователя типов. Из среды CLR отсчета, это означает, что тип или член является <xref:System.ComponentModel.TypeConverterAttribute> с атрибутами. С точки зрения системы типов XAML, это означает, что тип XAML или XAML члена имеет значение для его `TypeConverter` свойство. Вызов преобразователя типов привязан к определению типа или свойства и всегда вызывается обработки в этих случаях XAML. Напротив расширение разметки дополнительные под контролем пользовательского кода и разметки, созданной пользователем и могут применяться каждый раз, когда это требуется сценарий приложения. Расширение разметки может вызываться и может использоваться для настройки различных члена типа значения, до тех пор, пока тип возвращаемого значения для расширения разметки может быть назначен этому значению.  
  
 Сведения о создании пользовательского расширения разметки, см. в разделе <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>. Дополнительные сведения о расширениях разметки в целом см. в разделе [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md). Если вы создаете в WPF и использование или Создание расширений разметки для XAML, другие важные сведения можно найти в разделе [расширения разметки и XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> Можно использовать метод каждой реализации расширения разметки <xref:System.IServiceProvider> во время выполнения, которая может предоставить контекст. Это <xref:System.IServiceProvider> затем запрашивается для определенных служб, которые передают сведения, такие как <xref:System.Windows.Markup.IProvideValueTarget> или <xref:System.Windows.Markup.IXamlTypeResolver>. Дополнительные сведения о контекстах служб для расширения разметки, см. в разделе [служебные контексты, доступные для расширений разметки и преобразователей типов](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Производные классы должны быть снабжены атрибутом <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> для информирования пользователей наиболее определенный возвращаемый тип, доступных из расширения разметки <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> реализации.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Преобразователи типов или расширения разметки для XAML</related>
    <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">Общие сведения о расширениях разметки для XAML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса, производного от <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.MarkupExtension> Абстрактный класс не содержит значения частного, требующих инициализации.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Расширение функциональности разметки следует определить свой собственный открытый конструктор по умолчанию. Кроме того расширения разметки следует реализовать конструкторы, которые подходят для предполагаемых возможностей расширения и разметки. Дополнительные сведения см. в разделе [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para></block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Вспомогательный объект поставщика служб, способный предоставлять службы для расширения разметки.</param>
        <summary>При реализации в производном классе возвращает объект, предоставляемый как значение целевого свойства для данного расширения разметки.</summary>
        <returns>Значение объекта, которое необходимо присвоить свойству, где применяется расширение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда обработчик XAML обрабатывает значение узла и член типа, является расширением разметки, он вызывает <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> метод этого расширения разметки и записывает результат в поток graph или сериализации объекта. Средство записи объектов XAML передает контекст службы для каждой такой реализации через `serviceProvider` параметра.  
  
 См. раздел «Примечания для разработчиков» Дополнительные сведения о том, как реализовать <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> в пользовательское расширение разметки.  
  
## <a name="wpf-usage-notes"></a>Примечания об использовании WPF  
  
> [!IMPORTANT]
>  WPF классы, которые имеют определенные взаимодействия с множествами разметки не следует полагаться на <xref:System.Windows.Markup.IReceiveMarkupExtension> для [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] реализации. Используйте <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-вместо этого обратные вызовы с атрибутами.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Общие службы, возвращенных поставщиком службы по умолчанию, обычно для пользовательской или существующей <see cref="T:System.Windows.Markup.MarkupExtension" /> реализации включают следующие основные службы.  
  
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> ссылка на объект и идентификатор свойства из контекста, в которых используется расширение разметки 
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> предоставляет службу, которая соответствует записи поведение, которое может предоставить общие объектов XAML <see cref="T:System.Type" /> на основе имени типа XAML. При необходимости, имя может включать префикс для сопоставленного пространства имен XAML.  
  
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> предоставляет контекст активной схемы XAML напрямую. Из отчета <see cref="T:System.Xaml.XamlSchemaContext" />, можно получить XAML сведения о контексте схемы таких как сборки, сопоставленных для поддержки типа, предпочтительный префикс в сборках, перечислены каждого <see cref="T:System.Xaml.XamlType" /> в сборку и т. д.  
  
-Включить другими службами, доступными для более специализированных сценариев расширения разметки: 
    -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" />  
  
Потенциально, реализации <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> можно игнорировать <paramref name="serviceProvider" /> параметра. Это применяется для некоторых основных сценариев, где отсутствует контекст вообще не требуется для возврата значения.  
  
В обычном режиме служб XAML .NET Framework и реализованного XAML объекта, модули записи будет предоставлять поставщика услуг всем методам преобразователя значений, которые вызываются во время XAML обработки. Тем не менее для надежности, необходимо предоставить пути кода для значений null как для поставщика услуг, так и для любой запрошенной службы. Значения NULL могут возникнуть, если расширение разметки применяется в обстоятельствах где обычной службы поддержки, обеспечиваемой инфраструктуру процессор XAML недоступен.  
  
Дополнительные сведения о доступных служб из контекста поставщика службы XAML и их использовании см. в разделе [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  
  
Реализации, которым требуется определенная служба доступна для создания полезной <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> результата должны вызывать исключения, если эта служба не будет доступна. Рекомендуемые создаваемое исключение является <see cref="T:System.InvalidOperationException" />.  
  
Реализация также может вызывать исключения, если один из аргументов, необходимые для пользовательского расширения разметки для предоставления значение равно null, является недопустимым для типа данных, или не содержит значения, что расширение разметки для обработки. Рекомендуемые создаваемое исключение является <see cref="T:System.InvalidOperationException" />.</para></block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Преобразователи типов или расширения разметки для XAML</related>
        <related type="Article" href="https://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">Общие сведения о расширениях разметки для XAML</related>
      </Docs>
    </Member>
  </Members>
</Type>