<Type Name="InternalTypeHelper" FullName="System.Windows.Markup.InternalTypeHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f36a57a490557ba6f904a37c445bbefd91da220d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69167300" /></Metadata><TypeSignature Language="C#" Value="public abstract class InternalTypeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InternalTypeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.InternalTypeHelper" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InternalTypeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalTypeHelper abstract" />
  <TypeSignature Language="F#" Value="type InternalTypeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0cb1b-101">Абстрактный класс, внутренне используемый компилятором WPF XAML для поддержки использования внутренних типов.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-101">Abstract class used internally by the WPF XAML compiler to support the use of internal types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb1b-102"><xref:System.Windows.Markup.InternalTypeHelper> Класс не предназначен для использования каким-либо другим компилятором разметки XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-102">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 <span data-ttu-id="0cb1b-103">При компиляции XAML-файла можно использовать открытые типы, но можно также использовать внутренние типы в отношении тех же ограничений, которые существуют при доступе кода к внутренним типам.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-103">When compiling a XAML file, you can use public types, but you can also use internal types subject to the same limitations that exist on code access to internal types.</span></span> <span data-ttu-id="0cb1b-104"><xref:System.Windows.Markup.InternalTypeHelper>включает поддержку внутренних типов уровней доступа для разметки.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-104"><xref:System.Windows.Markup.InternalTypeHelper> enables support of internal access level types for markup.</span></span> <span data-ttu-id="0cb1b-105">Это включает компилятор, создающий созданный класс, производный от <xref:System.Windows.Markup.InternalTypeHelper> и реализующий его члены.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-105">This involves the compiler creating a generated class that derives from <xref:System.Windows.Markup.InternalTypeHelper> and implements its members.</span></span> <span data-ttu-id="0cb1b-106">Созданный класс существует в контексте безопасности и доступа, так что только та же сборка или другие сборки, специально относящиеся к общему внутреннему доступу, могут ссылаться на созданный класс и, таким образом, внутренние типы.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-106">The generated class exists in a security and access context such that only the same assembly or other assemblies specifically attributed for shared internal access can reference the generated class and thus the internal types.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/544296d4-f38e-4498-af49-c9f4dad28964"><span data-ttu-id="0cb1b-107">Соображения безопасности XAML</span><span class="sxs-lookup"><span data-stu-id="0cb1b-107">XAML Security Considerations</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InternalTypeHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InternalTypeHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cb1b-108">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-108">Initializes a new instance of the <see cref="T:System.Windows.Markup.InternalTypeHelper" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="protected internal abstract void AddEventHandler (System.Reflection.EventInfo eventInfo, object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddEventHandler(class System.Reflection.EventInfo eventInfo, object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void AddEventHandler(System::Reflection::EventInfo ^ eventInfo, System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddEventHandler : System.Reflection.EventInfo * obj * Delegate -&gt; unit" Usage="internalTypeHelper.AddEventHandler (eventInfo, target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="0cb1b-109">Информация о событии (информация об отражении CLR).</span><span class="sxs-lookup"><span data-stu-id="0cb1b-109">The event information for the event (CLR reflection information).</span></span></param>
        <param name="target"><span data-ttu-id="0cb1b-110">Целевой объект, к которому присоединен обработчик.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-110">The target where the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="0cb1b-111">Обработчик событий.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-111">The event handler.</span></span></param>
        <summary><span data-ttu-id="0cb1b-112">При переопределении в производном (созданном) классе присоединяет делегат обработчика событий к внутреннему событию.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-112">When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb1b-113"><xref:System.Windows.Markup.InternalTypeHelper> Класс не предназначен для использования каким-либо другим компилятором разметки XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-113">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="protected internal abstract Delegate CreateDelegate (Type delegateType, object target, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Delegate CreateDelegate(class System.Type delegateType, object target, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function CreateDelegate (delegateType As Type, target As Object, handler As String) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract Delegate ^ CreateDelegate(Type ^ delegateType, System::Object ^ target, System::String ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member CreateDelegate : Type * obj * string -&gt; Delegate" Usage="internalTypeHelper.CreateDelegate (delegateType, target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="0cb1b-114">Делегат класса <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-114">The <see cref="T:System.Type" /> of the delegate.</span></span></param>
        <param name="target"><span data-ttu-id="0cb1b-115">Целевой объект, к которому присоединен обработчик.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-115">The target where the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="0cb1b-116">Имя обработчика реализации.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-116">The name of the handler implementation.</span></span></param>
        <summary><span data-ttu-id="0cb1b-117">При переопределении в производном (созданном) классе создает делегат события для метода-обработчика, не являющегося открытым.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-117">When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.</span></span></summary>
        <returns><span data-ttu-id="0cb1b-118">Ссылка делегата.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-118">The delegate reference.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb1b-119"><xref:System.Windows.Markup.InternalTypeHelper> Класс не предназначен для использования каким-либо другим компилятором разметки XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-119">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal abstract object CreateInstance (Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ CreateInstance(Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Globalization.CultureInfo -&gt; obj" Usage="internalTypeHelper.CreateInstance (type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0cb1b-120">Создаваемый тип <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-120">The <see cref="T:System.Type" /> to create.</span></span></param>
        <param name="culture"><span data-ttu-id="0cb1b-121">Сведения, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-121">Culture specific information.</span></span></param>
        <summary><span data-ttu-id="0cb1b-122">При переопределении в производном (созданном) классе создает экземпляр внутреннего типа.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-122">When overridden in a derived (generated) class, creates an instance of an internal type.</span></span></summary>
        <returns><span data-ttu-id="0cb1b-123">Созданный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-123">The created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb1b-124"><xref:System.Windows.Markup.InternalTypeHelper> Класс не предназначен для использования каким-либо другим компилятором разметки XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-124">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract object GetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ GetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : System.Reflection.PropertyInfo * obj * System.Globalization.CultureInfo -&gt; obj" Usage="internalTypeHelper.GetPropertyValue (propertyInfo, target, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="0cb1b-125">Информация о получаемом свойстве.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-125">Property information for the property to get.</span></span></param>
        <param name="target"><span data-ttu-id="0cb1b-126">Объект, обладающий желаемым значением свойства.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-126">The object that holds the desired property value.</span></span></param>
        <param name="culture"><span data-ttu-id="0cb1b-127">Сведения, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-127">Culture specific information.</span></span></param>
        <summary><span data-ttu-id="0cb1b-128">При переопределении в производном (созданном) классе получает значение внутреннего свойства целевого объекта</span><span class="sxs-lookup"><span data-stu-id="0cb1b-128">When overridden in a derived (generated) class, gets the value of an internal property on the target object</span></span></summary>
        <returns><span data-ttu-id="0cb1b-129">Значение свойства.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-129">The value of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb1b-130"><xref:System.Windows.Markup.InternalTypeHelper> Класс не предназначен для использования каким-либо другим компилятором разметки XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-130">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract void SetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValue : System.Reflection.PropertyInfo * obj * obj * System.Globalization.CultureInfo -&gt; unit" Usage="internalTypeHelper.SetPropertyValue (propertyInfo, target, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="0cb1b-131">Информация задаваемого свойства.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-131">Property information for the property to set.</span></span></param>
        <param name="target"><span data-ttu-id="0cb1b-132">Объект, обладающий желаемым значением свойства.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-132">The object that holds the desired property value.</span></span></param>
        <param name="value"><span data-ttu-id="0cb1b-133">Задаваемое значение.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-133">The value to set.</span></span></param>
        <param name="culture"><span data-ttu-id="0cb1b-134">Сведения, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-134">Culture specific information.</span></span></param>
        <summary><span data-ttu-id="0cb1b-135">При переопределении в производном (созданном) классе задает значение внутреннего свойства целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-135">When overridden in a derived (generated) class, sets the value on an internal property on the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb1b-136"><xref:System.Windows.Markup.InternalTypeHelper> Класс не предназначен для использования каким-либо другим компилятором разметки XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="0cb1b-136">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
