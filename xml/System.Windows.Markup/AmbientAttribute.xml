<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baa263074eed8e44641b6e694586499e323d9183" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004507" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что свойство или тип должны обрабатываться как свойство или тип окружения. Концепция окружения относится к тому, как обработчики XAML определяют владельцев типов членов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Внешнее свойство является свойством, где значение должно быть доступным в контексте средства синтаксического анализа при создании графа объекта, но поиск типичного члена типа откладывается в целях немедленного создания набора узлов XAML. Существует два основных сценария Концепция окружения:  
  
-   Некоторые другие свойства одного объекта влияет и определяет, как должна работать которые ищут свойство объекта.  
  
-   Свойство представляет механизм большей задержки и возможности окружающей среды для поиска значения элемента распространяется на все объекты, содержащиеся в текущем объекте.  
  
 Этот атрибут может применяться к определенным свойствам, которые содержат контейнеры, которые позволяют поведение подстановки внешнее свойство или могут применяться к классу, чтобы разрешить внешнее свойство поведение во всех случаях этого типа значения для свойства.  
  
 <xref:System.Windows.Markup.AmbientAttribute> могут также применяться к методу среды CLR, для поддержки с атрибутами присоединяемое свойство XAML как внешнего. Это потенциально необходимо, так как в реализации CLR XAML присоединенное свойство реализовано/представлен для отражения, как шаблон методов доступа с `get` и `set` методы. Существует Фактическое свойство CLR к атрибуту, поэтому ограничение использования для <xref:System.AttributeTargets> для `Property` не позволило бы указания присоединяемого члена как внешнего. Присоединяемого члена, который вы хотите получать отчеты как свойство окружения, атрибут `get` метода доступа. Не следует пытаться методы атрибутов, которые не являются специальными методами поддержки присоединяемых членов.  
  
 В предыдущих версиях .NET Framework этот класс существовали в сборке WindowsBase относящихся к WPF. В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> находится в сборке System.Xaml. Для получения дополнительной информации см. [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 Внешних типов (типов where <xref:System.Windows.Markup.AmbientAttribute> применяется на уровне типа) может использоваться для обработки определенных XAML ситуаций, в которых тип свойства должен разрешаться не по порядку.  
  
## <a name="object-writer-scenarios"></a>Сценариев средства записи объектов  
 Если вы определяете средство записи объектов XAML, и возникают свойства, метода или типа где <xref:System.Windows.Markup.AmbientAttribute> — применяется, обычно следует подключиться к службе, чтобы определить поведение подстановки предполагаемого свойства окружения, необходимое для записи объектов. Дополнительные сведения см. в разделе <xref:System.Xaml.IAmbientProvider>.  
  
## <a name="value-converters"></a>Преобразователи значений  
 Преобразователи типов или расширения разметки следует знать внешние сведения для обработки свойств, представляющих сопоставления косвенных типов, таких как свойства, определяющие элементы или типы по именам строк с или без уточнения. В этом случае <xref:System.Windows.Markup.AmbientAttribute> не предназначен для использования непосредственно для логики кода преобразователь значения. Вместо этого преобразователя значений следует полагаться на поведение обработки модуля записи XAML, который передает <xref:System.Xaml.IAmbientProvider> в его служебные контексты, в методы преобразователя значения при вызове.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>Сценарии WPF для AmbientAttribute  
  
-   Свойство <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) можно уточнить имя необходимое свойство результатов поиска, которые необходимы для поиска ссылок резервного для имен свойств в <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> значения.  
  
-   Все содержимое внутри `Resources` свойства (элементы <xref:System.Windows.ResourceDictionary>) а также содержимое шаблона, должен иметь возможность доступа к другие одноранговые узлы как значения. Объявление всего `Resources` свойство как внешнего вызывает логику, которая позволяет это в средстве синтаксического анализа XAML WPF.  
  
 См. в разделе <xref:System.Windows.ResourceDictionary> пример сценария для параметра <xref:System.Windows.Markup.AmbientAttribute> на уровне типа.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">Атрибуты среды CLR, связанные с XAML для пользовательских типов и библиотек</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">Определение пользовательских типов для использования со службами XAML .NET Framework</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">Концептуальная документация по службам XAML NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>