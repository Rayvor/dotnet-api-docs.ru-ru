<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ef06ba6a6917bfcac9b7286dc147a92adbad2d8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69167774" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что свойство или тип должны обрабатываться как свойство окружения. Концепция окружения относится к тому, как обработчики XAML определяют владельцев типов членов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Внешнее свойство — это свойство, в котором значение должно быть доступно в контексте средства синтаксического анализа при создании графа объекта, но если типичный Поиск члена типа приостанавливается в целях непосредственного создания набора узлов XAML. Существует два основных сценария для внешнего понятия:  
  
-   Другое свойство того же объекта влияет и на то, как должен работать Уточняющий запрос свойства объекта.  
  
-   Свойство представляет более крупный механизм отсрочки, а внешние возможности для поиска значения элемента расширяются на все объекты, содержащиеся в текущем объекте.  
  
 Этот атрибут может применяться к конкретным свойствам, которые имеют ожидаемые контейнеры, которые обеспечивают поведение поиска внешнего свойства, или могут применяться к классу для включения поведения свойства окружения во всех случаях этого типа значения для свойства.  
  
 <xref:System.Windows.Markup.AmbientAttribute>также может применяться к методу CLR для поддержки присвоения имени присоединяемому свойству XAML как окружения. Это потенциально необходимо, поскольку в реализации CLR вложенное свойство XAML реализуется или представляется отражением как шаблон метода доступа с `get` методами и `set` . Отсутствует фактическое свойство CLR для атрибута, поэтому ограниченное использование для <xref:System.AttributeTargets> до `Property` не позволило бы указывать присоединяемый член в качестве внешнего. Для присоединяемого члена, который необходимо сообщить как внешний, атрибут `get` метода доступа. Не следует пытаться применить к методам атрибуты, которые не поддерживают методы присоединяемых членов.  
  
 В предыдущих версиях .NET Framework этот класс существовал в сборке, относящейся к WPF, WindowsBase. В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]параметрнаходитсявсборкеSystem .XAML.<xref:System.Windows.Markup.AmbientAttribute> Для получения дополнительной информации см. [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 Внешние типы (типы, <xref:System.Windows.Markup.AmbientAttribute> где применяется на уровне типа) могут использоваться для определенных ситуаций обработки XAML, когда тип свойства необходимо разрешить в неопределенном порядке.  
  
## <a name="object-writer-scenarios"></a>Сценарии модуля записи объектов  
 При определении средства записи объектов XAML и при возникновении свойства, метода или типа, где <xref:System.Windows.Markup.AmbientAttribute> применяется, обычно требуется доступ к службе, чтобы определить предполагаемое поведение внешнего поиска свойства, необходимое для записи объектов. Для получения дополнительной информации см. <xref:System.Xaml.IAmbientProvider>.  
  
## <a name="value-converters"></a>Преобразователи значений  
 Преобразователям типов или расширениям разметки может потребоваться знать сведения о окружающей среды, чтобы обрабатывать свойства, представляющие косвенные сопоставления типов, такие как свойства, указывающие элементы или типы, по именам строк с квалификатором или без него. В этом сценарии <xref:System.Windows.Markup.AmbientAttribute> не предназначен для непосредственного использования в логике кода преобразователя значений. Вместо этого преобразователь значений должен полагаться на поведение обработки средства записи XAML, которое <xref:System.Xaml.IAmbientProvider> передает свои контексты обслуживания методам преобразователя значений при вызове.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>Сценарии WPF для Амбиентаттрибуте  
  
-   Свойство объекта <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) может уточнять необходимые уточняющие запросы имени свойства, необходимые для поиска резервных ссылок для имен свойств в <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> значениях.  
  
-   Все содержимое в `Resources` свойстве (элементы a <xref:System.Windows.ResourceDictionary>), а также содержимое шаблона должно иметь возможность доступа к другим одноранговым узлам как к значениям. Объявление всего `Resources` свойства как внешнего вызывает логику, которая делает это в средстве синтаксического анализа XAML WPF.  
  
 Пример <xref:System.Windows.ResourceDictionary> сценария для настройки <xref:System.Windows.Markup.AmbientAttribute> на уровне типа см. в разделе.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">Связанные с XAML атрибуты среды CLR для пользовательских типов и библиотек</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">Определение пользовательских типов для использования со службами XAML .NET Framework</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">Концептуальная документация по службам XAML в .NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
