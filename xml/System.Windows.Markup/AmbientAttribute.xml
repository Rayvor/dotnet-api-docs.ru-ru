<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff8c2a8fc6193230b580267a2f9f952f69f2afc6" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75176812" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="30d67-101">Указывает, что свойство или тип должны обрабатываться как свойство или тип окружения.</span><span class="sxs-lookup"><span data-stu-id="30d67-101">Specifies that a property or type should be treated as ambient.</span></span> <span data-ttu-id="30d67-102">Концепция окружения относится к тому, как обработчики XAML определяют владельцев типов членов.</span><span class="sxs-lookup"><span data-stu-id="30d67-102">The ambient concept relates to how XAML processors determine type owners of members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30d67-103">Внешнее свойство — это свойство, в котором значение должно быть доступно в контексте средства синтаксического анализа при создании графа объекта, но если типичный Поиск члена типа приостанавливается в целях непосредственного создания набора узлов XAML.</span><span class="sxs-lookup"><span data-stu-id="30d67-103">An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</span></span> <span data-ttu-id="30d67-104">Существует два основных сценария для внешнего понятия:</span><span class="sxs-lookup"><span data-stu-id="30d67-104">There are two main scenarios for the ambient concept:</span></span>  
  
-   <span data-ttu-id="30d67-105">Другое свойство того же объекта влияет и на то, как должен работать Уточняющий запрос свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="30d67-105">Some other property of the same object influences and qualifies how that object-property lookup should work.</span></span>  
  
-   <span data-ttu-id="30d67-106">Свойство представляет более крупный механизм отсрочки, а внешние возможности для поиска значения элемента расширяются на все объекты, содержащиеся в текущем объекте.</span><span class="sxs-lookup"><span data-stu-id="30d67-106">The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</span></span>  
  
 <span data-ttu-id="30d67-107">Этот атрибут может применяться к конкретным свойствам, которые имеют ожидаемые контейнеры, которые обеспечивают поведение поиска внешнего свойства, или могут применяться к классу для включения поведения свойства окружения во всех случаях этого типа значения для свойства.</span><span class="sxs-lookup"><span data-stu-id="30d67-107">This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</span></span>  
  
 <span data-ttu-id="30d67-108"><xref:System.Windows.Markup.AmbientAttribute> также можно применить к методу CLR для поддержки присвоения атрибутов присоединяемому свойству XAML в качестве внешнего.</span><span class="sxs-lookup"><span data-stu-id="30d67-108"><xref:System.Windows.Markup.AmbientAttribute> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</span></span> <span data-ttu-id="30d67-109">Это потенциально необходимо, поскольку в реализации CLR вложенное свойство XAML реализуется или представляется отражением в качестве шаблона метода доступа с помощью методов `get` и `set`.</span><span class="sxs-lookup"><span data-stu-id="30d67-109">This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with `get` and `set` methods.</span></span> <span data-ttu-id="30d67-110">Отсутствует фактическое свойство CLR для атрибута, поэтому при ограничении использования для <xref:System.AttributeTargets> `Property` не было включено указание присоединяемого члена в качестве окружения.</span><span class="sxs-lookup"><span data-stu-id="30d67-110">No actual CLR property to attribute exists, so restricting usage for <xref:System.AttributeTargets> to `Property` would not have enabled specifying an attachable member as ambient.</span></span> <span data-ttu-id="30d67-111">Для присоединяемого члена, который необходимо сообщить как внешний, атрибут `get` метода доступа.</span><span class="sxs-lookup"><span data-stu-id="30d67-111">For an attachable member that you want to report as ambient, attribute the `get` accessor.</span></span> <span data-ttu-id="30d67-112">Не следует пытаться применить к методам атрибуты, которые не поддерживают методы присоединяемых членов.</span><span class="sxs-lookup"><span data-stu-id="30d67-112">You should not attempt to attribute methods that are not specifically support methods of attachable members.</span></span>  
  
 <span data-ttu-id="30d67-113">В предыдущих версиях .NET Framework этот класс существовал в сборке, относящейся к WPF, WindowsBase.</span><span class="sxs-lookup"><span data-stu-id="30d67-113">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="30d67-114">В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]<xref:System.Windows.Markup.AmbientAttribute> находится в сборке System. XAML.</span><span class="sxs-lookup"><span data-stu-id="30d67-114">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="30d67-115">Для получения дополнительной информации см. [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="30d67-115">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 <span data-ttu-id="30d67-116">Типы окружения (типы, где <xref:System.Windows.Markup.AmbientAttribute> применяется на уровне типа) могут использоваться для определенных ситуаций обработки XAML, когда тип свойства необходимо разрешить в неопределенном порядке.</span><span class="sxs-lookup"><span data-stu-id="30d67-116">Ambient types (types where <xref:System.Windows.Markup.AmbientAttribute> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</span></span>  
  
## <a name="object-writer-scenarios"></a><span data-ttu-id="30d67-117">Сценарии модуля записи объектов</span><span class="sxs-lookup"><span data-stu-id="30d67-117">Object Writer Scenarios</span></span>  
 <span data-ttu-id="30d67-118">При определении средства записи объектов XAML и при возникновении свойства, метода или типа, где применяется <xref:System.Windows.Markup.AmbientAttribute>, обычно требуется доступ к службе для определения предполагаемого поведения внешнего поиска свойства, необходимого для записи объектов.</span><span class="sxs-lookup"><span data-stu-id="30d67-118">If you are defining a XAML object writer, and you encounter a property, method or type where <xref:System.Windows.Markup.AmbientAttribute> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</span></span> <span data-ttu-id="30d67-119">Для получения дополнительной информации см. <xref:System.Xaml.IAmbientProvider>.</span><span class="sxs-lookup"><span data-stu-id="30d67-119">For more information, see <xref:System.Xaml.IAmbientProvider>.</span></span>  
  
## <a name="value-converters"></a><span data-ttu-id="30d67-120">Преобразователи значений</span><span class="sxs-lookup"><span data-stu-id="30d67-120">Value Converters</span></span>  
 <span data-ttu-id="30d67-121">Преобразователям типов или расширениям разметки может потребоваться знать сведения о окружающей среды, чтобы обрабатывать свойства, представляющие косвенные сопоставления типов, такие как свойства, указывающие элементы или типы, по именам строк с квалификатором или без него.</span><span class="sxs-lookup"><span data-stu-id="30d67-121">Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</span></span> <span data-ttu-id="30d67-122">В этом сценарии <xref:System.Windows.Markup.AmbientAttribute> не предназначен для непосредственного использования в логике кода преобразователя значений.</span><span class="sxs-lookup"><span data-stu-id="30d67-122">In this scenario, <xref:System.Windows.Markup.AmbientAttribute> is not intended to be used directly for value converter code logic.</span></span> <span data-ttu-id="30d67-123">Вместо этого преобразователь значений должен полагаться на поведение обработки средства записи XAML, которое передает <xref:System.Xaml.IAmbientProvider> в контекстах службы в методы преобразователя значений при вызове.</span><span class="sxs-lookup"><span data-stu-id="30d67-123">Rather, the value converter should rely on the XAML writer processing behavior, which will pass <xref:System.Xaml.IAmbientProvider> in its service contexts to your value converter methods when called.</span></span>  
  
## <a name="wpf-scenarios-for-ambientattribute"></a><span data-ttu-id="30d67-124">Сценарии WPF для Амбиентаттрибуте</span><span class="sxs-lookup"><span data-stu-id="30d67-124">WPF Scenarios for AmbientAttribute</span></span>  
  
-   <span data-ttu-id="30d67-125">Свойство <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) может уточнять необходимые уточняющие запросы имени свойства, необходимые для поиска резервных ссылок для имен свойств в значениях <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="30d67-125">A property of a <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values.</span></span>  
  
-   <span data-ttu-id="30d67-126">Все содержимое в свойстве `Resources` (элементы <xref:System.Windows.ResourceDictionary>), а также содержимое шаблона, должно иметь возможность доступа к другим одноранговым узлам как к значениям.</span><span class="sxs-lookup"><span data-stu-id="30d67-126">All content within a `Resources` property (items of a <xref:System.Windows.ResourceDictionary>) as well as template content, should be able to access other peers as values.</span></span> <span data-ttu-id="30d67-127">Объявление всего свойства `Resources` как окружения вызывает логику, которая делает это в средстве синтаксического анализа XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="30d67-127">Declaring the entire `Resources` property as ambient invokes logic that enables this in the WPF XAML parser.</span></span>  
  
 <span data-ttu-id="30d67-128">Пример сценария установки <xref:System.Windows.Markup.AmbientAttribute> на уровне типа см. в <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="30d67-128">See <xref:System.Windows.ResourceDictionary> for an example of a scenario for setting <xref:System.Windows.Markup.AmbientAttribute> at type level.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="30d67-129">Связанные с XAML атрибуты среды CLR для пользовательских типов и библиотек</span><span class="sxs-lookup"><span data-stu-id="30d67-129">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="30d67-130">Определение пользовательских типов для использования со службами XAML .NET Framework</span><span class="sxs-lookup"><span data-stu-id="30d67-130">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="30d67-131">Концептуальная документация по службам XAML в .NET</span><span class="sxs-lookup"><span data-stu-id="30d67-131">NET XAML Services Conceptual Documentation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30d67-132">Инициализация нового экземпляра класса <see cref="T:System.Windows.Markup.AmbientAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="30d67-132">Initializes a new instance of the <see cref="T:System.Windows.Markup.AmbientAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
