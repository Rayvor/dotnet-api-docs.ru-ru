<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ee33577ac89d42592b4312a85b5bb89b3f04916" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004484" /></Metadata><TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет службу, которая сообщает информацию о ситуационных отношениях "объект-свойство" для оценки расширения разметки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> Представляет службу, которая сообщает сведения о которой вызывается преобразователь значений свойства объекта окружающего структуры.  
  
 Преобразователи типов или расширения разметки может запросить <xref:System.Windows.Markup.IProvideValueTarget> как услуга в контексте службы, предоставляемые средство записи объектов XAML, когда средство записи объектов XAML вызывает поведение преобразования значения. Дополнительные сведения см. в разделе [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) и [служебные контексты, доступные для расширений разметки и преобразователей типов](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Для расширений разметки, в частности, сценарии которой <xref:System.Windows.Markup.IProvideValueTarget> полезно является определение допустимости ситуации в масштабах использования расширения разметки. Например расширение разметки может реализовать механизм расхода значения, но использование этого механизма только может оказаться полезным в том случае, если целевой объект может использовать другие компоненты механизма расхода во время выполнения. Можно проверить характеристики системы тип объекта, возвращаемого в качестве <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> и убедитесь, что этот объект поддерживает ваш метод отсрочки. Если в этом случае расширение разметки возвращает значение, и если нет, расширение разметки создает исключение, которое будет использоваться как внутреннее исключение при средство записи объектов XAML. Аналогичный сценарий обеспечение, что определенное свойство поддерживает возможность, проверив характеристики системы типа <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.  
  
 Несмотря на то что имя API <xref:System.Windows.Markup.IProvideValueTarget> может подразумеваться, связь с <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, о которых сообщает информацию <xref:System.Windows.Markup.IProvideValueTarget> также можно использовать для <xref:System.ComponentModel.TypeConverter> или <xref:System.Windows.Markup.ValueSerializer>. Объект <xref:System.ComponentModel.TypeConverter> или <xref:System.Windows.Markup.ValueSerializer> обычно имеют дополнительный контекст, чем расширение разметки, так как они предназначены для конкретного целевого типа или свойства цели, и таким образом ситуации в масштабах допустимость обычно предсказуемые в системе типов. Тем не менее существуют другие сценарии. Ниже приведен список некоторых сценариев, которые могут быть реализованы в преобразователь типов или расширения разметки:  
  
-   Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> для чтения экземпляр значения других свойств для этого объекта. Обратите внимание на то, что обработка может потребоваться надежная неопределенных значений, поскольку порядок обработки элементов XAML в целевом объекте может быть недетерминированным.  
  
-   Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> на чтение метаданных уровня типа, или чтобы убедиться, что требуемые интерфейсы реализованные этим типом.  
  
-   Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> на чтение метаданных свойства.  
  
 Один из сценариев является использование <xref:System.Windows.Markup.IProvideValueTarget> сведения до предела, какие объекты или свойства могут задаваться в расширение разметки.  
  
 Прежде чем использовать службу, убедитесь, что сама служба не `null` при возврате соответствующего параметра поставщика службы вы используете для контекста.  
  
> [!IMPORTANT]
>  При использовании службы, особенно важно не может изменять объект, упоминаемый в <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> свойства или другие объекты, на которые ссылается этот объект. В частности, для WPF эти изменения могут вызвать непредвиденные изменения, которые сделают недействительными системе свойств WPF.  
  
> [!NOTE]
>  Не используйте тип <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> для определения, какой точный тип разметки расширения или типа преобразователя должен возвращать. Это не рекомендуется. Ваш тип возвращаемого значения должны быть согласованы с атрибутами (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> для расширений разметки) или шаблоны (имя класса преобразователя типа).  
  
 В предыдущих версиях .NET Framework этот интерфейс существовали в сборке WindowsBase относящихся к WPF. В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> находится в сборке System.Xaml. Для получения дополнительной информации см. [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Примечания об использовании WPF  
 Эта служба поддерживает возможности платформы, например, для привязки к свойству зависимостей.  
  
 В WPF, служба, представленная <xref:System.Windows.Markup.IProvideValueTarget> может возвращать объекты и свойства для ситуаций, где значение, возвращаемое из разметки расширения или типа преобразователя зависит от контекста.  
  
 <xref:System.Windows.Markup.IProvideValueTarget> широко в внутреннюю реализацию <xref:System.Windows.Data.BindingBase>, класс, реализующий механизм привязки для свойств зависимостей в WPF.  
  
 Внутренняя служба поставщика по умолчанию для WPF реализуются <xref:System.Windows.Markup.IProvideValueTarget> для использования с пользовательской разметки расширения или типа преобразователя. Объект, а свойство <xref:System.Windows.Markup.IProvideValueTarget> может быть только внутреннюю службу WPF. Выход за рамки этого определения того, как <xref:System.Windows.Markup.IProvideValueTarget> работает потребует определения собственного поставщика службы для использования разметки расширения и тип преобразователя, реализующего по крайней мере <xref:System.Windows.Markup.IProvideValueTarget> и <xref:System.Windows.Markup.IXamlTypeResolver> служб и т. е расширенной сценарий, который здесь не описывается.  
  
 Значение null для <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> или <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> не обязательно означает, что преобразователь разметки расширения или тип не может использоваться, несмотря на то, что это зависит от реализации. Пример случай, когда значения из <xref:System.Windows.Markup.IProvideValueTarget> имеют значение null даже если доступна эта служба является, если расширение разметки вкладывается в другое расширение разметки, такие как <xref:System.Windows.Data.Binding>. Реализация, которая зависит от <xref:System.Windows.Markup.IProvideValueTarget> всегда следует выполнять проверку для значения null, если только для целей создания конкретное исключение, если это ваш предполагаемой структуре.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сообщаемый целевой объект.</summary>
        <value>Сообщаемый целевой объект.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, возвращенное <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> фактическую ссылку, а не системный идентификатор типа или другой идентификатор. Значение может также быть `null`; см. в разделе <xref:System.Windows.Markup.IProvideValueTarget>.  
  
> [!IMPORTANT]
>  При использовании службы, особенно важно не может изменять объект, упоминаемый в <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> свойства или другие объекты, которые ссылается этот объект как свойства, которые не являются специально преобразования значений прописные вы обрабатываются. Для WPF в частности, изменив целевой объект может вызвать непредвиденные изменения, которые сделают недействительными системе свойств WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Преобразователи типов или расширения разметки для XAML</related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает идентификатор сообщаемого целевого свойства.</summary>
        <value>Идентификатор сообщаемого целевого свойства.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение может также быть `null`; см. в разделе <xref:System.Windows.Markup.IProvideValueTarget>.  
  
## <a name="wpf-usage-notes"></a>Примечания об использовании WPF  
 Для свойства зависимостей, то служба по умолчанию WPF может возвратить <xref:System.Windows.DependencyProperty>, при котором преобразователь расширение или тип разметки можно использовать метаданные. В противном случае возвращается объект может быть <xref:System.Reflection.PropertyInfo> для свойства CLR.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Преобразователи типов или расширения разметки для XAML</related>
      </Docs>
    </Member>
  </Members>
</Type>