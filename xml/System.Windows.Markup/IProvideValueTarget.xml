<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="965f9e15d2b0c0f57800ffada0a9f5f6aeb37918" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69167485" /></Metadata><TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f078-101">Представляет службу, которая сообщает информацию о ситуационных отношениях "объект-свойство" для оценки расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="2f078-101">Represents a service that reports situational object-property relationships for markup extension evaluation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f078-102"><xref:System.Windows.Markup.IProvideValueTarget>представляет службу, которая сообщает сведения о структуре свойств объекта, окружающей метод, в котором вызывается преобразователь значений.</span><span class="sxs-lookup"><span data-stu-id="2f078-102"><xref:System.Windows.Markup.IProvideValueTarget> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</span></span>  
  
 <span data-ttu-id="2f078-103">Преобразователи типов и расширения разметки могут запрашивать <xref:System.Windows.Markup.IProvideValueTarget> как службу в контексте службы, предоставляемом средством записи объектов XAML, когда средство записи объектов XAML вызывает поведение преобразования значения.</span><span class="sxs-lookup"><span data-stu-id="2f078-103">Type converters and markup extensions can query for <xref:System.Windows.Markup.IProvideValueTarget> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="2f078-104">Дополнительные сведения см. в разделе [преобразователи типов и расширения разметки для XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) и [контекстов служб, доступных для преобразователей типов и расширений разметки](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="2f078-104">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="2f078-105">В <xref:System.Windows.Markup.IProvideValueTarget> частности, для расширений разметки рекомендуется определить допустимость использования расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="2f078-105">For markup extensions specifically, a scenario where <xref:System.Windows.Markup.IProvideValueTarget> is useful is to determine the validity of your markup extension's situational usage.</span></span> <span data-ttu-id="2f078-106">Например, расширение разметки может реализовать механизм отсрочки значения, но использование этого механизма может быть уместным только в том случае, если целевой объект способен использовать другие компоненты механизма отсрочки во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="2f078-106">For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</span></span> <span data-ttu-id="2f078-107">Можно проверить характеристики системы типа объекта, возвращаемого как <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> , и убедиться, что объект поддерживает ваш метод отсрочки.</span><span class="sxs-lookup"><span data-stu-id="2f078-107">You could check the type system characteristics of the object returned as <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> and make sure that object supports your deferral technique.</span></span> <span data-ttu-id="2f078-108">Если это так, расширение разметки возвращает значение, а если нет, расширение разметки создает исключение, которое будет выбрано как внутреннее исключение средством записи объектов XAML.</span><span class="sxs-lookup"><span data-stu-id="2f078-108">If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</span></span> <span data-ttu-id="2f078-109">Аналогичный сценарий позволяет гарантировать, что конкретное свойство поддерживает возможность, путем проверки системных характеристик <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>типа.</span><span class="sxs-lookup"><span data-stu-id="2f078-109">A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span></span>  
  
 <span data-ttu-id="2f078-110">Хотя <xref:System.Windows.Markup.IProvideValueTarget> имя API может указывать на связь с <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType> <xref:System.Windows.Markup.IProvideValueTarget> , информация, сообщаемая, может также быть полезной для <xref:System.ComponentModel.TypeConverter> или <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="2f078-110">Although the API name <xref:System.Windows.Markup.IProvideValueTarget> might imply an association with <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, the information reported by <xref:System.Windows.Markup.IProvideValueTarget> can also be useful to a <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="2f078-111"><xref:System.ComponentModel.TypeConverter> Или<xref:System.Windows.Markup.ValueSerializer> , как правило, имеют больше контекста, чем расширение разметки, так как они относятся к определенному целевому типу или целевому свойству, и, таким образом, ситуация обычно предсказуема в системе типов.</span><span class="sxs-lookup"><span data-stu-id="2f078-111">A <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</span></span> <span data-ttu-id="2f078-112">Однако существуют и другие сценарии.</span><span class="sxs-lookup"><span data-stu-id="2f078-112">However, other scenarios exist.</span></span> <span data-ttu-id="2f078-113">Ниже приведен список сценариев, которые могут быть реализованы преобразователем типов или расширением разметки.</span><span class="sxs-lookup"><span data-stu-id="2f078-113">The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</span></span>  
  
-   <span data-ttu-id="2f078-114">Возвращает <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> значение, чтобы считывать значения экземпляров других свойств этого объекта.</span><span class="sxs-lookup"><span data-stu-id="2f078-114">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read instance values of other properties on that object.</span></span> <span data-ttu-id="2f078-115">Обратите внимание, что обработка здесь может быть достаточно надежной для ненужных значений, так как порядок обработки элементов XAML в целевом объекте может быть недетерминированным.</span><span class="sxs-lookup"><span data-stu-id="2f078-115">Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</span></span>  
  
-   <span data-ttu-id="2f078-116">Получите <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> доступ на чтение метаданных уровня типа или, чтобы убедиться, что необходимые интерфейсы реализуются типом.</span><span class="sxs-lookup"><span data-stu-id="2f078-116">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read type-level metadata, or to verify that required interfaces are implemented by the type.</span></span>  
  
-   <span data-ttu-id="2f078-117">Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> для чтения метаданных свойств.</span><span class="sxs-lookup"><span data-stu-id="2f078-117">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to read property metadata.</span></span>  
  
 <span data-ttu-id="2f078-118">Одним из сценариев является использование <xref:System.Windows.Markup.IProvideValueTarget> сведений для ограничения того, какие объекты или свойства разрешено устанавливать расширением разметки.</span><span class="sxs-lookup"><span data-stu-id="2f078-118">One scenario is to use <xref:System.Windows.Markup.IProvideValueTarget> information to limit which objects or properties are permitted to be set by your markup extension.</span></span>  
  
 <span data-ttu-id="2f078-119">Прежде чем пытаться использовать службу, убедитесь, что сама служба не `null` возвращена соответствующим параметром поставщика службы, который используется для контекста.</span><span class="sxs-lookup"><span data-stu-id="2f078-119">Before attempting to use the service, make sure that the service itself is not `null` when returned by the relevant service provider parameter you are using for context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f078-120">При использовании службы особенно важно не изменять объект, на который ссылается <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> свойство, или другие объекты, на которые ссылается этот объект.</span><span class="sxs-lookup"><span data-stu-id="2f078-120">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object.</span></span> <span data-ttu-id="2f078-121">В частности, в WPF эти изменения могут привести к непредвиденным изменениям, которые сделают систему свойств WPF недействительной.</span><span class="sxs-lookup"><span data-stu-id="2f078-121">For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f078-122">Не используйте тип <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> для определения точного типа, возвращаемого расширением разметки или преобразователем типов.</span><span class="sxs-lookup"><span data-stu-id="2f078-122">Do not use the type of <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to determine which precise type a markup extension or type converter should return.</span></span> <span data-ttu-id="2f078-123">Это не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="2f078-123">That is not a best practice.</span></span> <span data-ttu-id="2f078-124">Тип возвращаемого значения должен соответствовать атрибутам (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> для расширений разметки) или шаблонам (имя класса преобразователя типов).</span><span class="sxs-lookup"><span data-stu-id="2f078-124">Your return type should be consistent with attributing (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> for markup extensions) or patterns (class name of the type converter).</span></span>  
  
 <span data-ttu-id="2f078-125">В предыдущих версиях .NET Framework этот интерфейс существовал в сборке, относящейся к WPF, WindowsBase.</span><span class="sxs-lookup"><span data-stu-id="2f078-125">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="2f078-126">В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]параметрнаходитсявсборкеSystem .XAML.<xref:System.Windows.Markup.IProvideValueTarget></span><span class="sxs-lookup"><span data-stu-id="2f078-126">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> is in the System.Xaml assembly.</span></span> <span data-ttu-id="2f078-127">Для получения дополнительной информации см. [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="2f078-127">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="2f078-128">Примечания об использовании WPF</span><span class="sxs-lookup"><span data-stu-id="2f078-128">WPF Usage Notes</span></span>  
 <span data-ttu-id="2f078-129">Эта служба поддерживает функции платформы, такие как привязка к свойству зависимостей.</span><span class="sxs-lookup"><span data-stu-id="2f078-129">This service supports framework features such as binding on a dependency property.</span></span>  
  
 <span data-ttu-id="2f078-130">В WPF служба, представленная <xref:System.Windows.Markup.IProvideValueTarget> , может возвращать объекты и свойства в ситуациях, когда значение, возвращаемое из расширения разметки или преобразователя типов, зависит от контекста.</span><span class="sxs-lookup"><span data-stu-id="2f078-130">In WPF, the service represented by <xref:System.Windows.Markup.IProvideValueTarget> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</span></span>  
  
 <span data-ttu-id="2f078-131"><xref:System.Windows.Markup.IProvideValueTarget>используется в значительной степени во внутренней реализации <xref:System.Windows.Data.BindingBase>, класс, реализующий механизм привязки для свойств зависимостей в WPF.</span><span class="sxs-lookup"><span data-stu-id="2f078-131"><xref:System.Windows.Markup.IProvideValueTarget> is leveraged heavily in the internal implementation of <xref:System.Windows.Data.BindingBase>, the class that implements the binding mechanism for dependency properties in WPF.</span></span>  
  
 <span data-ttu-id="2f078-132">Внутренний поставщик услуг по умолчанию для WPF <xref:System.Windows.Markup.IProvideValueTarget> реализует использование пользовательского расширения разметки или преобразователя типов.</span><span class="sxs-lookup"><span data-stu-id="2f078-132">A default internal service provider for WPF implements <xref:System.Windows.Markup.IProvideValueTarget> for usage by a custom markup extension or type converter.</span></span> <span data-ttu-id="2f078-133">Объект и свойство, сообщаемое <xref:System.Windows.Markup.IProvideValueTarget> , можно задать только внутренней службой WPF.</span><span class="sxs-lookup"><span data-stu-id="2f078-133">The object and property reported by <xref:System.Windows.Markup.IProvideValueTarget> can only be set by the internal WPF service.</span></span> <span data-ttu-id="2f078-134">Выход за рамки этого определения того <xref:System.Windows.Markup.IProvideValueTarget> , как работает, потребует определения собственного поставщика услуг для расширения разметки и использования преобразователей типов, реализующего по <xref:System.Windows.Markup.IProvideValueTarget> крайней мере службы и <xref:System.Windows.Markup.IXamlTypeResolver> , а это расширенный сценарий, который не описан здесь.</span><span class="sxs-lookup"><span data-stu-id="2f078-134">Going beyond this definition of how <xref:System.Windows.Markup.IProvideValueTarget> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <xref:System.Windows.Markup.IProvideValueTarget> and <xref:System.Windows.Markup.IXamlTypeResolver> services, and that is an advanced scenario that is not described here.</span></span>  
  
 <span data-ttu-id="2f078-135">Значение NULL для <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> или <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> не обязательно означает, что расширение разметки или преобразователь типов не может действовать, хотя это зависит от реализации.</span><span class="sxs-lookup"><span data-stu-id="2f078-135">A null value for <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> or <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</span></span> <span data-ttu-id="2f078-136">Пример случая, когда значения из <xref:System.Windows.Markup.IProvideValueTarget> имеют значение null, даже если служба доступна, — если расширение разметки вложено в другое расширение разметки, например. <xref:System.Windows.Data.Binding></span><span class="sxs-lookup"><span data-stu-id="2f078-136">An example case where the values from <xref:System.Windows.Markup.IProvideValueTarget> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="2f078-137">Реализация, основанная на <xref:System.Windows.Markup.IProvideValueTarget> , должна всегда проверять наличие значений NULL, если только для создания определенного исключения, если это предполагаемый проект.</span><span class="sxs-lookup"><span data-stu-id="2f078-137">An implementation that relies on <xref:System.Windows.Markup.IProvideValueTarget> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f078-138">Получает сообщаемый целевой объект.</span><span class="sxs-lookup"><span data-stu-id="2f078-138">Gets the target object being reported.</span></span></summary>
        <value><span data-ttu-id="2f078-139">Сообщаемый целевой объект.</span><span class="sxs-lookup"><span data-stu-id="2f078-139">The target object being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f078-140">Значение, возвращаемое <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> функцией, является фактической ссылкой, а не идентификатором системы типов или другим идентификатором.</span><span class="sxs-lookup"><span data-stu-id="2f078-140">The value returned by <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> is the actual reference, not a type system identifier or other identifier.</span></span> <span data-ttu-id="2f078-141">Значение также может быть `null`равно; см. раздел. <xref:System.Windows.Markup.IProvideValueTarget></span><span class="sxs-lookup"><span data-stu-id="2f078-141">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f078-142">При использовании службы особенно важно не изменять объект, на который ссылается <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> свойство, или другие объекты, на которые ссылается этот объект, как на свойства, которые не относятся к обрабатываемому варианту преобразования значения.</span><span class="sxs-lookup"><span data-stu-id="2f078-142">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</span></span> <span data-ttu-id="2f078-143">В частности, для WPF изменение целевого объекта может привести к непредвиденным изменениям, которые сделают систему свойств WPF недействительной.</span><span class="sxs-lookup"><span data-stu-id="2f078-143">For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="2f078-144">Преобразователи типов или расширения разметки для XAML</span><span class="sxs-lookup"><span data-stu-id="2f078-144">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f078-145">Получает идентификатор сообщаемого целевого свойства.</span><span class="sxs-lookup"><span data-stu-id="2f078-145">Gets an identifier for the target property being reported.</span></span></summary>
        <value><span data-ttu-id="2f078-146">Идентификатор сообщаемого целевого свойства.</span><span class="sxs-lookup"><span data-stu-id="2f078-146">An identifier for the target property being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f078-147">Значение также может быть `null`равно; см. раздел. <xref:System.Windows.Markup.IProvideValueTarget></span><span class="sxs-lookup"><span data-stu-id="2f078-147">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="2f078-148">Примечания об использовании WPF</span><span class="sxs-lookup"><span data-stu-id="2f078-148">WPF Usage Notes</span></span>  
 <span data-ttu-id="2f078-149">Для свойства зависимостей служба WPF по умолчанию может возвращать <xref:System.Windows.DependencyProperty>, так что расширение разметки или преобразователь типов может использовать метаданные.</span><span class="sxs-lookup"><span data-stu-id="2f078-149">For a dependency property, the default WPF service may return a <xref:System.Windows.DependencyProperty>, such that the markup extension or type converter can use metadata.</span></span> <span data-ttu-id="2f078-150">В противном случае возвращаемый объект может <xref:System.Reflection.PropertyInfo> быть для свойства CLR.</span><span class="sxs-lookup"><span data-stu-id="2f078-150">Otherwise, the returned object can be a <xref:System.Reflection.PropertyInfo> for a CLR property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="2f078-151">Преобразователи типов или расширения разметки для XAML</span><span class="sxs-lookup"><span data-stu-id="2f078-151">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
