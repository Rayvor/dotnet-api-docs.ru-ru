<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ee33577ac89d42592b4312a85b5bb89b3f04916" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004484" /></Metadata><TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="48c01-101">Представляет службу, которая сообщает информацию о ситуационных отношениях "объект-свойство" для оценки расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="48c01-101">Represents a service that reports situational object-property relationships for markup extension evaluation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c01-102"><xref:System.Windows.Markup.IProvideValueTarget> Представляет службу, которая сообщает сведения о которой вызывается преобразователь значений свойства объекта окружающего структуры.</span><span class="sxs-lookup"><span data-stu-id="48c01-102"><xref:System.Windows.Markup.IProvideValueTarget> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</span></span>  
  
 <span data-ttu-id="48c01-103">Преобразователи типов или расширения разметки может запросить <xref:System.Windows.Markup.IProvideValueTarget> как услуга в контексте службы, предоставляемые средство записи объектов XAML, когда средство записи объектов XAML вызывает поведение преобразования значения.</span><span class="sxs-lookup"><span data-stu-id="48c01-103">Type converters and markup extensions can query for <xref:System.Windows.Markup.IProvideValueTarget> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="48c01-104">Дополнительные сведения см. в разделе [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) и [служебные контексты, доступные для расширений разметки и преобразователей типов](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="48c01-104">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="48c01-105">Для расширений разметки, в частности, сценарии которой <xref:System.Windows.Markup.IProvideValueTarget> полезно является определение допустимости ситуации в масштабах использования расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="48c01-105">For markup extensions specifically, a scenario where <xref:System.Windows.Markup.IProvideValueTarget> is useful is to determine the validity of your markup extension's situational usage.</span></span> <span data-ttu-id="48c01-106">Например расширение разметки может реализовать механизм расхода значения, но использование этого механизма только может оказаться полезным в том случае, если целевой объект может использовать другие компоненты механизма расхода во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="48c01-106">For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</span></span> <span data-ttu-id="48c01-107">Можно проверить характеристики системы тип объекта, возвращаемого в качестве <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> и убедитесь, что этот объект поддерживает ваш метод отсрочки.</span><span class="sxs-lookup"><span data-stu-id="48c01-107">You could check the type system characteristics of the object returned as <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> and make sure that object supports your deferral technique.</span></span> <span data-ttu-id="48c01-108">Если в этом случае расширение разметки возвращает значение, и если нет, расширение разметки создает исключение, которое будет использоваться как внутреннее исключение при средство записи объектов XAML.</span><span class="sxs-lookup"><span data-stu-id="48c01-108">If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</span></span> <span data-ttu-id="48c01-109">Аналогичный сценарий обеспечение, что определенное свойство поддерживает возможность, проверив характеристики системы типа <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="48c01-109">A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span></span>  
  
 <span data-ttu-id="48c01-110">Несмотря на то что имя API <xref:System.Windows.Markup.IProvideValueTarget> может подразумеваться, связь с <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, о которых сообщает информацию <xref:System.Windows.Markup.IProvideValueTarget> также можно использовать для <xref:System.ComponentModel.TypeConverter> или <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="48c01-110">Although the API name <xref:System.Windows.Markup.IProvideValueTarget> might imply an association with <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, the information reported by <xref:System.Windows.Markup.IProvideValueTarget> can also be useful to a <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="48c01-111">Объект <xref:System.ComponentModel.TypeConverter> или <xref:System.Windows.Markup.ValueSerializer> обычно имеют дополнительный контекст, чем расширение разметки, так как они предназначены для конкретного целевого типа или свойства цели, и таким образом ситуации в масштабах допустимость обычно предсказуемые в системе типов.</span><span class="sxs-lookup"><span data-stu-id="48c01-111">A <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</span></span> <span data-ttu-id="48c01-112">Тем не менее существуют другие сценарии.</span><span class="sxs-lookup"><span data-stu-id="48c01-112">However, other scenarios exist.</span></span> <span data-ttu-id="48c01-113">Ниже приведен список некоторых сценариев, которые могут быть реализованы в преобразователь типов или расширения разметки:</span><span class="sxs-lookup"><span data-stu-id="48c01-113">The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</span></span>  
  
-   <span data-ttu-id="48c01-114">Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> для чтения экземпляр значения других свойств для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="48c01-114">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read instance values of other properties on that object.</span></span> <span data-ttu-id="48c01-115">Обратите внимание на то, что обработка может потребоваться надежная неопределенных значений, поскольку порядок обработки элементов XAML в целевом объекте может быть недетерминированным.</span><span class="sxs-lookup"><span data-stu-id="48c01-115">Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</span></span>  
  
-   <span data-ttu-id="48c01-116">Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> на чтение метаданных уровня типа, или чтобы убедиться, что требуемые интерфейсы реализованные этим типом.</span><span class="sxs-lookup"><span data-stu-id="48c01-116">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read type-level metadata, or to verify that required interfaces are implemented by the type.</span></span>  
  
-   <span data-ttu-id="48c01-117">Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> на чтение метаданных свойства.</span><span class="sxs-lookup"><span data-stu-id="48c01-117">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to read property metadata.</span></span>  
  
 <span data-ttu-id="48c01-118">Один из сценариев является использование <xref:System.Windows.Markup.IProvideValueTarget> сведения до предела, какие объекты или свойства могут задаваться в расширение разметки.</span><span class="sxs-lookup"><span data-stu-id="48c01-118">One scenario is to use <xref:System.Windows.Markup.IProvideValueTarget> information to limit which objects or properties are permitted to be set by your markup extension.</span></span>  
  
 <span data-ttu-id="48c01-119">Прежде чем использовать службу, убедитесь, что сама служба не `null` при возврате соответствующего параметра поставщика службы вы используете для контекста.</span><span class="sxs-lookup"><span data-stu-id="48c01-119">Before attempting to use the service, make sure that the service itself is not `null` when returned by the relevant service provider parameter you are using for context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="48c01-120">При использовании службы, особенно важно не может изменять объект, упоминаемый в <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> свойства или другие объекты, на которые ссылается этот объект.</span><span class="sxs-lookup"><span data-stu-id="48c01-120">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object.</span></span> <span data-ttu-id="48c01-121">В частности, для WPF эти изменения могут вызвать непредвиденные изменения, которые сделают недействительными системе свойств WPF.</span><span class="sxs-lookup"><span data-stu-id="48c01-121">For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="48c01-122">Не используйте тип <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> для определения, какой точный тип разметки расширения или типа преобразователя должен возвращать.</span><span class="sxs-lookup"><span data-stu-id="48c01-122">Do not use the type of <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to determine which precise type a markup extension or type converter should return.</span></span> <span data-ttu-id="48c01-123">Это не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="48c01-123">That is not a best practice.</span></span> <span data-ttu-id="48c01-124">Ваш тип возвращаемого значения должны быть согласованы с атрибутами (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> для расширений разметки) или шаблоны (имя класса преобразователя типа).</span><span class="sxs-lookup"><span data-stu-id="48c01-124">Your return type should be consistent with attributing (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> for markup extensions) or patterns (class name of the type converter).</span></span>  
  
 <span data-ttu-id="48c01-125">В предыдущих версиях .NET Framework этот интерфейс существовали в сборке WindowsBase относящихся к WPF.</span><span class="sxs-lookup"><span data-stu-id="48c01-125">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="48c01-126">В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> находится в сборке System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="48c01-126">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> is in the System.Xaml assembly.</span></span> <span data-ttu-id="48c01-127">Для получения дополнительной информации см. [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="48c01-127">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="48c01-128">Примечания об использовании WPF</span><span class="sxs-lookup"><span data-stu-id="48c01-128">WPF Usage Notes</span></span>  
 <span data-ttu-id="48c01-129">Эта служба поддерживает возможности платформы, например, для привязки к свойству зависимостей.</span><span class="sxs-lookup"><span data-stu-id="48c01-129">This service supports framework features such as binding on a dependency property.</span></span>  
  
 <span data-ttu-id="48c01-130">В WPF, служба, представленная <xref:System.Windows.Markup.IProvideValueTarget> может возвращать объекты и свойства для ситуаций, где значение, возвращаемое из разметки расширения или типа преобразователя зависит от контекста.</span><span class="sxs-lookup"><span data-stu-id="48c01-130">In WPF, the service represented by <xref:System.Windows.Markup.IProvideValueTarget> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</span></span>  
  
 <span data-ttu-id="48c01-131"><xref:System.Windows.Markup.IProvideValueTarget> широко в внутреннюю реализацию <xref:System.Windows.Data.BindingBase>, класс, реализующий механизм привязки для свойств зависимостей в WPF.</span><span class="sxs-lookup"><span data-stu-id="48c01-131"><xref:System.Windows.Markup.IProvideValueTarget> is leveraged heavily in the internal implementation of <xref:System.Windows.Data.BindingBase>, the class that implements the binding mechanism for dependency properties in WPF.</span></span>  
  
 <span data-ttu-id="48c01-132">Внутренняя служба поставщика по умолчанию для WPF реализуются <xref:System.Windows.Markup.IProvideValueTarget> для использования с пользовательской разметки расширения или типа преобразователя.</span><span class="sxs-lookup"><span data-stu-id="48c01-132">A default internal service provider for WPF implements <xref:System.Windows.Markup.IProvideValueTarget> for usage by a custom markup extension or type converter.</span></span> <span data-ttu-id="48c01-133">Объект, а свойство <xref:System.Windows.Markup.IProvideValueTarget> может быть только внутреннюю службу WPF.</span><span class="sxs-lookup"><span data-stu-id="48c01-133">The object and property reported by <xref:System.Windows.Markup.IProvideValueTarget> can only be set by the internal WPF service.</span></span> <span data-ttu-id="48c01-134">Выход за рамки этого определения того, как <xref:System.Windows.Markup.IProvideValueTarget> работает потребует определения собственного поставщика службы для использования разметки расширения и тип преобразователя, реализующего по крайней мере <xref:System.Windows.Markup.IProvideValueTarget> и <xref:System.Windows.Markup.IXamlTypeResolver> служб и т. е расширенной сценарий, который здесь не описывается.</span><span class="sxs-lookup"><span data-stu-id="48c01-134">Going beyond this definition of how <xref:System.Windows.Markup.IProvideValueTarget> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <xref:System.Windows.Markup.IProvideValueTarget> and <xref:System.Windows.Markup.IXamlTypeResolver> services, and that is an advanced scenario that is not described here.</span></span>  
  
 <span data-ttu-id="48c01-135">Значение null для <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> или <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> не обязательно означает, что преобразователь разметки расширения или тип не может использоваться, несмотря на то, что это зависит от реализации.</span><span class="sxs-lookup"><span data-stu-id="48c01-135">A null value for <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> or <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</span></span> <span data-ttu-id="48c01-136">Пример случай, когда значения из <xref:System.Windows.Markup.IProvideValueTarget> имеют значение null даже если доступна эта служба является, если расширение разметки вкладывается в другое расширение разметки, такие как <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="48c01-136">An example case where the values from <xref:System.Windows.Markup.IProvideValueTarget> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="48c01-137">Реализация, которая зависит от <xref:System.Windows.Markup.IProvideValueTarget> всегда следует выполнять проверку для значения null, если только для целей создания конкретное исключение, если это ваш предполагаемой структуре.</span><span class="sxs-lookup"><span data-stu-id="48c01-137">An implementation that relies on <xref:System.Windows.Markup.IProvideValueTarget> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c01-138">Получает сообщаемый целевой объект.</span><span class="sxs-lookup"><span data-stu-id="48c01-138">Gets the target object being reported.</span></span></summary>
        <value><span data-ttu-id="48c01-139">Сообщаемый целевой объект.</span><span class="sxs-lookup"><span data-stu-id="48c01-139">The target object being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c01-140">Значение, возвращенное <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> фактическую ссылку, а не системный идентификатор типа или другой идентификатор.</span><span class="sxs-lookup"><span data-stu-id="48c01-140">The value returned by <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> is the actual reference, not a type system identifier or other identifier.</span></span> <span data-ttu-id="48c01-141">Значение может также быть `null`; см. в разделе <xref:System.Windows.Markup.IProvideValueTarget>.</span><span class="sxs-lookup"><span data-stu-id="48c01-141">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="48c01-142">При использовании службы, особенно важно не может изменять объект, упоминаемый в <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> свойства или другие объекты, которые ссылается этот объект как свойства, которые не являются специально преобразования значений прописные вы обрабатываются.</span><span class="sxs-lookup"><span data-stu-id="48c01-142">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</span></span> <span data-ttu-id="48c01-143">Для WPF в частности, изменив целевой объект может вызвать непредвиденные изменения, которые сделают недействительными системе свойств WPF.</span><span class="sxs-lookup"><span data-stu-id="48c01-143">For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="48c01-144">Преобразователи типов или расширения разметки для XAML</span><span class="sxs-lookup"><span data-stu-id="48c01-144">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c01-145">Получает идентификатор сообщаемого целевого свойства.</span><span class="sxs-lookup"><span data-stu-id="48c01-145">Gets an identifier for the target property being reported.</span></span></summary>
        <value><span data-ttu-id="48c01-146">Идентификатор сообщаемого целевого свойства.</span><span class="sxs-lookup"><span data-stu-id="48c01-146">An identifier for the target property being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c01-147">Значение может также быть `null`; см. в разделе <xref:System.Windows.Markup.IProvideValueTarget>.</span><span class="sxs-lookup"><span data-stu-id="48c01-147">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="48c01-148">Примечания об использовании WPF</span><span class="sxs-lookup"><span data-stu-id="48c01-148">WPF Usage Notes</span></span>  
 <span data-ttu-id="48c01-149">Для свойства зависимостей, то служба по умолчанию WPF может возвратить <xref:System.Windows.DependencyProperty>, при котором преобразователь расширение или тип разметки можно использовать метаданные.</span><span class="sxs-lookup"><span data-stu-id="48c01-149">For a dependency property, the default WPF service may return a <xref:System.Windows.DependencyProperty>, such that the markup extension or type converter can use metadata.</span></span> <span data-ttu-id="48c01-150">В противном случае возвращается объект может быть <xref:System.Reflection.PropertyInfo> для свойства CLR.</span><span class="sxs-lookup"><span data-stu-id="48c01-150">Otherwise, the returned object can be a <xref:System.Reflection.PropertyInfo> for a CLR property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="48c01-151">Преобразователи типов или расширения разметки для XAML</span><span class="sxs-lookup"><span data-stu-id="48c01-151">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>