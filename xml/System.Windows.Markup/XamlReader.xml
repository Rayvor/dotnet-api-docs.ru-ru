<Type Name="XamlReader" FullName="System.Windows.Markup.XamlReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="345e4e2ab7ac8ee44489af7b153e295bd42c81fc" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75176552" /></Metadata><TypeSignature Language="C#" Value="public class XamlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader" />
  <TypeSignature Language="F#" Value="type XamlReader = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ac79f-101">Считывает входные данные XAML и создает граф объекта с использованием средства чтения XAML по умолчанию в составе WPF и соответствующего средства записи объектов XAML.</span><span class="sxs-lookup"><span data-stu-id="ac79f-101">Reads XAML input and creates an object graph, using the WPF default XAML reader and an associated XAML object writer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac79f-102">Синхронные <xref:System.Windows.Markup.XamlReader.Load%2A> методы являются статическими, но методы асинхронного <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> не являются статическими и нуждаются в использовании экземпляра класса <xref:System.Windows.Markup.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-102">The synchronous <xref:System.Windows.Markup.XamlReader.Load%2A> methods are static, but the asynchronous <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> methods are not static and require an instance of the <xref:System.Windows.Markup.XamlReader> class to use.</span></span>  
  
 <span data-ttu-id="ac79f-103">Выходные данные методов `Load` — это один объект, представляющий корневой объект созданного дерева объектов или графа объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-103">The output of the `Load` methods is a single object, which represents the root object of a created object tree or object graph.</span></span> <span data-ttu-id="ac79f-104">Графы объектов, созданные <xref:System.Windows.Markup.XamlReader>, обычно добавляются в существующее дерево объектов приложения WPF во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="ac79f-104">Object graphs that are created by <xref:System.Windows.Markup.XamlReader> are typically added to the existing object tree of a WPF application at run time.</span></span> <span data-ttu-id="ac79f-105">В противном случае новый граф объектов считается отключенным для модели приложения WPF.</span><span class="sxs-lookup"><span data-stu-id="ac79f-105">Otherwise the new object graph is considered disconnected for purposes of the WPF application model.</span></span> <span data-ttu-id="ac79f-106">Это означает, что он не отображается и недоступен с помощью любых методов дерева объектов, применяемых к главному дереву объектов приложения WPF (например, API-интерфейсы <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</span><span class="sxs-lookup"><span data-stu-id="ac79f-106">This means that it does not render, and cannot be accessed using any of the object tree techniques as applied to the WPF application's main object tree (for example, the APIs <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</span></span> <span data-ttu-id="ac79f-107">Дополнительные сведения об основных понятиях дерева объектов см. [в разделе деревья в WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="ac79f-107">For more information on object tree concepts, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 <span data-ttu-id="ac79f-108"><xref:System.Windows.Markup.XamlReader> поддерживает следующие основные сценарии.</span><span class="sxs-lookup"><span data-stu-id="ac79f-108"><xref:System.Windows.Markup.XamlReader> supports the following primary scenarios:</span></span>  
  
-   <span data-ttu-id="ac79f-109">**Клонирование или фабрика объектов**. без дополнительных механизмов ссылочный тип обычно не может включаться в несколько позиций в дереве объектов WPF.</span><span class="sxs-lookup"><span data-stu-id="ac79f-109">**Cloning/object factory**: Without additional mechanisms, a reference type generally cannot be included in more than one position in a WPF object tree.</span></span> <span data-ttu-id="ac79f-110">(Примеры дополнительных механизмов, которые предлагают поддержку для совместного использования или повторного использования в WPF, включают объекты, основанные на <xref:System.Windows.Freezable>, или поддержку общих объектов, таких как <xref:System.Windows.Media.Brush>, на которые ссылаются как на элемент из <xref:System.Windows.ResourceDictionary>.) Одним из способов клонирования объекта, который уже находится в дереве объектов, является сериализация объекта с помощью <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-110">(Examples of additional mechanisms that offer support for sharing or re-use in WPF include objects that are based on <xref:System.Windows.Freezable>, or support for commonly shareable objects such as <xref:System.Windows.Media.Brush> that are referenced as an item from a <xref:System.Windows.ResourceDictionary>.) One way to clone an object that is already in the object tree is to serialize the object using <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ac79f-111">Затем сериализованная строка используется в качестве входных данных для вызова <xref:System.Windows.Markup.XamlReader.Load%2A>с потоком или <xref:System.Xml.XmlReader> в качестве посредника.</span><span class="sxs-lookup"><span data-stu-id="ac79f-111">You then use the serialized string as input for a call to <xref:System.Windows.Markup.XamlReader.Load%2A>, with a stream or <xref:System.Xml.XmlReader> as an intermediary.</span></span>  
  
-   <span data-ttu-id="ac79f-112">**Создание объектов на основе JIT-информации**. часто существуют другие способы, с помощью которых с поздним связыванием или входными данными пользователь изменяет состояние существующих объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-112">**Constructing objects based on just-in-time information**: There are often other ways to have late-binding or user-supplied input change the state of existing objects.</span></span> <span data-ttu-id="ac79f-113">Например, можно использовать одно и то же значение для задания более одного свойства или использовать привязку данных.</span><span class="sxs-lookup"><span data-stu-id="ac79f-113">For example you could use the same value to set more than one property, or use data binding.</span></span> <span data-ttu-id="ac79f-114">Но если у вас есть сценарий, в котором даже тип создаваемого объекта определяется только во время выполнения или при взаимодействии с пользователем, создание такого объекта путем создания строки для <xref:System.Windows.Markup.XamlReader.Load%2A> входных данных часто является полезной методикой.</span><span class="sxs-lookup"><span data-stu-id="ac79f-114">But if you have a scenario where even the type of object to create is only determinable at run time or with user interaction, then creating such an object by building up a string for <xref:System.Windows.Markup.XamlReader.Load%2A> input is often a useful technique.</span></span>  
  
-   <span data-ttu-id="ac79f-115">**Использование существующих методов использования ресурсов**. тип <xref:System.IO.Stream> часто используется в других платформах или технологиях для передачи данных или объектов по границам приложений или в подобных ситуациях.</span><span class="sxs-lookup"><span data-stu-id="ac79f-115">**Using existing resource techniques**: The <xref:System.IO.Stream> type is used frequently in other frameworks or technologies for transferring data or objects across application boundaries or for similar situations.</span></span> <span data-ttu-id="ac79f-116">Затем можно использовать методы <xref:System.IO.Stream> для хранения или получения данных в формате XAML, которые в конечном итоге используются для создания объекта в составе приложения.</span><span class="sxs-lookup"><span data-stu-id="ac79f-116">You can then use the <xref:System.IO.Stream> techniques to store or obtain XAML-formatted data that you eventually use to create an object as part of your application.</span></span>  
  
-   <span data-ttu-id="ac79f-117">**Фиксированные документы:** Приложение может загружать локальные или загруженные документы XPS для включения в дерево объектов приложения WPF и пользовательский интерфейс.</span><span class="sxs-lookup"><span data-stu-id="ac79f-117">**Fixed documents:** Your application might load local or downloaded XPS documents for inclusion in a WPF application object tree and UI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ac79f-118">В этой документации иногда описывается граф объектов, а не дерево объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-118">This documentation sometimes describes an object graph, as opposed to an object tree.</span></span> <span data-ttu-id="ac79f-119">В отношении объектов времени выполнения приложения WPF времени выполнения не всегда существует иерархическая связь типа «родители-потомки», поэтому граф объектов — это более широко применяемая терминология.</span><span class="sxs-lookup"><span data-stu-id="ac79f-119">A strict parent-child relationship does not always exist in the run time object relationships of a run time WPF application, so an object graph is a more widely applicable terminology.</span></span> <span data-ttu-id="ac79f-120">Однако, поскольку WPF также включает два различных API-интерфейса для концептуального дерева (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>), метафора дерева по-прежнему применима к большинству реальных случаев в WPF.</span><span class="sxs-lookup"><span data-stu-id="ac79f-120">However, because WPF also includes two different tree conceptualization APIs (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) the tree metaphor still applies adequately to most real-world cases in WPF.</span></span> <span data-ttu-id="ac79f-121">С точки зрения языка XAML, граф объектов часто является лучшим способом подумать о том, как объекты создаются из XAML, поскольку сам язык XAML не обязательно указывает методологии вспомогательного класса, которые предоставляют отношения более в снова древовидная структура.</span><span class="sxs-lookup"><span data-stu-id="ac79f-121">From the XAML language perspective however, the object graph is often the best way to think about how objects are created out of XAML, because the XAML language itself does not necessarily specify helper class methodologies that bring the relationships more into a tree structure again.</span></span>  
  
## <a name="code-access-security-loose-xaml-and-xamlreader"></a><span data-ttu-id="ac79f-122">Безопасность доступа к коду, свободный XAML и XamlReader</span><span class="sxs-lookup"><span data-stu-id="ac79f-122">Code Access Security, Loose XAML, and XamlReader</span></span>  
 <span data-ttu-id="ac79f-123">XAML — это язык разметки, непосредственно представляющий создание и выполнение объекта.</span><span class="sxs-lookup"><span data-stu-id="ac79f-123">XAML is a markup language that directly represents object instantiation and execution.</span></span> <span data-ttu-id="ac79f-124">Таким образом, элементы, созданные в XAML, имеют такие же возможности взаимодействия с системными ресурсами (например, сетевой доступ и операции ввода-вывода файловой системы), как и эквивалентный созданный код.</span><span class="sxs-lookup"><span data-stu-id="ac79f-124">Therefore, elements created in XAML have the same ability to interact with system resources (network access, file system IO, for example) as the equivalent generated code does.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="ac79f-125">поддерживает [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)]платформы безопасности.</span><span class="sxs-lookup"><span data-stu-id="ac79f-125">supports the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] security framework [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)].</span></span> <span data-ttu-id="ac79f-126">Это означает, что содержимое [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], работающее в зоне Интернет, сократило разрешения исполнения.</span><span class="sxs-lookup"><span data-stu-id="ac79f-126">This means that [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content running in the internet zone has reduced execution permissions.</span></span> <span data-ttu-id="ac79f-127">"Свободный XAML" (страницы некомпилированного XAML, интерпретируемые во время загрузки средства просмотра XAML) и [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] обычно выполняются в этой Интернет-зоне и используют один набор разрешений.</span><span class="sxs-lookup"><span data-stu-id="ac79f-127">"Loose XAML" (pages of noncompiled XAML interpreted at load time by a XAML viewer) and [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] are usually run in this internet zone and use the same permission set.</span></span>  <span data-ttu-id="ac79f-128">Однако XAML, загруженный в полностью доверенное приложение, имеет такой же доступ к системным ресурсам, как ведущее приложение.</span><span class="sxs-lookup"><span data-stu-id="ac79f-128">However, XAML loaded in to a fully trusted application has the same access to the system resources as the hosting application does.</span></span> <span data-ttu-id="ac79f-129">Дополнительные сведения см. в разделе [Безопасность частичного доверия в WPF](~/docs/framework/wpf/wpf-partial-trust-security.md).</span><span class="sxs-lookup"><span data-stu-id="ac79f-129">For more information, see [WPF Partial Trust Security](~/docs/framework/wpf/wpf-partial-trust-security.md).</span></span>  
  
 <span data-ttu-id="ac79f-130">Влияние этих инструкций на <xref:System.Windows.Markup.XamlReader> заключается в том, что проект приложения должен принимать решения о доверии XAML, который вы решили загрузить.</span><span class="sxs-lookup"><span data-stu-id="ac79f-130">The implications of these statements for <xref:System.Windows.Markup.XamlReader> is that your application design must make trust decisions about the XAML you decide to load.</span></span> <span data-ttu-id="ac79f-131">Если вы загружаете код XAML, который не является доверенным, рассмотрите возможность реализации собственного метода "песочницы" для загрузки результирующего графа объекта.</span><span class="sxs-lookup"><span data-stu-id="ac79f-131">If you are loading XAML that is not trusted, consider implementing your own sandboxing technique for how you load the resulting object graph.</span></span>  
  
 <span data-ttu-id="ac79f-132"><xref:System.Windows.Markup.XamlReader> также может вызываться частично доверенным кодом.</span><span class="sxs-lookup"><span data-stu-id="ac79f-132"><xref:System.Windows.Markup.XamlReader> can also be called by partial trust code.</span></span> <span data-ttu-id="ac79f-133">В этом случае зона безопасности Интернета применяется для управления доступом для кода.</span><span class="sxs-lookup"><span data-stu-id="ac79f-133">In this case, Internet security zone is applied for code access security.</span></span> <span data-ttu-id="ac79f-134">Если в зоне безопасности Интернета все данные в загруженном коде XAML недопустимы, возникает исключение синтаксического анализа XAML.</span><span class="sxs-lookup"><span data-stu-id="ac79f-134">If anything in the loaded XAML is invalid under Internet security zone, a XAML parse exception is thrown.</span></span> <span data-ttu-id="ac79f-135">В XBAP и других случаях с частичным доверием на уровне платформы, где <xref:System.Windows.Markup.XamlReader> является частью выполнения, возникает то же поведение исключения, что и при явном вызове частичного доверия.</span><span class="sxs-lookup"><span data-stu-id="ac79f-135">Under XBAP and other cases that are partial trust at the platform level, where <xref:System.Windows.Markup.XamlReader> is part of the execution, you get the same exception behavior as with explicit partial trust calls.</span></span>  
  
## <a name="wpf-xaml-xaml-readerswriters-and-xaml-language-versioning"></a><span data-ttu-id="ac79f-136">XAML WPF, средства чтения и записи XAML и управление версиями на языке XAML</span><span class="sxs-lookup"><span data-stu-id="ac79f-136">WPF XAML, XAML Readers/Writers, and XAML Language Versioning</span></span>  
 <span data-ttu-id="ac79f-137">XAML2009 включает такие языковые функции, как [x:Reference](~/docs/framework/xaml-services/x-reference-markup-extension.md) и [x:FactoryMethod](~/docs/framework/xaml-services/x-factorymethod-directive.md).</span><span class="sxs-lookup"><span data-stu-id="ac79f-137">XAML2009 includes language features such as [x:Reference](~/docs/framework/xaml-services/x-reference-markup-extension.md) and [x:FactoryMethod](~/docs/framework/xaml-services/x-factorymethod-directive.md).</span></span> <span data-ttu-id="ac79f-138">Для загрузки XAML, использующего эти функции, можно использовать сигнатуры `Load` или `Parse`.</span><span class="sxs-lookup"><span data-stu-id="ac79f-138">You can use signatures of `Load` or `Parse` to load XAML that uses these features.</span></span> <span data-ttu-id="ac79f-139">Однако эти функции языка не поддерживаются для XAML, который должен быть скомпилирован в виде разметки (например, XAML для действия сборки **страницы** в приложении WPF или любого XAML, включающего в себя задачу компиляции разметки в действиях сборки).</span><span class="sxs-lookup"><span data-stu-id="ac79f-139">However, those language features are not supported for XAML that needs to be markup compiled (such as XAML for the **Page** build action in a WPF application, or any XAML that involves the markup compile task in the build actions).</span></span>  
  
 <span data-ttu-id="ac79f-140">Типы WPF и технология WPF в общих понятиях поддержки, основанных на доступе к внутренним компонентам WPF.</span><span class="sxs-lookup"><span data-stu-id="ac79f-140">WPF types and the WPF technology in general support concepts that rely on access to WPF internals.</span></span> <span data-ttu-id="ac79f-141">Например, как WPF реализует свойства зависимостей, полагается на внутренние методы для эффективного уточняющего запроса типа-члена.</span><span class="sxs-lookup"><span data-stu-id="ac79f-141">For instance, how WPF implements dependency properties relies on internal techniques for efficient type-member lookup.</span></span> <span data-ttu-id="ac79f-142">Доступ к этим внутренним данным включает API-интерфейсы чтения и записи XAML, предоставляемые в <xref:System.Windows.Markup.XamlWriter> и <xref:System.Windows.Markup.XamlReader> из пространства имен <xref:System.Windows.Markup> и сборки PresentationFramework.</span><span class="sxs-lookup"><span data-stu-id="ac79f-142">Access to these internals is enabled by the XAML reading and writing APIs provided in <xref:System.Windows.Markup.XamlWriter> and <xref:System.Windows.Markup.XamlReader> from the <xref:System.Windows.Markup> namespace and PresentationFramework assembly.</span></span> <span data-ttu-id="ac79f-143">Однако средства чтения и записи XAML нижнего уровня из сборки System. XAML (классы на основе <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) не имеют доступа к внутренним компонентам WPF.</span><span class="sxs-lookup"><span data-stu-id="ac79f-143">However, the lower-level XAML readers and XAML writers from the System.Xaml assembly (classes based on <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) do not have access to the WPF internals.</span></span> <span data-ttu-id="ac79f-144">Нет зависимости от System. XAML к какой-либо сборке, относящейся к WPF.</span><span class="sxs-lookup"><span data-stu-id="ac79f-144">There is no dependency from System.Xaml to any WPF-specific assembly.</span></span> <span data-ttu-id="ac79f-145">Без доступа к внутренним компонентам WPF средства чтения и записи System. XAML не могут правильно загружать или сохранять все типы WPF или типы, основанные на типах WPF.</span><span class="sxs-lookup"><span data-stu-id="ac79f-145">Without access to the WPF internals, System.Xaml readers and writers cannot correctly load or save all WPF types, or types based on WPF types.</span></span> <span data-ttu-id="ac79f-146">В частности, средства чтения и записи System. XAML не понимают таких концепций, как хранилище свойств зависимостей WPF, или все особенности того, как WPF использует стили, словари ресурсов и шаблоны.</span><span class="sxs-lookup"><span data-stu-id="ac79f-146">In particular, the System.Xaml readers and writers do not understand concepts such as the WPF dependency property backing property store, or all the specifics of how WPF uses styles, resource dictionaries and templates.</span></span> <span data-ttu-id="ac79f-147">Поэтому у вас есть возможность сделать следующее:</span><span class="sxs-lookup"><span data-stu-id="ac79f-147">Therefore you have a choice to make:</span></span>  
  
-   <span data-ttu-id="ac79f-148">Если вы загружаете типы WPF и (или) используете XAML в форме BAML, используйте средства чтения и записи XAML PresentationFramework.</span><span class="sxs-lookup"><span data-stu-id="ac79f-148">If you are loading WPF types, and/or you are using XAML in BAML form in any way, use the PresentationFramework XAML readers and XAML writers.</span></span>  
  
-   <span data-ttu-id="ac79f-149">Если вы не полагаетесь на типы WPF или форму BAML XAML, а также не используете другую конкретную технологию чтения XAML или реализацию модуля записи XAML по причинам, относящимся к этой платформе, используйте средства чтения и записи XAML System. XAML.</span><span class="sxs-lookup"><span data-stu-id="ac79f-149">If you are not relying on any WPF types or the BAML form of XAML, and are not using another specific technology's XAML reader or XAML writer implementation for reasons that are specific to that framework, use the System.Xaml XAML readers and XAML writers.</span></span>  
  
## <a name="systemxaml-backing-implementation-in-net-4"></a><span data-ttu-id="ac79f-150">Реализация резервного копирования System. XAML в .NET 4</span><span class="sxs-lookup"><span data-stu-id="ac79f-150">System.Xaml Backing Implementation in .NET 4</span></span>  
 <span data-ttu-id="ac79f-151"><xref:System.Windows.Markup.XamlReader> — это вызываемая поверхность API для средства синтаксического анализа XAML на уровне платформы WPF.</span><span class="sxs-lookup"><span data-stu-id="ac79f-151"><xref:System.Windows.Markup.XamlReader> is the callable API surface for the WPF framework-level XAML parser.</span></span> <span data-ttu-id="ac79f-152">То же самое базовое средство синтаксического анализа XAML также выполняет загрузку и синтаксический анализ XAML во время выполнения для приложений WPF, предназначенных для [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] и [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ac79f-152">The same underlying XAML parser also performs the run-time XAML loading and parsing for WPF applications that target [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span>  
  
 <span data-ttu-id="ac79f-153">Если вы нацелены на [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], внешний API будет одинаковым, но части реализации основаны на [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] общей реализации XAML в сборке System. XAML, которая улучшает многие технические и отчетные аспекты синтаксического анализа XAML.</span><span class="sxs-lookup"><span data-stu-id="ac79f-153">If you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the external API is the same, but parts of the implementation are built on the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] general XAML implementation in the System.Xaml assembly, which improves many of the technical and reporting aspects of parsing XAML.</span></span> <span data-ttu-id="ac79f-154">Нацеливание [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] обязательно влечет за собой включение System. XAML в качестве ссылки, а сведения о реализации, такие как сообщения о возникших исключениях, могут поступать из определенных типов System. XAML.</span><span class="sxs-lookup"><span data-stu-id="ac79f-154">Targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] necessarily entails including System.Xaml as a reference, and details of implementation such as the exceptions reported may come from System.Xaml defined types.</span></span>  
  
## Examples  
 <span data-ttu-id="ac79f-155">В следующем примере <xref:System.Windows.Controls.Button> преобразуется в строку с помощью класса <xref:System.Windows.Markup.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-155">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="ac79f-156">Затем строка загружается обратно в <xref:System.Windows.Controls.Button> с помощью статического метода <xref:System.Windows.Markup.XamlReader.Load%2A> в классе <xref:System.Windows.Markup.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-156">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac79f-157">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-157">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="xamlReader.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac79f-158">Прерывает текущую операцию асинхронной загрузки, если имеется отложенная асинхронная операция загрузки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-158">Aborts the current asynchronous load operation, if there is an asynchronous load operation pending.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac79f-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A> является асинхронной операцией; Поэтому может произойти некоторое количество загрузок до отмены операции.</span><span class="sxs-lookup"><span data-stu-id="ac79f-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A> is an asynchronous operation; therefore, some loading may occur before the operation is aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWpfSchemaContext">
      <MemberSignature Language="C#" Value="public static System.Xaml.XamlSchemaContext GetWpfSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.XamlSchemaContext GetWpfSchemaContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWpfSchemaContext () As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::XamlSchemaContext ^ GetWpfSchemaContext();" />
      <MemberSignature Language="F#" Value="static member GetWpfSchemaContext : unit -&gt; System.Xaml.XamlSchemaContext" Usage="System.Windows.Markup.XamlReader.GetWpfSchemaContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac79f-160">Возвращает объект <see cref="T:System.Xaml.XamlSchemaContext" />, который представляет параметры схемы контекста WPF для класса <see cref="T:System.Windows.Markup.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-160">Returns a <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></summary>
        <returns><span data-ttu-id="ac79f-161">Объект <see cref="T:System.Xaml.XamlSchemaContext" />, который представляет параметры контекста схемы WPF для класса <see cref="T:System.Windows.Markup.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-161">A <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac79f-162">Считывает входные данные XAML и возвращает корень соответствующего дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-162">Reads XAML input and returns the root of the corresponding object tree.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="ac79f-163">XAML для загрузки в форме потока.</span><span class="sxs-lookup"><span data-stu-id="ac79f-163">The XAML to load, in stream form.</span></span></param>
        <summary><span data-ttu-id="ac79f-164">Считывает входные данные XAML в указанном пространстве имен <see cref="T:System.IO.Stream" /> и возвращает корневой объект <see cref="T:System.Object" /> соответствующего дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-164">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an <see cref="T:System.Object" /> that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="ac79f-165">Объект в корне созданного дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-165">The object at the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ac79f-166">В следующем примере <xref:System.Windows.Controls.Button> сохраняется в <xref:System.IO.MemoryStream> с помощью класса <xref:System.Windows.Markup.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-166">The following example saves a <xref:System.Windows.Controls.Button> into a <xref:System.IO.MemoryStream> using the <xref:System.Windows.Markup.XamlWriter> class.</span></span> <span data-ttu-id="ac79f-167">Затем поток загружается обратно в <xref:System.Windows.Controls.Button> с помощью статического метода <xref:System.Windows.Markup.XamlReader.Load%2A> в классе <xref:System.Windows.Markup.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-167">The stream is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ac79f-168"><paramref name="stream" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-168"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XamlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xaml.XamlReader -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xaml.XamlReader" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ac79f-169">Объект <see cref="T:System.Xaml.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-169">A <see cref="T:System.Xaml.XamlReader" /> object.</span></span> <span data-ttu-id="ac79f-170">Ожидается, что он инициализируется входными данными XAML.</span><span class="sxs-lookup"><span data-stu-id="ac79f-170">This is expected to be initialized with input XAML.</span></span></param>
        <summary><span data-ttu-id="ac79f-171">Считывает входные данные XAML через предоставленный класс <see cref="T:System.Xaml.XamlReader" /> и возвращает корневой объект соответствующего дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-171">Reads the XAML input through a provided <see cref="T:System.Xaml.XamlReader" /> and returns an object that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="ac79f-172">Корневой объект созданного дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-172">The object that is the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac79f-173">Входные <xref:System.Xaml.XamlReader> можно <xref:System.Windows.Baml2006.Baml2006Reader>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-173">The input <xref:System.Xaml.XamlReader> can be <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span> <span data-ttu-id="ac79f-174">Таким способом можно загрузить BAML во время выполнения или для целей средства локализации.</span><span class="sxs-lookup"><span data-stu-id="ac79f-174">This is how you can load BAML at run time, or for localization tool purposes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ac79f-175"><paramref name="reader" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-175"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ac79f-176">Класс <see cref="T:System.Xml.XmlReader" />, который уже загрузил входные данные XAML, чтобы загрузить в XML-форму.</span><span class="sxs-lookup"><span data-stu-id="ac79f-176">The <see cref="T:System.Xml.XmlReader" /> that has already loaded the XAML input to load in XML form.</span></span></param>
        <summary><span data-ttu-id="ac79f-177">Считывает входные данные XAML в указанном классе <see cref="T:System.Xml.XmlReader" /> и возвращает корневой объект соответствующего дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-177">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns an object that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="ac79f-178">Корневой объект созданного дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-178">The object that is the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ac79f-179">В следующем примере <xref:System.Windows.Controls.Button> преобразуется в строку с помощью класса <xref:System.Windows.Markup.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-179">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="ac79f-180">Затем строка загружается обратно в <xref:System.Windows.Controls.Button> с помощью статического метода <xref:System.Windows.Markup.XamlReader.Load%2A> в классе <xref:System.Windows.Markup.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-180">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ac79f-181"><paramref name="reader" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-181"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream * System.Windows.Markup.ParserContext -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load (stream, parserContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="ac79f-182">Поток, содержащий входные данные XAML для загрузки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-182">The stream that contains the XAML input to load.</span></span></param>
        <param name="parserContext"><span data-ttu-id="ac79f-183">Контекстная информация, используемая анализатором.</span><span class="sxs-lookup"><span data-stu-id="ac79f-183">Context information used by the parser.</span></span></param>
        <summary><span data-ttu-id="ac79f-184">Считывает входные данные XAML в указанном классе <see cref="T:System.IO.Stream" /> и возвращает корневой объект соответствующего дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-184">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an object that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="ac79f-185">Корневой объект созданного дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-185">The object that is the root of the created object tree.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ac79f-186"><paramref name="stream" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-186"><paramref name="stream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ac79f-187">-или-</span><span class="sxs-lookup"><span data-stu-id="ac79f-187">-or-</span></span> 
 <span data-ttu-id="ac79f-188"><paramref name="parserContext" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-188"><paramref name="parserContext" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac79f-189">Считывает разметку XAML и возвращает объект, соответствующий корню указанной разметки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-189">Reads XAML markup and returns an object that corresponds to the root of the specified markup.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.IO.Stream -&gt; obj" Usage="xamlReader.LoadAsync stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="ac79f-190">Поток, содержащий загружаемые входные данные XAML.</span><span class="sxs-lookup"><span data-stu-id="ac79f-190">The stream containing the XAML input to load.</span></span></param>
        <summary><span data-ttu-id="ac79f-191">Считывает входные данные XAML в указанном классе <see cref="T:System.IO.Stream" /> и возвращает корневой объект соответствующего дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-191">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="ac79f-192">Корневой объект созданного дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-192">The object that is the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac79f-193">Асинхронная операция загрузки XAML сначала возвращает объект, являющийся только корневым объектом.</span><span class="sxs-lookup"><span data-stu-id="ac79f-193">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="ac79f-194">В асинхронном режиме синтаксический анализ XAML продолжится, а все дочерние объекты заполняются в корне.</span><span class="sxs-lookup"><span data-stu-id="ac79f-194">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="ac79f-195">Это отличается от типичного поведения обработки XAML WPF и его взаимодействия с концепциями WPF времени существования объекта.</span><span class="sxs-lookup"><span data-stu-id="ac79f-195">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="ac79f-196">В обычном (не асинхронном) взаимодействии все свойства объекта, включая все дочерние коллекции, заполняются перед возвратом элемента и передачей его как загруженного.</span><span class="sxs-lookup"><span data-stu-id="ac79f-196">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="ac79f-197">Это поведение соответствует методологии снизу вверх для создания дерева, в котором корневой объект является последним объектом, который должен стать доступным.</span><span class="sxs-lookup"><span data-stu-id="ac79f-197">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="ac79f-198">Как правило, возвращаемый объект назначается определенному расположению в дереве объектов приложения WPF с учетом того, что содержимое может по-прежнему заполняться и может вызвать добавочное обновление макета, если все содержимое предоставляется как часть пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="ac79f-198">You typically would assign the returned object to some location in your WPF application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="ac79f-199">По этой причине обычно выполняется изоляция или виртуализация любых асинхронно загруженных объектов из XAML и использование логики приложения или состояния приложения для уведомления об обработке <xref:System.Windows.Markup.XamlReader.LoadCompleted>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-199">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="ac79f-200">Чтобы <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> асинхронно загружать входные данные XAML, корневой элемент во входных данных XAML должен содержать атрибут и значение `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="ac79f-200">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML input must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="ac79f-201">Значение обрабатывается с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="ac79f-201">The value is treated as case sensitive.</span></span> <span data-ttu-id="ac79f-202">Если корневой вход XAML не содержит `x:SynchronousMode="Async"`, исключение не создается и вызов обрабатывается как синхронная нагрузка (см. <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span><span class="sxs-lookup"><span data-stu-id="ac79f-202">If the XAML input root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span></span>  
  
 <span data-ttu-id="ac79f-203">В каждый момент времени может выполняться только одна асинхронная операция загрузки на экземпляр класса <xref:System.Windows.Markup.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-203">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="ac79f-204">Если на одном экземпляре класса <xref:System.Windows.Markup.XamlReader> выполняется несколько асинхронных операций, создается <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-204">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ac79f-205"><paramref name="stream" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-205"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ac79f-206">Несколько операций загрузки с одним <see cref="T:System.Windows.Markup.XamlReader" /> параллельно поставлены в режим ожидания.</span><span class="sxs-lookup"><span data-stu-id="ac79f-206">Multiple load operations are pending concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadAsync (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.Xml.XmlReader -&gt; obj" Usage="xamlReader.LoadAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ac79f-207">Существующий класс <see cref="T:System.Xml.XmlReader" />, который уже загрузил/прочитал входные данные XAML.</span><span class="sxs-lookup"><span data-stu-id="ac79f-207">An existing  <see cref="T:System.Xml.XmlReader" /> that has already loaded/read the XAML input.</span></span></param>
        <summary><span data-ttu-id="ac79f-208">Считывает входные данные XAML в указанном классе <see cref="T:System.Xml.XmlReader" /> и возвращает корневой объект соответствующего дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-208">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="ac79f-209">Корневой объект созданного дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-209">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac79f-210">Асинхронная операция загрузки XAML сначала возвращает объект, являющийся только корневым объектом.</span><span class="sxs-lookup"><span data-stu-id="ac79f-210">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="ac79f-211">В асинхронном режиме синтаксический анализ XAML продолжится, а все дочерние объекты заполняются в корне.</span><span class="sxs-lookup"><span data-stu-id="ac79f-211">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="ac79f-212">Это отличается от типичного поведения обработки XAML WPF и его взаимодействия с концепциями WPF времени существования объекта.</span><span class="sxs-lookup"><span data-stu-id="ac79f-212">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="ac79f-213">В обычном (не асинхронном) взаимодействии все свойства объекта, включая все дочерние коллекции, заполняются перед возвратом элемента и передачей его как загруженного.</span><span class="sxs-lookup"><span data-stu-id="ac79f-213">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="ac79f-214">Это поведение соответствует методологии снизу вверх для создания дерева, в котором корневой объект является последним объектом, который должен стать доступным.</span><span class="sxs-lookup"><span data-stu-id="ac79f-214">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="ac79f-215">Как правило, возвращаемый объект назначается из <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> в какое-либо расположение в дереве объектов приложения с учетом того, что содержимое может заполняться и может вызвать добавочное обновление макета, если все содержимое предоставляется как часть пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="ac79f-215">You typically would assign the returned object from <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="ac79f-216">По этой причине обычно выполняется изоляция или виртуализация любых асинхронно загруженных объектов из XAML и использование логики приложения или состояния приложения для уведомления об обработке <xref:System.Windows.Markup.XamlReader.LoadCompleted>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-216">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="ac79f-217">Чтобы <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> асинхронно загружать входные данные XAML, корневой элемент в разметке XAML должен содержать атрибут и значение `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="ac79f-217">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="ac79f-218">Значение обрабатывается с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="ac79f-218">The value is treated as case sensitive.</span></span> <span data-ttu-id="ac79f-219">Если корень разметки XAML не содержит `x:SynchronousMode="Async"`, исключение не создается, а вызов обрабатывается как синхронная нагрузка (см. <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span><span class="sxs-lookup"><span data-stu-id="ac79f-219">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is instead processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span></span>  
  
 <span data-ttu-id="ac79f-220">В каждый момент времени может выполняться только одна асинхронная операция загрузки на экземпляр класса <xref:System.Windows.Markup.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-220">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="ac79f-221">Если на одном экземпляре класса <xref:System.Windows.Markup.XamlReader> выполняется несколько асинхронных операций, создается <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-221">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ac79f-222"><paramref name="reader" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-222"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ac79f-223">Несколько операций загрузки параллельно выполняется с одним <see cref="T:System.Windows.Markup.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-223">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.IO.Stream * System.Windows.Markup.ParserContext -&gt; obj" Usage="xamlReader.LoadAsync (stream, parserContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="ac79f-224">Поток, содержащий загружаемые входные данные XAML.</span><span class="sxs-lookup"><span data-stu-id="ac79f-224">A stream containing the XAML input to load.</span></span></param>
        <param name="parserContext"><span data-ttu-id="ac79f-225">Контекстная информация, используемая анализатором.</span><span class="sxs-lookup"><span data-stu-id="ac79f-225">Context information used by the parser.</span></span></param>
        <summary><span data-ttu-id="ac79f-226">Считывает входные данные XAML в указанном классе <see cref="T:System.IO.Stream" /> и возвращает корневой объект соответствующего дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-226">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="ac79f-227">Корневой объект созданного дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-227">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac79f-228">Асинхронная операция загрузки XAML сначала возвращает объект, являющийся только корневым объектом.</span><span class="sxs-lookup"><span data-stu-id="ac79f-228">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="ac79f-229">В асинхронном режиме синтаксический анализ XAML продолжится, а все дочерние объекты заполняются в корне.</span><span class="sxs-lookup"><span data-stu-id="ac79f-229">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="ac79f-230">Это отличается от типичного поведения обработки XAML WPF и его взаимодействия с концепциями WPF времени существования объекта.</span><span class="sxs-lookup"><span data-stu-id="ac79f-230">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="ac79f-231">В обычном (не асинхронном) взаимодействии все свойства объекта, включая все дочерние коллекции, заполняются перед возвратом элемента и передачей его как загруженного.</span><span class="sxs-lookup"><span data-stu-id="ac79f-231">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="ac79f-232">Это поведение соответствует методологии снизу вверх для создания дерева, в котором корневой объект является последним объектом, который должен стать доступным.</span><span class="sxs-lookup"><span data-stu-id="ac79f-232">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="ac79f-233">Как правило, возвращаемый объект назначается определенному расположению в дереве объектов вашего приложения, с учетом того, что содержимое может по-прежнему заполняться и может вызвать добавочное обновление макета, если все содержимое предоставляется как часть пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="ac79f-233">You typically would assign the returned object to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="ac79f-234">По этой причине обычно выполняется изоляция или виртуализация любых асинхронно загруженных объектов из XAML и использование логики приложения или состояния приложения для уведомления об обработке <xref:System.Windows.Markup.XamlReader.LoadCompleted>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-234">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="ac79f-235">Чтобы <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> загрузить разметку асинхронно, корневой элемент в разметке XAML должен содержать атрибут и значение `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="ac79f-235">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load markup asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="ac79f-236">Значение обрабатывается с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="ac79f-236">The value is treated as case sensitive.</span></span> <span data-ttu-id="ac79f-237">Если корень разметки XAML не содержит `x:SynchronousMode="Async"`, исключение не создается и вызов обрабатывается как синхронная нагрузка (см. <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span><span class="sxs-lookup"><span data-stu-id="ac79f-237">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span></span>  
  
 <span data-ttu-id="ac79f-238">В каждый момент времени может выполняться только одна асинхронная операция загрузки на экземпляр класса <xref:System.Windows.Markup.XamlReader>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-238">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="ac79f-239">Если на одном экземпляре класса <xref:System.Windows.Markup.XamlReader> выполняется несколько асинхронных операций, создается <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-239">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ac79f-240"><paramref name="stream" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-240"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ac79f-241">Несколько операций загрузки параллельно выполняется с одним <see cref="T:System.Windows.Markup.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="ac79f-241">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Markup.XamlReader.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As AsyncCompletedEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event LoadCompleted As AsyncCompletedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac79f-242">Происходит по завершении асинхронной операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-242">Occurs when an asynchronous load operation completes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac79f-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted> также возникает при прерывании асинхронной операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted> is also raised when an asynchronous load operation aborts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac79f-244">Считывает разметку в указанной текстовой строке и возвращает объект, соответствующий корню указанной разметки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-244">Reads the markup in the specified text string and returns an object that corresponds to the root of the specified markup.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xamlText As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; obj" Usage="System.Windows.Markup.XamlReader.Parse xamlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlText"><span data-ttu-id="ac79f-245">Введенное значение XAML как единственная текстовая строка.</span><span class="sxs-lookup"><span data-stu-id="ac79f-245">The input XAML, as a single text string.</span></span></param>
        <summary><span data-ttu-id="ac79f-246">Считывает входные данные XAML в указанной текстовой строке и возвращает объект, соответствующий корню указанной разметки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-246">Reads the XAML input in the specified text string and returns an object that corresponds to the root of the specified markup.</span></span></summary>
        <returns><span data-ttu-id="ac79f-247">Корневой объект созданного дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-247">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac79f-248">Реализация вызывает <xref:System.Windows.Markup.XamlReader.Load%2A> внутренне после создания потока из строки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-248">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="ac79f-249">Дополнительные сведения, например возможные исключения, см. в разделе <xref:System.Windows.Markup.XamlReader.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-249">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Windows.Markup.ParserContext -&gt; obj" Usage="System.Windows.Markup.XamlReader.Parse (xamlText, parserContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="xamlText"><span data-ttu-id="ac79f-250">Введенное значение XAML как единственная текстовая строка.</span><span class="sxs-lookup"><span data-stu-id="ac79f-250">The input XAML, as a single text string.</span></span></param>
        <param name="parserContext"><span data-ttu-id="ac79f-251">Контекстная информация, используемая анализатором.</span><span class="sxs-lookup"><span data-stu-id="ac79f-251">Context information used by the parser.</span></span></param>
        <summary><span data-ttu-id="ac79f-252">Считывает разметку XAML в указанной текстовой строке (используя указанный класс <see cref="T:System.Windows.Markup.ParserContext" />) и возвращает объект, соответствующий корню указанной разметки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-252">Reads the XAML markup in the specified text string (using a specified <see cref="T:System.Windows.Markup.ParserContext" />) and returns an object that corresponds to the root of the specified markup.</span></span></summary>
        <returns><span data-ttu-id="ac79f-253">Корневой объект созданного дерева объектов.</span><span class="sxs-lookup"><span data-stu-id="ac79f-253">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac79f-254">Реализация вызывает <xref:System.Windows.Markup.XamlReader.Load%2A> внутренне после создания потока из строки.</span><span class="sxs-lookup"><span data-stu-id="ac79f-254">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="ac79f-255">Дополнительные сведения, например возможные исключения, см. в разделе <xref:System.Windows.Markup.XamlReader.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="ac79f-255">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
