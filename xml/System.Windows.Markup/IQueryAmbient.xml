<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3fc4b5258dc07f4eadf8564b9485e2f54ccfd49e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69168431" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Запрашивает, должно ли заданное свойство в текущей области обрабатываться как свойство окружения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Цель механизма свойств окружения заключается в том, чтобы улучшить время синтаксического анализа путем формирования средства записи объектов XAML, чтобы избежать создания экземпляров определенных объектов, в случаях, когда известно, что объекты предназначены для значений, которые являются временными и не полезны для обычного времени выполнения. приклад. Как правило, Поиск XAML или обработка XAML для метода доступа get свойства должны создавать экземпляры таких объектов, чтобы заполнить представление графа объектов готовыми к использованию значениями.  
  
 <xref:System.Windows.Markup.IQueryAmbient>имеет один член: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient>— это параллельный механизм <xref:System.Windows.Markup.AmbientAttribute>. <xref:System.Windows.Markup.IQueryAmbient>является специализированным механизмом, который позволяет избежать использования отражения для определения информации, а также может задействовать ситуацию (данный объект может выбрать для `true` отчета `false` или <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>для), тогда как атрибут является статическим. анализ). <xref:System.Windows.Markup.AmbientAttribute>— Это общий механизм, который может использоваться модулями записи объектов XAML и, как правило, соотносится с выделенными свойствами <xref:System.Xaml.XamlMember.IsAmbient%2A> системы типов XAML и. <xref:System.Xaml.XamlType.IsAmbient%2A>  
  
## <a name="wpf-implementations-of-iqueryambient"></a>Реализации Икуерямбиент в WPF  
 В WPF <xref:System.Windows.Markup.IQueryAmbient> для процесса поиска по словарю ресурсов используется. Процесс уточняющего запроса возвращает последовательные `Resources` значения по всему логическому дереву WPF, работая в корне области действия ресурса до тех пор, пока не будет найден ключ или не будет определено, что ключ не существует в области. Как правило, это потребует создания экземпляра <xref:System.Windows.ResourceDictionary> каждого раза для получения результатов. Объявление содержимого `Resources` как окружения `Resources` до тех пор, пока EXISTS оптимизирует этот процесс поиска. В WPF этот интерфейс реализуется в следующих случаях:  
  
-   <xref:System.Windows.FrameworkElement>реализует <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> метод, `true` возвращающий для всех имен свойств <xref:System.Windows.FrameworkElement.Resources%2A> , если <xref:System.Windows.ResourceDictionary> он <xref:System.Windows.FrameworkElement.Resources%2A>содержит существующее значение для, и, если запрос не предназначен для самого свойства.  
  
-   <xref:System.Windows.Style>реализует тот же шаблон для <xref:System.Windows.Style.Resources%2A>.  
  
-   <xref:System.Windows.Application>реализует тот же шаблон для <xref:System.Windows.Application.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkContentElement>реализует тот же шаблон для <xref:System.Windows.FrameworkContentElement.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkTemplate>реализует тот же шаблон для <xref:System.Windows.FrameworkTemplate.Resources%2A>. Он также сообщает <xref:System.Windows.FrameworkTemplate.Template%2A> содержимое как внешнее, `false` но возвращает, если <xref:System.Windows.FrameworkTemplate.Template%2A> запрашивает себя.  
  
-   В каждом из этих случаев соответствующее `Resources` свойство (и <xref:System.Windows.FrameworkTemplate.Template%2A> <xref:System.Windows.Markup.AmbientAttribute>) является атрибутом. Типичное использование заключается в запросе свойств, которые не <xref:System.Windows.Markup.AmbientAttribute> являются свойствами с атрибутами объекта, определяющего интерфейс. Иными словами, если существует словарь ресурсов для обеспечения потенциального значения времени выполнения при создании графа объекта, любое другое свойство, кроме контейнера свойств словаря ресурсов, может рассматриваться как внешнее.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя свойства, состояние окружения которого необходимо проверить.</param>
        <summary>Запрашивает, можно ли считать заданное именованное свойство в текущей области свойством окружения.</summary>
        <returns>Значение <see langword="true" />, если запрашиваемое свойство можно считать свойством окружения; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
