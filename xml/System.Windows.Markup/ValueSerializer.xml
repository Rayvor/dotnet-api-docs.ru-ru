<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65a7488a614c640ae3cdd3cf8bb8adf47c3ea15d" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64994689" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <TypeSignature Language="F#" Value="type ValueSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4888b-101">Абстрактный класс, который определяет поведение преобразования сериализации из представления объекта.</span><span class="sxs-lookup"><span data-stu-id="4888b-101">Abstract class that defines conversion behavior for serialization from an object representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-102">Строка, возвращаемая преобразователем для сериализации, должна быть меньше потери, а преобразователь должен всегда возвращать одну и ту же строку для определенного значения.</span><span class="sxs-lookup"><span data-stu-id="4888b-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="4888b-103">Если преобразователь типов (производный <xref:System.ComponentModel.TypeConverter>от) не соответствует этим требованиям в своих `ConvertTo` реализациях для вывода строк, необходимо объявить пользовательское <xref:System.Windows.Markup.ValueSerializer> .</span><span class="sxs-lookup"><span data-stu-id="4888b-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="4888b-104">Либо должен соответствовать требованиям, либо null <xref:System.Windows.Markup.ValueSerializer> должен быть связан с типом. <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="4888b-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="4888b-105">Объект <xref:System.Windows.Markup.ValueSerializer> связан с типом путем <xref:System.Windows.Markup.ValueSerializerAttribute> применения атрибута.</span><span class="sxs-lookup"><span data-stu-id="4888b-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="4888b-106">Значение NULL <xref:System.Windows.Markup.ValueSerializer> указывает, что преобразователь типов должен игнорироваться при преобразовании преобразования в строку из графа объектов.</span><span class="sxs-lookup"><span data-stu-id="4888b-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4888b-107">Реализация метода <xref:System.Windows.Markup.ValueSerializer> должна избегать возникновения исключений.</span><span class="sxs-lookup"><span data-stu-id="4888b-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="4888b-108">Все исключения, которые вызываются, могут привести к завершению сериализации.</span><span class="sxs-lookup"><span data-stu-id="4888b-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="4888b-109"><xref:System.Windows.Markup.IValueSerializerContext>для и его API-интерфейсы <xref:System.ComponentModel.ITypeDescriptorContext> аналогичен для <xref:System.ComponentModel.TypeConverter>. <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="4888b-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="4888b-110"><xref:System.Windows.Markup.IValueSerializerContext> Фактически<xref:System.ComponentModel.ITypeDescriptorContext>наследует.</span><span class="sxs-lookup"><span data-stu-id="4888b-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="4888b-111">При вызове API производного класса вызывающий (обычно процесс сериализатора) передает контекст, который может предоставлять определенные службы. <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="4888b-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="4888b-112">Из- <xref:System.Windows.Markup.ValueSerializer> за общего руководства, которое не должно вызывать исключения.</span><span class="sxs-lookup"><span data-stu-id="4888b-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="4888b-113">Сбой возврата определенной службы из контекста не должен вызывать исключения.</span><span class="sxs-lookup"><span data-stu-id="4888b-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="4888b-114">В предыдущих версиях .NET Framework этот класс существовал в сборке, относящейся к WPF, WindowsBase.</span><span class="sxs-lookup"><span data-stu-id="4888b-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="4888b-115">В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]параметрнаходитсявсборкеSystem .XAML.<xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="4888b-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="4888b-116">Для получения дополнительной информации см. [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="4888b-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4888b-117">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-118">Тело этого конструктора пусто; <xref:System.Windows.Markup.ValueSerializer> класс не содержит значений, требующих инициализации.</span><span class="sxs-lookup"><span data-stu-id="4888b-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4888b-119">Строка, для которой требуется проверить возможность преобразования.</span><span class="sxs-lookup"><span data-stu-id="4888b-119">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="4888b-120">Контекстная информация, используемая при выполнении преобразования.</span><span class="sxs-lookup"><span data-stu-id="4888b-120">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="4888b-121">При переопределении в производном классе определяет, может ли указанный класс <see cref="T:System.String" /> быть преобразован в экземпляр типа, который поддерживается реализацией класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="4888b-122">Значение <see langword="true" />, если значение можно преобразовать; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-122"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-123">Базовая реализация всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="4888b-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4888b-124">Объект, для которого необходимо проверить возможность преобразования.</span><span class="sxs-lookup"><span data-stu-id="4888b-124">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="4888b-125">Контекстная информация, используемая при выполнении преобразования.</span><span class="sxs-lookup"><span data-stu-id="4888b-125">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="4888b-126">Если переопределено в производном классе, определяет, можно ли преобразовать указанный объект в <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="4888b-127">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false." /></span><span class="sxs-lookup"><span data-stu-id="4888b-127"><see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-128">Базовая реализация всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="4888b-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj&#xA;override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="valueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4888b-129">Преобразуемая строка.</span><span class="sxs-lookup"><span data-stu-id="4888b-129">The string to convert.</span></span></param>
        <param name="context"><span data-ttu-id="4888b-130">Контекстная информация, используемая при выполнении преобразования.</span><span class="sxs-lookup"><span data-stu-id="4888b-130">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="4888b-131">При переопределении в производном классе преобразует <see cref="T:System.String" /> в экземпляр типа, который поддерживает реализация <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="4888b-132">Новый экземпляр типа, который поддерживает реализация <see cref="T:System.Windows.Markup.ValueSerializer" />, на основе предоставленного <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-133">Базовая реализация всегда создает исключение.</span><span class="sxs-lookup"><span data-stu-id="4888b-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4888b-134"><paramref name="value" /> невозможно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="4888b-134"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="4888b-135">Избегайте возникновения исключений из реализаций.</span><span class="sxs-lookup"><span data-stu-id="4888b-135">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="4888b-136">См. раздел <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="valueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4888b-137">Объект, преобразуемый в строку.</span><span class="sxs-lookup"><span data-stu-id="4888b-137">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="4888b-138">Контекстная информация, используемая при выполнении преобразования.</span><span class="sxs-lookup"><span data-stu-id="4888b-138">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="4888b-139">Если переопределено в производном классе, преобразует указанный объект в <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="4888b-140">Представление строки указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="4888b-140">A string representation of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-141">Базовая реализация всегда создает исключение.</span><span class="sxs-lookup"><span data-stu-id="4888b-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4888b-142"><paramref name="value" /> невозможно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="4888b-142"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="4888b-143">Избегайте возникновения исключений из реализаций.</span><span class="sxs-lookup"><span data-stu-id="4888b-143">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="4888b-144">См. раздел <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="valueSerializer.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4888b-145">Объект, который не удалось преобразовать.</span><span class="sxs-lookup"><span data-stu-id="4888b-145">The object that could not be converted.</span></span></param>
        <summary><span data-ttu-id="4888b-146">Возвращает исключение, возникающее, если преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="4888b-146">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="4888b-147">Объект <see cref="T:System.Exception" /> для исключения, которое необходимо создать, если невозможно выполнить преобразование <see langword="ConvertFrom" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-148">Фактическое `throw` ключевое слово не вызывается этим методом, поэтому типичное использование — `throw GetConvertFromException` (с предоставленными параметрами).</span><span class="sxs-lookup"><span data-stu-id="4888b-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="4888b-149">Возвращается <xref:System.InvalidOperationException>конкретное исключение `value` , в котором передано сообщение об исключении.</span><span class="sxs-lookup"><span data-stu-id="4888b-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="4888b-150">Шаблон для использования такой же, как и для служебных программ <xref:System.ComponentModel.TypeConverter>исключений в.</span><span class="sxs-lookup"><span data-stu-id="4888b-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="valueSerializer.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="destinationType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4888b-151">Объект, который не удалось преобразовать.</span><span class="sxs-lookup"><span data-stu-id="4888b-151">The object that could not be converted.</span></span></param>
        <param name="destinationType"><span data-ttu-id="4888b-152">Тип, представляющий тип, в который осуществлялось преобразование.</span><span class="sxs-lookup"><span data-stu-id="4888b-152">A type that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="4888b-153">Возвращает исключение, возникающее, если преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="4888b-153">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="4888b-154">Объект <see cref="T:System.Exception" /> для исключения, которое необходимо создать, если невозможно выполнить преобразование <see langword="ConvertTo" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-155">Само `throw` ключевое слово не вызывается этим методом, поэтому обычно используется `throw GetConvertToException` (с `value` предоставленным параметром).</span><span class="sxs-lookup"><span data-stu-id="4888b-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="4888b-156">Возвращается <xref:System.InvalidOperationException>конкретное исключение `value` , в котором передано сообщение об исключении.</span><span class="sxs-lookup"><span data-stu-id="4888b-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="4888b-157">Шаблон для использования такой же, как и для служебных программ <xref:System.ComponentModel.TypeConverter>исключений в.</span><span class="sxs-lookup"><span data-stu-id="4888b-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4888b-158">Получает <see cref="T:System.Windows.Markup.ValueSerializer" /> для объекта.</span><span class="sxs-lookup"><span data-stu-id="4888b-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="4888b-159">Дескриптор свойства CLR сериализуемого свойства.</span><span class="sxs-lookup"><span data-stu-id="4888b-159">The CLR property descriptor for the property to be serialized.</span></span></param>
        <summary><span data-ttu-id="4888b-160">Получает класс <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для свойства, путем передачи свойству дескриптора свойства среды CLR.</span><span class="sxs-lookup"><span data-stu-id="4888b-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span></span></summary>
        <returns><span data-ttu-id="4888b-161">Сериализатор, связанный с заданным свойством.</span><span class="sxs-lookup"><span data-stu-id="4888b-161">The serializer associated with the specified property.</span></span> <span data-ttu-id="4888b-162">Может возвращать значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-162">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-163">Для свойства или для типа, используемого в качестве значения свойства, указывается путем <xref:System.Windows.Markup.ValueSerializerAttribute> применения атрибута к объявлению свойства или типа. <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="4888b-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="4888b-164">Метод — это служебный метод, считывающий сведения о системе типов CLR и возвращающий новый <xref:System.Windows.Markup.ValueSerializer> класс на основе атрибута, если он найден в свойстве, или значение, если оно найдено в типе свойства. <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A></span><span class="sxs-lookup"><span data-stu-id="4888b-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="4888b-165">`null`может возвращаться, если такой сериализатор не существует.</span><span class="sxs-lookup"><span data-stu-id="4888b-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="4888b-166">`null`также может возвращаться, если тип или свойство преднамеренно имеет атрибут со значением <xref:System.Windows.Markup.ValueSerializerAttribute>null.</span><span class="sxs-lookup"><span data-stu-id="4888b-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="4888b-167">Другой <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> поддерживаемый режим Возвращает внутренний `Convert` <xref:System.Windows.Markup.ValueSerializer> `TypeConverterValueSerializer` класс, который представляет собой реализацию, которая заключает в оболочку <xref:System.ComponentModel.TypeConverter> и преобразует методы в `Convert*String` методы (например, <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>вызывается с входными данными <xref:System.String> типа и преобразуется в. <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A></span><span class="sxs-lookup"><span data-stu-id="4888b-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="4888b-168">Это делается только в тех случаях, когда выполняются все перечисленные ниже условия.</span><span class="sxs-lookup"><span data-stu-id="4888b-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="4888b-169">Объект <xref:System.ComponentModel.TypeConverterAttribute> находится в соответствующем свойстве или в соответствующем типе свойства.</span><span class="sxs-lookup"><span data-stu-id="4888b-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="4888b-170">Указанное <xref:System.ComponentModel.TypeConverter> значение может быть успешно создано.</span><span class="sxs-lookup"><span data-stu-id="4888b-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="4888b-171">Возвращает значение для <xref:System.String> , называемое ссылкой на тип. <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> `true` <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="4888b-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="4888b-172">Возвращает значение для <xref:System.String> , называемое ссылкой на тип. <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType> `true` <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="4888b-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="4888b-173">Возвращает значение для <xref:System.String> , называемое ссылкой на тип. <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType> `true` <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="4888b-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4888b-174">Ниже приведены особые случаи: <xref:System.DateTime> типы <xref:System.Windows.Markup.DateTimeValueSerializer>возвращают; типы возвращают внутренний, но функциональный`StringValueSerializer`сериализатор (). <xref:System.String></span><span class="sxs-lookup"><span data-stu-id="4888b-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4888b-175">Свойство <paramref name="descriptor" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-175"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4888b-176">Тип, для которого требуется получить <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <summary><span data-ttu-id="4888b-177">Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для заданного типа.</span><span class="sxs-lookup"><span data-stu-id="4888b-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span></span></summary>
        <returns><span data-ttu-id="4888b-178">Сериализатор, связанный с заданным типом.</span><span class="sxs-lookup"><span data-stu-id="4888b-178">The serializer associated with the specified type.</span></span> <span data-ttu-id="4888b-179">Может возвращать значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-179">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-180">Тип для типа указывается путем <xref:System.Windows.Markup.ValueSerializerAttribute> применения атрибута к объявлению типа. <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="4888b-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="4888b-181">Метод — это служебный метод, считывающий сведения о системе типов CLR и возвращающий новый <xref:System.Windows.Markup.ValueSerializer> класс на основе атрибута, если он найден в указанном. `type` <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A></span><span class="sxs-lookup"><span data-stu-id="4888b-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="4888b-182">`null`может возвращаться, если такой сериализатор не существует.</span><span class="sxs-lookup"><span data-stu-id="4888b-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="4888b-183">`null`также может возвращаться, если тип намеренно имеет атрибут со значением <xref:System.Windows.Markup.ValueSerializerAttribute>null.</span><span class="sxs-lookup"><span data-stu-id="4888b-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="4888b-184">Другой <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> поддерживаемый режим Возвращает внутренний `Convert` <xref:System.Windows.Markup.ValueSerializer> `TypeConverterValueSerializer` класс, который представляет собой реализацию, которая заключает в оболочку <xref:System.ComponentModel.TypeConverter> и преобразует методы в `Convert*String` методы (например, <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>вызывается с входными данными <xref:System.String> типа и преобразуется в. <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A></span><span class="sxs-lookup"><span data-stu-id="4888b-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="4888b-185">Это делается только в тех случаях, когда выполняются все перечисленные ниже условия.</span><span class="sxs-lookup"><span data-stu-id="4888b-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="4888b-186">Объект <xref:System.ComponentModel.TypeConverterAttribute> найден в `type`.</span><span class="sxs-lookup"><span data-stu-id="4888b-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="4888b-187">Указанное <xref:System.ComponentModel.TypeConverter> значение может быть успешно создано.</span><span class="sxs-lookup"><span data-stu-id="4888b-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="4888b-188">Возвращает значение для <xref:System.String> , называемое ссылкой на тип. <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> `true` <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="4888b-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="4888b-189">Возвращает значение для <xref:System.String> , называемое ссылкой на тип. <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType> `true` <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="4888b-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="4888b-190">Возвращает значение для <xref:System.String> , называемое ссылкой на тип. <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType> `true` <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="4888b-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4888b-191">Ниже приведены особые случаи: <xref:System.DateTime> типы <xref:System.Windows.Markup.DateTimeValueSerializer>возвращают; типы возвращают внутренний, но функциональный`StringValueSerializer`сериализатор (). <xref:System.String></span><span class="sxs-lookup"><span data-stu-id="4888b-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4888b-192"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-192"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (descriptor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="4888b-193">Дескриптор сериализуемого свойства.</span><span class="sxs-lookup"><span data-stu-id="4888b-193">Descriptor for the property to be serialized.</span></span></param>
        <param name="context"><span data-ttu-id="4888b-194">Контекстная информация, используемая при выполнении преобразования.</span><span class="sxs-lookup"><span data-stu-id="4888b-194">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="4888b-195">Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для заданного свойства с использованием заданного контекста.</span><span class="sxs-lookup"><span data-stu-id="4888b-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="4888b-196">Сериализатор, связанный с заданным свойством.</span><span class="sxs-lookup"><span data-stu-id="4888b-196">The serializer associated with the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-197">Вместо того чтобы полагаться исключительно на атрибуты, переданные в системе типов CLR, эта `context` перегрузка использует в качестве службы и вызывает <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>реализацию службы.</span><span class="sxs-lookup"><span data-stu-id="4888b-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4888b-198">Реализация обычно также полагается `descriptor`на, но может реализовать специальное поведение для определенных контекстов. <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4888b-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="4888b-199">Этот метод должен вызываться, когда вызывающий объект имеет <xref:System.Windows.Markup.IValueSerializerContext> доступ из службы.</span><span class="sxs-lookup"><span data-stu-id="4888b-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="4888b-200">Это обеспечит правильность <xref:System.Windows.Markup.ValueSerializer> возврата для конкретного контекста.</span><span class="sxs-lookup"><span data-stu-id="4888b-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="4888b-201">Если `null` контекст возвращается `descriptor` <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> в соответствии с указанным параметром или если контекст `null`указан, то поведение идентично вызову <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="4888b-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4888b-202">Свойство <paramref name="descriptor" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-202"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4888b-203">Тип, для которого требуется получить <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <param name="context"><span data-ttu-id="4888b-204">Контекстная информация, используемая при выполнении преобразования.</span><span class="sxs-lookup"><span data-stu-id="4888b-204">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="4888b-205">Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для заданного типа с использованием заданного контекста.</span><span class="sxs-lookup"><span data-stu-id="4888b-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="4888b-206">Сериализатор, связанный с заданным типом.</span><span class="sxs-lookup"><span data-stu-id="4888b-206">The serializer associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-207">Вместо того чтобы полагаться исключительно на атрибуты, переданные в системе типов CLR, эта `context` перегрузка использует в качестве службы и вызывает <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>реализацию службы.</span><span class="sxs-lookup"><span data-stu-id="4888b-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4888b-208">Реализация обычно также полагается `type`на, но может реализовать специальное поведение для определенных контекстов. <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4888b-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="4888b-209">Этот метод должен вызываться, когда вызывающий объект имеет <xref:System.Windows.Markup.IValueSerializerContext> доступ из службы.</span><span class="sxs-lookup"><span data-stu-id="4888b-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="4888b-210">Это обеспечит правильность <xref:System.Windows.Markup.ValueSerializer> возврата для конкретного контекста.</span><span class="sxs-lookup"><span data-stu-id="4888b-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="4888b-211">Если `null` контекст возвращается `type` <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> в соответствии с указанным параметром или если контекст `null`указан, то поведение идентично вызову <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="4888b-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4888b-212">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-212"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;&#xA;override this.TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;" Usage="valueSerializer.TypeReferences (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4888b-213">Сериализуемое значение.</span><span class="sxs-lookup"><span data-stu-id="4888b-213">The value being serialized.</span></span></param>
        <param name="context"><span data-ttu-id="4888b-214">Контекстная информация, используемая при выполнении преобразования.</span><span class="sxs-lookup"><span data-stu-id="4888b-214">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="4888b-215">Получает перечисление типов, на которые ссылается <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="4888b-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></summary>
        <returns><span data-ttu-id="4888b-216">Типы, преобразуемые данным сериализатором.</span><span class="sxs-lookup"><span data-stu-id="4888b-216">The types converted by this serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4888b-217">Все типы, <xref:System.Windows.Markup.ValueSerializer> преобразованные в, должны включаться в возвращаемое перечисление.</span><span class="sxs-lookup"><span data-stu-id="4888b-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="4888b-218">Это позволяет сериализатору убедиться, что у десериализатора достаточно сведений о типах, которые преобразует этот сериализатор.</span><span class="sxs-lookup"><span data-stu-id="4888b-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="4888b-219">Переопределение этого метода является расширенным сценарием.</span><span class="sxs-lookup"><span data-stu-id="4888b-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="4888b-220">Переопределение необходимо только в том случае, если вы реализуете систему, в которой связи свойств системы типов CLR, доступные для контекста схемы XAML, не сообщают о достаточной информации.</span><span class="sxs-lookup"><span data-stu-id="4888b-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="4888b-221">Примечания об использовании WPF</span><span class="sxs-lookup"><span data-stu-id="4888b-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="4888b-222">Система свойств реализует сериализатор внутренних значений, переопределяющий <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> , так как свойство зависимостей имеет концепцию, которая может добавлять владельцев. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4888b-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="4888b-223">выражения также имеют специальную внутреннюю обработку.</span><span class="sxs-lookup"><span data-stu-id="4888b-223">expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>