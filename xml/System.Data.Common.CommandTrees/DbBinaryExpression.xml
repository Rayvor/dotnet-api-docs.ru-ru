<Type Name="DbBinaryExpression" FullName="System.Data.Common.CommandTrees.DbBinaryExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="178d3a491879b38bda0bde96b07765d67fc4e139" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63862038" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbBinaryExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbBinaryExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbBinaryExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbBinaryExpression abstract : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbBinaryExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Реализует базовую функциональность, необходимую выражениям, принимающим два операнда-выражения.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Left" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Left { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее левый аргумент.</summary>
        <value>Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее левый аргумент.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если установлено свойство <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A>, производные типы выражений могут выполнять более строгую проверку типов. Например, левое выражение объекта <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> должно иметь результирующий тип «коллекция», а выражение <xref:System.Data.Common.CommandTrees.DbAndExpression> — логический тип. Обычно производные типы выражений не позволяют задавать для <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> выражение с типом результатов, который отличается от типа результатов текущего значения и не может быть повышен до него.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Выражение имеет вид <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Выражение не связано с деревом команд выражения <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />, 
или его результирующий тип не совпадает с типом, необходимым для левого аргумента, и не может быть повышен до нужного типа.</exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Right" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Right { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее правый аргумент.</summary>
        <value>Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее правый аргумент.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если установлено свойство <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A>, производные типы выражений могут выполнять более строгую проверку типов. Например, правое выражение объекта <xref:System.Data.Common.CommandTrees.DbUnionAllExpression> должно иметь результирующий тип «коллекция», а выражение <xref:System.Data.Common.CommandTrees.DbAndExpression> — логический тип. Обычно производные типы выражений не позволяют задавать для <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> выражение с типом результатов, который отличается от типа результатов текущего значения и не может быть повышен до него.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Выражение имеет вид <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Выражение не связано с деревом команд выражения <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />, 
или его результирующий тип не совпадает с типом, необходимым для правого аргумента, и не может быть повышен до нужного типа.</exception>
      </Docs>
    </Member>
  </Members>
</Type>