<Type Name="DbComparisonExpression" FullName="System.Data.Common.CommandTrees.DbComparisonExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ce189a4aadf7f3c320f2c9da39e6f0a2757fe81" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70642636" /></Metadata><TypeSignature Language="C#" Value="public sealed class DbComparisonExpression : System.Data.Common.CommandTrees.DbBinaryExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbComparisonExpression extends System.Data.Common.CommandTrees.DbBinaryExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbComparisonExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbComparisonExpression&#xA;Inherits DbBinaryExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbComparisonExpression sealed : System::Data::Common::CommandTrees::DbBinaryExpression" />
  <TypeSignature Language="F#" Value="type DbComparisonExpression = class&#xA;    inherit DbBinaryExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbBinaryExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8eda0-101">Представляет собой операцию сравнения, применяемую к двум аргументам.</span><span class="sxs-lookup"><span data-stu-id="8eda0-101">Represents a comparison operation applied to two arguments.</span></span> <span data-ttu-id="8eda0-102">«Равно», «больше чем», «больше или равно», «меньше чем», «меньше или равно», «не равно» — все это операторы сравнения.</span><span class="sxs-lookup"><span data-stu-id="8eda0-102">Equality, greater than, greater than or equal, less than, less than or equal, and inequality are comparison operations.</span></span> <span data-ttu-id="8eda0-103">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="8eda0-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8eda0-104">Аргументы класса <xref:System.Data.Common.CommandTrees.DbComparisonExpression> должны иметь общий тип результатов.</span><span class="sxs-lookup"><span data-stu-id="8eda0-104">The <xref:System.Data.Common.CommandTrees.DbComparisonExpression> class requires that its arguments have a common result type.</span></span> <span data-ttu-id="8eda0-105">Этот тип результата должен быть сравним по равенству с помощью операторов <xref:System.Data.Common.CommandTrees.DbExpressionKind.Equals> и <xref:System.Data.Common.CommandTrees.DbExpressionKind.NotEquals>, сравним по порядку с помощью операторов <xref:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan> и <xref:System.Data.Common.CommandTrees.DbExpressionKind.LessThan>, а также с помощью обоих операторов <xref:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals> и <xref:System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals>.</span><span class="sxs-lookup"><span data-stu-id="8eda0-105">This result type must be equality comparable for <xref:System.Data.Common.CommandTrees.DbExpressionKind.Equals> and <xref:System.Data.Common.CommandTrees.DbExpressionKind.NotEquals>; order comparable for <xref:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan> and <xref:System.Data.Common.CommandTrees.DbExpressionKind.LessThan>; and both for <xref:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals> and <xref:System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbComparisonExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor"><span data-ttu-id="8eda0-106">Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span><span class="sxs-lookup"><span data-stu-id="8eda0-106">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></param>
        <summary><span data-ttu-id="8eda0-107">Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.</span><span class="sxs-lookup"><span data-stu-id="8eda0-107">Implements the visitor pattern for expressions that do not produce a result value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8eda0-108">Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8eda0-108"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbComparisonExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="8eda0-109">Тип результата, формируемого <paramref name="visitor" />.</span><span class="sxs-lookup"><span data-stu-id="8eda0-109">The type of the result produced by <paramref name="visitor" />.</span></span></typeparam>
        <param name="visitor"><span data-ttu-id="8eda0-110">Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.</span><span class="sxs-lookup"><span data-stu-id="8eda0-110">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span></span></param>
        <summary><span data-ttu-id="8eda0-111">Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.</span><span class="sxs-lookup"><span data-stu-id="8eda0-111">Implements the visitor pattern for expressions that produce a result value of a specific type.</span></span></summary>
        <returns><span data-ttu-id="8eda0-112">Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span><span class="sxs-lookup"><span data-stu-id="8eda0-112">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8eda0-113"><paramref name="visitor" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8eda0-113"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
