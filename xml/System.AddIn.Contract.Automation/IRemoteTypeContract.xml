<Type Name="IRemoteTypeContract" FullName="System.AddIn.Contract.Automation.IRemoteTypeContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="050f97413cac0118924cab670320722abd411931" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69343252" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteTypeContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteTypeContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteTypeContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteTypeContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteTypeContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5d6e1-101">Определяет контракт, который может использоваться компонентами для доступа к информации о типе и для вызова элементов через границы домена приложения и процесса.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-101">Defines a contract that components can use to access type information and invoke members across application domain and process boundaries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d6e1-102">Чтобы получить <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>, компоненты могут <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> вызывать метод объекта, реализующего <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-102">To get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>, components can call the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of an object that implements the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.</span></span>  
  
 <span data-ttu-id="5d6e1-103">Чтобы получить сведения о типе объекта, компоненты вызывают <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-103">To get information about the type of an object, components call the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A> method.</span></span>  
  
 <span data-ttu-id="5d6e1-104">Чтобы получить сведения об элементах объекта, компоненты вызывают один из методов, который возвращает сведения о конкретном типе элемента.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-104">To get information about the members of an object, components call one of the methods that returns information about a particular kind of member.</span></span> <span data-ttu-id="5d6e1-105">Например, чтобы получить сведения о событиях объекта, компоненты могут использовать <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A> метод или. <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A></span><span class="sxs-lookup"><span data-stu-id="5d6e1-105">For example, to get information about the events of an object, components can use the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A> or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> method.</span></span>  
  
 <span data-ttu-id="5d6e1-106">Для вызова члена объекта компоненты используют <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-106">To invoke a member of an object, components use the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCanonicalName">
      <MemberSignature Language="C#" Value="public string GetCanonicalName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCanonicalName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCanonicalName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCanonicalName();" />
      <MemberSignature Language="F#" Value="abstract member GetCanonicalName : unit -&gt; string" Usage="iRemoteTypeContract.GetCanonicalName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d6e1-107">Возвращает каноническое имя текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-107">Returns the canonical name of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-108">Каноническое имя текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-108">The canonical name of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d6e1-109">Каноническое имя — это глобально уникальное имя, например полное имя типа.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-109">The canonical name is a globally unique name, such as a fully qualified type name.</span></span> <span data-ttu-id="5d6e1-110">Строки в \< *имени сборки*формата >, \< *полное имя типа*> рекомендуется для управляемых типов.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-110">Strings in the format \<*assembly name*>, \<*fully qualified type name*> are recommended for managed types.</span></span> <span data-ttu-id="5d6e1-111">Для типов COM рекомендуется \<использовать строки в *имени библиотеки типов*форматов >, \< *Type Name*>.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-111">Strings in the format \<*type library name*>, \<*type name*> are recommended for COM types.</span></span>  
  
 <span data-ttu-id="5d6e1-112">Не изменяйте каноническое имя для типа после публикации типа.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-112">Do not change the canonical name for a type after the type is published.</span></span> <span data-ttu-id="5d6e1-113">Изменение канонического имени для типа в следующей версии компонента нарушает совместимость компонента и клиентов, которые уже используют этот тип.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-113">Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteEventInfoContract ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : string * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Automation.IRemoteEventInfoContract" Usage="iRemoteTypeContract.GetEvent (name, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteEventInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5d6e1-114">Имя события текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-114">The name of an event of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-115">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска события.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-115">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the event.</span></span></param>
        <summary><span data-ttu-id="5d6e1-116">Возвращает <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" />, обеспечивающий доступ к указанному событию текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-116">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> that provides access to a specified event of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-117"><see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" />, обеспечивающий доступ к указанному событию, если найден; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-117">An <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> that provides access to the specified event, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteEventInfoContract ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt;" Usage="iRemoteTypeContract.GetEvents bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-118">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска событий.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-118">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the events.</span></span></param>
        <summary><span data-ttu-id="5d6e1-119">Возвращает коллекцию объектов <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" />, обеспечивающих доступ к указанным событиям текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-119">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> objects that provides access to the specified events of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-120"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> объектов <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" />, обеспечивающее доступ к событиям, соответствующим выбранным ограничениям привязки; в противном случае — пустой <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-120">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> objects that provides access to the events that match the specified binding constraints; otherwise, an empty <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Automation.IRemoteFieldInfoContract" Usage="iRemoteTypeContract.GetField (name, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteFieldInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5d6e1-121">Имя поля текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-121">The name of a field of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-122">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска поля.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-122">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the field.</span></span></param>
        <summary><span data-ttu-id="5d6e1-123">Возвращает <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" />, обеспечивающий доступ к указанному полю текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-123">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> that provides access to a specified field of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-124"><see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" />, обеспечивающий доступ к указанному полю, если найден; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-124">An <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> that provides access to the specified field, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt;" Usage="iRemoteTypeContract.GetFields bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-125">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска полей.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-125">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the fields.</span></span></param>
        <summary><span data-ttu-id="5d6e1-126">Возвращает коллекцию объектов <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" />, обеспечивающую доступ к указанным полям текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-126">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> objects that provides access to the specified fields of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-127"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> объектов <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" />, обеспечивающее доступ к полям, соответствующим выбранным ограничениям привязки; в противном случае — пустой <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-127">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> objects that provides access to the fields that match the specified binding constraints; otherwise, an empty <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (canonicalName As String) As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetInterface(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member GetInterface : string -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteTypeContract.GetInterface canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName"><span data-ttu-id="5d6e1-128">Каноническое имя интерфейса, который реализуется текущим <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-128">The canonical name of an interface that is implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <summary><span data-ttu-id="5d6e1-129">Возвращает интерфейс, который реализуется текущим <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-129">Returns an interface that is implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-130">Объект <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, представляющий интерфейс с указанным каноническим именем, реализуемым <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-130">An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that represents the interface with the specified canonical name that this <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> implements.</span></span> <span data-ttu-id="5d6e1-131">Значение <see langword="null" />, если этот объект <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> не реализует интерфейс с указанным каноническим именем.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-131"><see langword="null" /> if this <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> does not implement an interface with the specified canonical name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d6e1-132">Каноническое имя — это глобально уникальное имя, например GUID.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-132">A canonical name is a globally unique name, such as a GUID.</span></span> <span data-ttu-id="5d6e1-133">Строки в \< *имени сборки*формата >, \< *полное имя типа*> рекомендуется для управляемых типов.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-133">Strings in the format \<*assembly name*>, \<*fully qualified type name*> are recommended for managed types.</span></span> <span data-ttu-id="5d6e1-134">Для типов COM рекомендуется \<использовать строки в *имени библиотеки типов*форматов >, \< *Type Name*>.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-134">Strings in the format \<*type library name*>, \<*type name*> are recommended for COM types.</span></span>  
  
 <span data-ttu-id="5d6e1-135">Не изменяйте каноническое имя для типа после публикации типа.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-135">Do not change the canonical name for a type after the type is published.</span></span> <span data-ttu-id="5d6e1-136">Изменение канонического имени для типа в следующей версии компонента нарушает совместимость компонента и клиентов, которые уже используют этот тип.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-136">Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaces () As IArrayContract(Of IRemoteTypeContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ GetInterfaces();" />
      <MemberSignature Language="F#" Value="abstract member GetInterfaces : unit -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" Usage="iRemoteTypeContract.GetInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d6e1-137">Возвращает интерфейсы, которые реализуются текущим <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-137">Returns the interfaces that are implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-138"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> объектов <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, представляющее все интерфейсы, которые реализуются текущим <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-138">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objects that represent all the interfaces that are implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMember(string name, valuetype System.Reflection.MemberTypes memberTypes, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes memberTypes, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.MemberTypes * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;" Usage="iRemoteTypeContract.GetMember (name, memberTypes, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="memberTypes" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5d6e1-139">Имя элемента текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-139">The name of a member of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span> <span data-ttu-id="5d6e1-140">Имя может представлять несколько элементов с одним и тем же именем.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-140">The name can represent multiple members that have the same name.</span></span></param>
        <param name="memberTypes"><span data-ttu-id="5d6e1-141">Битовая комбинация значений <see cref="T:System.Reflection.MemberTypes" />, указывающая элементы для поиска.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-141">A bitwise combination of the <see cref="T:System.Reflection.MemberTypes" /> values that specifies the members to search for.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-142">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска элементов.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-142">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the members.</span></span></param>
        <summary><span data-ttu-id="5d6e1-143">Возвращает коллекцию объектов <see cref="T:System.AddIn.Contract.IContract" />, обеспечивающую с помощью указанных ограничений привязки доступ ко всем указанным элементам указанного типа элемента в текущем <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-143">Returns a collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that provides access to all the specified members of the specified member type in the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, using the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-144"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> объектов <see cref="T:System.AddIn.Contract.IContract" />, представляющее элементы текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> с указанными именами и отвечающие условиям, указанным параметрами <paramref name="memberTypes" /> и <paramref name="bindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-144">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.IContract" /> objects that represent the members of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that have the specified name and that meet the criteria specified by the <paramref name="memberTypes" /> and <paramref name="bindingFlags" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d6e1-145">Этот метод можно использовать для получения одного члена или для получения нескольких членов с одинаковыми именами, например конструкторов или перегрузок методов.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-145">This method can be used to get a single member, or to get multiple members that have the same name, such as constructor or method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMembers (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMembers(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;" Usage="iRemoteTypeContract.GetMembers bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-146">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска элементов.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-146">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the members.</span></span></param>
        <summary><span data-ttu-id="5d6e1-147">Возвращает коллекцию объектов <see cref="T:System.AddIn.Contract.IContract" />, обеспечивающую доступ ко всем элементам текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, соответствующим указанным ограничениями привязки.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-147">Returns a collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that provides access to all the members in the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that match the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-148"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> объектов <see cref="T:System.AddIn.Contract.IContract" />, предоставляющее доступ к элементам текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, соответствующим указанным ограничениями привязки.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-148">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.IContract" /> objects that provides access to the members of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that meet the specified binding constraints.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; -&gt; System.AddIn.Contract.Automation.IRemoteMethodInfoContract" Usage="iRemoteTypeContract.GetMethod (name, bindingFlags, remoteTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteMethodInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5d6e1-149">Имя метода текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-149">The name of a method of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-150">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска метода.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-150">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the method.</span></span></param>
        <param name="remoteTypes"><span data-ttu-id="5d6e1-151"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> объектов <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, представляющих число, порядок и тип параметров для метода, который необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-151">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objects that represent the number, order, and type of the parameters for the method to get.</span></span></param>
        <summary><span data-ttu-id="5d6e1-152">Возвращает <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />, обеспечивающий доступ к указанному методу текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-152">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> that provides access to a specified method of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-153"><see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />, обеспечивающий доступ к указанному методу, если найден; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-153">An <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> that provides access to the specified method, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt;" Usage="iRemoteTypeContract.GetMethods bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-154">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска методов.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-154">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the methods.</span></span></param>
        <summary><span data-ttu-id="5d6e1-155">Возвращает коллекцию объектов <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />, обеспечивающую доступ к указанным методам текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-155">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> objects that provides access to the specified methods of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-156"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> объектов <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />, обеспечивающее доступ к методам, соответствующим выбранным ограничениям привязки.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-156">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> objects that provides access to the methods that match the specified binding constraints.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt;" Usage="iRemoteTypeContract.GetProperties bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-157">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска свойств.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-157">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the properties.</span></span></param>
        <summary><span data-ttu-id="5d6e1-158">Возвращает коллекцию объектов <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" />, обеспечивающую доступ к указанным свойствам текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-158">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> objects that provides access to the specified properties of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-159"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> объектов <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" />, обеспечивающее доступ к свойствам, соответствующим выбранным ограничениям привязки.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-159">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> objects that provides access to the properties that match the specified binding constraints.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteTypeContract ^ remoteReturnType, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.AddIn.Contract.Automation.IRemoteTypeContract * System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; -&gt; System.AddIn.Contract.Automation.IRemotePropertyInfoContract" Usage="iRemoteTypeContract.GetProperty (name, bindingFlags, remoteReturnType, remoteTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemotePropertyInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteReturnType" Type="System.AddIn.Contract.Automation.IRemoteTypeContract" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5d6e1-160">Имя свойства текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-160">The name of a property of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-161">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска метода.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-161">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the method.</span></span></param>
        <param name="remoteReturnType"><span data-ttu-id="5d6e1-162"><see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, указывающий возвращаемый тип свойства.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-162">An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that specifies the return type of the property.</span></span></param>
        <param name="remoteTypes"><span data-ttu-id="5d6e1-163"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> объектов <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, представляющее параметры выбранного свойства.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-163">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objects that represent the parameters for the specified property.</span></span></param>
        <summary><span data-ttu-id="5d6e1-164">Возвращает <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" />, обеспечивающий доступ к указанному свойству текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-164">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> that provides access to a specified property of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-165"><see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" />, обеспечивающий доступ к указанному свойству, если найден; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-165">An <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> that provides access to the specified property, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeData">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.Automation.RemoteTypeData GetTypeData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeData () As RemoteTypeData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::RemoteTypeData GetTypeData();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeData : unit -&gt; System.AddIn.Contract.Automation.RemoteTypeData" Usage="iRemoteTypeContract.GetTypeData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.RemoteTypeData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5d6e1-166">Возвращает информацию о типе объекта, указывающем текущий <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-166">Returns type information about the object that the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> identifies.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-167"><see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" />, содержащее информацию об объекте, указывающем текущий <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-167">A <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> that contains information about the object that the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> identifies.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument InvokeMember(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteObjectContract target, class System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int32 localeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument InvokeMember(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteObjectContract ^ target, System::AddIn::Contract::Collections::IRemoteArgumentArrayContract ^ remoteArgs, cli::array &lt;bool&gt; ^ remoteArgModifiers, int localeId);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.AddIn.Contract.Automation.IRemoteObjectContract * System.AddIn.Contract.Collections.IRemoteArgumentArrayContract * bool[] * int -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteTypeContract.InvokeMember (name, bindingFlags, target, remoteArgs, remoteArgModifiers, localeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="target" Type="System.AddIn.Contract.Automation.IRemoteObjectContract" />
        <Parameter Name="remoteArgs" Type="System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />
        <Parameter Name="remoteArgModifiers" Type="System.Boolean[]" />
        <Parameter Name="localeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5d6e1-168">Имя вызываемого члена.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-168">The name of the member to invoke.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="5d6e1-169">Битовая комбинация значений <see cref="T:System.Reflection.BindingFlags" />, указывающая способ поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-169">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the member.</span></span></param>
        <param name="target"><span data-ttu-id="5d6e1-170"><see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />, для которого будет вызван указанный элемент.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-170">The <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> on which to invoke the specified member.</span></span></param>
        <param name="remoteArgs"><span data-ttu-id="5d6e1-171"><see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />, содержащий аргументы для передачи вызываемому элементу.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-171">An <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> that contains the arguments to pass to the member to invoke.</span></span></param>
        <param name="remoteArgModifiers"><span data-ttu-id="5d6e1-172">Массив логических величин, указывающий передается ли каждое из значений <paramref name="remoteArgs" /> по ссылке.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-172">An array of Boolean values that indicate whether each of the <paramref name="remoteArgs" /> values is passed by reference.</span></span></param>
        <param name="localeId"><span data-ttu-id="5d6e1-173">Код языка для использования при преобразованиях языкового стандарта, которые могут осуществляться вызываемым элементом.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-173">A locale ID to use for locale-specific conversions that might be performed by the member being invoked.</span></span></param>
        <summary><span data-ttu-id="5d6e1-174">Вызывает выбранный элемент текущего <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-174">Invokes the specified member of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="5d6e1-175"><see cref="T:System.AddIn.Contract.RemoteArgument" />, представляющий возвращаемое значение вызванного элемента.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-175">A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that represents the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d6e1-176">`remoteArgModifiers` Параметр используется только для компонентов, написанных с помощью COM.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-176">The `remoteArgModifiers` parameter is used only for components that are written using COM.</span></span> <span data-ttu-id="5d6e1-177">Каждое значение в `remoteArgModifiers` параметре указывает, передается ли соответствующее `remoteArgs` значение в параметре по ссылке.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-177">Each value in the `remoteArgModifiers` parameter indicates whether the corresponding value in the `remoteArgs` parameter is passed by reference.</span></span> <span data-ttu-id="5d6e1-178">Длина `remoteArgModifiers` должна быть такой же, как и `remoteArgs`длина.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-178">The length of `remoteArgModifiers` should be the same as the length of `remoteArgs`.</span></span>  
  
 <span data-ttu-id="5d6e1-179">При передаче `null` `remoteArgModifiers`в этот метод использует логику по умолчанию, чтобы определить, передается ли аргумент по ссылке.</span><span class="sxs-lookup"><span data-stu-id="5d6e1-179">If you pass `null` for `remoteArgModifiers`, this method uses default logic to determine whether an argument is passed by reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
