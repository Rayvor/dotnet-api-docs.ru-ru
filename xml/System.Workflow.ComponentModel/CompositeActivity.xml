<Type Name="CompositeActivity" FullName="System.Workflow.ComponentModel.CompositeActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b8f674920d044bfd3ce695d6f8f4767c08cdcdb" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70623946" /></Metadata><TypeSignature Language="C#" Value="public class CompositeActivity : System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeActivity extends System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.CompositeActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeActivity : System::Workflow::ComponentModel::Activity" />
  <TypeSignature Language="F#" Value="type CompositeActivity = class&#xA;    inherit Activity" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityTypeDescriptorProvider))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityValidator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Serialization.ContentProperty("Activities")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Класс, производный от класса <see cref="T:System.Workflow.ComponentModel.Activity" />, базового класса для всех действий, содержащих другие действия. Действие <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> отвечает за управление выполнением своих дочерних действий.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Действие <xref:System.Workflow.ComponentModel.CompositeActivity> управляет выполнением своих дочерних действий, используя методы класса <xref:System.Workflow.ComponentModel.ActivityExecutionContext> и события, определенные в классе <xref:System.Workflow.ComponentModel.Activity>.  Например, планирование выполнения дочернего действия осуществляется с помощью метода <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> класса <xref:System.Workflow.ComponentModel.ActivityExecutionContext>. Действие <xref:System.Workflow.ComponentModel.CompositeActivity> может получать уведомления, когда дочернее действие завершает выполнение, с помощью подписки на событие <xref:System.Workflow.ComponentModel.Activity.Closed>, определенное в классе <xref:System.Workflow.ComponentModel.Activity>.  
  
 Среда выполнения рабочего процесса накладывает определенные ограничения на выполнение действия <xref:System.Workflow.ComponentModel.CompositeActivity>, самое серьезное из которых связано с тем, что действие <xref:System.Workflow.ComponentModel.CompositeActivity> не может перейти в состояние <xref:System.Workflow.ComponentModel.Activity.Closed>, если хотя бы одно из дочерних действий до сих пор находится в состоянии <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating> или <xref:System.Workflow.ComponentModel.Activity.Faulting>.  
  
   
  
## Examples  
 В этом примере показан базовый экземпляр `CompositeActivity`, который выполняет свое первое дочернее действие. При переходе дочернего действия в состояние Closed, составное действие получает уведомление и завершает выполнение.  
  
```csharp  
public class HasOneChildActivity : CompositeActivity  
{  
    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  
    {  
        Activity child = this.EnabledActivities[0];  
        child.Closed += this.ChildClosed;  
        executionContext.ExecuteActivity(child);  
  
        return ActivityExecutionStatus.Executing;  
    }  
  
    void ChildClosed(object sender, ActivityExecutionStatusChangedEventArgs e)  
    {  
        e.Activity.Closed -= this.ChildClosed;  
        ActivityExecutionContext executionContext = sender as ActivityExecutionContext;  
  
        executionContext.CloseActivity();  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeActivity (System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt; children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.ComponentModel.Activity&gt; children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (children As IEnumerable(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeActivity(System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.CompositeActivity : seq&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; System.Workflow.ComponentModel.CompositeActivity" Usage="new System.Workflow.ComponentModel.CompositeActivity children" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="children" Type="System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="children">Объект <see cref="T:System.Object" />, реализующий интерфейс <see cref="T:System.Collections.IEnumerable" /> с типом <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> из объекта <see cref="T:System.Object" />, который реализует интерфейс <see cref="T:System.Collections.IEnumerable" /> с типом <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.CompositeActivity : string -&gt; System.Workflow.ComponentModel.CompositeActivity" Usage="new System.Workflow.ComponentModel.CompositeActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя экземпляра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> с именем для этого действия.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Activities">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityCollection Activities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.ActivityCollection Activities" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Activities As ActivityCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::ActivityCollection ^ Activities { System::Workflow::ComponentModel::ActivityCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Activities : System.Workflow.ComponentModel.ActivityCollection" Usage="System.Workflow.ComponentModel.CompositeActivity.Activities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, представляющий коллекцию <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> дочерних действий.</summary>
        <value>Коллекция <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> всех дочерних действий.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Представляет коллекцию дочерних действий, которые управляются составным действием. Эту коллекцию можно обновлять.  
  
   
  
## Examples  
 Приведенный ниже код показывает, как создавать действия, добавлять их в виде дочерних в составное действие, а также, как задавать разрешение <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> для этого типа.  
  
 Данный пример кода является частью примера SDK "Throw" из файла ThrowWorkFlow.cs. Дополнительные сведения см. в разделе [вызовите пример](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorkflowChanges">
      <MemberSignature Language="C#" Value="protected void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ApplyWorkflowChanges(class System.Workflow.ComponentModel.WorkflowChanges workflowChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ApplyWorkflowChanges(System::Workflow::ComponentModel::WorkflowChanges ^ workflowChanges);" />
      <MemberSignature Language="F#" Value="member this.ApplyWorkflowChanges : System.Workflow.ComponentModel.WorkflowChanges -&gt; unit" Usage="compositeActivity.ApplyWorkflowChanges workflowChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowChanges" Type="System.Workflow.ComponentModel.WorkflowChanges" />
      </Parameters>
      <Docs>
        <param name="workflowChanges">Применяемый режим <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />.</param>
        <summary>Применяет манифест <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> в параметре данного экземпляра.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="workflowChanges" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="CanModifyActivities">
      <MemberSignature Language="C#" Value="protected internal bool CanModifyActivities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanModifyActivities" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property CanModifyActivities As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool CanModifyActivities { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanModifyActivities : bool with get, set" Usage="System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое указывает, можно ли изменять отдельные действия в свойстве <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />.</summary>
        <value>Значение <see langword="true" />, если отдельные действия в свойстве <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> можно изменять, в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Приведенный ниже код показывает, как создавать действия, добавлять их в виде дочерних в составное действие, а также, как задавать разрешение <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> для этого типа.  
  
 Данный пример кода является частью примера SDK "Throw" из файла ThrowWorkFlow.cs. Дополнительные сведения см. в разделе [вызовите пример](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="compositeActivity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" />, чтобы освободить как управляемые, так и неуправляемые ресурсы, используемые этим экземпляром, а также всеми дочерними действиями этого экземпляра; значение <see langword="false" />, чтобы освободить только неуправляемые ресурсы этого экземпляра.</param>
        <summary>Вызывает метод <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" /> для экземпляра и (необязательно) вызывает метод <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose" /> для всех дочерних действий экземпляра.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 На протяжении времени существования действия может быть создано и удалено несколько объектов .NET. Каждый раз, когда из памяти выгружается экземпляр рабочего процесса, удаляются объекты .NET, соответствующие действиям в дереве рабочего процесса (для каждого действия вызывается метод <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A>). Когда экземпляр рабочего процесса загружается обратно в память, для каждого действия с состоянием из соответствующей операции выгрузки создается новый объект .NET.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledActivities">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; EnabledActivities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; EnabledActivities" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnabledActivities As ReadOnlyCollection(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ EnabledActivities { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnabledActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" Usage="System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает доступную только для чтения коллекцию, которая представляет подмножество включенных свойств <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />.</summary>
        <value>Доступная только для чтения коллекция, которая представляет подмножество включенных свойств <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicActivities">
      <MemberSignature Language="C#" Value="protected System.Workflow.ComponentModel.Activity[] GetDynamicActivities (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Workflow.ComponentModel.Activity[] GetDynamicActivities(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ GetDynamicActivities(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.GetDynamicActivities : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity[]" Usage="compositeActivity.GetDynamicActivities activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Указанный <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
        <summary>Возвращает массив, который содержит все выполняющиеся в настоящий момент экземпляры заданного действия.</summary>
        <returns>Массив выполняющихся в данный момент экземпляров действий.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="compositeActivity.HandleFault (executionContext, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для этого экземпляра.</param>
        <param name="exception">Исключение <see cref="T:System.Exception" />, вызвавшее этот сбой.</param>
        <summary>Вызывается при возникновении исключения в контексте выполнения данного экземпляра.</summary>
        <returns>Состояние <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />, которое возникает в результате попытки отменить этот экземпляр.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="executionContext" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).

- или -

Параметр <paramref name="exception" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="compositeActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Указанный <see cref="T:System.IServiceProvider" />.</param>
        <summary>Инициализирует все подходящие дочерние действия этого экземпляра и заданный поставщик <see cref="T:System.IServiceProvider" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="provider" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChangeAdd">
      <MemberSignature Language="C#" Value="protected internal virtual void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivityChangeAdd(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Workflow.ComponentModel.Activity addedActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnActivityChangeAdd (executionContext As ActivityExecutionContext, addedActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnActivityChangeAdd(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, System::Workflow::ComponentModel::Activity ^ addedActivity);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityChangeAdd : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.Activity -&gt; unit&#xA;override this.OnActivityChangeAdd : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.Activity -&gt; unit" Usage="compositeActivity.OnActivityChangeAdd (executionContext, addedActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="addedActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="executionContext">Указанный <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</param>
        <param name="addedActivity">Указанный <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
        <summary>Вызывается при добавлении действия.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="executionContext" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).

- или -

Параметр <paramref name="addedActivity" /> является неопределенной ссылкой (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChangeRemove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivityChangeRemove(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Workflow.ComponentModel.Activity removedActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnActivityChangeRemove (executionContext As ActivityExecutionContext, removedActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnActivityChangeRemove(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, System::Workflow::ComponentModel::Activity ^ removedActivity);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityChangeRemove : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.Activity -&gt; unit&#xA;override this.OnActivityChangeRemove : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.Activity -&gt; unit" Usage="compositeActivity.OnActivityChangeRemove (executionContext, removedActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="removedActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="executionContext">Указанный <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</param>
        <param name="removedActivity">Указанный <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
        <summary>Вызывается при удалении действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущая реализация не обладает функциональностью.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityExecutionContextLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnActivityExecutionContextLoad (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnActivityExecutionContextLoad(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnActivityExecutionContextLoad (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnActivityExecutionContextLoad(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.OnActivityExecutionContextLoad : IServiceProvider -&gt; unit" Usage="compositeActivity.OnActivityExecutionContextLoad provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Объект <see cref="T:System.Object" />, который реализует интерфейс <see cref="T:System.IServiceProvider" /> и предоставляет службы данному экземпляру.</param>
        <summary>Вызывается механизмом среды выполнения рабочих процессов каждый раз при загрузке контекста <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для данного действия.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityExecutionContextUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnActivityExecutionContextUnload (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnActivityExecutionContextUnload(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnActivityExecutionContextUnload (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnActivityExecutionContextUnload(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.OnActivityExecutionContextUnload : IServiceProvider -&gt; unit" Usage="compositeActivity.OnActivityExecutionContextUnload provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Объект <see cref="T:System.Object" />, который реализует интерфейс <see cref="T:System.IServiceProvider" /> и предоставляет службы данному экземпляру.</param>
        <summary>Вызывается механизмом среды выполнения рабочих процессов каждый раз при выгрузке контекста <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> для данного действия.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnListChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivity.OnListChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />, распространяемый с помощью события.</param>
        <summary>Выполняет дополнительную обработку при изменении свойства <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnListChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanging(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanging (e As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanging(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnListChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivity.OnListChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Относящийся к событию объект <see cref="T:System.EventArgs" />.</param>
        <summary>Событие, которое происходит перед изменением соответствующего свойства <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWorkflowChangesCompleted">
      <MemberSignature Language="C#" Value="protected internal virtual void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext rootContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnWorkflowChangesCompleted(class System.Workflow.ComponentModel.ActivityExecutionContext rootContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnWorkflowChangesCompleted (rootContext As ActivityExecutionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnWorkflowChangesCompleted(System::Workflow::ComponentModel::ActivityExecutionContext ^ rootContext);" />
      <MemberSignature Language="F#" Value="abstract member OnWorkflowChangesCompleted : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; unit&#xA;override this.OnWorkflowChangesCompleted : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; unit" Usage="compositeActivity.OnWorkflowChangesCompleted rootContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="rootContext">Объект <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, связанный с данным экземпляром.</param>
        <summary>Вызывается после внесения изменений в коллекцию <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> этого экземпляра.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При переопределении в производном классе обеспечивает обработку этого события.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninitialize">
      <MemberSignature Language="C#" Value="protected internal override void Uninitialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Uninitialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Uninitialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Uninitialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Uninitialize : IServiceProvider -&gt; unit" Usage="compositeActivity.Uninitialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Объект <see cref="T:System.Object" />, который реализует интерфейс <see cref="T:System.IServiceProvider" /> и предоставляет службы данному экземпляру.</param>
        <summary>Вызывается механизмом среды выполнения рабочих процессов, когда действие переходит в состояние <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> из состояния <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод служит для очистки действия, например для очистки свойств зависимостей и удаления очередей.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
