<Type Name="DependencyObject" FullName="System.Workflow.ComponentModel.DependencyObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b3d705e3b8827e60f6f3c0c9ef3b2616ae3f23e" /><Meta Name="ms.sourcegitcommit" Value="2b0967e04b047f6709322418d97215dfcef6a938" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/20/2019" /><Meta Name="ms.locfileid" Value="74237804" /></Metadata><TypeSignature Language="C#" Value="public abstract class DependencyObject : IDisposable, System.ComponentModel.IComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DependencyObject extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.DependencyObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DependencyObject&#xA;Implements IComponent, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObject abstract : IDisposable, System::ComponentModel::IComponent" />
  <TypeSignature Language="F#" Value="type DependencyObject = class&#xA;    interface IComponent&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Базовый класс для всех объектов, имеющих свойства зависимостей. Этот класс должен наследоваться.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DependencyObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DependencyObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>При реализации в производном классе инициализирует новый экземпляр класса <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandler (dependencyEvent As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.AddHandler (dependencyEvent, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyEvent"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <param name="value">Объект <see cref="T:System.Object" />, который представляет значение этого свойства. В этом случае, тип <see cref="T:System.Delegate" />.</param>
        <summary>Добавляет обработчик для события <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании делегата определяется метод, который обрабатывает событие. Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата. До тех пор, пока делегат не удален, обработчик событий вызывается всякий раз, когда происходит событие. Для обработки события может быть добавлено несколько делегатов. Дополнительные сведения о делегатах обработчиков событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Обработчики добавляются и удаляются с помощью следующего кода. Этот пример кода является частью примера пакета SDK для отправки электронной почты и находится в файле SendMailActivity.cs. Дополнительные сведения см. в разделе [пример действия отправки электронной почты](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669).  
  
 [!code-csharp[WF_Samples#232](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#232)]
 [!code-vb[WF_Samples#232](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#232)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Оба аргумента являются пустыми ссылками (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">Значение неверного типа <see cref="T:System.Type" />

-или-

Событие <paramref name="dependencyEvent" /> представляет свойство <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, не являющееся событием.</exception>
      </Docs>
    </Member>
    <Member MemberName="DesignMode">
      <MemberSignature Language="C#" Value="protected internal bool DesignMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignMode" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DesignMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool DesignMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignMode : bool" Usage="System.Workflow.ComponentModel.DependencyObject.DesignMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, в каком режиме находится данный экземпляр — режиме конструктора или режиме выполнения.</summary>
        <value><see langword="true" />, если данный экземпляр находится в режиме конструктора; в противном случае <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождение ресурсов, используемых классом <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dependencyObject.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dependencyObject.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы и факультативно освобождает управляемые ресурсы, используемые объектом <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DependencyObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DependencyObject ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="dependencyObject.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределяет метод <see cref="M:System.Object.Finalize" /> для детерминированной очистки любого неуправляемого ресурса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, это требуется в том случае, если освобождаются неуправляемые ресурсы типа исходного дескриптора HWNDS, файлового дескриптора Win32 или других подобных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityBind GetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.ActivityBind GetBinding(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::ActivityBind ^ GetBinding(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.GetBinding : System.Workflow.ComponentModel.DependencyProperty -&gt; System.Workflow.ComponentModel.ActivityBind" Usage="dependencyObject.GetBinding dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityBind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <summary>Предоставляет доступ к объекту <see cref="T:System.Workflow.ComponentModel.ActivityBind" />, связанному с конкретным объектом <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
        <returns>Объект <see cref="T:System.Workflow.ComponentModel.ActivityBind" />, связанный с конкретным свойством <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundValue">
      <MemberSignature Language="C#" Value="protected virtual object GetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetBoundValue(class System.Workflow.ComponentModel.ActivityBind bind, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBoundValue (bind As ActivityBind, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetBoundValue(System::Workflow::ComponentModel::ActivityBind ^ bind, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member GetBoundValue : System.Workflow.ComponentModel.ActivityBind * Type -&gt; obj&#xA;override this.GetBoundValue : System.Workflow.ComponentModel.ActivityBind * Type -&gt; obj" Usage="dependencyObject.GetBoundValue (bind, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bind" Type="System.Workflow.ComponentModel.ActivityBind" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="bind"><see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
        <param name="targetType">Тип <see cref="T:System.Type" /> целевого объекта привязки <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
        <summary>Извлекает объект <see cref="T:System.Object" />, который является субъектом <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</summary>
        <returns>Объект <see cref="T:System.Object" />, который является субъектом <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Object>, который является субъектом <xref:System.Workflow.ComponentModel.ActivityBind>. При переопределении в производном классе этот метод можно использовать для настройки порядка разрешения заданной привязки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="bind" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).

-или-

Параметр <paramref name="targetType" /> является неопределенной ссылкой (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationList&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected T[] GetInvocationList&lt;T&gt; (System.Workflow.ComponentModel.DependencyProperty dependencyEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !!T[] GetInvocationList&lt;T&gt;(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInvocationList(Of T) (dependencyEvent As DependencyProperty) As T()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename T&gt;&#xA; cli::array &lt;T&gt; ^ GetInvocationList(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent);" />
      <MemberSignature Language="F#" Value="member this.GetInvocationList : System.Workflow.ComponentModel.DependencyProperty -&gt; 'T[]" Usage="dependencyObject.GetInvocationList dependencyEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDependencyObjectAccessor.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип возвращаемых делегатов.</typeparam>
        <param name="dependencyEvent">Указанный <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <summary>Возвращает массив, содержащий делегаты для заданного свойства <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
        <returns>Массив, содержащий делегаты для заданного свойства <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dependencyEvent" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="dependencyEvent" /> не соответствует событию.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Workflow.ComponentModel.DependencyProperty -&gt; obj" Usage="dependencyObject.GetValue dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <summary>Предоставляет доступ к значению заданного свойства <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
        <returns>Объект, представляющий значение выделенного <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот элемент, как правило, используется при возвращении свойств для получения значения именованного свойства зависимостей.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>, чтобы возвратить значение, представляемое именованным свойством зависимостей в контексте возвращения и установки. Этот пример кода является частью примера пакета SDK для отправки электронной почты и находится в файле SendMailActivity.cs. Дополнительные сведения см. в разделе [пример действия отправки электронной почты](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669).  
  
 [!code-csharp[WF_Samples#231](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#231)]
 [!code-vb[WF_Samples#231](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#231)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueBase">
      <MemberSignature Language="C#" Value="public object GetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValueBase(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValueBase(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.GetValueBase : System.Workflow.ComponentModel.DependencyProperty -&gt; obj" Usage="dependencyObject.GetValueBase dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty">Свойство <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, значение которого требуется получить.</param>
        <summary>Предоставляет доступ к связанному объекту <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> и обходит переопределение метода <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />.</summary>
        <returns>Связанный объект свойства <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />. Это позволяет обойти переопределение метода <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод полезен при реализации переопределения метода <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>. Обычно код переопределения <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> вызывает метод <xref:System.Workflow.ComponentModel.DependencyObject.GetValueBase%2A> и добавляет дополнительный код.  
  
 Для реализации переопределения <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> <xref:System.Workflow.ComponentModel.PropertyMetadata> можно использовать в <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A>/<xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> вызовы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dependencyProperty" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected virtual void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeProperties();" />
      <MemberSignature Language="F#" Value="abstract member InitializeProperties : unit -&gt; unit&#xA;override this.InitializeProperties : unit -&gt; unit" Usage="dependencyObject.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе выполняет инициализацию свойств зависимостей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывается механизмом среды выполнения рабочих процессов при инициализации действия во время выполнения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSet">
      <MemberSignature Language="C#" Value="public bool IsBindingSet (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBindingSet(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBindingSet(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.IsBindingSet : System.Workflow.ComponentModel.DependencyProperty -&gt; bool" Usage="dependencyObject.IsBindingSet dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty">Объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> для проверки.</param>
        <summary>Указывает, задано ли значение <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> как привязка. См. раздел <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />.</summary>
        <returns>Значение <see langword="true" />, если значение задано как привязка, и значение <see langword="false" /> в противном случае.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dependencyProperty" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="MetaEquals">
      <MemberSignature Language="C#" Value="public bool MetaEquals (System.Workflow.ComponentModel.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MetaEquals(class System.Workflow.ComponentModel.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MetaEquals(System::Workflow::ComponentModel::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="member this.MetaEquals : System.Workflow.ComponentModel.DependencyObject -&gt; bool" Usage="dependencyObject.MetaEquals dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Workflow.ComponentModel.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Объект <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> для сравнения.</param>
        <summary>Определяет, совпадают ли свойства <see langword="metaproperties" /> этого объекта <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> со свойствами <see langword="metaproperties" /> параметризованного объекта <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <returns>Значение <see langword="true" />, если свойства <see langword="metaproperties" /> совпадают; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использует оператор `==`, определенный для типа `metaproperties` закрытого элемента, то есть <xref:System.Collections.IDictionary>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentDependencyObject">
      <MemberSignature Language="C#" Value="protected System.Workflow.ComponentModel.DependencyObject ParentDependencyObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.DependencyObject ParentDependencyObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ParentDependencyObject As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::ComponentModel::DependencyObject ^ ParentDependencyObject { System::Workflow::ComponentModel::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentDependencyObject : System.Workflow.ComponentModel.DependencyObject" Usage="System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> в графе <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <value>Родительский объект <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> в графе <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHandler(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHandler (dependencyEvent As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHandler(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.RemoveHandler : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.RemoveHandler (dependencyEvent, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyEvent"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <param name="value">Объект <see cref="T:System.Object" />, который представляет значение этого свойства. В этом случае, тип <see cref="T:System.Delegate" />.</param>
        <summary>Удаляет <see cref="T:System.EventHandler" /> из связанного объекта <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Удобный прямой метод для удаления делегата события.  
  
 При создании делегата указывается метод обработки события. Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата. До тех пор, пока делегат не удален, обработчик событий вызывается всякий раз, когда происходит событие. Дополнительные сведения о делегатах обработчиков событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Обработчики добавляются и удаляются с помощью следующего кода. Дополнительные сведения см. в разделе [пример действия отправки электронной почты](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669).  
  
 [!code-csharp[WF_Samples#232](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#232)]
 [!code-vb[WF_Samples#232](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#232)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Оба аргумента являются пустыми ссылками (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dependencyEvent" /> представляет собой <see langword="metaproperty" />.

-или-

Параметр <paramref name="dependencyEvent" /> не является событием.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Параметр <paramref name="value" /> является объектом <see cref="T:System.Workflow.ComponentModel.ActivityBind" />, а данный экземпляр находится не в режиме <see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : System.Workflow.ComponentModel.DependencyProperty -&gt; bool" Usage="dependencyObject.RemoveProperty dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty">Удаляемый объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <summary>Удаляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> из объекта <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <returns>Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Аргумент является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public void SetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, System.Workflow.ComponentModel.ActivityBind bind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBinding(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty, class System.Workflow.ComponentModel.ActivityBind bind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBinding(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty, System::Workflow::ComponentModel::ActivityBind ^ bind);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Workflow.ComponentModel.DependencyProperty * System.Workflow.ComponentModel.ActivityBind -&gt; unit" Usage="dependencyObject.SetBinding (dependencyProperty, bind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="bind" Type="System.Workflow.ComponentModel.ActivityBind" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <param name="bind">Задаваемый объект <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
        <summary>Задает объект <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> для указанного объекта <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> задает значение непосредственно для <xref:System.Workflow.ComponentModel.DependencyProperty>. Аналогично, <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> напрямую добавляет обработчик для свойств типа событие.  
  
 Эти методы, вызванные для одного свойства, являются взаимоисключающими. Если вызван метод <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>, то значения, заданные ранее методом <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> для событий) не учитываются. То же самое справедливо для обратного порядка действий: метод <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) удаляет привязку, созданную методом <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>.  
  
   
  
## Examples  
 Приведенный ниже код показывает, как создавать действия, добавлять их в виде дочерних в составное действие, а также, как задавать разрешение <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> для этого типа.  
  
 Кроме того, иллюстрируется использование метода <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>.  
  
 Данный пример кода является частью примера SDK "Throw" из файла ThrowWorkFlow.cs. Дополнительные сведения см. [в разделе Использование инструкции Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  
  
 [!code-csharp[WF_Samples#215](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#215)]
 [!code-vb[WF_Samples#215](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#215)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Оба аргумента являются пустыми ссылками (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />, связанный с <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, доступен только для чтения, относится к метаданным или не поддерживает привязку.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр находится не в режиме <see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundValue">
      <MemberSignature Language="C#" Value="protected virtual void SetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetBoundValue(class System.Workflow.ComponentModel.ActivityBind bind, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetBoundValue (bind As ActivityBind, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetBoundValue(System::Workflow::ComponentModel::ActivityBind ^ bind, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetBoundValue : System.Workflow.ComponentModel.ActivityBind * obj -&gt; unit&#xA;override this.SetBoundValue : System.Workflow.ComponentModel.ActivityBind * obj -&gt; unit" Usage="dependencyObject.SetBoundValue (bind, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bind" Type="System.Workflow.ComponentModel.ActivityBind" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bind"><see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
        <param name="value">Объект <see cref="T:System.Object" /> для задания цели объекта <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
        <summary>Задает значение целевого объекта <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="bind" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnlyPropertyValue">
      <MemberSignature Language="C#" Value="protected internal void SetReadOnlyPropertyValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void SetReadOnlyPropertyValue(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void SetReadOnlyPropertyValue(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetReadOnlyPropertyValue : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetReadOnlyPropertyValue (dependencyProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <param name="value">Объект <see cref="T:System.Object" />, представляющий значение.</param>
        <summary>Задает значение свойства <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> только для чтения.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyProperty" /> является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetValue (dependencyProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty">Задаваемый объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <param name="value">Объект <see cref="T:System.Object" />, которому присваивается значение.</param>
        <summary>Присваивает значение <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> объекту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> задает привязку для свойства зависимостей.  
  
 <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> задает значение непосредственно в <xref:System.Workflow.ComponentModel.DependencyProperty> (аналогично, <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> добавляет обработчик непосредственно к свойствам типа Event).  
  
 Эти методы, вызванные для одного свойства, являются взаимоисключающими. Если вызван метод <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>, то значения, заданные ранее методом <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> для событий) не учитываются. То же самое справедливо для обратного порядка действий: метод <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) удаляет привязку, созданную методом <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>.  
  
   
  
## Examples  
 Приведенный ниже код показывает, как задается свойство зависимостей в рамках объекта зависимостей при помощи метода <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>.  
  
 [!code-csharp[WF_Samples#166](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#166)]
 [!code-vb[WF_Samples#166](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#166)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueBase">
      <MemberSignature Language="C#" Value="public void SetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueBase(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueBase(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValueBase : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetValueBase (dependencyProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty">Свойство <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, которое получит значение объекта <see cref="T:System.Object" />.</param>
        <param name="value">Объект <see cref="T:System.Object" />, который становится значением <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <summary>Задает значение свойства <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> равным указанному объекту <see cref="T:System.Object" /> в обход метода <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод полезен при реализации переопределения метода <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>. Обычно код переопределения <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> выполняет определенную настраиваемую логику перед вызовом метода <xref:System.Workflow.ComponentModel.DependencyObject.SetValueBase%2A>.  
  
 Для переопределения метода <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> можно использовать объект <xref:System.Workflow.ComponentModel.PropertyMetadata> при вызове <xref:System.Workflow.ComponentModel.DependencyProperty>, <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> или <xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dependencyProperty" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.DependencyObject.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Workflow.ComponentModel.DependencyObject.Site" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IComponent.Site</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает ссылку на компонент <see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /> объекта <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <value>Компонент <see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /> объекта <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IComponent.Disposed">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.IComponent.Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.IComponent.Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      <MemberSignature Language="VB.NET" Value="Custom Event Disposed As EventHandler Implements System.ComponentModel.IComponent" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.IComponent.Disposed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет метод, обрабатывающий событие Disposed компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
При создании делегата Disposed следует определить метод обработки события. Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата. Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserData">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary UserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary UserData" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserData As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ UserData { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserData : System.Collections.IDictionary" Usage="System.Workflow.ComponentModel.DependencyObject.UserData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию <see cref="T:System.Collections.IDictionary" />, которая связывает пользовательские данные с этим экземпляром класса.</summary>
        <value>Словарь, который ведет себя как обработчик расширений, чтобы разработчики могли управлять объявлениями <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> для средства разработки и связывать пользовательские данные с объявлениями отдельных действий.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство является `metaproperty`, что означает неизменность во время выполнения. `Metaproperties` не изменяются после создания экземпляра свойства во время выполнения, поэтому во время разработки для свойства необходимо задать литеральное значение.  
  
 Это свойство не используется в реализациях по умолчанию объявления <xref:System.Workflow.ComponentModel.Activity>, предоставляемых Windows Workflow Foundation. Эта коллекция не сериализуется; данные, которые содержит коллекция, не сохраняются со времени разработки до времени выполнения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
