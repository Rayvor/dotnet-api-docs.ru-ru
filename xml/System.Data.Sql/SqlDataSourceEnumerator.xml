<Type Name="SqlDataSourceEnumerator" FullName="System.Data.Sql.SqlDataSourceEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28285789fe3205faffd487aaf559b5ecbfe70ee1" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006431" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlDataSourceEnumerator : System.Data.Common.DbDataSourceEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDataSourceEnumerator extends System.Data.Common.DbDataSourceEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Data.Sql.SqlDataSourceEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDataSourceEnumerator&#xA;Inherits DbDataSourceEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceEnumerator sealed : System::Data::Common::DbDataSourceEnumerator" />
  <TypeSignature Language="F#" Value="type SqlDataSourceEnumerator = class&#xA;    inherit DbDataSourceEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataSourceEnumerator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет механизм для перечисления всех доступных экземпляров SQL Server в локальной сети.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL Server делает возможным для приложений определить, существует ли его экземпляры в существующей сети. <xref:System.Data.Sql.SqlDataSourceEnumerator> Класс предоставляет эти сведения для разработчика приложений, предоставляя <xref:System.Data.DataTable> содержащий сведения о всех доступных серверов. Эта возвращенная таблица содержит список экземпляров сервера, совпадает со списком, если при попытке пользователя создать новое соединение, а также на `Connection Properties` диалоговом окне расширяет стрелку раскрывающегося списка, содержащий все доступные серверы.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/sql/enumerating-instances-of-sql-server">Перечисление экземпляров SQL Server</related>
  </Docs>
  <Members>
    <Member MemberName="GetDataSources">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetDataSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetDataSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Sql.SqlDataSourceEnumerator.GetDataSources" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataSources () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetDataSources();" />
      <MemberSignature Language="F#" Value="override this.GetDataSources : unit -&gt; System.Data.DataTable" Usage="sqlDataSourceEnumerator.GetDataSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает объект <see cref="T:System.Data.DataTable" />, в котором содержатся сведения обо всех видимых экземплярах SQL Server.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, в котором содержатся сведения о видимых экземплярах SQL Server.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицы, возвращаемой этим методом содержит следующие столбцы, которые содержат строки:  
  
|Столбец|Описание|  
|------------|-----------------|  
|**Имя_сервера**|Имя сервера.|  
|**InstanceName**|Имя экземпляра сервера. Является пустым, если сервер работает в качестве экземпляра по умолчанию.|  
|**IsClustered**|Показывает, является ли сервер частью кластера.|  
|**Version**|Версия сервера:<br /><br />10.0.xx для SQL Server 2008<br />10.50.x для SQL Server 2008 R2<br />11.0.xx для SQL Server 2012<br />12.0.xx для SQL Server 2014<br />13.0.xx для SQL Server 2016<br />14.0.xx для SQL Server 2017|  
  
> [!NOTE]
>  Из-за особенностей механизма, используемого <xref:System.Data.Sql.SqlDataSourceEnumerator> для обнаружения источников данных в сети, метод не всегда возвращает полный список доступных серверов, а также список может отличаться при каждом вызове. Если вы планируете использовать эту функцию, чтобы позволить пользователям выбрать сервер из списка, убедитесь, что предоставляйте возможность ввести имя, которое не входит в список, в случае, если перечисление серверов не возвращает все доступные серверы. Кроме того этот метод может занять немало времени для выполнения, поэтому будьте внимательны, о его вызов, когда важна производительность.  
  
   
  
## Examples  
 Следующее консольное приложение извлекает сведения обо всех видимых экземплярах SQL Server и отображает сведения в окне консоли.  
  
```vb  
Imports System.Data.Sql  
  
Module Module1  
  Sub Main()  
    ' Retrieve the enumerator instance and then the data.  
    Dim instance As SqlDataSourceEnumerator = _  
     SqlDataSourceEnumerator.Instance  
    Dim table As System.Data.DataTable = instance.GetDataSources()  
  
    ' Display the contents of the table.  
    DisplayData(table)  
  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
  
  Private Sub DisplayData(ByVal table As DataTable)  
    For Each row As DataRow In table.Rows  
      For Each col As DataColumn In table.Columns  
        Console.WriteLine("{0} = {1}", col.ColumnName, row(col))  
      Next  
      Console.WriteLine("============================")  
    Next  
  End Sub  
End Module  
```  
  
```csharp  
using System.Data.Sql;  
  
class Program  
{  
  static void Main()  
  {  
    // Retrieve the enumerator instance and then the data.  
    SqlDataSourceEnumerator instance =  
      SqlDataSourceEnumerator.Instance;  
    System.Data.DataTable table = instance.GetDataSources();  
  
    // Display the contents of the table.  
    DisplayData(table);  
  
    Console.WriteLine("Press any key to continue.");  
    Console.ReadKey();  
  }  
  
  private static void DisplayData(System.Data.DataTable table)  
  {  
    foreach (System.Data.DataRow row in table.Rows)  
    {  
      foreach (System.Data.DataColumn col in table.Columns)  
      {  
        Console.WriteLine("{0} = {1}", col.ColumnName, row[col]);  
      }  
      Console.WriteLine("============================");  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/enumerating-instances-of-sql-server">Перечисление экземпляров SQL Server</related>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Data.Sql.SqlDataSourceEnumerator Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Sql.SqlDataSourceEnumerator Instance" />
      <MemberSignature Language="DocId" Value="P:System.Data.Sql.SqlDataSourceEnumerator.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As SqlDataSourceEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Sql::SqlDataSourceEnumerator ^ Instance { System::Data::Sql::SqlDataSourceEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Data.Sql.SqlDataSourceEnumerator" Usage="System.Data.Sql.SqlDataSourceEnumerator.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlDataSourceEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает экземпляр <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />, который может использоваться для получения сведений о доступных экземплярах SQL Server.</summary>
        <value>Экземпляр <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" /> используется для извлечения сведений о доступных экземплярах SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Sql.SqlDataSourceEnumerator> Класс не предоставляет конструктор. Используйте <xref:System.Data.Sql.SqlDataSourceEnumerator.Instance%2A> свойство вместо получения экземпляра класса.  
  
   
  
## Examples  
 Следующее консольное приложение отображает список всех доступных экземпляров SQL Server 2005 в локальной сети. Этот код использует <xref:System.Data.DataTable.Select%2A> способ фильтрации строк в таблицу, возвращаемую функцией <xref:System.Data.Sql.SqlDataSourceEnumerator.GetDataSources%2A> метод.  
  
```vb  
Imports System.Data.Sql  
  
Module Module1  
  Sub Main()  
    ' Retrieve the enumerator instance, and  
    ' then retrieve the data sources.  
    Dim instance As SqlDataSourceEnumerator = _  
     SqlDataSourceEnumerator.Instance  
    Dim table As System.Data.DataTable = instance.GetDataSources()  
  
    ' Filter the sources to just show SQL Server 2005 instances.  
    Dim rows() As DataRow = table.Select("Version LIKE '9%'")  
    For Each row As DataRow In rows  
      Console.WriteLine(row("ServerName"))  
    Next  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
End Module  
```  
  
```csharp  
using System.Data.Sql;  
  
class Program  
{  
  static void Main()  
  {  
    // Retrieve the enumerator instance, and  
    // then retrieve the data sources.  
    SqlDataSourceEnumerator instance =  
      SqlDataSourceEnumerator.Instance;  
    System.Data.DataTable table = instance.GetDataSources();  
  
    // Filter the sources to just show SQL Server 2005 instances.  
    System.Data.DataRow[] rows = table.Select("Version LIKE '9%'");  
    foreach (System.Data.DataRow row in rows)  
    {  
      Console.WriteLine(row["ServerName"]);  
    }  
    Console.WriteLine("Press any key to continue.");  
    Console.ReadKey();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/enumerating-instances-of-sql-server">Перечисление экземпляров SQL Server</related>
      </Docs>
    </Member>
  </Members>
</Type>