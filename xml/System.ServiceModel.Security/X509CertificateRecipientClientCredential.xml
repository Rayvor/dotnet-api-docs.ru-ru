<Type Name="X509CertificateRecipientClientCredential" FullName="System.ServiceModel.Security.X509CertificateRecipientClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca9bfb7bfd5541c5a67352b7d250f0d47fac8ae5" /><Meta Name="ms.sourcegitcommit" Value="2b78f05b0c6fa92adaf5e1dfe5a50388f952efe7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/02/2019" /><Meta Name="ms.locfileid" Value="71807730" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateRecipientClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateRecipientClientCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateRecipientClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет параметры, используемые клиентом для проверки сертификата, предоставленного службой с помощью проверки подлинности SSL. Он также содержит сертификат для службы, который явно задан в клиенте для шифрования сообщений для службы с помощью безопасности сообщений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс используется свойством <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> в классе <xref:System.ServiceModel.Description.ClientCredentials>.  
  
   
  
## Examples  
 В этом фрагменте кода показан один из способов создания экземпляра данного класса.  
  
 [!code-csharp[c_CreateSTS#18](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)]
 [!code-vb[c_CreateSTS#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает параметры, используемые для проверки сертификата службы, полученного при проверке подлинности SSL.</summary>
        <value>Параметры, используемые для проверки сертификата службы, полученного при аутентификации SSL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> представляет параметры, используемые клиентским прокси для проверки подлинности сертификатов службы, полученных при согласовании SSL/TLS.  
  
   
  
## Examples  
 В этом примере кода показано, как получить доступ к этому свойству.  
  
 [!code-csharp[c_CreateSTS#21](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCertificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ DefaultCertificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает используемый для службы сертификат по умолчанию.</summary>
        <value>Используемый для службы сертификат по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для привязок, использующих безопасность сообщений на основе сертификатов, этот сертификат используется для шифрования сообщений службе; предполагается также, что он будет использоваться службой для подписывания ответов клиенту.  
  
   
  
## Examples  
 В этом примере кода показано, как получить доступ к этому свойству.  
  
 [!code-csharp[c_CreateSTS#24](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScopedCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Uri, class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScopedCertificates As Dictionary(Of Uri, X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ ScopedCertificates { System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopedCertificates : System.Collections.Generic.Dictionary&lt;Uri, System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сертификат в области действия, используемый для представления службы, с которой взаимодействует клиент.</summary>
        <value>Сертификат в области действия, используемый для представления службы, с которой взаимодействует клиент.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет клиенту настроить сертификат службы для использования на основе URL-адреса службы, с которой он связывается. Это особенно полезно в сценариях с выданным маркером, в которых клиент может связываться с несколькими службами (с конечной службой, а также с промежуточными службами маркеров безопасности). Для привязок, в которых используется безопасность сообщений на основе сертификатов, этот сертификат используется для шифрования сообщений службе; предполагается также, что он будет использоваться службой для подписи ответов клиенту.  
  
 Если для привязки необходим сертификат для службы, а конкретный сертификат для URL-адреса службы в элементе `ScopedCertificates` отсутствует, то используется сертификат по умолчанию.  
  
   
  
## Examples  
 В этом примере кода показано, как задать это свойство.  
  
 [!code-csharp[c_CreateSTS#33](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDefaultCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Задает используемый для службы сертификат по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эти методы загружают из хранилища по указанному расположению сертификат, соответствующий заданным параметрам.  
  
 Для привязок, использующих безопасность сообщений на основе сертификатов, этот сертификат используется для шифрования сообщений службе; предполагается также, что он будет использоваться службой для подписывания ответов клиенту.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">Различающееся имя субъекта.</param>
        <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
        <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
        <summary>Задает используемый для службы сертификат по умолчанию. Для привязок, использующих безопасность сообщений на основе сертификатов, этот сертификат используется для шифрования сообщений службе; предполагается также, что он будет использоваться службой для подписывания ответов клиенту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод загружает из хранилища по указанному расположению сертификат, соответствующий параметру `subjectName`.  
  
 Значения для параметра `storeLocation` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: хранилище сертификатов, назначенное локальному компьютеру.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: хранилище сертификатов, используемое текущим пользователем (по умолчанию).  
  
 Если приложение выполняется под учетной записью системы, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Если приложение выполняется под учетной записью пользователя, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Значения для параметра `storeName` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
   
  
## Examples  
 В следующем примере кода показано, как с помощью этого метода указать сертификат X.509.  
  
 [!code-csharp[c_CreateSTS#23](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="subjectName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
        <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
        <param name="findType">Тип поиска сертификата X.509.</param>
        <param name="findValue">Значение для поиска в хранилище сертификатов X.509.</param>
        <summary>Задает используемый для службы сертификат по умолчанию. Для привязок, использующих безопасность сообщений на основе сертификатов, этот сертификат используется для шифрования сообщений службе; предполагается также, что он будет использоваться службой для подписывания ответов клиенту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод загружает из хранилища по указанному расположению сертификат, соответствующий параметрам `findType` и `findValue`.  
  
 Значения для параметра `storeLocation` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: хранилище сертификатов, назначенное локальному компьютеру.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: хранилище сертификатов, используемое текущим пользователем (по умолчанию).  
  
 Если приложение выполняется под учетной записью системы, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Если приложение выполняется под учетной записью пользователя, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Значения для параметра `storeName` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
 Значения для параметра `findType` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.X509FindType>.  
  
 Наиболее часто используется перечисление <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, которое выполняет поиск с учетом регистра по имени субъекта сертификатов в указанном хранилище. Это может быть неточный поиск. Если сертификаты не найдены либо найдено несколько сертификатов, удовлетворяющих условиям поиска, вызывается исключение <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 В следующем примере кода показано, как с помощью этого метода указать сертификат X.509.  
  
 [!code-csharp[c_CreateSTS#22](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="findValue" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка задать учетные данные, доступные только для чтения.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetScopedCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Задает сертификат из хранилища и сохраняет его в коллекцию, индексируемую по URL-адресу, который задает область.</summary>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (subjectName, storeLocation, storeName, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="subjectName">Полное имя субъекта.</param>
        <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
        <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
        <param name="targetService">URL-адрес, задающий область.</param>
        <summary>Задает сертификат по имени субъекта, расположению хранилища сертификатов и имени хранилища сертификатов и сохраняет его в коллекцию для URL-адреса, задающего область.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значения для параметра `storeLocation` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: хранилище сертификатов, назначенное локальному компьютеру.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: хранилище сертификатов, используемое текущим пользователем (по умолчанию).  
  
 Если приложение выполняется под учетной записью системы, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Если приложение выполняется под учетной записью пользователя, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Значения для параметра `storeName` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
   
  
## Examples  
 В данном примере кода показано, как вызвать этот метод.  
  
 [!code-csharp[c_CreateSTS#25](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="subjectName" /> или <paramref name="targetService" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (storeLocation, storeName, findType, findValue, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат службы.</param>
        <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
        <param name="findType">Тип поиска сертификата X.509.</param>
        <param name="findValue">Значение для поиска в хранилище сертификатов X.509.</param>
        <param name="targetService">URL-адрес, задающий область.</param>
        <summary>Задает сертификат по расположению хранилища сертификатов, имени хранилища сертификатов, типу поиска сертификатов X.509 и значению для поиска и сохраняет его в коллекцию для URL-адреса, задающего область.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значения для параметра `storeLocation` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: хранилище сертификатов, назначенное локальному компьютеру.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: хранилище сертификатов, используемое текущим пользователем (по умолчанию).  
  
 Если приложение выполняется под учетной записью системы, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Если приложение выполняется под учетной записью пользователя, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Значения для параметра `storeName` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
 Значения для параметра `findType` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.X509FindType>.  
  
 Наиболее часто используется перечисление <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, которое выполняет поиск с учетом регистра по имени субъекта сертификатов в указанном хранилище. Это может быть неточный поиск. Если сертификаты не найдены либо найдено несколько сертификатов, удовлетворяющих условиям поиска, вызывается исключение <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 В данном примере кода показано, как вызвать этот метод.  
  
 [!code-csharp[c_CreateSTS#20](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)]
 [!code-vb[c_CreateSTS#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="findValue" /> или <paramref name="targetService" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка установки, когда учетные данные доступны только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="SslCertificateAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property SslCertificateAuthentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ SslCertificateAuthentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); void set(System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SslCertificateAuthentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает средство проверки сертификата SSL, который требуется использовать.</summary>
        <value>Экземпляр <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет использовать WCF X509CertificateValidator для проверки сертификата сервера в клиенте WCF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
