<Type Name="WindowsClientCredential" FullName="System.ServiceModel.Security.WindowsClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba3235d0afdaa016bf455d8beda541721c1d5923" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75160510" /></Metadata><TypeSignature Language="C#" Value="public sealed class WindowsClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.WindowsClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsClientCredential sealed" />
  <TypeSignature Language="F#" Value="type WindowsClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Позволяет указать свойства, связанные с учетными данными Windows, используемыми для представления клиента.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.WindowsClientCredential> позволяет задать свойства клиента Windows, которые будут использоваться при взаимодействии со службой. Объект <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> задает для службы предполагаемый уровень олицетворения, используемый при олицетворении клиента. Объект <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> позволяет клиенту проходить проверку подлинности, предоставляя службе имя пользователя и пароль. Объект <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> определяет, можно ли использовать для проверки подлинности клиента NTLM, если протокол Kerberos не используется.  
  
   
  
## Examples  
 В следующем примере кода создается клиент и дается ссылка на объект <xref:System.ServiceModel.Security.WindowsClientCredential>. Затем в коде значение <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> изменяется на новое.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает допустимый уровень олицетворения.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом свойстве указывается уровень олицетворения, предоставляемый клиентом серверу при использовании проверки подлинности Windows SSPI. Обратите внимание, что уровень олицетворения, получаемый сервером при олицетворении маркера клиента, зависит не только от этого параметра. Этот уровень также зависит от привилегий и параметров домена для учетной записи, под которой запущена служба.  
  
 Клиент должен явным образом задать в этом свойстве допустимый уровень олицетворения.  
  
 Если клиент укажет анонимное олицетворение, он всегда будет проходить проверку подлинности как анонимный пользователь, даже если служба вообще не выполняет олицетворение. Это особенность операционной системы Windows.  
  
 Дополнительные сведения об олицетворении Windows см. в статье [олицетворение и возврат](https://go.microsoft.com/fwlink/?LinkId=96178). Дополнительные сведения об олицетворении с помощью Windows Communication Foundation см. в разделе [Делегирование и олицетворение](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).  
  
   
  
## Examples  
 В следующем примере показано, как задать данное свойство.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNtlm">
      <MemberSignature Language="C#" Value="public bool AllowNtlm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNtlm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNtlm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNtlm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNtlm : bool with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is deprecated and is maintained for backward compatibility only. The local machine policy will be used to determine if NTLM should be used.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли разрешить использовать проверку подлинности NTLM в качестве проверки подлинности Windows SSPI.</summary>
        <value>Значение <see langword="true" />, если проверку подлинности NTLM разрешено использовать в качестве проверки подлинности Windows SSPI, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если установить для данного свойства значение `true`, то проверка подлинности может понижаться до NTLM в том случае, если проверка Kerberos недоступна.  
  
 Присвоение этому свойству значения `false` приводит к тому, что Windows Communication Foundation (WCF) лучше будет создавать исключение, если используется NTLM. Обратите внимание, что установка для данного свойства значения `false` не предотвращает отправки учетных данных NTLM по сети.  
  
 В определенных схемах развертывания, например при использовании рабочих групп и локальных учетных записей необходимо использовать проверку подлинности NTLM. Установка для этого флага значения `false` в таких развертываниях приведет к ошибкам проверки подлинности при использовании WCF. Если в среде требуется взаимная проверка подлинности (поддерживается только протоколом Kerberos), присвойте этому флагу значение `false`.  
  
 NTLM (Windows NT LAN Manager) — это протокол проверки подлинности, используемый в сетях, включающих системы под управлением операционной системы Windows NT и автономные системы.  
  
 Пакет безопасности Microsoft Kerberos обеспечивает более эффективную защиту подключенных к сети компьютеров, чем NTLM. Несмотря на то, что Microsoft Kerberos является выбранным протоколом, NTLM по-прежнему поддерживается и должен использоваться для проверки подлинности сети, если сеть включает в себя системы под управлением Windows NT 4,0 и более ранних версий, а также в автономных системах.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredential : System.Net.NetworkCredential with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает учетные данные клиента Windows.</summary>
        <value>Объект <see cref="T:System.Net.NetworkCredential" /> для клиента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию учетные данные текущего потока используются WCF для проверки подлинности Windows SSPI Negotiate.  
  
 Чтобы провести проверку подлинности клиента как другого участника, измените свойства экземпляра класса <xref:System.Net.NetworkCredential>, возвращаемого данным свойством. Кроме того, можно создать новый экземпляр класса <xref:System.Net.NetworkCredential> и присвоить его этому свойству.  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнить проверку подлинности клиента как другого участника.  
  
 Здесь показано, как изменить свойства экземпляра класса <xref:System.Net.NetworkCredential>, возвращаемого этим свойством.  
  
 [!code-csharp[WindowsClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#2)]  
  
 В следующем примере показано, как создать новый экземпляр класса <xref:System.Net.NetworkCredential> и присвоить его этому свойству.  
  
 [!code-csharp[WindowsClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
