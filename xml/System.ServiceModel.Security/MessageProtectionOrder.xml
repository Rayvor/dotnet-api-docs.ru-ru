<Type Name="MessageProtectionOrder" FullName="System.ServiceModel.Security.MessageProtectionOrder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="023163d1a1bd6c143debb822a30b7762ef9aef30" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69149052" /></Metadata><TypeSignature Language="C#" Value="public enum MessageProtectionOrder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MessageProtectionOrder extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.MessageProtectionOrder" />
  <TypeSignature Language="VB.NET" Value="Public Enum MessageProtectionOrder" />
  <TypeSignature Language="C++ CLI" Value="public enum class MessageProtectionOrder" />
  <TypeSignature Language="F#" Value="type MessageProtectionOrder = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Указывает порядок операций при защите сообщения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это перечисление используется совместно со свойством <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A?displayProperty=nameWithType> класса <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement> и свойством <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder%2A?displayProperty=nameWithType> класса <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>.  
  
 Если сообщение уязвимо для атаки дайджеста (например, если сообщение является коротким или низкая энтропия), следует использовать параметр Сигнбефоринкриптанденкриптсигнатуре или Енкриптбефоресигн. (*Энтропия* — это случайные данные, предоставляемые сервером, клиентом или обоими, и используются для создания общего ключа для шифрования и расшифровки данных.)  
  
## <a name="what-is-ordered"></a>Что значит «по порядку»?  
 WCF предлагает три разных уровня защиты, которые определяют, как сообщения защищаются с помощью безопасности сообщений SOAP. Значение по умолчанию — Сигнбефоринкриптанденкриптсигнатуре. На этом уровне к сообщению сначала добавляется сигнатура, затем шифруется текст сообщения, после чего шифруется XML-сигнатура. Такой подход снижает вероятность взлома сигнатуры путем ее подбора.  
  
 Однако выбранный по умолчанию уровень безопасности отрицательно влияет на производительность. В результате за повышенную безопасность приходится расплачиваться пониженной производительностью. Шифрование сигнатуры может привести к падению производительности на 10–40%. Если содержимое сообщения имеет низкое значение, а пропускная способность производительности более важна, используйте SignBeforeEncrypt. При выборе этого значения хэш-код сигнатуры передается открытым текстом, что при низкой энтропии делает сообщения более уязвимыми к взлому путем подбора сигнатуры.  
  
## <a name="custom-bindings-only"></a>Только настраиваемые привязки  
 Чтобы изменить значение свойства `MessageProtectionOrder`, необходимо создать настраиваемую привязку безопасности. Дополнительные сведения о создании пользовательских привязок см. в разделе [Создание определяемых пользователем привязок](~/docs/framework/wcf/extending/creating-user-defined-bindings.md). Дополнительные сведения о создании пользовательской привязки для конкретного режима проверки подлинности см. [в разделе как Создание SecurityBindingElement для указанного режима](~/docs/framework/wcf/feature-details/how-to-create-a-securitybindingelement-for-a-specified-authentication-mode.md)проверки подлинности.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> элемент и задается его <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder%2A> свойство SignBeforeEncrypt.  
  
 [!code-csharp[c_CustomBinding#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_custombinding/cs/c_custombinding.cs#3)]
 [!code-vb[c_CustomBinding#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_custombinding/vb/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Security.MessageProtectionOrder" />
    <altmember cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />
    <altmember cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />
    <related type="Article" href="https://msdn.microsoft.com/library/203a9f9e-3a73-427c-87aa-721c56265b29">Как Создание пользовательской привязки с использованием элемента SecurityBindingElement</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c4960675-d701-4bc9-b400-36a752fdd08b">Создание пользовательских привязок и элементов привязки</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a7c7747a-5b8c-463f-8493-7266dac75066">Как Создание SecurityBindingElement для заданного режима проверки подлинности</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0868866d-40b4-4341-8e42-eee3b7f15b69">Шифрование цифровых сигнатур</related>
  </Docs>
  <Members>
    <Member MemberName="EncryptBeforeSign">
      <MemberSignature Language="C#" Value="EncryptBeforeSign" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder EncryptBeforeSign = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign" />
      <MemberSignature Language="VB.NET" Value="EncryptBeforeSign" />
      <MemberSignature Language="C++ CLI" Value="EncryptBeforeSign" />
      <MemberSignature Language="F#" Value="EncryptBeforeSign = 2" Usage="System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Указывает, что сообщение SOAP шифруется перед созданием для этого сообщения цифровой сигнатуры.</summary>
      </Docs>
    </Member>
    <Member MemberName="SignBeforeEncrypt">
      <MemberSignature Language="C#" Value="SignBeforeEncrypt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder SignBeforeEncrypt = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />
      <MemberSignature Language="VB.NET" Value="SignBeforeEncrypt" />
      <MemberSignature Language="C++ CLI" Value="SignBeforeEncrypt" />
      <MemberSignature Language="F#" Value="SignBeforeEncrypt = 0" Usage="System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Указывает, что цифровая сигнатура создается для сообщения SOAP перед шифрованием любой другой части сообщения, однако сама цифровая сигнатура не шифруется.</summary>
      </Docs>
    </Member>
    <Member MemberName="SignBeforeEncryptAndEncryptSignature">
      <MemberSignature Language="C#" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder SignBeforeEncryptAndEncryptSignature = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="VB.NET" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="C++ CLI" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="F#" Value="SignBeforeEncryptAndEncryptSignature = 1" Usage="System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Указывает, что цифровая сигнатура создается для сообщения SOAP перед шифрованием любой другой части сообщения, а сама цифровая сигнатура также шифруется.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
