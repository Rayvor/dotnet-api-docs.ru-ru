<Type Name="IdentityVerifier" FullName="System.ServiceModel.Security.IdentityVerifier">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab320a386aa6febb6e7b4de02f50187645e490f0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70722319" /></Metadata><TypeSignature Language="C#" Value="public abstract class IdentityVerifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IdentityVerifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.IdentityVerifier" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IdentityVerifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdentityVerifier abstract" />
  <TypeSignature Language="F#" Value="type IdentityVerifier = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b8510-101">Базовый класс <see langword="abstract" />, который можно реализовать для проверки ожидаемого удостоверения в контексте авторизации, представляющем удаленную конечную точку, а также для создания удостоверения на основе адреса конечной точки.</span><span class="sxs-lookup"><span data-stu-id="b8510-101">An <see langword="abstract" /> base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8510-102">Инфраструктура WCF вызывает <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> метод сначала для получения удостоверения службы из сообщения.</span><span class="sxs-lookup"><span data-stu-id="b8510-102">The WCF infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> method first to retrieve the service's identity from the message.</span></span> <span data-ttu-id="b8510-103">Затем инфраструктура вызывает метод <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> с возвращенными значениями <xref:System.ServiceModel.EndpointIdentity> и <xref:System.IdentityModel.Policy.AuthorizationContext>.</span><span class="sxs-lookup"><span data-stu-id="b8510-103">Next, the infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> method with the returned <xref:System.ServiceModel.EndpointIdentity> and <xref:System.IdentityModel.Policy.AuthorizationContext>.</span></span>  
  
 <span data-ttu-id="b8510-104">Дополнительные сведения о реализации класса см. в разделе [как создать настраиваемый проверяющий идентификатор клиента](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).</span><span class="sxs-lookup"><span data-stu-id="b8510-104">For more information about implementing the class, see [How to: Create a Custom Client Identity Verifier](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f2d34e43-fa8b-46d2-91cf-d2960e13e16b"><span data-ttu-id="b8510-105">Как создать настраиваемый проверяющий идентификатор клиента</span><span class="sxs-lookup"><span data-stu-id="b8510-105">How To: Create a Custom Client Identity Verifier</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/a4c8f52c-5b30-45c4-a545-63244aba82be"><span data-ttu-id="b8510-106">Указание удостоверения службы для проверки подлинности</span><span class="sxs-lookup"><span data-stu-id="b8510-106">Specifying the Identity of a Service for Authentication</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IdentityVerifier ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IdentityVerifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8510-107">Создает экземпляр этого класса.</span><span class="sxs-lookup"><span data-stu-id="b8510-107">Creates an instance of this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public abstract bool CheckAccess (System.ServiceModel.EndpointIdentity identity, System.IdentityModel.Policy.AuthorizationContext authContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.EndpointIdentity identity, class System.IdentityModel.Policy.AuthorizationContext authContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CheckAccess (identity As EndpointIdentity, authContext As AuthorizationContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CheckAccess(System::ServiceModel::EndpointIdentity ^ identity, System::IdentityModel::Policy::AuthorizationContext ^ authContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.EndpointIdentity * System.IdentityModel.Policy.AuthorizationContext -&gt; bool" Usage="identityVerifier.CheckAccess (identity, authContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="authContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="b8510-108"><see cref="T:System.ServiceModel.EndpointIdentity" /> для проверки.</span><span class="sxs-lookup"><span data-stu-id="b8510-108">The <see cref="T:System.ServiceModel.EndpointIdentity" /> to verify.</span></span></param>
        <param name="authContext"><span data-ttu-id="b8510-109">Контекст авторизации <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />, в котором будет проверяться удостоверение <paramref name="identity" />.</span><span class="sxs-lookup"><span data-stu-id="b8510-109">The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> to test the <paramref name="identity" /> against.</span></span></param>
        <summary><span data-ttu-id="b8510-110">Реализует метод проверки удостоверения.</span><span class="sxs-lookup"><span data-stu-id="b8510-110">Implements a method to verify an identity.</span></span></summary>
        <returns><span data-ttu-id="b8510-111">Значение <see langword="true" />, если удостоверение проверено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b8510-111"><see langword="true" /> if the identity is verified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b8510-112">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b8510-112">The default is <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.IdentityVerifier CreateDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Security.IdentityVerifier CreateDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault () As IdentityVerifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Security::IdentityVerifier ^ CreateDefault();" />
      <MemberSignature Language="F#" Value="static member CreateDefault : unit -&gt; System.ServiceModel.Security.IdentityVerifier" Usage="System.ServiceModel.Security.IdentityVerifier.CreateDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IdentityVerifier</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8510-113">Создает экземпляр этого класса по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="b8510-113">Creates a default instance of this class.</span></span></summary>
        <returns><span data-ttu-id="b8510-114">Экземпляр класса <see cref="T:System.ServiceModel.Security.IdentityVerifier" /> по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="b8510-114">A default instance of <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetIdentity">
      <MemberSignature Language="C#" Value="public abstract bool TryGetIdentity (System.ServiceModel.EndpointAddress reference, out System.ServiceModel.EndpointIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetIdentity(class System.ServiceModel.EndpointAddress reference, [out] class System.ServiceModel.EndpointIdentity&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetIdentity (reference As EndpointAddress, ByRef identity As EndpointIdentity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetIdentity(System::ServiceModel::EndpointAddress ^ reference, [Runtime::InteropServices::Out] System::ServiceModel::EndpointIdentity ^ % identity);" />
      <MemberSignature Language="F#" Value="abstract member TryGetIdentity : System.ServiceModel.EndpointAddress *  -&gt; bool" Usage="identityVerifier.TryGetIdentity (reference, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="b8510-115">Адрес <see cref="T:System.ServiceModel.EndpointAddress" />, используемый для создания удостоверения.</span><span class="sxs-lookup"><span data-stu-id="b8510-115">The <see cref="T:System.ServiceModel.EndpointAddress" /> to use for creating the identity.</span></span></param>
        <param name="identity"><span data-ttu-id="b8510-116">Возвращаемое удостоверение <see cref="T:System.ServiceModel.EndpointIdentity" />.</span><span class="sxs-lookup"><span data-stu-id="b8510-116">The <see cref="T:System.ServiceModel.EndpointIdentity" /> that is returned.</span></span></param>
        <summary><span data-ttu-id="b8510-117">Пытается создать удостоверение на основе конечной точки.</span><span class="sxs-lookup"><span data-stu-id="b8510-117">Tries to create an identity from an endpoint.</span></span></summary>
        <returns><span data-ttu-id="b8510-118">Значение <see langword="true" />, если удостоверение возвращено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b8510-118"><see langword="true" /> if the identity is returned; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b8510-119">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b8510-119">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8510-120">По умолчанию объект <xref:System.ServiceModel.Security.IdentityVerifier> создает удостоверение <xref:System.ServiceModel.DnsEndpointIdentity> на основе части имени узла <xref:System.ServiceModel.EndpointAddress.Uri%2A>, если в качестве части адреса <xref:System.ServiceModel.EndpointIdentity> не было явным образом указано удостоверение <xref:System.ServiceModel.EndpointAddress>.</span><span class="sxs-lookup"><span data-stu-id="b8510-120">The default <xref:System.ServiceModel.Security.IdentityVerifier> creates a <xref:System.ServiceModel.DnsEndpointIdentity> based on the hostname portion of <xref:System.ServiceModel.EndpointAddress.Uri%2A> if an explicit <xref:System.ServiceModel.EndpointIdentity> has not been specified as part of the <xref:System.ServiceModel.EndpointAddress>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
