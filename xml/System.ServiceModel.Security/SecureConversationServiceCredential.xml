<Type Name="SecureConversationServiceCredential" FullName="System.ServiceModel.Security.SecureConversationServiceCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2195adac5533763c67aba666b17818fac8740c7d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70579815" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecureConversationServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecureConversationServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureConversationServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureConversationServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type SecureConversationServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет параметры учетных данных для службы безопасного диалога.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для обеспечения безопасности в безопасном диалоге используется обмен сообщениями и маркер контекста безопасности. Маркер контекста безопасности совместно используется взаимодействующими сторонами на протяжении всего сеанса связи. Служба может выпускать два типа маркеров контекста безопасности.  
  
-   Маркер первого типа основан на сеансах и содержит уникальный идентификатор. Сообщения переносят только идентификатор, а служба поддерживает кэш сопоставления состояний, в котором хранятся сведения о соответствии между идентификаторами маркеров контекста безопасности и содержимым (таким содержимым могут быть утверждения, ключи безопасности и т. д.). Чтобы служба могла оптимизировать ресурсы кэша, грамотно реализованный клиент должен вовремя отправлять запрос на отмену маркера контекста безопасности. При создании экземпляра этого класса путем вызова метода <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> с параметром `requireCancellation`, которому присвоено значение `true`, создается маркер контекста безопасности первого типа.  
  
-   Маркер второго типа является автономным и хранится в куки-файле на стороне клиента. В таком маркере контекста безопасности хранится вся информация о состоянии, поэтому при его использовании не требуется ни управление состоянием со стороны службы, ни запрос на отмену маркера со стороны клиента. Такой маркер контекста безопасности иногда называют «маркером в режиме куки». Поскольку в маркере контекста безопасности содержится вся информация о состоянии, его размер превышает размер маркера на основе сеанса. При использовании маркеров контекста безопасности на основе сеансов большая часть информации о состоянии хранится в службе. Однако поскольку эта информация является автономной, ее можно использовать на протяжении всего времени работы службы и сохранять при завершении работы и перезапуске службы.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SecurityContextClaimTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Type&gt; SecurityContextClaimTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; SecurityContextClaimTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityContextClaimTypes As Collection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ SecurityContextClaimTypes { System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContextClaimTypes : System.Collections.ObjectModel.Collection&lt;Type&gt;" Usage="System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию утверждений <see cref="T:System.Type" /> для сериализации файлов cookie.</summary>
        <value>Коллекция утверждений <see cref="T:System.Type" /> для сериализации куки-файлов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы сериализовать утверждения в файлы cookie SCT, Windows Communication Foundation (WCF) <xref:System.Runtime.Serialization.DataContractSerializer> по умолчанию использует. Так как ресурс утверждения является расширяемым, WCF позволяет предоставить список известных типов ресурсов. Это упрощает работу <xref:System.Runtime.Serialization.DataContractSerializer> при сериализации утверждений в куки-файлы и позволяет возвращать исходные строго типизированные объекты.  
  
   
  
## Examples  
 В следующем примере кода показано, как возвратить это свойство.  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityStateEncoder">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityStateEncoder As SecurityStateEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityStateEncoder ^ SecurityStateEncoder { System::ServiceModel::Security::SecurityStateEncoder ^ get(); void set(System::ServiceModel::Security::SecurityStateEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityStateEncoder : System.ServiceModel.Security.SecurityStateEncoder with get, set" Usage="System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityStateEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает настраиваемый кодировщик <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />, предназначенный для кодирования и декодирования сериализации куки-файлов.</summary>
        <value>Объект <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />, который представляет собой настраиваемую версию объекта <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В «режиме куки» служба создает для клиента маркер контекста безопасности в виде куки-файла, что освобождает службу от необходимости поддерживать состояние безопасности. Клиент отправляет куки-файл обратно в сообщении запроса, что позволяет службе снять защиту с сообщения запроса и проверить это сообщение. Поскольку маркер контекста безопасности часто передается по незащищенным сетям, его необходимо защитить.  
  
 По умолчанию Windows Communication Foundation (WCF) использует <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> класс для защиты файла cookie с помощью API защиты данных (DPAPI). Чтобы API защиты данных работал в среде веб-фермы, все серверные службы должны быть запущены из-под одной учетной записи пользователя домена. Другими словами, если служба размещена на веб-сервере, рабочий процесс служб IIS необходимо настроить на запуск от имени пользователя домена.  
  
 Это свойство позволяет использовать для шифрования и расшифровки куки-файлов настраиваемый объект <xref:System.ServiceModel.Security.SecurityStateEncoder>, не зависящий от API защиты данных.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать это свойство.  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
