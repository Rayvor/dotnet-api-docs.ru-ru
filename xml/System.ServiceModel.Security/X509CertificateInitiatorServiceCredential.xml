<Type Name="X509CertificateInitiatorServiceCredential" FullName="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c6c8fd416d81aa7c549f6b619a680204e9b046f3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69148851" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateInitiatorServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateInitiatorServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateInitiatorServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет параметры, используемые службой для проверки предоставленного клиентом сертификата. Также содержит сертификат, используемый службой для шифрования откликов или обратных вызовов клиентов в режиме проверки подлинности сообщений <see langword="MutualCertificateDuplex" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Заданный в этом классе сертификат используется для шифрования сообщений к клиенту только для привязок, которые настроены на использование режима проверки подлинности сообщений `MutualCertificateDuplex`.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ClientCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ClientCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ClientCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ClientCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ClientCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает параметры, используемые для проверки сертификата, предоставленного клиентом при проверке подлинности.</summary>
        <value>Параметры, используемые для проверки сертификата, предоставленного клиентом при аутентификации.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем фрагменте кода показано, как с помощью этого свойства задать параметры проверки подлинности сертификата.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает сертификат, используемый в режиме проверки подлинности сообщений <see langword="MutualCertificateDuplex" />.</summary>
        <value>Свойство <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> используется для шифрования сообщений, отправляемых клиенту службой по некоррелированному дуплексному каналу в режиме проверки подлинности сообщений <see langword="MutualCertificateDuplex" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется для привязок, настроенных на работу с защищенными сообщениями в режиме проверки подлинности сообщений `MutualCertificateDuplex`.  
  
   
  
## Examples  
 В следующем примере кода показано, как с помощью этого свойства загрузить сертификат.  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка задать учетные данные, предназначенные только для чтения.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Задает сертификат, используемый для шифрования сообщений, отправленных клиенту службой. Этот параметр используется только для привязок, настроенных на работу в режиме проверки подлинности сообщений <see langword="MutualCertificateDuplex" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">Различающееся имя субъекта.</param>
        <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат.</param>
        <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
        <summary>Позволяет указать сертификат, который будет использоваться для шифрования сообщений клиенту, по различающемуся имени субъекта. Этот параметр используется только для привязок, настроенных на работу в режиме проверки подлинности сообщений <see langword="MutualCertificateDuplex" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о параметре `subjectName` см. в разделе <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  
  
 Значения для параметра `storeLocation` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: хранилище сертификатов, назначенное локальному компьютеру (по умолчанию).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: хранилище сертификатов, используемое текущим пользователем.  
  
 Если клиентское приложение выполняется под учетной записью системы, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Если клиентское приложение выполняется под учетной записью пользователя, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Значения для параметра `storeName` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
   
  
## Examples  
 В следующем примере кода показано, как с помощью этого метода задать сертификат.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Расположение хранилища сертификатов, из которого служба получает сертификат.</param>
        <param name="storeName">Имя открываемого хранилища сертификатов X.509.</param>
        <param name="findType">Тип поиска сертификата X.509.</param>
        <param name="findValue">Значение для поиска в хранилище сертификатов X.509.</param>
        <summary>Указывает сертификат, используемый для шифрования сообщений клиенту. Этот параметр используется только для привязок, настроенных на работу в режиме проверки подлинности сообщений <see langword="MutualCertificateDuplex" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значения для параметра `storeLocation` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreLocation>.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: хранилище сертификатов, назначенное локальному компьютеру (по умолчанию).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: хранилище сертификатов, используемое текущим пользователем.  
  
 Если приложение выполняется под учетной записью системы, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Если приложение выполняется под учетной записью пользователя, то сертификат обычно находится в <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Значения для параметра `storeName` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
 Значения для параметра `findType` включены в перечисление <xref:System.Security.Cryptography.X509Certificates.X509FindType>.  
  
 Наиболее часто используется перечисление <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, которое выполняет поиск с учетом регистра по имени субъекта сертификатов в указанном хранилище. Это может быть неточный поиск. Если сертификаты не найдены либо найдено несколько сертификатов, удовлетворяющих условиям поиска, вызывается исключение <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 В следующем примере кода показано, как с помощью этого метода задать сертификат.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
