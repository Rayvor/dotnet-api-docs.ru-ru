<Type Name="PolicyHttpMessageHandler" FullName="Microsoft.Extensions.Http.PolicyHttpMessageHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc58ac430794cfef990d753033dc9816f8227d4a" /><Meta Name="ms.sourcegitcommit" Value="218a2e36017b9f4ffa6c10e1644404e6d7d6bd1e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/05/2019" /><Meta Name="ms.locfileid" Value="74839707" /></Metadata><TypeSignature Language="C#" Value="public class PolicyHttpMessageHandler : System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PolicyHttpMessageHandler extends System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PolicyHttpMessageHandler&#xA;Inherits DelegatingHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PolicyHttpMessageHandler : System::Net::Http::DelegatingHandler" />
  <TypeSignature Language="F#" Value="type PolicyHttpMessageHandler = class&#xA;    inherit DelegatingHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.DelegatingHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1d71d-101">Реализация <see cref="T:System.Net.Http.DelegatingHandler" />, которая выполняет обработку запросов, окруженную <see cref="T:Polly.Policy" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-101">A <see cref="T:System.Net.Http.DelegatingHandler" /> implementation that executes request processing surrounded by a <see cref="T:Polly.Policy" />.</span></span></summary>
    <remarks><para>
<span data-ttu-id="1d71d-102">Эта реализация обработчика сообщений поддерживает использование политик, предоставляемых библиотекой Polly, для временной обработки и обеспечения отказоустойчивости.</span><span class="sxs-lookup"><span data-stu-id="1d71d-102">This message handler implementation supports the use of policies provided by the Polly library for transient-fault-handling and resiliency.</span></span>
            </para>
      <para>
<span data-ttu-id="1d71d-103">Документация, предоставленная здесь, является руководством по использованию Polly вместе с <see cref="T:System.Net.Http.IHttpClientFactory" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-103">The documentation provided here is focused guidance for using Polly together with the <see cref="T:System.Net.Http.IHttpClientFactory" />.</span></span> <span data-ttu-id="1d71d-104">См. Проект Polly и его документацию (https://github.com/app-vnext/Polly) для получения достоверных сведений о Polly.</span><span class="sxs-lookup"><span data-stu-id="1d71d-104">See the Polly project and its documentation (https://github.com/app-vnext/Polly) for authoritative information on Polly.</span></span>
            </para>
      <para>
<span data-ttu-id="1d71d-105">Методы расширения в <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> разработаны как удобный и правильный способ создания <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-105">The extension methods on <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> are designed as a convenient and correct way to create a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span></span>
            </para>
      <para>
<span data-ttu-id="1d71d-106">Метод <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" /> поддерживает создание <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> для любого типа политики.</span><span class="sxs-lookup"><span data-stu-id="1d71d-106">The <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddPolicyHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" /> method supports the creation of a <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> for any kind of policy.</span></span> <span data-ttu-id="1d71d-107">Сюда входят реактивные политики, такие как время ожидания или кэш, которые не потребовали первого запроса на сбой.</span><span class="sxs-lookup"><span data-stu-id="1d71d-107">This includes non-reactive policies, such as Timeout or Cache, which don't require the underlying request to fail first.</span></span>
            </para>
      <para><span data-ttu-id="1d71d-108">
        <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> и <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> удобные методы принимают только универсальный <see cref="T:Polly.IAsyncPolicy`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-108">
        <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> and the <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> convenience methods only accept the generic <see cref="T:Polly.IAsyncPolicy`1" />.</span></span> <span data-ttu-id="1d71d-109">Экземпляры универсальных политик можно создавать с помощью универсальных методов <see cref="T:Polly.Policy" /> например <see cref="M:Polly.Policy.TimeoutAsync``1(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-109">Generic policy instances can be created by using the generic methods on <see cref="T:Polly.Policy" /> such as <see cref="M:Polly.Policy.TimeoutAsync``1(System.Int32)" />.</span></span>
            </para>
      <para>
<span data-ttu-id="1d71d-110">Чтобы адаптировать существующие неуниверсальные <see cref="T:Polly.IAsyncPolicy" />, используйте код, подобный следующему:</span><span class="sxs-lookup"><span data-stu-id="1d71d-110">To adapt an existing non-generic <see cref="T:Polly.IAsyncPolicy" />, use code like the following:</span></span> <example>
<span data-ttu-id="1d71d-111">Преобразование неуниверсальной <c>политики иасинкполици</c> в <see cref="T:Polly.IAsyncPolicy`1" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-111">Converting a non-generic <c>IAsyncPolicy policy</c> to <see cref="T:Polly.IAsyncPolicy`1" />.</span></span>
            <code>
            policy.AsAsyncPolicy&lt;HttpResponseMessage&gt;()
            </code></example></para>
      <para>
<span data-ttu-id="1d71d-112">Метод <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddTransientHttpErrorPolicy(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{Polly.PolicyBuilder{System.Net.Http.HttpResponseMessage},Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" /> является упрямого удобным методом, который поддерживает применение политики для запросов, которые не удалось выполнить из-за сбоя соединения или ошибки сервера (код состояния HTTP 5XX).</span><span class="sxs-lookup"><span data-stu-id="1d71d-112">The <see cref="M:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions.AddTransientHttpErrorPolicy(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{Polly.PolicyBuilder{System.Net.Http.HttpResponseMessage},Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" /> method is an opinionated convenience method that supports the application of a policy for requests that fail due to a connection failure or server error (5XX HTTP status code).</span></span> <span data-ttu-id="1d71d-113">Этот тип метода поддерживает только реактивные политики, такие как повторы, средство разбиения на себя или откат.</span><span class="sxs-lookup"><span data-stu-id="1d71d-113">This kind of method supports only reactive policies such as Retry, Circuit-Breaker or Fallback.</span></span> <span data-ttu-id="1d71d-114">Этот метод предоставляется только для удобства; При необходимости рекомендуется создавать собственные политики, если это не соответствует вашим требованиям.</span><span class="sxs-lookup"><span data-stu-id="1d71d-114">This method is only provided for convenience; we recommend creating your own policies as needed if this does not meet your requirements.</span></span>
            </para>
      <para>
<span data-ttu-id="1d71d-115">При использовании таких политик, как повторная попытка или время ожидания, следует соблюдать осторожность, так как HttpClient предоставляет собственное время ожидания через <see cref="P:System.Net.Http.HttpClient.Timeout" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-115">Take care when using policies such as Retry or Timeout together as HttpClient provides its own timeout via <see cref="P:System.Net.Http.HttpClient.Timeout" />.</span></span>  <span data-ttu-id="1d71d-116">При объединении повторов и времени ожидания <see cref="P:System.Net.Http.HttpClient.Timeout" /> будет действовать как время ожидания для всех попыток; политику времени ожидания Polly можно настроить после применения политики повтора в последовательности конфигурации, чтобы обеспечить время ожидания для каждой попытки.</span><span class="sxs-lookup"><span data-stu-id="1d71d-116">When combining Retry and Timeout, <see cref="P:System.Net.Http.HttpClient.Timeout" /> will act as a timeout across all tries; a Polly Timeout policy can be configured after a Retry policy in the configuration sequence, to provide a timeout-per-try.</span></span>
            </para>
      <para>
<span data-ttu-id="1d71d-117">Все политики, предоставляемые Polly, предназначены для эффективного использования при длительном использовании.</span><span class="sxs-lookup"><span data-stu-id="1d71d-117">All policies provided by Polly are designed to be efficient when used in a long-lived way.</span></span> <span data-ttu-id="1d71d-118">Некоторые политики, такие как отсеков и средство разбиения, поддерживают состояние и должны быть ограничены между вызовами, которым требуется совместное использование отсеков или состояния деостановки.</span><span class="sxs-lookup"><span data-stu-id="1d71d-118">Certain policies such as the Bulkhead and Circuit-Breaker maintain state and should be scoped across calls you wish to share the Bulkhead or Circuit-Breaker state.</span></span> <span data-ttu-id="1d71d-119">Следите за тем, чтобы обеспечить правильное время существования при использовании политик и обработчиков сообщений в пользовательских сценариях.</span><span class="sxs-lookup"><span data-stu-id="1d71d-119">Take care to ensure the correct lifetimes when using policies and message handlers together in custom scenarios.</span></span> <span data-ttu-id="1d71d-120">Методы расширения, предоставляемые <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" />, предназначены для назначения длительного времени существования политик и обеспечения их использования при активной функции поворота обработчика.</span><span class="sxs-lookup"><span data-stu-id="1d71d-120">The extension methods provided by <see cref="T:Microsoft.Extensions.DependencyInjection.PollyHttpClientBuilderExtensions" /> are designed to assign a long lifetime to policies and ensure that they can be used when the handler rotation feature is active.</span></span>
            </para>
      <para>
<span data-ttu-id="1d71d-121"><see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> присоединяет контекст к <see cref="T:System.Net.Http.HttpRequestMessage" /> перед выполнением <see cref="T:Polly.Policy" />, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="1d71d-121">The <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" /> will attach a context to the <see cref="T:System.Net.Http.HttpRequestMessage" /> prior to executing a <see cref="T:Polly.Policy" />, if one does not already exist.</span></span> <span data-ttu-id="1d71d-122"><see cref="T:Polly.Context" /> будет предоставлена политике для использования внутри <see cref="T:Polly.Policy" /> и в других обработчиках сообщений.</span><span class="sxs-lookup"><span data-stu-id="1d71d-122">The <see cref="T:Polly.Context" /> will be provided to the policy for use inside the <see cref="T:Polly.Policy" /> and in other message handlers.</span></span>
            </para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PolicyHttpMessageHandler (Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt; policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt; policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.#ctor(Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (policy As IAsyncPolicy(Of HttpResponseMessage))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PolicyHttpMessageHandler(Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ policy);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Http.PolicyHttpMessageHandler : Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt; -&gt; Microsoft.Extensions.Http.PolicyHttpMessageHandler" Usage="new Microsoft.Extensions.Http.PolicyHttpMessageHandler policy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policy" Type="Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="1d71d-123">Политика.</span><span class="sxs-lookup"><span data-stu-id="1d71d-123">The policy.</span></span></param>
        <summary><span data-ttu-id="1d71d-124">Создает <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-124">Creates a new <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PolicyHttpMessageHandler (Func&lt;System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; policySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;class System.Net.Http.HttpRequestMessage, class Polly.IAsyncPolicy`1&lt;class System.Net.Http.HttpResponseMessage&gt;&gt; policySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.#ctor(System.Func{System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy{System.Net.Http.HttpResponseMessage}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (policySelector As Func(Of HttpRequestMessage, IAsyncPolicy(Of HttpResponseMessage)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PolicyHttpMessageHandler(Func&lt;System::Net::Http::HttpRequestMessage ^, Polly::IAsyncPolicy&lt;System::Net::Http::HttpResponseMessage ^&gt; ^&gt; ^ policySelector);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Http.PolicyHttpMessageHandler : Func&lt;System.Net.Http.HttpRequestMessage, Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt; -&gt; Microsoft.Extensions.Http.PolicyHttpMessageHandler" Usage="new Microsoft.Extensions.Http.PolicyHttpMessageHandler policySelector" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="policySelector" Type="System.Func&lt;System.Net.Http.HttpRequestMessage,Polly.IAsyncPolicy&lt;System.Net.Http.HttpResponseMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="policySelector"><span data-ttu-id="1d71d-125">Функция, которая может выбрать нужную политику для заданного <see cref="T:System.Net.Http.HttpRequestMessage" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-125">A function which can select the desired policy for a given <see cref="T:System.Net.Http.HttpRequestMessage" />.</span></span></param>
        <summary><span data-ttu-id="1d71d-126">Создает <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-126">Creates a new <see cref="T:Microsoft.Extensions.Http.PolicyHttpMessageHandler" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="policyHttpMessageHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SendCoreAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendCoreAsync (System.Net.Http.HttpRequestMessage request, Polly.Context context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendCoreAsync(class System.Net.Http.HttpRequestMessage request, class Polly.Context context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Http.PolicyHttpMessageHandler.SendCoreAsync(System.Net.Http.HttpRequestMessage,Polly.Context,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendCoreAsync(System::Net::Http::HttpRequestMessage ^ request, Polly::Context ^ context, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendCoreAsync : System.Net.Http.HttpRequestMessage * Polly.Context * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.SendCoreAsync : System.Net.Http.HttpRequestMessage * Polly.Context * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="policyHttpMessageHandler.SendCoreAsync (request, context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http.Polly</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="context" Type="Polly.Context" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="1d71d-127"><see cref="T:System.Net.Http.HttpRequestMessage" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-127">The <see cref="T:System.Net.Http.HttpRequestMessage" />.</span></span></param>
        <param name="context"><span data-ttu-id="1d71d-128"><see cref="T:Polly.Context" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-128">The <see cref="T:Polly.Context" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1d71d-129"><see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="1d71d-129">The <see cref="T:System.Threading.CancellationToken" />.</span></span></param>
        <summary><span data-ttu-id="1d71d-130">Вызывается в ходе выполнения <see cref="T:Polly.Policy" /> для обработки запроса.</span><span class="sxs-lookup"><span data-stu-id="1d71d-130">Called inside the execution of the <see cref="T:Polly.Policy" /> to perform request processing.</span></span></summary>
        <returns><span data-ttu-id="1d71d-131">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />, выдающий ответ после завершения.</span><span class="sxs-lookup"><span data-stu-id="1d71d-131">Returns a <see cref="T:System.Threading.Tasks.Task`1" /> that will yield a response when completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
