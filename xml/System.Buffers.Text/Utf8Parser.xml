<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57645e9d054b8c2922eba2a2549d1bdf58c3f613" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70331311" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет статические методы для преобразования строк в кодировке UTF-8 в распространенные типы данных.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * bool * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.Boolean" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы: 

|Строка форматирования|Пример ожидаемого формата|
|--|--|
|G (по умолчанию)|True/false|
|l|true/false|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * byte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.Byte" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы: 

|Строка форматирования|Пример ожидаемого формата|
|--|--|
|G/g (по умолчанию)| |
|D/d|122|
|N/n|122|       
|X/x|7а|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTime * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.DateTime" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|Комментарии|
|--|--|--|
|G (по умолчанию)|05/25/2017 10:30:15| |
|R|Вторник, 03 января 2017 08:08:05 GMT|(RFC 1123)|
|l|Вторник, 03 января 2017 08:08:05 GMT|(В нижнем регистре RFC 1123)|
|O|2017-06-12T05:30:45.7680000-07:00|(С циклическим обменом)|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTimeOffset * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.DateTimeOffset" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|Комментарии|
|--|--|--|
|G (по умолчанию)|05/25/2017 10:30:15| |
|R|Вторник, 03 января 2017 08:08:05 GMT|(RFC 1123)|
|l|Вторник, 03 января 2017 08:08:05 GMT|(В нижнем регистре RFC 1123)|
|O|2017-06-12T05:30:45.7680000-07:00|(С циклическим обменом)|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * decimal * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.Decimal" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|Комментарии|
|--|--|--|
|G/g (по умолчанию)| |  
|F/f|12,45|Фиксированная точка|
|E/e|1.245000 E1|Экспоненциальный|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * double * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.Double" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|Комментарии|
|--|--|--|
|G/g (по умолчанию)| |  
|F/f|12,45|Фиксированная точка|
|E/e|1.245000 E1|Экспоненциальный|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * Guid * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.Guid" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Ожидаемый формат|
|--|--|
|Г (по умолчанию)|nnnnnnnn-NNNN-NNNN-NNNN-нннннннннннн|
|С|{nnnnnnnn-NNNN-NNNN-NNNN-нннннннннннн}|
|С|(nnnnnnnn-NNNN-NNNN-NNNN-нннннннннннн)|
|в|нннннннннннннннннннннннннннннннн|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.Int16" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|
|--|--|
|G/g (по умолчанию)| |
|D/d|32767|
|N/n|32 767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.Int32" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|
|--|--|
|G/g (по умолчанию)| |
|D/d|32767|
|N/n|32 767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.Int64" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|
|--|--|
|G/g (по умолчанию)| |
|D/d|32767|
|N/n|32 767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * sbyte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.SByte" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы: 

|Строка форматирования|Пример ожидаемого формата|
|--|--|
|G/g (по умолчанию)| |
|D/d|122|
|N/n|122|       
|X/x|7а|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * single * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.Single" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы: 

Строка форматирования|Пример ожидаемого форнмат|Комментарии|
|--|--|--|
|G/g (по умолчанию)| |  
|F/f|12,45|Фиксированная точка|
|E/e|1.245000 E1|Экспоненциальный|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * TimeSpan * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.TimeSpan" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы: 

|Строка форматирования|Ожидаемый формат|Комментарии|
|--|--|--|
|c/t/T (по умолчанию)|[-] [d.] чч: мм: СС [. fffffff]|(формат константы)|
|П|[-] д:ХХ: мм: СС. fffffff||(общее время)|
|н|[-] [d:] [h] чч: СС [. f [f [f [f [f [f]]]]]|(общие краткие)|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.UInt16" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|
|--|--|
|G/g (по умолчанию)| |
|D/d|32767|
|N/n|32 767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint32 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.UInt32" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|
|--|--|
|G/g (по умолчанию)| |
|D/d|32767|
|N/n|32 767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка в кодировке UTF-8 для анализа.</param>
        <param name="value">При возвращении управления методом содержит проанализированное значение <paramref name="source" />, если операция анализа прошла успешно.</param>
        <param name="bytesConsumed">Если операция анализа прошла успешно, содержит длину проанализированной подстроки в байтах при возвращении управления методом. Если выполнение метода завершилось неудачно, <paramref name="bytesConsumed" /> имеет значение 0.</param>
        <param name="standardFormat">Ожидаемый формат строки в кодировке UTF-8.</param>
        <summary>Анализирует значение <see cref="T:System.UInt64" /> в начале строки в кодировке UTF-8.</summary>
        <returns>Значение <see langword="true" /> в случае успешного выполнения; значение <see langword="false" />, если строка синтаксически неправильна либо если произошло переполнение или потеря значимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Поддерживаемые форматы:

|Строка форматирования|Пример ожидаемого формата|
|--|--|
|G/g (по умолчанию)| |
|D/d|32767|
|N/n|32 767|       
|X/x|7fff|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
