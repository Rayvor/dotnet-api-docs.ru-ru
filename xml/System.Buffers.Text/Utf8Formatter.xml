<Type Name="Utf8Formatter" FullName="System.Buffers.Text.Utf8Formatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b6a81ddba39e4d33fbb0e1a61311e35a2d109d68" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73376143" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Formatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Formatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Formatter" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Formatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Formatter abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Formatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="261f7-101">Предоставляет статические методы для форматирования распространенных типов данных в виде строк в кодировке UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-101">Provides static mthods to format common data types as Utf8 strings.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (bool value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(bool value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Boolean,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Boolean, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : bool * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-102">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-102">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-103">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-103">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-104">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-104">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-105">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-105">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-106">Форматирует значение <see cref="T:System.Boolean" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-106">Formats a <see cref="T:System.Boolean" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-107">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-107"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="261f7-108">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-108">Formats supported:</span></span>

|<span data-ttu-id="261f7-109">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-109">Format string</span></span>|<span data-ttu-id="261f7-110">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-110">Example result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-111">G (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-111">G (default)</span></span>|<span data-ttu-id="261f7-112">True или False</span><span class="sxs-lookup"><span data-stu-id="261f7-112">True/False</span></span>|
|<span data-ttu-id="261f7-113">l</span><span class="sxs-lookup"><span data-stu-id="261f7-113">l</span></span>|<span data-ttu-id="261f7-114">true/false</span><span class="sxs-lookup"><span data-stu-id="261f7-114">true/false</span></span>|

<span data-ttu-id="261f7-115">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-115">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (byte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Byte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Byte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : byte * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-116">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-116">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-117">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-117">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-118">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-118">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-119">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-119">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-120">Форматирует значение <see cref="T:System.Byte" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-120">Formats a <see cref="T:System.Byte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-121">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-121"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="261f7-122">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-122">Formats supported:</span></span>

|<span data-ttu-id="261f7-123">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-123">Format string</span></span>|<span data-ttu-id="261f7-124">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-124">Example result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-125">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-125">G/g (default)</span></span>| |
|<span data-ttu-id="261f7-126">D/d</span><span class="sxs-lookup"><span data-stu-id="261f7-126">D/d</span></span>|<span data-ttu-id="261f7-127">122</span><span class="sxs-lookup"><span data-stu-id="261f7-127">122</span></span>|
|<span data-ttu-id="261f7-128">N/n</span><span class="sxs-lookup"><span data-stu-id="261f7-128">N/n</span></span>|<span data-ttu-id="261f7-129">122</span><span class="sxs-lookup"><span data-stu-id="261f7-129">122</span></span>|       
|<span data-ttu-id="261f7-130">X/x</span><span class="sxs-lookup"><span data-stu-id="261f7-130">X/x</span></span>|<span data-ttu-id="261f7-131">7а</span><span class="sxs-lookup"><span data-stu-id="261f7-131">7a</span></span>|

<span data-ttu-id="261f7-132">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-132">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTime value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTime value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTime,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTime, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTime * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-133">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-133">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-134">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-134">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-135">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-135">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-136">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-136">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-137">Форматирует значение <see cref="T:System.DateTime" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-137">Formats a <see cref="T:System.DateTime" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-138">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-138"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-139">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-139">Formats supported:</span></span>

|<span data-ttu-id="261f7-140">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-140">Format string</span></span>|<span data-ttu-id="261f7-141">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-141">Example result string</span></span>|<span data-ttu-id="261f7-142">Комментарии</span><span class="sxs-lookup"><span data-stu-id="261f7-142">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="261f7-143">G (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-143">G  (default)</span></span>|<span data-ttu-id="261f7-144">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="261f7-144">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="261f7-145">R</span><span class="sxs-lookup"><span data-stu-id="261f7-145">R</span></span>|<span data-ttu-id="261f7-146">Вторник, 03 января 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="261f7-146">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="261f7-147">(RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="261f7-147">(RFC 1123)</span></span>|
|<span data-ttu-id="261f7-148">l</span><span class="sxs-lookup"><span data-stu-id="261f7-148">l</span></span>|<span data-ttu-id="261f7-149">Вторник, 03 января 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="261f7-149">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="261f7-150">(В нижнем регистре RFC 1123)</span><span class="sxs-lookup"><span data-stu-id="261f7-150">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="261f7-151">O</span><span class="sxs-lookup"><span data-stu-id="261f7-151">O</span></span>|<span data-ttu-id="261f7-152">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="261f7-152">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="261f7-153">(С циклическим обменом)</span><span class="sxs-lookup"><span data-stu-id="261f7-153">(Round-trippable)</span></span>|

<span data-ttu-id="261f7-154">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-154">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (DateTimeOffset value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.DateTimeOffset value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.DateTimeOffset,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As DateTimeOffset, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : DateTimeOffset * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-155">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-155">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-156">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-156">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-157">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-157">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-158">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-158">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-159">Форматирует значение <see cref="T:System.DateTimeOffset" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-159">Formats a <see cref="T:System.DateTimeOffset" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-160">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-160"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (decimal value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Decimal value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Decimal,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Decimal, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : decimal * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-161">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-161">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-162">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-162">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-163">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-163">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-164">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-164">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-165">Форматирует значение <see cref="T:System.Decimal" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-165">Formats a <see cref="T:System.Decimal" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-166">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-166"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-167">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-167">Formats supported:</span></span>

|<span data-ttu-id="261f7-168">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-168">Format string</span></span>|<span data-ttu-id="261f7-169">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-169">Example result string</span></span>|<span data-ttu-id="261f7-170">Комментарии</span><span class="sxs-lookup"><span data-stu-id="261f7-170">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="261f7-171">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-171">G/g  (default)</span></span>| |  
|<span data-ttu-id="261f7-172">F/f</span><span class="sxs-lookup"><span data-stu-id="261f7-172">F/f</span></span>|<span data-ttu-id="261f7-173">12,45</span><span class="sxs-lookup"><span data-stu-id="261f7-173">12.45</span></span>|<span data-ttu-id="261f7-174">Фиксированная точка</span><span class="sxs-lookup"><span data-stu-id="261f7-174">Fixed point</span></span>|
|<span data-ttu-id="261f7-175">E/e</span><span class="sxs-lookup"><span data-stu-id="261f7-175">E/e</span></span>|<span data-ttu-id="261f7-176">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="261f7-176">1.245000e1</span></span>|<span data-ttu-id="261f7-177">Экспоненциальный</span><span class="sxs-lookup"><span data-stu-id="261f7-177">Exponential</span></span>|

<span data-ttu-id="261f7-178">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-178">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (double value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Double,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Double, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : double * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-179">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-179">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-180">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-180">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-181">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-181">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-182">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-182">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-183">Форматирует значение <see cref="T:System.Double" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-183">Formats a <see cref="T:System.Double" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-184">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-184"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-185">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-185">Formats supported:</span></span>

|<span data-ttu-id="261f7-186">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-186">Format string</span></span>|<span data-ttu-id="261f7-187">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-187">Example result string</span></span>|<span data-ttu-id="261f7-188">Комментарии</span><span class="sxs-lookup"><span data-stu-id="261f7-188">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="261f7-189">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-189">G/g  (default)</span></span>| |  
|<span data-ttu-id="261f7-190">F/f</span><span class="sxs-lookup"><span data-stu-id="261f7-190">F/f</span></span>|<span data-ttu-id="261f7-191">12,45</span><span class="sxs-lookup"><span data-stu-id="261f7-191">12.45</span></span>|<span data-ttu-id="261f7-192">Фиксированная точка</span><span class="sxs-lookup"><span data-stu-id="261f7-192">Fixed point</span></span>|
|<span data-ttu-id="261f7-193">E/e</span><span class="sxs-lookup"><span data-stu-id="261f7-193">E/e</span></span>|<span data-ttu-id="261f7-194">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="261f7-194">1.245000e1</span></span>|<span data-ttu-id="261f7-195">Экспоненциальный</span><span class="sxs-lookup"><span data-stu-id="261f7-195">Exponential</span></span>|

<span data-ttu-id="261f7-196">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-196">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (Guid value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.Guid value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Guid,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Guid, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : Guid * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-197">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-197">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-198">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-198">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-199">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-199">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-200">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-200">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-201">Форматирует значение <see cref="T:System.Guid" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-201">Formats a <see cref="T:System.Guid" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-202">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-202"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-203">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-203">Formats supported:</span></span>

|<span data-ttu-id="261f7-204">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-204">Format string</span></span>|<span data-ttu-id="261f7-205">Результирующая строка</span><span class="sxs-lookup"><span data-stu-id="261f7-205">Result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-206">Г (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-206">D (default)</span></span>|<span data-ttu-id="261f7-207">nnnnnnnn-NNNN-NNNN-NNNN-нннннннннннн</span><span class="sxs-lookup"><span data-stu-id="261f7-207">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="261f7-208">С</span><span class="sxs-lookup"><span data-stu-id="261f7-208">B</span></span>|<span data-ttu-id="261f7-209">{nnnnnnnn-NNNN-NNNN-NNNN-нннннннннннн}</span><span class="sxs-lookup"><span data-stu-id="261f7-209">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="261f7-210">С</span><span class="sxs-lookup"><span data-stu-id="261f7-210">P</span></span>|<span data-ttu-id="261f7-211">(nnnnnnnn-NNNN-NNNN-NNNN-нннннннннннн)</span><span class="sxs-lookup"><span data-stu-id="261f7-211">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="261f7-212">Нет</span><span class="sxs-lookup"><span data-stu-id="261f7-212">N</span></span>|<span data-ttu-id="261f7-213">нннннннннннннннннннннннннннннннн</span><span class="sxs-lookup"><span data-stu-id="261f7-213">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

<span data-ttu-id="261f7-214">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-214">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (short value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Short, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int16 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-215">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-215">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-216">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-216">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-217">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-217">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-218">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-218">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-219">Форматирует значение <see cref="T:System.Int16" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-219">Formats an <see cref="T:System.Int16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-220">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-220"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-221">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-221">Formats supported:</span></span>

|<span data-ttu-id="261f7-222">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-222">Format string</span></span>|<span data-ttu-id="261f7-223">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-223">Example result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-224">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-224">G/g (default)</span></span>| |
|<span data-ttu-id="261f7-225">D/d</span><span class="sxs-lookup"><span data-stu-id="261f7-225">D/d</span></span>|<span data-ttu-id="261f7-226">32767</span><span class="sxs-lookup"><span data-stu-id="261f7-226">32767</span></span>|
|<span data-ttu-id="261f7-227">N/n</span><span class="sxs-lookup"><span data-stu-id="261f7-227">N/n</span></span>|<span data-ttu-id="261f7-228">32 767</span><span class="sxs-lookup"><span data-stu-id="261f7-228">32,767</span></span>|       
|<span data-ttu-id="261f7-229">X/x</span><span class="sxs-lookup"><span data-stu-id="261f7-229">X/x</span></span>|<span data-ttu-id="261f7-230">7fff</span><span class="sxs-lookup"><span data-stu-id="261f7-230">7fff</span></span>|

<span data-ttu-id="261f7-231">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-231">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (int value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Integer, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-232">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-232">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-233">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-233">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-234">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-234">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-235">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-235">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-236">Форматирует значение <see cref="T:System.Int32" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-236">Formats an <see cref="T:System.Int32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-237">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-237"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-238">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-238">Formats supported:</span></span>

|<span data-ttu-id="261f7-239">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-239">Format string</span></span>|<span data-ttu-id="261f7-240">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-240">Example result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-241">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-241">G/g (default)</span></span>| |
|<span data-ttu-id="261f7-242">D/d</span><span class="sxs-lookup"><span data-stu-id="261f7-242">D/d</span></span>|<span data-ttu-id="261f7-243">32767</span><span class="sxs-lookup"><span data-stu-id="261f7-243">32767</span></span>|
|<span data-ttu-id="261f7-244">N/n</span><span class="sxs-lookup"><span data-stu-id="261f7-244">N/n</span></span>|<span data-ttu-id="261f7-245">32 767</span><span class="sxs-lookup"><span data-stu-id="261f7-245">32,767</span></span>|       
|<span data-ttu-id="261f7-246">X/x</span><span class="sxs-lookup"><span data-stu-id="261f7-246">X/x</span></span>|<span data-ttu-id="261f7-247">7fff</span><span class="sxs-lookup"><span data-stu-id="261f7-247">7fff</span></span>|
              
<span data-ttu-id="261f7-248">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-248">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (long value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Int64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Long, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : int64 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-249">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-249">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-250">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-250">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-251">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-251">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-252">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-252">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-253">Форматирует значение <see cref="T:System.Int64" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-253">Formats an <see cref="T:System.Int64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-254">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-254"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-255">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-255">Formats supported:</span></span>

|<span data-ttu-id="261f7-256">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-256">Format string</span></span>|<span data-ttu-id="261f7-257">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-257">Example result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-258">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-258">G/g (default)</span></span>| |
|<span data-ttu-id="261f7-259">D/d</span><span class="sxs-lookup"><span data-stu-id="261f7-259">D/d</span></span>|<span data-ttu-id="261f7-260">32767</span><span class="sxs-lookup"><span data-stu-id="261f7-260">32767</span></span>|
|<span data-ttu-id="261f7-261">N/n</span><span class="sxs-lookup"><span data-stu-id="261f7-261">N/n</span></span>|<span data-ttu-id="261f7-262">32 767</span><span class="sxs-lookup"><span data-stu-id="261f7-262">32,767</span></span>|       
|<span data-ttu-id="261f7-263">X/x</span><span class="sxs-lookup"><span data-stu-id="261f7-263">X/x</span></span>|<span data-ttu-id="261f7-264">7fff</span><span class="sxs-lookup"><span data-stu-id="261f7-264">7fff</span></span>|
              
<span data-ttu-id="261f7-265">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-265">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (sbyte value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(int8 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.SByte,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As SByte, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : sbyte * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-266">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-266">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-267">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-267">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-268">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-268">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-269">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-269">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-270">Форматирует значение <see cref="T:System.SByte" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-270">Formats an <see cref="T:System.SByte" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-271">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-271"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-272">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-272">Formats supported:</span></span>

|<span data-ttu-id="261f7-273">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-273">Format string</span></span>|<span data-ttu-id="261f7-274">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-274">Example result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-275">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-275">G/g (default)</span></span>| |
|<span data-ttu-id="261f7-276">D/d</span><span class="sxs-lookup"><span data-stu-id="261f7-276">D/d</span></span>|<span data-ttu-id="261f7-277">122</span><span class="sxs-lookup"><span data-stu-id="261f7-277">122</span></span>|
|<span data-ttu-id="261f7-278">N/n</span><span class="sxs-lookup"><span data-stu-id="261f7-278">N/n</span></span>|<span data-ttu-id="261f7-279">122</span><span class="sxs-lookup"><span data-stu-id="261f7-279">122</span></span>|       
|<span data-ttu-id="261f7-280">X/x</span><span class="sxs-lookup"><span data-stu-id="261f7-280">X/x</span></span>|<span data-ttu-id="261f7-281">7а</span><span class="sxs-lookup"><span data-stu-id="261f7-281">7a</span></span>|

<span data-ttu-id="261f7-282">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-282">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
               
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (float value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(float32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.Single,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As Single, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : single * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-283">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-283">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-284">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-284">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-285">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-285">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-286">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-286">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-287">Форматирует значение <see cref="T:System.Single" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-287">Formats a <see cref="T:System.Single" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-288">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-288"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-289">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-289">Formats supported:</span></span>

|<span data-ttu-id="261f7-290">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-290">Format string</span></span>|<span data-ttu-id="261f7-291">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-291">Example result string</span></span>|<span data-ttu-id="261f7-292">Комментарии</span><span class="sxs-lookup"><span data-stu-id="261f7-292">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="261f7-293">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-293">G/g  (default)</span></span>| |  
|<span data-ttu-id="261f7-294">F/f</span><span class="sxs-lookup"><span data-stu-id="261f7-294">F/f</span></span>|<span data-ttu-id="261f7-295">12,45</span><span class="sxs-lookup"><span data-stu-id="261f7-295">12.45</span></span>|<span data-ttu-id="261f7-296">Фиксированная точка</span><span class="sxs-lookup"><span data-stu-id="261f7-296">Fixed point</span></span>|
|<span data-ttu-id="261f7-297">E/e</span><span class="sxs-lookup"><span data-stu-id="261f7-297">E/e</span></span>|<span data-ttu-id="261f7-298">1.245000 E1</span><span class="sxs-lookup"><span data-stu-id="261f7-298">1.245000e1</span></span>|<span data-ttu-id="261f7-299">Экспоненциальный</span><span class="sxs-lookup"><span data-stu-id="261f7-299">Exponential</span></span>|

<span data-ttu-id="261f7-300">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-300">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (TimeSpan value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(valuetype System.TimeSpan value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.TimeSpan,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As TimeSpan, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : TimeSpan * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-301">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-301">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-302">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-302">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-303">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-303">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-304">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-304">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-305">Форматирует значение <see cref="T:System.TimeSpan" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-305">Formats a <see cref="T:System.TimeSpan" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-306">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-306"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-307">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-307">Formats supported:</span></span>

|<span data-ttu-id="261f7-308">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-308">Format string</span></span>|<span data-ttu-id="261f7-309">Результирующая строка</span><span class="sxs-lookup"><span data-stu-id="261f7-309">Result string</span></span>|<span data-ttu-id="261f7-310">Комментарии</span><span class="sxs-lookup"><span data-stu-id="261f7-310">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="261f7-311">c/t/T (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-311">c/t/T (default)</span></span>|<span data-ttu-id="261f7-312">[-] [d.] чч: мм: СС [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="261f7-312">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="261f7-313">(формат константы)</span><span class="sxs-lookup"><span data-stu-id="261f7-313">(constant format)</span></span>|
|<span data-ttu-id="261f7-314">П</span><span class="sxs-lookup"><span data-stu-id="261f7-314">G</span></span>|<span data-ttu-id="261f7-315">[-] д:ХХ: мм: СС. fffffff</span><span class="sxs-lookup"><span data-stu-id="261f7-315">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="261f7-316">(общее время)</span><span class="sxs-lookup"><span data-stu-id="261f7-316">(general long)</span></span>|
|<span data-ttu-id="261f7-317">н</span><span class="sxs-lookup"><span data-stu-id="261f7-317">g</span></span>|<span data-ttu-id="261f7-318">[-] [d:] [h] чч: СС [. f [f [f [f [f [f]]]]]</span><span class="sxs-lookup"><span data-stu-id="261f7-318">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="261f7-319">(общие краткие)</span><span class="sxs-lookup"><span data-stu-id="261f7-319">(general short)</span></span>|

<span data-ttu-id="261f7-320">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-320">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>

        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ushort value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int16 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt16,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UShort, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint16 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-321">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-321">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-322">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-322">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-323">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-323">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-324">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-324">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-325">Форматирует значение <see cref="T:System.UInt16" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-325">Formats a <see cref="T:System.UInt16" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-326">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-326"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-327">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-327">Formats supported:</span></span>

|<span data-ttu-id="261f7-328">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-328">Format string</span></span>|<span data-ttu-id="261f7-329">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-329">Example result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-330">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-330">G/g (default)</span></span>| |
|<span data-ttu-id="261f7-331">D/d</span><span class="sxs-lookup"><span data-stu-id="261f7-331">D/d</span></span>|<span data-ttu-id="261f7-332">32767</span><span class="sxs-lookup"><span data-stu-id="261f7-332">32767</span></span>|
|<span data-ttu-id="261f7-333">N/n</span><span class="sxs-lookup"><span data-stu-id="261f7-333">N/n</span></span>|<span data-ttu-id="261f7-334">32 767</span><span class="sxs-lookup"><span data-stu-id="261f7-334">32,767</span></span>|       
|<span data-ttu-id="261f7-335">X/x</span><span class="sxs-lookup"><span data-stu-id="261f7-335">X/x</span></span>|<span data-ttu-id="261f7-336">7fff</span><span class="sxs-lookup"><span data-stu-id="261f7-336">7fff</span></span>|

<span data-ttu-id="261f7-337">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-337">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (uint value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int32 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt32,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As UInteger, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint32 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-338">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-338">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-339">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-339">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-340">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-340">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-341">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-341">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-342">Форматирует значение <see cref="T:System.UInt32" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-342">Formats a <see cref="T:System.UInt32" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-343">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-343"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="261f7-344">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-344">Formats supported:</span></span>

|<span data-ttu-id="261f7-345">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-345">Format string</span></span>|<span data-ttu-id="261f7-346">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-346">Example result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-347">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-347">G/g (default)</span></span>| |
|<span data-ttu-id="261f7-348">D/d</span><span class="sxs-lookup"><span data-stu-id="261f7-348">D/d</span></span>|<span data-ttu-id="261f7-349">32767</span><span class="sxs-lookup"><span data-stu-id="261f7-349">32767</span></span>|
|<span data-ttu-id="261f7-350">N/n</span><span class="sxs-lookup"><span data-stu-id="261f7-350">N/n</span></span>|<span data-ttu-id="261f7-351">32 767</span><span class="sxs-lookup"><span data-stu-id="261f7-351">32,767</span></span>|       
|<span data-ttu-id="261f7-352">X/x</span><span class="sxs-lookup"><span data-stu-id="261f7-352">X/x</span></span>|<span data-ttu-id="261f7-353">7fff</span><span class="sxs-lookup"><span data-stu-id="261f7-353">7fff</span></span>|

<span data-ttu-id="261f7-354">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-354">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public static bool TryFormat (ulong value, Span&lt;byte&gt; destination, out int bytesWritten, System.Buffers.StandardFormat format = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryFormat(unsigned int64 value, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, valuetype System.Buffers.StandardFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Formatter.TryFormat(System.UInt64,System.Span{System.Byte},System.Int32@,System.Buffers.StandardFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFormat (value As ULong, destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional format As StandardFormat = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member TryFormat : uint64 * Span&lt;byte&gt; * int * System.Buffers.StandardFormat -&gt; bool" Usage="System.Buffers.Text.Utf8Formatter.TryFormat (value, destination, bytesWritten, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.Buffers.StandardFormat" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="261f7-355">Форматируемое значение.</span><span class="sxs-lookup"><span data-stu-id="261f7-355">The value to format.</span></span></param>
        <param name="destination"><span data-ttu-id="261f7-356">Буфер, в который записывается форматированное значение UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-356">The buffer to write the UTF8-formatted value to.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="261f7-357">Когда метод возвращает управление, содержит длину форматированного текста в байтах.</span><span class="sxs-lookup"><span data-stu-id="261f7-357">When the method returns, contains the length of the formatted text in bytes.</span></span></param>
        <param name="format"><span data-ttu-id="261f7-358">Стандартный формат, который необходимо использовать.</span><span class="sxs-lookup"><span data-stu-id="261f7-358">The standard format to use.</span></span></param>
        <summary><span data-ttu-id="261f7-359">Форматирует значение <see cref="T:System.UInt64" /> как строку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="261f7-359">Formats a <see cref="T:System.UInt64" /> as a UTF8 string.</span></span></summary>
        <returns><span data-ttu-id="261f7-360">Значение <see langword="true" />, если операция форматирования завершается успешно; значение <see langword="false" />, если буфер <paramref name="buffer" /> слишком мал.</span><span class="sxs-lookup"><span data-stu-id="261f7-360"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> if <paramref name="buffer" /> is too small.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="261f7-361">Поддерживаемые форматы:</span><span class="sxs-lookup"><span data-stu-id="261f7-361">Formats supported:</span></span>

|<span data-ttu-id="261f7-362">Строка форматирования</span><span class="sxs-lookup"><span data-stu-id="261f7-362">Format string</span></span>|<span data-ttu-id="261f7-363">Пример строки результата</span><span class="sxs-lookup"><span data-stu-id="261f7-363">Example result string</span></span>|
|--|--|
|<span data-ttu-id="261f7-364">G/g (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="261f7-364">G/g (default)</span></span>| |
|<span data-ttu-id="261f7-365">D/d</span><span class="sxs-lookup"><span data-stu-id="261f7-365">D/d</span></span>|<span data-ttu-id="261f7-366">32767</span><span class="sxs-lookup"><span data-stu-id="261f7-366">32767</span></span>|
|<span data-ttu-id="261f7-367">N/n</span><span class="sxs-lookup"><span data-stu-id="261f7-367">N/n</span></span>|<span data-ttu-id="261f7-368">32 767</span><span class="sxs-lookup"><span data-stu-id="261f7-368">32,767</span></span>|       
|<span data-ttu-id="261f7-369">X/x</span><span class="sxs-lookup"><span data-stu-id="261f7-369">X/x</span></span>|<span data-ttu-id="261f7-370">7fff</span><span class="sxs-lookup"><span data-stu-id="261f7-370">7fff</span></span>|

<span data-ttu-id="261f7-371">Если метод завершается ошибкой, итеративно увеличивает размер буфера и повторите попытку, пока он не завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="261f7-371">If the method fails, iteratively increase the size of the buffer and retry until it succeeds.</span></span>
 
        ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
