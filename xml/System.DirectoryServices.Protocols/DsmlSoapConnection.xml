<Type Name="DsmlSoapConnection" FullName="System.DirectoryServices.Protocols.DsmlSoapConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c790f3ba2b8c6e6fa3081bd24e188715338a5aa" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70693596" /></Metadata><TypeSignature Language="C#" Value="public abstract class DsmlSoapConnection : System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DsmlSoapConnection extends System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DsmlSoapConnection&#xA;Inherits DirectoryConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlSoapConnection abstract : System::DirectoryServices::Protocols::DirectoryConnection" />
  <TypeSignature Language="F#" Value="type DsmlSoapConnection = class&#xA;    inherit DirectoryConnection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DirectoryConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> — абстрактный класс, для которого невозможно создать экземпляр. Он позволяет схожим образом обрабатывать протоколы без состояний и с состояниями, предоставляя сеансо-ориентированные функции.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DsmlSoapConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DsmlSoapConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Конструктор <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" /> инициализирует новый экземпляр класса <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSession">
      <MemberSignature Language="C#" Value="public abstract void BeginSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginSession();" />
      <MemberSignature Language="F#" Value="abstract member BeginSession : unit -&gt; unit" Usage="dsmlSoapConnection.BeginSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Метод <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" /> указывает серверу DSML начать новый сеанс.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод будет заблокирован при ожидании ответа от сервера DSML и будет истечет время ожидания в соответствии <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> со свойством.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Возникает, если сеанс уже открыт в соединении.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Происходит, если XML, возвращенный сервером в ответ на BeginSession, имеет неправильный формат.</exception>
        <exception cref="T:System.Net.WebException">Возникает при сбое связи с сервером DSML.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndSession">
      <MemberSignature Language="C#" Value="public abstract void EndSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndSession();" />
      <MemberSignature Language="F#" Value="abstract member EndSession : unit -&gt; unit" Usage="dsmlSoapConnection.EndSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Метод <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" /> завершает сеанс связи с сервером DSML и очищает свойство <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод будет заблокирован при ожидании ответа от сервера DSML и будет истечет время ожидания в соответствии <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> со свойством.  
  
 Если сервер DSML завершает сеанс,<xref:System.Net.WebException>  
  
 создается исключение. Если <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> по-прежнему действует после возникновения исключения, запрос никогда не достигнет сервера, и соединение по-прежнему считается действительным.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">Происходит при сбое связи с сервером DSML.</exception>
        <exception cref="T:System.InvalidOperationException">Возникает, если отсутствует открытый сеанс.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public abstract string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Свойство <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> содержит идентификатор активного сеанса.</summary>
        <value>Идентификатор активного сеанса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение NULL обозначает отсутствие активного сеанса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapRequestHeader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SoapRequestHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode SoapRequestHeader" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapRequestHeader As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNode ^ SoapRequestHeader { System::Xml::XmlNode ^ get(); void set(System::Xml::XmlNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapRequestHeader : System.Xml.XmlNode with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Свойство <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" /> содержит заголовок SOAP, прикрепляемый к исходящим запросам.</summary>
        <value>Заголовок SOAP, прикрепляемый к исходящим запросам.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 API использует <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A> и <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A> для отслеживания времени существования сеанса.  
  
 **Внимание!** Присоединение заголовка EndSession к <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader%2A> приводит к тому, что API становится несогласованным с подключением, и его следует избегать.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
