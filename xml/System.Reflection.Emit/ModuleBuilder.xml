<Type Name="ModuleBuilder" FullName="System.Reflection.Emit.ModuleBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d6bd6ad3bc423079a8883e79be305966f1103b2" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70354603" /></Metadata><TypeSignature Language="C#" Value="public class ModuleBuilder : System.Reflection.Module, System.Runtime.InteropServices._ModuleBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit ModuleBuilder extends System.Reflection.Module implements class System.Runtime.InteropServices._ModuleBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.ModuleBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ModuleBuilder&#xA;Inherits Module&#xA;Implements _ModuleBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModuleBuilder : System::Reflection::Module, System::Runtime::InteropServices::_ModuleBuilder" />
  <TypeSignature Language="F#" Value="type ModuleBuilder = class&#xA;    inherit Module&#xA;    interface _ModuleBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Module</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ModuleBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ModuleBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="15fc9-101">Определяет и представляет модуль в динамической сборке.</span><span class="sxs-lookup"><span data-stu-id="15fc9-101">Defines and represents a module in a dynamic assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-102">Чтобы получить экземпляр <xref:System.Reflection.Emit.ModuleBuilder>, <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=nameWithType> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-102">To get an instance of <xref:System.Reflection.Emit.ModuleBuilder>, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-103">В следующем примере кода показано использование `ModuleBuilder` для создания динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-103">The following code sample demonstrates the use of `ModuleBuilder` to create a dynamic module.</span></span> <span data-ttu-id="15fc9-104">Обратите внимание, что ModuleBuilder создается путем <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> вызова <xref:System.Reflection.Emit.AssemblyBuilder>в, а не через конструктор.</span><span class="sxs-lookup"><span data-stu-id="15fc9-104">Note that the ModuleBuilder is created by calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> in <xref:System.Reflection.Emit.AssemblyBuilder>, rather than through a constructor.</span></span>  
  
 [!code-cpp[ModuleBuilder_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_Class/CPP/modulebuilder.cpp#1)]
 [!code-csharp[ModuleBuilder_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_Class/CS/modulebuilder.cs#1)]
 [!code-vb[ModuleBuilder_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_Class/VB/modulebuilder.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModuleBuilder ();" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.#ctor" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModuleBuilder();" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Reflection.Emit.ModuleBuilder.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15fc9-105">Получает динамическую сборку, определившую данный экземпляр <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-105">Gets the dynamic assembly that defined this instance of <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></summary>
        <value><span data-ttu-id="15fc9-106">Динамическая сборка, определившая текущий динамический модуль.</span><span class="sxs-lookup"><span data-stu-id="15fc9-106">The dynamic assembly that defined the current dynamic module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-107">Возвращаемый <xref:System.Reflection.Emit.AssemblyBuilder> <xref:System.Reflection.Emit.ModuleBuilder>объект является объектом, который определил этот экземпляр. <xref:System.Reflection.Assembly></span><span class="sxs-lookup"><span data-stu-id="15fc9-107">The <xref:System.Reflection.Assembly> object that is returned is the <xref:System.Reflection.Emit.AssemblyBuilder> that defined this instance of <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGlobalFunctions">
      <MemberSignature Language="C#" Value="public void CreateGlobalFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateGlobalFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateGlobalFunctions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateGlobalFunctions();" />
      <MemberSignature Language="F#" Value="member this.CreateGlobalFunctions : unit -&gt; unit" Usage="moduleBuilder.CreateGlobalFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15fc9-108">Завершает определения глобальной функции и глобальных данных для этого динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-108">Completes the global function definitions and global data definitions for this dynamic module.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-109">Этот метод должен вызываться, когда пользователь выполняет определение всех глобальных функций в этом динамическом модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-109">This method should be called when the user is done with defining all the global functions within this dynamic module.</span></span> <span data-ttu-id="15fc9-110">После вызова этой функции больше не допускаются новые глобальные функции или новые глобальные данные.</span><span class="sxs-lookup"><span data-stu-id="15fc9-110">After calling this function, no more new global functions or new global data are allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-111">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-111">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-112">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-112">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-113">В следующем примере показано использование `CreateGlobalFunctions` для создания статического глобального метода из объекта, <xref:System.Reflection.Emit.MethodBuilder> реализованного с помощью <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-113">The following sample illustrates the use of `CreateGlobalFunctions` to create a static global method from a <xref:System.Reflection.Emit.MethodBuilder> implemented with <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A>.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#2)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#2)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-114">Данный метод был вызван ранее.</span><span class="sxs-lookup"><span data-stu-id="15fc9-114">This method was called previously.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDocument">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ DefineDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="member this.DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter" Usage="moduleBuilder.DefineDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="language" Type="System.Guid" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="languageVendor" Type="System.Guid" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="documentType" Type="System.Guid" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="15fc9-115">URL-адрес документа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-115">The URL for the document.</span></span></param>
        <param name="language"><span data-ttu-id="15fc9-116">GUID, предназначенный для идентификации языка документа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-116">The GUID that identifies the document language.</span></span> <span data-ttu-id="15fc9-117">Это может быть <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-117">This can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="languageVendor"><span data-ttu-id="15fc9-118">GUID, предназначенный для идентификации поставщика языка документа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-118">The GUID that identifies the document language vendor.</span></span> <span data-ttu-id="15fc9-119">Это может быть <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-119">This can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="documentType"><span data-ttu-id="15fc9-120">GUID, предназначенный для идентификации типа документа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-120">The GUID that identifies the document type.</span></span> <span data-ttu-id="15fc9-121">Это может быть <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-121">This can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <summary><span data-ttu-id="15fc9-122">Определяет документ-источник.</span><span class="sxs-lookup"><span data-stu-id="15fc9-122">Defines a document for source.</span></span></summary>
        <returns><span data-ttu-id="15fc9-123">Определенный документ.</span><span class="sxs-lookup"><span data-stu-id="15fc9-123">The defined document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="15fc9-124">Более ранние <xref:System.ArgumentException> версии .NET Framework вызовут исключение <xref:System.ArgumentNullException> , `url` а `null`не, если имеет значение.</span><span class="sxs-lookup"><span data-stu-id="15fc9-124">Earlier versions of the .NET Framework throw <xref:System.ArgumentException> instead of <xref:System.ArgumentNullException> when `url` is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-125">В следующем образце кода показано использование `DefineDocument` для присоединения к динамическому модулю документа внешнего символа (в данном случае необработанного IL-файла).</span><span class="sxs-lookup"><span data-stu-id="15fc9-125">The following code sample illustrates the use of `DefineDocument` to attach an external symbol document (in this case, a raw IL file) to a dynamic module.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineDocument#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CPP/modulebuilder_definedocument.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineDocument#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CS/modulebuilder_definedocument.cs#1)]
 [!code-vb[ModuleBuilder_DefineDocument#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineDocument/VB/modulebuilder_definedocument.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-126">Свойство <paramref name="url" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-126"><paramref name="url" /> is <see langword="null" />.</span></span> <span data-ttu-id="15fc9-127">Это изменение из более ранних версий .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="15fc9-127">This is a change from earlier versions of the .NET Framework.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-128">Этот метод вызывается для динамического модуля, не являющегося отладочным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-128">This method is called on a dynamic module that is not a debug module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineEnum">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.EnumBuilder DefineEnum (string name, System.Reflection.TypeAttributes visibility, Type underlyingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.EnumBuilder DefineEnum(string name, valuetype System.Reflection.TypeAttributes visibility, class System.Type underlyingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineEnum (name As String, visibility As TypeAttributes, underlyingType As Type) As EnumBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::EnumBuilder ^ DefineEnum(System::String ^ name, System::Reflection::TypeAttributes visibility, Type ^ underlyingType);" />
      <MemberSignature Language="F#" Value="member this.DefineEnum : string * System.Reflection.TypeAttributes * Type -&gt; System.Reflection.Emit.EnumBuilder" Usage="moduleBuilder.DefineEnum (name, visibility, underlyingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.EnumBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="visibility" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="underlyingType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-129">Полный путь к типу перечисления.</span><span class="sxs-lookup"><span data-stu-id="15fc9-129">The full path of the enumeration type.</span></span> <span data-ttu-id="15fc9-130">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-130"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="visibility"><span data-ttu-id="15fc9-131">Атрибуты типа данного перечисления.</span><span class="sxs-lookup"><span data-stu-id="15fc9-131">The type attributes for the enumeration.</span></span> <span data-ttu-id="15fc9-132">Атрибутами являются любые биты, определенные с помощью <see cref="F:System.Reflection.TypeAttributes.VisibilityMask" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-132">The attributes are any bits defined by <see cref="F:System.Reflection.TypeAttributes.VisibilityMask" />.</span></span></param>
        <param name="underlyingType"><span data-ttu-id="15fc9-133">Базовый тип данного перечисления.</span><span class="sxs-lookup"><span data-stu-id="15fc9-133">The underlying type for the enumeration.</span></span> <span data-ttu-id="15fc9-134">Это должен быть встроенный целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="15fc9-134">This must be a built-in integer type.</span></span></param>
        <summary><span data-ttu-id="15fc9-135">Определяет тип перечисления, который является типом значения с одним нестатическим полем, называемым <paramref name="value__" /> указанного типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-135">Defines an enumeration type that is a value type with a single non-static field called <paramref name="value__" /> of the specified type.</span></span></summary>
        <returns><span data-ttu-id="15fc9-136">Определенное перечисление.</span><span class="sxs-lookup"><span data-stu-id="15fc9-136">The defined enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-137">Определенное перечисление является производным классом класса <xref:System.Enum>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-137">The defined enum is a derived class of <xref:System.Enum>.</span></span> <span data-ttu-id="15fc9-138">Для `value__` полязаданыатрибуты<xref:System.Reflection.FieldAttributes.SpecialName>и. <xref:System.Reflection.FieldAttributes.Private></span><span class="sxs-lookup"><span data-stu-id="15fc9-138">The `value__` field has <xref:System.Reflection.FieldAttributes.Private> and <xref:System.Reflection.FieldAttributes.SpecialName> attributes set.</span></span>  
  
 <span data-ttu-id="15fc9-139">Дополнительные сведения о встроенных целочисленных типах, которые можно указать в качестве базовых типов перечислений, см. в разделе [Общие сведения о библиотеке классов](~/docs/standard/class-library-overview.md).</span><span class="sxs-lookup"><span data-stu-id="15fc9-139">For more information about the built-in integer types that can be specified as the underlying types of enumerations, see [Class Library Overview](~/docs/standard/class-library-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-140">В .NET Framework версиях 1,0 и 1,1 необходимо определить перечисления с помощью <xref:System.Reflection.Emit.TypeBuilder> , поскольку <xref:System.Reflection.Emit.EnumBuilder> выдает перечисления, элементы которых имеют тип <xref:System.Int32> , а не тип перечисления.</span><span class="sxs-lookup"><span data-stu-id="15fc9-140">In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type.</span></span> <span data-ttu-id="15fc9-141">В .NET Framework версии 2,0 <xref:System.Reflection.Emit.EnumBuilder> выдает перечисления, элементы которых имеют правильный тип.</span><span class="sxs-lookup"><span data-stu-id="15fc9-141">In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-142">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-142">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-143">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-143">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-144">В следующем примере показано использование `DefineEnum` для реализации класса перечисления в динамическом модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-144">The following example illustrates the use of `DefineEnum` to implement an enumeration class in a dynamic module.</span></span> <span data-ttu-id="15fc9-145">В примере определяется перечисление `Elevation` с именем, имеющим базовый <xref:System.Int32>тип, и создаются два элемента: `Low`, со значением 0 и `High`значение 1.</span><span class="sxs-lookup"><span data-stu-id="15fc9-145">The example defines an enumeration named `Elevation` that has an underlying type of <xref:System.Int32>, and creates two elements: `Low`, with a value of 0, and `High`, with a value of 1.</span></span> <span data-ttu-id="15fc9-146">После создания типа сборка сохраняется с именем `TempAssembly.dll`.</span><span class="sxs-lookup"><span data-stu-id="15fc9-146">After the type has been created, the assembly is saved with the name `TempAssembly.dll`.</span></span> <span data-ttu-id="15fc9-147">Для просмотра содержимого этой сборки можно использовать [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) .</span><span class="sxs-lookup"><span data-stu-id="15fc9-147">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the contents of this assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-148">До версии .NET Framework 2,0 этот пример кода не создает правильное перечисление.</span><span class="sxs-lookup"><span data-stu-id="15fc9-148">Prior to the .NET Framework version 2.0, this code example does not produce a correct enumeration.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineEnum#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CPP/modulebuilder_defineenum.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineEnum#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CS/modulebuilder_defineenum.cs#1)]
 [!code-vb[ModuleBuilder_DefineEnum#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineEnum/VB/modulebuilder_defineenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-149">Переданы атрибуты, не являющиеся атрибутами видимости.</span><span class="sxs-lookup"><span data-stu-id="15fc9-149">Attributes other than visibility attributes are provided.</span></span>  
  
<span data-ttu-id="15fc9-150">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-150">-or-</span></span> 
<span data-ttu-id="15fc9-151">Перечисление с указанным именем существует в родительской сборке этого модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-151">An enumeration with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="15fc9-152">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-152">-or-</span></span> 
<span data-ttu-id="15fc9-153">Атрибуты видимости не соответствуют области действия перечисления.</span><span class="sxs-lookup"><span data-stu-id="15fc9-153">The visibility attributes do not match the scope of the enumeration.</span></span> <span data-ttu-id="15fc9-154">Например, если в качестве значения параметра <paramref name="visibility" /> указано <see cref="F:System.Reflection.TypeAttributes.NestedPublic" />, но перечисление не относится к вложенному типу.</span><span class="sxs-lookup"><span data-stu-id="15fc9-154">For example, <see cref="F:System.Reflection.TypeAttributes.NestedPublic" /> is specified for <paramref name="visibility" />, but the enumeration is not a nested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-155"><paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-155"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineGlobalMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-156">Определяет глобальный метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-156">Defines a global method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-157">Имя метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-157">The name of the method.</span></span> <span data-ttu-id="15fc9-158">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-158"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="15fc9-159">Атрибуты метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-159">The attributes of the method.</span></span> <span data-ttu-id="15fc9-160">Параметр <paramref name="attributes" /> должен включать атрибут <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-160"><paramref name="attributes" /> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="15fc9-161">Тип возвращаемых данных метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-161">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="15fc9-162">Типы параметров метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-162">The types of the method's parameters.</span></span></param>
        <summary><span data-ttu-id="15fc9-163">Определяет глобальный метод с данными именем, атрибутами, возвращаемыми типами и типами параметров.</span><span class="sxs-lookup"><span data-stu-id="15fc9-163">Defines a global method with the specified name, attributes, return type, and parameter types.</span></span></summary>
        <returns><span data-ttu-id="15fc9-164">Определенный глобальный метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-164">The defined global method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-165">Глобальный метод, определяемый этим методом, не может использоваться до тех <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>пор, пока не будет вызван.</span><span class="sxs-lookup"><span data-stu-id="15fc9-165">The global method that this method defines is not usable until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-166">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-166">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-167">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-167">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-168">В следующем примере показано использование `DefineGlobalMethod` для создания независимого от типа метода, привязанного к текущему. <xref:System.Reflection.Emit.ModuleBuilder></span><span class="sxs-lookup"><span data-stu-id="15fc9-168">The following example illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span> <span data-ttu-id="15fc9-169">После создания глобального метода необходимо вызвать <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> метод, чтобы выполнить его.</span><span class="sxs-lookup"><span data-stu-id="15fc9-169">After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-170">Метод не является статическим.</span><span class="sxs-lookup"><span data-stu-id="15fc9-170">The method is not static.</span></span> <span data-ttu-id="15fc9-171">То есть параметр <paramref name="attributes" /> не включает <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-171">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="15fc9-172">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-172">-or-</span></span> 
<span data-ttu-id="15fc9-173">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="15fc9-173">The length of <paramref name="name" /> is zero</span></span> 
<span data-ttu-id="15fc9-174">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-174">-or-</span></span> 
<span data-ttu-id="15fc9-175">Элементом массива <see cref="T:System.Type" /> является <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-175">An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-176">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-176"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-177"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> был вызван ранее.</span><span class="sxs-lookup"><span data-stu-id="15fc9-177"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-178">Имя метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-178">The name of the method.</span></span> <span data-ttu-id="15fc9-179">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-179"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="15fc9-180">Атрибуты метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-180">The attributes of the method.</span></span> <span data-ttu-id="15fc9-181">Параметр <paramref name="attributes" /> должен включать атрибут <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-181"><paramref name="attributes" /> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="15fc9-182">Соглашение о вызовах для метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-182">The calling convention for the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="15fc9-183">Тип возвращаемых данных метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-183">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="15fc9-184">Типы параметров метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-184">The types of the method's parameters.</span></span></param>
        <summary><span data-ttu-id="15fc9-185">Определяет глобальный метод с данными именем, атрибутами, соглашениями о вызовах, возвращаемыми типами и типами параметров.</span><span class="sxs-lookup"><span data-stu-id="15fc9-185">Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.</span></span></summary>
        <returns><span data-ttu-id="15fc9-186">Определенный глобальный метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-186">The defined global method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-187">Глобальный метод, определяемый этим методом, нельзя использовать до вызова <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-187">You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-188">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-188">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-189">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-189">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-190">В следующем образце кода показано использование `DefineGlobalMethod` для создания независимого от типа метода, привязанного к текущему. <xref:System.Reflection.Emit.ModuleBuilder></span><span class="sxs-lookup"><span data-stu-id="15fc9-190">The following code sample illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span> <span data-ttu-id="15fc9-191">После создания глобального метода необходимо вызвать <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> метод, чтобы выполнить его.</span><span class="sxs-lookup"><span data-stu-id="15fc9-191">After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-192">Метод не является статическим.</span><span class="sxs-lookup"><span data-stu-id="15fc9-192">The method is not static.</span></span> <span data-ttu-id="15fc9-193">То есть параметр <paramref name="attributes" /> не включает <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-193">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="15fc9-194">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-194">-or-</span></span> 
<span data-ttu-id="15fc9-195">Элементом массива <see cref="T:System.Type" /> является <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-195">An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-196">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-196"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-197"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> был вызван ранее.</span><span class="sxs-lookup"><span data-stu-id="15fc9-197"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, callingConvention, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" Index="7" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" Index="8" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-198">Имя метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-198">The name of the method.</span></span> <span data-ttu-id="15fc9-199">Параметр <paramref name="name" /> не должен содержать внедренные символы NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-199"><paramref name="name" /> cannot contain embedded null characters.</span></span></param>
        <param name="attributes"><span data-ttu-id="15fc9-200">Атрибуты метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-200">The attributes of the method.</span></span> <span data-ttu-id="15fc9-201">Параметр <paramref name="attributes" /> должен включать атрибут <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-201"><paramref name="attributes" /> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="15fc9-202">Соглашение о вызовах для метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-202">The calling convention for the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="15fc9-203">Тип возвращаемых данных метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-203">The return type of the method.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="15fc9-204">Массив типов представляет собой требуемые пользовательские модификаторы для возвращаемого типа, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-204">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="15fc9-205">Если возвращаемый тип не содержит требуемых настраиваемых модификаторов, укажите <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-205">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="15fc9-206">Массив типов представляет собой необязательные пользовательские модификаторы для возвращаемого типа, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-206">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="15fc9-207">Если возвращаемый тип не содержит необязательные настраиваемые модификаторы, укажите <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-207">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="15fc9-208">Типы параметров метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-208">The types of the method's parameters.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="15fc9-209">Массив массивов типов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-209">An array of arrays of types.</span></span> <span data-ttu-id="15fc9-210">Каждый массив типов представляет собой требуемые пользовательские модификаторы для соответствующего параметра глобального метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-210">Each array of types represents the required custom modifiers for the corresponding parameter of the global method.</span></span> <span data-ttu-id="15fc9-211">Если определенный аргумент не содержит требуемые пользовательские модификаторы, вместо массива данных укажите <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-211">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="15fc9-212">Если глобальный метод не содержит аргументов или если аргументы не содержат пользовательские модификаторы, укажите значение <see langword="null" /> вместо массива массивов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-212">If the global method has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="15fc9-213">Массив массивов типов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-213">An array of arrays of types.</span></span> <span data-ttu-id="15fc9-214">Каждый массив типов представляет собой необязательные пользовательские модификаторы для соответствующего параметра.</span><span class="sxs-lookup"><span data-stu-id="15fc9-214">Each array of types represents the optional custom modifiers for the corresponding parameter.</span></span> <span data-ttu-id="15fc9-215">Если определенный аргумент не содержит необязательные пользовательские модификаторы, вместо массива данных укажите <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-215">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="15fc9-216">Если глобальный метод не содержит аргументов или если аргументы не содержат необязательные пользовательские модификаторы, укажите значение <see langword="null" /> вместо массива массивов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-216">If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="15fc9-217">Определяет глобальный метод с данными именем, атрибутами, соглашениями о вызовах, возвращаемым типом, пользовательскими модификаторами для возвращаемого типа, типами параметров и пользовательскими модификаторами для типов параметров.</span><span class="sxs-lookup"><span data-stu-id="15fc9-217">Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.</span></span></summary>
        <returns><span data-ttu-id="15fc9-218">Определенный глобальный метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-218">The defined global method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-219">Эта перегрузка предоставляется для конструкторов управляемых компиляторов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-219">This overload is provided for designers of managed compilers.</span></span>  
  
 <span data-ttu-id="15fc9-220">Глобальный метод, определяемый этим методом, нельзя использовать до вызова <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-220">You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-221">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-221">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-222">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-222">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-223">Метод не является статическим.</span><span class="sxs-lookup"><span data-stu-id="15fc9-223">The method is not static.</span></span> <span data-ttu-id="15fc9-224">То есть параметр <paramref name="attributes" /> не включает <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-224">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="15fc9-225">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-225">-or-</span></span> 
<span data-ttu-id="15fc9-226">Элементом массива <see cref="T:System.Type" /> является <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-226">An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-227"><paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-227"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-228">Метод <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> вызывался до этого.</span><span class="sxs-lookup"><span data-stu-id="15fc9-228">The <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> method has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineInitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineInitializedData (string name, byte[] data, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineInitializedData(string name, unsigned int8[] data, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineInitializedData (name As String, data As Byte(), attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineInitializedData(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineInitializedData : string * byte[] * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="moduleBuilder.DefineInitializedData (name, data, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-229">Имя, используемое для ссылки на данные.</span><span class="sxs-lookup"><span data-stu-id="15fc9-229">The name used to refer to the data.</span></span> <span data-ttu-id="15fc9-230">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-230"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="data"><span data-ttu-id="15fc9-231">Большой двоичный объект (BLOB) данных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-231">The binary large object (BLOB) of data.</span></span></param>
        <param name="attributes"><span data-ttu-id="15fc9-232">Атрибуты поля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-232">The attributes for the field.</span></span> <span data-ttu-id="15fc9-233">Значение по умолчанию — <see langword="Static" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-233">The default is <see langword="Static" />.</span></span></param>
        <summary><span data-ttu-id="15fc9-234">Определяет инициализированное поле данных в разделе .sdata переносимого исполняемого PE-файла.</span><span class="sxs-lookup"><span data-stu-id="15fc9-234">Defines an initialized data field in the .sdata section of the portable executable (PE) file.</span></span></summary>
        <returns><span data-ttu-id="15fc9-235">Поле для ссылки на данные.</span><span class="sxs-lookup"><span data-stu-id="15fc9-235">A field to reference the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-236"><xref:System.Reflection.FieldAttributes.Static>автоматически включается в `attributes`.</span><span class="sxs-lookup"><span data-stu-id="15fc9-236"><xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.</span></span>  
  
 <span data-ttu-id="15fc9-237">Данные, определенные этим методом, не создаются до <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-237">The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-238">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-238">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-239">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-239">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-240">В следующем примере <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> метод используется для определения инициализированного поля данных `.sdata` в разделе переносимого исполняемого (PE) файла.</span><span class="sxs-lookup"><span data-stu-id="15fc9-240">The following example uses the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> method to define an initialized data field in the `.sdata` section of the portable executable (PE) file.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CPP/modulebuilder_defineinitializeddata.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CS/modulebuilder_defineinitializeddata.cs#1)]
 [!code-vb[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/VB/modulebuilder_defineinitializeddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-241">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="15fc9-241">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="15fc9-242">-или-</span><span class="sxs-lookup"><span data-stu-id="15fc9-242">-or-</span></span> 
<span data-ttu-id="15fc9-243">Размер параметра <paramref name="data" /> меньше или равен нулю, либо больше или равен 0x3f0000.</span><span class="sxs-lookup"><span data-stu-id="15fc9-243">The size of <paramref name="data" /> is less than or equal to zero or greater than or equal to 0x3f0000.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-244">Значение параметра <paramref name="name" /> или <paramref name="data" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-244"><paramref name="name" /> or <paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-245"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> был вызван ранее.</span><span class="sxs-lookup"><span data-stu-id="15fc9-245"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineManifestResource">
      <MemberSignature Language="C#" Value="public void DefineManifestResource (string name, System.IO.Stream stream, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineManifestResource(string name, class System.IO.Stream stream, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineManifestResource(System::String ^ name, System::IO::Stream ^ stream, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineManifestResource : string * System.IO.Stream * System.Reflection.ResourceAttributes -&gt; unit" Usage="moduleBuilder.DefineManifestResource (name, stream, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="stream" Type="System.IO.Stream" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-246">Имя ресурса, зависящее от регистра.</span><span class="sxs-lookup"><span data-stu-id="15fc9-246">The case-sensitive name for the resource.</span></span></param>
        <param name="stream"><span data-ttu-id="15fc9-247">Поток, содержащий байты, предназначенные для ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-247">A stream that contains the bytes for the resource.</span></span></param>
        <param name="attribute"><span data-ttu-id="15fc9-248">Значение перечисления, которое определяет, является ли ресурс закрытым или открытым.</span><span class="sxs-lookup"><span data-stu-id="15fc9-248">An enumeration value that specifies whether the resource is public or private.</span></span></param>
        <summary><span data-ttu-id="15fc9-249">Определяет большой двоичный объект (BLOB), представляющий ресурс манифеста, который должен быть внедрен в динамическую сборку.</span><span class="sxs-lookup"><span data-stu-id="15fc9-249">Defines a binary large object (BLOB) that represents a manifest resource to be embedded in the dynamic assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-250">Ресурсы, регистрируемые в манифесте сборки, могут быть управляемыми ресурсами или BLOB-объектами ресурсов манифеста, и каждая из них может быть включена в сборку путем связывания или внедрения.</span><span class="sxs-lookup"><span data-stu-id="15fc9-250">Resources that are recorded in the assembly manifest can be managed resources or manifest resource BLOBs, and each of these can be included in the assembly either by linking or by embedding.</span></span> <span data-ttu-id="15fc9-251">Для динамических сборок поддерживается все четыре сценария.</span><span class="sxs-lookup"><span data-stu-id="15fc9-251">All four scenarios are supported for dynamic assemblies.</span></span>  
  
-   <span data-ttu-id="15fc9-252">Этот метод позволяет внедрить BLOB-объект ресурса манифеста в динамическую сборку.</span><span class="sxs-lookup"><span data-stu-id="15fc9-252">This method allows you to embed a manifest resource BLOB into a dynamic assembly.</span></span>  
  
-   <span data-ttu-id="15fc9-253">Чтобы внедрить управляемый ресурс в модуль манифеста динамической сборки или в вспомогательный модуль, используйте <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=nameWithType> метод для получения модуля записи ресурсов и <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> используйте метод для добавления ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-253">To embed a managed resource into the manifest module of a dynamic assembly or into a satellite module, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=nameWithType> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> method to add the resource.</span></span>  
  
-   <span data-ttu-id="15fc9-254">Чтобы связать управляемый ресурс с динамической сборкой, используйте <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=nameWithType> метод для получения модуля записи ресурсов и <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> используйте метод для добавления связанного ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-254">To link a managed resource into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=nameWithType> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> method to add the linked resource.</span></span>  
  
-   <span data-ttu-id="15fc9-255">Чтобы связать большой двоичный объект ресурса манифеста с динамической сборкой, <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=nameWithType> используйте метод для добавления связанного ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-255">To link a manifest resource BLOB into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=nameWithType> method to add the linked resource.</span></span>  
  
 <span data-ttu-id="15fc9-256">Кроме того, один ресурс Win32 можно присоединить к сборке с помощью <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> метода <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> или метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-256">In addition, a single Win32 resource can be attached to an assembly by using the <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> method or the <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="15fc9-257">Этот ресурс не отображается в манифесте сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-257">This resource does not appear in the assembly manifest.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-258">В следующем примере создается и сохраняется динамическая сборка с именем `EmittedManifestResourceAssembly.exe`, которая содержит внедренный неуправляемый ресурс.</span><span class="sxs-lookup"><span data-stu-id="15fc9-258">The following example generates and saves a dynamic assembly named `EmittedManifestResourceAssembly.exe`, which contains an embedded unmanaged resource.</span></span> <span data-ttu-id="15fc9-259">В примере создается сборка, состоящая из одного модуля, и открывается поток памяти, в котором содержится неуправляемый ресурс.</span><span class="sxs-lookup"><span data-stu-id="15fc9-259">The example creates the assembly, which consists of one module, and opens a memory stream to contain the unmanaged resource.</span></span> <span data-ttu-id="15fc9-260">Затем код вызывает <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> метод для определения ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-260">The code then calls the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method to define the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-261">Для ресурса можно использовать любой тип потока. Например, можно считать неуправляемые двоичные данные из файла.</span><span class="sxs-lookup"><span data-stu-id="15fc9-261">You can use any kind of stream for your resource; for example, you can read the unmanaged binary data from a file.</span></span>  
  
 <span data-ttu-id="15fc9-262">В примере определяется тип в динамическом модуле с помощью `Main` метода и создается код MSIL для тела метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-262">The example defines a type in the dynamic module with a `Main` method, and generates MSIL for the method body.</span></span> <span data-ttu-id="15fc9-263">После формирования текста для `Main` метода и создания типа код в примере кода записывает пять байт в поток, связанный с ресурсом манифеста.</span><span class="sxs-lookup"><span data-stu-id="15fc9-263">After the body for the `Main` method has been generated and the type has been created, the code example writes five bytes to the stream associated with the manifest resource.</span></span> <span data-ttu-id="15fc9-264">При сохранении сборки к ней добавляется ресурс.</span><span class="sxs-lookup"><span data-stu-id="15fc9-264">When the assembly is saved, the resource is appended to it.</span></span>  
  
 <span data-ttu-id="15fc9-265">После выполнения примера можно запустить выпущенную сборку.</span><span class="sxs-lookup"><span data-stu-id="15fc9-265">After running the example, you can run the emitted assembly.</span></span> <span data-ttu-id="15fc9-266">Код в `Main` методе выпущенной сборки считывает внедренный ресурс манифеста и выводит байтовые значения на консоль.</span><span class="sxs-lookup"><span data-stu-id="15fc9-266">The code in the emitted assembly's `Main` method reads the embedded manifest resource and prints the byte values to the console.</span></span> <span data-ttu-id="15fc9-267">Для просмотра сведений в манифесте сборки можно использовать программу [Ildasm. exe (ДИЗАССЕМБЛЕР IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) .</span><span class="sxs-lookup"><span data-stu-id="15fc9-267">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the information in the assembly manifest.</span></span>  
  
 [!code-csharp[DefineManifestResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/DefineManifestResource/cs/source.cs#1)]
 [!code-vb[DefineManifestResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DefineManifestResource/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-268">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-268"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="15fc9-269">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-269">-or-</span></span> 
 <span data-ttu-id="15fc9-270"><paramref name="stream" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-270"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-271"><paramref name="name" /> представляет собой строку нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="15fc9-271"><paramref name="name" /> is a zero-length string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-272">Динамическая сборка, которая содержит текущий модуль, является несохраняемой, то есть при вызове <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" /> не было указано имя файла.</span><span class="sxs-lookup"><span data-stu-id="15fc9-272">The dynamic assembly that contains the current module is transient; that is, no file name was specified when <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" /> was called.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
        <altmember cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DefinePInvokeMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-273">Определяет метод <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-273">Defines a <see langword="PInvoke" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefinePInvokeMethod (name, dllName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dllName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="4" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="5" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" Index="6" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" Index="7" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-274">Имя метода <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-274">The name of the <see langword="PInvoke" /> method.</span></span> <span data-ttu-id="15fc9-275">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-275"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="dllName"><span data-ttu-id="15fc9-276">Имя библиотеки DLL, в которой определен метод <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-276">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span></span></param>
        <param name="attributes"><span data-ttu-id="15fc9-277">Атрибуты метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-277">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="15fc9-278">Соглашение о вызове метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-278">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="15fc9-279">Возвращаемый тип метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-279">The method's return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="15fc9-280">Типы параметров метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-280">The types of the method's parameters.</span></span></param>
        <param name="nativeCallConv"><span data-ttu-id="15fc9-281">Собственное соглашение о вызове.</span><span class="sxs-lookup"><span data-stu-id="15fc9-281">The native calling convention.</span></span></param>
        <param name="nativeCharSet"><span data-ttu-id="15fc9-282">Собственная кодировка метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-282">The method's native character set.</span></span></param>
        <summary><span data-ttu-id="15fc9-283">Определяет метод <see langword="PInvoke" /> с заданными именем, именем DLL-библиотеки, в котором этот метод определен, атрибутами метода, соглашением о вызовах, возвращаемым типом, типами параметров метода и флагами <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-283">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span></span></summary>
        <returns><span data-ttu-id="15fc9-284">Определенный метод <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-284">The defined <see langword="PInvoke" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-285">Некоторые атрибуты импорта DLL (см. Описание System. Runtime. InteropServices. DllImportAttribute) не могут быть указаны в качестве аргументов этого метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-285">Some DLL import attributes (see the description of System.Runtime.InteropServices.DllImportAttribute) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="15fc9-286">Такие атрибуты должны быть установлены путем выпуска пользовательского атрибута для метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-286">Such attributes should be set by emitting a custom attribute for the method.</span></span> <span data-ttu-id="15fc9-287">Например, атрибут `PreserveSig` импорта DLL задается путем выпуска пользовательского атрибута.</span><span class="sxs-lookup"><span data-stu-id="15fc9-287">For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-288">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-288">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-289">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-289">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-290">В следующем примере показано использование `DefinePInvokeMethod` метода для <xref:System.Reflection.Emit.MethodBuilder> создания внешнего неуправляемого метода `MessageBoxA`в API Windows.</span><span class="sxs-lookup"><span data-stu-id="15fc9-290">The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Windows API.</span></span> <span data-ttu-id="15fc9-291">В примере отображается окно сообщения с кнопками **повторить** и **Отмена** и отображается возвращаемое значение из окна сообщения.</span><span class="sxs-lookup"><span data-stu-id="15fc9-291">The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15fc9-292"><xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> Чтобы получить Ненулевое возвращаемое значение, необходимо добавить к флагам реализации метода после <xref:System.Reflection.Emit.MethodBuilder>создания с помощью <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> методов и <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="15fc9-292">To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]
 [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-293">Метод не является статическим или вмещающий тип является интерфейсом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-293">The method is not static or if the containing type is an interface.</span></span>  
  
 <span data-ttu-id="15fc9-294">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-294">-or-</span></span>  
  
 <span data-ttu-id="15fc9-295">Метод является абстрактным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-295">The method is abstract.</span></span>  
  
 <span data-ttu-id="15fc9-296">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-296">-or-</span></span>  
  
 <span data-ttu-id="15fc9-297">Метод был определен ранее.</span><span class="sxs-lookup"><span data-stu-id="15fc9-297">The method was previously defined.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-298">Значение параметра <paramref name="name" /> или <paramref name="dllName" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-298"><paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-299">Содержащий тип был создан ранее с помощью метода <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-299">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::String ^ entryName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefinePInvokeMethod (name, dllName, entryName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dllName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="entryName" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="4" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="5" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="6" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" Index="7" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" Index="8" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-300">Имя метода <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-300">The name of the <see langword="PInvoke" /> method.</span></span> <span data-ttu-id="15fc9-301">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-301"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="dllName"><span data-ttu-id="15fc9-302">Имя библиотеки DLL, в которой определен метод <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-302">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span></span></param>
        <param name="entryName"><span data-ttu-id="15fc9-303">Имя точки входа в библиотеке DLL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-303">The name of the entry point in the DLL.</span></span></param>
        <param name="attributes"><span data-ttu-id="15fc9-304">Атрибуты метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-304">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="15fc9-305">Соглашение о вызове метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-305">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="15fc9-306">Возвращаемый тип метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-306">The method's return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="15fc9-307">Типы параметров метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-307">The types of the method's parameters.</span></span></param>
        <param name="nativeCallConv"><span data-ttu-id="15fc9-308">Собственное соглашение о вызове.</span><span class="sxs-lookup"><span data-stu-id="15fc9-308">The native calling convention.</span></span></param>
        <param name="nativeCharSet"><span data-ttu-id="15fc9-309">Собственная кодировка метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-309">The method's native character set.</span></span></param>
        <summary><span data-ttu-id="15fc9-310">Определяет метод <see langword="PInvoke" /> с заданными именем, именем DLL-библиотеки, в котором этот метод определен, атрибутами метода, соглашением о вызовах, возвращаемым типом, типами параметров метода и флагами <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-310">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span></span></summary>
        <returns><span data-ttu-id="15fc9-311">Определенный метод <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-311">The defined <see langword="PInvoke" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-312">Некоторые атрибуты импорта DLL (см. Описание <xref:System.Runtime.InteropServices.DllImportAttribute>) не могут быть указаны в качестве аргументов для этого метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-312">Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="15fc9-313">Такие атрибуты должны быть установлены путем выпуска пользовательского атрибута для метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-313">Such attributes should be set by emitting a custom attribute for the method.</span></span> <span data-ttu-id="15fc9-314">Например, атрибут `PreserveSig` импорта DLL задается путем выпуска пользовательского атрибута.</span><span class="sxs-lookup"><span data-stu-id="15fc9-314">For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-315">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-315">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-316">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-316">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-317">В следующем примере показано использование `DefinePInvokeMethod` метода для <xref:System.Reflection.Emit.MethodBuilder> создания внешнего неуправляемого метода `MessageBoxA`в API Windows.</span><span class="sxs-lookup"><span data-stu-id="15fc9-317">The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Windows API.</span></span> <span data-ttu-id="15fc9-318">В примере отображается окно сообщения с кнопками **повторить** и **Отмена** и отображается возвращаемое значение из окна сообщения.</span><span class="sxs-lookup"><span data-stu-id="15fc9-318">The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15fc9-319"><xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> Чтобы получить Ненулевое возвращаемое значение, необходимо добавить к флагам реализации метода после <xref:System.Reflection.Emit.MethodBuilder>создания с помощью <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> методов и <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="15fc9-319">To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="15fc9-320">В этом примере используется другая перегрузка <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A> метода, но метод аналогичен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-320">This example uses a different overload of the <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A> method, but the technique is the same.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]
 [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-321">Метод не является статическим или вмещающий тип является интерфейсом, или метод является абстрактным, или метод был определен ранее.</span><span class="sxs-lookup"><span data-stu-id="15fc9-321">The method is not static or if the containing type is an interface or if the method is abstract of if the method was previously defined.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-322">Параметр <paramref name="name" /> или <paramref name="dllName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-322"><paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-323">Содержащий тип был создан ранее с помощью метода <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-323">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-324">Определяет управляемый внедренный ресурс, сохраняемый в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-324">Defines a managed embedded resource to be stored in this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string -&gt; System.Resources.IResourceWriter" Usage="moduleBuilder.DefineResource (name, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-325">Имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-325">The name of the resource.</span></span> <span data-ttu-id="15fc9-326">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-326"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="description"><span data-ttu-id="15fc9-327">Описание ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-327">The description of the resource.</span></span></param>
        <summary><span data-ttu-id="15fc9-328">Определяет именованный управляемый внедренный ресурс, сохраняемый в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-328">Defines the named managed embedded resource to be stored in this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-329">Интерфейс записи ресурса для определенного ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-329">A resource writer for the defined resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-330">Вызывающий объект не должен вызывать `ResourceWriter.Generate()` методы `ResourceWriter.Close()` и, так как эти методы вызываются `ModuleBuilder.Save` , когда динамическая сборка записывается на диск.</span><span class="sxs-lookup"><span data-stu-id="15fc9-330">The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.</span></span>  
  
 <span data-ttu-id="15fc9-331">Используйте этот метод для внедрения управляемого ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-331">Use this method to embed a managed resource.</span></span> <span data-ttu-id="15fc9-332">Чтобы внедрить BLOB-объект ресурса манифеста, <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-332">To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span> <span data-ttu-id="15fc9-333">Сводные сведения о внедрении и связывании управляемых ресурсов и больших двоичных объектов ресурсов манифеста см. в <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> описании метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-333">For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-334">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-334">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-335">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-335">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-336">В следующем примере показано использование `DefineResource` для добавления внешнего ресурса в текущий. <xref:System.Reflection.Emit.ModuleBuilder></span><span class="sxs-lookup"><span data-stu-id="15fc9-336">The following example illustrates the use of `DefineResource` to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineResource1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CPP/modulebuilder_defineresource1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineResource1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CS/modulebuilder_defineresource1.cs#1)]
 [!code-vb[ModuleBuilder_DefineResource1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource1/VB/modulebuilder_defineresource1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-337">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="15fc9-337">Length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-338">Параметр <paramref name="name" /> имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="15fc9-338"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-339">Модуль является несохраняемым.</span><span class="sxs-lookup"><span data-stu-id="15fc9-339">This module is transient.</span></span>  
  
 <span data-ttu-id="15fc9-340">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-340">-or-</span></span>  
  
 <span data-ttu-id="15fc9-341">Включающая сборка не является сохраненной.</span><span class="sxs-lookup"><span data-stu-id="15fc9-341">The containing assembly is not persistable.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * System.Reflection.ResourceAttributes -&gt; System.Resources.IResourceWriter" Usage="moduleBuilder.DefineResource (name, description, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-342">Имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-342">The name of the resource.</span></span> <span data-ttu-id="15fc9-343">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-343"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="description"><span data-ttu-id="15fc9-344">Описание ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-344">The description of the resource.</span></span></param>
        <param name="attribute"><span data-ttu-id="15fc9-345">Атрибуты ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-345">The resource attributes.</span></span></param>
        <summary><span data-ttu-id="15fc9-346">Определяет именованный управляемый внедренный ресурс с указанными атрибутами, который будет сохранен в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-346">Defines the named managed embedded resource with the given attributes that is to be stored in this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-347">Интерфейс записи ресурса для определенного ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-347">A resource writer for the defined resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-348">Вызывающий объект не должен вызывать `ResourceWriter.Generate()` методы `ResourceWriter.Close()` и, так как эти методы вызываются `ModuleBuilder.Save` , когда динамическая сборка записывается на диск.</span><span class="sxs-lookup"><span data-stu-id="15fc9-348">The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.</span></span>  
  
 <span data-ttu-id="15fc9-349">Используйте этот метод для внедрения управляемого ресурса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-349">Use this method to embed a managed resource.</span></span> <span data-ttu-id="15fc9-350">Чтобы внедрить BLOB-объект ресурса манифеста, <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-350">To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span> <span data-ttu-id="15fc9-351">Сводные сведения о внедрении и связывании управляемых ресурсов и больших двоичных объектов ресурсов манифеста см. в <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> описании метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-351">For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-352">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-352">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-353">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-353">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-354">В следующем примере показано использование Дефинересаурце для добавления внешнего ресурса в текущий <xref:System.Reflection.Emit.ModuleBuilder>объект.</span><span class="sxs-lookup"><span data-stu-id="15fc9-354">The following example illustrates the use of DefineResource to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CPP/modulebuilder_defineresource2.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CS/modulebuilder_defineresource2.cs#1)]
 [!code-vb[ModuleBuilder_DefineResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource2/VB/modulebuilder_defineresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-355">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="15fc9-355">Length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-356">Параметр <paramref name="name" /> имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="15fc9-356"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-357">Модуль является несохраняемым.</span><span class="sxs-lookup"><span data-stu-id="15fc9-357">This module is transient.</span></span>  
  
 <span data-ttu-id="15fc9-358">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-358">-or-</span></span>  
  
 <span data-ttu-id="15fc9-359">Включающая сборка не является сохраненной.</span><span class="sxs-lookup"><span data-stu-id="15fc9-359">The containing assembly is not persistable.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-360">Создает документ <see langword="TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-360">Constructs a <see langword="TypeBuilder" />.</span></span> <span data-ttu-id="15fc9-361">Чтобы определить тип значения, следует определить тип, производный от <see cref="T:System.ValueType" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-361">To define a value type, define a type that derives from <see cref="T:System.ValueType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-362">Полный путь к типу, включая пространство имен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-362">The full path of the type, including the namespace.</span></span> <span data-ttu-id="15fc9-363">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-363"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <summary><span data-ttu-id="15fc9-364">Создает объект <see langword="TypeBuilder" /> для закрытого типа с указанным в этом модуле именем.</span><span class="sxs-lookup"><span data-stu-id="15fc9-364">Constructs a <see langword="TypeBuilder" /> for a private type with the specified name in this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-365">Закрытый тип с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="15fc9-365">A private type with the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-366">Имена типов должны быть уникальными в пределах сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-366">Type names must be unique within an assembly.</span></span> <span data-ttu-id="15fc9-367">Два типа с одинаковыми именами нельзя использовать в двух разных модулях сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-367">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-368">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-368">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-369">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-369">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-370">В следующем примере создается <xref:System.Reflection.Emit.TypeBuilder> в текущем динамическом модуле с помощью `CreateType`, выполняется сборка и завершение типа, а также сохраняется сборка.</span><span class="sxs-lookup"><span data-stu-id="15fc9-370">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-371">Тип с данным именем существует в родительской сборке этого модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-371">A type with the given name exists in the parent assembly of this module.</span></span>  
  
 <span data-ttu-id="15fc9-372">-или-</span><span class="sxs-lookup"><span data-stu-id="15fc9-372">-or-</span></span>  
  
 <span data-ttu-id="15fc9-373">Атрибуты вложенного типа установлены для типа, который не является вложенным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-373">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-374">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-374"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-375">Полный путь к типу.</span><span class="sxs-lookup"><span data-stu-id="15fc9-375">The full path of the type.</span></span> <span data-ttu-id="15fc9-376">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-376"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="15fc9-377">Атрибуты определенного в результате типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-377">The attributes of the defined type.</span></span></param>
        <summary><span data-ttu-id="15fc9-378">Конструирует <see langword="TypeBuilder" /> с заданными именем и атрибутами типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-378">Constructs a <see langword="TypeBuilder" /> given the type name and the type attributes.</span></span></summary>
        <returns><span data-ttu-id="15fc9-379">Объект <see langword="TypeBuilder" />, созданный с учетом всех запрошенных атрибутов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-379">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-380">Имена типов должны быть уникальными в пределах сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-380">Type names must be unique within an assembly.</span></span> <span data-ttu-id="15fc9-381">Два типа с одинаковыми именами нельзя использовать в двух разных модулях сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-381">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-382">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-382">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-383">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-383">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-384">В следующем примере создается <xref:System.Reflection.Emit.TypeBuilder> в текущем динамическом модуле с помощью `CreateType`, выполняется сборка и завершение типа, а также сохраняется сборка.</span><span class="sxs-lookup"><span data-stu-id="15fc9-384">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-385">Тип с данным именем существует в родительской сборке этого модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-385">A type with the given name exists in the parent assembly of this module.</span></span>  
  
 <span data-ttu-id="15fc9-386">-или-</span><span class="sxs-lookup"><span data-stu-id="15fc9-386">-or-</span></span>  
  
 <span data-ttu-id="15fc9-387">Атрибуты вложенного типа установлены для типа, который не является вложенным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-387">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-388">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-388"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-389">Полный путь к типу.</span><span class="sxs-lookup"><span data-stu-id="15fc9-389">The full path of the type.</span></span> <span data-ttu-id="15fc9-390">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-390"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="15fc9-391">Атрибут, который будет связан с типом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-391">The attribute to be associated with the type.</span></span></param>
        <param name="parent"><span data-ttu-id="15fc9-392">Тип, расширяющий определенный тип.</span><span class="sxs-lookup"><span data-stu-id="15fc9-392">The type that the defined type extends.</span></span></param>
        <summary><span data-ttu-id="15fc9-393">Конструирует <see langword="TypeBuilder" /> с заданным именем, атрибутами и типом, который расширяет определенный тип.</span><span class="sxs-lookup"><span data-stu-id="15fc9-393">Constructs a <see langword="TypeBuilder" /> given type name, its attributes, and the type that the defined type extends.</span></span></summary>
        <returns><span data-ttu-id="15fc9-394">Объект <see langword="TypeBuilder" />, созданный с учетом всех запрошенных атрибутов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-394">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-395">Имена типов должны быть уникальными в пределах сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-395">Type names must be unique within an assembly.</span></span> <span data-ttu-id="15fc9-396">Два типа с одинаковыми именами нельзя использовать в двух разных модулях сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-396">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-397">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-397">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-398">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-398">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-399">В следующем примере создается <xref:System.Reflection.Emit.TypeBuilder> в текущем динамическом модуле с помощью `CreateType`, выполняется сборка и завершение типа, а также сохраняется сборка.</span><span class="sxs-lookup"><span data-stu-id="15fc9-399">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-400">Тип с данным именем существует в родительской сборке этого модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-400">A type with the given name exists in the parent assembly of this module.</span></span>  
  
 <span data-ttu-id="15fc9-401">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-401">-or-</span></span>  
  
 <span data-ttu-id="15fc9-402">Атрибуты вложенного типа установлены для типа, который не является вложенным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-402">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-403"><paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-403"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, int typesize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, int32 typesize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, typesize As Integer) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, int typesize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, typesize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="typesize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-404">Полный путь к типу.</span><span class="sxs-lookup"><span data-stu-id="15fc9-404">The full path of the type.</span></span> <span data-ttu-id="15fc9-405">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-405"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="15fc9-406">Атрибуты определенного в результате типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-406">The attributes of the defined type.</span></span></param>
        <param name="parent"><span data-ttu-id="15fc9-407">Тип, расширяющий определенный тип.</span><span class="sxs-lookup"><span data-stu-id="15fc9-407">The type that the defined type extends.</span></span></param>
        <param name="typesize"><span data-ttu-id="15fc9-408">Общий размер типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-408">The total size of the type.</span></span></param>
        <summary><span data-ttu-id="15fc9-409">Конструирует <see langword="TypeBuilder" /> с заданными именем, атрибутами, типом, который расширяет определенный тип, и общим размером типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-409">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the total size of the type.</span></span></summary>
        <returns><span data-ttu-id="15fc9-410">Объект <see langword="TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-410">A <see langword="TypeBuilder" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-411">Имена типов должны быть уникальными в пределах сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-411">Type names must be unique within an assembly.</span></span> <span data-ttu-id="15fc9-412">В двух разных модулях сборки запрещено использовать два типа с одинаковыми именами.</span><span class="sxs-lookup"><span data-stu-id="15fc9-412">It is forbidden to have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-413">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-413">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-414">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-414">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-415">В следующем примере создается <xref:System.Reflection.Emit.TypeBuilder> в текущем динамическом модуле с помощью `CreateType`, выполняется сборка и завершение типа, а также сохраняется сборка.</span><span class="sxs-lookup"><span data-stu-id="15fc9-415">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-416">Тип с данным именем существует в родительской сборке этого модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-416">A type with the given name exists in the parent assembly of this module.</span></span>  
  
 <span data-ttu-id="15fc9-417">-или-</span><span class="sxs-lookup"><span data-stu-id="15fc9-417">-or-</span></span>  
  
 <span data-ttu-id="15fc9-418">Атрибуты вложенного типа установлены для типа, который не является вложенным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-418">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-419">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-419"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packsize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packsize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, packsize As PackingSize) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packsize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, packsize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="packsize" Type="System.Reflection.Emit.PackingSize" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-420">Полный путь к типу.</span><span class="sxs-lookup"><span data-stu-id="15fc9-420">The full path of the type.</span></span> <span data-ttu-id="15fc9-421">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-421"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="15fc9-422">Атрибуты определенного в результате типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-422">The attributes of the defined type.</span></span></param>
        <param name="parent"><span data-ttu-id="15fc9-423">Тип, расширяющий определенный тип.</span><span class="sxs-lookup"><span data-stu-id="15fc9-423">The type that the defined type extends.</span></span></param>
        <param name="packsize"><span data-ttu-id="15fc9-424">Размер упаковки типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-424">The packing size of the type.</span></span></param>
        <summary><span data-ttu-id="15fc9-425">Конструирует <see langword="TypeBuilder" /> с заданными именем, атрибутами, типом, который расширяет определенный тип, и размером упаковки типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-425">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the packing size of the type.</span></span></summary>
        <returns><span data-ttu-id="15fc9-426">Объект <see langword="TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-426">A <see langword="TypeBuilder" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-427">Имена типов должны быть уникальными в пределах сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-427">Type names must be unique within an assembly.</span></span> <span data-ttu-id="15fc9-428">Два типа с одинаковыми именами нельзя использовать в двух разных модулях сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-428">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-429">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-429">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-430">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-430">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-431">В следующем примере создается <xref:System.Reflection.Emit.TypeBuilder> в текущем динамическом модуле с помощью `CreateType`, выполняется сборка и завершение типа, а также сохраняется сборка.</span><span class="sxs-lookup"><span data-stu-id="15fc9-431">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-432">Тип с данным именем существует в родительской сборке этого модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-432">A type with the given name exists in the parent assembly of this module.</span></span>  
  
 <span data-ttu-id="15fc9-433">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-433">-or-</span></span>  
  
 <span data-ttu-id="15fc9-434">Атрибуты вложенного типа установлены для типа, который не является вложенным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-434">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-435">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-435"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, interfaces As Type()) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * Type[] -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, interfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-436">Полный путь к типу.</span><span class="sxs-lookup"><span data-stu-id="15fc9-436">The full path of the type.</span></span> <span data-ttu-id="15fc9-437">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-437"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="15fc9-438">Атрибуты, которые будут связаны с типом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-438">The attributes to be associated with the type.</span></span></param>
        <param name="parent"><span data-ttu-id="15fc9-439">Тип, расширяющий определенный тип.</span><span class="sxs-lookup"><span data-stu-id="15fc9-439">The type that the defined type extends.</span></span></param>
        <param name="interfaces"><span data-ttu-id="15fc9-440">Список интерфейсов, реализуемых типом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-440">The list of interfaces that the type implements.</span></span></param>
        <summary><span data-ttu-id="15fc9-441">Конструирует <see langword="TypeBuilder" /> с заданными именем, атрибутами, типом, который расширяет определенный тип, и интерфейсами, реализующими этот тип.</span><span class="sxs-lookup"><span data-stu-id="15fc9-441">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.</span></span></summary>
        <returns><span data-ttu-id="15fc9-442">Объект <see langword="TypeBuilder" />, созданный с учетом всех запрошенных атрибутов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-442">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-443">Имена типов должны быть уникальными в пределах сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-443">Type names must be unique within an assembly.</span></span> <span data-ttu-id="15fc9-444">Два типа с одинаковыми именами нельзя использовать в двух разных модулях сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-444">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-445">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-445">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-446">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-446">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-447">В следующем примере создается <xref:System.Reflection.Emit.TypeBuilder> в текущем динамическом модуле с помощью `CreateType`, выполняется сборка и завершение типа, а также сохраняется сборка.</span><span class="sxs-lookup"><span data-stu-id="15fc9-447">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-448">Тип с данным именем существует в родительской сборке этого модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-448">A type with the given name exists in the parent assembly of this module.</span></span>  
  
 <span data-ttu-id="15fc9-449">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-449">-or-</span></span>  
  
 <span data-ttu-id="15fc9-450">Атрибуты вложенного типа установлены для типа, который не является вложенным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-450">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-451">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-451"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packingSize, int typesize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packingSize, int32 typesize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packingSize, int typesize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, packingSize, typesize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="packingSize" Type="System.Reflection.Emit.PackingSize" />
        <Parameter Name="typesize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-452">Полный путь к типу.</span><span class="sxs-lookup"><span data-stu-id="15fc9-452">The full path of the type.</span></span> <span data-ttu-id="15fc9-453">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-453"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="15fc9-454">Атрибуты определенного в результате типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-454">The attributes of the defined type.</span></span></param>
        <param name="parent"><span data-ttu-id="15fc9-455">Тип, расширяющий определенный тип.</span><span class="sxs-lookup"><span data-stu-id="15fc9-455">The type that the defined type extends.</span></span></param>
        <param name="packingSize"><span data-ttu-id="15fc9-456">Размер упаковки типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-456">The packing size of the type.</span></span></param>
        <param name="typesize"><span data-ttu-id="15fc9-457">Общий размер типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-457">The total size of the type.</span></span></param>
        <summary><span data-ttu-id="15fc9-458">Конструирует <see langword="TypeBuilder" /> с заданными именем, атрибутами, типом, который расширяет определенный тип, а также размером уплотнения и общим размером определенного типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-458">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.</span></span></summary>
        <returns><span data-ttu-id="15fc9-459">Объект <see langword="TypeBuilder" />, созданный с учетом всех запрошенных атрибутов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-459">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-460">Имена типов должны быть уникальными в пределах сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-460">Type names must be unique within an assembly.</span></span> <span data-ttu-id="15fc9-461">Два типа с одинаковыми именами нельзя использовать в двух разных модулях сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-461">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-462">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-462">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-463">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-463">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-464">В следующем примере создается <xref:System.Reflection.Emit.TypeBuilder> в текущем динамическом модуле с помощью `CreateType`, выполняется сборка и завершение типа, а также сохраняется сборка.</span><span class="sxs-lookup"><span data-stu-id="15fc9-464">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-465">Тип с данным именем существует в родительской сборке этого модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-465">A type with the given name exists in the parent assembly of this module.</span></span>  
  
 <span data-ttu-id="15fc9-466">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-466">-or-</span></span>  
  
 <span data-ttu-id="15fc9-467">Атрибуты вложенного типа установлены для типа, который не является вложенным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-467">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-468"><paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-468"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUninitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineUninitializedData (string name, int size, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineUninitializedData(string name, int32 size, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineUninitializedData (name As String, size As Integer, attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineUninitializedData(System::String ^ name, int size, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineUninitializedData : string * int * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="moduleBuilder.DefineUninitializedData (name, size, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-469">Имя, используемое для ссылки на данные.</span><span class="sxs-lookup"><span data-stu-id="15fc9-469">The name used to refer to the data.</span></span> <span data-ttu-id="15fc9-470">Параметр <paramref name="name" /> не может содержать внедренные значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-470"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="size"><span data-ttu-id="15fc9-471">Размер поля данных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-471">The size of the data field.</span></span></param>
        <param name="attributes"><span data-ttu-id="15fc9-472">Атрибуты поля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-472">The attributes for the field.</span></span></param>
        <summary><span data-ttu-id="15fc9-473">Определяет неинициализированное поле данных в разделе .sdata переносимого исполняемого PE-файла.</span><span class="sxs-lookup"><span data-stu-id="15fc9-473">Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.</span></span></summary>
        <returns><span data-ttu-id="15fc9-474">Поле для ссылки на данные.</span><span class="sxs-lookup"><span data-stu-id="15fc9-474">A field to reference the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-475"><xref:System.Reflection.FieldAttributes.Static>автоматически включается в `attributes`.</span><span class="sxs-lookup"><span data-stu-id="15fc9-475"><xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.</span></span>  
  
 <span data-ttu-id="15fc9-476">Данные, определенные этим методом, не создаются до <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-476">The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-477">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-477">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-478">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-478">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-479">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="15fc9-479">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="15fc9-480">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-480">-or-</span></span> 
 <span data-ttu-id="15fc9-481">Значение <paramref name="size" /> меньше или равно нулю либо больше или равно 0x003f0000.</span><span class="sxs-lookup"><span data-stu-id="15fc9-481"><paramref name="size" /> is less than or equal to zero, or greater than or equal to 0x003f0000.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-482">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-482"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-483"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> был вызван ранее.</span><span class="sxs-lookup"><span data-stu-id="15fc9-483"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-484">Определяет неуправляемый ресурс в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-484">Defines an unmanaged resource in this module.</span></span> <span data-ttu-id="15fc9-485">Большой двоичный объект (BLOB) должен иметь корректный формат ресурса Win32.</span><span class="sxs-lookup"><span data-stu-id="15fc9-485">The binary large object (BLOB) must have the right format for a Win32 resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : byte[] -&gt; unit" Usage="moduleBuilder.DefineUnmanagedResource resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="15fc9-486">Закрытый большой двоичный объект, который предоставляет неуправляемый ресурс/</span><span class="sxs-lookup"><span data-stu-id="15fc9-486">An opaque BLOB that represents an unmanaged resource</span></span></param>
        <summary><span data-ttu-id="15fc9-487">Определяет неуправляемый внедренный ресурс как закрытый большой двоичный объект (BLOB) байтов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-487">Defines an unmanaged embedded resource given an opaque binary large object (BLOB) of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-488">Сборка может быть связана только с одним неуправляемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-488">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="15fc9-489">Это означает, что `DefineVersionInfoResource` вызов `DefineUnmanagedResource` или после того, как один из <xref:System.ArgumentException>методов вызывался ранее.</span><span class="sxs-lookup"><span data-stu-id="15fc9-489">This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>.</span></span> <span data-ttu-id="15fc9-490">Несколько неуправляемых ресурсов необходимо объединить с помощью такого средства, как Microsoft Ресмерже Utility (не представленного в среде CLR).</span><span class="sxs-lookup"><span data-stu-id="15fc9-490">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-491">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-491">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-492">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-492">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-493">Неуправляемый ресурс уже был определен в сборке модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-493">An unmanaged resource has already been defined in the module's assembly.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-494">Свойство <paramref name="resource" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-494"><paramref name="resource" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : string -&gt; unit" Usage="moduleBuilder.DefineUnmanagedResource resourceFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceFileName"><span data-ttu-id="15fc9-495">Имя файла неуправляемых ресурсов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-495">The name of the unmanaged resource file.</span></span></param>
        <summary><span data-ttu-id="15fc9-496">Определяет неуправляемый ресурс с указанием имени файла ресурсов Win32.</span><span class="sxs-lookup"><span data-stu-id="15fc9-496">Defines an unmanaged resource given the name of Win32 resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-497">Сборка может быть связана только с одним неуправляемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-497">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="15fc9-498">Это означает, что `DefineVersionInfoResource` вызов `DefineUnmanagedResource` или после того, как один из <xref:System.ArgumentException>методов вызывался ранее.</span><span class="sxs-lookup"><span data-stu-id="15fc9-498">This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>.</span></span> <span data-ttu-id="15fc9-499">Несколько неуправляемых ресурсов необходимо объединить с помощью такого средства, как Microsoft Ресмерже Utility (не представленного в среде CLR).</span><span class="sxs-lookup"><span data-stu-id="15fc9-499">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-500">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-500">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-501">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-501">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-502">Неуправляемый ресурс уже был определен в сборке модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-502">An unmanaged resource has already been defined in the module's assembly.</span></span>  
  
<span data-ttu-id="15fc9-503">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-503">-or-</span></span> 
 <span data-ttu-id="15fc9-504"><paramref name="resourceFileName" /> является пустой строкой ("").</span><span class="sxs-lookup"><span data-stu-id="15fc9-504"><paramref name="resourceFileName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-505">Свойство <paramref name="resourceFileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-505"><paramref name="resourceFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="15fc9-506"><paramref name="resourceFileName" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="15fc9-506"><paramref name="resourceFileName" /> is not found.</span></span>  
  
<span data-ttu-id="15fc9-507">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-507">-or-</span></span> 
 <span data-ttu-id="15fc9-508"><paramref name="resourceFileName" /> является каталогом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-508"><paramref name="resourceFileName" /> is a directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="moduleBuilder.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="15fc9-509">Объект, сравниваемый с этим экземпляром, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-509">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="15fc9-510">Возвращает значение, указывающее, равен ли данный экземпляр указанному объекту.</span><span class="sxs-lookup"><span data-stu-id="15fc9-510">Returns a value that indicates whether this instance is equal to the specified object.</span></span></summary>
        <returns><span data-ttu-id="15fc9-511"><see langword="true" />, если значение параметра <paramref name="obj" /> равно типу и значению данного экземпляра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-511"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedName">
      <MemberSignature Language="C#" Value="public override string FullyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.FullyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullyQualifiedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedName : string" Usage="System.Reflection.Emit.ModuleBuilder.FullyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15fc9-512">Получает значение типа <see langword="String" />, предоставляющее полное имя и путь для данного модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-512">Gets a <see langword="String" /> representing the fully qualified name and path to this module.</span></span></summary>
        <value><span data-ttu-id="15fc9-513">Полное имя модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-513">The fully qualified module name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-514">Чтобы получить имя без пути, используйте `Name`.</span><span class="sxs-lookup"><span data-stu-id="15fc9-514">To get the name without the path, use `Name`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-515">Регистр имени модуля зависит от платформы.</span><span class="sxs-lookup"><span data-stu-id="15fc9-515">The case of a module name is platform dependent.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="15fc9-516">Обращается к сведениям в пути.</span><span class="sxs-lookup"><span data-stu-id="15fc9-516">Accesses information in the path.</span></span> <span data-ttu-id="15fc9-517">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-517">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetArrayMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetArrayMethod (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MethodInfo GetArrayMethod(class System.Type arrayClass, string methodName, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayMethod (arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetArrayMethod(Type ^ arrayClass, System::String ^ methodName, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetArrayMethod : Type * string * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.MethodInfo" Usage="moduleBuilder.GetArrayMethod (arrayClass, methodName, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="arrayClass"><span data-ttu-id="15fc9-518">Класс массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-518">An array class.</span></span></param>
        <param name="methodName"><span data-ttu-id="15fc9-519">Имя метода класса массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-519">The name of a method on the array class.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="15fc9-520">Соглашение о вызове метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-520">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="15fc9-521">Тип возвращаемых данных метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-521">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="15fc9-522">Типы параметров метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-522">The types of the method's parameters.</span></span></param>
        <summary><span data-ttu-id="15fc9-523">Возвращает именованный метод класса массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-523">Returns the named method on an array class.</span></span></summary>
        <returns><span data-ttu-id="15fc9-524">Именованный метод класса массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-524">The named method on an array class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-525">`GetArrayMethod`может использоваться, если имеется массив типа, определение которого не было завершено и требуется получить доступ к методам, определенным в <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-525">`GetArrayMethod` is useful when you have an array of a type whose definition has not been completed and you want to access methods defined on <xref:System.Array>.</span></span> <span data-ttu-id="15fc9-526">Например, можно определить тип и определить метод, принимающий массив типа в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="15fc9-526">For example, you might define a type and want to define a method that takes an array of the type as a parameter.</span></span> <span data-ttu-id="15fc9-527">Чтобы получить доступ к элементам массива, необходимо вызвать методы <xref:System.Array> класса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-527">In order to access the elements of the array, you will need to call methods of the <xref:System.Array> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-528">В следующем примере показано, как использовать <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> для получения объекта <xref:System.Reflection.MethodInfo> , соответствующего методу, который возвращает значение массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-528">The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.MethodInfo> corresponding to a method that returns an array value.</span></span>  
  
 [!code-cpp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#1)]
 [!code-csharp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#1)]
 [!code-vb[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-529">Параметр <paramref name="arrayClass" /> не является массивом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-529"><paramref name="arrayClass" /> is not an array.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-530">Параметр <paramref name="arrayClass" /> или <paramref name="methodName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-530"><paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetArrayMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetArrayMethodToken (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetArrayMethodToken(class System.Type arrayClass, string methodName, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayMethodToken (arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetArrayMethodToken(Type ^ arrayClass, System::String ^ methodName, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetArrayMethodToken : Type * string * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetArrayMethodToken (arrayClass, methodName, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="methodName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="arrayClass"><span data-ttu-id="15fc9-531">Объект массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-531">The object for the array.</span></span></param>
        <param name="methodName"><span data-ttu-id="15fc9-532">Строка, содержащая имя метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-532">A string that contains the name of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="15fc9-533">Соглашение о вызовах для метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-533">The calling convention for the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="15fc9-534">Тип возвращаемых данных метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-534">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="15fc9-535">Типы параметров метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-535">The types of the parameters of the method.</span></span></param>
        <summary><span data-ttu-id="15fc9-536">Возвращает маркер для именованного метода класса массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-536">Returns the token for the named method on an array class.</span></span></summary>
        <returns><span data-ttu-id="15fc9-537">маркер именованного метода класса массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-537">The token for the named method on an array class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-538">Этот метод аналогичен <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, за исключением того, что он возвращает маркер метода массива вместо самого метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-538">This method is similar to <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, except that it returns the token of the array method instead of the method itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15fc9-539">В следующем примере показано, как использовать <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> для получения объекта <xref:System.Reflection.Emit.MethodToken> , соответствующего методу, который возвращает значение массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-539">The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.Emit.MethodToken> corresponding to a method that returns an array value.</span></span>  
  
 [!code-cpp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#2)]
 [!code-csharp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#2)]
 [!code-vb[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-540">Параметр <paramref name="arrayClass" /> не является массивом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-540"><paramref name="arrayClass" /> is not an array.</span></span>  
  
<span data-ttu-id="15fc9-541">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-541">-or-</span></span> 
<span data-ttu-id="15fc9-542">Длина параметра <paramref name="methodName" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="15fc9-542">The length of <paramref name="methodName" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-543">Значение параметра <paramref name="arrayClass" /> или <paramref name="methodName" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-543"><paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructorToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-544">Возвращает маркер, используемый для идентификации указанного конструктора в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-544">Returns the token used to identify the specified constructor within this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructorToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo con);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetConstructorToken(class System.Reflection.ConstructorInfo con) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructorToken (con As ConstructorInfo) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetConstructorToken(System::Reflection::ConstructorInfo ^ con);" />
      <MemberSignature Language="F#" Value="member this.GetConstructorToken : System.Reflection.ConstructorInfo -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetConstructorToken con" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="15fc9-545">Конструктор, для которого нужно получить токен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-545">The constructor to get a token for.</span></span></param>
        <summary><span data-ttu-id="15fc9-546">Возвращает маркер, используемый для идентификации указанного конструктора в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-546">Returns the token used to identify the specified constructor within this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-547">Токен, используемый для идентификации указанного конструктора в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-547">The token used to identify the specified constructor within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-548"><paramref name="con" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-548"><paramref name="con" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConstructorToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;Type&gt; optionalParameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetConstructorToken(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; optionalParameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructorToken (constructor As ConstructorInfo, optionalParameterTypes As IEnumerable(Of Type)) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetConstructorToken(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ optionalParameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetConstructorToken : System.Reflection.ConstructorInfo * seq&lt;Type&gt; -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetConstructorToken (constructor, optionalParameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="constructor"><span data-ttu-id="15fc9-549">Конструктор, для которого нужно получить токен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-549">The constructor to get a token for.</span></span></param>
        <param name="optionalParameterTypes"><span data-ttu-id="15fc9-550">Коллекция типов необязательных параметров для конструктора.</span><span class="sxs-lookup"><span data-stu-id="15fc9-550">A collection of the types of the optional parameters to the constructor.</span></span></param>
        <summary><span data-ttu-id="15fc9-551">Возвращает токен, используемый для идентификации конструктора с заданными атрибутами и типами параметров в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-551">Returns the token used to identify the constructor that has the specified attributes and parameter types within this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-552">Токен, используемый для идентификации указанного конструктора в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-552">The token used to identify the specified constructor within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-553">Свойство <paramref name="constructor" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-553"><paramref name="constructor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-554">Возвращает настраиваемые атрибуты, применяемые к текущему объекту <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-554">Returns the custom attributes that are applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="moduleBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="15fc9-555">Данный аргумент не учитывается для объектов этого типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-555">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="15fc9-556">Возвращает все настраиваемые атрибуты, которые были применены к текущему <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-556">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="15fc9-557">Массив, содержащий настраиваемые атрибуты; массив является пустым, если атрибуты отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="15fc9-557">An array that contains the custom attributes; the array is empty if there are no attributes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="moduleBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="15fc9-558">Базовый тип, от которого наследуют атрибуты.</span><span class="sxs-lookup"><span data-stu-id="15fc9-558">The base type from which attributes derive.</span></span></param>
        <param name="inherit"><span data-ttu-id="15fc9-559">Данный аргумент не учитывается для объектов этого типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-559">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="15fc9-560">Возвращает настраиваемые атрибуты, примененные к текущему <see cref="T:System.Reflection.Emit.ModuleBuilder" />, которые являются производными от указанного типа атрибута.</span><span class="sxs-lookup"><span data-stu-id="15fc9-560">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that derive from a specified attribute type.</span></span></summary>
        <returns><span data-ttu-id="15fc9-561">Массив, содержащий настраиваемые атрибуты, происходящие (на любом уровне) от <paramref name="attributeType" />; если массив пуст, таких атрибутов нет.</span><span class="sxs-lookup"><span data-stu-id="15fc9-561">An array that contains the custom attributes that are derived, at any level, from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-562"><paramref name="attributeType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-562"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-563"><paramref name="attributeType" /> не является объектом <see cref="T:System.Type" />, предоставляемым средой выполнения.</span><span class="sxs-lookup"><span data-stu-id="15fc9-563"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span></span> <span data-ttu-id="15fc9-564">Например, <paramref name="attributeType" /> является объектом <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-564">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="moduleBuilder.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15fc9-565">Возвращает сведения об атрибутах, примененных к текущему объекту <see cref="T:System.Reflection.Emit.ModuleBuilder" />; сведения представляют собой объекты <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-565">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span></span></summary>
        <returns><span data-ttu-id="15fc9-566">Универсальный список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, которые были применены к текущему модулю.</span><span class="sxs-lookup"><span data-stu-id="15fc9-566">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-567">Этот метод используется для проверки пользовательских атрибутов кода в контексте, предназначенном только для отражения, в случаях, когда сами пользовательские атрибуты определены в коде, который загружается в контекст, предназначенный только для отражения.</span><span class="sxs-lookup"><span data-stu-id="15fc9-567">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="15fc9-568">Такие методы <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> , <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> как и, не могут использоваться в таких случаях, так как они создают экземпляры атрибутов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-568">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="15fc9-569">Код в контексте, предназначенном только для отражения, не может быть выполнен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-569">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="15fc9-570">Дополнительные сведения и примеры кода см. в <xref:System.Reflection.CustomAttributeData> разделе класс.</span><span class="sxs-lookup"><span data-stu-id="15fc9-570">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="moduleBuilder.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-571">Имя поля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-571">The field name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="15fc9-572">Комбинация двоичных флагов привязки <see langword="BindingFlags" />, используемых для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="15fc9-572">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <summary><span data-ttu-id="15fc9-573">Возвращает поле уровня модуля, определенное в области .sdata переносимого исполняемого файла (PE) с данными именем и атрибутами привязки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-573">Returns a module-level field, defined in the .sdata region of the portable executable (PE) file, that has the specified name and binding attributes.</span></span></summary>
        <returns><span data-ttu-id="15fc9-574">Поле, имеющее заданное имя и атрибуты привязки, либо значение <see langword="null" />, если поле не существует.</span><span class="sxs-lookup"><span data-stu-id="15fc9-574">A field that has the specified name and binding attributes, or <see langword="null" /> if the field does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-575">При выпуске динамических сборок поля в области. sdata переносимого исполняемого файла (PE) определяются с помощью <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> методов или. <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A></span><span class="sxs-lookup"><span data-stu-id="15fc9-575">When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15fc9-576">Поля уровня модуля не могут быть получены до тех пор <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> , пока не будет вызван метод для модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-576">Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-577">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-577">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="moduleBuilder.GetFields bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="15fc9-578">Комбинация двоичных флагов привязки <see langword="BindingFlags" />, используемых для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="15fc9-578">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <summary><span data-ttu-id="15fc9-579">Возвращает все поля, определенные в области .sdata переносимого исполняемого файла (PE), соответствующие заданным флагам привязки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-579">Returns all fields defined in the .sdata region of the portable executable (PE) file that match the specified binding flags.</span></span></summary>
        <returns><span data-ttu-id="15fc9-580">Массив полей, соответствующих заданным флагам; если таких полей нет, массив пуст.</span><span class="sxs-lookup"><span data-stu-id="15fc9-580">An array of fields that match the specified flags; the array is empty if no such fields exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-581">При выпуске динамических сборок поля в области. sdata переносимого исполняемого файла (PE) определяются с помощью <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> методов или. <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A></span><span class="sxs-lookup"><span data-stu-id="15fc9-581">When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15fc9-582">Поля уровня модуля не могут быть получены до тех пор <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> , пока не будет вызван метод для модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-582">Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-583">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-583">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldToken GetFieldToken (System.Reflection.FieldInfo field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.FieldToken GetFieldToken(class System.Reflection.FieldInfo field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldToken (field As FieldInfo) As FieldToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldToken GetFieldToken(System::Reflection::FieldInfo ^ field);" />
      <MemberSignature Language="F#" Value="member this.GetFieldToken : System.Reflection.FieldInfo -&gt; System.Reflection.Emit.FieldToken" Usage="moduleBuilder.GetFieldToken field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.FieldInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="15fc9-584">Поле, для которого нужно получить токен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-584">The field to get a token for.</span></span></param>
        <summary><span data-ttu-id="15fc9-585">Возвращает токен, используемый для идентификации указанного поля в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-585">Returns the token used to identify the specified field within this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-586">Токен, используемый для идентификации указанного поля в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-586">The token used to identify the specified field within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-587">Свойство <paramref name="field" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-587"><paramref name="field" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="moduleBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15fc9-588">Возвращает хэш-код данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="15fc9-588">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="15fc9-589">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="15fc9-589">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetMethodImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="moduleBuilder.GetMethodImpl (name, bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="types" Type="System.Type[]" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-590">Имя метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-590">The method name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="15fc9-591">Комбинация двоичных флагов привязки <see langword="BindingFlags" />, используемых для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="15fc9-591">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="15fc9-592">Объект, реализующий <see langword="Binder" />, содержащий свойства, связанные с этим методом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-592">An object that implements <see langword="Binder" />, containing properties related to this method.</span></span></param>
        <param name="callConvention"><span data-ttu-id="15fc9-593">Соглашение о вызовах для метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-593">The calling convention for the method.</span></span></param>
        <param name="types"><span data-ttu-id="15fc9-594">Типы параметров метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-594">The parameter types of the method.</span></span></param>
        <param name="modifiers"><span data-ttu-id="15fc9-595">Массив модификаторов параметров, используемый для работы привязки с подписями параметров, в которых были изменены типы.</span><span class="sxs-lookup"><span data-stu-id="15fc9-595">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="15fc9-596">Возвращает метод уровня модуля, соответствующий заданным критериям.</span><span class="sxs-lookup"><span data-stu-id="15fc9-596">Returns the module-level method that matches the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="15fc9-597">Метод, определяемый на уровне модуля, соответствующий заданным критериям; значение <see langword="null" />, если такого метода не существует.</span><span class="sxs-lookup"><span data-stu-id="15fc9-597">A method that is defined at the module level, and matches the specified criteria; or <see langword="null" /> if such a method does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-598">Этот метод обеспечивает реализацию всех перегрузок наследуемого <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-598">This method provides the implementation for all overloads of the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="15fc9-599">Используйте наследуемый <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> метод для получения методов, объявленных на уровне модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-599">Use the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> method to get methods that have been declared at the module level.</span></span> <span data-ttu-id="15fc9-600">Методы уровня модуля определяются в вырожденном коде с помощью <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-600">Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15fc9-601">Методы уровня модуля не могут быть получены до тех пор <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> , пока не будет вызван метод для модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-601">Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-602">Значение параметра <paramref name="name" /> равно <see langword="null" />, значение параметра <paramref name="types" /> равно <see langword="null" />, или элемент параметра <paramref name="types" /> равен значению <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-602"><paramref name="name" /> is <see langword="null" />, <paramref name="types" /> is <see langword="null" />, or an element of <paramref name="types" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="moduleBuilder.GetMethods bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="15fc9-603">Комбинация двоичных флагов привязки <see langword="BindingFlags" />, используемых для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="15fc9-603">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <summary><span data-ttu-id="15fc9-604">Возвращает все методы, которые определены на уровне модуля для текущего объекта <see cref="T:System.Reflection.Emit.ModuleBuilder" /> и соответствуют указанным флагам привязки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-604">Returns all the methods that have been defined at the module level for the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that match the specified binding flags.</span></span></summary>
        <returns><span data-ttu-id="15fc9-605">Массив, который содержит все методы уровня модуля, соответствующие <paramref name="bindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-605">An array that contains all the module-level methods that match <paramref name="bindingFlags" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-606">Методы уровня модуля определяются в вырожденном коде с помощью <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-606">Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15fc9-607">Методы уровня модуля не могут быть получены до тех пор <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> , пока не будет вызван метод для модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-607">Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-608">Возвращает токен, используемый для идентификации указанного метода в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-608">Returns the token used to identify the specified method within this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetMethodToken(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodToken (method As MethodInfo) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetMethodToken(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="member this.GetMethodToken : System.Reflection.MethodInfo -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetMethodToken method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="15fc9-609">Метод, для которого нужно получить токен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-609">The method to get a token for.</span></span></param>
        <summary><span data-ttu-id="15fc9-610">Возвращает токен, используемый для идентификации указанного метода в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-610">Returns the token used to identify the specified method within this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-611">Токен, используемый для идентификации указанного метода в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-611">The token used to identify the specified method within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-612"><paramref name="method" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-612"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-613">Объявляемый тип метода не содержится в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-613">The declaring type for the method is not in this module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;Type&gt; optionalParameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetMethodToken(class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; optionalParameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodToken (method As MethodInfo, optionalParameterTypes As IEnumerable(Of Type)) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetMethodToken(System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ optionalParameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetMethodToken : System.Reflection.MethodInfo * seq&lt;Type&gt; -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetMethodToken (method, optionalParameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="15fc9-614">Метод, для которого нужно получить токен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-614">The method to get a token for.</span></span></param>
        <param name="optionalParameterTypes"><span data-ttu-id="15fc9-615">Коллекция типов необязательных параметров для метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-615">A collection of the types of the optional parameters to the method.</span></span></param>
        <summary><span data-ttu-id="15fc9-616">Возвращает токен, используемый для идентификации метода с заданными атрибутами и типами параметров в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-616">Returns the token used to identify the method that has the specified attributes and parameter types within this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-617">Токен, используемый для идентификации указанного метода в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-617">The token used to identify the specified method within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-618"><paramref name="method" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-618"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-619">Объявляемый тип метода не содержится в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-619">The declaring type for the method is not in this module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPEKind">
      <MemberSignature Language="C#" Value="public override void GetPEKind (out System.Reflection.PortableExecutableKinds peKind, out System.Reflection.ImageFileMachine machine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetPEKind([out] valuetype System.Reflection.PortableExecutableKinds&amp; peKind, [out] valuetype System.Reflection.ImageFileMachine&amp; machine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetPEKind (ByRef peKind As PortableExecutableKinds, ByRef machine As ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetPEKind([Runtime::InteropServices::Out] System::Reflection::PortableExecutableKinds % peKind, [Runtime::InteropServices::Out] System::Reflection::ImageFileMachine % machine);" />
      <MemberSignature Language="F#" Value="override this.GetPEKind : PortableExecutableKinds * ImageFileMachine -&gt; unit" Usage="moduleBuilder.GetPEKind (peKind, machine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peKind" Type="System.Reflection.PortableExecutableKinds" RefType="out" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
        <Parameter Name="machine" Type="System.Reflection.ImageFileMachine" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="peKind"><span data-ttu-id="15fc9-620">Этот метод возвращает сочетание значений <see cref="T:System.Reflection.PortableExecutableKinds" />, определяющее характер кода в модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-620">When this method returns, a combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values indicating the nature of the code in the module.</span></span></param>
        <param name="machine"><span data-ttu-id="15fc9-621">Этот метод возвращает одно из значений <see cref="T:System.Reflection.ImageFileMachine" />, определяющее платформу, на которой применяется модуль.</span><span class="sxs-lookup"><span data-stu-id="15fc9-621">When this method returns, one of the <see cref="T:System.Reflection.ImageFileMachine" /> values indicating the platform targeted by the module.</span></span></param>
        <summary><span data-ttu-id="15fc9-622">Возвращает пару значений, определяющих природу кода в модуле и платформе, на которой применяется этот модуль.</span><span class="sxs-lookup"><span data-stu-id="15fc9-622">Gets a pair of values indicating the nature of the code in a module and the platform targeted by the module.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-623">Для динамических модулей `peKind` всегда <xref:System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage?displayProperty=nameWithType> имеет значение и `machine` всегда равно 0 (нуль).</span><span class="sxs-lookup"><span data-stu-id="15fc9-623">For dynamic modules, `peKind` is always <xref:System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage?displayProperty=nameWithType> and `machine` is always 0 (zero).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSignatureToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-624">Определяет токен сигнатуры.</span><span class="sxs-lookup"><span data-stu-id="15fc9-624">Defines a signature token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSignatureToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.SignatureToken GetSignatureToken (System.Reflection.Emit.SignatureHelper sigHelper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.SignatureToken GetSignatureToken(class System.Reflection.Emit.SignatureHelper sigHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignatureToken (sigHelper As SignatureHelper) As SignatureToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::SignatureToken GetSignatureToken(System::Reflection::Emit::SignatureHelper ^ sigHelper);" />
      <MemberSignature Language="F#" Value="member this.GetSignatureToken : System.Reflection.Emit.SignatureHelper -&gt; System.Reflection.Emit.SignatureToken" Usage="moduleBuilder.GetSignatureToken sigHelper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sigHelper" Type="System.Reflection.Emit.SignatureHelper" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sigHelper"><span data-ttu-id="15fc9-625">Сигнатура.</span><span class="sxs-lookup"><span data-stu-id="15fc9-625">The signature.</span></span></param>
        <summary><span data-ttu-id="15fc9-626">Определяет маркер для сигнатуры, определенной указанным объектом <see cref="T:System.Reflection.Emit.SignatureHelper" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-626">Defines a token for the signature that is defined by the specified <see cref="T:System.Reflection.Emit.SignatureHelper" />.</span></span></summary>
        <returns><span data-ttu-id="15fc9-627">Токен для определенной сигнатуры.</span><span class="sxs-lookup"><span data-stu-id="15fc9-627">A token for the defined signature.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-628">Этот метод определяет маркер метаданных для сигнатуры, `sigHelper`описываемой.</span><span class="sxs-lookup"><span data-stu-id="15fc9-628">This method defines a metadata token for the signature described by `sigHelper`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-629"><paramref name="sigHelper" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-629"><paramref name="sigHelper" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.SignatureToken GetSignatureToken (byte[] sigBytes, int sigLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.SignatureToken GetSignatureToken(unsigned int8[] sigBytes, int32 sigLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignatureToken (sigBytes As Byte(), sigLength As Integer) As SignatureToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::SignatureToken GetSignatureToken(cli::array &lt;System::Byte&gt; ^ sigBytes, int sigLength);" />
      <MemberSignature Language="F#" Value="member this.GetSignatureToken : byte[] * int -&gt; System.Reflection.Emit.SignatureToken" Usage="moduleBuilder.GetSignatureToken (sigBytes, sigLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sigBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="sigLength" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sigBytes"><span data-ttu-id="15fc9-630">Большой двоичный объект (BLOB) сигнатуры.</span><span class="sxs-lookup"><span data-stu-id="15fc9-630">The signature binary large object (BLOB).</span></span></param>
        <param name="sigLength"><span data-ttu-id="15fc9-631">Длина большого двоичного объекта сигнатуры.</span><span class="sxs-lookup"><span data-stu-id="15fc9-631">The length of the signature BLOB.</span></span></param>
        <summary><span data-ttu-id="15fc9-632">Определяет токен для сигнатуры, заданной массивом символов и длиной сигнатуры.</span><span class="sxs-lookup"><span data-stu-id="15fc9-632">Defines a token for the signature that has the specified character array and signature length.</span></span></summary>
        <returns><span data-ttu-id="15fc9-633">Токен для указанной сигнатуры.</span><span class="sxs-lookup"><span data-stu-id="15fc9-633">A token for the specified signature.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-634">Свойство <paramref name="sigBytes" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-634"><paramref name="sigBytes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignerCertificate">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignerCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignerCertificate () As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::X509Certificates::X509Certificate ^ GetSignerCertificate();" />
      <MemberSignature Language="F#" Value="override this.GetSignerCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate" Usage="moduleBuilder.GetSignerCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15fc9-635">Возвращает объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />, соответствующий сертификату, включаемому в подпись Authenticode сборки, которой принадлежит этот модуль.</span><span class="sxs-lookup"><span data-stu-id="15fc9-635">Returns an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to.</span></span> <span data-ttu-id="15fc9-636">Если сборка не имеет подписи Authenticode, возвращается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-636">If the assembly has not been Authenticode signed, <see langword="null" /> is returned.</span></span></summary>
        <returns><span data-ttu-id="15fc9-637">Сертификат или значение <see langword="null" />, если сборка, к которой относится этот модуль, не подписана с помощью Authenticode.</span><span class="sxs-lookup"><span data-stu-id="15fc9-637">A certificate, or <see langword="null" /> if the assembly to which this module belongs has not been Authenticode signed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.StringToken GetStringConstant (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.StringToken GetStringConstant(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringConstant (str As String) As StringToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::StringToken GetStringConstant(System::String ^ str);" />
      <MemberSignature Language="F#" Value="member this.GetStringConstant : string -&gt; System.Reflection.Emit.StringToken" Usage="moduleBuilder.GetStringConstant str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StringToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="15fc9-638">Строка, которую следует добавить в пул констант модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-638">The string to add to the module's constant pool.</span></span></param>
        <summary><span data-ttu-id="15fc9-639">Возвращается токен заданной строки из пула констант модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-639">Returns the token of the given string in the module's constant pool.</span></span></summary>
        <returns><span data-ttu-id="15fc9-640">Токен строки в пуле констант.</span><span class="sxs-lookup"><span data-stu-id="15fc9-640">The token of the string in the constant pool.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-641">Если `str` уже определен, будет возвращен существующий токен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-641">If `str` has already been defined, the existing token will be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-642"><paramref name="str" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-642"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymWriter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSymWriter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSymWriter () As ISymbolWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolWriter ^ GetSymWriter();" />
      <MemberSignature Language="F#" Value="member this.GetSymWriter : unit -&gt; System.Diagnostics.SymbolStore.ISymbolWriter" Usage="moduleBuilder.GetSymWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15fc9-643">Возвращается интерфейс записи символов, связанный с данным динамическим модулем.</span><span class="sxs-lookup"><span data-stu-id="15fc9-643">Returns the symbol writer associated with this dynamic module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-644">Интерфейс записи символов, связанный с данным динамическим модулем.</span><span class="sxs-lookup"><span data-stu-id="15fc9-644">The symbol writer associated with this dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-645">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-645">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-646">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-646">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-647">Получает именованный тип, определенный в модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-647">Gets the named type defined in the module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="moduleBuilder.GetType className" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="15fc9-648">Имя получаемого объекта <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-648">The name of the <see cref="T:System.Type" /> to get.</span></span></param>
        <summary><span data-ttu-id="15fc9-649">Получает именованный тип, определенный в модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-649">Gets the named type defined in the module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-650">Запрошенный тип, если тип определен в данном модуле, в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-650">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-651">Не используйте этот метод для создания типов массивов, типов указателей или типов ByRef.</span><span class="sxs-lookup"><span data-stu-id="15fc9-651">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="15fc9-652">Вместо этого используйте <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>методы <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> , и. <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-652">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-653">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-653">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-654">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-654">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-655">Длина параметра <paramref name="className" /> равна нулю или больше 1023.</span><span class="sxs-lookup"><span data-stu-id="15fc9-655">Length of <paramref name="className" /> is zero or is greater than 1023.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-656">Свойство <paramref name="className" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-656"><paramref name="className" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="15fc9-657">Запрошенный объект <see cref="T:System.Type" /> не является открытым и вызывающая сторона не имеет разрешения (<see cref="T:System.Security.Permissions.ReflectionPermission" />) на отражение неоткрытых объектов за пределами текущей сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-657">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="15fc9-658">Инициализатор класса вызывается и создает исключение.</span><span class="sxs-lookup"><span data-stu-id="15fc9-658">A class initializer is invoked and throws an exception.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="15fc9-659">При загрузке объекта <see cref="T:System.Type" /> произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="15fc9-659">An error is encountered while loading the <see cref="T:System.Type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool -&gt; Type" Usage="moduleBuilder.GetType (className, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="15fc9-660">Имя получаемого объекта <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-660">The name of the <see cref="T:System.Type" /> to get.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="15fc9-661">Если значение <see langword="true" />, при поиске не учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="15fc9-661">If <see langword="true" />, the search is case-insensitive.</span></span> <span data-ttu-id="15fc9-662">Если значение <see langword="false" />, при поиске учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="15fc9-662">If <see langword="false" />, the search is case-sensitive.</span></span></param>
        <summary><span data-ttu-id="15fc9-663">Получает определенный в модуле именованный тип (с возможностью игнорирования регистра символов в имени типа).</span><span class="sxs-lookup"><span data-stu-id="15fc9-663">Gets the named type defined in the module, optionally ignoring the case of the type name.</span></span></summary>
        <returns><span data-ttu-id="15fc9-664">Запрошенный тип, если тип определен в данном модуле, в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-664">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-665">Не используйте этот метод для создания типов массивов, типов указателей или типов ByRef.</span><span class="sxs-lookup"><span data-stu-id="15fc9-665">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="15fc9-666">Вместо этого используйте <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>методы <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> , и. <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-666">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-667">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-667">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-668">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-668">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-669">Длина параметра <paramref name="className" /> равна нулю или больше 1023.</span><span class="sxs-lookup"><span data-stu-id="15fc9-669">Length of <paramref name="className" /> is zero or is greater than 1023.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-670"><paramref name="className" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-670"><paramref name="className" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="15fc9-671">Запрошенный объект <see cref="T:System.Type" /> не является открытым и вызывающая сторона не имеет разрешения (<see cref="T:System.Security.Permissions.ReflectionPermission" />) на отражение неоткрытых объектов за пределами текущей сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-671">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="15fc9-672">Инициализатор класса вызывается и создает исключение.</span><span class="sxs-lookup"><span data-stu-id="15fc9-672">A class initializer is invoked and throws an exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="moduleBuilder.GetType (className, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="throwOnError" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="15fc9-673">Имя получаемого объекта <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-673">The name of the <see cref="T:System.Type" /> to get.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="15fc9-674">Значение <see langword="true" />, чтобы создать исключение, если тип не удается найти; значение <see langword="false" />, чтобы вернуть значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-674"><see langword="true" /> to throw an exception if the type cannot be found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="15fc9-675">Если значение <see langword="true" />, при поиске не учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="15fc9-675">If <see langword="true" />, the search is case-insensitive.</span></span> <span data-ttu-id="15fc9-676">Если значение <see langword="false" />, при поиске учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="15fc9-676">If <see langword="false" />, the search is case-sensitive.</span></span></param>
        <summary><span data-ttu-id="15fc9-677">Получает определенный в модуле именованный тип (с возможностью игнорирования регистра символов в имени типа).</span><span class="sxs-lookup"><span data-stu-id="15fc9-677">Gets the named type defined in the module, optionally ignoring the case of the type name.</span></span> <span data-ttu-id="15fc9-678">Позволяет указать, следует ли создавать исключение, если тип не будет найден.</span><span class="sxs-lookup"><span data-stu-id="15fc9-678">Optionally throws an exception if the type is not found.</span></span></summary>
        <returns><span data-ttu-id="15fc9-679">Заданный тип, если тип объявлен в данном модуле, в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-679">The specified type, if the type is declared in this module; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-680">`throwOnError` Параметр влияет только на то, что происходит, если тип не найден.</span><span class="sxs-lookup"><span data-stu-id="15fc9-680">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="15fc9-681">Он не влияет на другие исключения, которые могут возникать.</span><span class="sxs-lookup"><span data-stu-id="15fc9-681">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="15fc9-682">В частности, если тип найден, но не может быть загружен, <xref:System.TypeLoadException> может возникнуть исключение, даже `throwOnError` если `false`имеет значение.</span><span class="sxs-lookup"><span data-stu-id="15fc9-682">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 <span data-ttu-id="15fc9-683">Не используйте этот метод для создания типов массивов, типов указателей или типов ByRef.</span><span class="sxs-lookup"><span data-stu-id="15fc9-683">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="15fc9-684">Вместо этого используйте <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>методы <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> , и. <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-684">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-685">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-685">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-686">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-686">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-687">Длина параметра <paramref name="className" /> равна нулю или больше 1023.</span><span class="sxs-lookup"><span data-stu-id="15fc9-687">Length of <paramref name="className" /> is zero or is greater than 1023.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-688">Свойство <paramref name="className" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-688"><paramref name="className" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="15fc9-689">Запрошенный объект <see cref="T:System.Type" /> не является открытым и вызывающая сторона не имеет разрешения (<see cref="T:System.Security.Permissions.ReflectionPermission" />) на отражение неоткрытых объектов за пределами текущей сборки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-689">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="15fc9-690">Инициализатор класса вызывается и создает исключение.</span><span class="sxs-lookup"><span data-stu-id="15fc9-690">A class initializer is invoked and throws an exception.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="15fc9-691">Значение параметра <paramref name="throwOnError" /> равно <see langword="true" />, и указанный тип не был найден.</span><span class="sxs-lookup"><span data-stu-id="15fc9-691"><paramref name="throwOnError" /> is <see langword="true" /> and the specified type is not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="override this.GetTypes : unit -&gt; Type[]" Usage="moduleBuilder.GetTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15fc9-692">Возвращаются все классы, определенные в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-692">Returns all the classes defined within this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-693">Массив, содержащий типы, которые определены в модуле, отражаемом данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="15fc9-693">An array that contains the types defined within the module that is reflected by this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-694">`ReflectionTypeLoadException`— Это специальное исключение для загрузки класса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-694">`ReflectionTypeLoadException` is a special class load exception.</span></span> <span data-ttu-id="15fc9-695">`ReflectionTypeLoadException.Types` Свойство содержит массив классов, которые были определены в модуле и загружены.</span><span class="sxs-lookup"><span data-stu-id="15fc9-695">The `ReflectionTypeLoadException.Types` property contains the array of classes that were defined in the module and loaded.</span></span> <span data-ttu-id="15fc9-696">Этот массив может содержать некоторые значения NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-696">This array can contain some null values.</span></span> <span data-ttu-id="15fc9-697">`ReflectionTypeLoadException.LoaderExceptions` Свойство представляет собой массив исключений, представляющих исключения, которые были созданы загрузчиком классов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-697">The `ReflectionTypeLoadException.LoaderExceptions` property is an array of exceptions that represent the exceptions that were thrown by the class loader.</span></span> <span data-ttu-id="15fc9-698">Отверстия в массиве классов заканчиваются исключениями.</span><span class="sxs-lookup"><span data-stu-id="15fc9-698">The holes in the class array line up with the exceptions.</span></span>  
  
 <span data-ttu-id="15fc9-699">Например, если инициализаторы классов одного из классов создают исключение во время загрузки, то объект `TargetInvocationException` сохраняется в соответствующем элементе `LoaderExceptions` массива.</span><span class="sxs-lookup"><span data-stu-id="15fc9-699">For example, if the class initializers of one of the classes throws an exception while it is being loaded, a `TargetInvocationException` is stored in the corresponding element of the `LoaderExceptions` array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-700">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-700">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-701">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-701">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="15fc9-702">Невозможно загрузить один или несколько классов в модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-702">One or more classes in a module could not be loaded.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="15fc9-703">У вызывающего объекта отсутствует необходимое разрешение.</span><span class="sxs-lookup"><span data-stu-id="15fc9-703">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.Reflection.ReflectionTypeLoadException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-704">Возвращает маркер типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-704">Returns a type token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeToken GetTypeToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.TypeToken GetTypeToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeToken (name As String) As TypeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeToken GetTypeToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetTypeToken : string -&gt; System.Reflection.Emit.TypeToken" Usage="moduleBuilder.GetTypeToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-705">Полное имя класса, включая пространство имен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-705">The name of the class, including the namespace.</span></span></param>
        <summary><span data-ttu-id="15fc9-706">Возвращает токен, используемый для идентификации типа с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="15fc9-706">Returns the token used to identify the type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="15fc9-707">Токен, используемый для идентификации типа с указанным именем в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-707">The token used to identify the type with the specified name within this module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-708">Этот метод полезен для клиентов <xref:System.Reflection.Emit.MethodRental> класса, желающих напрямую изменить текст метода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-708">This method is useful for clients of the <xref:System.Reflection.Emit.MethodRental> class who want to directly modify the body of a method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-709"><paramref name="name" /> является пустой строкой ("").</span><span class="sxs-lookup"><span data-stu-id="15fc9-709"><paramref name="name" /> is the empty string ("").</span></span>  
  
<span data-ttu-id="15fc9-710">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-710">-or-</span></span> 
 <span data-ttu-id="15fc9-711"><paramref name="name" /> представляет тип <see langword="ByRef" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-711"><paramref name="name" /> represents a <see langword="ByRef" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-712"><paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-712"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="15fc9-713">-или-</span><span class="sxs-lookup"><span data-stu-id="15fc9-713">-or-</span></span> 
<span data-ttu-id="15fc9-714">Не удается найти тип, указанный с помощью <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-714">The type specified by <paramref name="name" /> could not be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-715">Не являющийся несохраняемым модуль ссылается на несохраняемый модуль.</span><span class="sxs-lookup"><span data-stu-id="15fc9-715">This is a non-transient module that references a transient module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeToken GetTypeToken (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.TypeToken GetTypeToken(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeToken GetTypeToken(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetTypeToken : Type -&gt; System.Reflection.Emit.TypeToken" Usage="moduleBuilder.GetTypeToken type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="15fc9-716">Объект типа, предоставляющий тип класса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-716">The type object that represents the class type.</span></span></param>
        <summary><span data-ttu-id="15fc9-717">Возвращает маркер, используемый для идентификации указанного типа в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-717">Returns the token used to identify the specified type within this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-718">Токен, используемый для идентификации указанного типа в данном модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-718">The token used to identify the given type within this module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-719">Токены используются в инструкциях промежуточного языка MSIL для обнаружения объектов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-719">Tokens are used in Microsoft intermediate language (MSIL) instructions to identify objects.</span></span> <span data-ttu-id="15fc9-720">Токены задаются относительно модуля, в котором они содержатся.</span><span class="sxs-lookup"><span data-stu-id="15fc9-720">Tokens are relative to the module in which they are contained.</span></span> <span data-ttu-id="15fc9-721">Например, значение маркера для `String` , скорее всего, будет отличаться от модуля к модулю.</span><span class="sxs-lookup"><span data-stu-id="15fc9-721">For example, the token value for `String` is likely to be different from module to module.</span></span> <span data-ttu-id="15fc9-722">При `GetTypeToken` вызове метода в модуль добавляется ссылка.</span><span class="sxs-lookup"><span data-stu-id="15fc9-722">When `GetTypeToken` is invoked, a reference is added to the module.</span></span> <span data-ttu-id="15fc9-723">Ссылка станет постоянной частью модуля; несколько вызовов с одним и тем же аргументом не имеют дополнительного влияния.</span><span class="sxs-lookup"><span data-stu-id="15fc9-723">The reference becomes a permanent part of the module; multiple calls with the same argument have no additional effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-724"><paramref name="type" /> относится к типу <see langword="ByRef" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-724"><paramref name="type" /> is a <see langword="ByRef" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-725">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-725"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-726">Не являющийся несохраняемым модуль ссылается на несохраняемый модуль.</span><span class="sxs-lookup"><span data-stu-id="15fc9-726">This is a non-transient module that references a transient module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="moduleBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="15fc9-727">Тип настраиваемого атрибута для проверки.</span><span class="sxs-lookup"><span data-stu-id="15fc9-727">The type of custom attribute to test for.</span></span></param>
        <param name="inherit"><span data-ttu-id="15fc9-728">Данный аргумент не учитывается для объектов этого типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-728">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="15fc9-729">Возвращает значение, обозначающее, применен ли к этому модулю указанный тип атрибутов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-729">Returns a value that indicates whether the specified attribute type has been applied to this module.</span></span></summary>
        <returns><span data-ttu-id="15fc9-730">Значение <see langword="true" />, если к этому модулю применен один или несколько экземпляров <paramref name="attributeType" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-730"><see langword="true" /> if one or more instances of <paramref name="attributeType" /> have been applied to this module; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-731"><paramref name="attributeType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-731"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-732"><paramref name="attributeType" /> не является объектом <see cref="T:System.Type" />, предоставляемым средой выполнения.</span><span class="sxs-lookup"><span data-stu-id="15fc9-732"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span></span> <span data-ttu-id="15fc9-733">Например, <paramref name="attributeType" /> является объектом <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-733">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsResource">
      <MemberSignature Language="C#" Value="public override bool IsResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsResource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsResource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsResource();" />
      <MemberSignature Language="F#" Value="override this.IsResource : unit -&gt; bool" Usage="moduleBuilder.IsResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15fc9-734">Возвращает значение, указывающее, является ли объект ресурсом.</span><span class="sxs-lookup"><span data-stu-id="15fc9-734">Gets a value indicating whether the object is a resource.</span></span></summary>
        <returns><span data-ttu-id="15fc9-735">Значение <see langword="true" />, если объект является ресурсом; в обратном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-735"><see langword="true" /> if the object is a resource; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransient">
      <MemberSignature Language="C#" Value="public bool IsTransient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsTransient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsTransient" />
      <MemberSignature Language="VB.NET" Value="Public Function IsTransient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsTransient();" />
      <MemberSignature Language="F#" Value="member this.IsTransient : unit -&gt; bool" Usage="moduleBuilder.IsTransient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15fc9-736">Возвращает значение, указывающее на то, что этот динамический модуль является несохраняемым.</span><span class="sxs-lookup"><span data-stu-id="15fc9-736">Returns a value that indicates whether this dynamic module is transient.</span></span></summary>
        <returns><span data-ttu-id="15fc9-737">Значение <see langword="true" />, если данный динамический модуль является несохраняемым; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-737"><see langword="true" /> if this dynamic module is transient; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MDStreamVersion">
      <MemberSignature Language="C#" Value="public override int MDStreamVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MDStreamVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.MDStreamVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MDStreamVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MDStreamVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MDStreamVersion : int" Usage="System.Reflection.Emit.ModuleBuilder.MDStreamVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15fc9-738">Возвращает версию потока метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-738">Gets the metadata stream version.</span></span></summary>
        <value><span data-ttu-id="15fc9-739">32-разрядное целое число, представляющее версию потока метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-739">A 32-bit integer representing the metadata stream version.</span></span> <span data-ttu-id="15fc9-740">Два байта старшего разряда представляют основной номер версии, а два байта младшего разряда — дополнительный.</span><span class="sxs-lookup"><span data-stu-id="15fc9-740">The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-741">Дополнительные сведения о заголовке метаданных см. в разделе "Partition II: Определение и семантика метаданных "в документации по Common Language Infrastructure (CLI).</span><span class="sxs-lookup"><span data-stu-id="15fc9-741">For more information on the metadata header, see "Partition II: Metadata Definition and Semantics" in the Common Language Infrastructure (CLI) documentation.</span></span> <span data-ttu-id="15fc9-742">Документация доступна в Интернете; см. статью [стандарты C# ECMA и Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) в MSDN и [стандарт ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на веб-сайте ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-742">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public override int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataToken : int" Usage="System.Reflection.Emit.ModuleBuilder.MetadataToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15fc9-743">Получает токен, который определяет текущий динамический модуль в метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-743">Gets a token that identifies the current dynamic module in metadata.</span></span></summary>
        <value><span data-ttu-id="15fc9-744">Целочисленный токен, который идентифицирует текущий модуль в метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-744">An integer token that identifies the current module in metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-745">Токены, полученные с помощью этого свойства, можно передать в API-интерфейс неуправляемого отражения.</span><span class="sxs-lookup"><span data-stu-id="15fc9-745">The tokens obtained using this property can be passed to the unmanaged Reflection API.</span></span> <span data-ttu-id="15fc9-746">Дополнительные сведения см. в разделе [API-интерфейс неуправляемого отражения](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span><span class="sxs-lookup"><span data-stu-id="15fc9-746">For more information, see [Unmanaged Reflection API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-747">Сведения о маркерах метаданных можно найти в документации по Common Language Infrastructure (CLI), особенно в разделе II: Определение и семантика метаданных ".</span><span class="sxs-lookup"><span data-stu-id="15fc9-747">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="15fc9-748">Документация доступна в Интернете; см. статью [стандарты C# ECMA и Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) в MSDN и [стандарт ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на веб-сайте ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-748">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleVersionId">
      <MemberSignature Language="C#" Value="public override Guid ModuleVersionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ModuleVersionId" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.ModuleVersionId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ModuleVersionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid ModuleVersionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ModuleVersionId : Guid" Usage="System.Reflection.Emit.ModuleBuilder.ModuleVersionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15fc9-749">Возвращает универсальный уникальный идентификатор (UUID), по которому можно различить две версии модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-749">Gets a universally unique identifier (UUID) that can be used to distinguish between two versions of a module.</span></span></summary>
        <value><span data-ttu-id="15fc9-750">Значение свойства <see cref="T:System.Guid" />, по которому можно различить две версии модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-750">A <see cref="T:System.Guid" /> that can be used to distinguish between two versions of a module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-751">В неуправляемых метаданных идентификатор GUID, возвращаемый <xref:System.Reflection.Module.ModuleVersionId%2A> свойством `mvid`, называется, и хранится в куче GUID.</span><span class="sxs-lookup"><span data-stu-id="15fc9-751">In unmanaged metadata, the GUID returned by the <xref:System.Reflection.Module.ModuleVersionId%2A> property is referred to as the `mvid`, and is stored in the GUID heap.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-752">Дополнительные сведения о метаданных можно найти в документации по Common Language Infrastructure (CLI), особенно в разделе "Partition II: Определение и семантика метаданных ".</span><span class="sxs-lookup"><span data-stu-id="15fc9-752">More information about metadata can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="15fc9-753">Документация доступна в Интернете; см. статью [стандарты C# ECMA и Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) в MSDN и [стандарт ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на веб-сайте ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-753">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.ModuleBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15fc9-754">Строка, указывающая, что это модуль, расположенный в памяти.</span><span class="sxs-lookup"><span data-stu-id="15fc9-754">A string that indicates that this is an in-memory module.</span></span></summary>
        <value><span data-ttu-id="15fc9-755">Текст, указывающий, что это модуль, расположенный в памяти.</span><span class="sxs-lookup"><span data-stu-id="15fc9-755">Text that indicates that this is an in-memory module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-756">Имя динамического модуля не может быть получено, пока модуль не будет сохранен и перезагружен с диска.</span><span class="sxs-lookup"><span data-stu-id="15fc9-756">The name of a dynamic module cannot be obtained until the module has been saved and reloaded from disk.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo ResolveField (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo ResolveField(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveField (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ ResolveField(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveField : int * Type[] * Type[] -&gt; System.Reflection.FieldInfo" Usage="moduleBuilder.ResolveField (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="15fc9-757">токен метаданных, определяющий поле в модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-757">A metadata token that identifies a field in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="15fc9-758">Массив объектов <see cref="T:System.Type" />, представляющих аргументы типа для данного типа, если токен находится в области, либо значение <see langword="null" />, если этот тип не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-758">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="15fc9-759">Массив объектов <see cref="T:System.Type" />, представляющих аргументы типа для метода, если токен находится в области, либо значение <see langword="null" />, если этот метод не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-759">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="15fc9-760">Возвращает поле, определенное заданным токеном метаданных, в контексте, определенном заданными параметрами универсального типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-760">Returns the field identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="15fc9-761">Объект <see cref="T:System.Reflection.FieldInfo" />, представляющий поле, которое определяется заданным токеном метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-761">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-762">Используйте метод для типа, где `metadataToken` находится в области, чтобы получить массив аргументов универсального типа для `genericTypeArguments`. <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-762">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="15fc9-763">Используйте метод в методе, где `metadataToken` находится в области, чтобы получить массив аргументов универсального типа для `genericTypeArguments`. <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-763">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="15fc9-764">Всегда можно обеспечить безопасность этих аргументов, даже если они не требуются.</span><span class="sxs-lookup"><span data-stu-id="15fc9-764">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-765">Сведения о маркерах метаданных можно найти в документации по Common Language Infrastructure (CLI), особенно в разделе II: Определение и семантика метаданных ".</span><span class="sxs-lookup"><span data-stu-id="15fc9-765">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="15fc9-766">Документация доступна в Интернете; см. статью [стандарты C# ECMA и Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) в MSDN и [стандарт ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на веб-сайте ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-766">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="15fc9-767">Для кода, демонстрирующий разрешение маркера с помощью универсального контекста (то есть параметров универсального типа универсального типа и/или универсального метода, в который внедрен маркер), см <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> . метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-767">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-768">Параметр <paramref name="metadataToken" /> не является маркером для поля в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-768"><paramref name="metadataToken" /> is not a token for a field in the scope of the current module.</span></span>  
  
<span data-ttu-id="15fc9-769">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-769">-or-</span></span> 
 <span data-ttu-id="15fc9-770">Параметр <paramref name="metadataToken" /> определяет поле, родительская спецификация <see langword="TypeSpec" /> которого имеет подпись, содержащую сведения о типе элемента <see langword="var" /> (параметр типа для универсального типа) или <see langword="mvar" /> (параметр типа для универсального метода), а для метода <paramref name="genericTypeArguments" /> или <paramref name="genericMethodArguments" /> не предоставлены необходимые аргументы типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-770"><paramref name="metadataToken" /> identifies a field whose parent <see langword="TypeSpec" /> has a signature containing element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15fc9-771">Параметр <paramref name="metadataToken" /> не является допустимым маркером для поля в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-771"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo ResolveMember (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo ResolveMember(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveMember (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MemberInfo ^ ResolveMember(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveMember : int * Type[] * Type[] -&gt; System.Reflection.MemberInfo" Usage="moduleBuilder.ResolveMember (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="15fc9-772">токен метаданных, определяющий тип или член в модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-772">A metadata token that identifies a type or member in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="15fc9-773">Массив объектов <see cref="T:System.Type" />, представляющих аргументы типа для данного типа, если токен находится в области, либо значение <see langword="null" />, если этот тип не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-773">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="15fc9-774">Массив объектов <see cref="T:System.Type" />, представляющих аргументы типа для метода, если токен находится в области, либо значение <see langword="null" />, если этот метод не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-774">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="15fc9-775">Возвращает тип или член, которые определены заданным токеном метаданных, в контексте, определенном заданными параметрами универсального типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-775">Returns the type or member identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="15fc9-776">Объект <see cref="T:System.Reflection.MemberInfo" />, представляющий тип члена, который определяется заданным токеном метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-776">A <see cref="T:System.Reflection.MemberInfo" /> object representing the type or member that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-777">Используйте метод для типа, где `metadataToken` находится в области, чтобы получить массив аргументов универсального типа для `genericTypeArguments`. <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-777">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="15fc9-778">Используйте метод в методе, где `metadataToken` находится в области, чтобы получить массив аргументов универсального типа для `genericTypeArguments`. <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-778">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="15fc9-779">Всегда можно обеспечить безопасность этих аргументов, даже если они не требуются.</span><span class="sxs-lookup"><span data-stu-id="15fc9-779">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-780">Сведения о маркерах метаданных можно найти в документации по Common Language Infrastructure (CLI), особенно в разделе II: Определение и семантика метаданных ".</span><span class="sxs-lookup"><span data-stu-id="15fc9-780">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="15fc9-781">Документация доступна в Интернете; см. статью [стандарты C# ECMA и Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) в MSDN и [стандарт ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на веб-сайте ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-781">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="15fc9-782">Для кода, демонстрирующий разрешение маркера с помощью универсального контекста (то есть параметров универсального типа универсального типа и/или универсального метода, в который внедрен маркер), см <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> . метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-782">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-783">Параметр <paramref name="metadataToken" /> не является маркером для типа или члена в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-783"><paramref name="metadataToken" /> is not a token for a type or member in the scope of the current module.</span></span>  
  
<span data-ttu-id="15fc9-784">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-784">-or-</span></span> 
 <span data-ttu-id="15fc9-785">Параметр <paramref name="metadataToken" /> является объектом <see langword="MethodSpec" /> или <see langword="TypeSpec" />, подпись которого содержит сведения о типе элемента <see langword="var" /> (параметр типа для универсального типа) или <see langword="mvar" /> (параметр типа для универсального метода), а для метода <paramref name="genericTypeArguments" /> или <paramref name="genericMethodArguments" /> не предоставлены необходимые аргументы типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-785"><paramref name="metadataToken" /> is a <see langword="MethodSpec" /> or <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span>  
  
<span data-ttu-id="15fc9-786">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-786">-or-</span></span> 
 <span data-ttu-id="15fc9-787">Параметр <paramref name="metadataToken" /> определяет свойство или событие.</span><span class="sxs-lookup"><span data-stu-id="15fc9-787"><paramref name="metadataToken" /> identifies a property or event.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15fc9-788">Параметр <paramref name="metadataToken" /> не является допустимым маркером для поля в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-788"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodBase ResolveMethod (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodBase ResolveMethod(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveMethod (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodBase ^ ResolveMethod(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveMethod : int * Type[] * Type[] -&gt; System.Reflection.MethodBase" Usage="moduleBuilder.ResolveMethod (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="15fc9-789">маркер метаданных, определяющий метод или конструктор в модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-789">A metadata token that identifies a method or constructor in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="15fc9-790">Массив объектов <see cref="T:System.Type" />, представляющих аргументы типа для данного типа, если токен находится в области, либо значение <see langword="null" />, если этот тип не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-790">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="15fc9-791">Массив объектов <see cref="T:System.Type" />, представляющих аргументы типа для метода, если токен находится в области, либо значение <see langword="null" />, если этот метод не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-791">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="15fc9-792">Возвращает метод или конструктор, определенный заданным маркером метаданных, в контексте, определенном заданными параметрами универсального типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-792">Returns the method or constructor identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="15fc9-793">Объект <see cref="T:System.Reflection.MethodBase" />, представляющий метод, определенный заданным токеном метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-793">A <see cref="T:System.Reflection.MethodBase" /> object representing the method that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-794">Используйте метод для типа, где `metadataToken` находится в области, чтобы получить массив аргументов универсального типа для `genericTypeArguments`. <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-794">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="15fc9-795">Используйте метод в методе, где `metadataToken` находится в области, чтобы получить массив аргументов универсального типа для `genericMethodArguments`. <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-795">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericMethodArguments`.</span></span> <span data-ttu-id="15fc9-796">Всегда можно обеспечить безопасность этих аргументов, даже если они не требуются.</span><span class="sxs-lookup"><span data-stu-id="15fc9-796">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-797">Сведения о маркерах метаданных можно найти в документации по Common Language Infrastructure (CLI), особенно в разделе II: Определение и семантика метаданных ".</span><span class="sxs-lookup"><span data-stu-id="15fc9-797">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="15fc9-798">Документация доступна в Интернете; см. статью [стандарты C# ECMA и Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) в MSDN и [стандарт ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на веб-сайте ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-798">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="15fc9-799">Для кода, демонстрирующий разрешение маркера с помощью универсального контекста (то есть параметров универсального типа универсального типа и/или универсального метода, в который внедрен маркер), см <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> . метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-799">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-800">Параметр <paramref name="metadataToken" /> не является маркером для метода или конструктора в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-800"><paramref name="metadataToken" /> is not a token for a method or constructor in the scope of the current module.</span></span>  
  
<span data-ttu-id="15fc9-801">- или -</span><span class="sxs-lookup"><span data-stu-id="15fc9-801">-or-</span></span> 
 <span data-ttu-id="15fc9-802">Параметр <paramref name="metadataToken" /> является объектом <see langword="MethodSpec" />, сигнатура которого содержит сведения о типе элемента <see langword="var" /> (параметр типа для универсального типа) или <see langword="mvar" /> (параметр типа для универсального метода), а для <paramref name="genericTypeArguments" />, <paramref name="genericMethodArguments" /> или обоих параметров не предоставлены необходимые аргументы типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-802"><paramref name="metadataToken" /> is a <see langword="MethodSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15fc9-803">Параметр <paramref name="metadataToken" /> не является допустимым маркером для поля в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-803"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveSignature">
      <MemberSignature Language="C#" Value="public override byte[] ResolveSignature (int metadataToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] ResolveSignature(int32 metadataToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveSignature (metadataToken As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ ResolveSignature(int metadataToken);" />
      <MemberSignature Language="F#" Value="override this.ResolveSignature : int -&gt; byte[]" Usage="moduleBuilder.ResolveSignature metadataToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="15fc9-804">токен метаданных, определяющий подпись в модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-804">A metadata token that identifies a signature in the module.</span></span></param>
        <summary><span data-ttu-id="15fc9-805">Возвращает большой двоичный объект подписи, определенный токеном метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-805">Returns the signature blob identified by a metadata token.</span></span></summary>
        <returns><span data-ttu-id="15fc9-806">Массив байтов, представляющий большой двоичный объект подписи.</span><span class="sxs-lookup"><span data-stu-id="15fc9-806">An array of bytes representing the signature blob.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-807">Сведения о маркерах и сигнатурах метаданных можно найти в документации по Common Language Infrastructure (CLI), особенно в разделе "Partition II: Определение и семантика метаданных ".</span><span class="sxs-lookup"><span data-stu-id="15fc9-807">Information about metadata tokens and signatures can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="15fc9-808">Документация доступна в Интернете; см. статью [стандарты C# ECMA и Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) в MSDN и [стандарт ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на веб-сайте ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-808">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-809">Параметр <paramref name="metadataToken" /> не является допустимым объектом <see langword="MemberRef" />, <see langword="MethodDef" />, <see langword="TypeSpec" />, сигнатурой или маркером <see langword="FieldDef" /> в области видимости текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-809"><paramref name="metadataToken" /> is not a valid <see langword="MemberRef" />, <see langword="MethodDef" />, <see langword="TypeSpec" />, signature, or <see langword="FieldDef" /> token in the scope of the current module.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15fc9-810">Параметр <paramref name="metadataToken" /> не является допустимым маркером для поля в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-810"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveString">
      <MemberSignature Language="C#" Value="public override string ResolveString (int metadataToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResolveString(int32 metadataToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveString (metadataToken As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResolveString(int metadataToken);" />
      <MemberSignature Language="F#" Value="override this.ResolveString : int -&gt; string" Usage="moduleBuilder.ResolveString metadataToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="15fc9-811">маркер метаданных, определяющий строку в куче строк модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-811">A metadata token that identifies a string in the string heap of the module.</span></span></param>
        <summary><span data-ttu-id="15fc9-812">Возвращает строку, определенную заданным маркером метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-812">Returns the string identified by the specified metadata token.</span></span></summary>
        <returns><span data-ttu-id="15fc9-813">Объект <see cref="T:System.String" />, содержащий строковое значение из кучи строк метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-813">A <see cref="T:System.String" /> containing a string value from the metadata string heap.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-814">Сведения о маркерах метаданных можно найти в документации по Common Language Infrastructure (CLI), особенно в разделе II: Определение и семантика метаданных ".</span><span class="sxs-lookup"><span data-stu-id="15fc9-814">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="15fc9-815">Документация доступна в Интернете; см. статью [стандарты C# ECMA и Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) в MSDN и [стандарт ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на веб-сайте ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-815">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-816">Параметр <paramref name="metadataToken" /> не является маркером для строки в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-816"><paramref name="metadataToken" /> is not a token for a string in the scope of the current module.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15fc9-817">Параметр <paramref name="metadataToken" /> не является допустимым маркером для поля в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-817"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public override Type ResolveType (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type ResolveType(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveType (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ ResolveType(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveType : int * Type[] * Type[] -&gt; Type" Usage="moduleBuilder.ResolveType (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="15fc9-818">Маркер метаданных, который определяет тип в модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-818">A metadata token that identifies a type in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="15fc9-819">Массив объектов <see cref="T:System.Type" />, представляющих аргументы типа для данного типа, если токен находится в области, либо значение <see langword="null" />, если этот тип не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-819">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="15fc9-820">Массив объектов <see cref="T:System.Type" />, представляющих аргументы типа для метода, если токен находится в области, либо значение <see langword="null" />, если этот метод не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-820">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="15fc9-821">Возвращает тип, определенный заданным токеном метаданных, в контексте, определенном заданными параметрами универсального типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-821">Returns the type identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="15fc9-822">Объект <see cref="T:System.Type" />, представляющий тип, который определяется заданным токеном метаданных.</span><span class="sxs-lookup"><span data-stu-id="15fc9-822">A <see cref="T:System.Type" /> object representing the type that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-823">Используйте метод для типа, где `metadataToken` находится в области, чтобы получить массив аргументов универсального типа для `genericTypeArguments`. <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-823">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="15fc9-824">Используйте метод в методе, где `metadataToken` находится в области, чтобы получить массив аргументов универсального типа для `genericTypeArguments`. <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="15fc9-824">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="15fc9-825">Всегда можно обеспечить безопасность этих аргументов, даже если они не требуются.</span><span class="sxs-lookup"><span data-stu-id="15fc9-825">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-826">Сведения о маркерах метаданных можно найти в документации по Common Language Infrastructure (CLI), особенно в разделе II: Определение и семантика метаданных ".</span><span class="sxs-lookup"><span data-stu-id="15fc9-826">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="15fc9-827">Документация доступна в Интернете; см. статью [стандарты C# ECMA и Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) в MSDN и [стандарт ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на веб-сайте ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-827">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="15fc9-828">Для кода, демонстрирующий разрешение маркера с помощью универсального контекста (то есть параметров универсального типа универсального типа и/или универсального метода, в который внедрен маркер), см <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> . метод.</span><span class="sxs-lookup"><span data-stu-id="15fc9-828">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15fc9-829">Параметр <paramref name="metadataToken" /> не является маркером для типа в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-829"><paramref name="metadataToken" /> is not a token for a type in the scope of the current module.</span></span>  
  
<span data-ttu-id="15fc9-830">-или-</span><span class="sxs-lookup"><span data-stu-id="15fc9-830">-or-</span></span> 
 <span data-ttu-id="15fc9-831">Параметр <paramref name="metadataToken" /> является объектом <see langword="TypeSpec" />, сигнатура которого содержит сведения о типе элемента <see langword="var" /> (параметр типа для универсального типа) или <see langword="mvar" /> (параметр типа для универсального метода), а для <paramref name="genericTypeArguments" />, <paramref name="genericMethodArguments" /> или обоих параметров не предоставлены необходимые аргументы типа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-831"><paramref name="metadataToken" /> is a <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15fc9-832">Параметр <paramref name="metadataToken" /> не является допустимым маркером для поля в области текущего модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-832"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public override string ScopeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ScopeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string" Usage="System.Reflection.Emit.ModuleBuilder.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15fc9-833">Получает строку, представляющую имя динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-833">Gets a string that represents the name of the dynamic module.</span></span></summary>
        <value><span data-ttu-id="15fc9-834">Имя динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="15fc9-834">The name of the dynamic module.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15fc9-835">Применяет к модулю настраиваемый атрибут.</span><span class="sxs-lookup"><span data-stu-id="15fc9-835">Applies a custom attribute to this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="moduleBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="15fc9-836">Экземпляр вспомогательного класса для определения применяемого пользовательского атрибута.</span><span class="sxs-lookup"><span data-stu-id="15fc9-836">An instance of a helper class that specifies the custom attribute to apply.</span></span></param>
        <summary><span data-ttu-id="15fc9-837">Применяет к модулю настраиваемый атрибут с помощью построителя настраиваемых атрибутов.</span><span class="sxs-lookup"><span data-stu-id="15fc9-837">Applies a custom attribute to this module by using a custom attribute builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-838">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-838">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-839">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-839">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-840">Свойство <paramref name="customBuilder" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-840"><paramref name="customBuilder" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="moduleBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="15fc9-841">Конструктор настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="15fc9-841">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="15fc9-842">Большой двоичный объект байтов, представляющий атрибут.</span><span class="sxs-lookup"><span data-stu-id="15fc9-842">A byte BLOB representing the attribute.</span></span></param>
        <summary><span data-ttu-id="15fc9-843">Устанавливает пользовательский атрибут для этого модуля с помощью указанного большого двоичного объекта (BLOB), представляющего атрибут.</span><span class="sxs-lookup"><span data-stu-id="15fc9-843">Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-844">Дополнительные сведения о форматировании `binaryAttribute`см. в документации по Common Language Infrastructure (CLI), особенно в разделе "Partition II: Определение и семантика метаданных ".</span><span class="sxs-lookup"><span data-stu-id="15fc9-844">For more information about how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="15fc9-845">Документация доступна в Интернете; см. страницы [ECMAC# и стандарты Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) на сайте MSDN и [Стандарт ECMA-335 — общеязыковая инфраструктура (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на международном веб-сайте организации ECMA.</span><span class="sxs-lookup"><span data-stu-id="15fc9-845">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-846">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-846">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-847">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-847">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-848">Значение параметра <paramref name="con" /> или <paramref name="binaryAttribute" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-848"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSymCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetSymCustomAttribute (string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSymCustomAttribute(string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSymCustomAttribute (name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSymCustomAttribute(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetSymCustomAttribute : string * byte[] -&gt; unit" Usage="moduleBuilder.SetSymCustomAttribute (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15fc9-849">Имя пользовательского атрибута</span><span class="sxs-lookup"><span data-stu-id="15fc9-849">The name of the custom attribute</span></span></param>
        <param name="data"><span data-ttu-id="15fc9-850">Закрытый большой двоичный объект (BLOB) байтов, представляющий значение настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="15fc9-850">An opaque binary large object (BLOB) of bytes that represents the value of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="15fc9-851">Этот метод не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="15fc9-851">This method does nothing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-852">Этот метод не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="15fc9-852">This method does nothing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-853">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-853">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-854">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-854">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-855">Свойство <paramref name="url" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-855"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetUserEntryPoint">
      <MemberSignature Language="C#" Value="public void SetUserEntryPoint (System.Reflection.MethodInfo entryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUserEntryPoint(class System.Reflection.MethodInfo entryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserEntryPoint (entryPoint As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserEntryPoint(System::Reflection::MethodInfo ^ entryPoint);" />
      <MemberSignature Language="F#" Value="member this.SetUserEntryPoint : System.Reflection.MethodInfo -&gt; unit" Usage="moduleBuilder.SetUserEntryPoint entryPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryPoint" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="entryPoint"><span data-ttu-id="15fc9-856">Пользовательская точка входа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-856">The user entry point.</span></span></param>
        <summary><span data-ttu-id="15fc9-857">Устанавливает пользовательскую точка входа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-857">Sets the user entry point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-858">Компилятор может создать заглушку запуска перед вызовом пользователя Main.</span><span class="sxs-lookup"><span data-stu-id="15fc9-858">The compiler might generate a startup stub before calling user main.</span></span> <span data-ttu-id="15fc9-859">Заглушка запуска будет точкой входа.</span><span class="sxs-lookup"><span data-stu-id="15fc9-859">The startup stub will be the entry point.</span></span> <span data-ttu-id="15fc9-860">Хотя основным пользователем является точка входа пользователя, поэтому отладчик не будет выполнять шаг с заходом в точку входа компилятора.</span><span class="sxs-lookup"><span data-stu-id="15fc9-860">While the user main will be the user entry point so that debugger will not step into the compiler entry point.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15fc9-861">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], этот член больше не требует наличия <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> флага.</span><span class="sxs-lookup"><span data-stu-id="15fc9-861">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="15fc9-862">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Для применения этих функциональных возможностей приложение должно использовать [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздние версии.</span><span class="sxs-lookup"><span data-stu-id="15fc9-862">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15fc9-863">Свойство <paramref name="entryPoint" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-863"><paramref name="entryPoint" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15fc9-864">Этот метод вызывается для динамического модуля, не являющегося отладочным.</span><span class="sxs-lookup"><span data-stu-id="15fc9-864">This method is called on a dynamic module that is not a debug module.</span></span>  
  
<span data-ttu-id="15fc9-865">-или-</span><span class="sxs-lookup"><span data-stu-id="15fc9-865">-or-</span></span> 
 <span data-ttu-id="15fc9-866">точка входа, заданная параметром <paramref name="entryPoint" />, не содержится в данном динамическом модуле.</span><span class="sxs-lookup"><span data-stu-id="15fc9-866"><paramref name="entryPoint" /> is not contained in this dynamic module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ModuleBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ModuleBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="15fc9-867">Зарезервировано для будущего использования.</span><span class="sxs-lookup"><span data-stu-id="15fc9-867">Reserved for future use.</span></span> <span data-ttu-id="15fc9-868">Должно быть равным IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-868">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="15fc9-869">Переданный массив имен, которые необходимо сопоставить.</span><span class="sxs-lookup"><span data-stu-id="15fc9-869">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="15fc9-870">Количество сопоставляемых имен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-870">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="15fc9-871">Контекст языкового стандарта для интерпретации имен.</span><span class="sxs-lookup"><span data-stu-id="15fc9-871">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="15fc9-872">Массив, зарезервированный вызывающим объектом, куда помещаются идентификаторы, соответствующие именам.</span><span class="sxs-lookup"><span data-stu-id="15fc9-872">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="15fc9-873">Описание этого члена см. в разделе <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-873">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-874">Этот метод предназначен для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-874">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="15fc9-875">Дополнительные сведения о `IDispatch::GetIDsOfNames`см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="15fc9-875">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="15fc9-876">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-876">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="15fc9-877">Он может использоваться, только если экземпляр <xref:System.Reflection.Emit.ModuleBuilder> приведен к типу интерфейса <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-877">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="15fc9-878">Этот метод вызывается с поздним связыванием с помощью COM-интерфейса <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-878">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ModuleBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ModuleBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="15fc9-879">Возвращаемые сведения о типе.</span><span class="sxs-lookup"><span data-stu-id="15fc9-879">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="15fc9-880">Идентификатор языкового стандарта для сведений о типе.</span><span class="sxs-lookup"><span data-stu-id="15fc9-880">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="15fc9-881">Указатель на объект с запрошенными сведениями о типе.</span><span class="sxs-lookup"><span data-stu-id="15fc9-881">A pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="15fc9-882">Описание этого члена см. в разделе <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-882">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-883">Этот метод предназначен для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-883">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="15fc9-884">Дополнительные сведения о `IDispatch::GetTypeInfo`см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="15fc9-884">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="15fc9-885">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-885">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="15fc9-886">Он может использоваться, только если экземпляр <xref:System.Reflection.Emit.ModuleBuilder> приведен к типу интерфейса <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-886">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="15fc9-887">Этот метод вызывается с поздним связыванием с помощью COM-интерфейса <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-887">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ModuleBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ModuleBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="15fc9-888">Расположение, по которому записывается число предоставляемых объектом интерфейсов, предназначенных для получения сведений о типе.</span><span class="sxs-lookup"><span data-stu-id="15fc9-888">The location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="15fc9-889">Описание этого члена см. в разделе <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-889">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-890">Этот метод предназначен для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-890">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="15fc9-891">Дополнительные сведения о `IDispatch::GetTypeInfoCount`см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="15fc9-891">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="15fc9-892">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-892">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="15fc9-893">Он может использоваться, только если экземпляр <xref:System.Reflection.Emit.ModuleBuilder> приведен к типу интерфейса <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-893">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="15fc9-894">Этот метод вызывается с поздним связыванием с помощью COM-интерфейса <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-894">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ModuleBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ModuleBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="15fc9-895">Идентификатор элемента.</span><span class="sxs-lookup"><span data-stu-id="15fc9-895">The member ID.</span></span></param>
        <param name="riid"><span data-ttu-id="15fc9-896">Зарезервировано для будущего использования.</span><span class="sxs-lookup"><span data-stu-id="15fc9-896">Reserved for future use.</span></span> <span data-ttu-id="15fc9-897">Должно быть равным IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="15fc9-897">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="15fc9-898">Контекст языкового стандарта, в котором следует интерпретировать аргументы.</span><span class="sxs-lookup"><span data-stu-id="15fc9-898">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="15fc9-899">Флаги, описывающие контекст вызова.</span><span class="sxs-lookup"><span data-stu-id="15fc9-899">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="15fc9-900">Указатель на структуру, содержащую массив аргументов, массив DISPID для именованных аргументов, а также счетчики количества элементов в массивах.</span><span class="sxs-lookup"><span data-stu-id="15fc9-900">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="15fc9-901">Указатель, по которому будет сохранен результат.</span><span class="sxs-lookup"><span data-stu-id="15fc9-901">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="15fc9-902">Указатель на структуру, содержащую сведения об исключении.</span><span class="sxs-lookup"><span data-stu-id="15fc9-902">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="15fc9-903">Индекс первого аргумента, вызвавшего ошибку.</span><span class="sxs-lookup"><span data-stu-id="15fc9-903">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="15fc9-904">Описание этого члена см. в разделе <see cref="M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="15fc9-904">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15fc9-905">Этот метод предназначен для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="15fc9-905">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="15fc9-906">Дополнительные сведения о `IDispatch::Invoke`см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="15fc9-906">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="15fc9-907">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="15fc9-907">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="15fc9-908">Он может использоваться, только если экземпляр <xref:System.Reflection.Emit.ModuleBuilder> приведен к типу интерфейса <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-908">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="15fc9-909">Этот метод вызывается с поздним связыванием с помощью COM-интерфейса <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="15fc9-909">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
