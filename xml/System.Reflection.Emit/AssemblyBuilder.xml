<Type Name="AssemblyBuilder" FullName="System.Reflection.Emit.AssemblyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="226e7b63585859719651db022ec5436c6fd9641b" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75169467" /></Metadata><TypeSignature Language="C#" Value="public sealed class AssemblyBuilder : System.Reflection.Assembly, System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AssemblyBuilder extends System.Reflection.Assembly implements class System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyBuilder&#xA;Inherits Assembly&#xA;Implements _AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder sealed : System::Reflection::Assembly, System::Runtime::InteropServices::_AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class&#xA;    inherit Assembly&#xA;    interface _AssemblyBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Assembly</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="047cb-101">Определяет и представляет динамическую сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-101">Defines and represents a dynamic assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-102">Динамическая сборка — это сборка, созданная с помощью API-интерфейсов отражательной эмиссии.</span><span class="sxs-lookup"><span data-stu-id="047cb-102">A dynamic assembly is an assembly that is created using the Reflection Emit APIs.</span></span> <span data-ttu-id="047cb-103">Динамические модули в сборке сохраняются при сохранении динамической сборки с помощью метода <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-103">The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method.</span></span> <span data-ttu-id="047cb-104">Чтобы создать исполняемый файл, необходимо вызвать метод <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A>, чтобы указать метод, который является точкой входа в сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-104">To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly.</span></span> <span data-ttu-id="047cb-105">По умолчанию сборки сохраняются в виде библиотек DLL, если только метод <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> не запрашивает создание консольного приложения или приложения на базе Windows.</span><span class="sxs-lookup"><span data-stu-id="047cb-105">Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.</span></span>  
  
 <span data-ttu-id="047cb-106">Если динамическая сборка содержит более одного динамического модуля, имя файла манифеста сборки должно совпадать с именем модуля, указанным в качестве первого аргумента метода <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-106">If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method.</span></span>  
  
 <span data-ttu-id="047cb-107">Некоторые методы базового <xref:System.Reflection.Assembly> класса, такие как `GetModules` и `GetLoadedModules`, будут работать неправильно при вызове из объектов <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="047cb-107">Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects.</span></span> <span data-ttu-id="047cb-108">Вы можете загрузить определенную динамическую сборку и вызвать методы для загруженной сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-108">You can load the defined dynamic assembly and call the methods on the loaded assembly.</span></span> <span data-ttu-id="047cb-109">Например, чтобы убедиться, что модули ресурсов включены в список возвращенных модулей, вызовите `GetModules` для загруженного объекта <xref:System.Reflection.Assembly>.</span><span class="sxs-lookup"><span data-stu-id="047cb-109">For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object.</span></span>  
  
 <span data-ttu-id="047cb-110">Подписывание динамической сборки с помощью <xref:System.Reflection.AssemblyName.KeyPair%2A> не действует до тех пор, пока сборка не будет сохранена на диск.</span><span class="sxs-lookup"><span data-stu-id="047cb-110">The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk.</span></span> <span data-ttu-id="047cb-111">Поэтому строгие имена не будут работать с временными динамическими сборками.</span><span class="sxs-lookup"><span data-stu-id="047cb-111">So, strong names will not work with transient dynamic assemblies.</span></span>  
  
 <span data-ttu-id="047cb-112">Чтобы получить объект <xref:System.Reflection.Emit.AssemblyBuilder>, используйте метод <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-112">To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
## <a name="reflection-emit-dynamic-assembly-scenarios"></a><span data-ttu-id="047cb-113">Сценарии динамической сборки порождаемого отражения</span><span class="sxs-lookup"><span data-stu-id="047cb-113">Reflection emit dynamic assembly scenarios</span></span>  
 <span data-ttu-id="047cb-114">Ниже приведены некоторые моменты, которые следует учитывать при использовании класса <xref:System.Reflection.Emit.AssemblyBuilder> для создания динамических сборок.</span><span class="sxs-lookup"><span data-stu-id="047cb-114">The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies.</span></span>  
  
### <a name="dynamic-modules"></a><span data-ttu-id="047cb-115">Динамические модули</span><span class="sxs-lookup"><span data-stu-id="047cb-115">Dynamic modules</span></span>  
 <span data-ttu-id="047cb-116">Отражательная эмиссия поддерживает создание динамических модулей, определенных в динамических сборках.</span><span class="sxs-lookup"><span data-stu-id="047cb-116">Reflection emit supports the creation of dynamic modules defined in dynamic assemblies.</span></span> <span data-ttu-id="047cb-117">Динамический модуль, созданный в динамической сборке, может быть временным или сохраняемым.</span><span class="sxs-lookup"><span data-stu-id="047cb-117">A dynamic module created in a dynamic assembly can be transient or persistable.</span></span>  
  
### <a name="restrictions-on-type-references"></a><span data-ttu-id="047cb-118">Ограничения на ссылки на типы</span><span class="sxs-lookup"><span data-stu-id="047cb-118">Restrictions on type references</span></span>  
 <span data-ttu-id="047cb-119">Сборки могут ссылаться на типы, определенные в другой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-119">Assemblies can reference types defined in another assembly.</span></span> <span data-ttu-id="047cb-120">Временная динамическая сборка может безопасно ссылаться на типы, определенные в другой временной динамической сборке, сохраняемой динамической сборке или статической сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-120">A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly.</span></span> <span data-ttu-id="047cb-121">Однако среда CLR не позволяет постоянному динамическому модулю ссылаться на тип, определенный во временном динамическом модуле.</span><span class="sxs-lookup"><span data-stu-id="047cb-121">However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module.</span></span> <span data-ttu-id="047cb-122">Это происходит потому, что когда сохраненный динамический модуль загружается после сохранения на диск, среда выполнения не может разрешить ссылки на типы, определенные во временном динамическом модуле.</span><span class="sxs-lookup"><span data-stu-id="047cb-122">This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.</span></span>  
  
### <a name="restrictions-on-emitting-to-remote-application-domains"></a><span data-ttu-id="047cb-123">Ограничения на эмиссию в удаленные домены приложений</span><span class="sxs-lookup"><span data-stu-id="047cb-123">Restrictions on emitting to remote application domains</span></span>  
 <span data-ttu-id="047cb-124">Для некоторых сценариев требуется создать динамическую сборку и выполнить ее в удаленном домене приложения.</span><span class="sxs-lookup"><span data-stu-id="047cb-124">Some scenarios require a dynamic assembly to be created and executed in a remote application domain.</span></span> <span data-ttu-id="047cb-125">Отражательная эмиссия не позволяет выдавать динамическую сборку непосредственно в удаленный домен приложения.</span><span class="sxs-lookup"><span data-stu-id="047cb-125">Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain.</span></span> <span data-ttu-id="047cb-126">Решение заключается в выдаче динамической сборки в текущем домене приложения, сохранении созданной динамической сборки на диск и последующей загрузке динамической сборки в удаленный домен приложения.</span><span class="sxs-lookup"><span data-stu-id="047cb-126">The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.</span></span>  
  
### <a name="dynamic-assembly-access-modes"></a><span data-ttu-id="047cb-127">Динамические режимы доступа к сборкам</span><span class="sxs-lookup"><span data-stu-id="047cb-127">Dynamic assembly access modes</span></span>  
 <span data-ttu-id="047cb-128">Динамические сборки можно создавать с помощью одного из следующих режимов доступа:</span><span class="sxs-lookup"><span data-stu-id="047cb-128">Dynamic assemblies can be created using one of the following access modes:</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Run?displayProperty=nameWithType>  
  
     <span data-ttu-id="047cb-129">Динамическая сборка, представленная объектом <xref:System.Reflection.Emit.AssemblyBuilder>, является временной.</span><span class="sxs-lookup"><span data-stu-id="047cb-129">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient.</span></span> <span data-ttu-id="047cb-130">Динамическую сборку можно использовать только для выполнения порожденного кода.</span><span class="sxs-lookup"><span data-stu-id="047cb-130">The dynamic assembly can only be used to execute the emitted code.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save?displayProperty=nameWithType>  
  
     <span data-ttu-id="047cb-131">Динамическая сборка, представленная объектом <xref:System.Reflection.Emit.AssemblyBuilder>, является сохраняемой, но ее нельзя выполнить, пока сохраненный переносимый исполняемый файл (PE) не будет загружен с диска.</span><span class="sxs-lookup"><span data-stu-id="047cb-131">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType>  
  
     <span data-ttu-id="047cb-132">Динамическая сборка, представленная объектом <xref:System.Reflection.Emit.AssemblyBuilder>, является сохраняемой, но также может быть выполнена до и (или) после сохранения сборки на диск.</span><span class="sxs-lookup"><span data-stu-id="047cb-132">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk.</span></span>  
  
 <span data-ttu-id="047cb-133">Режим доступа необходимо указать, указав соответствующее значение <xref:System.Reflection.Emit.AssemblyBuilderAccess> в вызове метода <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType>, когда динамическая сборка определена и не может быть изменена позже.</span><span class="sxs-lookup"><span data-stu-id="047cb-133">The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> method when the dynamic assembly is defined and cannot be changed later.</span></span> <span data-ttu-id="047cb-134">Среда выполнения использует режим доступа динамической сборки для оптимизации внутреннего представления сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-134">The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-135">В следующем примере кода показано, как определить динамическую сборку с одним модулем.</span><span class="sxs-lookup"><span data-stu-id="047cb-135">The following code example shows how to define a dynamic assembly with one module.</span></span> <span data-ttu-id="047cb-136">Модуль в сборке примера содержит один тип, `MyDynamicType`, имеющий закрытое поле, свойство, которое получает и задает закрытое поле, конструкторы, которые инициализируют закрытое поле, и метод, который умножает предоставленное пользователем число на значение закрытого поля и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="047cb-136">The module in the example assembly contains one type, `MyDynamicType`, which has a private field, a property that gets and sets the private field, constructors that initialize the private field, and a method that multiplies a user-supplied number by the private field value and returns the result.</span></span>  
  
 <span data-ttu-id="047cb-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> указывается при создании сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> is specified when the assembly is created.</span></span> <span data-ttu-id="047cb-138">Код сборки используется немедленно, а сборка также сохраняется на диск, чтобы ее можно было исследовать с помощью [Ildasm. exe](~/docs/framework/tools/ildasm-exe-il-disassembler.md) или использовать в другой программе.</span><span class="sxs-lookup"><span data-stu-id="047cb-138">The assembly code is used immediately, and the assembly is also saved to disk so that it can be examined with [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) or used in another program.</span></span>  
  
 [!code-cpp[AssemblyBuilderClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilderClass/cpp/24895.cpp#1)]
 [!code-csharp[AssemblyBuilderClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilderClass/cs/24895.cs#1)]
 [!code-vb[AssemblyBuilderClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilderClass/vb/24895.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-139">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-139">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-140">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-140">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
    <altmember cref="Overload:System.AppDomain.DefineDynamicAssembly" />
    <related type="Article" href="https://msdn.microsoft.com/library/8e8e2631-62fd-40e7-a8ee-0039b06749bc"><span data-ttu-id="047cb-141">Предоставление динамических методов и сборок</span><span class="sxs-lookup"><span data-stu-id="047cb-141">Emitting Dynamic Methods and Assemblies</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyBuilder ();" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.#ctor" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyBuilder();" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddResourceFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-142">Добавляет существующий файл ресурсов в эту сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-142">Adds an existing resource file to this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AddResourceFile : string * string -&gt; unit" Usage="assemblyBuilder.AddResourceFile (name, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-143">Логическое имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-143">The logical name of the resource.</span></span></param>
        <param name="fileName"><span data-ttu-id="047cb-144">Имя физического файла (RESOURCES-файл), с которым сопоставляется логическое имя.</span><span class="sxs-lookup"><span data-stu-id="047cb-144">The physical file name (.resources file) to which the logical name is mapped.</span></span> <span data-ttu-id="047cb-145">Оно не должно включать путь; файл должен быть в том же каталоге, что и сборка, в которую он добавляется.</span><span class="sxs-lookup"><span data-stu-id="047cb-145">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span></span></param>
        <summary><span data-ttu-id="047cb-146">Добавляет существующий файл ресурсов в эту сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-146">Adds an existing resource file to this assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-147">`fileName` не должны совпадать с любым другим сохраняемым модулем, автономным управляемым ресурсом или автономным файлом манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-147">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="047cb-148">Управляемые ресурсы в файле считаются общедоступными.</span><span class="sxs-lookup"><span data-stu-id="047cb-148">The managed resources in the file are assumed to be public.</span></span>  
  
 <span data-ttu-id="047cb-149">Указанный файл ресурсов должен находиться в каталоге, в который будет сохранена сборка.</span><span class="sxs-lookup"><span data-stu-id="047cb-149">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-150">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-150">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-151">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-151">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-152">В следующем примере кода показано, как подключить файл ресурсов к динамически созданной сборке с помощью `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="047cb-152">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-153">Имя <paramref name="name" /> было определено ранее.</span><span class="sxs-lookup"><span data-stu-id="047cb-153"><paramref name="name" /> has been previously defined.</span></span>  
  
<span data-ttu-id="047cb-154">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-154">-or-</span></span> 
<span data-ttu-id="047cb-155">В сборке уже имеется другой файл с именем <paramref name="fileName" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-155">There is another file in the assembly named <paramref name="fileName" />.</span></span>  
  
<span data-ttu-id="047cb-156">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-156">-or-</span></span> 
<span data-ttu-id="047cb-157">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-157">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-158">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-158">-or-</span></span> 
<span data-ttu-id="047cb-159">Длина имени <paramref name="fileName" /> равна нулю, или имя файла <paramref name="fileName" /> содержит путь.</span><span class="sxs-lookup"><span data-stu-id="047cb-159">The length of <paramref name="fileName" /> is zero, or if <paramref name="fileName" /> includes a path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-160">Параметр <paramref name="name" /> или <paramref name="fileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-160"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="047cb-161">Файл <paramref name="fileName" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="047cb-161">The file <paramref name="fileName" /> is not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-162">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-162">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-163">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-163">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-164">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-164">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="047cb-165">Разрешение FileIOPermissionAccess. Read требуется для доступа к файлу ресурсов <paramref name="resourceFileName" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-165">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String, attribute As ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.AddResourceFile : string * string * System.Reflection.ResourceAttributes -&gt; unit" Usage="assemblyBuilder.AddResourceFile (name, fileName, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-166">Логическое имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-166">The logical name of the resource.</span></span></param>
        <param name="fileName"><span data-ttu-id="047cb-167">Имя физического файла (RESOURCES-файл), с которым сопоставляется логическое имя.</span><span class="sxs-lookup"><span data-stu-id="047cb-167">The physical file name (.resources file) to which the logical name is mapped.</span></span> <span data-ttu-id="047cb-168">Оно не должно включать путь; файл должен быть в том же каталоге, что и сборка, в которую он добавляется.</span><span class="sxs-lookup"><span data-stu-id="047cb-168">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span></span></param>
        <param name="attribute"><span data-ttu-id="047cb-169">Атрибуты ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-169">The resource attributes.</span></span></param>
        <summary><span data-ttu-id="047cb-170">Добавляет существующий файл ресурсов в эту сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-170">Adds an existing resource file to this assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-171">`fileName` не должны совпадать с любым другим сохраняемым модулем, автономным управляемым ресурсом или автономным файлом манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-171">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="047cb-172">Для управляемого ресурса можно задать атрибуты.</span><span class="sxs-lookup"><span data-stu-id="047cb-172">Attributes can be specified for the managed resource.</span></span>  
  
 <span data-ttu-id="047cb-173">Указанный файл ресурсов должен находиться в каталоге, в который будет сохранена сборка.</span><span class="sxs-lookup"><span data-stu-id="047cb-173">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-174">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-174">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-175">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-175">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-176">В следующем примере кода показано, как подключить файл ресурсов к динамически созданной сборке с помощью `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="047cb-176">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-177">Имя <paramref name="name" /> было определено ранее.</span><span class="sxs-lookup"><span data-stu-id="047cb-177"><paramref name="name" /> has been previously defined.</span></span>  
  
<span data-ttu-id="047cb-178">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-178">-or-</span></span> 
<span data-ttu-id="047cb-179">В сборке уже имеется другой файл с именем <paramref name="fileName" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-179">There is another file in the assembly named <paramref name="fileName" />.</span></span>  
  
<span data-ttu-id="047cb-180">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-180">-or-</span></span> 
<span data-ttu-id="047cb-181">Длина имени <paramref name="name" /> равна нулю или длина <paramref name="fileName" /> равно нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-181">The length of <paramref name="name" /> is zero or if the length of <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-182">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-182">-or-</span></span> 
 <span data-ttu-id="047cb-183"><paramref name="fileName" /> содержит путь.</span><span class="sxs-lookup"><span data-stu-id="047cb-183"><paramref name="fileName" /> includes a path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-184">Параметр <paramref name="name" /> или <paramref name="fileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-184"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="047cb-185">Если файл <paramref name="fileName" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="047cb-185">If the file <paramref name="fileName" /> is not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-186">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-186">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-187">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-187">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-188">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-188">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="047cb-189">Разрешение FileIOPermissionAccess. Read требуется для доступа к файлу ресурсов <paramref name="resourceFileName" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-189">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public override string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string" Usage="System.Reflection.Emit.AssemblyBuilder.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-190">Получает расположение сборки, как оно было указано изначально (так же, как и для объекта <see cref="T:System.Reflection.AssemblyName" />).</span><span class="sxs-lookup"><span data-stu-id="047cb-190">Gets the location of the assembly, as specified originally (such as in an <see cref="T:System.Reflection.AssemblyName" /> object).</span></span></summary>
        <value><span data-ttu-id="047cb-191">Первоначально заданное расположение сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-191">The location of the assembly, as specified originally.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-192">Чтобы получить абсолютный путь к загруженному файлу, содержащему манифест, используйте свойство <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-192">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-193">В настоящее время этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="047cb-193">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-194">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-194">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-195">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-195">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-196">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-196">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinedTypes : seq&lt;System.Reflection.TypeInfo&gt;" Usage="System.Reflection.Emit.AssemblyBuilder.DefinedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-197">Определяет динамическую сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-197">Defines a dynamic assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access);" />
      <MemberSignature Language="F#" Value="static member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly (name, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-198">Имя сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-198">The name of the assembly.</span></span></param>
        <param name="access"><span data-ttu-id="047cb-199">Права доступа сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-199">The access rights of the assembly.</span></span></param>
        <summary><span data-ttu-id="047cb-200">Определяет динамическую сборку, которая имеет указанные имя и права доступа.</span><span class="sxs-lookup"><span data-stu-id="047cb-200">Defines a dynamic assembly that has the specified name and access rights.</span></span></summary>
        <returns><span data-ttu-id="047cb-201">Объект, представляющий новую сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-201">An object that represents the new assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes);" />
      <MemberSignature Language="F#" Value="static member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * seq&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly (name, access, assemblyAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-202">Имя сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-202">The name of the assembly.</span></span></param>
        <param name="access"><span data-ttu-id="047cb-203">Права доступа сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-203">The access rights of the assembly.</span></span></param>
        <param name="assemblyAttributes"><span data-ttu-id="047cb-204">Коллекция, содержащая атрибуты сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-204">A collection that contains the attributes of the assembly.</span></span></param>
        <summary><span data-ttu-id="047cb-205">Определяет новую сборку, которая имеет указанные имя, права доступа и атрибуты.</span><span class="sxs-lookup"><span data-stu-id="047cb-205">Defines a new assembly that has the specified name, access rights, and attributes.</span></span></summary>
        <returns><span data-ttu-id="047cb-206">Объект, представляющий новую сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-206">An object that represents the new assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicModule">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-207">Определяет динамический модуль в этой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-207">Defines a dynamic module in this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-208">Имя динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="047cb-208">The name of the dynamic module.</span></span></param>
        <summary><span data-ttu-id="047cb-209">Определяет именованный временный динамический модуль в этой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-209">Defines a named transient dynamic module in this assembly.</span></span></summary>
        <returns><span data-ttu-id="047cb-210">Объект <see cref="T:System.Reflection.Emit.ModuleBuilder" />, представляющий определенный динамический модуль.</span><span class="sxs-lookup"><span data-stu-id="047cb-210">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-211">Определение нескольких динамических модулей с одинаковым именем в сборке является ошибкой.</span><span class="sxs-lookup"><span data-stu-id="047cb-211">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="047cb-212">Определенный динамический модуль является временным.</span><span class="sxs-lookup"><span data-stu-id="047cb-212">The defined dynamic module is transient.</span></span> <span data-ttu-id="047cb-213">Динамический модуль не сохраняется, даже если родительская динамическая сборка была создана с <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="047cb-213">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-214">Чтобы отключить оптимизацию при отладке динамических модулей, примените атрибут <xref:System.Diagnostics.DebuggableAttribute> к динамической сборке перед вызовом <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-214">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="047cb-215">Создайте экземпляр <xref:System.Diagnostics.DebuggableAttribute> с флагом <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> и примените его с помощью метода <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-215">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="047cb-216">Атрибут должен быть применен к динамической сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-216">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="047cb-217">Он не действует при применении к модулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-217">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-218">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-218">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-219">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-219">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-220">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="047cb-220">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="047cb-221">В приведенном ниже примере кода показано, как создать временный динамический модуль с помощью `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="047cb-221">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-222"><paramref name="name" /> начинается с пробела.</span><span class="sxs-lookup"><span data-stu-id="047cb-222"><paramref name="name" /> begins with white space.</span></span>  
  
<span data-ttu-id="047cb-223">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-223">-or-</span></span> 
<span data-ttu-id="047cb-224">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-224">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-225">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-225">-or-</span></span> 
<span data-ttu-id="047cb-226">Длина <paramref name="name" /> превышает максимальную длину, определенную в системе.</span><span class="sxs-lookup"><span data-stu-id="047cb-226">The length of <paramref name="name" /> is greater than the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-227">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-227"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-228">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-228">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="047cb-229">Не удается загрузить сборку для модуля записи символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-229">The assembly for default symbol writer cannot be loaded.</span></span>  
  
 <span data-ttu-id="047cb-230">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-230">-or-</span></span>  
  
 <span data-ttu-id="047cb-231">Не удается найти тип, реализующий интерфейс модуля записи символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-231">The type that implements the default symbol writer interface cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-232">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-232">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-233">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-233">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, bool emitSymbolInfo);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string * bool -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule (name, emitSymbolInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-234">Имя динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="047cb-234">The name of the dynamic module.</span></span></param>
        <param name="emitSymbolInfo"><span data-ttu-id="047cb-235"><see langword="true" />, если символьная информация должна выдаваться; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-235"><see langword="true" /> if symbol information is to be emitted; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="047cb-236">Определяет именованный несохраняемый динамический модуль в данной сборке и указывает, должна ли выдаваться символьная информация.</span><span class="sxs-lookup"><span data-stu-id="047cb-236">Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.</span></span></summary>
        <returns><span data-ttu-id="047cb-237">Объект <see cref="T:System.Reflection.Emit.ModuleBuilder" />, представляющий определенный динамический модуль.</span><span class="sxs-lookup"><span data-stu-id="047cb-237">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-238">Определение нескольких динамических модулей с одинаковым именем в сборке является ошибкой.</span><span class="sxs-lookup"><span data-stu-id="047cb-238">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="047cb-239">Динамический модуль не сохраняется, даже если родительская динамическая сборка была создана с <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="047cb-239">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-240">Чтобы отключить оптимизацию при отладке динамических модулей, примените атрибут <xref:System.Diagnostics.DebuggableAttribute> к динамической сборке перед вызовом <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-240">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="047cb-241">Создайте экземпляр <xref:System.Diagnostics.DebuggableAttribute> с флагом <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> и примените его с помощью метода <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-241">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="047cb-242">Атрибут должен быть применен к динамической сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-242">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="047cb-243">Он не действует при применении к модулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-243">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-244">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-244">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-245">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-245">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-246">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="047cb-246">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="047cb-247">В приведенном ниже примере кода показано, как создать временный динамический модуль с помощью `DefineDynamicModule`, подавить сведения о символах.</span><span class="sxs-lookup"><span data-stu-id="047cb-247">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`, suppressing symbol information.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#2)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#2)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-248"><paramref name="name" /> начинается с пробела.</span><span class="sxs-lookup"><span data-stu-id="047cb-248"><paramref name="name" /> begins with white space.</span></span>  
  
<span data-ttu-id="047cb-249">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-249">-or-</span></span> 
<span data-ttu-id="047cb-250">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-250">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-251">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-251">-or-</span></span> 
<span data-ttu-id="047cb-252">Длина <paramref name="name" /> превышает максимальную длину, определенную в системе.</span><span class="sxs-lookup"><span data-stu-id="047cb-252">The length of <paramref name="name" /> is greater than the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-253">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-253"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="047cb-254">Не удается загрузить сборку для модуля записи символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-254">The assembly for default symbol writer cannot be loaded.</span></span>  
  
 <span data-ttu-id="047cb-255">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-255">-or-</span></span>  
  
 <span data-ttu-id="047cb-256">Не удается найти тип, реализующий интерфейс модуля записи символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-256">The type that implements the default symbol writer interface cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-257">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-257">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-258">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-258">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-259">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-259">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string * string -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule (name, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-260">Имя динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="047cb-260">The name of the dynamic module.</span></span></param>
        <param name="fileName"><span data-ttu-id="047cb-261">Имя файла, в котором должен сохраняться динамический модуль.</span><span class="sxs-lookup"><span data-stu-id="047cb-261">The name of the file to which the dynamic module should be saved.</span></span></param>
        <summary><span data-ttu-id="047cb-262">Определяет сохраняемый динамический модуль с заданным именем, который будет сохранен в указанном файле.</span><span class="sxs-lookup"><span data-stu-id="047cb-262">Defines a persistable dynamic module with the given name that will be saved to the specified file.</span></span> <span data-ttu-id="047cb-263">Данные символов не созданы.</span><span class="sxs-lookup"><span data-stu-id="047cb-263">No symbol information is emitted.</span></span></summary>
        <returns><span data-ttu-id="047cb-264">Объект <see cref="T:System.Reflection.Emit.ModuleBuilder" />, представляющий определенный в результате динамический модуль.</span><span class="sxs-lookup"><span data-stu-id="047cb-264">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-265">Чтобы определить сохраняемый динамический модуль, необходимо создать сборку с помощью <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> или атрибута <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="047cb-265">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="047cb-266">Если вы хотите, чтобы модуль содержал манифест сборки, `name` должен совпадать с именем сборки (то есть <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> свойством <xref:System.Reflection.AssemblyName>, используемым для создания динамической сборки), а `fileName` должно совпадать с именем файла, указываемого при сохранении сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-266">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="047cb-267">В сборке, содержащей только один модуль, этот модуль должен содержать манифест сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-267">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-268">Чтобы отключить оптимизацию при отладке динамических модулей, примените атрибут <xref:System.Diagnostics.DebuggableAttribute> к динамической сборке перед вызовом <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-268">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="047cb-269">Создайте экземпляр <xref:System.Diagnostics.DebuggableAttribute> с флагом <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> и примените его с помощью метода <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-269">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="047cb-270">Атрибут должен быть применен к динамической сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-270">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="047cb-271">Он не действует при применении к модулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-271">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-272">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-272">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-273">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-273">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-274">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="047cb-274">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="047cb-275">В приведенном ниже примере кода показано, как создать сохраняемый динамический модуль с помощью `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="047cb-275">The code example below demonstrates how to create a persistent dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#3)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#3)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-276">Параметр <paramref name="name" /> или <paramref name="fileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-276"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-277">Длина параметра <paramref name="name" /> или <paramref name="fileName" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-277">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-278">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-278">-or-</span></span> 
<span data-ttu-id="047cb-279">Длина <paramref name="name" /> превышает максимальную длину, определенную в системе.</span><span class="sxs-lookup"><span data-stu-id="047cb-279">The length of <paramref name="name" /> is greater than the system-defined maximum length.</span></span>  
  
<span data-ttu-id="047cb-280">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-280">-or-</span></span> 
 <span data-ttu-id="047cb-281"><paramref name="fileName" /> содержит элементы пути (например, каталог).</span><span class="sxs-lookup"><span data-stu-id="047cb-281"><paramref name="fileName" /> contains a path specification (a directory component, for example).</span></span>  
  
<span data-ttu-id="047cb-282">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-282">-or-</span></span> 
<span data-ttu-id="047cb-283">Имеется конфликт с именем другого файла, который принадлежит этой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-283">There is a conflict with the name of another file that belongs to this assembly.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="047cb-284">Эта сборка была ранее сохранена.</span><span class="sxs-lookup"><span data-stu-id="047cb-284">This assembly has been previously saved.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-285">Сборка была вызвана для динамической сборки с атрибутом <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-285">This assembly was called on a dynamic assembly with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-286">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-286">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="047cb-287">Не удается загрузить сборку для модуля записи символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-287">The assembly for default symbol writer cannot be loaded.</span></span>  
  
 <span data-ttu-id="047cb-288">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-288">-or-</span></span>  
  
 <span data-ttu-id="047cb-289">Не удается найти тип, реализующий интерфейс модуля записи символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-289">The type that implements the default symbol writer interface cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-290">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-290">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-291">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-291">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="047cb-292">Write = true или Append = true требуется для сохранения модуля</span><span class="sxs-lookup"><span data-stu-id="047cb-292">Write=true or Append=true is needed to save the module</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName, bool emitSymbolInfo);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string * string * bool -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule (name, fileName, emitSymbolInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-293">Имя динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="047cb-293">The name of the dynamic module.</span></span></param>
        <param name="fileName"><span data-ttu-id="047cb-294">Имя файла, в котором должен сохраняться динамический модуль.</span><span class="sxs-lookup"><span data-stu-id="047cb-294">The name of the file to which the dynamic module should be saved.</span></span></param>
        <param name="emitSymbolInfo"><span data-ttu-id="047cb-295">Если параметр равен <see langword="true" />, символьная информация записывается с использованием задаваемого по умолчанию интерфейса записи символов.</span><span class="sxs-lookup"><span data-stu-id="047cb-295">If <see langword="true" />, symbolic information is written using the default symbol writer.</span></span></param>
        <summary><span data-ttu-id="047cb-296">Определяет сохраняемый динамический модуль с указанием имени модуля, имени файла, в котором модуль будет сохранен, и необходимости создания символьной информации с помощью модуля записи символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-296">Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.</span></span></summary>
        <returns><span data-ttu-id="047cb-297">Объект <see cref="T:System.Reflection.Emit.ModuleBuilder" />, представляющий определенный в результате динамический модуль.</span><span class="sxs-lookup"><span data-stu-id="047cb-297">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-298">Чтобы определить сохраняемый динамический модуль, необходимо создать сборку с помощью <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> или атрибута <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="047cb-298">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="047cb-299">Если вы хотите, чтобы модуль содержал манифест сборки, `name` должен совпадать с именем сборки (то есть <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> свойством <xref:System.Reflection.AssemblyName>, используемым для создания динамической сборки), а `fileName` должно совпадать с именем файла, указываемого при сохранении сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-299">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="047cb-300">В сборке, содержащей только один модуль, этот модуль должен содержать манифест сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-300">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-301">Чтобы отключить оптимизацию при отладке динамических модулей, примените атрибут <xref:System.Diagnostics.DebuggableAttribute> к динамической сборке перед вызовом <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-301">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="047cb-302">Создайте экземпляр <xref:System.Diagnostics.DebuggableAttribute> с флагом <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> и примените его с помощью метода <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-302">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="047cb-303">Атрибут должен быть применен к динамической сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-303">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="047cb-304">Он не действует при применении к модулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-304">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-305">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-305">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-306">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-306">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-307">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="047cb-307">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="047cb-308">В приведенном ниже примере кода показано, как создать постоянный динамический модуль с эмиссией символов с помощью `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="047cb-308">The code example below demonstrates how to create a persistent dynamic module with symbol emission using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#4)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#4)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-309">Параметр <paramref name="name" /> или <paramref name="fileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-309"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-310">Длина параметра <paramref name="name" /> или <paramref name="fileName" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-310">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-311">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-311">-or-</span></span> 
<span data-ttu-id="047cb-312">Длина <paramref name="name" /> превышает максимальную длину, определенную в системе.</span><span class="sxs-lookup"><span data-stu-id="047cb-312">The length of <paramref name="name" /> is greater than the system-defined maximum length.</span></span>  
  
<span data-ttu-id="047cb-313">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-313">-or-</span></span> 
 <span data-ttu-id="047cb-314"><paramref name="fileName" /> содержит элементы пути (например, каталог).</span><span class="sxs-lookup"><span data-stu-id="047cb-314"><paramref name="fileName" /> contains a path specification (a directory component, for example).</span></span>  
  
<span data-ttu-id="047cb-315">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-315">-or-</span></span> 
<span data-ttu-id="047cb-316">Имеется конфликт с именем другого файла, который принадлежит этой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-316">There is a conflict with the name of another file that belongs to this assembly.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="047cb-317">Эта сборка была ранее сохранена.</span><span class="sxs-lookup"><span data-stu-id="047cb-317">This assembly has been previously saved.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-318">Сборка была вызвана для динамической сборки с атрибутом <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-318">This assembly was called on a dynamic assembly with the <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span></span></exception>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="047cb-319">Не удается загрузить сборку для модуля записи символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-319">The assembly for default symbol writer cannot be loaded.</span></span>  
  
 <span data-ttu-id="047cb-320">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-320">-or-</span></span>  
  
 <span data-ttu-id="047cb-321">Не удается найти тип, реализующий интерфейс модуля записи символов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-321">The type that implements the default symbol writer interface cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-322">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-322">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-323">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-323">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-324">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-324">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="047cb-325">Write = true или Append = true требуется для сохранения этого модуля</span><span class="sxs-lookup"><span data-stu-id="047cb-325">Write=true or Append=true is needed to save this module</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-326">Определяет автономный управляемый ресурс для данной сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-326">Defines a standalone managed resource for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * string -&gt; System.Resources.IResourceWriter" Usage="assemblyBuilder.DefineResource (name, description, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-327">Логическое имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-327">The logical name of the resource.</span></span></param>
        <param name="description"><span data-ttu-id="047cb-328">Текстовое описание ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-328">A textual description of the resource.</span></span></param>
        <param name="fileName"><span data-ttu-id="047cb-329">Имя физического файла (RESOURCES-файл), с которым сопоставляется логическое имя.</span><span class="sxs-lookup"><span data-stu-id="047cb-329">The physical file name (.resources file) to which the logical name is mapped.</span></span> <span data-ttu-id="047cb-330">Оно не должно содержать путь.</span><span class="sxs-lookup"><span data-stu-id="047cb-330">This should not include a path.</span></span></param>
        <summary><span data-ttu-id="047cb-331">Определяет автономный управляемый ресурс для данной сборки с атрибутом открытого ресурса по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="047cb-331">Defines a standalone managed resource for this assembly with the default public resource attribute.</span></span></summary>
        <returns><span data-ttu-id="047cb-332">Объект <see cref="T:System.Resources.ResourceWriter" /> для указанного ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-332">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-333">Дополнительные ресурсы можно добавлять с помощью возвращаемого <xref:System.Resources.ResourceWriter> путем вызова <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-333">Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="047cb-334">`fileName` не должны совпадать с любым другим сохраняемым модулем, автономным управляемым ресурсом или автономным файлом манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-334">`fileName` should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file.</span></span>  
  
 <span data-ttu-id="047cb-335">Среда выполнения вызывает метод <xref:System.Resources.ResourceWriter.Close%2A> при сохранении динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-335">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-336">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-336">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-337">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-337">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-338">В следующем примере используется метод <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> для получения модуля записи ресурсов.</span><span class="sxs-lookup"><span data-stu-id="047cb-338">The following example uses the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> method to get a resource writer.</span></span> <span data-ttu-id="047cb-339">В примере модуль записи ресурсов используется для добавления трех строк ресурсов.</span><span class="sxs-lookup"><span data-stu-id="047cb-339">The example uses the resource writer to add three resource strings.</span></span>  
  
 [!code-cpp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CPP/assemblybuilder_defineresource.cpp#1)]
 [!code-csharp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CS/assemblybuilder_defineresource.cs#1)]
 [!code-vb[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/VB/assemblybuilder_defineresource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-340">Имя <paramref name="name" /> было определено ранее.</span><span class="sxs-lookup"><span data-stu-id="047cb-340"><paramref name="name" /> has been previously defined.</span></span>  
  
<span data-ttu-id="047cb-341">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-341">-or-</span></span> 
<span data-ttu-id="047cb-342">В сборке уже имеется другой файл с именем <paramref name="fileName" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-342">There is another file in the assembly named <paramref name="fileName" />.</span></span>  
  
<span data-ttu-id="047cb-343">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-343">-or-</span></span> 
<span data-ttu-id="047cb-344">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-344">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-345">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-345">-or-</span></span> 
<span data-ttu-id="047cb-346">Длина параметра <paramref name="fileName" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-346">The length of <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-347">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-347">-or-</span></span> 
 <span data-ttu-id="047cb-348"><paramref name="fileName" /> содержит путь.</span><span class="sxs-lookup"><span data-stu-id="047cb-348"><paramref name="fileName" /> includes a path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-349">Параметр <paramref name="name" /> или <paramref name="fileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-349"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-350">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-350">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-351">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-351">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-352">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-352">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="047cb-353">Write = true или Append = true</span><span class="sxs-lookup"><span data-stu-id="047cb-353">Write=true or Append=true</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * string * System.Reflection.ResourceAttributes -&gt; System.Resources.IResourceWriter" Usage="assemblyBuilder.DefineResource (name, description, fileName, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-354">Логическое имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-354">The logical name of the resource.</span></span></param>
        <param name="description"><span data-ttu-id="047cb-355">Текстовое описание ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-355">A textual description of the resource.</span></span></param>
        <param name="fileName"><span data-ttu-id="047cb-356">Имя физического файла (RESOURCES-файл), с которым сопоставляется логическое имя.</span><span class="sxs-lookup"><span data-stu-id="047cb-356">The physical file name (.resources file) to which the logical name is mapped.</span></span> <span data-ttu-id="047cb-357">Оно не должно содержать путь.</span><span class="sxs-lookup"><span data-stu-id="047cb-357">This should not include a path.</span></span></param>
        <param name="attribute"><span data-ttu-id="047cb-358">Атрибуты ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-358">The resource attributes.</span></span></param>
        <summary><span data-ttu-id="047cb-359">Определяет автономный управляемый ресурс для данной сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-359">Defines a standalone managed resource for this assembly.</span></span> <span data-ttu-id="047cb-360">Для управляемого ресурса можно задать атрибуты.</span><span class="sxs-lookup"><span data-stu-id="047cb-360">Attributes can be specified for the managed resource.</span></span></summary>
        <returns><span data-ttu-id="047cb-361">Объект <see cref="T:System.Resources.ResourceWriter" /> для указанного ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-361">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-362">Дополнительные ресурсы можно добавить с помощью возвращаемого <xref:System.Resources.ResourceWriter> путем вызова <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-362">Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="047cb-363">`fileName` не должны совпадать с любым другим сохраняемым модулем, автономным управляемым ресурсом или автономным файлом манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-363">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="047cb-364">Среда выполнения вызывает метод <xref:System.Resources.ResourceWriter.Close%2A> при сохранении динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-364">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-365">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-365">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-366">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-366">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-367">Имя <paramref name="name" /> было определено ранее, или в сборке имеется другой файл с именем <paramref name="fileName" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-367"><paramref name="name" /> has been previously defined or if there is another file in the assembly named <paramref name="fileName" />.</span></span>  
  
<span data-ttu-id="047cb-368">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-368">-or-</span></span> 
<span data-ttu-id="047cb-369">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-369">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-370">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-370">-or-</span></span> 
<span data-ttu-id="047cb-371">Длина параметра <paramref name="fileName" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-371">The length of <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="047cb-372">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-372">-or-</span></span> 
 <span data-ttu-id="047cb-373"><paramref name="fileName" /> содержит путь.</span><span class="sxs-lookup"><span data-stu-id="047cb-373"><paramref name="fileName" /> includes a path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-374">Параметр <paramref name="name" /> или <paramref name="fileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-374"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-375">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-375">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-376">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-376">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-377">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-377">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="047cb-378">Write = true или Append = true</span><span class="sxs-lookup"><span data-stu-id="047cb-378">Write=true or Append=true</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-379">Определяет неуправляемый ресурс для данной сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-379">Defines an unmanaged resource for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : byte[] -&gt; unit" Usage="assemblyBuilder.DefineUnmanagedResource resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="047cb-380">Непрозрачный BLOB-объект байтов, представляющий неуправляемый ресурс.</span><span class="sxs-lookup"><span data-stu-id="047cb-380">The opaque blob of bytes representing the unmanaged resource.</span></span></param>
        <summary><span data-ttu-id="047cb-381">Определяет неуправляемый ресурс для данной сборки как непрозрачный BLOB-объект байтов.</span><span class="sxs-lookup"><span data-stu-id="047cb-381">Defines an unmanaged resource for this assembly as an opaque blob of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-382">Сборка может быть связана только с одним неуправляемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="047cb-382">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="047cb-383">Это означает, что вызов <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> или <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> после вызова одного из методов ранее вызовет исключение System. ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="047cb-383">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw.</span></span> <span data-ttu-id="047cb-384">Несколько неуправляемых ресурсов необходимо объединить с помощью такого средства, как Microsoft Ресмерже Utility (не представленного в среде CLR).</span><span class="sxs-lookup"><span data-stu-id="047cb-384">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-385">В следующем примере кода создается и присоединяется массив байтов, представляющий неуправляемый ресурс, в динамическую сборку с помощью `DefineUnmanagedResource`.</span><span class="sxs-lookup"><span data-stu-id="047cb-385">The following code sample creates and attaches an array of bytes representing an unmanaged resource to a dynamic assembly, using `DefineUnmanagedResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CPP/assemblybuilder_defineunmanagedresource2.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CS/assemblybuilder_defineunmanagedresource2.cs#1)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/VB/assemblybuilder_defineunmanagedresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-386">Неуправляемый ресурс был определен ранее.</span><span class="sxs-lookup"><span data-stu-id="047cb-386">An unmanaged resource was previously defined.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-387">Свойство <paramref name="resource" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-387"><paramref name="resource" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-388">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-388">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-389">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-389">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-390">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-390">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : string -&gt; unit" Usage="assemblyBuilder.DefineUnmanagedResource resourceFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceFileName"><span data-ttu-id="047cb-391">Имя файла ресурсов.</span><span class="sxs-lookup"><span data-stu-id="047cb-391">The name of the resource file.</span></span></param>
        <summary><span data-ttu-id="047cb-392">Определяет файл неуправляемого ресурса для данной сборки по заданному имени файла ресурсов.</span><span class="sxs-lookup"><span data-stu-id="047cb-392">Defines an unmanaged resource file for this assembly given the name of the resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-393">Сборка может быть связана только с одним неуправляемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="047cb-393">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="047cb-394">Это означает, что вызов <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> или <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> после того, как один из методов был вызван ранее, вызовет исключение System. ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="047cb-394">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="047cb-395">Несколько неуправляемых ресурсов необходимо объединить с помощью такого средства, как Microsoft Ресмерже Utility (не представленного в среде CLR).</span><span class="sxs-lookup"><span data-stu-id="047cb-395">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-396">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-396">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-397">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-397">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-398">В приведенном ниже примере демонстрируется вызов `DefineUnmanagedResource`с передачей внешнего файла ресурсов.</span><span class="sxs-lookup"><span data-stu-id="047cb-398">The example below demonstrates a call to `DefineUnmanagedResource`, passing an external resource file.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CPP/assemblybuilder_defineunmanagedresource.cpp#3)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CS/assemblybuilder_defineunmanagedresource.cs#3)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/VB/assemblybuilder_defineunmanagedresource.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-399">Неуправляемый ресурс был определен ранее.</span><span class="sxs-lookup"><span data-stu-id="047cb-399">An unmanaged resource was previously defined.</span></span>  
  
<span data-ttu-id="047cb-400">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-400">-or-</span></span> 
<span data-ttu-id="047cb-401">Файл <paramref name="resourceFileName" /> не читается.</span><span class="sxs-lookup"><span data-stu-id="047cb-401">The file <paramref name="resourceFileName" /> is not readable.</span></span>  
  
<span data-ttu-id="047cb-402">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-402">-or-</span></span> 
 <span data-ttu-id="047cb-403"><paramref name="resourceFileName" /> является пустой строкой ("").</span><span class="sxs-lookup"><span data-stu-id="047cb-403"><paramref name="resourceFileName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-404">Свойство <paramref name="resourceFileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-404"><paramref name="resourceFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="047cb-405"><paramref name="resourceFileName" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="047cb-405"><paramref name="resourceFileName" /> is not found.</span></span>  
  
<span data-ttu-id="047cb-406">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-406">-or-</span></span> 
 <span data-ttu-id="047cb-407"><paramref name="resourceFileName" /> является каталогом.</span><span class="sxs-lookup"><span data-stu-id="047cb-407"><paramref name="resourceFileName" /> is a directory.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-408">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-408">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-409">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-409">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-410">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-410">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="047cb-411">Разрешение FileIOPermissionAccess. Read требуется для доступа к файлу ресурсов <paramref name="resourceFileName" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-411">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineVersionInfoResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-412">Определяет неуправляемую версию информационного ресурса для этой сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-412">Defines an unmanaged version information resource for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource();" />
      <MemberSignature Language="F#" Value="member this.DefineVersionInfoResource : unit -&gt; unit" Usage="assemblyBuilder.DefineVersionInfoResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="047cb-413">Определяет неуправляемый ресурс сведений о версии с помощью сведений, указанных в объекте AssemblyName и настраиваемых атрибутах сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-413">Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-414">Сборка может быть связана только с одним неуправляемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="047cb-414">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="047cb-415">Это означает, что вызов <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> или <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> после того, как один из методов был вызван ранее, вызовет исключение System. ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="047cb-415">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="047cb-416">Несколько неуправляемых ресурсов необходимо объединить с помощью такого средства, как Microsoft Ресмерже Utility (не представленного в пакете SDK среды CLR).</span><span class="sxs-lookup"><span data-stu-id="047cb-416">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="047cb-417">Пустые строки аргументов записываются в виде одного пробела.</span><span class="sxs-lookup"><span data-stu-id="047cb-417">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="047cb-418">Пробелы заменяются символами NULL в строках аргументов.</span><span class="sxs-lookup"><span data-stu-id="047cb-418">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="047cb-419">Сведения выводятся из объекта `AssemblyName`, используемого для определения этой динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-419">The information is inferred from the `AssemblyName` object used to define this dynamic assembly.</span></span> <span data-ttu-id="047cb-420">Настраиваемые атрибуты этой сборки переопределяют сведения, указанные в объекте `AssemblyName`.</span><span class="sxs-lookup"><span data-stu-id="047cb-420">This assembly's custom attributes override information specified in the `AssemblyName` object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-421">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-421">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-422">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-422">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-423">В приведенном ниже примере показано использование `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="047cb-423">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-424">Неуправляемая версия информационного ресурса была определена ранее.</span><span class="sxs-lookup"><span data-stu-id="047cb-424">An unmanaged version information resource was previously defined.</span></span>  
  
 <span data-ttu-id="047cb-425">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-425">-or-</span></span>  
  
 <span data-ttu-id="047cb-426">Объем неуправляемых сведений о версии слишком велик для сохранения.</span><span class="sxs-lookup"><span data-stu-id="047cb-426">The unmanaged version information is too large to persist.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-427">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-427">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-428">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-428">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-429">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-429">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource (string product, string productVersion, string company, string copyright, string trademark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource(string product, string productVersion, string company, string copyright, string trademark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource (product As String, productVersion As String, company As String, copyright As String, trademark As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource(System::String ^ product, System::String ^ productVersion, System::String ^ company, System::String ^ copyright, System::String ^ trademark);" />
      <MemberSignature Language="F#" Value="member this.DefineVersionInfoResource : string * string * string * string * string -&gt; unit" Usage="assemblyBuilder.DefineVersionInfoResource (product, productVersion, company, copyright, trademark)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="product" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="productVersion" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="company" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="copyright" Type="System.String" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="trademark" Type="System.String" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="product"><span data-ttu-id="047cb-430">Имя продукта, с которым поставляется данная сборка.</span><span class="sxs-lookup"><span data-stu-id="047cb-430">The name of the product with which this assembly is distributed.</span></span></param>
        <param name="productVersion"><span data-ttu-id="047cb-431">Версия продукта, с которым поставляется данная сборка.</span><span class="sxs-lookup"><span data-stu-id="047cb-431">The version of the product with which this assembly is distributed.</span></span></param>
        <param name="company"><span data-ttu-id="047cb-432">Название организации, которая является создателем сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-432">The name of the company that produced this assembly.</span></span></param>
        <param name="copyright"><span data-ttu-id="047cb-433">Описывает все уведомления об авторских правах, товарные знаки и охраняемые товарные знаки, применимые к этой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-433">Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly.</span></span> <span data-ttu-id="047cb-434">Это должен быть полный текст всех уведомлений, допустимых символов, сроки действия прав, номера товарных знаков и так далее.</span><span class="sxs-lookup"><span data-stu-id="047cb-434">This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on.</span></span> <span data-ttu-id="047cb-435">На английском языке эта строка должна быть представлена в формате: "Copyright Microsoft Corp. 1990-2001"</span><span class="sxs-lookup"><span data-stu-id="047cb-435">In English, this string should be in the format "Copyright Microsoft Corp. 1990-2001".</span></span></param>
        <param name="trademark"><span data-ttu-id="047cb-436">Описывает товарные знаки и охраняемые товарные знаки, применимые к этой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-436">Describes all trademarks and registered trademarks that apply to this assembly.</span></span> <span data-ttu-id="047cb-437">Это должен быть полный текст всех уведомлений, допустимых символов, номера товарных знаков и так далее.</span><span class="sxs-lookup"><span data-stu-id="047cb-437">This should include the full text of all notices, legal symbols, trademark numbers, and so on.</span></span> <span data-ttu-id="047cb-438">На русском языке эта строка должна быть в формате "Windows является товарным знаком корпорации Майкрософт".</span><span class="sxs-lookup"><span data-stu-id="047cb-438">In English, this string should be in the format "Windows is a trademark of Microsoft Corporation".</span></span></param>
        <summary><span data-ttu-id="047cb-439">Определяет неуправляемую версию информационного ресурса для этой сборки с учетом заданных спецификаций.</span><span class="sxs-lookup"><span data-stu-id="047cb-439">Defines an unmanaged version information resource for this assembly with the given specifications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-440">Сборка может быть связана только с одним неуправляемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="047cb-440">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="047cb-441">Это означает, что вызов <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> или <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> после того, как один из методов был вызван ранее, вызовет исключение System. ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="047cb-441">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="047cb-442">Несколько неуправляемых ресурсов необходимо объединить с помощью такого средства, как Microsoft `ResMerge` Utility (не представлено в пакете SDK среды CLR).</span><span class="sxs-lookup"><span data-stu-id="047cb-442">Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="047cb-443">Пустые строки аргументов записываются в виде одного пробела.</span><span class="sxs-lookup"><span data-stu-id="047cb-443">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="047cb-444">Пробелы заменяются символами NULL в строках аргументов.</span><span class="sxs-lookup"><span data-stu-id="047cb-444">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="047cb-445">Структура ресурса версии включает данные, определяющие версию, язык и распространение файла.</span><span class="sxs-lookup"><span data-stu-id="047cb-445">The structure of the version resource includes data that identifies the version, language, and distribution of the file.</span></span> <span data-ttu-id="047cb-446">Программы установки используют функции библиотеки установки файлов (VER). DLL) для получения ресурса сведений о версии из файла и извлечения блоков сведений о версии из ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-446">Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-447">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-447">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-448">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-448">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-449">В приведенном ниже примере показано использование `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="047cb-449">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-450">Неуправляемая версия информационного ресурса была определена ранее.</span><span class="sxs-lookup"><span data-stu-id="047cb-450">An unmanaged version information resource was previously defined.</span></span>  
  
 <span data-ttu-id="047cb-451">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-451">-or-</span></span>  
  
 <span data-ttu-id="047cb-452">Объем неуправляемых сведений о версии слишком велик для сохранения.</span><span class="sxs-lookup"><span data-stu-id="047cb-452">The unmanaged version information is too large to persist.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-453">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-453">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-454">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-454">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-455">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-455">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : System.Reflection.MethodInfo" Usage="System.Reflection.Emit.AssemblyBuilder.EntryPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-456">Возвращает точку входа для этой сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-456">Returns the entry point of this assembly.</span></span></summary>
        <value><span data-ttu-id="047cb-457">Точка входа для этой сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-457">The entry point of this assembly.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-458">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-458">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-459">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-459">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-460">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-460">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="assemblyBuilder.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="047cb-461">Объект, сравниваемый с этим экземпляром, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-461">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="047cb-462">Возвращает значение, указывающее, совпадает ли данный экземпляр с указанным объектом.</span><span class="sxs-lookup"><span data-stu-id="047cb-462">Returns a value that indicates whether this instance is equal to the specified object.</span></span></summary>
        <returns><span data-ttu-id="047cb-463"><see langword="true" />, если объект <paramref name="obj" /> типу и значению данного экземпляра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-463"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.Reflection.Emit.AssemblyBuilder.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-464">Получает свидетельство для этой сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-464">Gets the evidence for this assembly.</span></span></summary>
        <value><span data-ttu-id="047cb-465">Свидетельство для этой сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-465">The evidence for this assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.Emit.AssemblyBuilder.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-466">Получает отображаемое имя текущей динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-466">Gets the display name of the current dynamic assembly.</span></span></summary>
        <value><span data-ttu-id="047cb-467">Отображаемое имя текущей динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-467">The display name of the dynamic assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-468">Описание формата отображаемого имени сборки см. в разделе <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="047cb-468">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-469">Возвращает настраиваемые атрибуты, примененные к текущему объекту <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-469">Returns custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /></span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="assemblyBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="047cb-470">Данный аргумент не учитывается для объектов этого типа.</span><span class="sxs-lookup"><span data-stu-id="047cb-470">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="047cb-471">Возвращает все настраиваемые атрибуты, которые были применены к текущему <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-471">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="047cb-472">Массив, содержащий настраиваемые атрибуты; массив является пустым, если атрибуты отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="047cb-472">An array that contains the custom attributes; the array is empty if there are no attributes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="assemblyBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="047cb-473">Базовый тип, от которого наследуют атрибуты.</span><span class="sxs-lookup"><span data-stu-id="047cb-473">The base type from which attributes derive.</span></span></param>
        <param name="inherit"><span data-ttu-id="047cb-474">Данный аргумент не учитывается для объектов этого типа.</span><span class="sxs-lookup"><span data-stu-id="047cb-474">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="047cb-475">Возвращает настраиваемые атрибуты, примененные к текущему <see cref="T:System.Reflection.Emit.AssemblyBuilder" />, которые являются производными от указанного типа атрибута.</span><span class="sxs-lookup"><span data-stu-id="047cb-475">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />, and that derive from a specified attribute type.</span></span></summary>
        <returns><span data-ttu-id="047cb-476">Массив, содержащий настраиваемые атрибуты, которые являются производными на любом уровне от <paramref name="attributeType" />; массив является пустым, если атрибуты отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="047cb-476">An array that contains the custom attributes that are derived at any level from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-477">Свойство <paramref name="attributeType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-477"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-478"><paramref name="attributeType" /> не является объектом <see cref="T:System.Type" />, предоставляемым средой выполнения.</span><span class="sxs-lookup"><span data-stu-id="047cb-478"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span></span> <span data-ttu-id="047cb-479">Например, <paramref name="attributeType" /> является объектом <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-479">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="assemblyBuilder.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="047cb-480">Возвращает объекты <see cref="T:System.Reflection.CustomAttributeData" />, содержащие сведения об атрибутах, примененных к текущему объекту <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-480">Returns <see cref="T:System.Reflection.CustomAttributeData" /> objects that contain information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="047cb-481">Универсальный список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, которые были применены к текущему модулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-481">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-482">Этот метод используется для проверки пользовательских атрибутов кода в контексте, предназначенном только для отражения, в случаях, когда сами пользовательские атрибуты определены в коде, который загружается в контекст, предназначенный только для отражения.</span><span class="sxs-lookup"><span data-stu-id="047cb-482">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="047cb-483">Такие методы, как <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> и <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType>, нельзя использовать в таких случаях, так как они создают экземпляры атрибутов.</span><span class="sxs-lookup"><span data-stu-id="047cb-483">Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="047cb-484">Код в контексте, предназначенном только для отражения, не может быть выполнен.</span><span class="sxs-lookup"><span data-stu-id="047cb-484">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="047cb-485">Дополнительные сведения и примеры кода см. в разделе класс <xref:System.Reflection.CustomAttributeData>.</span><span class="sxs-lookup"><span data-stu-id="047cb-485">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder GetDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder GetDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ GetDynamicModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetDynamicModule : string -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.GetDynamicModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-486">Имя запрошенного динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="047cb-486">The name of the requested dynamic module.</span></span></param>
        <summary><span data-ttu-id="047cb-487">Возвращает динамический модуль с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="047cb-487">Returns the dynamic module with the specified name.</span></span></summary>
        <returns><span data-ttu-id="047cb-488">Объект ModuleBuilder, представляющий запрошенный динамический модуль.</span><span class="sxs-lookup"><span data-stu-id="047cb-488">A ModuleBuilder object representing the requested dynamic module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-489">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-489"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-490">Длина параметра <paramref name="name" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-490">The length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-491">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-491">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-492">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-492">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-493">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-493">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberSignature Language="F#" Value="override this.GetExportedTypes : unit -&gt; Type[]" Usage="assemblyBuilder.GetExportedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="047cb-494">Возвращает экспортированные типы, определенные в этой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-494">Gets the exported types defined in this assembly.</span></span></summary>
        <returns><span data-ttu-id="047cb-495">Массив <see cref="T:System.Type" />, содержащий экспортированные типы, определенные в этой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-495">An array of <see cref="T:System.Type" /> containing the exported types defined in this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-496">Этот метод не реализован.</span><span class="sxs-lookup"><span data-stu-id="047cb-496">This method is not implemented.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-497">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-497">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-498">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-498">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-499">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-499">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetFile : string -&gt; System.IO.FileStream" Usage="assemblyBuilder.GetFile name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-500">Имя указанного файла.</span><span class="sxs-lookup"><span data-stu-id="047cb-500">The name of the specified file.</span></span></param>
        <summary><span data-ttu-id="047cb-501">Возвращает объект <see cref="T:System.IO.FileStream" /> для указанного файла из таблицы файлов манифеста данной сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-501">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span></span></summary>
        <returns><span data-ttu-id="047cb-502">Объект <see cref="T:System.IO.FileStream" /> для заданного файла, или <see langword="null" />, если файл не найден.</span><span class="sxs-lookup"><span data-stu-id="047cb-502">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" />, if the file is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-503">`name` не должен включать путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="047cb-503">`name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-504">В настоящее время этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="047cb-504">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-505">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-505">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-506">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-506">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-507">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-507">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="override this.GetFiles : bool -&gt; System.IO.FileStream[]" Usage="assemblyBuilder.GetFiles getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="047cb-508">Значение <see langword="true" />, если необходимо включать модули ресурсов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-508"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="047cb-509">Получает файлы из таблицы манифеста сборки с указанием включать или не включать модули ресурсов.</span><span class="sxs-lookup"><span data-stu-id="047cb-509">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="047cb-510">Массив объектов <see cref="T:System.IO.FileStream" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-510">An array of <see cref="T:System.IO.FileStream" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-511">В настоящее время этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="047cb-511">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-512">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-512">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-513">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-513">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-514">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-514">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="assemblyBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="047cb-515">Возвращает хэш-код для данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="047cb-515">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="047cb-516">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="047cb-516">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="override this.GetLoadedModules : bool -&gt; System.Reflection.Module[]" Usage="assemblyBuilder.GetLoadedModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="047cb-517">Значение <see langword="true" />, если необходимо включать модули ресурсов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-517"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="047cb-518">Возвращает все загруженные модули, входящие в эту сборку, и при необходимости включает модули ресурсов.</span><span class="sxs-lookup"><span data-stu-id="047cb-518">Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.</span></span></summary>
        <returns><span data-ttu-id="047cb-519">Загруженные модули, являющиеся частью этой сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-519">The loaded modules that are part of this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public override System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo" Usage="assemblyBuilder.GetManifestResourceInfo resourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="047cb-520">Имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-520">The name of the resource.</span></span></param>
        <summary><span data-ttu-id="047cb-521">Возвращает сведения о сохранении заданного ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-521">Returns information about how the given resource has been persisted.</span></span></summary>
        <returns><span data-ttu-id="047cb-522"><see cref="T:System.Reflection.ManifestResourceInfo" /> со сведениями о топологии ресурса или <see langword="null" />, если ресурс не найден.</span><span class="sxs-lookup"><span data-stu-id="047cb-522"><see cref="T:System.Reflection.ManifestResourceInfo" /> populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-523">В настоящее время этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="047cb-523">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-524">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-524">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-525">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-525">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-526">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-526">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public override string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceNames : unit -&gt; string[]" Usage="assemblyBuilder.GetManifestResourceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="047cb-527">Загружает указанный ресурс манифеста из сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-527">Loads the specified manifest resource from this assembly.</span></span></summary>
        <returns><span data-ttu-id="047cb-528">Массив типа <see langword="String" />, содержащий имена всех ресурсов.</span><span class="sxs-lookup"><span data-stu-id="047cb-528">An array of type <see langword="String" /> containing the names of all the resources.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-529">Этот метод не поддерживается для динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-529">This method is not supported on a dynamic assembly.</span></span> <span data-ttu-id="047cb-530">Для получения имен ресурсов манифеста используйте метод <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-530">To get the manifest resource names, use <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-531">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-531">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-532">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-532">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-533">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-533">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-534">Загружает указанный ресурс манифеста из сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-534">Loads the specified manifest resource from this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceStream : string -&gt; System.IO.Stream" Usage="assemblyBuilder.GetManifestResourceStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-535">Имя запрашиваемого ресурса манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-535">The name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="047cb-536">Загружает указанный ресурс манифеста из сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-536">Loads the specified manifest resource from this assembly.</span></span></summary>
        <returns><span data-ttu-id="047cb-537"><see cref="T:System.IO.Stream" />, представляющий этот ресурс манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-537">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-538">В настоящее время этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="047cb-538">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-539">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-539">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-540">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-540">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-541">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-541">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceStream : Type * string -&gt; System.IO.Stream" Usage="assemblyBuilder.GetManifestResourceStream (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="047cb-542">Тип, пространством имен которого ограничена область действия имени ресурса манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-542">The type whose namespace is used to scope the manifest resource name.</span></span></param>
        <param name="name"><span data-ttu-id="047cb-543">Имя запрашиваемого ресурса манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-543">The name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="047cb-544">Загружает из сборки указанный ресурс манифеста с учетом ограничения области действия пространства имен по типу.</span><span class="sxs-lookup"><span data-stu-id="047cb-544">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span></span></summary>
        <returns><span data-ttu-id="047cb-545"><see cref="T:System.IO.Stream" />, представляющий этот ресурс манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-545">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-546">Возвращенный <xref:System.IO.Stream> имеет указатель на файл, установленный в начале ресурса.</span><span class="sxs-lookup"><span data-stu-id="047cb-546">The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-547">Если полное имя `type` — "MyNameSpace. MyClasss", а `name` — "точка", `GetManifestResourceStream` будет искать ресурс с именем MyNameSpace. dot.</span><span class="sxs-lookup"><span data-stu-id="047cb-547">If the full name of `type` is "MyNameSpace.MyClasses" and `name` is "Dot", `GetManifestResourceStream` will search for a resource named MyNameSpace.Dot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-548">В настоящее время этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="047cb-548">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-549">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-549">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-550">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-550">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-551">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-551">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/assembly/manifest.md"><span data-ttu-id="047cb-552">Манифест сборки</span><span class="sxs-lookup"><span data-stu-id="047cb-552">Assembly Manifest</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetModule : string -&gt; System.Reflection.Module" Usage="assemblyBuilder.GetModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-553">Имя запрошенного модуля.</span><span class="sxs-lookup"><span data-stu-id="047cb-553">The name of the requested module.</span></span></param>
        <summary><span data-ttu-id="047cb-554">Получает указанный модуль этой сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-554">Gets the specified module in this assembly.</span></span></summary>
        <returns><span data-ttu-id="047cb-555">Запрашиваемый модуль или значение <see langword="null" />, если модуль не найден.</span><span class="sxs-lookup"><span data-stu-id="047cb-555">The module being requested, or <see langword="null" /> if the module is not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="override this.GetModules : bool -&gt; System.Reflection.Module[]" Usage="assemblyBuilder.GetModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="047cb-556">Значение <see langword="true" />, если необходимо включать модули ресурсов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-556"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="047cb-557">Получает все модули, входящие в эту сборку, и при необходимости включает модули ресурсов.</span><span class="sxs-lookup"><span data-stu-id="047cb-557">Gets all the modules that are part of this assembly, and optionally includes resource modules.</span></span></summary>
        <returns><span data-ttu-id="047cb-558">Модули, являющиеся частью этой сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-558">The modules that are part of this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberSignature Language="F#" Value="override this.GetName : bool -&gt; System.Reflection.AssemblyName" Usage="assemblyBuilder.GetName copiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="copiedName"><span data-ttu-id="047cb-559">Значение <see langword="true" /> для установки базы кода в расположение сборки после теневого копирования; для копирования базы кода в исходное расположение — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-559"><see langword="true" /> to set the code base to the location of the assembly after it is shadow-copied; <see langword="false" /> to set the code base to the original location.</span></span></param>
        <summary><span data-ttu-id="047cb-560">Получает объект <see cref="T:System.Reflection.AssemblyName" />, указанный при создании текущей динамической сборки, и задает указанную базу кода.</span><span class="sxs-lookup"><span data-stu-id="047cb-560">Gets the <see cref="T:System.Reflection.AssemblyName" /> that was specified when the current dynamic assembly was created, and sets the code base as specified.</span></span></summary>
        <returns><span data-ttu-id="047cb-561">Имя динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-561">The name of the dynamic assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberSignature Language="F#" Value="override this.GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]" Usage="assemblyBuilder.GetReferencedAssemblies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="047cb-562">Получает неполный список объектов <see cref="T:System.Reflection.AssemblyName" /> для сборок, на которые ссылается этот объект <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-562">Gets an incomplete list of <see cref="T:System.Reflection.AssemblyName" /> objects for the assemblies that are referenced by this <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="047cb-563">Массив имен сборок для связанных сборок.</span><span class="sxs-lookup"><span data-stu-id="047cb-563">An array of assembly names for the referenced assemblies.</span></span> <span data-ttu-id="047cb-564">Этот массив не является полным списком.</span><span class="sxs-lookup"><span data-stu-id="047cb-564">This array is not a complete list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-565">Этот метод не возвращает полный список сборок, на которые имеются ссылки.</span><span class="sxs-lookup"><span data-stu-id="047cb-565">This method does not return a complete list of referenced assemblies.</span></span> <span data-ttu-id="047cb-566">Например, если к <xref:System.Reflection.Emit.AssemblyBuilder>применяется настраиваемый атрибут, то сборка, в которой был определен атрибут, включается в список, возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="047cb-566">For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method.</span></span> <span data-ttu-id="047cb-567">Однако при использовании объекта <xref:System.Type> для указания типа параметра метода этот тип не включается.</span><span class="sxs-lookup"><span data-stu-id="047cb-567">However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.</span></span>  
  
 <span data-ttu-id="047cb-568">Чтобы получить полный список сборок, на которые имеются ссылки, сохраните сборку, загрузите ее в другой домен приложения и вызовите метод <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-568">To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-569">Получает указанную вспомогательную сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-569">Gets a specified satellite assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly" Usage="assemblyBuilder.GetSatelliteAssembly culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="047cb-570">Заданные язык и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="047cb-570">The specified culture.</span></span></param>
        <summary><span data-ttu-id="047cb-571">Получает сопутствующую сборку для указанной культуры.</span><span class="sxs-lookup"><span data-stu-id="047cb-571">Gets the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="047cb-572">Указанная вспомогательная сборка.</span><span class="sxs-lookup"><span data-stu-id="047cb-572">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-573">Вспомогательные сборки содержат локализованные ресурсы, которые отличаются от основных сборок приложения, которые содержат нелокализуемые исполняемый код и ресурсы для одного языка и региональных параметров, которые служат в качестве языка и региональных параметров по умолчанию или нейтральных.</span><span class="sxs-lookup"><span data-stu-id="047cb-573">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="047cb-574">Вызовите этот метод, чтобы использовать текущую версию сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-574">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-575">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-575"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="047cb-576">Не удается найти сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-576">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="047cb-577">Вспомогательная сборка с соответствующим именем файла была найдена, но параметр <see langword="CultureInfo" /> не соответствует указанному.</span><span class="sxs-lookup"><span data-stu-id="047cb-577">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="047cb-578">Вспомогательная сборка не является допустимой сборкой.</span><span class="sxs-lookup"><span data-stu-id="047cb-578">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberSignature Language="F#" Value="override this.GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly" Usage="assemblyBuilder.GetSatelliteAssembly (culture, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="version" Type="System.Version" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="047cb-579">Заданные язык и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="047cb-579">The specified culture.</span></span></param>
        <param name="version"><span data-ttu-id="047cb-580">Версия вспомогательной сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-580">The version of the satellite assembly.</span></span></param>
        <summary><span data-ttu-id="047cb-581">Получает указанную версию вспомогательной сборки для указанной культуры.</span><span class="sxs-lookup"><span data-stu-id="047cb-581">Gets the specified version of the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="047cb-582">Указанная вспомогательная сборка.</span><span class="sxs-lookup"><span data-stu-id="047cb-582">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-583">Вспомогательные сборки содержат локализованные ресурсы, которые отличаются от основных сборок приложения, которые содержат нелокализуемые исполняемый код и ресурсы для одного языка и региональных параметров, которые служат в качестве языка и региональных параметров по умолчанию или нейтральных.</span><span class="sxs-lookup"><span data-stu-id="047cb-583">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="047cb-584">Вызовите перегрузку <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29>, чтобы использовать текущую версию сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-584">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-585">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-585"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="047cb-586">Вспомогательная сборка с соответствующим именем файла была найдена, но <see langword="CultureInfo" /> или версия не соответствуют указанным.</span><span class="sxs-lookup"><span data-stu-id="047cb-586">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="047cb-587">Не удается найти сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-587">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="047cb-588">Вспомогательная сборка не является допустимой сборкой.</span><span class="sxs-lookup"><span data-stu-id="047cb-588">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="assemblyBuilder.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="throwOnError" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="047cb-589">Имя искомого типа.</span><span class="sxs-lookup"><span data-stu-id="047cb-589">The name of the type to search for.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="047cb-590">Значение <see langword="true" /> для создания исключения, если тип не найден, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-590"><see langword="true" /> to throw an exception if the type is not found; otherwise, <see langword="false" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="047cb-591">Значение <see langword="true" />, чтобы игнорировать при поиске регистр имени типа, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-591"><see langword="true" /> to ignore the case of the type name when searching; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="047cb-592">Получает указанный тип из типов, определенных и созданных в текущем объекте <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-592">Gets the specified type from the types that have been defined and created in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="047cb-593">Указанный тип или значение <see langword="null" />, если тип не найден или еще не создан.</span><span class="sxs-lookup"><span data-stu-id="047cb-593">The specified type, or <see langword="null" /> if the type is not found or has not been created yet.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-594">Тип не может быть найден, пока он не будет создан путем вызова метода <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>.</span><span class="sxs-lookup"><span data-stu-id="047cb-594">A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public override bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAssemblyCache : bool" Usage="System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-595">Получает значение, указывающее, была ли сборка загружена из глобального кэша сборок.</span><span class="sxs-lookup"><span data-stu-id="047cb-595">Gets a value that indicates whether the assembly was loaded from the global assembly cache.</span></span></summary>
        <value><span data-ttu-id="047cb-596">Всегда <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-596">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-597"><xref:System.Reflection.Emit.AssemblyBuilder> объекты всегда представляют динамические сборки и, следовательно, никогда не загружаются из глобального кэша сборок.</span><span class="sxs-lookup"><span data-stu-id="047cb-597"><xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public override long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HostContext : int64" Usage="System.Reflection.Emit.AssemblyBuilder.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-598">Получает контекст узла, где создается динамическая сборка.</span><span class="sxs-lookup"><span data-stu-id="047cb-598">Gets the host context where the dynamic assembly is being created.</span></span></summary>
        <value><span data-ttu-id="047cb-599">Значение, указывающее контекст узла, где создается динамическая сборка.</span><span class="sxs-lookup"><span data-stu-id="047cb-599">A value that indicates the host context where the dynamic assembly is being created.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public override string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRuntimeVersion : string" Usage="System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-600">Возвращает версию среды CLR, которая будет сохранена в файле, содержащем манифест.</span><span class="sxs-lookup"><span data-stu-id="047cb-600">Gets the version of the common language runtime that will be saved in the file containing the manifest.</span></span></summary>
        <value><span data-ttu-id="047cb-601">Строка, представляющая версию среды CLR.</span><span class="sxs-lookup"><span data-stu-id="047cb-601">A string representing the common language runtime version.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-602">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-602">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-603">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-603">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-604">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-604">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="assemblyBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="047cb-605">Тип атрибута для тестирования.</span><span class="sxs-lookup"><span data-stu-id="047cb-605">The type of attribute to test for.</span></span></param>
        <param name="inherit"><span data-ttu-id="047cb-606">Данный аргумент не учитывается для объектов этого типа.</span><span class="sxs-lookup"><span data-stu-id="047cb-606">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="047cb-607">Возвращает значение, указывающее, применяется ли к данному члену один или несколько экземпляров определенного типа атрибута.</span><span class="sxs-lookup"><span data-stu-id="047cb-607">Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.</span></span></summary>
        <returns><span data-ttu-id="047cb-608">Значение <see langword="true" />, если к этой динамической сборке применяется один или несколько экземпляров параметра <paramref name="attributeType" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-608"><see langword="true" /> if one or more instances of <paramref name="attributeType" /> is applied to this dynamic assembly; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public override bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDynamic : bool" Usage="System.Reflection.Emit.AssemblyBuilder.IsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-609">Получает значение, указывающее, что текущая сборка является динамической.</span><span class="sxs-lookup"><span data-stu-id="047cb-609">Gets a value that indicates that the current assembly is a dynamic assembly.</span></span></summary>
        <value><span data-ttu-id="047cb-610">Всегда <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-610">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-611">Объект <xref:System.Reflection.Emit.AssemblyBuilder> всегда представляет динамическую сборку.</span><span class="sxs-lookup"><span data-stu-id="047cb-611">An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Reflection.Emit.AssemblyBuilder.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-612">Возвращает расположение (в формате базы кода) загруженного файла, содержащего манифест, если он не является теневой копией.</span><span class="sxs-lookup"><span data-stu-id="047cb-612">Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.</span></span></summary>
        <value><span data-ttu-id="047cb-613">Местоположение загруженного файла, содержащего манифест.</span><span class="sxs-lookup"><span data-stu-id="047cb-613">The location of the loaded file that contains the manifest.</span></span> <span data-ttu-id="047cb-614">Если загруженный файл подвергался теневому копированию, <see langword="Location" /> указывает на местоположение файла до выполнения теневого копирования.</span><span class="sxs-lookup"><span data-stu-id="047cb-614">If the loaded file has been shadow-copied, the <see langword="Location" /> is that of the file before being shadow-copied.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-615">В настоящее время этот метод не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="047cb-615">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-616">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-616">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-617">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-617">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-618">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-618">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManifestModule : System.Reflection.Module" Usage="System.Reflection.Emit.AssemblyBuilder.ManifestModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-619">Получает модуль в текущем объекте <see cref="T:System.Reflection.Emit.AssemblyBuilder" />, содержащий манифест сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-619">Gets the module in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> that contains the assembly manifest.</span></span></summary>
        <value><span data-ttu-id="047cb-620">Модуль манифеста.</span><span class="sxs-lookup"><span data-stu-id="047cb-620">The manifest module.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : seq&lt;System.Reflection.Module&gt;" Usage="System.Reflection.Emit.AssemblyBuilder.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public override System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionSet : System.Security.PermissionSet" Usage="System.Reflection.Emit.AssemblyBuilder.PermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-621">Получает набор разрешений текущей динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-621">Gets the grant set of the current dynamic assembly.</span></span></summary>
        <value><span data-ttu-id="047cb-622">Набор разрешений текущей динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-622">The grant set of the current dynamic assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-623"><xref:System.Security.PermissionSet> объекты могут содержать конфиденциальные сведения, такие как пути.</span><span class="sxs-lookup"><span data-stu-id="047cb-623"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="047cb-624">Поэтому для доступа к этим объектам требуется полное доверие.</span><span class="sxs-lookup"><span data-stu-id="047cb-624">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="047cb-625">требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="047cb-625">requires full trust for the immediate caller.</span></span> <span data-ttu-id="047cb-626">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="047cb-626">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public override bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionOnly : bool" Usage="System.Reflection.Emit.AssemblyBuilder.ReflectionOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-627">Получает значение, которое указывает, находится ли эта динамическая сборка в контексте только отражения.</span><span class="sxs-lookup"><span data-stu-id="047cb-627">Gets a value indicating whether the dynamic assembly is in the reflection-only context.</span></span></summary>
        <value><span data-ttu-id="047cb-628">Значение <see langword="true" />, если динамическая сборка находится только в контексте отражения; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-628"><see langword="true" /> if the dynamic assembly is in the reflection-only context; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-629">Чтобы выдать динамическую сборку в контексте, предназначенном только для отражения, укажите <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> при создании <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="047cb-629">To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span> <span data-ttu-id="047cb-630">Если динамическая сборка создается в контексте, предназначенном только для отражения, ее код не может быть выполнен.</span><span class="sxs-lookup"><span data-stu-id="047cb-630">If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-631">После сохранения динамической сборки на диск можно использовать метод <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType>, чтобы загрузить завершенную сборку в контекст, предназначенный только для отражения.</span><span class="sxs-lookup"><span data-stu-id="047cb-631">After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> method to load the completed assembly into the reflection-only context.</span></span> <span data-ttu-id="047cb-632">Однако сборка больше не может быть изменена.</span><span class="sxs-lookup"><span data-stu-id="047cb-632">However, the assembly can no longer be modified.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly" />
        <altmember cref="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md"><span data-ttu-id="047cb-633">Практическое руководство. Загрузка сборок в контекст, предназначенный только для отражения</span><span class="sxs-lookup"><span data-stu-id="047cb-633">How to: Load Assemblies into the Reflection-Only Context</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-634">Сохраняет динамическую сборку на диск.</span><span class="sxs-lookup"><span data-stu-id="047cb-634">Saves this dynamic assembly to disk.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (assemblyFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="assemblyBuilder.Save assemblyFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName"><span data-ttu-id="047cb-635">Имя файла сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-635">The file name of the assembly.</span></span></param>
        <summary><span data-ttu-id="047cb-636">Сохраняет динамическую сборку на диск.</span><span class="sxs-lookup"><span data-stu-id="047cb-636">Saves this dynamic assembly to disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-637">Этот метод сохраняет все невременные динамические модули, определенные в этой динамической сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-637">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="047cb-638">Временные динамические модули не сохраняются.</span><span class="sxs-lookup"><span data-stu-id="047cb-638">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="047cb-639">Имя файла сборки может совпадать с именем одного из модулей.</span><span class="sxs-lookup"><span data-stu-id="047cb-639">The assembly file name can be the same as the name of one of the modules.</span></span> <span data-ttu-id="047cb-640">Если это так, манифест сборки хранится в этом модуле.</span><span class="sxs-lookup"><span data-stu-id="047cb-640">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="047cb-641">`assemblyFileName` могут отличаться от имен всех модулей, содержащихся в сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-641">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="047cb-642">Если это так, файл сборки содержит только манифест сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-642">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="047cb-643">Для каждого <xref:System.Resources.ResourceWriter>, полученного с помощью <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, этот метод записывает Resources и вызывает <xref:System.Resources.ResourceWriter.Close%2A>, чтобы закрыть поток.</span><span class="sxs-lookup"><span data-stu-id="047cb-643">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="047cb-644">`assemblyFileName` должно быть простым именем файла без диска или компонента каталога.</span><span class="sxs-lookup"><span data-stu-id="047cb-644">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="047cb-645">Чтобы создать сборку в определенном каталоге, используйте один из <xref:System.AppDomain.DefineDynamicAssembly%2A> методов, принимающих аргумент целевого каталога.</span><span class="sxs-lookup"><span data-stu-id="047cb-645">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 <span data-ttu-id="047cb-646">В .NET Framework версии 2,0 Эта перегрузка метода <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> эквивалентна вызову перегрузки метода <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> с <xref:System.Reflection.PortableExecutableKinds.ILOnly> для параметра `portableExecutableKind` и <xref:System.Reflection.ImageFileMachine.I386> для параметра `imageFileMachine`.</span><span class="sxs-lookup"><span data-stu-id="047cb-646">In the .NET Framework version 2.0, this overload of the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method is equivalent to calling the <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> method overload with <xref:System.Reflection.PortableExecutableKinds.ILOnly> for the `portableExecutableKind` parameter and <xref:System.Reflection.ImageFileMachine.I386> for the `imageFileMachine` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-647">В следующем примере кода создается динамическая сборка, а затем она сохраняется на локальном диске с помощью `Save`.</span><span class="sxs-lookup"><span data-stu-id="047cb-647">The following code sample creates a dynamic assembly and then persists it to a local disk using `Save`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-648">Длина <paramref name="assemblyFileName" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-648">The length of <paramref name="assemblyFileName" /> is 0.</span></span>  
  
<span data-ttu-id="047cb-649">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-649">-or-</span></span> 
<span data-ttu-id="047cb-650">В сборке есть два или более файлов ресурсов модулей с тем же именем.</span><span class="sxs-lookup"><span data-stu-id="047cb-650">There are two or more modules resource files in the assembly with the same name.</span></span>  
  
<span data-ttu-id="047cb-651">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-651">-or-</span></span> 
<span data-ttu-id="047cb-652">Целевой каталог сборки недопустим.</span><span class="sxs-lookup"><span data-stu-id="047cb-652">The target directory of the assembly is invalid.</span></span>  
  
<span data-ttu-id="047cb-653">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-653">-or-</span></span> 
 <span data-ttu-id="047cb-654"><paramref name="assemblyFileName" /> не является простым именем файла (например, содержит каталог или букву диска), или в этой сборке определено несколько неуправляемых ресурсов, включая ресурс сведений о версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-654"><paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly.</span></span>  
  
<span data-ttu-id="047cb-655">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-655">-or-</span></span> 
<span data-ttu-id="047cb-656">Строка <see langword="CultureInfo" /> в <see cref="T:System.Reflection.AssemblyCultureAttribute" /> является недопустимой, а метод <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> был вызван до вызова данного метода.</span><span class="sxs-lookup"><span data-stu-id="047cb-656">The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-657">Свойство <paramref name="assemblyFileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-657"><paramref name="assemblyFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="047cb-658">Эта сборка была сохранена ранее.</span><span class="sxs-lookup"><span data-stu-id="047cb-658">This assembly has been saved before.</span></span>  
  
<span data-ttu-id="047cb-659">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-659">-or-</span></span> 
<span data-ttu-id="047cb-660">Доступ к сборке: <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span><span class="sxs-lookup"><span data-stu-id="047cb-660">This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="047cb-661">Во время сохранения возникает ошибка вывода.</span><span class="sxs-lookup"><span data-stu-id="047cb-661">An output error occurs during the save.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-662"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> не был вызван для какого-либо типа в модулях сборки, которые должны быть записаны на диск.</span><span class="sxs-lookup"><span data-stu-id="047cb-662"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="047cb-663">Write = true или Append = true требуется для сохранения этой сборки в указанное имя файла.</span><span class="sxs-lookup"><span data-stu-id="047cb-663">Write = true or Append = true is needed to save this assembly to the specified file name.</span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-664">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-664">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-665">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-665">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName, System.Reflection.PortableExecutableKinds portableExecutableKind, System.Reflection.ImageFileMachine imageFileMachine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName, valuetype System.Reflection.PortableExecutableKinds portableExecutableKind, valuetype System.Reflection.ImageFileMachine imageFileMachine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName, System::Reflection::PortableExecutableKinds portableExecutableKind, System::Reflection::ImageFileMachine imageFileMachine);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Reflection.PortableExecutableKinds * System.Reflection.ImageFileMachine -&gt; unit" Usage="assemblyBuilder.Save (assemblyFileName, portableExecutableKind, imageFileMachine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="portableExecutableKind" Type="System.Reflection.PortableExecutableKinds" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="imageFileMachine" Type="System.Reflection.ImageFileMachine" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName"><span data-ttu-id="047cb-666">Имя файла сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-666">The file name of the assembly.</span></span></param>
        <param name="portableExecutableKind"><span data-ttu-id="047cb-667">Битовая комбинация значений <see cref="T:System.Reflection.PortableExecutableKinds" />, которая указывает природу кода.</span><span class="sxs-lookup"><span data-stu-id="047cb-667">A bitwise combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values that specifies the nature of the code.</span></span></param>
        <param name="imageFileMachine"><span data-ttu-id="047cb-668">Одно из значений <see cref="T:System.Reflection.ImageFileMachine" />, определяющее платформу назначения.</span><span class="sxs-lookup"><span data-stu-id="047cb-668">One of the <see cref="T:System.Reflection.ImageFileMachine" /> values that specifies the target platform.</span></span></param>
        <summary><span data-ttu-id="047cb-669">Сохраняет эту динамическую сборку на диске, указывая природу кода в исполняемых файлах сборки и целевую платформу.</span><span class="sxs-lookup"><span data-stu-id="047cb-669">Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-670">Если `imageFileMachine` и `portableExecutableKind` несовместимы, `imageFileMachine` имеет приоритет над `portableExecutableKind`.</span><span class="sxs-lookup"><span data-stu-id="047cb-670">If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`.</span></span> <span data-ttu-id="047cb-671">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="047cb-671">No exception is thrown.</span></span> <span data-ttu-id="047cb-672">Например, если указать <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> с <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> игнорируется.</span><span class="sxs-lookup"><span data-stu-id="047cb-672">For example, if you specify <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> with <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> is ignored.</span></span>  
  
 <span data-ttu-id="047cb-673">Этот метод сохраняет все невременные динамические модули, определенные в этой динамической сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-673">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="047cb-674">Временные динамические модули не сохраняются.</span><span class="sxs-lookup"><span data-stu-id="047cb-674">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="047cb-675">Имя файла сборки может совпадать с именем одного из модулей.</span><span class="sxs-lookup"><span data-stu-id="047cb-675">The assembly file name can be the same as the name of one of the module.</span></span> <span data-ttu-id="047cb-676">Если это так, манифест сборки хранится в этом модуле.</span><span class="sxs-lookup"><span data-stu-id="047cb-676">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="047cb-677">`assemblyFileName` могут отличаться от имен всех модулей, содержащихся в сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-677">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="047cb-678">Если это так, файл сборки содержит только манифест сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-678">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="047cb-679">Для каждого <xref:System.Resources.ResourceWriter>, полученного с помощью <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, этот метод записывает Resources и вызывает <xref:System.Resources.ResourceWriter.Close%2A>, чтобы закрыть поток.</span><span class="sxs-lookup"><span data-stu-id="047cb-679">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="047cb-680">`assemblyFileName` должно быть простым именем файла без диска или компонента каталога.</span><span class="sxs-lookup"><span data-stu-id="047cb-680">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="047cb-681">Чтобы создать сборку в определенном каталоге, используйте один из <xref:System.AppDomain.DefineDynamicAssembly%2A> методов, принимающих аргумент целевого каталога.</span><span class="sxs-lookup"><span data-stu-id="047cb-681">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-682">Длина <paramref name="assemblyFileName" /> равна нулю.</span><span class="sxs-lookup"><span data-stu-id="047cb-682">The length of <paramref name="assemblyFileName" /> is 0.</span></span>  
  
<span data-ttu-id="047cb-683">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-683">-or-</span></span> 
<span data-ttu-id="047cb-684">В сборке есть два или более файлов ресурсов модулей с тем же именем.</span><span class="sxs-lookup"><span data-stu-id="047cb-684">There are two or more modules resource files in the assembly with the same name.</span></span>  
  
<span data-ttu-id="047cb-685">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-685">-or-</span></span> 
<span data-ttu-id="047cb-686">Целевой каталог сборки недопустим.</span><span class="sxs-lookup"><span data-stu-id="047cb-686">The target directory of the assembly is invalid.</span></span>  
  
<span data-ttu-id="047cb-687">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-687">-or-</span></span> 
 <span data-ttu-id="047cb-688"><paramref name="assemblyFileName" /> не является простым именем файла (например, содержит имя каталога или букву диска) или в сборке было определено более одного неуправляемого ресурса, включая ресурс со сведениями о версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-688"><paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly.</span></span>  
  
<span data-ttu-id="047cb-689">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-689">-or-</span></span> 
<span data-ttu-id="047cb-690">Строка <see langword="CultureInfo" /> в <see cref="T:System.Reflection.AssemblyCultureAttribute" /> является недопустимой, а метод <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> был вызван до вызова данного метода.</span><span class="sxs-lookup"><span data-stu-id="047cb-690">The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-691">Свойство <paramref name="assemblyFileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-691"><paramref name="assemblyFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="047cb-692">Эта сборка была сохранена ранее.</span><span class="sxs-lookup"><span data-stu-id="047cb-692">This assembly has been saved before.</span></span>  
  
<span data-ttu-id="047cb-693">-или-</span><span class="sxs-lookup"><span data-stu-id="047cb-693">-or-</span></span> 
<span data-ttu-id="047cb-694">Доступ к сборке: <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span><span class="sxs-lookup"><span data-stu-id="047cb-694">This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="047cb-695">Во время сохранения возникает ошибка вывода.</span><span class="sxs-lookup"><span data-stu-id="047cb-695">An output error occurs during the save.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="047cb-696"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> не был вызван для какого-либо типа в модулях сборки, которые должны быть записаны на диск.</span><span class="sxs-lookup"><span data-stu-id="047cb-696"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="047cb-697">Write = true или Append = true требуется для сохранения этой сборки в указанное имя файла.</span><span class="sxs-lookup"><span data-stu-id="047cb-697">Write = true or Append = true is needed to save this assembly to the specified file name.</span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-698">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-698">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-699">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-699">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRuleSet : System.Security.SecurityRuleSet" Usage="System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="047cb-700">Получает значение, указывающее набор правил безопасности, которые применяются средой CLR к данной сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-700">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span></span></summary>
        <value><span data-ttu-id="047cb-701">Набор правил безопасности, которые применяются средой CLR к данной сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-701">The security rule set that the CLR enforces for this dynamic assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-702">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] всегда применяет прозрачность уровня 2 (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) для создаваемых динамических сборок.</span><span class="sxs-lookup"><span data-stu-id="047cb-702">The [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] always enforces level 2 transparency (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) for the dynamic assemblies it generates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-703">Задает пользовательский атрибут в сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-703">Sets a custom attribute on this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="assemblyBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="047cb-704">Экземпляр вспомогательного класса для определения настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="047cb-704">An instance of a helper class to define the custom attribute.</span></span></param>
        <summary><span data-ttu-id="047cb-705">Задает настраиваемый атрибут для этой сборки с помощью построителя настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="047cb-705">Set a custom attribute on this assembly using a custom attribute builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="047cb-706"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> нельзя использовать для задания декларативных атрибутов безопасности.</span><span class="sxs-lookup"><span data-stu-id="047cb-706"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="047cb-707">Используйте одну из перегрузок <xref:System.AppDomain.DefineDynamicAssembly%2A>, которые принимают необходимые, необязательные и отклоненные разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-707">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-708">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-708">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-709">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-709">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-710">В следующем образце кода показано использование `SetCustomAttribute` в <xref:System.Reflection.Emit.AssemblyBuilder>с помощью <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span><span class="sxs-lookup"><span data-stu-id="047cb-710">The following code sample illustrates the use of `SetCustomAttribute` within <xref:System.Reflection.Emit.AssemblyBuilder>, using a <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CPP/assemblybuilder_setcustomattribute1.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CS/assemblybuilder_setcustomattribute1.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/VB/assemblybuilder_setcustomattribute1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-711">Свойство <paramref name="con" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-711"><paramref name="con" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-712">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-712">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-713">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-713">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-714">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-714">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="assemblyBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="047cb-715">Конструктор пользовательского атрибута.</span><span class="sxs-lookup"><span data-stu-id="047cb-715">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="047cb-716">Большой двоичный объект байтов, предоставляющий атрибуты.</span><span class="sxs-lookup"><span data-stu-id="047cb-716">A byte blob representing the attributes.</span></span></param>
        <summary><span data-ttu-id="047cb-717">Задает настраиваемый атрибут для этой сборки с помощью большого двоичного объекта настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="047cb-717">Set a custom attribute on this assembly using a specified custom attribute blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-718">Дополнительные сведения о форматировании `binaryAttribute`см. в спецификации метаданных в документации по ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="047cb-718">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="047cb-719">Документация доступна в Интернете; см. страницы [ECMAC# и стандарты Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) на сайте MSDN и [Стандарт ECMA-335 — общеязыковая инфраструктура (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) на международном веб-сайте организации ECMA.</span><span class="sxs-lookup"><span data-stu-id="047cb-719">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 <span data-ttu-id="047cb-720">`RuntimeConstructorInfo` — это специальный тип, создаваемый системой.</span><span class="sxs-lookup"><span data-stu-id="047cb-720">`RuntimeConstructorInfo` is a special type generated by the system.</span></span> <span data-ttu-id="047cb-721">Он является производным от класса <xref:System.Reflection.ConstructorInfo>, а любой объект <xref:System.Reflection.ConstructorInfo>, полученный через отражение, на самом деле является экземпляром `RuntimeConstructorInfo`.</span><span class="sxs-lookup"><span data-stu-id="047cb-721">It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-722"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> нельзя использовать для задания декларативных атрибутов безопасности.</span><span class="sxs-lookup"><span data-stu-id="047cb-722"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="047cb-723">Используйте одну из перегрузок <xref:System.AppDomain.DefineDynamicAssembly%2A>, которые принимают необходимые, необязательные и отклоненные разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-723">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="047cb-724">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-724">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-725">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-725">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="047cb-726">В следующем образце кода показано использование `SetCustomAttribute` для присоединения настраиваемого атрибута к динамически создаваемой сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-726">The following code sample illustrates the use of `SetCustomAttribute` to attach a custom attribute to a dynamically generated assembly.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CPP/assemblybuilder_setcustomattribute2.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CS/assemblybuilder_setcustomattribute2.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/VB/assemblybuilder_setcustomattribute2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-727">Параметр <paramref name="con" /> или <paramref name="binaryAttribute" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-727"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-728">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-728">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="047cb-729">Параметр <paramref name="con" /> не является объектом <see langword="RuntimeConstructorInfo" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-729"><paramref name="con" /> is not a <see langword="RuntimeConstructorInfo" /> object.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-730">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-730">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-731">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-731">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetEntryPoint">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="047cb-732">Задает точку входа для данной динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-732">Sets the entry point for this dynamic assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod);" />
      <MemberSignature Language="F#" Value="member this.SetEntryPoint : System.Reflection.MethodInfo -&gt; unit" Usage="assemblyBuilder.SetEntryPoint entryMethod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="entryMethod"><span data-ttu-id="047cb-733">Ссылка на метод, представляющий точку входа для этой динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-733">A reference to the method that represents the entry point for this dynamic assembly.</span></span></param>
        <summary><span data-ttu-id="047cb-734">Задает точку входа для этой динамической сборки при условии, что выполняется сборка консольного приложения.</span><span class="sxs-lookup"><span data-stu-id="047cb-734">Sets the entry point for this dynamic assembly, assuming that a console application is being built.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-735">Свойство <paramref name="entryMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-735"><paramref name="entryMethod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="047cb-736"><paramref name="entryMethod" /> не содержится в данной сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-736"><paramref name="entryMethod" /> is not contained within this assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-737">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-737">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-738">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-738">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-739">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-739">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod, System.Reflection.Emit.PEFileKinds fileKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod, valuetype System.Reflection.Emit.PEFileKinds fileKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo, fileKind As PEFileKinds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod, System::Reflection::Emit::PEFileKinds fileKind);" />
      <MemberSignature Language="F#" Value="member this.SetEntryPoint : System.Reflection.MethodInfo * System.Reflection.Emit.PEFileKinds -&gt; unit" Usage="assemblyBuilder.SetEntryPoint (entryMethod, fileKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileKind" Type="System.Reflection.Emit.PEFileKinds" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="entryMethod"><span data-ttu-id="047cb-740">Ссылка на метод, представляющий точку входа для этой динамической сборки.</span><span class="sxs-lookup"><span data-stu-id="047cb-740">A reference to the method that represents the entry point for this dynamic assembly.</span></span></param>
        <param name="fileKind"><span data-ttu-id="047cb-741">Тип исполняемого файла сборки, построение которого выполняется.</span><span class="sxs-lookup"><span data-stu-id="047cb-741">The type of the assembly executable being built.</span></span></param>
        <summary><span data-ttu-id="047cb-742">Задает точку входа для этой сборки и определяет тип переносимого исполняемого файла (PE-файла), построение которого выполняется.</span><span class="sxs-lookup"><span data-stu-id="047cb-742">Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="047cb-743">Начиная с [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]этот член больше не требует <xref:System.Security.Permissions.ReflectionPermission> с флагом <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="047cb-743">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="047cb-744">(См. раздел [вопросы безопасности в порождении отражения](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Чтобы использовать эту функцию, приложение должно быть предназначено для [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="047cb-744">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="047cb-745">Свойство <paramref name="entryMethod" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-745"><paramref name="entryMethod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="047cb-746"><paramref name="entryMethod" /> не содержится в данной сборке.</span><span class="sxs-lookup"><span data-stu-id="047cb-746"><paramref name="entryMethod" /> is not contained within this assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="047cb-747">У вызывающего кода отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="047cb-747">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="047cb-748">При вызове поздней привязки с помощью таких механизмов, как <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-748">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="047cb-749">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="047cb-749">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="047cb-750">Зарезервировано для будущего использования.</span><span class="sxs-lookup"><span data-stu-id="047cb-750">Reserved for future use.</span></span> <span data-ttu-id="047cb-751">Должно быть равным IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="047cb-751">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="047cb-752">Переданный массив имен, которые необходимо сопоставить.</span><span class="sxs-lookup"><span data-stu-id="047cb-752">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="047cb-753">Количество сопоставляемых имен.</span><span class="sxs-lookup"><span data-stu-id="047cb-753">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="047cb-754">Контекст языкового стандарта для интерпретации имен.</span><span class="sxs-lookup"><span data-stu-id="047cb-754">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="047cb-755">Массив, зарезервированный вызывающим объектом, куда помещаются идентификаторы, соответствующие именам.</span><span class="sxs-lookup"><span data-stu-id="047cb-755">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="047cb-756">Сопоставляет набор имен соответствующему набору идентификаторов диспетчеризации.</span><span class="sxs-lookup"><span data-stu-id="047cb-756">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-757">Этот метод предназначен для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="047cb-757">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="047cb-758">Дополнительные сведения о `IDispatch::GetIDsOfNames`см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="047cb-758">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="047cb-759">Этот метод вызывается с поздним связыванием с помощью COM-интерфейса <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="047cb-759">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="047cb-760">Возвращаемые сведения о типе.</span><span class="sxs-lookup"><span data-stu-id="047cb-760">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="047cb-761">Идентификатор языкового стандарта для сведений о типе.</span><span class="sxs-lookup"><span data-stu-id="047cb-761">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="047cb-762">Получает указатель на объект с запрошенными сведениями о типе.</span><span class="sxs-lookup"><span data-stu-id="047cb-762">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="047cb-763">Возвращает сведения о типе объекта, которые затем могут использоваться для получения сведений о типе интерфейса.</span><span class="sxs-lookup"><span data-stu-id="047cb-763">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-764">Этот метод предназначен для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="047cb-764">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="047cb-765">Дополнительные сведения о `IDispatch::GetTypeInfo`см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="047cb-765">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="047cb-766">Этот метод вызывается с поздним связыванием с помощью COM-интерфейса <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="047cb-766">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="047cb-767">Указатель, по которому записывается число предоставляемых объектом интерфейсов, предназначенных для получения сведений о типе.</span><span class="sxs-lookup"><span data-stu-id="047cb-767">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="047cb-768">Возвращает количество предоставляемых объектом интерфейсов для доступа к сведениям о типе (0 или 1).</span><span class="sxs-lookup"><span data-stu-id="047cb-768">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-769">Этот метод предназначен для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="047cb-769">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="047cb-770">Дополнительные сведения о `IDispatch::GetTypeInfoCount`см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="047cb-770">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="047cb-771">Этот метод вызывается с поздним связыванием с помощью COM-интерфейса <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="047cb-771">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="047cb-772">Идентифицирует член.</span><span class="sxs-lookup"><span data-stu-id="047cb-772">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="047cb-773">Зарезервировано для будущего использования.</span><span class="sxs-lookup"><span data-stu-id="047cb-773">Reserved for future use.</span></span> <span data-ttu-id="047cb-774">Должно быть равным IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="047cb-774">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="047cb-775">Контекст языкового стандарта, в котором следует интерпретировать аргументы.</span><span class="sxs-lookup"><span data-stu-id="047cb-775">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="047cb-776">Флаги, описывающие контекст вызова.</span><span class="sxs-lookup"><span data-stu-id="047cb-776">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="047cb-777">Указатель на структуру, содержащую массив аргументов, массив DISPID для именованных аргументов, а также счетчики количества элементов в массивах.</span><span class="sxs-lookup"><span data-stu-id="047cb-777">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="047cb-778">Указатель, по которому будет сохранен результат.</span><span class="sxs-lookup"><span data-stu-id="047cb-778">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="047cb-779">Указатель на структуру, содержащую сведения об исключении.</span><span class="sxs-lookup"><span data-stu-id="047cb-779">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="047cb-780">Индекс первого аргумента, вызвавшего ошибку.</span><span class="sxs-lookup"><span data-stu-id="047cb-780">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="047cb-781">Предоставляет доступ к открытым свойствам и методам объекта.</span><span class="sxs-lookup"><span data-stu-id="047cb-781">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="047cb-782">Этот метод предназначен для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.</span><span class="sxs-lookup"><span data-stu-id="047cb-782">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="047cb-783">Дополнительные сведения о `IDispatch::Invoke`см. в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="047cb-783">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="047cb-784">Этот метод вызывается с поздним связыванием с помощью COM-интерфейса <c>IDispatch</c>.</span><span class="sxs-lookup"><span data-stu-id="047cb-784">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
