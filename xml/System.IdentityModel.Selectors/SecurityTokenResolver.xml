<Type Name="SecurityTokenResolver" FullName="System.IdentityModel.Selectors.SecurityTokenResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc5aab2079aa0e0760de7bf37b0f6da1d15dca4c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69283961" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenResolver abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>Представляет служебный класс, который может извлекать маркеры безопасности или ключи при наличии идентификатора ключа или предложения идентификатора ключа.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.IdentityModel.Selectors.SecurityTokenResolver> используется для извлечения ключа или маркера безопасности при наличии идентификатора ключа или предложения идентификатора ключа. Методы <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> извлекают маркер безопасности при наличии идентификатора ключа или предложения идентификатора ключа. Методы <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> извлекают ключ при наличии предложения идентификатора ключа. Если попытка извлечения окажется неудачной, методы с префиксом `Try` возвращают значение `false`, а методы без префикса `Try` создают исключение.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultSecurityTokenResolver">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultSecurityTokenResolver (tokens As ReadOnlyCollection(Of SecurityToken), canMatchLocalId As Boolean) As SecurityTokenResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Selectors::SecurityTokenResolver ^ CreateDefaultSecurityTokenResolver(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ tokens, bool canMatchLocalId);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultSecurityTokenResolver : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt; * bool -&gt; System.IdentityModel.Selectors.SecurityTokenResolver" Usage="System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver (tokens, canMatchLocalId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokens" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt;" />
        <Parameter Name="canMatchLocalId" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tokens">Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> типа <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, содержащая набор маркеров безопасности, для которых данный распознаватель маркеров безопасности может разрешить идентификаторы ключей и предложения идентификаторов ключей.</param>
        <param name="canMatchLocalId">Значение <see langword="true" /> для разрешения предложений идентификатора ключа <see langword="&lt;SecurityTokenReference&gt;" /> со ссылкой на ключ безопасности, находящийся в каком-либо другом месте в сообщении SOAP; в противном случае — значение <see langword="false" />.</param>
        <summary>Создает арбитр маркеров безопасности по умолчанию для указанных маркеров безопасности.</summary>
        <returns>Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, который разрешает идентификаторы ключей и предложения, соответствующие маркерам безопасности, указанным в параметре <paramref name="tokens" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для разрешения идентификаторов ключей и предложений идентификаторов ключей арбитр маркеров безопасности, возвращаемый этим методом, использует методы <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> и <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> для указанных маркеров безопасности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="securityTokenResolver.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="nodelist">Пользовательские элементы конфигурации.</param>
        <summary>При переопределении в производном классе загружает пользовательскую конфигурацию из XML-кода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию создает исключение <xref:System.NotImplementedException>. Этот метод можно переопределить для предоставления функциональных возможностей в производном классе.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveSecurityKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKey ^ ResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.ResolveSecurityKey : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityTokenResolver.ResolveSecurityKey keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, из которого получается ключ.</param>
        <summary>Получает ключ, на который имеется ссылка в указанном предложении идентификатора ключа.</summary>
        <returns>Ключ <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, на который имеется ссылка в указанном предложении идентификатора ключа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае невозможности разрешить ключ на основе предложения идентификатора ключа результаты методов <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> различны. Метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> возвращает значение `false`, а метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> вызывает исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyIdentifierClause" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Не удалось извлечь ключ для предложения идентификатора ключа, заданного в параметре <paramref name="keyIdentifierClause" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает маркер безопасности, соответствующий заданному идентификатору ключа.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifier As SecurityKeyIdentifier) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.ResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenResolver.ResolveToken keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, для которого создается токен безопасности.</param>
        <summary>Извлекает маркер безопасности, соответствующий одному из предложений идентификатора ключа, содержащихся в заданном идентификаторе ключа.</summary>
        <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанный идентификатор ключа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае невозможности разрешить маркер безопасности на основе идентификатора ключа результаты методов <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> различны. Метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> возвращает значение `false`, а метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> вызывает исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="keyIdentifier" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Не удается создать маркер безопасности для заданного идентификатора ключа.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.ResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenResolver.ResolveToken keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого создается токен безопасности.</param>
        <summary>Извлекает маркер безопасности, соответствующий заданному предложению идентификатора ключа.</summary>
        <returns>Объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанное предложение идентификатора ключа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае невозможности разрешить маркер безопасности на основе предложения идентификатора ключа результаты методов <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> различны. Метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> возвращает значение `false`, а метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> вызывает исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKey">
      <MemberSignature Language="C#" Value="public bool TryResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="member this.TryResolveSecurityKey : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveSecurityKey (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, из которого получается ключ.</param>
        <param name="key">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащий ключ, на который имеется ссылка в указанном предложении идентификатора ключа. Этот параметр передается неинициализированным.</param>
        <summary>Пытается извлечь ключ, на который имеется ссылка в указанном предложении идентификатора ключа.</summary>
        <returns>Значение <see langword="true" />, если можно извлечь ключ для указанного предложения идентификатора ключа; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае невозможности разрешить ключ на основе предложения идентификатора ключа результаты методов <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> различны. Метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> возвращает значение `false`, а метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> вызывает исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="keyIdentifierClause" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">Объект <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, из которого получается ключ.</param>
        <param name="key">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityKey" />, содержащий ключ, на который имеется ссылка в указанном предложении идентификатора ключа. Этот параметр передается неинициализированным.</param>
        <summary>Пытается извлечь ключ, на который имеется ссылка в указанном предложении идентификатора ключа.</summary>
        <returns>Значение <see langword="true" />, если можно извлечь ключ для указанного предложения идентификатора ключа; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore%2A> вызывается методами <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Пытается извлечь маркер безопасности, на который имеется ссылка в указанном объекте.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="member this.TryResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityTokenResolver.TryResolveToken (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, для которого создается токен безопасности.</param>
        <param name="token">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанный идентификатор ключа. Этот параметр передается неинициализированным.</param>
        <summary>Пытается извлечь маркер безопасности, соответствующий одному из предложений идентификатора ключа, содержащихся в заданном идентификаторе ключа.</summary>
        <returns>Значение <see langword="true" />, если можно извлечь маркер безопасности для указанного идентификатора ключа; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае невозможности разрешить маркер безопасности на основе идентификатора ключа результаты методов <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> различны. Метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> возвращает значение `false`, а метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> вызывает исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="keyIdentifier" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="member this.TryResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveToken (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого создается токен безопасности.</param>
        <param name="token">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанное предложение идентификатора ключа. Этот параметр передается неинициализированным.</param>
        <summary>Пытается извлечь маркер безопасности, соответствующий заданному предложению идентификатора ключа.</summary>
        <returns>Значение <see langword="true" />, если можно извлечь маркер безопасности для указанного предложения идентификатора ключа; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае невозможности разрешить маркер безопасности на основе предложения идентификатора ключа результаты методов <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> различны. Метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> возвращает значение `false`, а метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> вызывает исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="keyIdentifierClause" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Пытается извлечь ключ, на который имеется ссылка в указанном объекте.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, для которого создается токен безопасности.</param>
        <param name="token">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанный идентификатор ключа. Этот параметр передается неинициализированным.</param>
        <summary>При переопределении в производном классе пытается извлечь маркер безопасности, соответствующий по крайней мере одному из предложений идентификатора ключа, содержащихся в заданном идентификаторе ключа.</summary>
        <returns>Значение <see langword="true" />, если можно извлечь маркер безопасности для указанного идентификатора ключа; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> вызывается методами <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />, для которого создается токен безопасности.</param>
        <param name="token">Если этот метод возвращает значение, содержит объект <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, представляющий указанное предложение идентификатора ключа. Этот параметр передается неинициализированным.</param>
        <summary>При переопределении в производном классе пытается разрешить маркер безопасности, соответствующий заданному предложению идентификатора ключа.</summary>
        <returns>Значение <see langword="true" />, если можно извлечь маркер безопасности для указанного предложения идентификатора ключа; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> вызывается методами <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> и <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
