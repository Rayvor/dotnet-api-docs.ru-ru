<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4dc31196e934281669ede6b17126f8707740c3e9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69135854" /></Metadata><TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptTypeResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет абстрактный базовый класс для реализации распознавателя пользовательских типов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> Класс предоставляет службы для:  
  
-   Преобразование сведений об управляемом типе в строковое значение <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> с помощью метода.  
  
-   Обратное разрешение строкового значения в соответствующий управляемый тип с <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> помощью метода.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> Когда объект сериализует пользовательские типы, при необходимости можно включить в сериализованную нотация объектов JavaScript (JSON) значение, содержащее сведения о типе. В ходе десериализации может <xref:System.Web.Script.Serialization.JavaScriptSerializer> затем ссылаться на это строковое значение, чтобы определить соответствующий управляемый тип, в который будет преобразована строка JSON.  
  
 При предоставлении распознавателя <xref:System.Web.Script.Serialization.JavaScriptSerializer> типов экземпляру сериализатор будет <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> использовать методы и <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> для сопоставления между управляемым типом и строковым значением в процессе сериализации и десериализации соответственно.  
  
 Класс является базовым классом <xref:System.Web.Script.Serialization.SimpleTypeResolver> для класса, который предоставляет реализацию распознавателя типов, использующего имя с указанием сборки управляемого типа. <xref:System.Web.Script.Serialization.JavaScriptTypeResolver>  
  
   
  
## Examples  
 В следующем примере показано, как создать пользовательский сопоставитель типов.  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>При реализации сопоставителя типов строка, возвращаемая <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> методом, должна сопоставляться с тем же управляемым типом, когда строковое значение передается <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> в метод.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResolveType : string -&gt; Type" Usage="javaScriptTypeResolver.ResolveType id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Имя управляемого типа.</param>
        <summary>При переопределении в производном классе возвращает объект <see cref="T:System.Type" />, связанный с указанным именем типа.</summary>
        <returns>Объект <see cref="T:System.Type" />, связанный с указанным именем типа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сопоставитель типов связан с <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляром, то сериализатор <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> использует метод при переборе строки JSON для определения конкретного управляемого типа, в который должен быть преобразован тип JSON.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наличии строкового значения Сопоставитель типов должен возвращать <see cref="T:System.Type" /> объект, представляющий соответствующий управляемый тип.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ResolveTypeId : Type -&gt; string" Usage="javaScriptTypeResolver.ResolveTypeId type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Подлежащий распознаванию управляемый тип.</param>
        <summary>При переопределении в производном классе возвращает имя типа для указанного объекта <see cref="T:System.Type" />.</summary>
        <returns>Имя указанного управляемого типа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если метод возвращает значение `null` или <xref:System.String.Empty>, то Сопоставитель типов не поддерживает этот тип. <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
