<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba7beca8ec749ce6463983ff8c1cab8784dfba1d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69135911" /></Metadata><TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет абстрактный базовый класс для пользовательского преобразователя типов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс позволяет реализовать процессы сериализации и десериализации для управляемых типов, которые изначально не поддерживаются <xref:System.Web.Script.Serialization.JavaScriptSerializer> классом. <xref:System.Web.Script.Serialization.JavaScriptConverter> Можно также использовать <xref:System.Web.Script.Serialization.JavaScriptConverter> , если требуется больший контроль над процессом сериализации и десериализации.  
  
 <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> Свойство указывает типы, для которых пользовательский преобразователь предоставляет службы преобразователя.  
  
 Чтобы указать, что <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляр должен использовать пользовательский преобразователь, необходимо зарегистрировать этот преобразователь в экземпляре. Если вы используете <xref:System.Web.Script.Serialization.JavaScriptSerializer> класс напрямую, следует <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> использовать метод для регистрации преобразователя. В противном случае, если вы вызываете веб-методы из ECMAScript (JavaScript) и хотите использовать пользовательский преобразователь, его можно зарегистрировать, добавив `converters` элемент в файл конфигурации. Дополнительные сведения см. в разделе [Практическое руководство. Настройка служб ASP.NET в Microsoft AJAX](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 Когда экземпляр выполняет сериализацию типа, для которого зарегистрирован пользовательский преобразователь, сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> вызывает метод. <xref:System.Web.Script.Serialization.JavaScriptSerializer> Аналогично, когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляр десериализует строку нотация объектов JavaScript (JSON) и распознает, что тип в строке JSON имеет связанный с ним пользовательский преобразователь, сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> вызывает метод.  
  
   
  
## Examples  
 В следующем примере показано, как создать пользовательский преобразователь для <xref:System.Web.UI.WebControls.ListItemCollection> класса.  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>При наследовании из <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />необходимо переопределить следующие члены: 
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />предоставляет метод, который будет использоваться разработчиками <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Код преобразователя должен иметь возможность принимать значение, содержащееся в словаре, переданном ему сериализатором, а затем преобразовывать это значение в объект типа <paramref name="T" />. Вместо повторной реализации пользовательского кода преобразования для реализации этого <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> метода можно вызвать метод.</para></block>
    <altmember cref="T:System.Web.Configuration.Converter" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">Веб-службы в ASP.NET AJAX</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">Экземпляр <see cref="T:System.Collections.Generic.IDictionary`2" /> для данных свойства, сохраненных в виде пары имя/значение.</param>
        <param name="type">Тип результирующего объекта.</param>
        <param name="serializer">Экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</param>
        <summary>При переопределении в производном классе преобразовывает предоставленный словарь в объект указанного типа.</summary>
        <returns>Десериализованный объект.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Метод выполняет итерацию значений <paramref name="dictionary" /> в параметре для создания экземпляра типа <paramref name="type" /> , запрошенного в параметре. <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> Несмотря на то, что преобразователь может <paramref name="dictionary" />напрямую использовать значения из, рекомендуется <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> использовать вместо него метод реализации преобразователя. Преобразователь должен вызвать этот метод экземпляра, <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> доступного <paramref name="serializer" /> из параметра.  
  
Метод позволяет преобразователю передавать значение свойства из <paramref name="dictionary" />, а затем возвращать значение ожидаемого типа. <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> В некоторых случаях преобразователь для пользовательского типа может работать со свойствами, которые сами по себе имеют зарегистрированные преобразователи (например, тип A имеет свойство типа B, а тип B также связан с пользовательским преобразователем). В этом случае вызов <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> обеспечивает рекурсивный вызов пользовательских преобразователей для данных свойств, содержащихся в словаре. Когда преобразователь просматривает все записи в словаре, он возвращает сконструированный экземпляр целевого типа.  
  
Если преобразователь обнаруживает проблему во время десериализации, он должен вызвать <see cref="T:System.InvalidOperationException" /> ошибку, которая описывает проблему.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для сериализации.</param>
        <param name="serializer">Объект, отвечающий за сериализацию.</param>
        <summary>При переопределении в производном классе составляет словарь из пар имя/значение.</summary>
        <returns>Объект, содержащий пары ключ/значение, представляющие данные объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации типа, для которого регистрируется пользовательский преобразователь, <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляр вызывает <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Возвращаемое значение <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> должно <see cref="T:System.Collections.Generic.IDictionary`2" /> быть экземпляром с нулевой или более парой "имя-значение", представляющей данные объекта, которые должны быть преобразованы в JSON. Сам преобразователь не сериализует данные как JSON. Вместо этого преобразователь создает словарь пар "имя-значение", содержащих имена свойств (строковый ключ для словаря) и соответствующие значения свойств (значение объекта в словаре). Затем <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> экземпляр преобразует их в JSON.  
  
Если преобразователь обнаруживает исключение, он должен вызвать <see cref="T:System.InvalidOperationException" /> ошибку, которая описывает проблему.</para></block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе возвращает набор поддерживаемых типов.</summary>
        <value>Объект, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />, представляющий поддерживаемые преобразователем типы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> Свойство перечисляет типы, поддерживаемые преобразователем. Во время <xref:System.Web.Script.Serialization.JavaScriptSerializer> выполнения экземпляр использует это свойство для определения сопоставления управляемых типов с соответствующими пользовательскими преобразователями.  
  
   
  
## Examples  
 В следующем примере показано, как переопределить <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> свойство в производном классе. В этом примере преобразователь поддерживает только <xref:System.Web.UI.WebControls.ListItemCollection> тип. Этот пример кода является частью большого примера, <xref:System.Web.Script.Serialization.JavaScriptConverter> приведенного для класса.  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />должен всегда возвращать коллекцию, и коллекция должна содержать по крайней мере одну запись.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
