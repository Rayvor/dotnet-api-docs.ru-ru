<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8897b73ce8836425e828803bf5d7382d1bbf72f4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69051490" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see href="https://www.newtonsoft.com/json">Json.NET</see> следует использовать для сериализации и десериализации. Предоставляет возможности сериализации и десериализации для приложений с поддержкой AJAX.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> Класс внутренне используется на уровне асинхронного взаимодействия для сериализации и десериализации данных, передаваемых между браузером и веб-сервером. Доступ к этому экземпляру сериализатора невозможен. Однако этот класс предоставляет открытый API. Таким образом, можно использовать класс, если вы хотите работать с нотация объектов JavaScript (JSON) в управляемом коде.  
  
 Для сериализации объекта используйте <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> метод. Для десериализации строки JSON используйте <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> методы или. <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> Для сериализации и десериализации типов, которые изначально не поддерживаются <xref:System.Web.Script.Serialization.JavaScriptSerializer>, реализуйте пользовательские преобразователи с <xref:System.Web.Script.Serialization.JavaScriptConverter> помощью класса. Затем зарегистрируйте преобразователи с помощью <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> метода.  
  
## <a name="mapping-between-managed-types-and-json"></a>Сопоставление управляемых типов и JSON  
 В следующей таблице показано сопоставление между управляемыми типами и JSON для процесса сериализации. Эти управляемые типы изначально поддерживаются <xref:System.Web.Script.Serialization.JavaScriptSerializer>. При десериализации из строки JSON в управляемый тип применяется то же сопоставление. Однако десериализация может быть асимметричной. не все сериализуемые управляемые типы можно десериализовать из JSON.  
  
> [!NOTE]
>  Многомерный массив сериализуется как одномерный массив, и его следует использовать в качестве плоского массива.  
  
|Управляемый тип|Эквивалент JSON|  
|------------------|---------------------|  
|<xref:System.String>(Только кодировка UTF-8).|String|  
|<xref:System.Char>|String|  
|Single NULL char (например, \ 0)|Null|  
|<xref:System.Boolean>|Логическое. Представлен в формате JSON `true` как или`false`|  
|`null`(`null` ссылки на объекты <xref:System.Nullable> и типы значений).|Строковое значение null|  
|<xref:System.DBNull>|Строковое значение null|  
|Примитивные числовые (или числовые) типы <xref:System.Byte>: <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, и <xref:System.Single>. Используется строковое представление инвариантного языка и региональных параметров.|Число|  
|<xref:System.DateTime>|Объект Date, представленный в формате JSON\\как "/дате (число тактов)\\/". Число тактов представляет собой положительное или отрицательное значение типа Long, указывающее количество тактов (в миллисекундах), истекших с полуночи в 1 января 1970 UTC.<br /><br /> Максимальная поддерживаемая Дата — <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 PM), а минимальная поддерживаемая Дата — <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 AM).|  
|Перечисления целочисленного типа|Целочисленный эквивалент значения перечисления|  
|Типы, <xref:System.Collections.IEnumerable> реализующие <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> или, которые также являются реализациями <xref:System.Collections.IDictionary> или <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>. Сюда относятся такие типы, <xref:System.Array>как <xref:System.Collections.ArrayList>, и <xref:System.Collections.Generic.List%601>.|Массив, использующий синтаксис массива JSON|  
|Типы, <xref:System.Collections.IDictionary> реализующие <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>или. Сюда относятся такие типы, <xref:System.Collections.Generic.Dictionary%602> как <xref:System.Collections.Hashtable>и.|Объект JavaScript, использующий синтаксис словаря JSON|  
|Настраиваемые конкретные (не абстрактные) типы, имеющие открытые свойства экземпляра, имеющие методы доступа get или открытые поля экземпляра.<br /><br /> Обратите внимание, что общие свойства только для записи, атрибуты открытого свойства или открытого <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>поля, помеченные атрибутом, и открытые индексированные свойства в этих типах игнорируются.|Объект JavaScript, использующий синтаксис словаря JSON. Для обеспечения правильной десериализации включается специальное свойство метаданных с именем "__type". Убедитесь, что открытые свойства экземпляра имеют методы доступа get и Set, чтобы обеспечить правильную десериализацию.|  
|<xref:System.Guid>|Строковое представление GUID|  
|<xref:System.Uri>|Строковое представление возвращаемого значения<xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 В первом примере показана простая иллюстрация сериализации и десериализации объектов данных. Для этого требуется класс с именем Person, показанный ниже.  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 В следующем примере показан более сложный и завершенный проект, использующий <xref:System.Web.Script.Serialization.JavaScriptSerializer> класс для сохранения и восстановления состояния объекта с помощью сериализации JSON. Этот код использует пользовательский преобразователь, предоставленный для <xref:System.Web.Script.Serialization.JavaScriptConverter> класса.  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">Использование веб-служб в ASP.NET AJAX</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0">Вызов веб-служб из клиентского скрипта в ASP.NET AJAX</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />, для которого не предусмотрен распознаватель типов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Экземпляр <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса без сопоставителя типов не включает в сериализованную строку JSON свойства метаданных типа (с именем "__type"). Свойство метаданных типа используется <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> методами и <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> для определения соответствующего управляемого типа, в который будет преобразована строка JSON. Дополнительные сведения о типах арбитров конфликтов см. в <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> разделе класс.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">Объект пользовательского распознавателя типов.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />, для которого предусмотрен пользовательский распознаватель типов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сериализации объекта <xref:System.Web.Script.Serialization.JavaScriptSerializer> класс `resolver` использует параметр, чтобы определить подходящее значение для включения в сериализованную строку JSON для свойства метаданных типа ("__type"). Аналогично, когда <xref:System.Web.Script.Serialization.JavaScriptSerializer> класс десериализует строку JSON, он разрешает значение свойства метаданных типа в соответствующий управляемый тип с помощью экземпляра сопоставителя.  
  
 Можно задать `resolver` для `null`параметра значение, что эквивалентно вызову <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> конструктора.  
  
 Экземпляр <xref:System.Web.Script.Serialization.JavaScriptSerializer> , используемый уровнем асинхронного взаимодействия для вызова веб-служб из клиентского скрипта, использует специальный Сопоставитель типов. Этот Сопоставитель типов позволяет ограничивать типы, которые могут быть десериализованы в определенные в сигнатуре метода веб-службы, или на те, к которым <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> применен. Этот встроенный Сопоставитель типов нельзя изменить программным способом.  
  
> [!IMPORTANT]
>  Использование экземпляра этого объекта, инициализированного с помощью пользовательского сопоставителя типов, может представлять угрозу безопасности. Используйте этот объект только с надежными данными. Дополнительные сведения: [Data Validation](https://www.owasp.org/index.php/Data_Validation) (Проверка данных).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">Использование веб-служб в ASP.NET AJAX</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj">Преобразуемый объект.</param>
        <param name="targetType">Тип, в который требуется преобразовать объект.</param>
        <summary>Преобразует указанный объект в заданный тип.</summary>
        <returns>Сериализованная строка формата JSON.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда экземпляр выполняет сериализацию типа, для которого зарегистрирован пользовательский преобразователь, сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> вызывает метод для получения словаря пар "имя-значение", которые будут преобразованы в строку в формате JSON. <xref:System.Web.Script.Serialization.JavaScriptSerializer>  
  
 Метод также может создавать исключения, если граф объектов является слишком сложным или если зарегистрированные <xref:System.Web.Script.Serialization.JavaScriptConverter> экземпляры вызывают рекурсию преобразователя. <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Результирующая строка формата JSON превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- или - 
 Параметр <paramref name="obj" /> содержит циклическую ссылку. Циклическая ссылка возникает, если дочерний объект ссылается на родительский объект, а родительский объект ссылается на дочерний.</exception>
        <exception cref="T:System.ArgumentException">Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип, которому будет приведен параметр <paramref name="obj" />.</typeparam>
        <param name="obj">Преобразуемый объект.</param>
        <summary>Приводит заданный объект к указанному типу.</summary>
        <returns>Объект, приведенный к целевому типу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод пытается преобразовать экземпляр объекта, `obj` представленный экземпляром типа `T`. <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> Во время этого преобразования нет гарантии, что равенство ссылок на объекты сохраняется. Таким образом, нельзя предположить, `obj` что `T` и ссылаться на один и тот же объект.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>предназначен для использования при реализации класса, производного от <xref:System.Web.Script.Serialization.JavaScriptConverter>. Код преобразователя должен иметь возможность получить значение в словаре, переданном ему сериализатором, а затем преобразовать это значение в экземпляр типа `T`. Вместо повторной реализации пользовательского кода преобразования для выполнения этой задачи можно вызвать <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> метод из кода преобразователя.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> метод для <xref:System.Web.UI.WebControls.ListItem> получения объекта из значения словаря, переданного преобразователю. Этот пример кода является частью большого примера, <xref:System.Web.Script.Serialization.JavaScriptSerializer> приведенного для класса.  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="obj" /> (или вложенный член параметра <paramref name="obj" />) содержит свойство __type, которым обозначается пользовательский тип, однако связанному с сериализатором распознавателю типов не удалось найти соответствующий управляемый тип.  
  
- или - 
 Параметр <paramref name="obj" /> (или вложенный член параметра <paramref name="obj" />) содержит свойство __type, которым обозначается пользовательский тип, однако результат десериализации соответствующей строки формата JSON не может быть назначен ожидаемому целевому типу.  
  
- или - 
 Параметр <paramref name="obj" /> (или вложенный член параметра <paramref name="obj" />) содержит свойство __type, которым обозначается объект <see cref="T:System.Object" /> или тип, не поддерживающий создание экземпляров (например, абстрактный тип или интерфейс).  
  
- или - 
Предпринята попытка приведения параметра <paramref name="obj" /> к управляемому типу, относящемуся к классу массивов, использование которого как целевого типа десериализации не поддерживается.  
  
-или- 
Не удается привести параметр <paramref name="obj" /> к типу <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> является типом словаря и при этом обнаружено значение ключа не строчного типа.  
  
-или- 
 Параметр <paramref name="obj" /> содержит определения членов, которые недоступны для типа <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input">Десериализуемая строка формата JSON.</param>
        <param name="targetType">Тип результирующего объекта.</param>
        <summary>Преобразует строку формата JSON в объект заданного типа.</summary>
        <returns>Десериализованный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод десериализации не пытается привести корень графа объекта к конкретному типу, как <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> это делает метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Длина параметра <paramref name="input" /> превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- или - 
Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.  
  
- или - 
 Параметр <paramref name="input" /> содержит неизвестную последовательность символов.  
  
- или - 
 Параметр <paramref name="input" /> является типом словаря и при этом обнаружено значение ключа не строчного типа.  
  
-или- 
 Параметр <paramref name="input" /> содержит определения членов, которые недоступны для целевого типа.</exception>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако распознавателю типов, связанному в данный момент с сериализатором, не удалось найти соответствующий управляемый тип.  
  
- или - 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако результат десериализации соответствующей строки формата JSON не удалось присвоить ожидаемому целевому типу.  
  
- или - 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается объект <see cref="T:System.Object" /> или тип, не поддерживающий создание экземпляров (например, абстрактный тип или интерфейс).  
  
- или - 
Предпринята попытка привести массив JSON к управляемому типу, относящемуся к классу массивов, использование которого в качестве целевого типа десериализации JSON не поддерживается.  
  
- или - 
Не удается привести параметр <paramref name="input" /> к целевому типу.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип результирующего объекта.</typeparam>
        <param name="input">Строка формата JSON, подлежащая десериализации.</param>
        <summary>Преобразует указанную строку формата JSON в объект типа <paramref name="T" />.</summary>
        <returns>Десериализованный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод эквивалентен первому <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> использованию метода для получения графа объекта и последующей попытке привести результат к типу `T`. <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>  
  
 Во время десериализации указывается текущий Сопоставитель типов сериализатора, который определяет управляемый тип, используемый при преобразовании элементов, вложенных в массивы и типы словаря. В результате процесс десериализации выполняет итерацию всех вложенных элементов `input`. Дополнительные сведения о типах арбитров конфликтов см. в <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> разделе класс.  
  
   
  
## Examples  
В следующем примере показана простая иллюстрация сериализации и десериализации объектов данных.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Для этого требуется класс с `Person`именем, который показан в следующем примере. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Длина параметра <paramref name="input" /> превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- или - 
Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.  
  
-или- 
 Параметр <paramref name="input" /> содержит неизвестную последовательность символов.  
  
- или - 
 Параметр <paramref name="input" /> является типом словаря и при этом обнаружено значение ключа не строчного типа.  
  
- или - 
 Параметр <paramref name="input" /> содержит определения членов, которые недоступны для типа <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="input" /> содержит свойство __type, которым обозначается пользовательский тип, однако связанному с сериализатором распознавателю типов не удалось найти соответствующий управляемый тип.  
  
- или - 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако результат десериализации соответствующей строки формата JSON не удалось присвоить ожидаемому целевому типу.  
  
- или - 
 Параметр <paramref name="input" /> содержит свойство __type, которым обозначается объект <see cref="T:System.Object" /> или тип, не поддерживающий создание экземпляров (например, абстрактные типы или интерфейс).  
  
- или - 
Предпринята попытка привести массив JSON к управляемому типу, относящемуся к классу массивов, использование которого в качестве целевого типа десериализации JSON не поддерживается.  
  
-или- 
Не удается привести параметр <paramref name="input" /> к типу <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Строка формата JSON, подлежащая десериализации.</param>
        <summary>Преобразует указанную строку формата JSON в граф объекта.</summary>
        <returns>Десериализованный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод десериализации не пытается привести корень графа объекта к конкретному типу, как в случае с <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> методом.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="input" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Длина параметра <paramref name="input" /> превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- или - 
Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.  
  
-или- 
 Параметр <paramref name="input" /> содержит неизвестную последовательность символов.  
  
- или - 
 Параметр <paramref name="input" /> является типом словаря и при этом обнаружено значение ключа не строчного типа.  
  
- или - 
 Параметр <paramref name="input" /> содержит определения членов, которые недоступны для целевого типа.</exception>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако распознавателю типов, связанному в данный момент с сериализатором, не удалось найти соответствующий управляемый тип.  
  
- или - 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается пользовательский тип, однако результат десериализации соответствующей строки формата JSON не удалось присвоить ожидаемому целевому типу.  
  
-или- 
 Параметр <paramref name="input" /> содержит свойство "__type", которым обозначается объект <see cref="T:System.Object" /> или тип, не поддерживающий создание экземпляров (например, абстрактный тип или интерфейс).  
  
- или - 
Предпринята попытка привести массив JSON к управляемому типу, относящемуся к классу массивов, использование которого в качестве целевого типа десериализации JSON не поддерживается.  
  
- или - 
Не удается привести параметр <paramref name="input" /> к целевому типу.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает максимальную длину строки формата JSON, которую может принять класс <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</summary>
        <value>Максимальная длина строки формата JSON. Значение по умолчанию — 2097152 символов, что эквивалентно 4 МБ строковых данных в Юникоде.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> свойства применяется только при явном создании экземпляра <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса. `jsonSerialization` Используйте элемент файла конфигурации, чтобы задать максимальную длину для внутреннего экземпляра сериализатора, используемого уровнем асинхронного взаимодействия. Дополнительные сведения об элементах конфигурации для сериализации см. в [разделе как Настройка служб ASP.NET в Microsoft AJAX](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Задаваемое значение свойства меньше единицы.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает ограничение на количество обрабатываемых уровней объекта.</summary>
        <value>Количество уровней объекта. Значение по умолчанию — 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство относится к числу уровней в иерархии объектов, которые <xref:System.Web.Script.Serialization.JavaScriptSerializer> будут обрабатываться в следующих случаях: <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>  
  
-   <xref:System.Web.Script.Serialization.JavaScriptSerializer> Когда класс десериализует строку JSON.  
  
-   <xref:System.Web.Script.Serialization.JavaScriptSerializer> Когда класс пройдет граф объекта во время сериализации.  
  
 Значение <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> применяется только при явном создании экземпляра <xref:System.Web.Script.Serialization.JavaScriptSerializer> класса. `jsonSerialization` Используйте элемент файла конфигурации, чтобы задать количество уровней объекта для обработки внутреннего экземпляра сериализатора, используемого на уровне асинхронного взаимодействия. Дополнительные сведения об элементах конфигурации для сериализации см. в [разделе как Настройка служб ASP.NET в Microsoft AJAX](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Задаваемое значение свойства меньше единицы.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">Массив, в котором содержатся пользовательские преобразователи для регистрации.</param>
        <summary>Регистрирует пользовательский преобразователь в экземпляре <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно зарегистрировать один или несколько пользовательских преобразователей с <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляром с <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> помощью метода. При регистрации <xref:System.Web.Script.Serialization.JavaScriptSerializer> пользовательских преобразователей использует эти преобразователи для сериализации управляемых типов и десериализации строк JSON в управляемые типы.  
  
 С одним <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляром можно зарегистрировать несколько преобразователей, и эти преобразователи могут указывать на поддержку одного и того же типа. В результате последний преобразователь, зарегистрированный для конкретного типа, — это тот, который будет использоваться <xref:System.Web.Script.Serialization.JavaScriptSerializer> для сериализации типа.  
  
 Дополнительные сведения о пользовательских преобразователях см. в <xref:System.Web.Script.Serialization.JavaScriptConverter> разделе класс.  
  
   
  
## Examples  
 В следующем примере показано, как зарегистрировать пользовательский преобразователь с <xref:System.Web.Script.Serialization.JavaScriptSerializer> экземпляром. Этот пример кода является частью большого примера, <xref:System.Web.Script.Serialization.JavaScriptSerializer> приведенного для класса.  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="converters" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует объект в строку формата JSON.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для сериализации.</param>
        <summary>Преобразует объект в строку формата JSON.</summary>
        <returns>Сериализованная строка формата JSON.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда экземпляр выполняет сериализацию типа, для которого зарегистрирован пользовательский преобразователь, сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> вызывает метод для получения словаря пар "имя-значение", которые будут преобразованы в строку JSON. <xref:System.Web.Script.Serialization.JavaScriptSerializer>  
  
 Метод также может создавать исключения, если граф объектов является слишком сложным или если зарегистрированные <xref:System.Web.Script.Serialization.JavaScriptConverter> экземпляры вызывают рекурсию преобразователя. <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>  
  
   
  
## Examples  
В следующем примере показана простая иллюстрация сериализации и десериализации объектов данных.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Для этого требуется класс с `Person`именем, который показан в следующем примере. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Результирующая строка формата JSON превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
-или- 
 Параметр <paramref name="obj" /> содержит циклическую ссылку. Циклическая ссылка возникает, если дочерний объект ссылается на родительский объект, а родительский объект ссылается на дочерний.</exception>
        <exception cref="T:System.ArgumentException">Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для сериализации.</param>
        <param name="output">Объект <see cref="T:System.Text.StringBuilder" />, используемый для записи строки формата JSON.</param>
        <summary>Сериализует объект и записывает результирующую строку формата JSON в указанный объект <see cref="T:System.Text.StringBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда экземпляр выполняет сериализацию типа, для которого зарегистрирован пользовательский преобразователь, сериализатор <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> вызывает метод для получения словаря пар "имя-значение", которые будут преобразованы в строку JSON. <xref:System.Web.Script.Serialization.JavaScriptSerializer>  
  
 Метод также может создавать исключения, если граф объектов является слишком сложным или если зарегистрированные <xref:System.Web.Script.Serialization.JavaScriptConverter> экземпляры вызывают рекурсию преобразователя. <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Результирующая строка формата JSON превышает значение свойства <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- или - 
 Параметр <paramref name="obj" /> содержит циклическую ссылку. Циклическая ссылка возникает, если дочерний объект ссылается на родительский объект, а родительский объект ссылается на дочерний.</exception>
        <exception cref="T:System.ArgumentException">Превышено ограничение на рекурсию, заданное свойством <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="output" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
